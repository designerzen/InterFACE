{"mappings":"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sN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gBAAAA,UAAAA;YAAAA;YAAAA;gBAIAvN,QAAAA;gBACAsN,MAAAA;gBACAC,aAAAA;gB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;IAAK;IAAI;IAAK;IAAI;IAAK;IAAI;IAAI;IAAK;IAAI;IACtE;IAAK;IAAI;IAAI;IAAK;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAI;IAAI;IAAK;IACxE;IAAI;IAAK;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IACrE;IAAK;IAAK;IAAK;IAAK;IAAI;IAAG;IAAG;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IACzE;IAAK;IAAK;IAAK;IAAI;IAAI;IAAG;IAAI;IAAK;IAAI;IAAI;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IACvE;IAAI;IAAI;IAAK;IAAI;IAAI;IAAK;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IACzE;IAAK;IAAI;IAAI;IAAK;IAAI;IAAI;IAAK;IAAI;IAAI;IAAK;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IACvE;IAAI;IAAI;IAAK;IAAI;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IACxE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAG;IACvE;IAAK;IAAI;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAG;IAAK;IAAK;IAAK;IAAK;IACvE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IACzE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAI;IAAK;IAAK;IAAK;IACxE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IACxE;IAAK;IAAK;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAK;IACvE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAG;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IACxE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IACrE;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAI;IAAI;IACrE;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAI;IAAI;IAAI;IAAK;IAAG;IAAK;IAAI;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IACxE;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IACvE;IAAI;IAAI;IAAK;IAAK;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACvE;IAAK;IAAI;IAAI;IAAI;IAAI;IAAG;IAAI;IAAG;IAAK;IAAK;IAAI;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IACxE;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAI;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IACpE;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAI;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAI;IAAK;IAAI;IAAK;IAAG;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAI;IAAI;IAAK;IACxE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACrE;IAAK;IAAK;IAAK;IAAI;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IACxE;IAAI;IAAI;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAI;IAAI;IAAG;IAAK;IACrE;IAAK;IAAK;IAAK;IAAI;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IACvE;IAAI;IAAK;IAAK;IAAI;IAAI;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IACxE;IAAK;IAAK;IAAI;IAAK;IAAI;IAAK;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAI;IAAI;IAAI;IAAI;IACvE;IAAK;IAAK;IAAI;IAAK;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IACxE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IACxE;IAAI;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IACzE;IAAI;IAAI;IAAK;IAAK;IAAI;IAAI;IAAI;IAAI;IAAK;IAAI;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IACvE;IAAK;IAAI;IAAK;IAAK;IAAG;IAAK;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACrE;IAAK;IAAK;IAAI;IAAI;IAAI;IAAG;IAAK;IAAI;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAI;IAAI;IACrE;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IACtE;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IACvE;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IACrE;IAAK;IAAG;IAAK;IAAI;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAC1E;IAAK;IAAK;IAAK;IAAK;IAAG;IAAK;IAAI;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAI;IAAI;IAAI;IACvE;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACvE;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACzE;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IACvE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IACxE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IACvE;IAAK;IAAK;IAAI;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAI;IAAI;IAC1E;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAI;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IACrE;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IACpE;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAI;IAAI;IAAK;IACtE;IAAK;IAAK;IAAI;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAI;IAAK;IAAK;IAAK;IAAI;IAAK;IAAG;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAG;IAAI;IACvE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IACrE;IAAK;IAAI;IAAK;IAAG;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACpE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAK;IACxE;IAAK;IAAK;IAAK;IAAI;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACrE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAG;IAAK;IAAG;IAAK;IAAK;IAAK;IAAK;IAAK;IACvE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAI;IAAG;IAAK;IAAK;IAAK;IAAK;IACxE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IACtE;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-a1e0f4cfbfc34509.js","source/interface.js","source/state.js","source/audio/speech.js","source/audio/recorder.js","node_modules/@parcel/runtime-js/lib/runtime-b83c0f01ebc55115.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","source/audio/video.js","source/audio/audio.js","node_modules/audioworklet-polyfill/dist/audioworklet-polyfill.js","node_modules/audioworklet-polyfill/src/index.js","node_modules/audioworklet-polyfill/src/realm.js","source/maths/maths.js","source/audio/rack.js","source/audio/effects/reverb.js","source/audio/effects/effect.js","source/audio/effects/delay.js","source/audio/effects/dub.js","source/audio/effects/compressor.js","source/audio/effects/distortion.js","source/audio/effects/amplitude.js","source/audio/notes.js","node_modules/@parcel/runtime-js/lib/runtime-27dcc348c6492adc.js","node_modules/@parcel/runtime-js/lib/runtime-13168a06ed16da65.js","node_modules/@parcel/runtime-js/lib/runtime-d90f869b67e0e0c6.js","source/audio/synthesizers.js","source/audio/synthesizers/kick.js","source/audio/synthesizers/clack.js","source/audio/synthesizers/hihat.js","source/audio/synthesizers/cowbell.js","source/audio/synthesizers/snare.js","source/audio/midi/midi-out.js","node_modules/webmidi/dist/cjs/webmidi.cjs.min.js","node_modules/webmidi/node_modules/djipevents/src/djipevents.js","node_modules/webmidi/src/Enumerations.js","node_modules/webmidi/src/Note.js","node_modules/webmidi/src/Utilities.js","node_modules/webmidi/src/OutputChannel.js","node_modules/webmidi/src/Output.js","node_modules/webmidi/src/Forwarder.js","node_modules/webmidi/src/InputChannel.js","node_modules/webmidi/src/Message.js","node_modules/webmidi/src/Input.js","node_modules/webmidi/src/WebMidi.js","source/audio/waveform.js","source/audio/midi/midi-file.js","source/audio/midi/midi-track.js","source/audio/midi/midi-command.js","source/audio/midi/midi-commands.js","node_modules/@parcel/runtime-js/lib/runtime-73e5cd96cdedbedc.js","source/audio/midi/midi-file-create.js","node_modules/midi-writer-js/build/index.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/tonal-midi/index.js","node_modules/note-parser/index.js","source/audio/instruments/instrument.sample.js","source/audio/instruments/instrument.js","source/hardware/gamepad.js","source/timing/timing.js","source/timing/timing.events.js","node_modules/@parcel/runtime-js/lib/runtime-b3a6f8eaa0554f98.js","source/timing/patterns.js","source/timing/drum-patterns.js","source/dom/ui.js","source/dom/full-screen.js","source/dom/toggle.js","source/dom/select.js","source/dom/player-selection.js","source/dom/dialog.js","node_modules/dialog-polyfill/dist/dialog-polyfill.esm.js","source/dom/text.js","source/dom/photographs.js","source/visual/canvas.js","source/visual/2d.js","source/models/face-mesh-constants.js","source/dom/audio-element.js","source/dom/drop-zone.js","source/inactivity.js","source/visual/2d.keyboard.js","node_modules/three/build/three.module.js","source/dom/mouse-pressure.js","source/visual/image.js","source/visual/spectrograms.js","source/visual/quantise.js","source/hardware/camera.js","source/person.js","node_modules/@parcel/runtime-js/lib/runtime-02065c2e9dad5327.js","node_modules/@parcel/runtime-js/lib/runtime-3bb1e6b49a96d049.js","source/audio/instruments/instrument.wam2.js","source/audio/instruments/instrument.midi.js","source/parameter-recorder.js","source/display/display-loader.js","node_modules/@parcel/runtime-js/lib/runtime-ce9d679a0231f76a.js","node_modules/@parcel/runtime-js/lib/runtime-56c73415b7ea3f3c.js","node_modules/@parcel/runtime-js/lib/runtime-ed1fb9a2185eafd9.js","node_modules/@parcel/runtime-js/lib/runtime-b4486b86e5302938.js","source/models/load-model.js","node_modules/@parcel/runtime-js/lib/runtime-f8756fa36d6a150f.js","node_modules/@parcel/runtime-js/lib/runtime-88b44fc4f919eca1.js","node_modules/@parcel/runtime-js/lib/runtime-6a9e6aba25e1353e.js","node_modules/@parcel/runtime-js/lib/runtime-2e5886e7c7f66765.js","node_modules/@parcel/runtime-js/lib/runtime-1cd75cf6710e2f53.js","node_modules/@parcel/runtime-js/lib/runtime-b364112846032cee.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"34c32e8a6185bf9f\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","// import {midiLikeEvents} from './timing/rhythm'\r\nimport { loadState, getState, setState, refreshState } from './state'\r\n\r\n// TODO :lazy load\r\nimport { say, hasSpeech} from './audio/speech'\r\nimport { record } from './audio/recorder'\r\nimport { canvasVideoRecorder, createVideo, encodeVideo } from './audio/video'\r\n\r\nimport { \r\n\tregisterAudioWorklets,\r\n\tgetRecordableOutputNode,\r\n\tactive, playing, \r\n\tsetupAudio,\taudioContext, setReverb,\r\n\tupdateByteFrequencyData, updateByteTimeDomainData,\r\n\tbufferLength, dataArray, \r\n\tgetVolume, setVolume } from './audio/audio'\r\n\r\nimport { getRandomInstrument, createInstruments, loadInstrumentDataPack, getFolderNameForInstrument } from './audio/instruments'\r\nimport { createDrumkit } from './audio/synthesizers'\r\nimport { setupMIDI } from './audio/midi/midi-out'\r\nimport { createWaveform } from './audio/waveform'\r\n// FIXME: \r\nimport { loadMIDIFile, loadMIDIFileThroughClient } from './audio/midi/midi-file'\r\n// import { loadMIDIFile, loadMIDIFileThroughClient } from './audio/midi/midi-file-load'\r\nimport { saveMIDIFile, createMIDIFileFromTrack} from './audio/midi/midi-file-create'\r\nimport { COMMAND_NOTE_ON, COMMAND_NOTE_OFF } from './audio/midi/midi-commands'\r\n\r\n// Different ways of playing sound!\r\nimport SampleInstrument from './audio/instruments/instrument.sample'\r\n// import MIDIInstrument from './audio/instruments/instrument.midi'\r\n// import OscillatorInstrument from './audio/instruments/instrument.oscillator'\r\n\r\n// More input mechanisms\r\nimport GamePad from './hardware/gamepad'\r\n\r\n// import {midiLikeEvents} from './timing/rhythm'\r\nimport { \r\n\ttapTempo,\r\n\tgetElapsed,\r\n\tgetBars, setBars, getBar, \r\n\tstartTimer, stopTimer, now, \r\n\tgetBarProgress,\r\n\tconvertBPMToPeriod,\r\n\tgetTimePerBar,\r\n\tsetTimeBetween, getBPM\r\n} from './timing/timing.js'\r\n\r\nimport { playNextPart, kitSequence } from './timing/patterns'\r\n\t\r\nimport {\r\n\tcontrolPanel,\r\n\tupdateTempo,\r\n\tvideo, isVideoVisible, toggleVideoVisiblity,  \r\n\tsetupCameraForm, setupInterface,\r\n\ttoggleVisibility,\r\n\tfocusApp\r\n} from './dom/ui'\r\n\r\nimport { showPlayerSelector } from './dom/player-selection'\r\n\r\nimport setupDialogs from './dom/dialog'\r\nimport { connectSelect, connectReverbControls, connectReverbSelector } from './dom/select'\r\nimport { setToggle, setPressureToggle } from './dom/toggle'\r\nimport { setButton, setPressureButton, setupMIDIButton } from './dom/button'\r\nimport { addToolTips, setToast } from './dom/tooltips'\r\nimport { setFeedback } from './dom/text'\r\nimport { appendPhotographElement } from './dom/photographs'\r\nimport { appendAudioElement} from './dom/audio-element'\r\nimport { connectDropZone } from './dom/drop-zone'\r\nimport interact from './inactivity'\r\n\r\nimport { \r\n\tdrawElement,\r\n\tupdateCanvasSize, copyCanvasToClipboard, \r\n\toverdraw, clear, canvas, canvasContext\r\n} from './visual/canvas'\r\n\r\nimport MusicalKeyboard from './visual/2d.keyboard'\r\n\r\nimport { drawMousePressure } from './dom/mouse-pressure'\r\nimport { setupImage } from './visual/image'\r\nimport { setNodeCount } from './visual/2d'\r\nimport { drawWaves, drawBars } from './visual/spectrograms'\r\nimport { drawQuantise, Quanitiser } from './visual/quantise'\r\n// import Stave from './visual/2d.stave'\r\n\r\nimport { getLocationSettings, getShareLink, addToHistory } from './location-handler'\r\n\r\nimport { findBestCamera, loadCamera } from './hardware/camera'\r\nimport { watchMouseCoords  } from './hardware/mouse'\r\n\r\nimport Person, { \r\n\tEVENT_INSTRUMENT_CHANGED, EVENT_INSTRUMENT_LOADING,\r\n\tSTATE_INSTRUMENT_SILENT, STATE_INSTRUMENT_ATTACK, STATE_INSTRUMENT_SUSTAIN,\r\n\tSTATE_INSTRUMENT_PITCH_BEND, STATE_INSTRUMENT_DECAY, STATE_INSTRUMENT_RELEASE\r\n } from './person'\r\n\r\nimport { NAMES, EYE_COLOURS, DEFAULT_TENSORFLOW_OPTIONS } from './settings'\r\n\r\nimport { TAU } from \"./maths/maths\"\r\n\r\nimport { convertOptionToObject } from './utils'\r\n\r\nimport { \r\n\tloadDisplay,\r\n\tDISPLAY_CANVAS_2D,DISPLAY_MEDIA_VISION_2D, DISPLAY_LOOKING_GLASS_3D, DISPLAY_WEB_GL_3D, DISPLAY_COMPOSITE\r\n } from './display/display-loader'\r\n\r\nimport { loadMLModel } from './models/load-model'\r\n\r\n// Lazily loaded in load() method\r\n// import { getInstruction, getHelp } from './models/instructions'\r\n// import { setupReporting, track, trackError, trackExit } from './reporting'\r\n\r\n\r\nlet instance = null\r\nclass PhotoSYNTH{\r\n\tconstructor( publicMethods )\r\n\t{\r\n\t\tconst keys = Object.keys(publicMethods)\r\n\t\tkeys.forEach( key => {\r\n\t\t\tthis[key] = publicMethods[key]\r\n\t\t})\r\n\t\t// console.log(\"PhotoSYNTH\", this)\r\n\t}\r\n}\r\n\r\n/**\r\n * This is the actual method \"app\" that acts as a \r\n * Singleton Factory for a single instance of the PhotoSYNTH Class\r\n * @param {Object} defaultOptions - options to overwrite\r\n * @param {Function} store - state management\r\n * @param {Capabilities} capabilities - object to represent device specs\r\n * @param {?String} language - language code\r\n * @param {?Function} onLoadProgress - method to call on progress\r\n * @returns {PhotoSYNTH} Restricted access to properties and methods\r\n */\r\nexport const createInterface = ( \r\n\r\n\tdefaultOptions, \r\n\tstore, \r\n\tcapabilities,\r\n\tlanguage = \"en-GB\",\r\n\tonLoadProgress = null\r\n\r\n) => new Promise( (resolve,reject) => {\r\n\r\n\t// Enforce Singleton and return Class with public methods only\r\n\tif (instance)\r\n\t{\r\n\t\treturn resolve(instance)\r\n\t}\r\n\r\n\tconst doc = document\r\n\tconst body = doc.documentElement\r\n\tconst main = doc.querySelector(\"main\")\r\n\tconst image = doc.querySelector(\"img\")\r\n\tconst buttonRecordAudio = doc.getElementById(\"button-record-audio\")\r\n\r\n\t// lazy loaded imports\r\n\tlet getInstruction, getHelp\r\n\tlet setupReporting, track, trackError, trackExit\r\n\r\n\tconst toggles = {}\r\n\tconst selects = {}\r\n\r\n\tconst information = Object.assign({\r\n\t\tlastTime:-1,\r\n\t\tcount:0\r\n\t}, store.getItem('info'))\r\n\r\n\t// Fix dialogs and bind them with events\r\n\tsetupDialogs()\r\n\t\r\n\t// state management\r\n\tlet ui = loadState( defaultOptions, main )\r\n\r\n\t// Record stuff\r\n\tconst { getRecordedDuration, isRecordingAvailable, isRecording, startRecording, stopRecording, encodeRecording, downloadRecording } = record()\r\n\r\n\t// collection of persons\r\n\tconst people = []\r\n\tlet inputElement = video // image\r\n\r\n\t// dom elements wrapped in js\r\n\tlet camera\r\n\tlet photo\r\n\tlet audio \r\n\tlet midi\r\n\tlet midiButton\r\n\t// canvas / GL adapters for front end\r\n\tlet display\r\n\r\n\tlet timer\r\n\tlet reporter\r\n\tlet gamePad\r\n\r\n\t// samples and synths\r\n\tlet kit\r\n\tlet patterns\r\n\tlet recorder\r\n\r\n\t// load MIDI Track model midi track  / save midi track\r\n\tlet midiPerformance\r\n\tlet samplePlayer\r\n\tlet midiPlayer\r\n\tlet savedPerformance\r\n\tlet waveforms = []\r\n\tlet musicalKeyboard\r\n\tlet automator\r\n\tlet useAutomator = true\r\n\r\n\t// As each sample is 2403 ms long, we should try and do it \r\n\t// as a factor of that, so perhaps bars would be better than BPM?\r\n\tlet isLoading = true\r\n\tlet beatJustPlayed = false\r\n\tlet ultimateFailure = false\r\n\tlet midiAvailable = false\r\n\tlet cameraLoading = true\r\n\tlet noFacesFound = false\r\n\tlet userLocated = false\r\n\t// if the user leaves the tab\r\n\tlet userActive = false\r\n\tlet recordRequested = false\r\n\tlet recordCancelRequested = false\r\n\r\n\t// fetch some elements from the DOM\r\n\tconst canvasElement = document.getElementById('interface')\r\n\tconst webGLElement = document.getElementById('interface3D')\r\n\r\n\tconst showLoading = () => {\r\n\t\tbody.classList.toggle(\"loading\", true)\r\n\t\tmain.setAttribute(\"aria-busy\", true)\r\n\t}\r\n\r\n\tconst hideLoading = () => {\r\n\t\t// hide loading screen temporarily\r\n\t\tbody.classList.toggle(\"loading\", false)\r\n\t\tmain.setAttribute(\"aria-busy\", false)\r\n\t}\r\n\r\n\t// TODO : video or canvas copy\r\n\t// should canvas be transparent to let video bleed through?#\r\n\t// retrun true if we should copy the video output\r\n\t// onto the canvas.\r\n\t// NB. This should be only possible if we \r\n\t// are *not* showing the video element underneith\r\n\tconst shouldCopyVideoFrame = () => {\r\n\t\tif (ui.clear)\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (ui.synch){\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\t// TODO:\r\n\tlet cookieConsent = false\r\n\r\n\t// This allows us to determine how long the app has been running for?\r\n\tlet counter = 0\r\n\t\r\n\t// performance indicators\r\n\tconst statistics = {\r\n\t\tlag:0, \r\n\t\tdrift:0\r\n\t}\r\n\r\n\t// for disco mode!\r\n\tconst cameraPan = {x:1,y:1}\r\n\r\n\r\n\t/**\r\n\t * For Demonstration and automation purposes \r\n\t * where you want the entire app to be remote\r\n\t * controlled, you can pass in an instance of the Automator\r\n\t * @param {Automator} automataton \r\n\t * @returns Automator instance\r\n\t */\r\n\tconst setAutomator = automataton => {\r\n\t\tautomator = automataton\r\n\t\t// console.log(\"Automator set\", {useAutomator, automator} )\r\n\t\treturn automator\r\n\t}\r\n\r\n\t/**\r\n\t *  Vocal mode uses speech synthesis to talk the toSay string\r\n\t * @param {String} toSay Audio phrase to repeat\r\n\t */\r\n\tconst speak = toSay => {\r\n\t\tif ( ui.speak && hasSpeech() ) \r\n\t\t{\r\n\t\t\tsay(toSay,true)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set the tool tip toast popover\r\n\t * TODO: a version of the instructor that also reads out the messages\r\n\t * @param {String} message - String to write\r\n\t * @param {?Number} time - time to display for\r\n\t */\r\n\tconst setToaster = (message, time=0) => {\r\n\t\tspeak( message,true)\r\n\t\tsetToast(message,time)\r\n\t}\r\n\r\n\t/**\r\n\t * Randomise the drum patterns to create a distinct\r\n\t * and unique style and sound \r\n\t */\r\n\tconst setRandomDrumPattern = () => {\r\n\t\tpatterns = kitSequence( Math.floor( 17 + Math.random() * 23 ))\r\n\t} \r\n\r\n\t/**\r\n\t * This sets the master volume below the compressor\r\n\t * @param {Number} volume \r\n\t * @returns volume\r\n\t */\r\n\tconst setMasterVolume = volume => {\r\n\t\tconst r = setVolume(volume)\r\n\t\tstore.setItem('audio', { volume:r })\r\n\t\tsetToast(`Volume ${Math.ceil(r * 100)}%`,0)\r\n\t\treturn r\r\n\t}\r\n\r\n\t/**\r\n\t *  This sets the rate of the master clock that gets transported \r\n\t *  through the app in order to perform time based actions\r\n\t * @param {Number} bpm Beats per minute\r\n\t * @returns {Number} New Tempo\r\n\t */\r\n\tconst setTempo = (tempo) => {\r\n\t\tsetTimeBetween( tempo )\r\n\t\tconst bpm = getBPM()\r\n\t\tsetToast( `Tempo : Period set at ${Math.ceil(tempo)} ms between bars / ${Math.ceil(bpm)}BPM` )\r\n\t\tstore.setItem('tempo', { period:tempo, bpm })\r\n\t\treturn tempo\r\n\t}\r\n\r\n\t/**\r\n\t *  Set the speed of this track by how many ticks per minute\r\n\t *  60,000 / BPM = one beat in milliseconds\r\n\t * @param {Number} bpm Beats per minute\r\n\t * @returns {Number} New Tempo\r\n\t */\r\n\tconst setBPM = (bpm) => setTempo( 60000 / bpm  )\r\n\r\n\t/**\r\n\t * Instruments : Load for all people!\r\n\t * @param {String} method Name of method to call on Person\r\n\t * @param {Function} callback Method to run once instruments have loaded\r\n\t * @returns {Function} instrument name (raw)\r\n\t */\r\n\tconst loadInstruments = async (method, callback) => people.map( async (person) => { \r\n\t\tconst instrument = await person[method](callback)\r\n\t\tsetToast(`${person.name} has ${person.instrumentTitle} loaded`)\r\n\t\t//console.log(`${person.name} has ${instrument} loaded` )\r\n\t\treturn instrument\r\n\t})\r\n\r\n\tconst loadRandomInstrument = async (callback) => await loadInstruments('loadRandomInstrument', callback)\r\n\tconst previousInstrument = async (callback) => await loadInstruments('loadPreviousInstrument', callback)\r\n\tconst nextInstrument = async (callback) => await loadInstruments('loadNextInstrument', callback)\r\n\tconst reloadInstrument = async (callback) => await loadInstruments('reloadInstrument', callback)\r\n\r\n\t\r\n\t/**\r\n\t * Instantiate a Person Class and connect it up accordingly\r\n\t * @param {String} name Player's name\r\n\t * @param {String} eyeColour Player's eye colour\r\n\t * @param {?Number} personIndex -  Player number\r\n\t * @returns {Person} Person fully wired\r\n\t */\r\n\tconst createPerson = (name,eyeColour, personIndex=0) => {\r\n\r\n\t\tconst duetAvailable = ui.duet\r\n\t\t\r\n\t\t// TODO: Change these per person...\r\n\t\tconst personOptions = { \r\n\t\t\tdots:eyeColour, \r\n\t\t\tleftEyeIris:eyeColour, \r\n\t\t\trightEyeIris:eyeColour,\r\n\t\t\t// FIXME: should probably use a set hue for consistency...\r\n\t\t\thue:Math.random() * 360,\r\n\t\t\tdebug:ui.debug,\r\n\t\t\t// FIXME: why is this per person? should always set per screen\r\n\t\t\tphotoSensitive:ui.photoSensitive,\r\n\r\n\t\t\tinstrumentPack:ui.instrumentPack,\r\n\r\n\t\t\tstereoPan:ui.stereo,\r\n\r\n\t\t\t// alternate between mesh and blobs depending on mouth\r\n\t\t\t// NB. The two above will override this behaviour\r\n\t\t\t// meshOnSing:false,\r\n\t\t\t// force draw face mesh\r\n\t\t\t// drawMesh:false,\r\n\t\t\t// force draw face blob nodes\r\n\t\t\tdrawMask:ui.masks,\r\n\t\t\t// drawNodes:ui.masks,\r\n\t\t\tdrawEyes:ui.eyes\r\n\t\t}\r\n\r\n\t\t// Load any saved settings for this specific user name\r\n\t\tconst savedOptions = store.has(name) ? store.getItem(name) : {}\r\n\t\tconst options = Object.assign ( {}, personOptions, savedOptions ) \r\n\t\tconst person = new Person( name, audioContext, audio, options ) \r\n\t\t//person.addInstrument( new SampleInstrument(audioContext, audio, {}))\r\n\r\n\t\t// see if there is a stored name for the instrument...\r\n\t\t// FIXME: Look also in the midiPerformance for the first instrument\r\n\t\tconst instrument = getFolderNameForInstrument( midiPerformance ? midiPerformance.instruments[0] : null || savedOptions.instrument || getRandomInstrument() )\r\n\t\t//console.error(\"Person created\", {instrument}, {person})\r\n\r\n\t\t// the instrument has changed / loaded so show some feedback\r\n\t\tperson.button.addEventListener( EVENT_INSTRUMENT_CHANGED, ({detail}) => {\r\n\t\t\t// save it for next time\r\n\t\t\tconst cache = store.setItem(name, {instrument:detail.instrumentName })\r\n\t\t\t//console.log(\"External event for \",{ person, detail , cache})\r\n\t\t\tsetToast( `${person.instrumentTitle} Ready!`.toUpperCase() ) \r\n\t\t})\r\n\r\n\r\n\t\tconst markInstrumentProgress = (progress,instrumentName) =>{ \r\n\t\t\tconst percent = Math.ceil(progress*100)\r\n\t\t\t//setFeedback( `${instrumentName} ${Math.ceil(progress*100)} Loading` )\r\n\t\t\tif (percent < 99){\r\n\t\t\t\tsetToast( `${instrumentName} ${percent}% Loading...` )\r\n\t\t\t}else{\r\n\t\t\t\tsetToast( `${person.instrumentTitle} Loaded!` )\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tperson.button.addEventListener( EVENT_INSTRUMENT_LOADING, ({detail}) => {\r\n\t\t\tconst { progress, instrumentName } = detail\r\n\t\t\tmarkInstrumentProgress( progress, instrumentName )\r\n\t\t})\r\n\r\n\t\tperson.loadInstrument( instrument )\r\n\r\n\t\tswitch(personIndex)\r\n\t\t{\r\n\t\t\tcase 0:\r\n\t\t\t\tconst leftControlPanelButton  = doc.querySelector('.person-a-toggle-controls')\r\n\t\t\t\tconst leftControlPanel = doc.querySelector(\".person-a-panel\")\r\n\t\t\t\tleftControlPanelButton.addEventListener(\"click\", e => person.toggleForm() )\r\n\t\t\t\tleftControlPanel.removeAttribute(\"hidden\")\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tconst rightControlPanelButton = doc.querySelector('.person-b-toggle-controls')\r\n\t\t\t\tconst rightControlPanel = doc.querySelector(\".person-b-panel\")\r\n\t\t\t\trightControlPanelButton.addEventListener(\"click\", e => person.toggleForm() )\r\n\t\t\t\trightControlPanel.removeAttribute(\"hidden\")\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\t\r\n\r\n\t\t// see if there are any gamepads connected - let's go te whole hog!\r\n\t\tgamePad = new GamePad( personIndex )\r\n\t\tgamePad.on( (buttonName, value) => {\r\n\t\t\tswitch(buttonName)\r\n\t\t\t{\r\n\t\t\t\tcase \"disconnected\":\r\n\t\t\t\t\tsetToast(\"GamePAD Unplugged\")\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase \"connected\":\r\n\t\t\t\t\tsetToast(value)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// open sidebar\r\n\t\t\t\tcase \"start\": \r\n\t\t\t\tcase \"select\":\t\r\n\t\t\t\t\tperson.showForm() \r\n\t\t\t\t\tbreak\r\n\t\t\t\t\r\n\t\t\t\tcase \"dup\": break\r\n\t\t\t\tcase \"dright\": \r\n\t\t\t\t\tperson.loadPreviousInstrument()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase \"ddown\": break\r\n\t\t\t\tcase \"dleft\": \r\n\t\t\t\t\tperson.loadPreviousInstrument()\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\t//console.error(name, {instrument, person, savedOptions})\r\n\t\t\r\n\t\t// if (midi && midi.outputs && midi.outputs.length > 0) \r\n\t\t// {\r\n\t\t// \tperson.setMIDI( midi.outputs[0] )\r\n\t\t// }\r\n\t\treturn person\r\n\t}\r\n\r\n\tconst getPlayers = () => people\r\n\r\n\t/**\r\n\t * Create / Fetch a user (we cache every new user)\r\n\t * @param {Number} index Person's at index\r\n\t * @returns {Function} Player Class \r\n\t */\r\n\tconst getPerson = (index) => {\r\n\t\t\r\n\t\tif (people[index] == undefined)\r\n\t\t{\r\n\t\t\tconst person = createPerson( NAMES[index] ,EYE_COLOURS[index], index )\r\n\t\t\tpeople.push( person )\r\n\t\t\treturn person\r\n\t\t} else{\r\n\t\t\treturn people[index]\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * merges all named player options into an array eg. [{ values } , { values }]\r\n\t * @param {Array<string>} values Selective player configuration object keys\r\n\t * @returns {Array<Boolean>} Player configuration object\r\n\t */\r\n\t const fetchPlayerOptions = values => people.map( \r\n\t\t\r\n\t\tplayer => values.reduce((accumulator, currentValue, index, array) => {\t\r\n\t\t\taccumulator[currentValue] = player.options[currentValue]\r\n\t\t\treturn accumulator\r\n\t\t}, {} )\r\n\t)\r\n\r\n\t/**\r\n\t * Set all existing player's options to the selected values \r\n\t * (change the default for any new players created)\r\n\t * @param {Number} option Variable to set\r\n\t * @param {Number} value Value to set the variable to\r\n\t */\r\n\tconst setPlayerOption = (option, value) => {\r\n\t\tpeople.forEach( player => {\r\n\t\t\tplayer.options[option] = value\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Player options batch Update\r\n\t * @param {Array<string>|Object} values - Selective player configuration object keys\r\n\t */\r\n\tconst setPlayerOptions = (values) => {\r\n\t\tconst unique = Array.isArray(values) \r\n\t\t// change the default for any new players created\r\n\t\tpeople.forEach( (player, index) => {\r\n\t\t\t// if unique is set, it means different per person\r\n\t\t\tconst p = unique ? values[index] : values\r\n\t\t\tplayer.options = { ...player.options, ...p }\r\n\t\t\t//console.log(\"settings player.options\", {p,unique}, {result:player.options} \r\n\t\t})\r\n\t}\r\n\r\n\t// MIDI ////////////////////////////////////////////////////////////////\r\n\r\n\t////////////////////////////////////////////////////////////////////\r\n\t// this needs a user interaction to trigger\r\n\t////////////////////////////////////////////////////////////////////\r\n\tconst enableMIDI = async () => {\r\n\r\n\t\ttry{\r\n\t\t\tmidi = await setupMIDI()\r\n\t\t\t\r\n\t\t\t// midi device connected! huzzah!\r\n\t\t\tmidi.addListener(\"connected\", (e) => updateMIDIStatus(midi.outputs) )\r\n\t\t\t\r\n\t\t\t// Reacting when a device becomes unavailable\r\n\t\t\tmidi.addListener(\"disconnected\", (e) => updateMIDIStatus(midi.outputs) )\r\n\r\n\t\t\tupdateMIDIStatus(midi.outputs)\r\n\r\n\t\t\tmain.classList.add('midi-available')\r\n\r\n\t\t}catch(error){\t\r\n\r\n\t\t\t// failed\r\n\t\t\tconsole.error(\"Total MIDI failure\", error)\r\n\t\t\t// this needs a user interaction to trigger\r\n\t\t\tsetFeedback(\"MIDI NOT Available<br>\"+error, 0)\r\n\t\t\tmain.classList.add('midi-unavailable')\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\treturn true\t\r\n\t}\r\n\r\n\t/**\r\n\t * TODO:\r\n\t */\r\n\tconst disableMIDI = () => {\r\n\t\t// midiButton.setText()\r\n\t}\r\n\r\n\t/**\r\n\t * name: \"midi_banjos.mid\"\r\n\t * size: 19444\r\n\t * type: \"audio/mid\"\r\n\t * @param {File} file - object with above meta\r\n\t */\r\n\tconst userUploadMediaFile = async (file) => {\r\n\t\tif (file)\r\n\t\t{\r\n\t\t\t// Load a MIDI file\r\n\t\t\tswitch (file.type)\r\n\t\t\t{\r\n\t\t\t\tcase \"application/json\":\r\n\t\t\t\t\tconsole.log(\"Instrument Pack loading is not supported at this time\")\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase \"audio/mid\":\r\n\t\t\t\t\tconst midiFile = await loadMIDIFileThroughClient( file )\r\n\t\t\t\t\tmidiPerformance = midiFile\r\n\t\t\t\t\tonMIDIPerformanceAvailable(midiFile)\r\n\t\t\t\t\treturn midiFile\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(\"Dropped file\", {file} , \"Ignoring as not sure how to interpret it\")\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Connect one person to a MIDI port\r\n\t * NB. start on click as things require gesture for permission\r\n\t * @param {Number} personIndex - person index (player1 is 0)\r\n\t * @param {Array} midiDevices - \r\n\t * @param {Number} midiChannel - zero means all!\r\n\t * @returns {Number} Port\r\n\t */\r\n\tconst connectMIDIForPerson = (personIndex=0, midiDevices=[], midiChannel=0) => {\r\n\t\tconst person = getPerson(personIndex)\r\n\t\t// try and determine which port the user is expecting\r\n\t\t//const p = midiChannel === \"all\" ? 0 : midiChannel\r\n\t\t// select instrument\r\n\t\tconst port = midiDevices[ personIndex < midiDevices.length ? personIndex : 0 ]\r\n\t\tif (port)\r\n\t\t{\r\n\t\t\tperson.setMIDI(port, midiChannel)\t\r\n\t\t\t//console.info(ui.midiChannel, person.hasMIDI ? `Replacing` : `Enabling` , `MIDI #${midiChannel} for ${person.name}` ,{ui, port, midiDevices, personIndex, midiChannel}, midi.outputs[midiChannel])\r\n\t\t}else{\r\n\t\t\tconsole.error(\"No matching MIDI Instrument\", ui.midiChannel, person.hasMIDI ? `Enabling` : `Disabling` , `MIDI #${midiChannel} for ${person.name}` ,{ui, port, portIndex: midiChannel}, midi.outputs[midiChannel])\r\n\t\t}\r\n\t\treturn port\r\n\t}\r\n\r\n\t/**\r\n\t * Show that MIDI confg and hardware are available / unavailable\r\n\t * @param {Array} outputs - MIDI Devices we want to use\r\n\t */\r\n\tconst updateMIDIStatus = (outputs)=>{\r\n\t\tconst quantity = outputs.length\r\n\t\tif (quantity>0)\r\n\t\t{\r\n\t\t\tconst midiDevices = outputs.map(midiInstrument => midiInstrument.name || \"MIDI Instrument\" )\r\n\t\t\tlet feedback = `MIDI : <br>${midiDevices.join( \"<br>\" )}`\r\n\t\t\tswitch(quantity)\r\n\t\t\t{\r\n\t\t\t\t// FIXME: 2 instruments have been connected,\r\n\t\t\t\t// we should send one to each instrument presumably?\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tpeople.forEach( (person,i) => connectMIDIForPerson(i, outputs, ui.midiChannel) )\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// w00t\r\n\t\t\t\t\t// console.error(\"MIDI devices\",midiInstrument, midiInstrumentName, outputs)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t// use this to fill the peoples\r\n\t\t\t\t\tpeople.forEach( (person,i) => connectMIDIForPerson(i, outputs, ui.midiChannel) )\r\n\t\t\t\t\t\r\n\t\t\t\t\t//midiButton.setText(\"Click to disable\")\r\n\t\t\t}\r\n\r\n\t\t\tmain.classList.toggle('midi-no-devices', false)\r\n\t\t\tmain.classList.toggle('midi-connected', true)\r\n\t\t\tmain.classList.toggle(`midi-devices-${quantity}`, true)\r\n\t\t\tmain.classList.remove(`midi-unavailable`)\r\n\r\n\t\t\tsetToast( feedback )\r\n\r\n\t\t\tmidiButton.setText(\"<span class='hide-text'>Click to </span>Disable\")\r\n\t\t\tmidiButton.setLabel(feedback)\r\n\r\n\t\t}else{\r\n\r\n\t\t\t// bugger - either we never had or we lost...\r\n\t\t\tsetFeedback(midiAvailable ? \"Lost MIDI Device connection\" : \"MIDI Available but no instruments detected\", 0)\r\n\t\t\tsetToast(\"No MIDI Devices connected\")\r\n\t\t\tmain.classList.toggle('midi-no-devices', true)\r\n\t\t\tmain.classList.toggle('midi-connected', false)\r\n\t\t}\r\n\r\n\t\tmidiAvailable = outputs.length > 0\r\n\t}\r\n\r\n\t/**\r\n\t * Update the GUI to show that MIDI instrument is available\r\n\t * NB. MIDI will require a user interaction to initiate\r\n\t * @returns {Boolean} if MIDI is available\r\n\t */\r\n\tconst showMIDI = async () => {\r\n\r\n\t\t// to skip clicking but results in a warning\r\n\t\tmidiButton = setupMIDIButton( \r\n\t\t\tdocument.getElementById(\"button-midi\"), \r\n\t\t\tasync (b) => {\r\n\t\t\t\tawait enableMIDI()\r\n\t\t\t\tsetFeedback(\"MIDI available<br>Connecting to instruments...\", 0)\r\n\t\t\t\tmain.classList.add('midi-activated')\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// FIXME:this is supposed to check for midi instrument somehow??!!!\r\n\t\treturn true\r\n\t}\r\n\r\n\t// INTERACTIONS ///////////////////////////////////////////\r\n\r\n\t/**\r\n\t *  Add Keyboard listeners and tie in commands\r\n\t */\r\n\tconst registerKeyboard = () => {\r\n\t\tlet numberSequence = \"\"\r\n\r\n\t\twindow.addEventListener('keydown', async (event)=>{\r\n\r\n\t\t\tconst isNumber = !isNaN( parseInt(event.key) )\r\n\t\t\tconst focussedElement = document.activeElement\r\n\t\t\t\r\n\t\t\t// Contextual hotkeys - if something is focussed then different keys!\r\n\t\t\tif (focussedElement && focussedElement !== document.documentElement )\r\n\t\t\t{\r\n\t\t\t\t// not body!\r\n\t\t\t\tswitch(focussedElement.nodeName)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"BUTTON\":\r\n\t\t\t\t\t\t// see if a sample is focussed and if so do something different\r\n\t\t\t\t\t\tif ( focussedElement.classList.contains(\"button-play-pause\") ){\r\n\t\t\t\t\t\t\t// find nearest audio element?\r\n\r\n\t\t\t\t\t\t\tconst audio = focussedElement.parentElement.querySelector(\"audio\")\r\n\t\t\t\t\t\t\tconst rate = isNumber ? \r\n\t\t\t\t\t\t\t\tparseInt(event.key) : \r\n\t\t\t\t\t\t\t\t// check to see if this is a+ or - or up or down\r\n\t\t\t\t\t\t\t\tevent.key === 'ArrowRight' ? \r\n\t\t\t\t\t\t\t\t\taudio.playbackRate + 0.1 :\r\n\t\t\t\t\t\t\t\t\tevent.key === 'ArrowLeft' ? \r\n\t\t\t\t\t\t\t\t\t\taudio.playbackRate - 0.1 :\r\n\t\t\t\t\t\t\t\t\t\t0.2 + Math.random() * 3\r\n\r\n\t\t\t\t\t\t\tconst pitch = isNumber ? \r\n\t\t\t\t\t\t\t\tparseInt(event.key) : \r\n\t\t\t\t\t\t\t\t// check to see if this is a+ or - or up or down\r\n\t\t\t\t\t\t\t\tevent.key === 'ArrowUp' ? \r\n\t\t\t\t\t\t\t\t\taudio.detune.value + 10 :\r\n\t\t\t\t\t\t\t\t\tevent.key === 'ArrowDown' ? \r\n\t\t\t\t\t\t\t\t\t\taudio.detune.value - 10 :\r\n\t\t\t\t\t\t\t\t\t\t0.2 + Math.random() * 3\r\n\r\n\t\t\t\t\t\t\taudio.playbackRate = rate\r\n\r\n\t\t\t\t\t\t\t// value in cents\r\n\t\t\t\t\t\t\taudio.detune.value = pitch\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn\r\n\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\tcase \"DIALOG\":\r\n\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we should quit here?\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tswitch(event.key)\r\n\t\t\t{\r\n\t\t\t\tcase 'CapsLock':\r\n\t\t\t\t\tsetState(\"debug\", !ui.debug )\r\n\t\t\t\t\tpeople.forEach( person => person.debug = ui.debug )\r\n\t\t\t\t\tsetToast(`DEBUG : ${ui.debug}`)\r\n\t\t\t\t\tspeak( ui.debug ? \"secret mode unlocked\" : \"disabling developer mode\", true)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'Space':\r\n\t\t\t\t\tloadRandomInstrument() \r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'QuestionMark':\r\n\t\t\t\tcase '?':\r\n\t\t\t\t\t// read out last bit of help?\r\n\t\t\t\t\tspeak(document.getElementById('toast').innerText, true)\r\n\t\t\t\t\tbreak\r\n\r\n\t\r\n\t\t\t\t// Arrows set timing\r\n\t\t\t\tcase 'ArrowLeft':\r\n\t\t\t\t\tsetBPM( getBPM() - 10 )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'ArrowRight':\r\n\t\t\t\t\tsetBPM( getBPM() + 10 )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'ArrowUp':\r\n\t\t\t\t\tlet b = getBars() + 1\r\n\t\t\t\t\tlet bars = setBars( b )\r\n\t\t\t\t\tsetTimeBetween( timePerBar() )\r\n\t\t\t\t\tsetToast(`Bars : ${bars} / BPM : ${getBPM()}`)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// change amount of bars\r\n\t\t\t\tcase 'ArrowDown':\r\n\t\t\t\t\tlet ub = getBars() - 1\r\n\t\t\t\t\tlet ubars = setBars( ub )\r\n\t\t\t\t\tsetTimeBetween( timePerBar() )\r\n\t\t\t\t\tsetToast( `Bars ${ubars} / BPM : ${getBPM()}` )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase ',':\r\n\t\t\t\t\tsetNodeCount(-1)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase '.':\r\n\t\t\t\t\tsetNodeCount(1)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'a':\r\n\t\t\t\t\tkit.kick()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'b':\r\n\t\t\t\t\tsetState(\"backingTrack\", !ui.backingTrack, toggles )\r\n\t\t\t\t\tsetToast( ui.backingTrack ? \"Backing track starting\" : \"Ending Backing Track\" )\r\n\t\t\t\t\tbreak\r\n\t\t\t\r\n\t\t\t\tcase 'c':\r\n\t\t\t\t\tsetState(\"clear\", !ui.clear, toggles )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'd':\r\n\t\t\t\t\tkit.hat()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'e':\r\n\t\t\t\t\tkit.clack()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'f':\r\n\t\t\t\t\ttoggleVisibility( controlPanel )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'g':\r\n\t\t\t\t\tconst isVisisble = toggleVisibility(document.getElementById(\"feedback\") )\r\n\t\t\t\t\ttoggleVisibility(document.getElementById(\"toast\") )\r\n\t\t\t\t\tui.text = isVisisble\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'h':\r\n\t\t\t\t\ttoggleVisibility(canvas)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// Change impulse filter in the reverb\r\n\t\t\t\tcase 'i':\r\n\t\t\t\t\tconst reverb = await setReverb()\r\n\t\t\t\t\tsetToast( `Reverb : '${reverb}' loaded` )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'j':\r\n\t\t\t\t\tpreviousInstrument()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// kid mode / advanced mode toggle\r\n\t\t\t\t// case 'k':\r\n\t\t\t\t// \t//doc.documentElement.classList.toggle('advanced', advancedMode)\r\n\t\t\t\t// \t//doc.documentElement.classList.toggle(CSS_CLASS, false)\r\n\t\t\t\t// \tbreak\r\n\t\t\t\tcase 'k':\r\n\t\t\t\t\tnextInstrument() \r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// toggle speech\r\n\t\t\t\tcase 'l':\r\n\t\t\t\t\tsetState(\"speak\", !ui.speak, toggles )\r\n\t\t\t\t\tsetToast( ui.speak ? `Reading out instructions` : `Staying quiet` )\r\n\t\t\t\t\tbreak\r\n\t\t\t\r\n\t\t\t\tcase 'm':\r\n\t\t\t\t\tsetState(\"metronome\", !ui.metronome, toggles )\r\n\t\t\t\t\tsetToast( ui.metronome ? `Quantised enabled` : `Quantise disabled` )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'n':\r\n\t\t\t\t\ttoggleVideoFrameCopy()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'o':\r\n\t\t\t\t\tif (midiPerformance){\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'p':\r\n\t\t\t\t\tif (midiPerformance){\r\n\t\t\t\t\t\tconst commands = midiPerformance.getNextCommands()\r\n\t\t\t\t\t\tcommands.forEach( command => {\r\n\t\t\t\t\t\t\tcommand.type === COMMAND_NOTE_ON ?\r\n\t\t\t\t\t\t\t\tsamplePlayer.noteOn() : \r\n\t\t\t\t\t\t\t\tsamplePlayer.noteOff()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'q':\r\n\t\t\t\t\tsetState(\"muted\", !ui.muted, toggles )\r\n\t\t\t\t\tbreak\r\n\t\t\t\r\n\t\t\t\tcase 'r':\r\n\t\t\t\t\ttoggleRecording()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 's':\r\n\t\t\t\t\tkit.snare()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 't':\r\n\t\t\t\t\tsetState(\"text\", !ui.text, toggles )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'u':\r\n\t\t\t\t\tsetRandomDrumPattern()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// Hide video\r\n\t\t\t\tcase 'v':\r\n\t\t\t\t\t// FIXME: Also enable sync?\r\n\t\t\t\t\ttoggleVideoOutput()\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'w':\r\n\t\t\t\t\tkit.cowbell()\r\n\t\t\t\t\tbreak\r\n\t\t\t\r\n\t\t\t\tcase 'x':\r\n\t\t\t\t\t// if the time since last one is too great clear?\r\n\t\t\t\t\tconst tappedTempo = tapTempo()\r\n\t\t\t\t\tif (tappedTempo > 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsetBPM(tappedTempo)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(\"tappedTempo\",tappedTempo)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// Reset help!\r\n\t\t\t\tcase 'y':\r\n\t\t\t\t\tcounter = 0\r\n\t\t\t\t\tbreak\r\n\t\t\t\r\n\r\n\t\t\t\t// Reset help!\r\n\t\t\t\tcase 'z':\r\n\t\t\t\t\tcounter = 0\r\n\t\t\t\t\tbreak\r\n\t\t\t\r\n\r\n\t\t\t\t// don't hijack tab you numpty!\r\n\t\t\t\t// FILTER\r\n\t\t\t\tcase 'Tab':\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// check if it is numerical...\r\n\t\t\t\t\t// or if it is a media key?\r\n\t\t\t\t\tif (!isNumber)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// loadRandomInstrument()\r\n\t\t\t\t\t\t// speak(\"Loading random instruments\",true)\t\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Check to see if it is a number\r\n\t\t\tif (isNumber)\r\n\t\t\t{\r\n\t\t\t\tnumberSequence += event.key\r\n\t\t\t\t// now check to see if it is 3 numbers long\r\n\t\t\t\tif (numberSequence.length === 3)\r\n\t\t\t\t{\r\n\t\t\t\t\t// this is a tempo!\r\n\t\t\t\t\tconst tempo = parseFloat(numberSequence)\r\n\t\t\t\t\tsetBPM(tempo)\r\n\t\t\t\t\t// reset\r\n\t\t\t\t\tnumberSequence = ''\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\tnumberSequence = ''\r\n\t\t\t}\r\n\r\n\t\t\t// we run this when we want to ???\r\n\t\t\taddToHistory(ui, event.key)\r\n\t\t\t// console.log(\"key\", ui, event)\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t// TODO: randomise the drum beat\r\n\tconst changeDrumPattern = () => {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * play Audio for a Person using their current face status\r\n\t * TODO: Add WAM2\r\n\t * @param {Person} person \r\n\t * @returns {Object} of metadata\r\n\t */\r\n\tconst playPersonAudio = ( person ) => {\r\n\t\t\r\n\t\t// yaw, pitch, lipPercentage, eyeDirection\r\n\t\tconst stuff = person.sing()\r\n\t\t\r\n\t\t// no instruments set in Person - exit now\r\n\t\tif( !person.instrument )\r\n\t\t{\r\n\t\t\treturn stuff\r\n\t\t}\r\n\r\n\t\tlet noteName = stuff.noteName\r\n\t\tlet noteNumber = stuff.noteNumberForMIDI\r\n\t\tlet note = stuff.note\r\n\t\tlet noteVelocity = stuff.volume\r\n\t\tlet noteFriendlyName = stuff.friendlyNoteName\r\n\r\n\t\t// we can have some fun here and inercept the output\r\n\t\t// and replace them with MIDI performance commands :P\r\n\t\tif ( midiPerformance && person.singing)\r\n\t\t{\r\n\t\t\tconst command = midiPerformance.getNextNoteOnCommand()\r\n\t\t\tif (command)\r\n\t\t\t{\r\n\t\t\t\t//noteName = getMIDINoteNumberAsName(command.noteNumber)\r\n\t\t\t\tnoteName = command.noteName\r\n\t\t\t\tnoteNumber = command.noteNumber\r\n\t\t\t\t// to use the gate as a throttle for the velocity too...\r\n\t\t\t\t// noteVelocity = command.velocity * 0.01\t\r\n\t\t\t\tnoteVelocity *= command.velocity * 0.01\t\r\n\t\t\t\t//console.log(\"Intercepted command via MIDI\", noteName, command)\r\n\t\t\t}else{\r\n\t\t\t\t//console.log(\"No Interception available\", command)\r\n\t\t\t}\r\n\r\n\t\t\t// const commands = midiPerformance.getNextCommands() || []\r\n\t\t\t// commands.forEach( command => {\r\n\t\t\t\t\r\n\t\t\t// \tswitch(command.subtype)\r\n\t\t\t// \t{\r\n\t\t\t// \t\tcase COMMAND_NOTE_ON:\r\n\t\t\t// \t\t\t// FIXME:\r\n\t\t\t// \t\t\tnoteName = getMIDINoteNumberAsName(command.noteNumber)\r\n\t\t\t// \t\t\tnoteNumber = command.noteNumber\r\n\t\t\t// \t\t\tnoteVelocity = command.velocity * 0.01\r\n\t\t\t// \t\t\t// playTrack( note, 0, audioContext )\r\n\t\t\t// \t\t\t// samplePlayer.noteOn()\r\n\t\t\t// \t\t\tconsole.log(\"Person:intercept\", {commands, noteName, noteNumber, noteVelocity } )\r\n\t\t\t// \t\t\tbreak\r\n\r\n\t\t\t// \t\tdefault:\r\n\t\t\t// \t\tcase COMMAND_NOTE_OFF:\r\n\t\t\t// \t\t\t// playTrack( note, 0, audioContext )\r\n\t\t\t// \t\t\t// samplePlayer.noteOff()\r\n\t\t\t// \t\t\tconsole.log(\"Person:intercept ignord\", command.subtype, {commands, noteName, noteNumber, noteVelocity } )\r\n\t\t\t// \t\t\tbreak\r\n\t\t\t// \t}\r\n\t\t\t// })\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t// notesPlayed.push()\t\t\t\r\n\t\t\t//console.log(\"Person:sing\", { stuff,noteName,note})\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\t// instrument exists but no note with that name exists\t\r\n\t\t// NB. probably still loading...\t\r\n\t\tif (!person.instrument[ noteName ])\r\n\t\t{\r\n\t\t\tconsole.warn(\"SING Exit as no instrument with that name exists\",noteName)\r\n\t\t\treturn stuff\r\n\t\t}\r\n\t\t\r\n\t\t// console.log(\"Person:sing\", { stuff,noteName,note}, person.instruments )\r\n\r\n\t\t// Make the Person SING!\r\n\t\tperson.instruments.forEach( instrument => {\r\n\r\n\t\t\t//console.log(\"Attempting to sing\",instrument.type, person.state)\r\n\t\t\t\r\n\t\t\t// if (instrument.type !== \"oscillator\"){\r\n\t\t\t// if (instrument.type !== \"waveguide\"){\r\n\t\t\t// only check for one at a time\r\n\t\t\t// if (instrument.type !== \"oscillator\" || instrument.type !== \"yoshimi\"){\r\n\t\t\t// if ( instrument.type !== \"yoshimi\"){\r\n\t\t\t// \treturn\r\n\t\t\t// }\r\n\t\t\t// if ( instrument.type !== \"sample\"){\r\n\t\t\t// \treturn\r\n\t\t\t// }\r\n\r\n\t\t\r\n\t\t\t//console.error(\"SINGING!!!\", person.state)\r\n\t\t\t// FIXME: Don't play the audio directly in Person\r\n\t\t\t// but instead extract it and pass it to the audioBus\r\n\t\t\t// update the stave with X amount of notes\r\n\t\t\t// stave.draw(stuff)\r\n\t\t\t// update the stave with X amount of notes\r\n\t\t\tswitch(person.state)\r\n\t\t\t{\r\n\t\t\t\tcase STATE_INSTRUMENT_ATTACK:\r\n\t\t\t\tcase STATE_INSTRUMENT_SUSTAIN:\r\n\t\t\t\tcase STATE_INSTRUMENT_PITCH_BEND:\r\n\t\t\t\t\t// note off if set...\r\n\t\t\t\t\tif ( person.lastNoteNumber >= 0 )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst previously = instrument.noteOff( person.lastNoteNumber )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst latest = instrument.noteOn( noteNumber, noteVelocity )\r\n\t\t\t\t\t\r\n\t\t\t\t\t//console.log(\"Attempting to sing\",instrument.type, person.state)\r\n\t\t\t\t\t//console.log(\"Person\", p, person.state, person, {instrument, noteNumber, noteVelocity} )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase STATE_INSTRUMENT_DECAY:\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// case STATE_INSTRUMENT_RELEASE:\r\n\t\t\t\t// \tinstrument.noteOff( noteNumber )\r\n\t\t\t\t// \tbreak\r\n\r\n\t\t\t\tcase STATE_INSTRUMENT_SILENT:\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tinstrument.noteOff( noteNumber )\r\n\t\t\t\t\t//console.log(\"Attempting to mute\",instrument.type, person.state)\r\n\t\t\t\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (ui.showPiano)\r\n\t\t{\r\n\t\t\t// Update visual elements\r\n\t\t\tswitch(person.state)\r\n\t\t\t{\r\n\t\t\t\tcase STATE_INSTRUMENT_SILENT:\r\n\t\t\t\t\tmusicalKeyboard.noteOff( noteNumber, noteVelocity )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase STATE_INSTRUMENT_ATTACK:\r\n\t\t\t\t\tmusicalKeyboard.noteOn( noteNumber, noteVelocity )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase STATE_INSTRUMENT_SUSTAIN:\r\n\t\t\t\t\tmusicalKeyboard.noteOn( noteNumber, noteVelocity )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase STATE_INSTRUMENT_PITCH_BEND:\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase STATE_INSTRUMENT_DECAY:\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase STATE_INSTRUMENT_RELEASE:\r\n\t\t\t\t\tmusicalKeyboard.noteOff( noteNumber, noteVelocity )\r\n\t\t\t\t\tbreak\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t\r\n\r\n\t\t//const personalSamplePlayer = person.samplePlayer\r\n\r\n\t\t// // FIXME: Don't play the audio directly in Person\r\n\t\t// // but instead extract it and pass it to the audioBus\r\n\t\t// // stuff.played is an array of notes\r\n\t\t// // update the stave with X amount of notes\r\n\t\t// // stave.draw(stuff)\r\n\t\t// // update the stave with X amount of notes\r\n\t\t// if (person.singing)\r\n\t\t// {\r\n\t\t// \tmusicalKeyboard.noteOn( noteNumber, noteVelocity )\r\n\t\t// \tpersonalSamplePlayer && personalSamplePlayer.noteOnByName( noteName, noteVelocity )\r\n\t\t// \t//midiPlayer && midiPlayer.noteOn( noteNumber, noteVelocity )\r\n\t\t// \t// person.midiPlayer && person.midiPlayer.noteOn( noteNumber, noteVelocity )\r\n\t\t// \tconsole.log(\"Person wants to sing\", {note, noteNumber, noteName, track, samplePlayer})\r\n\t\t// \t// stave.noteOn( person.lastNoteName, person.name )\r\n\r\n\t\t// \t//person.sendMIDI( \"noteOn\", noteNumber, noteVelocity )\r\n\t\t// }else{\r\n\t\t// \t// FIXME: We need to send a noteOff when the note\r\n\t\t// \t// changes too, rather than just letting it continue playing?\r\n\t\t// \t// or should we pitch bend to that key?\r\n\r\n\r\n\t\t// \tmusicalKeyboard.noteOff( noteNumber, noteVelocity )\r\n\t\t// \t// FIXME: Gets sent even when not playing!\r\n\t\t// \tpersonalSamplePlayer && personalSamplePlayer.noteOff( noteNumber )\r\n\t\t// \t//midiPlayer && midiPlayer.noteOff( noteNumber )\r\n\t\t// \t//person.midiPlayer && person.midiPlayer.noteOff( noteNumber )\r\n\t\t// \tconsole.log(\"Person silenced\", {note, noteNumber, noteName, track, samplePlayer})\r\n\t\t// \t// stave.noteOff( person.name )\r\n\t\t// \t//person.sendMIDI( \"noteOff\", noteNumber )\r\n\t\t// }\r\n\t\t\r\n\t\treturn stuff\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle Start / Stop of the Recording\r\n\t * with optional defering where the record\r\n\t * start and stop occur at the start of bars\r\n\t * only rather than immediately when requested\r\n\t * @param {Boolean} defer \r\n\t */\r\n\tconst toggleRecording = (defer = true) => {\r\n\t\tif (recordRequested)\r\n\t\t{\r\n\t\t\t// console.log(\"recordRequested\")\r\n\t\t}\r\n\t\tif (recordCancelRequested)\r\n\t\t{\r\n\t\t\t// console.log(\"recordCancelRequested\")\r\n\t\t}\r\n\r\n\t\tif ( (defer && recordRequested) || isRecording())\r\n\t\t{\r\n\t\t\trecordRequested = false\r\n\t\t\tif (defer){\r\n\t\t\t\tsetToast(\"Recording Ending...\")\r\n\t\t\t\trecordCancelRequested = true\r\n\t\t\t}else{\r\n\t\t\t\tsetToast(\"Recording Ended - now encoding\")\r\n\t\t\t\tstopRecordingAudio()\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else if ( (defer && !recordRequested) || !isRecording() ){\r\n\t\t\t\r\n\t\t\tif (defer){\r\n\t\t\t\tsetToast(\"Recording ARMED\")\r\n\t\t\t\trecordRequested = true\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\tstartRecordingAudio()\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t// console.log(\"record button ignored\")\r\n\t\t}\r\n\t}\r\n\r\n\t// allows us to record the stream!\r\n\tconst startRecordingAudio = () => {\r\n\r\n\t\tif (!isRecordingAvailable())\r\n\t\t{\r\n\t\t\t// not supported on this browser\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\t// pipe in some data from the MASTER BUS gain node\r\n\t\tconst recordingNode = audioContext.createMediaStreamDestination()\r\n\t\tconst masterOutput = getRecordableOutputNode()\r\n\t\tmasterOutput.connect(recordingNode)\r\n\t\t\r\n\t\t// empty waveform collector\r\n\t\twaveforms = []\r\n\t\t\r\n\t\tbuttonRecordAudio.parentElement.classList.toggle(\"recording\", true)\r\n\t\t\r\n\t\tsetToast(\"Recording STARTED\")\r\n\r\n\t\tstartRecording(recordingNode.stream).then( recorderInstance => {\r\n\t\t\trecorder = recorderInstance \r\n\t\t\tbuttonRecordAudio.classList.toggle(\"progress\", true)\r\n\t\t})\r\n\t}\r\n\r\n\tconst stopRecordingAudio = () => {\r\n\t\tbuttonRecordAudio.parentElement.classList.toggle(\"cancelling\", true)\r\n\t\t\r\n\t\tstopRecording().then(recording=>{\r\n\t\t\tbuttonRecordAudio.parentElement.classList.remove(\"recording\",\"progress\",\"cancelling\")\r\n\t\r\n\t\t\t// get user's instrument names...tempo etc...\r\n\t\t\tconst person = getPerson(0)\r\n\r\n\r\n\t\t\tconst fileName = person.instrumentTitle || `Sample`\r\n\r\n\t\t\tlet svg\r\n\t\t\tif (waveforms && waveforms.length)\r\n\t\t\t{\r\n\t\t\t\t// process the waveforms\r\n\t\t\t\tlet lastNonZero = 0\r\n\t\t\t\tlet datum\r\n\t\t\t\tconst compacted = waveforms.map( freqByteData=> {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst waveformDataCompacted = []\r\n\t\t\t\t\tfor (let idx = 0; idx < 255; idx += 1) {\r\n\t\t\t\t\t\tdatum = Math.floor(freqByteData[idx]) - (Math.floor(freqByteData[idx]) % 5)\r\n\r\n\t\t\t\t\t\tif (datum !== 0) {\r\n\t\t\t\t\t\t\tlastNonZero = idx\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twaveformDataCompacted[idx] = datum\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn waveformDataCompacted\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst f = compacted.flat(1)\r\n\t\t\t\tsvg = createWaveform( f, lastNonZero )\t\r\n\t\t\t\t// console.log( f, {compacted, waveforms, waveformData} )\r\n\t\t\t\t// console.log(svg)\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\t// first thing we do before encoding is add it to our output window\r\n\t\t\t// along with our photos and video recordings\r\n\t\t\tappendAudioElement( recording, fileName, downloadType => {\r\n\t\t\t\t\t\r\n\t\t\t\t//console.log(\"Download\", downloadType, {recording})\r\n\t\t\t\t// variations to trigger download\r\n\t\t\t\tswitch(downloadType)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"ogg\":\r\n\t\t\t\t\t\t//encodeRecording(\"audio\", \"ogg\", \"opus\")\r\n\t\t\t\t\t\tdownloadRecording(\"magnum\", \"audio\", \"ogg\", \"opus\")\r\n\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\tcase \"mp3\":\r\n\t\t\t\t\t\t//encodeRecording(\"audio\",\"mp3\")\r\n\t\t\t\t\t\tdownloadRecording(\"emmpeethree\", \"audio\", \"mp3\")\r\n\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tcase \"wave\":\r\n\t\t\t\t\t\t//encodeRecording( 'audio','wav')\r\n\t\t\t\t\t\tdownloadRecording(\"wave\",\"audio\",\"wav\")\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}, svg)\r\n\r\n\t\t\t// console.error(\"Recording END\", {recording, ogg})\r\n\t\t\t// console.error(\"Recording END\", {recording, mp3})\r\n\t\t\t// clear memory\r\n\t\t\trecorder = null\r\n\t\t\tsetToast( `Recording Encoded!` )\t\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Wires up all of the individual parts of the app and returns a method\r\n\t * to begin the actual application\r\n\t * @param {Function} update Method to call when face moves\r\n\t * @param {Object} settings App Settings Object\r\n\t * @param {Function} progressCallback Method to progressivley call during setup procedure\r\n\t * @returns {Function} start() method\r\n\t*/\r\n\tconst setup = async (update, settings, progressCallback) => {\r\n\r\n\t\tconst loadTotal = 6\r\n\t\tlet loadIndex = 0\r\n\r\n\t\t// PWA file types! Check manifest and \r\n\t\t// https://web.dev/file-handling/\r\n\t\tif (capabilities.fileHandlerAvailable) \r\n\t\t{\r\n\t\t\t// The File Handling API is supported.\r\n\t\t\tlaunchQueue.setConsumer((launchParams) => {\r\n\t\t\t\t// Nothing to do when the queue is empty.\r\n\t\t\t\tif (!launchParams.files.length) {\r\n\t\t\t\t  return\r\n\t\t\t\t}\r\n\t\t\t\t// load associated files\r\n\t\t\t\tfor (const fileHandle of launchParams.files) {\r\n\t\t\t\t  // Handle the file.\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tbody.classList.toggle(\"initialising\", true)\r\n\r\n\t\ttry{\r\n\t\t\t\r\n\t\t\tsetFeedback(\"Setting things up...<br>This can take a while!\")\r\n\t\t\t\r\n\t\t\tprogressCallback(loadIndex++/loadTotal, \"Looking for cameras\")\r\n\r\n\t\t\t// wait for video or image to be loaded!\r\n\t\t\tif (video)\r\n\t\t\t{\r\n\t\t\t\tsetFeedback( \"Attempting to locate a camera...<br>Please click accept if you are prompted\")\r\n\t\t\t\r\n\t\t\t\tprogressCallback(loadIndex/loadTotal,\"Looking for cameras...\" )\r\n\t\t\t\t\t\t\r\n\t\t\t\tconst investigation = await findBestCamera(store, video, status => {\r\n\t\t\t\t\tprogressCallback(loadIndex/loadTotal, status)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst {videoCameraDevices} = investigation\r\n\t\t\t\tcamera = investigation.camera\r\n\t\t\t\tcameraLoading = false\r\n\r\n\t\t\t\tconst cameraFeedbackMessage = investigation.saved ? \"Found saved camera\" : videoCameraDevices.length > 1 ? \"Located a Camera but you can change it in Settings > Camera\" : \"Located front facing camera\"\r\n\t\t\t\t//const deviceId = store.has('camera') ? store.getItem('camera').deviceId : undefined\r\n\t\t\t\t// setFeedback( cameraFeedbackMessage )\r\n\r\n\t\t\t\tprogressCallback(loadIndex/loadTotal, cameraFeedbackMessage )\r\n\r\n\t\t\t\t// check to see if there are multiple cameras and we want a selector\r\n\t\t\t\tif (videoCameraDevices.length > 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tsetupCameraForm(videoCameraDevices, async (selected) => {\r\n\t\t\t\t\t\tcameraLoading = true\r\n\t\t\t\t\t\tcamera = await loadCamera( video, selected.value, selected.label )\r\n\t\t\t\t\t\tcameraLoading = false\r\n\t\t\t\t\t\t// if successful store for next time\r\n\t\t\t\t\t\tstore.setItem('camera', {deviceId:selected.value})\r\n\t\t\t\t\t\t//console.log( selected.value , \"Camera selected\",selected, camera)\r\n\t\t\t\t\t\tsetToast( `Camera ${selected.label} changed`, 0 )\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t\t// show / hide camera button\r\n\t\t\t\t\tmain.classList.toggle(\"multiple-cameras\", true)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//setFeedback( \"Camera connected\", 0 )\r\n\t\t\t\tprogressCallback(loadIndex++/loadTotal, \"Camera connected\")\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// at this point the video dimensions are accurate\r\n\t\t\t// so we add the main style vars\r\n\t\t\tmain.style.setProperty('--width', video.width )\r\n\t\t\tmain.style.setProperty('--height', video.height )\r\n\t\t\tmain.classList.toggle('landscape', video.width > video.height )\r\n\t\t\tmain.classList.toggle('portrait', video.width < video.height )\r\n\t\t\tmain.classList.toggle('square', video.width === video.height )\r\n\t\t\t\r\n\t\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t\t}catch(error){\r\n\r\n\t\t\t// NotAllowedError: Permission denied\r\n\t\t\tconst errorReason = String(error).replace(\"NotAllowedError: \",'')\r\n\t\t\tconst errorMessage = \r\n\t\t\t`Camera could not be accessed<br>\r\n\t\t\t<strong>${errorReason}</strong>`\r\n\t\t\t\r\n\t\t\tsetFeedback(errorMessage, 0)\r\n\t\t\tsetToast( errorReason )\r\n\t\t\tprogressCallback(loadIndex++/loadTotal, errorReason )\r\n\t\t\tisLoading = false\r\n\t\t\tultimateFailure = true\r\n\t\t\ttrackError('Camera Rejected or Not allowed')\r\n\t\t\t// FATAL ERROR\r\n\t\t\treturn reject( errorReason )\r\n\t\t}\r\n\r\n\t\t// Load any previous performances...\r\n\t\tif (ui.loadMIDIPerformance)\r\n\t\t{\r\n\t\t\tprogressCallback(loadIndex/loadTotal,\"Loading MIDI Performance\")\r\n\t\t\ttry{\r\n\t\t\t\tmidiPerformance = await loadMIDIFile( \"./assets/audio/midi_nyan-cat.mid\" )\r\n\t\t\t\t// console.error(\"MIDIFILE\", midiPerformance)\r\n\t\t\t\tonMIDIPerformanceAvailable( midiPerformance )\r\n\t\t\t}catch(error){\r\n\t\t\t\t// console.error(\"MIDIFILE\", error)\r\n\t\t\t\tsetFeedback(error, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\ttry{\r\n\t\t\tconst savedVolume = store.getItem('audio')\r\n\t\t\tconst newVolume = savedVolume ? savedVolume.volume : 1\r\n\t\t\taudio = await setupAudio()\r\n\r\n\t\t\t// audio worklet tests!\r\n\t\t\t// NB. run only once per app to load  audio\r\n\t\t\tawait registerAudioWorklets( audioContext )\r\n\t\t\t\r\n\r\n\t\t\t// WaveGuideInstrument\r\n\t\t\t\r\n\t\t\t// // Run this in instrument.worklet\r\n\t\t\t// const processor = new AudioWorkletNode(audioContext, \"interface-processor\")\r\n\t\t\t// // receive message\r\n\t\t\t// processor.port.onmessage = (event) => {\r\n\t\t\t// \t// Handling data from the processor.\r\n\t\t\t// \tconsole.log(event.data)\r\n\t\t\t// }\r\n\r\n\t\t\t// // send message\r\n\t\t\t// processor.port.postMessage('Hello!')\r\n\t\t\t// processor.connect( audioContext.destination )\r\n\t\t\t\r\n\r\n\r\n\r\n\r\n\t\t\t// create a super object containing paths and families ands such!\r\n\t\t\tconst instrumentDictionary = createInstruments()\r\n\t\t\t// console.error({instrumentDictionary})\r\n\r\n\t\t\t// load a specific instrumentPack?\r\n\t\t\tawait loadInstrumentDataPack()\r\n\t\t\t//console.log(\"Initiating audio\", {newVolume,savedVolume, audio})\r\n\t\t\t\r\n\t\t\t// if (instrument)\r\n\t\t\t// {\r\n\t\t\t// \tsetFeedback( \"Audio Available...<br>Instrument \"+instrument+\" Sounds downloaded\", 0 )\r\n\t\t\t// }else{\r\n\t\t\t// \tsetFeedback( `Audio Available. Setting volume to ${getVolume() * 100}`, 0 )\r\n\t\t\t// }\r\n\t\t\tsetMasterVolume(newVolume)\r\n\t\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t\t\t// not neccessary if using Person\r\n\t\t\t// instrument = await loadInstrument( randomInstrument() )\r\n\t\t\t// const instrumentName = await loadRandomInstrument()\r\n\t\t\t// // now you can play any of the objects keys with\r\n\t\t\t// // playTrack(instrument[ INSTRUMENT_NAMES[0] ], 0)\r\n\t\t\t// //playTrack(instrument.A0, 0)\r\n\t\t\t// setFeedback( instrumentName.name + \" Samples available...<br>Instrument Sounds downloaded\")\r\n\t\t\t\r\n\t\t\tkit = createDrumkit()\r\n\t\t\tpatterns = kitSequence()\r\n\r\n\t\t\t// console.log(\"Streamin\", {video, photo, camera} )\r\n\t\t\tprogressCallback(loadIndex++/loadTotal, \"Audio available...<br>Instrument Sounds ready\" )\r\n\r\n\t\t}catch(error){\r\n\r\n\t\t\tultimateFailure = true\r\n\t\t\tsetFeedback(\"Something went wrong with the Audio<br>\"+error, 0)\r\n\t\t\treturn \r\n\t\t}\r\n\r\n\t\t// This first tests for functions to exist\r\n\t\tif (capabilities.webMIDIAvailable)\r\n\t\t{\r\n\t\t\t// then we attempt to connect to it\r\n\t\t\ttry{\r\n\t\t\t\t// rather than enabling midi directly we show a button to enable it\r\n\t\t\t\tconst hasMIDI = await showMIDI()\r\n\t\t\t\tif (hasMIDI)\r\n\t\t\t\t{\r\n\t\t\t\t\tmain.classList.add('midi')\r\n\t\t\t\t\t// setFeedback(\"MIDI available<br>And device(s) found\", 0)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmain.classList.add('midi','no-instrument')\r\n\t\t\t\t\tsetFeedback(\"MIDI available<br>Connect a MIDI instrument <strong>and click the button</strong>\", 0)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}catch(error){\r\n\r\n\t\t\t\t// no midi - don't show midi button\r\n\t\t\t\tconsole.log(\"no MIDI!\", error)\r\n\t\t\t\tmain.classList.add('no-midi')\r\n\t\t\t\tmain.classList.add('midi-unavailable')\r\n\t\t\t\tsetFeedback(\"MIDI unavailable, or no instrument connected<br>\"+error, 0)\r\n\t\t\t}\r\n\t\t\tprogressCallback(loadIndex++/loadTotal, \"MIDI Located\")\r\n\r\n\t\t}else{\r\n\r\n\t\t\tprogressCallback(loadIndex++/loadTotal)\r\n\t\t\tmain.classList.add('midi-unavailable')\r\n\t\t\tsetFeedback(\"MIDI is not available in this browser,<br>It'll work better in Brave, Edge or Chrome\", 0)\r\n\t\t}\r\n\t\t\r\n\t\t// const {startRecording, stopRecording} = record(stream)\r\n\t\t\r\n\t\t// const Display = await loadDisplay( DISPLAY_LOOKING_GLASS_3D )\r\n\t\t// const Display = await loadDisplay( DISPLAY_WEB_GL_3D )\r\n\t\t// set the canvas to the size of the video / image\r\n\t\t// display = new Display( webGLElement, inputElement.width, inputElement.height )\r\n\r\n\t\t// Allows mulltiple displays to be simultaneously powered!\r\n\t\tconst DisplayComposite = await loadDisplay( DISPLAY_COMPOSITE )\r\n\t\tdisplay = new DisplayComposite( canvasElement, inputElement.width, inputElement.height  )\r\n\t\t\r\n\t\t// Media Videion ML Model and Canvas 2D\r\n\t\tconst DisplayMediaVision2D = await loadDisplay( DISPLAY_MEDIA_VISION_2D )\r\n\t\tconst displayMediaVision2D = new DisplayMediaVision2D( canvasElement, inputElement.width, inputElement.height )\r\n\t\tdisplay.addDisplay(displayMediaVision2D)\r\n\r\n\t\t// NB. Make sure you set this to a WEB_GL context!\r\n\t\t// const DisplayWebGL3D = await loadDisplay( DISPLAY_WEB_GL_3D )\r\n\t\t// const displayWebGL3D = new DisplayWebGL3D( webGLElement, inputElement.width, inputElement.height )\r\n\t\t// display.addDisplay(displayWebGL3D)\r\n\r\n\t\t// TODO: Sniff hardware connected to determine if we want XR?\r\n\t\t// Looking Glass Portrait hardware\r\n\t\t// const DisplayLookingGlass3D = await loadDisplay( DISPLAY_LOOKING_GLASS_3D )\r\n\t\t// const displayLookingGlass3D = new DisplayLookingGlass3D( webGLElement, inputElement.width, inputElement.height )\r\n\t\t// display.addDisplay(displayLookingGlass3D)\r\n\r\n\r\n\t\tif (ui.showPiano)\r\n\t\t{\r\n\t\t\t// this draws a 2d keyboard on screen at the specified position and dimensions\r\n\t\t\tmusicalKeyboard = new MusicalKeyboard( 500, 120, 8 )\r\n\t\t}\r\n\t\t\r\n\t\t// Create a new sample player to handle sound playback\r\n\t\tsamplePlayer = new SampleInstrument(audioContext, audio, {})\r\n\t\t\r\n\t\t// Add some scales on the side\r\n\t\t// FIXME: Do this per PERSON\r\n\t\tquanitiser = new Quanitiser()\r\n\r\n\t\t// this just adds some visual onscreen tooltips to the buttons specified\r\n\t\taddToolTips( controlPanel)\r\n\r\n\t\t// turn up the amp\r\n\t\tconst volume = store.getItem('audio') ? parseFloat(store.getItem('audio').volume) : 1\r\n\t\tsetVolume( volume > 0 ? volume : 1 )\r\n\r\n\t\t// load scripts once eveything has completed...\r\n\t\t// setTimeout( ()=>{\r\n\t\t// }, 0 )\r\n\r\n\t\t// ----------------------------------------------------------------------------------\r\n\r\n\r\n\t\t// after a period of inactivity...\r\n\t\t//setFeedback(\"Everything is ready to \"+ (inputElement === video? \"record\" : \"read\"))\r\n\t\t\r\n\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t\t// remove loading flag as we now have all of our assets!\r\n\t\t// TODO: create and position the stave?\r\n\t\t// const stave = new Stave( canvasElement, 0, 0, true )\r\n\t\tmain.classList.add( inputElement.nodeName.toLowerCase() )\r\n\t\tbody.classList.toggle(\"initialising\", false)\r\n\t\t\r\n\t\t// console.log(inputElement === video, \"Waiting on predicions\")\r\n\t\t// return\r\n\t\t// LOOP ---------------------------------------\r\n\r\n\t\t// Ensure that the video element is always being fed data\r\n\t\tconst shouldUpdate = () => !cameraLoading\r\n\r\n\t\t/**\r\n\t\t * BEGIN ---------------------------------------------------------\r\n\t\t */\r\n\t\tconst start = () => {\r\n\t\t\r\n\t\t\t// this then runs the loop if set to true\r\n\t\t\tconst automaticRepeat = inputElement === video\r\n\r\n\t\t\t// REDRAW DOM / CANVAS / WEB GL -------------------------------\r\n\t\t\tupdate( automaticRepeat , (predictions)=>{\r\n\r\n\t\t\t\t// NB. always update the counter\r\n\t\t\t\tcounter++\r\n\r\n\t\t\t\tif(isLoading)\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoading = false\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// return if camera is still connecting...\r\n\t\t\t\t// otherwise tensorflow will try and calculate blankness\r\n\t\t\t\tif (cameraLoading)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If there is a attract mode supervisor\r\n\t\t\t\t// we update it every tick so that it can \r\n\t\t\t\t// control this class automatically\r\n\t\t\t\tif (useAutomator && automator)\r\n\t\t\t\t{\r\n\t\t\t\t\tautomator.tock(getElapsed(), getBarProgress())\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tlet tickerTape = ''\r\n\t\t\t\t\r\n\t\t\t\tif (ui.disco)\r\n\t\t\t\t{\t\r\n\t\t\t\t\t// FUNKY DISCO MODE...\r\n\t\t\t\t\t// switch effect type?\r\n\t\t\t\t\tconst t = (counter * 0.01) % TAU\t\r\n\t\t\t\t\tdisplay.overdraw( -7 * cameraPan.x + Math.sin(t), -4 * cameraPan.y + Math.cos(t))\r\n\t\t\t\t\t// overdraw( canvasContext, -7 * cameraPan.x + Math.sin(t), -4 * cameraPan.y + Math.cos(t))\r\n\t\t\t\t\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\t// do we clear the canvas?\r\n\t\t\t\t\t// if it is disco mode, we always want it to \r\n\t\t\t\t\t// copy the previous frames otherwise it will\r\n\t\t\t\t\t// just look like it is janking\r\n\t\t\t\t\t// we also clear if sync is not set to true\r\n\t\t\t\t\t// as this means the video is playing behind\r\n\t\t\t\t\t// the canvas on the DOM\r\n\t\t\t\t\tif (ui.clear || !ui.synch)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// clear for invisible canvas but \r\n\t\t\t\t\t\t// NB. this may cause visual disconnect\r\n\t\t\t\t\t\tdisplay.clear()\r\n\t\t\t\t\t\r\n\t\t\t\t\t}else if (ui.synch){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// paste video frame if the video is hidden\r\n\t\t\t\t\t\tdisplay.drawElement( inputElement )\r\n\t\t\t\t\t\t// drawElement( canvasContext, inputElement )\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// video is already showing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// On BEAT if beatjustplayed\r\n\t\t\t\t// TODO: convert this into a per user bar and use the last played note to \r\n\t\t\t\t// change the colour of the indicator\r\n\t\t\t\tif (ui.quantise)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Start on BAR\r\n\t\t\t\t\t// show quantise\r\n\t\t\t\t\t// fetch notes played from user?\r\n\t\t\t\t\tconst barColour = `hsl (${getPerson(0).hue },50%,50%)`\r\n\t\t\t\t\t//drawQuantise( beatJustPlayed, getBar(), getBars(), barColour)\r\n\t\t\t\t\tquanitiser.draw( beatJustPlayed, getBar(), getBars(), barColour )\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (ui.spectrogram)\r\n\t\t\t\t{\r\n\t\t\t\t\t// updateByteTimeDomainData()\r\n\t\t\t\t\t// drawWaves( dataArray, bufferLength )\r\n\t\t\t\t\t\r\n\t\t\t\t\tupdateByteFrequencyData()\r\n\t\t\t\t\tdrawBars( dataArray, bufferLength )\r\n\r\n\t\t\t\t\tif (recorder)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twaveforms.push(dataArray)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\tlet haveFacesBeenDetected = false\t\r\n\t\t\t\tif (predictions)\r\n\t\t\t\t{\r\n\t\t\t\t\t// loop through all predictions...\r\n\t\t\t\t\tfor (let i=0, l=predictions.length; i < l; ++i)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst prediction = predictions[i]\r\n\t\t\t\t\t\t// create as many people as we need\r\n\t\t\t\t\t\tconst person = getPerson(i)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// face available!\r\n\t\t\t\t\t\tif (prediction)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//if (!act)\r\n\t\t\t\t\t\t\t//main.classList.toggle(\"active\", true)\r\n\t\t\t\t\t\t\t// playAudio()\r\n\t\t\t\t\t\t\tif (noFacesFound)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnoFacesFound = false\r\n\t\t\t\t\t\t\t\tmain.classList.toggle( `${person.name}-active`, true)\r\n\t\t\t\t\t\t\t\tmain.classList.toggle( `no-faces`, false)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tuserLocated = true\r\n\t\t\t\t\t\t\thaveFacesBeenDetected = true\r\n\r\n\t\t\t\t\t\t\t// first update the person - this allows us to sing at will\r\n\t\t\t\t\t\t\tperson.update(prediction)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\t\t// stopAudio()\r\n\t\t\t\t\t\t\tif (!noFacesFound)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// no face found!??\r\n\t\t\t\t\t\t\t\tmain.classList.toggle( `${person.name}-active`, false)\r\n\t\t\t\t\t\t\t\tmain.classList.toggle( `no-faces`, true)\r\n\t\t\t\t\t\t\t\tnoFacesFound = true\r\n\r\n\t\t\t\t\t\t\t\t// TODO : Switch to hand / body detection whilst faces not found?\r\n\t\t\t\t\t\t\t\t// TODO: Implement part switching behaviour\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// add face overlay\r\n\t\t\t\t\t\tif (ui.disco || ui.overlays)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// FIXME:\r\n\t\t\t\t\t\t\t// TODO:\r\n\t\t\t\t\t\t\t// prediction, forceRefresh=false\r\n\t\t\t\t\t\t\tconst colours = person.draw( prediction, false, beatJustPlayed)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdisplay.drawPerson( person, beatJustPlayed, colours )\r\n\r\n\t\t\t\t\t\t\tif (ui.text)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tperson.drawText( prediction ) \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// then whenever you fancy it,\r\n\t\t\t\t\t\tif (!ui.quantise && !ui.muted)\r\n\t\t\t\t\t\t{\t\r\n\t\t\t\t\t\t\t// unless quantize is turned off\r\n\t\t\t\t\t\t\t// we can \"sing\" in realtime\r\n\t\t\t\t\t\t\tconst stuff = playPersonAudio( person )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// stuff.eyeDirection\r\n\t\t\t\t\t\t\tif (ui.disco && i===0)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// stuff.eyeDirection\r\n\t\t\t\t\t\t\t\t// use person 1's eyes to control other stuff too?\r\n\t\t\t\t\t\t\t\t// in this case the direction of the pan in disco mode\r\n\t\t\t\t\t\t\t\tcameraPan.x = stuff.eyeDirection\r\n\t\t\t\t\t\t\t\tcameraPan.y = stuff.pitch\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// you want a tight curve\r\n\t\t\t\t\t\t//setFrequency( 1/4 * 261.63 + 261.63 * lipPercentage)\r\n\t\t\t\t\t\ttickerTape += `<br>PITCH:${prediction.pitch} ROLL:${prediction.roll} YAW:${prediction.yaw} MOUTH:${Math.ceil(100*prediction.mouthRange)}%`\r\n\t\t\t\t\t\t// tickerTape += `<br>PITCH:${Math.ceil(100*prediction.pitch)} ROLL:${Math.ceil(100*prediction.roll)} YAW:${180*prediction.yaw} MOUTH:${Math.ceil(100*prediction.mouthRange/DEFAULT_OPTIONS.LIPS_RANGE)}%`\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// update if neccessary on screen now all people are drawn\r\n\t\t\t\t\tdisplay.render()\r\n\t\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// tickerTape += `No prediction`\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t// this simply forces refresh of the stave notes\r\n\t\t\t\t// stave.update( counter )\r\n\r\n\r\n\t\t\t\t// Update TEXT on screen...\r\n\t\t\t\tif (isRecording())\r\n\t\t\t\t{\r\n\t\t\t\t\tconst recordedDuration = getRecordedDuration() * 0.001\r\n\t\t\t\t\t// format the time?\r\n\t\t\t\t\tconst minutes = recordedDuration / 60\r\n\t\t\t\t\tconst seconds = recordedDuration % 60\r\n\t\t\t\t\tconst milliseconds = (seconds % 1) * 1000\r\n\t\t\t\t\t//const recordString = (minutes>>0) + ':' + (seconds>>0)\r\n\t\t\t\t\tconst recordString = (minutes>>0) + ':' + (seconds>>0) + ':' + (milliseconds>>0)\r\n\t\t\t\t\tsetFeedback(recordString, false)\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\t\r\n\t\t\t\t\t// No face was detected on either user\r\n\t\t\t\t\tif (!haveFacesBeenDetected || !predictions)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Need to show instructions to the user...\r\n\t\t\t\t\t\t// as no face can be detected\r\n\t\t\t\t\t\tsetFeedback( getHelp( Math.floor( counter * 0.01 )  ))\r\n\t\t\t\t\t\t// }else if (tickerTape.length){\r\n\t\t\t\t\t\t// \tsetFeedback(tickerTape)\r\n\t\t\t\t\t\t// \t// setFeedback(`PITCH:${Math.ceil(360*prediction.pitch)} ROLL:${Math.ceil(360*prediction.roll)} YAW:${Math.ceil(360 * prediction.yaw)} MOUTH:${Math.ceil(100*lipPercentage)}% - ${person.instrumentName}`)\r\n\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\t// Faces found so show the next set of instructions\r\n\t\t\t\t\t\tsetFeedback( getInstruction( Math.floor( counter * 0.01 ) ))\r\n\t\t\t\t\t\t// setFeedback(`Look at me and open your mouth`)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t\t// update the keyboard if it is available\r\n\t\t\t\tif (musicalKeyboard)\r\n\t\t\t\t{\r\n\t\t\t\t\tmusicalKeyboard.redraw()\r\n\t\t\t\t\t// this is updated previously by the playPersonAudio\r\n\t\t\t\t\t// method that set's the general state of the keyboard\r\n\t\t\t\t\tdrawElement( canvasContext, musicalKeyboard.canvas, 40, 40, false )\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\t// finallyu reset this flag\r\n\t\t\t\tif (beatJustPlayed)\r\n\t\t\t\t{\r\n\t\t\t\t\tbeatJustPlayed = false\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log(counter, \"update\", {predictions, tickerTape, userLocated, cameraLoading} )\r\n\r\n\t\t\t}, shouldUpdate )\r\n\r\n\t\t\t// Metronome -----------------------------------------------------------------\r\n\t\t\ttimer = startTimer( ( values )=>{\r\n\t\t\t\r\n\t\t\t\tconst { \r\n\t\t\t\t\tdivisionsElapsed,\r\n\t\t\t\t\tbar, bars, \r\n\t\t\t\t\tbarsElapsed, timePassed, \r\n\t\t\t\t\telapsed, expected, drift, level, intervals, lag} = values\r\n\t\t\t\t\r\n\t\t\t\tif (recordRequested)\r\n\t\t\t\t{\r\n\t\t\t\t\trecordRequested = false\r\n\t\t\t\t\tstartRecordingAudio()\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tif (recordCancelRequested)\r\n\t\t\t\t{\r\n\t\t\t\t\trecordCancelRequested = false\r\n\t\t\t\t\tstopRecordingAudio()\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If there is a attract mode supervisor\r\n\t\t\t\t// we update it every tick so that it can \r\n\t\t\t\t// control this class automatically\r\n\t\t\t\tif (useAutomator && automator)\r\n\t\t\t\t{\r\n\t\t\t\t\tautomator.tick(elapsed, getBarProgress() )\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tconst isBar = divisionsElapsed % 4 === 0\r\n\t\t\t\t// TODO: The timer is a good place to determine if the computer\r\n\t\t\t\t// \t\t is struggling to keep up with the program so we can reduce\r\n\t\t\t\t// \t\t the visual complexity of the ui and remove some predictions too\r\n\t\t\t\t// \t\t in order to try and maintain decent performance\r\n\r\n\t\t\t\t// lag\r\n\t\t\t\tstatistics.lag = lag\r\n\t\t\t\tstatistics.drift = drift\r\n\r\n\t\t\t\t// The app has been running for over x amount of time\r\n\t\t\t\t// if (elapsed > TIME_BEFORE_REFRESH)\r\n\t\t\t\t// {\r\n\t\t\t\t// \t// so we may want to refresh if the time is appropriate?\r\n\t\t\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// nothing to play!\r\n\t\t\t\tif (ui.muted)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Play metronome!\r\n\t\t\t\tif ( ui.metronome && bars && isBar )\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO: change timbre for first & last stroke\r\n\t\t\t\t\tconst metronomeLength = 0.09\r\n\t\t\t\t\t// click for 3 then clack\r\n\t\t\t\t\tkit.clack(metronomeLength, bars % 4 === 0 ? 0.2 : 0.1 )\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// console.log(barsElapsed, \"timer\", timer)\r\n\r\n\t\t\t\t// const notesPlayed = []\r\n\t\t\t\r\n\t\t\t\t// sing note and draw to canvas\r\n\t\t\t\tif( ui.quantise )\r\n\t\t\t\t{\r\n\t\t\t\t\t// update game pads - events are caught elsewhere\r\n\t\t\t\t\tif (ui.useGamePad && gamePad && gamePad.connected) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgamePad.update()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i=0, l=people.length; i<l; ++i )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst person = getPerson(i)\r\n\t\t\t\t\t\tconst stuff = playPersonAudio( person )\r\n\t\t\r\n\t\t\t\t\t\t// use person 1's eyes to control other stuff too?\r\n\t\t\t\t\t\t// in this case the direction of the pan in disco mode\r\n\t\t\t\t\t\tif (i===0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// stuff.eyeDirection\r\n\t\t\t\t\t\t\tcameraPan.x = stuff.eyeDirection\r\n\t\t\t\t\t\t\tcameraPan.y = stuff.pitch\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// save data to an array to record\r\n\t\t\t\t\t\t// personParameters.push(stuff)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\r\n\t\t\t\t// to add swing to the beats\r\n\t\t\t\t// easeOutQuart(divisionsElapsed%16 / 16)\r\n\t\t\t\t// && isBar\r\n\t\t\t\t// play some accompanyment music on every note\r\n\t\t\t\t// (as we use 16 divisions for quarter notes)\r\n\t\t\t\t// FIXME: Just expand the patterns with longer gaps\r\n\t\t\t\tif ( ui.backingTrack  )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst slower = Math.floor( getBPM() * 0.01 ) + 1\r\n\t\t\t\t\tif ( divisionsElapsed % slower === 0 )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//console.log(slower,barsElapsed, getBPM() * 0.001,  divisionsElapsed % slower )\r\n\t\t\t\t\t\tconst kick = playNextPart( patterns.kick, kit.kick )\r\n\t\t\t\t\t\tconst snare = playNextPart( patterns.snare, kit.snare )\r\n\t\t\t\t\t\tconst hat = playNextPart( patterns.hat, kit.hat )\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.error(\"backing|\", {kick, snare, hat })\r\n\t\t\t\t\t// todo: also MIDI beats on channel 16?\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (playing)\r\n\t\t\t\t{\r\n\t\t\t\t\t// timePassed\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (midiAvailable && midi)\r\n\t\t\t\t{\r\n\t\t\t\t\t// value=0] {number} The MIDI beat to cue to (integer between 0 and 16383).\r\n\t\t\t\t\t//midi.setSongPosition( getBarProgress() * 16383 , {})\r\n\t\t\t\t\t//midi.sendClock( )\r\n\t\t\t\t\t//console.log(midi)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we can actually play a midi file here as an accompanying voice!\r\n\t\t\t\tif (midiPerformance)\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tconst commands = midiPerformance.getNextCommands() || []\r\n\t\t\t\t\tcommands.forEach( command => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(\"MIDI Command\",command.toString() )\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tswitch(command.type)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase COMMAND_NOTE_ON:\r\n\t\t\t\t\t\t\t\t// playTrack( note, 0, audioContext )\r\n\t\t\t\t\t\t\t\t//samplePlayer.noteOn()\r\n\t\t\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\t\t\tcase COMMAND_NOTE_OFF:\r\n\t\t\t\t\t\t\t\t// playTrack( note, 0, audioContext )\r\n\t\t\t\t\t\t\t\t//samplePlayer.noteOff()\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\tbeatJustPlayed = true\r\n\r\n\t\t\t}, convertBPMToPeriod( getState('bpm') ) )\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\t// start()\r\n\t\treturn start\r\n\t} \r\n\r\n\t/**\r\n\t * load : load the files required for this app\r\n\t * @param {Object} settings Configuration object\r\n\t * @param {Function} progressCallback optional method to call on load progress\r\n\t * @returns {Promise<Boolean>} TensorFlow model load promise\r\n\t */\r\n\tconst load = async (settings, progressCallback) => {\r\n\r\n\t\tconst loadTotal = 5\r\n\t\tlet loadIndex = 0\r\n\t\t\r\n\t\tprogressCallback(loadIndex++/loadTotal, \"Loading Brains\")\r\n\r\n\t\t// pick the body parts and return the method used to create them\r\n\t\tconst loadModel = await loadMLModel(settings.model)\r\n\r\n\t\tprogressCallback(loadIndex++/loadTotal, \"Loaded Brains\" )\r\n\t\t\t\t\r\n\t\t// set up the instrument selctor etc\r\n\t\tsetupInterface( ui )\r\n\r\n\t\tprogressCallback(loadIndex++/loadTotal, \"Connecting wires\")\r\n\r\n\t\t// you can toggle any checkbox like...\r\n\t\t// toggles.quantise.setAttribute('checked', value)\r\n\r\n\t\t// Connect up sone buttons?\r\n\t\ttoggles.quantise = setToggle( \"button-quantise\", status =>{\r\n\t\t\tsetState( 'quantise', status )\r\n\t\t\tsetToast(\"Quantise \" + (ui.quantise ? 'enabled' : 'disabled')  )\r\n\t\t}, ui.quantise)\r\n\t\t\r\n\t\t// #button-settings\r\n\t\ttoggles.settings = setToggle( \"button-settings\", status =>{ \r\n\t\t\tsetState( 'showSettings', status )\r\n\t\t\tsetToast(\"Settings \" + (status ? 'enabled' : 'disabled')  )\r\n\t\t}, ui.showSettings )\r\n\r\n\t\t// Connect up sone buttons?\r\n\t\ttoggles.metronome = setToggle( \"button-metronome\", status =>{\r\n\t\t\tsetState( 'metronome', status )\r\n\t\t\tsetToast(\"Metronome \" + (ui.metronome ? 'enabled' : 'disabled')  )\r\n\t\t}, ui.metronome )\r\n\r\n\t\ttoggles.backingTrack = setToggle( \"button-percussion\", status =>{\r\n\t\t\t// change drums!\r\n\t\t\tsetRandomDrumPattern()\r\n\t\t\tsetState( 'backingTrack', status )\r\n\t\t\tsetToast( ui.backingTrack ? \"Backing track starting\" : \"Ending Backing Track\" )\r\n\t\t}, ui.backingTrack )\r\n\r\n\t\ttoggles.spectrogram = setToggle( \"button-spectrogram\", status =>{\r\n\t\t\tsetState( 'spectrogram', status )\r\n\t\t\tsetToast(\"Spectrogram \" + (ui.spectrogram ? 'enabled' : 'disabled')  )\r\n\t\t}, ui.spectrogram )\r\n\r\n\t\ttoggles.speak = setToggle( \"button-speak\", status =>{\r\n\t\t\tkit.cowbell()\r\n\t\t\tsetState( 'speak', status )\r\n\t\t\tsetToast(\"Speaking \" + (ui.speak ? 'enabled' : 'disabled')  )\r\n\t\t}, ui.speak )\r\n\r\n\t\t// Synch button\r\n\t\t// draw video onto canvas every frame (transparent doesn't have to be true then)\r\n\t\ttoggles.synch = setToggle( \"button-sync-video\", status =>{\r\n\t\t\t// I inverted the state for UX\r\n\t\t\tsetState( 'synch', !status )\r\n\t\t\tsetToast( status ? `Video Frame Synching enabled` : 'disabled Frame Synch') \r\n\t\t}, ui.synch )\r\n\r\n\t\t// Clear canvas between frames\r\n\t\t// NB. \tthere are 2 modes - video frame copy \r\n\t\t// \t\ttransparent canvas with video beneath\r\n\t\ttoggles.clear = setToggle( \"button-clear\", status =>{ \r\n\t\t\tsetState( 'clear', !ui.clear )\r\n\t\t\tsetToast( status ? \"Hiding video enabled\" : 'Hiding video disabled') \r\n\t\t}, ui.clear )\r\n\r\n\t\t// toggle mute\r\n\t\ttoggles.muted = setToggle( \"button-mute\", status =>{ \r\n\t\t\tsetState( 'muted', !ui.muted )\r\n\t\t\tsetToast(ui.muted  ? 'Volume Muted' : 'Unmuted' )\r\n\t\t}, ui.muted )\r\n\r\n\t\t// FIXME: This does not work after refresh\r\n\t\t// let discoPreviousState\r\n\t\t// MTV : Special disco mode!\r\n\t\ttoggles.disco = setToggle( \"button-disco\", status =>{ \r\n\t\t\tsetState( 'disco', !ui.disco )\r\n\t\t\r\n\t\t\t/*setState( 'masks', status )\r\n\t\t\tif (status)\r\n\t\t\t{\r\n\t\t\t\t// ENABLE disco mode\r\n\t\t\t\t// setState( 'clear', false )\r\n\t\t\t\tui.clear = false\r\n\t\t\t\t\r\n\t\t\t\t// save previous state to go back to later...\r\n\t\t\t\tdiscoPreviousState = fetchPlayerOptions(['drawMask','drawNodes','drawMesh','meshOnSing'])\r\n\t\t\t\t\r\n\t\t\t\t//console.log(ui.masks,\"MTV save old state\", discoPreviousState)\r\n\t\t\t\t// setPlayerOption(\"drawMesh\", ui.masks)\r\n\t\t\t\tsetPlayerOptions( {drawMask:true, drawNodes:false, drawMesh:false, meshOnSing:true})\r\n\t\t\t\t\r\n\t\t\t\tsetToast('Disco mode enabled!' )\r\n\t\t\t}else{\r\n\t\t\t\t// setState( 'clear', true )\r\n\t\t\t\tui.clear = true\r\n\t\t\t\t// setPlayerOption(\"drawNodes\", ui.masks)\r\n\t\t\t\t//setPlayerOptions( {drawNodes:true, drawMesh:false})\r\n\t\t\t\tsetPlayerOptions( discoPreviousState )\r\n\t\t\t\t//console.log(ui.masks,\"MTV load old state\", discoPreviousState)\r\n\t\t\t\tdiscoPreviousState = null\r\n\t\t\t\tsetToast('Disco mode disabled!' )\r\n\t\t\t}*/\r\n\t\t}, ui.disco )\r\n\r\n\t\t// Overlays ----\r\n\t\t\r\n\t\t\t// toggleVideoVisiblity( !isVideoVisible() )\r\n\r\n\t\t// All person  overlays... should be dropdown?\r\n\t\t// Show / hide the face and stuff\r\n\t\ttoggles.overlay = setToggle( \"button-overlay\", status => { \r\n\t\t\tsetState( 'overlays', !ui.overlays )\r\n\t\t}, ui.overlays )\r\n\r\n\t\t// Face meshes\r\n\t\ttoggles.masks = setToggle( \"button-meshes\", status =>{ \r\n\t\t\tsetState( 'masks', !ui.masks )\r\n\t\t\tsetPlayerOption(\"drawMask\", ui.masks)\r\n\t\t}, ui.masks )\r\n\r\n\t\t// hide / show eye overlays\r\n\t\t// NB. this gets hidden in kid mode?\r\n\t\ttoggles.eyes = setToggle( \"button-eyes\", status => {\r\n\t\t\tsetState( 'eyes', !ui.eyes )\r\n\t\t\tsetPlayerOption(\"drawEyes\", ui.eyes)\r\n\t\t}, ui.eyes )\r\n\r\n\t\r\n\t\t// show / hide the text\r\n\t\ttoggles.text = setToggle( \"button-subtitles\", status => {\r\n\t\t\tsetState( 'text', !ui.text )\r\n\t\t} )\r\n\r\n\t\t// TODO : Set some up with double functions if held\r\n\t\t// Recording bars by holding...\r\n\t\t// toggles.recordAudio = setToggle( \"button-record-audio\", \r\n\t\ttoggles.recordAudio = setPressureToggle( \r\n\t\t\t\"button-record-audio\",\r\n\t\t\ttap =>{ \r\n\t\t\t\tdrawMousePressure( 1, ui.mouseHoldDuration )\r\n\t\t\t\ttoggleRecording( false )\r\n\t\t\t},\r\n\t\t\thold =>{ \r\n\t\t\t\tdrawMousePressure( 1, ui.mouseHoldDuration )\r\n\t\t\t\ttoggleRecording( true )\r\n\t\t\t},\r\n\t\t\tholding => drawMousePressure( holding, ui.mouseHoldDuration ),\r\n\t\t\tfalse \r\n\t\t)\r\n\r\n\t\t//console.error(\"toggles\", toggles)\r\n\r\n\t\tsetButton( \"button-photograph\", event => {\t\r\n\t\t\t// TODO: also copy to clipboard?\r\n\t\t\t// copyCanvasToClipboard()\r\n\t\t\tappendPhotographElement()\r\n\t\t\tsetToast('Photograph taken!' )\r\n\t\t\tkit.cowbell()\r\n\t\t} )\r\n\t\r\n\t\t// reset to factory defaults\r\n\t\tsetButton( \"button-reset\", status =>{ \r\n\t\t\tui = {...defaultOptions}\r\n\t\t\trefreshState()\r\n\t\t})\r\n\r\n\t\t// Button video loads random instruments for all\r\n\t\tsetButton( \"button-video\", status => loadRandomInstrument() )\r\n\t\t\r\n\t\t\r\n\t\t// change behviours for certain buttons to allow for holding\r\n\t\t// NB. this is *not* good for accessibility as it cannot be \r\n\t\t// easily duplicated by the keyboard - hence why\r\n\t\t// there are special keyboard modifiers for performing\r\n\t\t// these actions solely with the keyboard. How to instruct the \r\n\t\t// user about these additional actions is a challenge\r\n\t\tsetPressureButton( \"link-about\", \r\n\t\t\ttap => {\r\n\t\t\t\tif (kit){\r\n\t\t\t\t\tkit.cowbell()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thold => {\r\n\t\t\t\t// Easter egg\r\n\t\t\t},\r\n\t\t\tpercentHeld => {}\r\n\t\t)\r\n\r\n\t\t// Upload MIDI File! Secret functions\r\n\t\t//const uploadMIDIForm = document.getElementById(\"midi-file\") \r\n\t\tconst uploadMIDIFileInput = document.getElementById(\"midi-upload\") \r\n\r\n\t\tsetButton(\"button-midi-upload\", click => {\r\n\t\t\tconst file = uploadMIDIFileInput.files[0]\r\n\t\t\tuserUploadMediaFile( file )\r\n\t\t}, 'click', true)\r\n\t\t\r\n\t\tuploadMIDIFileInput.addEventListener( \"change\", async (e) => {\r\n\t\t\tconst file = uploadMIDIFileInput.files[0] \r\n\t\t\tuserUploadMediaFile( file )\r\n\t\t\t// await userUploadMediaFile( file )\r\n\t\t})\r\n\r\n\t\t// allow files to be dragged over the screen\r\n\t\tconnectDropZone( userUploadMediaFile )\r\n\r\n\t\t// set the master tempo\r\n\t\tselects.tempo = connectSelect( 'select-tempo', option => {\r\n\t\t\tconst tempo = parseInt( option.innerHTML )\r\n\t\t\tupdateTempo(tempo)\r\n\t\t\tsetBPM(tempo)\r\n\t\t} )\r\n\r\n\t\tselects.eyes = connectSelect( 'select-eyes', option => {\r\n\t\t\tconst items = option.value.split(\",\")\r\n\t\t\tconst eye = convertOptionToObject(items)\r\n\t\t\t//console.log(\"Setting eyes\", eye, {items} )\r\n\t\t\tsetPlayerOptions({ \r\n\t\t\t\tscleraRadius:eye.s,\r\n\t\t\t\tirisRadius:eye.i,\r\n\t\t\t\tpupilRadius:eye.p,\r\n\t\t\t\teyeRatio:eye.a || 1\r\n\t\t\t})\r\n\t\t} )\r\n\r\n\t\t// set the master sound font\r\n\t\tselects.samples = connectSelect( 'select-samples', async (option) => {\r\n\t\t\tconst instrumentPack = option.value\r\n\t\t\tsetPlayerOptions({ instrumentPack })\r\n\t\t\tconst instrument = await reloadInstrument()\r\n\t\t\tsetState( 'instrumentPack', instrumentPack )\r\n\t\t\t//console.log(\"Loaded sounds\",{instrumentPack, instrument}, getPerson(0).options.instrumentPack )\r\n\t\t} )\r\n\r\n\t\tselects.palette = connectSelect( 'select-palette', option => {\r\n\t\t\tconst items = option.value.split(\",\")\r\n\t\t\tconst palette = convertOptionToObject(items)\r\n\t\t\t\r\n\t\t\tsetPlayerOptions({\r\n\t\t\t\tsaturation:palette.s,\r\n\t\t\t\tluminosity:palette.l,\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\t// connect the reverb selector to the reverb chooser\r\n\t\tselects.reverbs = connectReverbControls( async (option) => {\r\n\t\t\tif (option && option.value)\r\n\t\t\t{\r\n\t\t\t\tconst url = option.value\r\n\t\t\t\t//console.log(option.value, {url, option})\r\n\t\t\t\tconst reverb = await setReverb(url)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(option, option.previousSibling )\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\r\n\t\t// Track mouse coords on canvas for use with mouse cursor thingy\r\n\t\twatchMouseCoords( document.getElementById('control-panel'), coords =>{\r\n\t\t\t//console.log(\"Canvas Mouse\",coords)\r\n\t\t} )\r\n\t\t\r\n\t\t\t\r\n\t\ttry{\r\n\t\t\t// Attempt to Lazy load\r\n\t\t\t// Load in our instruction tool kit\r\n\t\t\tconst instructionTools = await import('./models/instructions')\r\n\r\n\t\t\t// save to local space\r\n\t\t\tgetInstruction = instructionTools.getInstruction\r\n\t\t\tgetHelp = instructionTools.getHelp\r\n\t\t\tprogressCallback(loadIndex++/loadTotal, \"Instructions Found\")\r\n\t\t\r\n\t\t}catch(error){\r\n\t\t\t// backup plan for failed JS loads\r\n\t\t\tgetInstruction = getHelp = i => ''\r\n\t\t\tprogressCallback(loadIndex++/loadTotal, \"Instructions failed to load\")\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t\t\r\n\t\t\t// create our reporter for analytics\r\n\t\t\tconst analyticTools = await import('./reporting')\r\n\t\t\tsetupReporting = analyticTools.setupReporting\r\n\t\t\ttrack = analyticTools.track\r\n\t\t\ttrackError = analyticTools.trackError\r\n\t\t\ttrackExit = analyticTools.trackExit\r\n\t\t\treporter = setupReporting(\"InterFACE\")\r\n\r\n\t\t\tprogressCallback(loadIndex++/loadTotal, \"Reporter assigned\")\r\n\t\t\t\r\n\t\t} catch (error) {\r\n\r\n\t\t\tprogressCallback(loadIndex++/loadTotal, \"Reporting blocked\")\r\n\t\t}\r\n\t\t\r\n\t\t// this takes any existing state from the url and updates our front end\r\n\t\t// so that any previously saved settings show as if the user is continuing\r\n\t\t// their project from before - same buttons selected etc\r\n\t\trefreshState()\r\n\r\n\t\t// upodate the load progress\r\n\t\tprogressCallback(loadIndex++/loadTotal, \"Assembled!\")\r\n\t\t\r\n\t\t// Load tf model and wait\r\n\t\t// this gets returned then used an the update method\r\n\t\t// canvasContext || \r\n\t\tconst elementToAnalyse = inputElement\r\n\r\n\t\treturn loadModel(elementToAnalyse, settings, progressCallback)\r\n\t}\r\n\r\n\t// We avoid setting feedback until part 2 of loading...\r\n\t//setFeedback(\"Initialising...<br> Please wait\")\r\n\tonLoadProgress && onLoadProgress(0, \"Loading... Please wait\")\r\n\r\n\t\r\n\t/**\r\n\t * loadExtras : load uneccessary files used later in this app\r\n\t */\r\n\tlet extrasLoaded = false\r\n\tconst loadExtras = async ()=> {\r\n\r\n\t\tif (extrasLoaded)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\textrasLoaded = true\r\n\t\t\r\n\t\ttry{\r\n\t\t\t// load the share menu :)\r\n\t\t\tconst sharer = await import('share-menu')\r\n\t\t\tbody.classList.add(\"sharing-enabled\")\r\n\t\t}catch(error){\r\n\t\t\t// disable the share menu...\r\n\t\t\tbody.classList.add(\"sharing-disabled\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// loop until loaded...\r\n\tconst loadingLoop = async () => {\r\n\r\n\t\t//console.log(\"loading\", {isLoading, userLocated, cameraLoading})\r\n\t\tif ( isLoading )\r\n\t\t{ \r\n\t\t\trequestAnimationFrame( loadingLoop ) \r\n\t\t}else{\r\n\r\n\t\t\tif (ultimateFailure)\r\n\t\t\t{\r\n\t\t\t\thideLoading()\r\n\t\t\t\tbody.classList.add(\"failure\")\r\n\t\t\t\t// LOAD CANCELLED FATAL ERROR\r\n\t\t\t}else{\r\n\t\t\t\tonLoaded()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * looking for a face to figure out...\r\n\t * wait for the user - show some visual cues via classes\r\n\t * change this depending on whether a face is detected\r\n\t * just wait until a user is found - this is subroutine that causes\r\n\t * no music or SPECIAL effects but can be used to guide the users\r\n\t */\r\n\tconst lookForUser = () => {\r\n\r\n\t\tconst SEARCHING_FOR_USERS_CLASS = \"searching-for-user\"\r\n\t\tconst waitForUser = () => {\r\n\t\t\tif (!userLocated)\r\n\t\t\t{\r\n\t\t\t\trequestAnimationFrame( waitForUser ) \r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\t// change this depending on whether a face is detected\r\n\t\t\t\tspeak(\"Hello! Open your mouth to begin!\")\r\n\t\t\t\t\r\n\t\t\t\tbody.classList.toggle(SEARCHING_FOR_USERS_CLASS, false)\r\n\t\t\t\t// may as well create a user?\r\n\t\t\t\treturn getPerson(0)\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t\r\n\t\tbody.classList.toggle(SEARCHING_FOR_USERS_CLASS, true)\r\n\t\twaitForUser()\r\n\t}\r\n\t\r\n\t/**\r\n\t * Loading COMPLETED\r\n\t */\r\n\tconst onLoaded = async () => {\r\n\r\n\t\tbody.classList.toggle(\"loading\", false)\r\n\t\tbody.classList.toggle(\"loaded\", true)\r\n\t\tmain.setAttribute(\"aria-busy\", false)\r\n\t\t\r\n\t\t// monitor keyboard events\r\n\t\tregisterKeyboard()\r\n\t\t\r\n\t\tspeak(\"I am looking for your face\")\r\n\t\t\r\n\t\t// wait here until a user shows their face...\r\n\t\tconst user = await lookForUser()\r\n\r\n\t\t// focus app?\r\n\t\tonLoadProgress && onLoadProgress(1,\"complete\", true)\r\n\t\t\r\n\t\t// finish promising with some public method to access\r\n\t\tresolve( constructPublicClass( { \r\n\t\t\tuser,\r\n\t\t\tsetState,\r\n\t\t\tsetRandomDrumPattern,\r\n\t\t\tsetPlayerOption, setPlayerOptions,\r\n\t\t\tgetPerson, getPlayers, getBar, getBars,\r\n\t\t\tfetchPlayerOptions,setPlayerOption, setPlayerOptions,\r\n\t\t\tlanguage, \r\n\t\t\tisUserActive:()=>userActive,\r\n\t\t\toptions:ui, \r\n\t\t\t...information,\r\n\t\t\tsetAutomator,\r\n\t\t\tsetBPM, setMasterVolume,\r\n\t\t\tchangeDrumPattern,\r\n\t\t\tloadInstruments,\r\n\t\t\tloadRandomInstrument, previousInstrument, nextInstrument,\r\n\t\t\ttoggleRecording\r\n\t\t} ) )\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {MIDITrack} midiTrack \r\n\t */\r\n\t const onMIDIPerformanceAvailable = (midiTrack) => {\r\n\t\tconst matchingCommands = midiTrack.getMatchingCommands([\"noteOn\",\"noteOff\",\"programChange\"]) \r\n\t\tif (matchingCommands && matchingCommands.length)\r\n\t\t{\r\n\t\t\tsavedPerformance = matchingCommands\r\n\t\t\t// console.log(\"onMIDIPerformanceAvailable\", midiTrack, matchingCommands )\r\n\t\t\t// console.log(\"onMIDIPeconstrformanceAvailable\", midiTrack.toString(), midiTrack.toString() )\r\n\t\t}\r\n\r\n\t\tconst midiFile = createMIDIFileFromTrack( midiTrack, getBPM() )\r\n\t\tsaveMIDIFile( midiFile, \"./local.mid\")\r\n\t}\r\n\r\n\r\n\t// ---------------------------------------------------------\r\n\r\n\t/**\r\n\t * get player quantity and mouse event in one click\r\n\t * @param {*} state \r\n\t * @param {Number} showTextAfter \r\n\t * @returns \r\n\t */\r\n\tconst showPlayerSelectionScreen = async ( state={}, showTextAfter=60000 ) => {\r\n\r\n\t\t// preload completed and now we show the ui\r\n\t\t// for selecting regular or multi-face mode!\r\n\t\tlet timeOut = setTimeout(()=>{\r\n\t\t\tsetToast( \"Please select how many players you want to play\" )\r\n\t\t\ttimeOut = setTimeout(()=>setToast( \"by clicking either button\" ), 15000 )\r\n\t\t}, showTextAfter )\r\n\r\n\t\t// clear help fields\r\n\t\tsetFeedback(\"\")\r\n\t\tsetToast(\"\")\r\n\r\n\t\thideLoading()\r\n\r\n\t\t// Show the player selection screen!\r\n\t\tconst results = await showPlayerSelector(options, state)\r\n\t\t\r\n\t\t// console.error(\"FWSFEW\",{ players, advancedMode, automationMode } )\r\n\t\tuseAutomator = results.automationMode\r\n\t\tsetState(\"duet\", results.players > 1 )\r\n\t\tsetState(\"advancedMode\", results.advancedMode )\r\n\t\tsetState(\"automationMode\", results.automationMode)\r\n\t\t\r\n\t\tclearInterval( timeOut )\r\n\t\tsetToast( \"\" )\r\n\t\t\r\n\t\t// continue loading...\r\n\t\tshowLoading()\r\n\t\treturn results\r\n\t}\r\n\r\n\r\n\t// ---------------------------------------------------------\r\n\t// BEGIN APP HERE!\r\n\t// ---------------------------------------------------------\r\n\r\n\tconst options = Object.assign( {}, DEFAULT_TENSORFLOW_OPTIONS, { maxFaces:ui.duet ? 2 : 1 } )\r\n\t\r\n\tlet havePlayersBeenSelected = false\r\n\r\n\t// NB. To allow this to happen at the same time...\r\n\t// we show selection screen while stuff loads in background\r\n\tshowPlayerSelectionScreen( ui ).then( r=>{ \r\n\t\thavePlayersBeenSelected = true \r\n\t})\r\n\r\n\t// now load dependencies and show progress\r\n\tconst ML = load(options, (progress, message) => {\r\n\t\t\r\n\t\t// console.log(\"waiting for havePlayersBeenSelected?\", havePlayersBeenSelected)\r\n\r\n\t\t//console.log(\"Interface:load -> onLoadProgress\", {progress, message })\r\n\r\n\t\tonLoadProgress && onLoadProgress(progress / 2, message)\r\n\r\n\t}).then( async update =>{ \r\n\r\n\t\t//console.log( \"Interface:half loaded\" )\r\n\r\n\t\tonLoadProgress && onLoadProgress(0.45, \"Models available\", true)\r\n\r\n\t\t// we can sneakily back ground load in some data\r\n\t\t// whilst the user hits the button!\r\n\t\trequestAnimationFrame( loadExtras )\r\n\t\t// body.classList.toggle(\"loading\", false)\r\n\t\t\r\n\t\t// attempt to get player quantity and mouse event in one\r\n\t\t// wait here until havePlayersBeenSelected = true\r\n\t\tawait ( new Promise( resolve =>{\r\n\t\t\tconst wait = a => {\r\n\t\t\t\t//console.log(\"waiting for havePlayersBeenSelected\", havePlayersBeenSelected)\r\n\t\t\t\tif (havePlayersBeenSelected)\r\n\t\t\t\t{\r\n\t\t\t\t\t//console.log( \"Interface:Players selected\" , onLoadProgress )\r\n\t\t\t\t\tonLoadProgress && onLoadProgress( 0.5, \"Players Selected\", false)\r\n\t\t\t\t\tresolve(true)\r\n\t\t\t\t} else{\r\n\t\t\t\t\trequestAnimationFrame( wait )\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\twait()\r\n\t\t}) ) \r\n\r\n\t\r\n\t\t// we are loading asynchronously due to the requestFrames above\r\n\t\t// load settings from store here too?\r\n\t\t// set up some extra options from query strings\r\n\t\t// any custom overrides (shouldn't be needed : use query strings)\r\n\t\tconst startApp = await setup( update, options, (progress,message) => {\r\n\t\t\t\r\n\t\t\t//console.log(\"Loading B Side\", progress )\r\n\t\t\tonLoadProgress && onLoadProgress(0.5 + progress/2, message, false)\r\n\t\t})\r\n\t//\r\n\t\r\n\tconsole.log(\"loadingstartApp\", {startApp, update, options })\r\n\r\n\t\treturn startApp\r\n\r\n\t}).then( startPhotoSYNTH => {\r\n\r\n\t\t//onLoadProgress && onLoadProgress(1, \"\", true)\r\n\t\r\n\t\t// let's launch it after it has resolved...\r\n\t\tstartPhotoSYNTH()\r\n\r\n\t\t// setup done!\r\n\t\tfocusApp()\r\n\r\n\t\t// wait for stuff to load / be available\r\n\t\tloadingLoop()\r\n\r\n\t\t// watch for users getting uninterested or leave the browser\r\n\t\t// NB. this ONLY affects machines that have hover events\r\n\t\t// so not mobiles!\r\n\t\tif (capabilities.mouse)\r\n\t\t{\r\n\t\t\tinteract( \r\n\t\t\t\tdocument.getElementById(\"button-video\"),\r\n\t\t\t\tfunction onActive(){\r\n\t\t\t\t\tui.autoHide && body.classList.toggle(\"user-active\", true)\r\n\t\t\t\t\tui.autoHide && body.classList.toggle(\"user-inactive\", false)\r\n\t\t\t\t\tuserActive = true\r\n\t\t\t\t}, \r\n\t\t\t\tfunction onInactive(){\r\n\t\t\t\t\tui.autoHide && body.classList.toggle(\"user-active\", false)\r\n\t\t\t\t\tui.autoHide && body.classList.toggle(\"user-inactive\", true)\r\n\t\t\t\t\tuserActive = false\r\n\t\t\t\t}\r\n\t\t\t\t// , timeout\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t// Exit & save all cookies!\r\n\t\twindow.onbeforeunload = ()=>{\r\n\r\n\t\t\tconst saveSession = Object.assign({}, information, {\r\n\t\t\t\tlastTime:Date.now(),\r\n\t\t\t\tcount:information.count++\r\n\t\t\t})\r\n\t\t\tstore.setItem('info', saveSession)\r\n\t\t\t//store.setItem(person.name, {instrument})\r\n\t\t\t\r\n\t\t\t// save ui settings in cookie too?\r\n\t\t\ttrackExit()\r\n\t\t\tsetToast(\"bye bye!\")\r\n\t\t\tsetFeedback(\"<strong>I hope you had fun!</strong>\")\r\n\t\t}\r\n\r\n\t\t// document.addEventListener( \"contextmenu\", (e) => {\r\n\t\t//     console.log(e)\r\n\t\t// })\r\n\r\n\t\t// TODO: if this is a desktop?\r\n\t\twindow.oncontextmenu = () => {\r\n\t\t\t// reset instructions\r\n\t\t\tcounter = 0\r\n\t\t\t// restart counter?\r\n\t\t\t//return false     // cancel default menu\r\n\t\t}\r\n\r\n\t\t// URL has been updated internally\r\n\t\twindow.addEventListener('popstate', (event) => {\r\n\t\t\t//console.log(\"location: \" + document.location + \", state: \" + JSON.stringify(event.state))\r\n\t\t})\r\n\r\n\t\t// window.addEventListener('deviceorientation' , event => {\r\n\t\t// \t//console.log(\"device orientation\", event)\r\n\t\t// })\r\n\t})\r\n\t.catch( error => {\r\n\r\n\t\t// show an on screen error message with the code\r\n\t\treject(error)\r\n\t\t// trackError('Esoteric interaction', error)\r\n\t})\r\n\t\t\r\n\t/**\r\n\t * Factory method for creating PhotoSYNTH instances\r\n\t * @param {Object} data - whatever\r\n\t * @returns {PhotoSYNTH} class populated with public methods and events\r\n\t */\r\n\tconst constructPublicClass = (data) => {\r\n\t\tconst app = new PhotoSYNTH(data)\r\n\t\tinstance = app\r\n\t\treturn instance\r\n\t}\r\n})","/**\r\n * This is a simple way to pass state from between pages without storing locally\r\n * bypassing the need for cookies or local storage or GDPR cookie messages.\r\n */\r\n\r\nimport { addToHistory, getLocationSettings } from './location-handler'\r\n\r\nlet state = null\r\nlet main\r\n\r\n/**\r\n * Adds classnames to the main element to indicate the current state\r\n */\r\n const setUIState = (key, value) => {\r\n\t// FIXME: filter these?\r\n\tmain.classList.toggle(`flag-${key}`, value )\r\n}\r\n\r\n/**\r\n * Instantiates the state object\r\n * @param {String} key Optional key to specify return\r\n * @returns {Object} current state\r\n */\r\nexport const getState = ( key ) => {\r\n\treturn key ? state[key] : state\r\n}\r\n\r\n/**\r\n * Instantiates the state object\r\n * @param {Object} defaultOptions initial state to overwrite\r\n * @param {HTMLElement} domElement HTML Element to add classes to\r\n * @returns {Object} current state\r\n */\r\nexport const createState = ( initialState, domElement ) => {\r\n\tstate = Object.assign( {}, initialState )\r\n\tmain = domElement || document.documentElement\r\n\treturn state\r\n}\r\n\r\n\r\n/**\r\n * Instantiates the state object\r\n * @param {Object} defaultOptions initial state to overwrite\r\n * @param {HTMLElement} domElement HTML Element to add classes to\r\n * @returns {Object} current state\r\n */\r\nexport const loadState = ( defaultOptions, domElement ) => {\r\n\treturn createState( getLocationSettings(defaultOptions) , domElement )\r\n}\r\n\r\n\r\n/**\r\n * refreshState : Refreshes the ui with any updated options\r\n * Adds classes to the domElement with all of the correct\r\n * classnames listed as option selection from the state\r\n * @returns {Object} current state\r\n */\r\nexport const refreshState = ()=>{\r\n\tObject.entries(state).forEach(([key,value])=>{\r\n\t\tsetUIState( key, value )\r\n\t})\r\n\treturn state\r\n}\r\n\r\nconst setElementCheckState = (element, value) => {\r\n\tif ( element )\r\n\t{\r\n\t\t//elements[key].checked = value\r\n\t\telement.setAttribute(\"checked\", value)\r\n\t\tif (element.parentNode.nodeName === \"LABEL\")\r\n\t\t{\r\n\t\t\telement.parentNode.classList.toggle(\"checked\", value )\r\n\t\t}\r\n\t\t//console.log( \"Setting state\", elements[key].checked , elements[key], {elements, ui, key} )\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * setState : set / store the state of the ui & update DOM\r\n * Allows you to set the state of the ui by passing in \r\n * individual options in key value pairs.\r\n * This is used in realtime button actions for example\r\n * @param {String} key state unique key ID\r\n * @param {String} value value to set the key to\r\n * @param {Array<HTMLElement>} elements buttons with toggleable attributes\r\n * @param {Boolean} saveHistory add to localStorage cache\r\n * @returns {Object} current state\r\n */\r\nexport const setState = ( key, value, elements=null, saveHistory=true )=>{\r\n\t\r\n\tstate[key] = value\r\n\t\r\n\tif (saveHistory)\r\n\t{\r\n\t\taddToHistory(state,key)\r\n\t}\r\n\r\n\t// set flag on main \r\n\tsetUIState( key, value )\r\n\r\n\t// NB. only send elements where the element itself wasnt\r\n\t// responsible for the origin of the event\r\n\t\r\n\t// also update select for checked and things? bit more complex?\r\n\t// see if there is a matching dom element???\r\n\tif (elements)\r\n\t{\r\n\t\tsetElementCheckState(elements[key], value)\r\n\t}\r\n\r\n\treturn state\r\n}\r\n\r\n// FIXME: Optimise this...\r\n// TODO: Batch state setting...\r\nexport const setStates = (states, key, value, elements=null, saveHistory=true ) => {\r\n\r\n\tstates.map( ({key,value}) => setUIState( key, value ) )\r\n\r\n}\r\n\r\n// TODO: Make a wrapper createStateStack\r\n// stack.setState( \"advancedMode\", advancedMode )","// https://www.chromestatus.com/features/5687444770914304\r\nconst TIME_OUT = 10000\r\n\r\nexport const hasSpeech = () =>{\r\n  return \"speechSynthesis\" in window\r\n}\r\n\r\n// we have to loop this with a settimout until voices are available...\r\nconst getVoices = async () => new Promise( (resolve,reject) => {\r\n\r\n  let voices \r\n  const startTime = Date.now()\r\n\r\n  const waitForVoices = () => {\r\n\r\n    voices = window.speechSynthesis.getVoices()\r\n\r\n    if (voices.length > 0)\r\n    {\r\n      resolve( voices )\r\n\r\n    }else{\r\n\r\n      // check to see we aren't wasting too much time\r\n      const elapsed = Date.now() - startTime\r\n\r\n      if (elapsed < TIME_OUT)\r\n      {\r\n        // in some ways this is a fudge factor as the voices\r\n        // aren't always known about on DOM available : LOOP\r\n        setTimeout(waitForVoices,0)\r\n\r\n      }else{\r\n        reject(\"No voices found\")\r\n      }\r\n    \r\n    }\r\n  }\r\n\r\n  waitForVoices()\r\n})\r\n\r\nconst getSpecificVoice = async (lang = \"en-US\", name =\"Zira\") =>{\r\n  const voices = getVoices()\r\n  const filtered = voices.filter( voice => {\r\n    // first we check to see if the language is the same...\r\n    return (voice.lang === lang && voice.name.indexOf(name) > -1 )\r\n  })\r\n  return filtered.length < 1 ? voices : filtered\r\n}\r\n\r\n////////////////////////////////////////////////////////////\r\n// Speak this out loud\r\n// rate     0.1 to 10\r\n// pitch    0 to 2\r\n////////////////////////////////////////////////////////////\r\nexport const say = async (text, interupt=true, volume=1, rate=1, pitch=1, lang, name ) =>{\r\n\r\n  return new Promise(  (resolve,reject)=>{\r\n\r\n    if (!hasSpeech)\r\n    {\r\n      reject(\"Speech tech not available\")\r\n\r\n    }else{\r\n\r\n      // now pause whilst we attempt to list...\r\n      const talk = async () => {\r\n\r\n        try{\r\n\r\n          const voices = (lang && name) ? await getSpecificVoice(lang, name) : await getVoices()\r\n          const person = voices[0]\r\n          const speech = new SpeechSynthesisUtterance()\r\n\r\n          speech.lang = 'en-US'\r\n          // set voice if specified\r\n          // Note: some voices don't support altering params\r\n          speech.voice = person\r\n          speech.voiceURI = 'native'\r\n\r\n          // watch for ending...\r\n          speech.onend = (event) => {\r\n            //console.log('Finished in ' + event.elapsedTime + ' seconds.')\r\n            speech.onend = null\r\n            resolve(event)\r\n          }\r\n\r\n          speech.onerror = (event) =>{\r\n            reject()\r\n          }\r\n\r\n          // 0 to 1\r\n          speech.volume = volume\r\n          // 0.1 to 10\r\n          speech.rate = rate\r\n          //0 to 2\r\n          speech.pitch = pitch\r\n          speech.text = text\r\n            // console.error(\"specific voices\", {\r\n            //   speech, lang,\r\n            //   name,\r\n            //   voices\r\n            // });\r\n\r\n          // kill any pending!\r\n          if (interupt)\r\n          {\r\n            window.speechSynthesis.cancel()\r\n          }\r\n          window.speechSynthesis.speak(speech)\r\n\r\n        }catch (error){\r\n\r\n          reject(error) \r\n        }\r\n      }\r\n      talk()\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Force the voice to stop speaking\r\n */\r\nexport const stopSpeaking = ()=>{\r\n\r\n  return window.speechSynthesis.cancel()\r\n}\r\n\r\n/**\r\n *  Is the voice currently speaking?\r\n * @returns true is voice is speaking or waiting to speak\r\n */\r\nexport const isVoiceActive = ()=>{\r\n\r\n  return window.speechSynthesis.pending\r\n}","\r\n// RECORD AUDIO\r\n\r\n// TODO: Add in AnalyzerNode and record the waveform data too if requested\r\n// If audio data available then push  it to the chunk array \r\nexport const record = (stream)=>{\r\n\r\n\tlet startTime = -1\r\n\tlet duration = -1\r\n\tlet recording = false\r\n\tlet dataArray = []\r\n\tlet mediaRecorder\r\n\r\n\tconst encoder = new Worker(\r\n        new URL('./encoder.worker.js', import.meta.url),\r\n        {type: 'module'}\r\n    )\r\n\t\r\n\tconst startRecording = stream => {\r\n\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\t\r\n\t\t\tif (recording)\r\n\t\t\t{\r\n\t\t\t\treturn reject(\"already recording\")\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmediaRecorder = new MediaRecorder(stream)\r\n\t\t\tmediaRecorder.onstart = event => {\r\n\t\t\t\tdataArray.length = 0\r\n\t\t\t\tstartTime = Date.now()\r\n\t\t\t\tduration = 0\r\n\t\t\t\tresolve({mediaRecorder,dataArray,stream})\r\n\t\t\t}\r\n\r\n\t\t\tmediaRecorder.ondataavailable = (ev) =>{ \r\n\t\t\t\tdataArray.push(ev.data)\r\n\t\t\t}\r\n\r\n\t\t\tmediaRecorder.onwarning = function(e) {\r\n\t\t\t\tconsole.warn('onwarning fired')\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmediaRecorder.onerror = (error) => {\r\n\t\t\t\tconsole.error('onerror fired',error.name,error)\r\n\t\t\t\tswitch(error.name) {\r\n\t\t\t\t\tcase 'InvalidState':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tcase 'OutOfMemory':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tcase 'IllegalStreamModification':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tcase 'OtherRecordingError':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tcase 'GenericError':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error('MediaRecorder Error', error);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\r\n\t\t\t// Convert the audio data in to blob after stopping the recording \r\n\t\t\tmediaRecorder.start()\r\n\t\t\trecording = true\t\r\n\t\t\t//console.log(\"recording\", {mediaRecorder, dataArray})\r\n\t\t})\r\n\t}\r\n\r\n\tconst stopRecording = ( ) => {\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\tif (!recording)\r\n\t\t\t{\r\n\t\t\t\treturn reject(\"Not recording\")\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmediaRecorder.onstop = event => { \r\n\t\r\n\t\t\t\t// After fill up the chunk  \r\n\t\t\t\t// array make it empty \r\n\t\t\t\trecording = false\r\n\t\t\t\tmediaRecorder = null\r\n\r\n\t\t\t\tduration = Date.now() - startTime\r\n\r\n\t\t\t\t// Pass the audio url to the 2nd video tag \r\n\t\t\t\tresolve( dataArray )\r\n\t\t\t}\r\n\t\t\tmediaRecorder.stop()\r\n\t\t})\r\n\t}\r\n\r\n\tconst encodeRecording = async( format=\"audio\", type= \"mp3\", codecs=\"\") => {\r\n\t\t\r\n\t\t// 'audio': [\r\n\t\t// \t'audio/webm;codecs=opus',\r\n\t\t// \t'audio/webm',\r\n\t\t// \t'audio/ogg',\r\n\t\t// \t'audio/mp3',\r\n\t\t// \t'audio/wav'\r\n\t\t// ],\r\n\t\t// 'video': [\r\n\t\t// \t'video/webm;codecs=vp9',\r\n\t\t// \t'video/webm;codecs=vp8',\r\n\t\t// \t'video/webm;codecs=h264',\r\n\t\t// \t'video/webm;codecs=opus',\r\n\t\t// \t'video/webm',\r\n\t\t// \t'video/mp4',\r\n\t\t// \t'video/mpeg'\r\n\t\t// ]\r\n\r\n\t\tconst encode = `${format}/${type}` + codecs.length ? ';codecs=' + codecs : ''\r\n\t\t\r\n\t\t// TODO: Chunk this data so that it sends the packets rather than the blob\r\n\r\n\t\t// hook into our worker bee\r\n\t\tencoder.onmessage = (e) => {\t\r\n\t\t\tconst data = e.data\r\n\t\t\tswitch(data.event)\r\n\t\t\t{\r\n\t\t\t\tcase EVENT_ENCODED: return data.audio\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tencoder.postMessage({\r\n\t\t\tformat, type, codecs,\r\n\t\t\tcommand:CMD_ENCODE, \r\n\t\t\tdata:dataArray\r\n\t\t})\r\n\r\n\t\tconsole.error(\"Encoding via worker\", encode, dataArray)\r\n\t\t// const audioData = new Blob(dataArray, { 'type': encode })\r\n\t\t//return audioData\r\n\t}\r\n\r\n\t// const looper = (blob) => {\r\n\t// \tconst audioURL = window.URL.createObjectURL(blob)\r\n \t// \tconst audio = document.createElement('audio')\r\n\t// \taudio.setAttribute('controls', '')\r\n\t// \taudio.src = audioURL;\r\n\t// }\r\n\r\n\tconst downloadRecording = async ( fileName=\"recording\", format=\"audio\", type= \"ogg\", codec=\"opus\" ) => {\r\n\t\tconsole.log(\"downloadRecording\", {fileName,format,type,codec})\r\n\t\tconst blob = await encodeRecording( format, type, codec )\r\n\t\tconst url = URL.createObjectURL(blob)\r\n\t\tconst a = document.createElement(\"a\")\r\n\t\tdocument.body.appendChild(a)\r\n\t\ta.style = \"display: none\"\r\n\t\ta.href = url\r\n\t\ta.download = `${fileName}.${codec||type}`\r\n\t\ta.click()\r\n\t\tURL.revokeObjectURL(url)\r\n\t\treturn blob\r\n\t}\r\n\r\n\tconst isRecordingAvailable = () => !!(window && window.MediaRecorder && typeof window.MediaRecorder.isTypeSupported === 'function' && window.Blob)\r\n\tconst isRecording = () => recording\r\n\tconst getRecordedDuration = () => recording ? Date.now() - startTime : duration\r\n\r\n\treturn { isRecordingAvailable, downloadRecording, encodeRecording, startRecording,stopRecording, isRecording, getRecordedDuration }\r\n} \r\n\r\n/**\r\n * To save to a server as Base64\r\n * @param {Blob} blob \r\n * @returns \r\n */\r\nexport const blobToBase64 = (blob) => {\r\n\tconst reader = new FileReader()\r\n\treader.readAsDataURL(blob)\r\n\treturn new Promise(resolve => {\r\n\t\treader.onloadend = () => {\r\n\t\t\tresolve(reader.result)\r\n\t\t}\r\n\t})\r\n}","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('4wQTA') + \"encoder.worker.9a7cb3e2.js\" + \"?\" + Date.now();module.exports = workerURL(url, bundleURL.getOrigin(url), false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let options\r\nif (MediaRecorder.isTypeSupported('video/webm;codecs=vp9')) {\r\n    options = {mimeType: 'video/webm; codecs=vp9'};\r\n} else if (MediaRecorder.isTypeSupported('video/webm;codecs=vp8')) {\r\n    options = {mimeType: 'video/webm; codecs=vp8'};\r\n} else {\r\n    options = {}\r\n}\r\n\r\n// https://codereview.chromium.org/1579693006\r\n// Chrome bugs out for audio\r\nexport const canvasVideoRecorder= (canvas, fps=15 ) => {\r\n\t\r\n\tconst stream = canvas.captureStream(fps)\r\n\tconst recorder = new MediaRecorder(stream, options)\r\n  \r\n\tlet capturing = false\r\n\t\r\n\tconst start = () => {\r\n\t\tcapturing = true\r\n\t\trecorder.start()\r\n\t}\r\n\r\n\tconst stop = (callback) => {\r\n\t\trecorder.addEventListener('dataavailable', e => {\r\n\t\t\tcapturing = false\r\n\t\t\tcallback(e.data)\r\n\t\t})\r\n  \t\trecorder.stop()\r\n\t}\r\n\r\n\treturn {start, stop}\r\n}\r\n\r\n// FIXME: Destroy once played?\r\nexport const createVideo = (blob) => {\r\n\tconst videoURL = URL.createObjectURL(blob)\r\n\tconst video = new Video()\r\n\tvideo.loop = true\r\n\tvideo.src = videoURL\r\n\tvideo.play()\r\n\treturn video\r\n}\r\n\r\nexport const encodeVideo = (data, type=\"webm\") => {\r\n\treturn new Blob( [ data ], { 'type': `video/${type}` })\r\n}","import 'audioworklet-polyfill'\r\n\r\nimport { initializeWamHost } from \"@webaudiomodules/sdk\"\r\n\r\nimport {clamp, lerp, TAU} from \"../maths/maths\"\r\n\r\nimport { chain } from './rack'\r\nimport {getInstrumentFamily} from './instruments'\r\n// Effects\r\nimport { createReverb, randomReverb, getImpulseList } from './effects/reverb'\r\nimport {createDelay} from './effects/delay'\r\nimport {createDub} from './effects/dub'\r\nimport {createCompressor} from './effects/compressor'\r\nimport {createDistortion} from './effects/distortion'\r\nimport {createAmplitude} from './effects/amplitude'\r\n\r\nimport {\r\n\tcreateInstrumentBanks,\r\n\t// getNoteName,\r\n\t// getNoteSound, getNoteText,\r\n\tNOTE_NAMES\r\n} from './notes'\r\n\r\nexport const ZERO = 0.0000001\r\n\r\nexport let audioContext\r\n\r\nexport let bufferLength\r\nexport let dataArray\r\n\r\nlet oscillator\r\nlet createAnalyser\r\n\r\nlet compressor\r\nlet distortion\r\nlet reverb\r\nlet delay\r\nlet dub\r\nlet gain\r\nlet mixer\r\nlet percussion\r\n\r\nexport let playing = false\r\nexport let active = false\r\n\r\n/**\r\n * get Percussion Mixer\r\n * @returns Pre FX -> PRE MIXER, Accompaniment mixer\r\n */\r\nexport const getPercussionNode = () => {\r\n\treturn percussion.node\r\n}\r\n\r\n/**\r\n * get Master Output Mixer\r\n * @returns Post FX -> MIXER\r\n */\r\nexport const getMasterMixdown = () => {\r\n\treturn mixer.node\r\n}\r\n\r\n/**\r\n * get Master Recording Node (pre percussion)\r\n * @returns Post FX node but before mixer\r\n */\r\nexport const getRecordableOutputNode = () => {\r\n\treturn reverb.node\r\n}\r\n\r\n// // just does linear connects in sequence for easier protyping\r\n// const chain = ( routes, connect=true ) => {\r\n\r\n// \tconst quantity = routes.length\r\n\r\n// \tfor (let i=1; i<quantity; ++i)\r\n// \t{\r\n// \t\tconst previous = routes[ i-1 ]\r\n// \t\tconst route = routes[ i ]\r\n\r\n// \t\tif (route.name)\r\n// \t\t{\r\n// \t\t\tconsole.error(\"Object fx needs i/o\", route)\r\n// \t\t}\r\n\r\n// \t\t// check to see if it is a wrapped object...\r\n\r\n// \t\tprevious.connect(route)\r\n\t\t\r\n// \t\t// if last one...\r\n// \t\tif (connect && i === quantity-1 )\r\n// \t\t{\r\n// \t\t\troute.connect(audioContext.destination)\r\n// \t\t}\r\n// \t}\r\n\r\n// \t// grab the first one\r\n// \toutputNode = routes[0]\r\n// \treturn outputNode\r\n// }\r\n\r\n/**\r\n * Create a chain of audio effects\r\n * @param {?Object} options config\r\n * @returns {Promise} Chain of effects\r\n */\r\nexport const chooseFilters = async (options) => {\r\n\r\n\t// create some filters based on some options?\r\n\r\n\treturn chain( [\r\n\t\t\r\n\t\tgain,\r\n\t\tawait createCompressor( audioContext ), \r\n\t\t// await createReverb(audioContext, 0.5),\r\n\t\t\r\n\t\t//, await createDelay(audioContext)\r\n\t\t//await createDub(audioContext)\r\n\t\tawait createDistortion(audioContext)\r\n\r\n\t], audioContext )\r\n}\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\t// quantity of reverb\r\n\treverb:0.1,\r\n\t// flatten pops and clicks\r\n\t// but omg does it cost a lot\r\n\tnormalise:true,\r\n\t// frequency analyser pulse smoothing (for cool visual effects!)\r\n\t// how quick it drops < 0.85 looks cool\r\n\tsmoothingTimeConstant:0.45\r\n}\r\n\r\nexport const setReverb = async (filename) => {\r\n\tconst impulse = !filename ? await randomReverb() : filename // await getImpulseList()[0]\r\n\treturn reverb.impulseFilter( impulse )\r\n}\r\n\r\n/**\r\n * Set up the Audio Engine\r\n * @param {?Object} settings Options\r\n * @returns {Promise} Chain of effects\r\n */\r\nexport const setupAudio = async (settings) => {\r\n\r\n\t// BUFFER_SIZE = 2048, // the buffer size in units of sample-frames.\r\n\t// INPUT_CHANNELS = 1, // the number of channels for this node's input, defaults to 2\r\n\t// OUTPUT_CHANNELS = 1 // the number of channels for this node's output, defaults to 2\r\n\r\n\tconst options = Object.assign ( {}, DEFAULT_OPTIONS, settings )\r\n\r\n\t// set up forked web audio context, for multiple browsers\r\n  \t// window. is needed otherwise Safari explodes\r\n\t// { latencyHint: 'playback' } tells the context to try and smooth playback\r\n\taudioContext = new (window.AudioContext || window.webkitAudioContext)({ latencyHint: 'playback' })\r\n\r\n\t// universal volume setter\r\n\tmixer = await createAmplitude(audioContext, 1)\r\n\tgain = await createAmplitude(audioContext, 1)\r\n\tpercussion = await createAmplitude(audioContext, 0.1 )\r\n\t\r\n\t// this should hopefully balance the outputs\r\n\tcompressor = await createCompressor( audioContext )\r\n\tpercussion.node.connect( compressor.node )\r\n\tcompressor.node.connect( getMasterMixdown())\r\n\t\t\r\n\r\n\treverb = await createReverb( audioContext, options.reverb, options.normalise  )//, await randomReverb()\r\n\t// reverb.impulseFilter()\r\n\r\n\r\n\t\r\n\t// Web Audio Modules! --------------------------\r\n\tconst { default: samplerWAMPlugin } = await import(\"./wam2/sampler/index.js\")\r\n\t\r\n\tconst [hostGroupId] = await initializeWamHost(audioContext)\r\n\tconst samplerPlugin = await samplerWAMPlugin.createInstance(hostGroupId, audioContext, {})\r\n\t// link the sampler to the output\r\n\tsamplerPlugin.audioNode.connect( compressor.node )\r\n\t\r\n\r\n\t// samplerPlugin.\r\n\r\n\tconsole.log(\"Created samplerPlugin Instrument\", {samplerPlugin} )\r\n\r\n\r\n\t\r\n\t\r\n\t// some space dubs!\r\n\t// delay = await createDelay(audioContext)\r\n\t// dub = await createDub(audioContext)\r\n\t\r\n\t// masher (expensive)\r\n\t// distortion = await createDistortion(audioContext)\r\n\r\n\t// UI spectrum analyser\r\n\tanalyser = audioContext.createAnalyser()\r\n\tanalyser.minDecibels = -90\r\n\tanalyser.maxDecibels = -10\r\n\tanalyser.smoothingTimeConstant = options.smoothingTimeConstant\r\n\r\n\tbufferLength = analyser.frequencyBinCount\r\n    dataArray = new Uint8Array(bufferLength)\r\n\t\r\n\t//recorder = audioContext.createScriptProcessor(BUFFER_SIZE, INPUT_CHANNELS, OUTPUT_CHANNELS)\r\n\t\r\n\t// chain( [ delayNode, feedbackNode, delayNode, \r\n\t// \t\t\tgainNode, reverb, \r\n\t// \t\t\t\tcompressor.node, analyser], audioContext )\r\n\r\n\t// fixes old ios bug about audio not starting until buttons or something\r\n\t// resumeAudioContext()\r\n\r\n\treturn chain( [\r\n\r\n\t\tgain,\r\n\t\t\r\n\t\t// this should hopefully balance the outputs\r\n\t\t//await createCompressor( audioContext ),\r\n\t\t\r\n\t\treverb,\r\n\t\t//await createDelay(audioContext)\r\n\t\t//await createDub(audioContext)\r\n\t\t//await createDistortion(audioContext)\r\n\t\t\r\n\t\tanalyser,\r\n\r\n\t\tmixer,\r\n\r\n\t], audioContext )\r\n\t\r\n\t// all mod cons\r\n\t// return chain( [ delayNode, feedbackNode, delayNode, gainNode, reverb, compressor, analyser ], audioContext )\r\n\t\r\n\t// just compressor and reverb\r\n\t// return chain( [ gain.node, reverb.node, compressor.node, analyser], audioContext )\r\n\t\r\n\t// just rever, delay and compressor\r\n\t//return chain([ gain, analyser ], audioContext )\r\n\treturn chain([ gain, compressor, reverb, analyser ], audioContext )\r\n\t\r\n\treturn chain([ compressor.node, reverb.node, delay.node, gain.node, analyser ], audioContext )\r\n\t\r\n\t// all mod cons\r\n\treturn chain( [ gain.node, reverb.node, delay.node, compressor.node, analyser ], audioContext )\r\n}\r\n\r\n/**\r\n * update the frequency analyser and fetch EQ data in the Frequency Domain\r\n */\r\nexport const updateByteFrequencyData = ()=> {\r\n\tanalyser.fftSize = 2048\r\n\tanalyser.getByteFrequencyData(dataArray)\r\n\t// for waves?\r\n\t//bufferLength = analyser.fftSize\r\n\tbufferLength = analyser.frequencyBinCount\r\n}\r\n\r\n/**\r\n * update the frequency analyser and fetch EQ data in the Time Domian\r\n */\r\nexport const updateByteTimeDomainData = ()=> {\r\n\tanalyser.fftSize = 256\r\n\t// for bars\r\n\tanalyser.getByteTimeDomainData(dataArray)\r\n\tbufferLength = analyser.frequencyBinCount\r\n}\r\n\r\n/**\r\n * Automatically Loop and update the frequency analyser and \r\n * fetch EQ data in the Frequency Domain\r\n */\r\nconst monitor = () => {\r\n\r\n\r\n\tconst result = requestAnimationFrame(monitor)\r\n\r\n\t// waves\r\n\t//analyser.getByteTimeDomainData(dataArray)\r\n\t\r\n\t// bars\r\n\tanalyser.getByteFrequencyData(dataArray)\r\n\r\n\treturn result\r\n}\r\n\r\nexport const stopAudio = () => {\r\n\tif (playing)\r\n\t{\r\n\t\tplaying = false\r\n\t\t// you cannot restart an oscillator!\r\n\t\t//oscillator.stop()\r\n\t\t//oscillator.disconnect()\r\n\t\t// analyser.disconnect()\r\n\t\treturn true\r\n\t}else{\r\n\t\treturn false\r\n\t}\r\n\t//console.error(\"stop audio\",{playing})\r\n}\r\n\r\nconst resumeAudioContext = () => {\r\n\tif (audioContext.state === 'suspended') \r\n\t{\r\n\t\taudioContext.resume()\r\n\t}\r\n}\r\n\r\n/**\r\n * Get the volume of the audio playback \r\n * @returns {Number} Volume\r\n */\r\nexport const getVolume = () => mixer.volume()\r\n\r\n/**\r\n * Set the volume of the audio playback \r\n * @param {Number} destinationVolume Volume to set\r\n * @returns {Number} Volume\r\n */\r\nexport const setVolume = destinationVolume => mixer.volume(destinationVolume)\r\n\r\n/**\r\n * Load an Audio Buffer\r\n * @param {String} path Instrument Sample path\r\n * @returns {HTMLAudioElement} Audio buffer\r\n */\r\nexport const loadAudio = async (path) => {\r\n\tconst response = await fetch(path)\r\n\tconst arrayBuffer = await response.arrayBuffer()\r\n\tconst audioBuffer = await audioContext.decodeAudioData(arrayBuffer)\r\n\treturn audioBuffer\r\n}\r\n\r\n/**\r\n * Play an Audio Buffer\r\n * create a buffer, plop in data, connect and play -> modify graph here if required\r\n * detune:0,,  playbackRate:1\r\n * @param {Object} audioBuffer Audio data buffer\r\n * @param {Number} offset position to start from\r\n * @param {AudioNode} destination Audio Node to route to\r\n * @param {Object} options options such as looping\r\n * @returns {HTMLAudioElement} Audio object\r\n */\r\nexport const playTrack = (audioBuffer, offset=0, destination=delayNode, options={ loop:false } ) => {\r\n\t\r\n\treturn new Promise((resolve, reject)=>{\r\n\r\n\t\tconst trackSource = audioContext.createBufferSource()\r\n\t\ttrackSource.buffer = audioBuffer\r\n\t\t\r\n\t\t// loop through options nad add\r\n\t\t// options\r\n\t\ttrackSource.loop = options.loop\r\n\t\t// trackSource.detune = options.detune\r\n\t\t//trackSource.playbackRate = options.playbackRate\r\n\r\n\t\ttrackSource.connect(destination)\r\n\t\t// trackSource.connect(audioContext.destination)\r\n\t\t// console.error(\"Playing track\", {audioBuffer,trackSource} )\r\n\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode\r\n\t\t// FIXME: when it has finished playing remove it...\r\n\t\t// trackSource.addEventListener()\r\n\t\ttrackSource.onended = () => {\r\n\t\t\ttrackSource.disconnect()\r\n\t\t\tactive = false\r\n\t\t\tresolve()\r\n\t\t}\r\n\t\ttrackSource.onerror = (error) => {\r\n\t\t\ttrackSource.disconnect()\r\n\t\t\tactive = false\r\n\t\t\treject(error)\r\n\t\t}\r\n\r\n\t\tif (audioContext.state === 'suspended') \r\n\t\t{\r\n\t\t\taudioContext.resume()\r\n\t\t}\r\n\t\t\r\n\t\tif (offset == 0) \r\n\t\t{\r\n\t\t\ttrackSource.start()\r\n\t\t//offset = audioContext.currentTime\r\n\t\t} else {\r\n\t\t\ttrackSource.start(0, audioContext.currentTime - offset)\r\n\t\t}\r\n\t\tactive = true\r\n\t})\r\n}\r\n\r\n/**\r\n * Replace the in-memory sample with a new sample\r\n * This loads only one pitch for the specific sound\r\n * @param {String} instrumentName Instrument Sample name\r\n * @param {String} part The part of the instrument to load\r\n * @returns {HTMLAudioElement} Auudio object\r\n */\r\nasync function loadInstrumentPart (instrumentName, part) {\r\n\treturn new Promise((resolve,reject)=>{\r\n\t\tconst path = `${instrumentName}/${part}`\r\n\t\tconst audio = new Audio()\r\n\r\n\t\tconst resolution = event => {\r\n\t\t\tdisconnect()\r\n\t\t\tresolve( audio )\r\n\t\t}\r\n\t\tconst failure = event =>{\r\n\t\t\tdisconnect()\r\n\t\t\treject(event.error)\r\n\t\t} \r\n\r\n\t\tconst connect = ()=>{\r\n\t\t\taudio.addEventListener('canplaythrough',resolution)\r\n\t\t\taudio.addEventListener('error', failure)\r\n\t\t}\r\n\t\tconst disconnect = ()=>{\r\n\t\t\taudio.removeEventListener('error',failure)\r\n\t\t\taudio.removeEventListener('canplaythrough',resolution)\r\n\t\t}\r\n\r\n\t\tconnect()\r\n\t\taudio.src = path\r\n\t})\r\n}\r\n\r\n/**\r\n * Replace the in-memory sound with a new dound\r\n * This loads all pitches for one specific sound\r\n * @param {String} instrumentName Instrument Sample name\r\n * @param {String} path File path for sample pack\r\n * @returns {Array<Promise>} Array of instrument load promises\r\n */\r\nexport const loadInstrumentParts = (instrumentName=\"alto_sax-mp3\", path=\"FluidR3_GM\") => {\r\n\tconst instrumentPath = `${path}/${instrumentName}`\r\n\tconst parts = createInstrumentBanks()\r\n\t// array of buffers to pass to playTrack\r\n\tconst instruments = parts.map( part => loadAudio( `./assets/audio/${instrumentPath}/${part}` ) )\r\n\t//const instruments = parts.map( part => loadInstrumentPart(instrumentPath, part) )\r\n\t// eg FluidR3_GM\r\n\treturn instruments\r\n}\r\n\r\n/**\r\n * Replace the in-memory sample pack with a new pack\r\n * @param {String} instrumentName Instrument Sample name\r\n * @param {String} path File path for sample pack\r\n * @param {?Function} progressCallback Optional callback to report progress\r\n * @returns {Object} Instrument information\r\n */\r\nexport const loadInstrumentPack = async (instrumentName=\"alto_sax-mp3\", path=\"FluidR3_GM\", progressCallback ) => {\t\r\n\t\r\n\tconst title = instrumentName\r\n\tconst family = getInstrumentFamily(instrumentName)\r\n\tconst name = instrumentName\r\n\t// .indexOf(\"-mp3\") < 0 ? instrumentName + \"-mp3\" : instrumentName\r\n\r\n\t// ensure we have the suffix on the name\r\n\tconst output = {\r\n\t\ttitle,\r\n\t\tfamily:getInstrumentFamily(name),\r\n\t\tname\r\n\t}\r\n\r\n\tconst partPromises = loadInstrumentParts(name, path) \r\n\tconst parts= []\r\n\tfor (let i=0, l=partPromises.length; i < l; ++i)\r\n\t{\r\n\t\tconst part = await partPromises[i]\r\n\t\tparts.push( part )\r\n\t\tprogressCallback && progressCallback({\r\n\t\t\tprogress:i/l,\r\n\t\t\tinstrumentName:title\r\n\t\t})\r\n\t}\r\n\r\n\t// all partPromises have been resolved...\r\n\t\r\n\tNOTE_NAMES.forEach( (instrument, index) => {\r\n\t\toutput[ instrument.split('.')[0] ] = parts[index]\r\n\t})\r\n\treturn output\r\n}\r\n\r\n// await context.audioWorklet.addModule('bit-crusher-processor.js')\r\n\r\nimport {injectJavascript} from '../utils'\r\n\r\nlet workletsRegistered = false\r\n\r\nexport const registerAudioWorklets = async (audioContext, progressCallback) => {\r\n  \r\n\tif (workletsRegistered)\r\n\t{\r\n\t\treturn true\r\n\t}\r\n\t// check to see if it already has beeen registered\r\n\ttry {\r\n\t\t\r\n\t\tawait audioContext.resume()\r\n\t\tprogressCallback && progressCallback(0)\r\n\t\t\r\n\t\tawait audioContext.audioWorklet.addModule( new URL('./instruments/instrument-audio-worklet.js', import.meta.url))\r\n\t\tprogressCallback && progressCallback(0.5)\r\n\t\t\r\n\t\tawait audioContext.audioWorklet.addModule( new URL('./effects/bitcrusher.worklet.js', import.meta.url))\r\n\t\tprogressCallback && progressCallback(0.75)\r\n\t\t\r\n\t\t// is this even a good location to load this??\r\n\t\tawait injectJavascript(\"wam/libs/wam-controller.js\")\r\n\t\tawait injectJavascript(\"wam/yoshimi.js\")\r\n\r\n\t\tprogressCallback && progressCallback(1)\r\n\r\n\t\t// not needed with google version\r\n\t\t//await AWPF.polyfill( audioContext )\r\n\r\n\t\tworkletsRegistered = true\r\n\t\t\r\n\t} catch(e) {\r\n\t\tconsole.error(\"createAudioProcessor\", e )\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn true\r\n}",null,"/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport { Realm } from './realm';\n\nconst PARAMS = [];\nlet nextPort;\n\nif (typeof AudioWorkletNode !== 'function') {\n  self.AudioWorkletNode = function AudioWorkletNode (context, name, options) {\n    const processor = getProcessorsForContext(context)[name];\n    const outputChannels = options && options.outputChannelCount ? options.outputChannelCount[0] : 2;\n    const scriptProcessor = context.createScriptProcessor(undefined, 2, outputChannels);\n\n    scriptProcessor.parameters = new Map();\n    if (processor.properties) {\n      for (let i = 0; i < processor.properties.length; i++) {\n        const prop = processor.properties[i];\n        const node = context.createGain().gain;\n        node.value = prop.defaultValue;\n        // @TODO there's no good way to construct the proxy AudioParam here\n        scriptProcessor.parameters.set(prop.name, node);\n      }\n    }\n\n    const mc = new MessageChannel();\n    nextPort = mc.port2;\n    const inst = new processor.Processor(options || {});\n    nextPort = null;\n\n    scriptProcessor.port = mc.port1;\n    scriptProcessor.processor = processor;\n    scriptProcessor.instance = inst;\n    scriptProcessor.onaudioprocess = onAudioProcess;\n    return scriptProcessor;\n  };\n\n  Object.defineProperty((self.AudioContext || self.webkitAudioContext).prototype, 'audioWorklet', {\n    get () {\n      return this.$$audioWorklet || (this.$$audioWorklet = new self.AudioWorklet(this));\n    }\n  });\n\n  self.AudioWorklet = class AudioWorklet {\n    constructor (audioContext) {\n      this.$$context = audioContext;\n    }\n\n    addModule (url, options) {\n      return fetch(url).then(r => {\n        if (!r.ok) throw Error(r.status);\n        return r.text();\n      }).then(code => {\n        const context = {\n          sampleRate: 0,\n          currentTime: 0,\n          AudioWorkletProcessor () {\n            this.port = nextPort;\n          },\n          registerProcessor: (name, Processor) => {\n            const processors = getProcessorsForContext(this.$$context);\n            processors[name] = {\n              realm,\n              context,\n              Processor,\n              properties: Processor.parameterDescriptors || []\n            };\n          }\n        };\n        context.self = context;\n        const realm = new Realm(context, document.documentElement);\n        realm.exec(((options && options.transpile) || String)(code));\n        return null;\n      });\n    }\n  };\n}\n\nfunction onAudioProcess (e) {\n  const parameters = {};\n  let index = -1;\n  this.parameters.forEach((value, key) => {\n    const arr = PARAMS[++index] || (PARAMS[index] = new Float32Array(this.bufferSize));\n    // @TODO proper values here if possible\n    arr.fill(value.value);\n    parameters[key] = arr;\n  });\n  this.processor.realm.exec(\n    'self.sampleRate=sampleRate=' + this.context.sampleRate + ';' +\n    'self.currentTime=currentTime=' + this.context.currentTime\n  );\n  const inputs = channelToArray(e.inputBuffer);\n  const outputs = channelToArray(e.outputBuffer);\n  this.instance.process([inputs], [outputs], parameters);\n\n  // @todo - keepalive\n  // let ret = this.instance.process([inputs], [outputs], parameters);\n  // if (ret === true) { }\n}\n\nfunction channelToArray (ch) {\n  const out = [];\n  for (let i = 0; i < ch.numberOfChannels; i++) {\n    out[i] = ch.getChannelData(i);\n  }\n  return out;\n}\n\nfunction getProcessorsForContext (audioContext) {\n  return audioContext.$$processors || (audioContext.$$processors = {});\n}\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nexport function Realm (scope, parentElement) {\n  const frame = document.createElement('iframe');\n  frame.style.cssText = 'position:absolute;left:0;top:-999px;width:1px;height:1px;';\n  parentElement.appendChild(frame);\n  const win = frame.contentWindow;\n  const doc = win.document;\n  let vars = 'var window,$hook';\n  for (const i in win) {\n    if (!(i in scope) && i !== 'eval') {\n      vars += ',';\n      vars += i;\n    }\n  }\n  for (const i in scope) {\n    vars += ',';\n    vars += i;\n    vars += '=self.';\n    vars += i;\n  }\n  const script = doc.createElement('script');\n  script.appendChild(doc.createTextNode(\n    `function $hook(self,console) {\"use strict\";\n        ${vars};return function() {return eval(arguments[0])}}`\n  ));\n  doc.body.appendChild(script);\n  this.exec = win.$hook(scope, console);\n}\n","export const TAU = 2 * Math.PI\r\nexport const HALF_PI = Math.PI * 0.5\r\nexport const TWO_PI = Math.PI * 2\r\n\r\nconst {PI, sqrt, atan2, tan} = Math\r\n\r\nexport const range = (input, inputMin, inputMax, outputMin, outputMax) => {\r\n\tconst value = (input - inputMin) * (outputMax - outputMin) / (inputMax - inputMin) + outputMin\r\n\tif (value < outputMin) {return outputMin}\r\n\telse if (value > outputMax) {return outputMax}\r\n\treturn value\r\n}\r\n\r\nexport const rangeRounded = (input, inputMin, inputMax, outputMin, outputMax ) => {\r\n\tconst value = Math.round( (input - inputMin) * (outputMax - outputMin) / (inputMax - inputMin) + outputMin )\r\n\tif (value < outputMin) {return outputMin}\r\n\telse if (value > outputMax) {return outputMax}\r\n\treturn value\r\n}\r\n\r\n// provide the value and a smallest and largest original then new sizes\r\n// Functional Program\r\nexport const rescale = ( smallest=0, largest=1 ) => {\r\n    // find the scale and create a method that allows \r\n    // you to simply rescale at will\r\n    const fullRange = 1 / ( largest - smallest )\r\n\r\n    // return a method that you can pass a value to\r\n    return value => fullRange * ( value - smallest )\r\n}\r\n\r\n// Feed it a right angle triangle and get the angle between the edges\r\nexport const determineAngle = ( pointA, pointB ) => {\r\n\r\n\t// work out the lengths of the known edges\r\n\tconst oppositeLength = pointA.y - pointB.y\r\n\tconst adjacentLength = pointB.x - pointA.x\r\n\tconst angleInRadians = atan2(oppositeLength, adjacentLength)\r\n\t// process?\r\n\treturn angleInRadians\r\n}\r\n// ** === ^\r\n/*\r\n// distance between a & b via right angled triangle\r\nexport const distanceBetween2Points = (pointA, pointB) => sqrt(\r\n    ( pointA[ 0 ] - pointB[ 0 ] ) ** 2 + \r\n    ( pointA[ 1 ] - pointB[ 1 ] ) ** 2\r\n)\r\nexport const distanceBetween3Points = (pointA, pointB) => sqrt(\r\n    ( pointA[ 0 ] - pointB[ 0 ] ) ** 2 + \r\n    ( pointA[ 1 ] - pointB[ 1 ] ) ** 2 +\r\n    ( pointA[ 2 ] - pointB[ 2 ] ) ** 2\r\n)\r\n*/\r\nexport const distance3D = (aX,bX,  aY,bY, aZ,bZ ) => sqrt(\r\n    (aX - bX) ** 2 + \r\n    (aY - bY) ** 2 + \r\n    (aZ - bZ) ** 2\r\n)\r\n\r\n// distance between a & b via right angled triangle\r\nexport const distance2D = (aX,aY,bX,bY) => sqrt(\r\n    (aX - bX) ** 2 + \r\n    (aY - bY) ** 2\r\n)\r\n\r\n// distance between a & b via right angled triangle\r\nexport const hypoteneuse2D = ( pointA,pointB) => sqrt(\r\n    (pointA.x - pointB.x) ** 2 + \r\n    (pointA.y - pointB.y) ** 2\r\n)\r\nexport const hypoteneuse3D = (pointA, pointB) => sqrt(\r\n    (pointA.x - pointB.x) ** 2 + \r\n    (pointA.y - pointB.y) ** 2 +\r\n    (pointA.z - pointB.z) ** 2\r\n)\r\n\r\n\r\nexport const add3D = (a, b, output={} ) => {\r\n\toutput.x = a.x + b.x\r\n\toutput.y = a.y + b.y\r\n\toutput.z = a.z + b.z\r\n\treturn output\r\n}\r\n\r\nexport const subtract3D = (a, b, output={} ) => {\r\n\toutput.x = a.x - b.x\r\n\toutput.y = a.y - b.y\r\n\toutput.z = a.z - b.z\r\n\treturn output\r\n}\r\n\r\n// multiply points\r\nexport const  multiply3D = (a, b, output={} ) => {\r\n\toutput.x = a.x * b.x\r\n\toutput.y = a.y * b.y\r\n\toutput.z = a.z * b.z\t\r\n\treturn output\r\n}\r\n\r\nexport const cross3D = (a, b, output={} ) => {\r\n\toutput.x = a.y * b.z - a.z * b.y\r\n\toutput.y = a.z * b.x - a.x * b.z\r\n\toutput.z = a.x * b.y - a.y * b.x\r\n\treturn output\r\n}\r\n\r\nexport const divide3D = (a, b, output={} ) => {\r\n\toutput.x = a.x / b.x\r\n\toutput.y = a.y / b.y\r\n\toutput.z = a.z / b.z\r\n\treturn output\r\n}\r\n\r\n\r\nexport const lerp = (start, end, amt) => (1-amt) * start + amt * end\r\n\r\n// Restrict between\r\nexport const clamp = (val, min, max) => val > max ? max : val < min ? min : val\r\n\r\n// cheaper than TAN\r\nexport const twist = (value, amount=0) => {\r\n\r\n\t// if it is negative, invert\r\n\tif (value < 0)\r\n\t{\r\n\t\tvalue = (value + 1) * -1\r\n\t}else{\r\n\t\tvalue = 1 - value\r\n\t}\r\n\t//return value + amount\r\n\treturn clamp(value + amount,-1,1)\r\n}\r\n\r\n\r\n\r\n// export const lerp = (a, b, t) => (b-a)*t+a\r\n// export const unlerp = (a, b, t) => (t-a)/(b-a)\r\n// export const remap = (a1, b1, a2, b2, t) => lerp(a2, b2, unlerp(a1, b1, t))\r\n\r\n\r\nexport const round = (somenum) => {\r\n\t// With a bitwise or.\r\n\treturn (0.5 + somenum) | 0\r\n\t// A double bitwise not.\r\n\treturn ~~ (0.5 + somenum)\r\n\t// Finally, a left bitwise shift.\r\n\treturn (0.5 + somenum) << 0\r\n}\r\n","\r\nlet firstNode = null\r\nlet finalNode = null\r\nlet currentChain = null\r\nlet currentContext = null\r\n\r\n// If you just want to add things into the mix..\r\nexport const inputNode = () => (firstNode.name ? firstNode.node : firstNode )\r\n\r\n// If you want to bypass the mix and send straight to the amp\r\nexport const inputDryNode = () => finalNode\r\n\r\n\r\nexport const resolveRoute = route => {\r\n\treturn route.name ? route.node : route \r\n}\r\n\r\n/**\r\n * just does linear connects in sequence for easier protyping\r\n * @param {Array<Filters>} routes \r\n * @param {AudioContext} audioContext \r\n * @returns first node in chain\r\n */\r\nexport const chain = ( routes, audioContext=null ) => {\r\n\r\n\t// we should always unchain before rechaining otherwise... havoc\r\n\tunchain()\r\n\r\n\t// check if already chained and unchain if required... \r\n\tconst quantity = routes.length\r\n\r\n\tif (quantity > 1)\r\n\t{\r\n\t\tfor (let i=1; i<quantity; ++i)\r\n\t\t{\t\r\n\t\t\t// check to see if it is a wrapped object...\r\n\t\t\tconst previous = resolveRoute( routes[ i-1 ] )\r\n\t\t\tconst route = resolveRoute( routes[ i ] )\r\n\r\n\t\t\tprevious.connect(route)\r\n\t\t\t\r\n\t\t\tif (i === 1)\r\n\t\t\t{\r\n\t\t\t\tfirstNode = previous\r\n\t\t\t}\r\n\t\r\n\t\t\tif (i === quantity-1 )\r\n\t\t\t{\r\n\t\t\t\tfinalNode = route\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\r\n\t\tfirstNode = finalNode = resolveRoute( routes[ 0 ] )\r\n\t}\r\n\r\n\t// if last one we can connect to output...\r\n\tif (audioContext )\r\n\t{\r\n\t\tfinalNode.connect(audioContext.destination)\r\n\t}\r\n\r\n\tcurrentChain = routes\r\n\tcurrentContext = audioContext\r\n\r\n\treturn firstNode\r\n}\r\n\r\n// TODO: remove an FX?\r\nexport const removeLink = item => {\r\n\r\n}\r\n\r\nexport const unchain = () => {\r\n\r\n\t// check to see there is a chain and a context...\r\n\tif (currentChain && currentContext)\r\n\t{\r\n\t\tconst quantity = currentChain.length\r\n\t\t// now loop through and unchain...\r\n\t\t// route.disconnect()\r\n\t\tif ( quantity > 1 )\r\n\t\t{\r\n\t\t\t// many\r\n\t\t\tfor (let i=1; i<quantity; ++i)\r\n\t\t\t{\t\r\n\t\t\t\tconst previous = resolveRoute( routes[ i-1 ] )\r\n\t\t\t\tconst route = resolveRoute( routes[ i ] )\r\n\t\t\t\tprevious.disconnect(route)\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\t// single there is nothing to disconnect!?\r\n\t\t}\r\n\r\n\t\tfinalNode.disconnect(audioContext.destination)\r\n\r\n\t}else{\r\n\t\t// nothing to unchain\r\n\t}\r\n}","import {changeParameter} from './effect'\r\n\r\n// inspired by https://github.com/GoogleChromeLabs/web-audio-samples/blob/main/drum-machine/main.js\r\n// const compressor = new DynamicsCompressorNode(audioContext)\r\n// const convolver = new ConvolverNode(audioContext, {buffer: irBuffer})\r\n// const reverbGain = new GainNode(audioContext, {gain: 0.25})\r\n// compressor.connect(audioContext.destination)\r\n// convolver.connect(reverbGain).connect(audioContext.destination)\r\n// compressor.connect(convolver)\r\nexport const DIRS = [ 'EMT140-Plate' , 'Voxengo' ]\r\nconst SAMPLE_PLAYLIST = `sampled.instrument.json`\r\n\r\nlet impulses\r\nlet impulseCounter = 0\r\n\r\n// Custom responses (lack soul)\r\nconst impulseResponse = ( audioContext, duration=4, decay=4, reverse=false ) => {\r\n    const sampleRate = audioContext.sampleRate\r\n    const length = sampleRate * duration\r\n    const impulse = audioContext.createBuffer(2, length, sampleRate)\r\n    const impulseL = impulse.getChannelData(0)\r\n    const impulseR = impulse.getChannelData(1)\r\n\r\n    if (!decay)\r\n\t{\r\n\t\t decay = 2\r\n\t}\r\n     \r\n    for (var i = 0; i < length; ++i )\r\n\t{\r\n      const n = reverse ? length - i : i\r\n      impulseL[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay)\r\n      impulseR[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay)\r\n    }\r\n\r\n    return impulse\r\n}\r\n\r\n// local path\r\nconst path = './assets/audio/acoustics/'\t\r\n\r\nexport const REVERB_PATHS = DIRS.map( dir => `${path}${dir}/${SAMPLE_PLAYLIST}` )\r\n\r\n// Cache wherever applicable...\r\nconst loadedImpulseLists = {}\r\nexport const loadImpulseJSON = async (directory) => {\r\n\tif (loadedImpulseLists[directory])\r\n\t{\r\n\t\treturn loadedImpulseLists[directory]\r\n\t}\r\n\r\n\tconst jsonData = await fetch(`${path}${directory}/${SAMPLE_PLAYLIST}`)\r\n\t// ensure it is JSON...\r\n\tconst json = await jsonData.json()\r\n\t\r\n\tloadedImpulseLists[directory] = json.files.map( item => `${path}${directory}/${item}` )\r\n\treturn loadedImpulseLists[directory]\r\n}\r\n\r\nexport const loadImpulseList = async ( dirs = DIRS ) => {\r\n\t// console.error({path, dir, sampleFile: SAMPLE_PLAYLIST})\r\n\t\r\n\t\r\n\t\t// const response = await fetch(\"./assets/audio/acoustics/reverbs.csv\")\r\n\t\t// const table = await response.text()\r\n\t\t// const impulseList = table.split(\"\\r\")\r\n\r\n\t\t// console.error({path, dir, sampleFile: SAMPLE_PLAYLIST, impulseList})\r\n\r\n\t\tconst output = dirs.map( async (dir) => {\r\n\t\t\tconst files = await loadImpulseJSON(dir, dir)\r\n\t\t\tconsole.error(files, dir)\r\n\t\t\treturn files\r\n\t\t}) \r\n\r\n\t\tconst filePaths = [].concat(...output)\r\n\r\n\t\tconsole.error(dirs, output, filePaths)\r\n\t\treturn filePaths\r\n\ttry{\r\n\t\t// const filePath = `${path}${dir}`\r\n\t\tconst files = []\r\n\t\t// console.error( {impulseList, filePath} )\r\n\t\r\n\t\tconsole.error(\"files\",files)\r\n\t\t\r\n\r\n\t\treturn files\r\n\t\t// impulseList.map( item => `${filePath}${item}` )//.push(`./assets/audio/ir-hall.mp3`)\r\n\r\n\t}catch(error){\r\n\t\tthrow Error(\"Impule List Load Failed \"+ error)\r\n\t}\r\n}\r\n\r\n// Grab the list as an array to feed into the system\r\nexport const getImpulseList = async () => {\r\n\t// lazy load the list\r\n\tif (!impulses)\r\n\t{\r\n\t\ttry{\r\n\t\t\timpulses = await loadImpulseList()\t\r\n\t\t\treturn impulses\r\n\r\n\t\t}catch(error){\r\n\r\n\t\t\tconsole.error({impulses})\r\n\t\t}\r\n\r\n\t}else{\r\n\t\treturn impulses\r\n\t}\r\n} \r\n\r\n// Fetch a random reverb :)\r\nexport const randomReverb = async () =>{\r\n\ttry{\r\n\t\tconst reverbs = await getImpulseList()\r\n\t\treturn reverbs[ Math.ceil( (reverbs.length - 1) * Math.random() ) ]// : reverbs[0]\r\n\t}catch(error){\r\n\t\tthrow Error(\"Random reverb failed to fetch list\"+error)\r\n\t}\r\n\t\r\n}\r\n\r\nexport const createReverb = async ( \r\n\taudioContext,\r\n\tgain = 0.4,\r\n\tnormalize=true,\r\n\timpulseFilterFilename='./assets/audio/acoustics/ir-hall.mp3'\r\n) => {\r\n\r\n\tconst loadImpulseFilter = async (filename) => {\r\n\t\tconst response = await fetch(filename)\r\n\t\tconst arrayBuffer = await response.arrayBuffer()\r\n\t\treturn await audioContext.decodeAudioData(arrayBuffer)\r\n\t}\r\n\t\r\n\t// first load our filter into memory...\r\n\tconst compressor = new DynamicsCompressorNode(audioContext)\r\n\tconst reverbGain = new GainNode( audioContext, {gain: gain} )\r\n\t\r\n\t// const convolver = new ConvolverNode( audioContext , {\r\n\t// \tbuffer : audioBuffer,\r\n\t// \tnormalize : normalize\r\n\t// } )\r\n\tconst convolver = audioContext.createConvolver()// null, true\r\n\t// const audioBuffer = await loadImpulseFilter(impulseFilterFilename)\r\n\tconvolver.buffer =  await loadImpulseFilter(impulseFilterFilename)\r\n\tconvolver.normalize = normalize\r\n\r\n\t//console.log(\"Reverb\", {arrayBuffer, filterBuffer, reverbGain, convolver } )\r\n\r\n\tcompressor.connect(audioContext.destination)\r\n\tcompressor.connect(convolver)\r\n\r\n\tconvolver.connect(reverbGain).connect(audioContext.destination)\r\n\t\r\n\treturn {\r\n\t\tname:\"reverb\",\r\n\t\tnode:convolver,\r\n\t\timpulseFilter:async (filterFilename) => {\r\n\t\t\tconvolver.buffer =  await loadImpulseFilter(filterFilename)\r\n\t\t\tconvolver.normalize = normalize\t\r\n\t\t\treturn filterFilename\r\n\t\t},\r\n\t\tgain:value => changeParameter( reverbGain, \"gain\", value)\r\n\t}\r\n}","export const changeParameter = (parameter, feature, value ) => {\r\n\tif (value)\r\n\t{\r\n\t\tparameter[feature] = value\r\n\t}\r\n\treturn value ?? parameter[feature]\r\n}","import {changeParameter} from './effect'\r\n\r\nexport const createDelay = async ( \r\n\taudioContext,\r\n\tdelayTime = 0.05,\r\n\tfeedback = 0.4\r\n) => {\r\n\r\n\tconst delayNode = audioContext.createDelay(delayTime)\r\n\tconst feedbackNode = audioContext.createGain(feedback)\r\n\tfeedbackNode.gain.value = feedback\r\n\r\n\t// connect the delay node to the feedback node\r\n\t// which then feeds back in to delay node\r\n\tfeedbackNode.connect(delayNode)\r\n\tdelayNode.connect(audioContext.destination)\r\n\r\n\treturn {\r\n\t\tname:\"delay\",\r\n\t\tnode:feedbackNode,\r\n\t\tfeedback:value => changeParameter( feedbackNode, \"gain\", value), \r\n\t\tdelayTime:value => changeParameter( delayNode, \"delayTime\", value), \r\n\t}\r\n}","import {changeParameter} from './effect'\r\n\r\n\r\nexport const createDub = async ( \r\n\taudioContext,\r\n\tdelayTime = 0.5,\r\n\tfeedback = 0.4,\r\n\tfilter = 1000,\r\n\tmaxDelayTime = 2.5\r\n\t\r\n) => {\r\n\t\r\n\tconst dubDelay = audioContext.createDelay(maxDelayTime)\r\n\tdubDelay.delayTime.value = delayTime\r\n\t\r\n\tconst feedbackNode = audioContext.createGain()\r\n\tfeedbackNode.gain.value = feedback\r\n\r\n\t// low pass it for that authentic dubby feeling\r\n\tconst filterNode = audioContext.createBiquadFilter()\r\n\tfilterNode.frequency.value = filter\r\n\r\n\tdubDelay.connect(feedbackNode)\r\n\tfeedbackNode.connect(filterNode)\r\n\tfilterNode.connect(dubDelay)\r\n\t// dubDelay.connect(context.destination)\r\n\r\n\treturn {\r\n\t\tname:\"dub\",\r\n\t\tnode:dubDelay,\r\n\t\tdelayTime:value => changeParameter( dubDelay, \"delayTime\", value),\r\n\t\tfeedback:value => changeParameter( feedbackNode, \"gain\", value),\r\n\t\tfilter:value => changeParameter( filterNode, \"frequency\", value) \r\n\t}\r\n}","import {changeParameter} from './effect'\r\n\r\nexport const createCompressor = async ( \r\n\taudioContext,\r\n\t// decibel value above which the compression will start taking effect.\r\n\tthreshold = -50,\r\n\t// decibel value representing the range above the threshold where the curve smoothly transitions to the compressed portion.\r\n\tknee = 40,\r\n\t// amount of change, in dB, needed in the input for a 1 dB change in the output.\r\n\tratio = 12,\r\n\t// amount of time, in seconds, required to reduce the gain by 10 dB.\r\n\tattack = 0,\r\n\t// amount of time, in seconds, required to increase the gain by 10 dB.\r\n\trelease = 0.25,\r\n\t// Is a float representing the amount of gain reduction currently applied by the compressor to the signal.\r\n\treduction = 0\r\n\t\r\n) => {\r\n\r\n\tconst compressor = audioContext.createDynamicsCompressor()\r\n\t// \tthreshold: [-100, 0],\r\n\t// \tknee: [0, 40],\r\n\t// \tratio: [1, 20],\r\n\t// \tattack: [0, 1],\r\n\t// \trelease: [0, 1]\r\n//\tcompressor.reduction.value = reduction\r\n\tcompressor.threshold.value = threshold\r\n\tcompressor.knee.value = knee\r\n\tcompressor.ratio.value = ratio\r\n\tcompressor.attack.value = attack\r\n\tcompressor.release.value = release\r\n\r\n\treturn {\r\n\t\tname:\"compressor\",\r\n\t\tnode:compressor,\r\n\t\tknee:value => changeParameter( compressor, \"knee\", value),\r\n\t\tthreshold:value => changeParameter( compressor, \"threshold\", value),\r\n\t\tratio:value => changeParameter( compressor, \"ratio\", value),\r\n\t\tattack:value => changeParameter( compressor, \"attack\", value),\r\n\t\trelease:value => changeParameter( compressor, \"release\", value)\r\n\t}\r\n}\r\n\r\n","import {changeParameter} from './effect'\r\n\r\n// distortion curve for the waveshaper, thanks to Kevin Ennis\r\n// http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion\r\n\r\nfunction makeDistortionCurve(amount) {\r\n\tvar k = typeof amount === 'number' ? amount : 50,\r\n\t\tn_samples = 44100,\r\n\t\tcurve = new Float32Array(n_samples),\r\n\t\tdeg = Math.PI / 180,\r\n\t\ti = 0,\r\n\t\tx;\r\n\tfor ( ; i < n_samples; ++i ) {\r\n\t\tx = i * 2 / n_samples - 1;\r\n\t\tcurve[i] = ( 3 + k ) * x * 20 * deg / ( Math.PI + k * Math.abs(x) );\r\n\t}\r\n\treturn curve;\r\n}\r\n\r\n\r\nexport const createDistortion = async ( \r\n\taudioContext,\r\n\tcurve = 1,\r\n\toversample = '4x'\r\n\t\r\n) => {\r\n\r\n\tconst distortionNode = audioContext.createWaveShaper()\r\n\tdistortionNode.oversample = oversample\r\n\tdistortionNode.curve = makeDistortionCurve(curve)\r\n\r\n\treturn {\r\n\t\tname:\"distortion\",\r\n\t\tnode:distortionNode,\r\n\t\tcurve:value => distortionNode.curve = makeDistortionCurve(value),\r\n\t\toversample:value => distortionNode.oversample = value\r\n\t}\r\n}\r\n","import { clamp } from '../../maths/maths'\r\n\r\n// smaller means slower\r\nconst rate = 0.1\r\n\r\nlet destinationVolume = 0\r\n\r\nexport const createAmplitude = async ( \r\n\taudioContext,\r\n\tvolume = 1,\r\n\t// smooth volume fading?\r\n\tfade = false\r\n) => {\r\n\t\r\n\tconst gainNode = audioContext.createGain()\r\n\r\n\tconst fadeVolume = (destinationVolume) => {\r\n\r\n\t\tconst currentVolume = gainNode.gain.value\r\n\t\t//gainNode.gain.value = lerp( gain.gain.value, destinationVolume, 0.1 )\r\n\t\tconst newVolume = currentVolume + (destinationVolume - currentVolume) * rate\r\n\t\tgainNode.gain.value.setValueAtTime(destinationVolume, audioContext.currentTime)\r\n\t\t\r\n\t\tif (currentVolume === destinationVolume)\r\n\t\t{\r\n\t\r\n\t\t}else{\r\n\t\t\trequestAnimationFrame( fadeVolume )\r\n\t\t}\r\n\t\treturn newVolume\r\n\t}\r\n\t\r\n\t// Set the actual volume\r\n\tconst setVolume = vol => {\r\n\t\tif (fade)\r\n\t\t{\r\n\t\t\tfadeVolume()\r\n\t\t}else{\r\n\t\t\tgainNode.gain.value = clamp(volume, 0, 1)\t\r\n\t\t}\r\n\t}\r\n\r\n\tsetVolume(volume)\r\n\r\n\treturn {\r\n\t\tname:\"amplitude\",\r\n\t\tnode:gainNode,\r\n\t\tvolume:value => {\r\n\r\n\t\t\tif (value)\r\n\t\t\t{\r\n\t\t\t\tsetVolume(value)\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\r\n\t\t\t// if we lerp\r\n\t\t\treturn gainNode.gain.value\r\n\t\t}\r\n\t}\r\n}","/**\r\n * Having written this numerous times here are some\r\n * notes for next time around.\r\n * \r\n * There are MORE MIDI notes than SAMPLES\r\n * so we have to restrict the octaves from 1-9 to 1-7\r\n * \r\n */\r\n\r\nimport {clamp} from \"../maths/maths\"\r\nimport { memoize } from \"../utils\"\r\n\r\n// Memoize as much as possible\r\n\r\nconst NOTES_ALPHABETICAL = [\"A\",\"Ab\",\"B\",\"Bb\",\"C\",\"D\", \"Db\",\"E\", \"Eb\", \"F\", \"G\",\"Gb\"]\r\n// const CONVERSION_NOTES = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"]\r\n\r\nconst NOTES_BLACK = [\"Ab\", \"Bb\", \"Db\", \"Eb\", \"Gb\"]\r\nconst NOTES_WHITE = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\" ]\r\nconst NOTES_BLACK_INDEXES = NOTES_BLACK.length - 1\r\nconst NOTES_WHITE_INDEXES = NOTES_WHITE.length - 1\r\nconst NOTE_RANGE = NOTES_ALPHABETICAL.length\r\n\r\n// renamed white notes\r\nexport const SOLFEGE_SCALE = ['Doe', 'Ray', 'Me', 'Far', 'Sew', 'La', 'Tea' ]\r\n\r\n// this is an object with the keys being the NOTE_NAMES\r\n// MIDI conversion stuff\r\nconst NOTE_NAME_MAP = {}\r\nconst NOTE_FRIENDLY_NAME_MAP = {}\r\n\r\nconst MIDI_NOTE_NUMBER_MAP = []\r\nconst MIDI_NOTE_NUMBERS = []\r\nconst MIDI_NOTE_NAMES = []\r\nconst MIDI_NOTE_FRIENDLY_NAMES = []\r\n\r\nconst MIDI_NOTE_FREQUENCIES = []\r\nconst GENERAL_MIDI_INSTRUMENTS = []\r\n\r\n\r\n/**\r\n * Convert a MIDI Note Number into a frequency in hertz\r\n * @param {Number} note \r\n * @returns {Number}\r\n */\r\n export const noteNumberToFrequency = (note) => {\r\n\tconst c = (note - 69) / 12\r\n\treturn 440 * c * c\r\n}\r\n\r\n\r\n/**\r\n * returns a note name from an index and offset\r\n * @param {Number} index \r\n * @param {Number} offset \r\n * @returns {Number} noteNumber\r\n */\r\nconst getNoteFromBank = (index=0, offset=0) => {\r\n\tconst rotation = index + offset\r\n\treturn NOTES_ALPHABETICAL[ rotation < 0 ? NOTE_RANGE + rotation : rotation % NOTE_RANGE ]\r\n}\r\n\r\n/**\r\n * The instruments are all named the same way and this method\r\n * creates the data model\r\n * \r\n * @param {String} fileType - audio file type (wav, ogg or mp3)\r\n * @param {String} dot - delimiter before file type\r\n * @returns {String} Array containing the following strings...\r\n * A0-7 / Ab1-7 / B0-7 / Bb1-Bb7 / C1-C8 / D1-7 / Db1-7 / E1-7 / Eb1-7 / F1-7 / G1-7 / Gb1-7\r\n */\r\nexport const createInstrumentBanks = (fileType=\"mp3\", dot=\".\")=>{\r\n\tconst bank = []\r\n\tfor (let b=0; b<NOTES_ALPHABETICAL.length;++b)\r\n\t{\r\n\t\tconst key = NOTES_ALPHABETICAL[b]\r\n\t\t\r\n\t\tif (key===\"A\")\r\n\t\t{\r\n\t\t\tbank.push( `A0${dot}${fileType}` )\r\n\r\n\t\t}else if (key===\"B\"){\r\n\r\n\t\t\tbank.push( `B0${dot}${fileType}` )\r\n\t\t}\r\n\r\n\t\tfor (let i=1; i<8; ++i)\r\n\t\t{\r\n\t\t\tbank.push( `${key}${i}${dot}${fileType}` )\r\n\t\t}\r\n\r\n\t\t// add an extra one for C\r\n\t\tif (key===\"C\")\r\n\t\t{\r\n\t\t\tbank.push( `C8${dot}${fileType}` )\r\n\t\t}\r\n\t}\r\n\treturn bank\r\n}\r\n\r\nconst extractKeyAndOctave = note => {\r\n\tconst key = note.charAt(0)\r\n\tconst octave = parseInt( note.charAt( note.length - 1 ) ) // + 1\r\n\treturn {\r\n\t\tkey, octave\r\n\t}\r\n}\r\n\r\nconst friendly = note => {\r\n\t\r\n\tconst {key, octave} = extractKeyAndOctave(note)\r\n\tnote = note.replace( octave, `-${octave}` )\r\n\tnote = note.replace(\"b\",\"#\")\r\n\r\n\treturn note\r\n}\r\n\r\n// This is a A0-7 / Ab1-7 / B0-7 / Bb1-Bb7 / C1-C8 / D1-7 / Db1-7 / E1-7 / Eb1-7 / F1-7 / G1-7 / Gb1-7\r\nexport const NOTE_NAMES = createInstrumentBanks('','')\r\n\r\n// for each name we do a clever thing innit...\r\nconst NOTE_NAMES_FRIENDLY = NOTE_NAMES.map( note => friendly(note) )\r\n\r\n// NB. We only have instruments for the GM Range so \r\n//\t\tall MIDI numbers below 21 should be ignored really!\r\nfor(let noteNumber = 0; noteNumber < 127; noteNumber++) \r\n{\r\n\t// const noteName = NOTE_NAMES[noteNumber]\r\n\r\n\t// MIDI scale starts at octave = -1\r\n\tconst octave = ((noteNumber / NOTE_RANGE) | 0) - 1\r\n\t// Determine which key it is from the number?\r\n\tconst key = getNoteFromBank(noteNumber % NOTE_RANGE, 4)\r\n\r\n\tconst midiNoteName = `${key}${octave}`\r\n\tconst friendlyName = friendly(midiNoteName)\r\n\r\n\t//console.log( noteNumber, \"note\", { midiNoteName, friendlyName, octave, key })\r\n\r\n\tNOTE_FRIENDLY_NAME_MAP[midiNoteName] = friendlyName\r\n\tNOTE_NAME_MAP[midiNoteName] = noteNumber\r\n\r\n\t// MIDI_NOTE_NUMBERS[noteNumber] = midiNoteName\r\n\tMIDI_NOTE_NAMES[noteNumber] = midiNoteName\r\n\tMIDI_NOTE_FRIENDLY_NAMES[noteNumber] = friendlyName\r\n\tMIDI_NOTE_NUMBER_MAP[noteNumber] = {octave,key}\r\n\r\n\tMIDI_NOTE_FREQUENCIES[noteNumber] = noteNumberToFrequency(noteNumber)\r\n\r\n\t// console.log(noteNumber, \"Converting\", {noteName, octave, key, midiNoteName, friendlyName })\r\n\r\n\t// // ensure that it exists in our super array...\r\n\tconst hasSample = NOTE_NAMES.indexOf(midiNoteName) > -1\r\n\tGENERAL_MIDI_INSTRUMENTS[noteNumber] = hasSample ? midiNoteName : `UNKNOWN`\r\n}\r\n\r\n\r\n\r\n// export const getNoteText = noteName => {\r\n// \tconst note = noteName.charAt(0)\r\n// \tlet octave\r\n// \t// if we have 3 figures we swap out the 2nd one for a \r\n// \tif (noteName.length === 3)\r\n// \t{\r\n// \t\toctave = parseInt( noteName.charAt(2) ) + 1\r\n// \t\treturn `${note}#${octave}`\r\n// \t}\r\n// \toctave = parseInt( noteName.charAt(1) ) + 1\r\n// \treturn `${note}${octave}`\r\n// }\r\n\r\n\r\n/**\r\n * what percentage of an octave results in\r\n * which musical notes\r\n * @param {Number} percent \r\n * @param {Number} octave - octaves 1-7\r\n * @param {Boolean} isMinor \r\n * @returns A1 Ab1 etc\r\n */\r\nexport const getNoteName = (percent, octave=3, isMinor=false) => {\r\n\r\n\t// restrict to 1-7 even though 0 is available for many\r\n\t// octave = clamp(octave, 1, 7)\r\n\tlet noteNumber\r\n\tlet noteName\r\n\t\r\n\tif (isMinor)\r\n\t{\r\n\t\tnoteNumber = Math.floor( percent * NOTES_BLACK_INDEXES )\r\n\t\tnoteName = NOTES_BLACK[noteNumber]\r\n\t}else{\r\n\t\tnoteNumber = Math.floor( percent * NOTES_WHITE_INDEXES )\r\n\t\tnoteName = NOTES_WHITE[noteNumber]\r\n\t}\r\n\r\n\t// here is where we need to do our majic\r\n\t// const BANKS = [\"A\",\"Ab\",\"B\",\"Bb\",\"C\",\"D\", \"Db\",\"E\", \"Eb\", \"F\", \"G\",\"Gb\"]\r\n\t// play a note from bank (this is the same for every octave?)\r\n\t// const noteNumber = Math.floor( percent * (BANKS.length-1) )\r\n\t\r\n\t// console.log(\"Creating note\", {percent, octave, isMinor, noteNumber, noteName} )\r\n\t// const noteNumber = Math.floor( percent * (NOTE_NAMES.length-1) )\r\n\t// const noteNumber = Math.floor( percent * (NOTE_NAMES.length-1) )\r\n\t// const noteNumber = Math.floor( lipPercentage * (INSTRUMENT_NAMES.length-1) )\r\n\t// const noteName = NOTE_NAMES[noteNumber]\r\n\r\n\t// just in case the note name is not found?\r\n\treturn `${noteName}${clamp(octave, 1, 7)}`\r\n\t// return noteName ? `${noteName}${clamp(octave, 1, 7)}` : `A0`\r\n}\r\n\r\n/**\r\n * return the relevent do re me fah so lat ti\r\n * @param {Number} percent \r\n * @param {*} isMinor \r\n * @returns \r\n */\r\nexport const getNoteSound = (percent, isMinor=false) => SOLFEGE_SCALE[ Math.floor( percent * (SOLFEGE_SCALE.length-1) ) ]\r\n\r\n// Pass in A0 get out the equivalent friendly name\r\nexport const getFriendlyNoteName = noteName => NOTE_FRIENDLY_NAME_MAP[noteName] || noteName\r\n\r\n\r\n/**\r\n * Get the note name (in scientific notation) of the given midi number\r\n *\r\n * It uses MIDI's [Tuning Standard](https://en.wikipedia.org/wiki/MIDI_Tuning_Standard)\r\n * where A4 is 69\r\n *\r\n * This method doesn't take into account diatonic spelling. Always the same\r\n * pitch class is given for the same midi number.\r\n *\r\n * @name midi.note\r\n * @function\r\n * @param {Integer} midi - the midi number\r\n * @return {String} the pitch\r\n */\r\nexport const convertNoteNameToMIDINoteNumber = name => NOTE_NAME_MAP[name]\r\n\r\n/**\r\n * \r\n * @param {*} note \r\n * @returns \r\n */\r\nexport const convertMIDINoteNumberToName = note => GENERAL_MIDI_INSTRUMENTS[note]\r\n\r\n/**\r\n * \r\n */\r\nexport const noteNumberToFrequencyFast = memoize(noteNumberToFrequency)\r\n\r\n\r\nconst L = Math.log(2)\r\n\r\n/**\r\n * \r\n * @param {*} f \r\n * @returns \r\n */\r\nexport const frequencyToNoteNumber = (f) => {\r\n\tconst log = Math.log(f / 440) / L\r\n\treturn Math.round(12 * log + 69)\r\n}\r\n\r\n\r\n// MIDI_NOTE_NAMES.forEach( note => \r\n// \tconsole.error(\"convertNoteNameToMIDINoteNumber\", note, convertNoteNameToMIDINoteNumber(note) , {NOTE_NAMES, NOTE_NAME_MAP, MIDI_NOTE_NAMES} ) \r\n// )\r\n\r\n// console.error(\"NOTE_NAMES\", NOTE_NAMES )\r\n// console.error(\"NOTE_NAMES_FRIENDLY\", NOTE_NAMES_FRIENDLY )\r\n\r\n// console.error(\"MIDI_NOTE_NAMES\", MIDI_NOTE_NAMES )\r\n\r\n// // console.error(\"MIDI_NOTE_FREQUENCIES\", MIDI_NOTE_FREQUENCIES )\r\n\r\n// console.error(\"MIDI_NOTE_NUMBERS\", MIDI_NOTE_NUMBERS )\r\n// console.error(\"NOTE_FRIENDLY_NAME_MAP\", NOTE_FRIENDLY_NAME_MAP )\r\n// console.error(\"MIDI_NOTE_FRIENDLY_NAMES\", MIDI_NOTE_FRIENDLY_NAMES )\r\n// console.error(\"MIDI_NOTE_NUMBER_MAP\", MIDI_NOTE_NUMBER_MAP )\r\n// console.error(\"NOTE_NAME_MAP\", NOTE_NAME_MAP  )\r\n// console.error(\"MIDI\", { NOTES_ALPHABETICAL, CHROMATIC, CONVERSION_NOTES, MIDI_NOTE_NUMBERS, MIDI_CONVERTOR })\r\n// console.error({GENERAL_MIDI_INSTRUMENTS, NOTES_ALPHABETICAL, MIDI_NOTE_NUMBERS, MIDI_NOTE_NUMBER_MAP, NOTE_NAME_MAP, NOTE_NAMES,NOTE_FRIENDLY_NAME_MAP, NOTE_NAMES_FRIENDLY})\r\n","module.exports = Promise.all([require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"sampler.e81f0e84.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"sampler.2b3f2914.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})]).then(() => module.bundle.root('iWRYu'));","module.exports = require('./helpers/bundle-url').getBundleURL('4wQTA') + \"instrument-audio-worklet.1e28b5db.js\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('4wQTA') + \"bitcrusher.worklet.0facbf8d.js\" + \"?\" + Date.now();","import { createKick, createKicks } from './synthesizers/kick' \r\nimport { createClack, createClacks } from './synthesizers/clack' \r\nimport { createHihat, createHihats } from './synthesizers/hihat' \r\nimport { createCowbell, createCowbells } from './synthesizers/cowbell' \r\nimport { createSnare, createSnares } from './synthesizers/snare' \r\n\r\n/**\r\n * create a fixed amount of instrument instances\r\n * @param {Function} factorymethod constructor method to create instance\r\n * @param {Number} quantity amount of items to create\r\n * @returns {Function} method to retrieve next item in the queue\r\n */\r\n export const createQueue = (factorymethod, quantity=5) => {\r\n\r\n\tconst instruments = []\r\n\tfor (let i=0; i < quantity; ++i)\r\n\t{\r\n\t\tconst instrument = factorymethod()\r\n\t\tinstruments.push( instrument )\r\n\t}\r\n\r\n\t// interface to play\r\n\tlet index = 0\r\n\tconst fetchNextInstrument = (...args) => {\r\n\t\tindex = index + 1 < quantity ? index + 1 : 0\r\n\t\tconst instrument = instruments[index]\r\n\t\tinstrument(...args)\r\n\t\t//instrument.apply(null, arguments)\r\n\t}\r\n\treturn fetchNextInstrument\r\n}\r\n\r\n/**\r\n * Just a drum kit you can play that has one of each of the\r\n * drum sounds set up in cascades. simply createDrumkit().kick() etc\r\n * @returns {Object<Function>} all individual instruments\r\n */\r\nexport const createDrumkit = () => {\r\n\treturn {\r\n\t\tkick : createKicks(),\r\n\t\tsnare : createSnares(),\r\n\t\that : createHihats(),\r\n\t\tcowbell : createCowbell(),\r\n\t\tclack : createClack()\r\n\t}\r\n}","import {audioContext, ZERO, getPercussionNode} from '../audio'\r\nimport {createQueue} from '../synthesizers'\r\n\r\n/**\r\n * Kick me!\r\n * @returns {Function} trigger start method\r\n */\r\nexport const createKick = () => {\r\n\r\n\tconst output = getPercussionNode()\r\n\r\n    const osc = audioContext.createOscillator()\r\n    const osc2 = audioContext.createOscillator()\r\n    const gainOsc = audioContext.createGain()\r\n    const gainOsc2 = audioContext.createGain()\r\n\tconst FREQUENCY_LO = 90\r\n\tconst FREQUENCY_HI = 40\r\n\r\n    osc.type = \"triangle\"\r\n    osc2.type = \"sine\"\r\n\t\r\n\tconst kick = (velocity=1, length=0.05, attack=0.01, duration=0.5) => {\r\n\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\t// clear anything from previous plays\r\n\t\tgainOsc.gain.cancelScheduledValues(time)\r\n\t\tgainOsc2.gain.cancelScheduledValues(time)\r\n\t\tosc.frequency.cancelScheduledValues(time)\r\n\t\tosc2.frequency.cancelScheduledValues(time)\r\n\r\n\t\tgainOsc.gain.setValueAtTime(1, time)\r\n\t\tgainOsc.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\r\n\t\tgainOsc2.gain.setValueAtTime(1, audioContext.currentTime)\r\n\t\tgainOsc2.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\r\n\t\tosc.frequency.setValueAtTime(FREQUENCY_LO, audioContext.currentTime)\r\n\t\tosc.frequency.exponentialRampToValueAtTime(attack, time + length)\r\n\t\r\n\t\tosc2.frequency.setValueAtTime(FREQUENCY_HI, audioContext.currentTime)\r\n\t\tosc2.frequency.exponentialRampToValueAtTime(attack, time + length)\r\n\t\t \r\n\t\t try{\r\n\r\n\t\t\tosc.start(time)\r\n\t\t\tosc2.start(time)\r\n\r\n\t\t }catch(error)\r\n\t\t {\r\n\r\n\t\t }\r\n\t \r\n\t\t//  osc.stop(audioContext.currentTime + duration)\r\n\t\t//  osc2.stop(audioContext.currentTime + duration)\r\n\t}\r\n \r\n    osc.connect(gainOsc)\r\n    osc2.connect(gainOsc2)\r\n    gainOsc.connect(output)\r\n    gainOsc2.connect(output)\r\n\r\n\treturn kick\r\n}\r\n\r\n// export const createKicks = (quantity=5) => {\r\n\r\n// \tconst kicks = []\r\n// \tfor (let i=0; i < quantity; ++i)\r\n// \t{\r\n// \t\tconst kick = createKick()\r\n// \t\tkicks.push( kick )\r\n// \t}\r\n\r\n// \t// interface to play\r\n// \tlet index = 0\r\n// \tconst fetchNextKick = (attack=0.01,duration=0.5) => {\r\n// \t\tindex = index + 1 < quantity ? index + 1 : 0\r\n// \t\tconst kick = kicks[index]\r\n// \t\tkick(attack, duration)\r\n// \t}\r\n// \treturn fetchNextKick\r\n// }\r\n\r\n// this is just an array of kicks\r\nexport const createKicks = (quantity=2) => createQueue(createKick, quantity)","import {audioContext, ZERO, getPercussionNode} from '../audio'\r\nimport {createQueue} from '../synthesizers'\r\n\r\n/**\r\n * Create an instance of the clack instrument\r\n * @returns {Function} trigger start method\r\n */\r\nexport const createClack = () => {\r\n\r\n\tconst output = getPercussionNode()\r\n\t\r\n\tconst cowbellGainNode = audioContext.createGain()\r\n \r\n    const bandpass = audioContext.createBiquadFilter()\r\n    bandpass.type = \"bandpass\"\r\n    bandpass.frequency.value = 2640\r\n    bandpass.Q.value = 3.5\r\n\r\n    const highpass = audioContext.createBiquadFilter()\r\n    highpass.type = \"highpass\"\r\n    highpass.frequency.value = 7000\r\n\r\n\tconst fundamental = 1\r\n    const ratios = [587,845]\r\n\r\n    const oscillators = ratios.map((ratio) => {\r\n\r\n        const oscillator = audioContext.createOscillator()\r\n        oscillator.type = \"triangle\"\r\n\t\toscillator.frequency.value = fundamental * ratio\r\n\t\toscillator.connect(bandpass)\r\n\t\treturn oscillator\r\n    })\r\n\r\n\tbandpass.connect(highpass)\r\n    highpass.connect(cowbellGainNode)\r\n\tcowbellGainNode.connect(output)\r\n\t\r\n\tconst clack = (velocity=1, length=0.05, ocatave=fundamental )=>{\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\t// clear anything from previous plays\r\n\t\tcowbellGainNode.gain.cancelScheduledValues(time)\r\n\t\toscillators.forEach( (oscillator,i) =>{ \r\n\t\t\toscillator.frequency.cancelScheduledValues(time) \r\n\t\t\toscillator.frequency.value = ocatave * ratios[i]\r\n\t\t})\r\n\t\t\r\n\t\t// set neew envelopes\r\n\t\tcowbellGainNode.gain.setValueAtTime(1, time)\r\n\t\tcowbellGainNode.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\t\r\n\t\ttry{\r\n\t\t\toscillators.forEach( oscillator => oscillator.start(time) )\r\n\t\t\r\n\t\t\t//osc4.stop(time + 0.05)  \t\t\t\r\n\t\t}catch(error){\r\n\r\n\t\t}\r\n\t}\r\n\treturn clack\r\n}\r\n\r\nexport const createClacks = (quantity=2) => createQueue(createClack, quantity)","import {audioContext, ZERO, getPercussionNode} from '../audio'\r\nimport {createQueue} from '../synthesizers'\r\n\r\n/**\r\n * Create an instance of the hi-hat instrument\r\n * @returns {Function} trigger start method\r\n */\r\nexport const createHihat = () => {\r\n\r\n\tconst output = getPercussionNode()\r\n\r\n    const gainOsc4 = audioContext.createGain()\r\n    const fundamental = 40\r\n    const ratios = [2, 3, 4.16, 5.43, 6.79, 8.21]\r\n\r\n    const bandpass = audioContext.createBiquadFilter()\r\n    bandpass.type = \"bandpass\"\r\n    bandpass.frequency.value = 10000\r\n\r\n    const highpass = audioContext.createBiquadFilter()\r\n    highpass.type = \"highpass\"\r\n    highpass.frequency.value = 7000\r\n\r\n    const oscillators = ratios.map((ratio) => {\r\n\r\n        const osc4 = audioContext.createOscillator()\r\n        osc4.type = \"square\"\r\n\t\tosc4.frequency.value = fundamental * ratio\r\n\t\tosc4.connect(bandpass)\r\n\t\treturn osc4\r\n    })\r\n\r\n\tbandpass.connect(highpass)\r\n    highpass.connect(gainOsc4)\r\n\tgainOsc4.connect(output)\r\n\t\r\n\tconst hihat = (velocity=1, length=0.05 )=>{\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\t// clear anything from previous plays\r\n\t\tgainOsc4.gain.cancelScheduledValues(time)\r\n\t\toscillators.forEach( oscillator => oscillator.frequency.cancelScheduledValues(time) )\r\n\t\t\r\n\t\t// set neew envelopes\r\n\t\tgainOsc4.gain.setValueAtTime(1, time)\r\n\t\tgainOsc4.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\t\r\n\t\ttry{\r\n\t\t\toscillators.forEach( oscillator => oscillator.start(time) )\r\n\t\t\r\n\t\t\t//osc4.stop(time + 0.05)  \t\t\t\r\n\t\t}catch(error){\r\n\r\n\t\t}\r\n\t}\r\n\treturn hihat\r\n}\r\n\r\nexport const createHihats = (quantity=3) => createQueue(createHihat, quantity)","import {audioContext, ZERO, getPercussionNode} from '../audio'\r\nimport {createQueue} from '../synthesizers'\r\n\r\n\r\n/**\r\n * Create an instance of the cowbell instrument\r\n * @returns {Function} trigger start method\r\n */\r\nexport const createCowbell = () => {\r\n\t\r\n\tconst output = getPercussionNode()\r\n\t\r\n\tconst cowbellGainNode = audioContext.createGain()\r\n \r\n    const bandpass = audioContext.createBiquadFilter()\r\n    bandpass.type = \"bandpass\"\r\n    bandpass.frequency.value = 2640\r\n    bandpass.Q.value = 3.5\r\n\r\n\tconst fundamental = 1\r\n    const ratios = [587,845]\r\n\r\n    const oscillators = ratios.map((ratio) => {\r\n\r\n        const oscillator = audioContext.createOscillator()\r\n        oscillator.type = \"triangle\"\r\n\t\toscillator.frequency.value = fundamental * ratio\r\n\t\toscillator.connect(bandpass)\r\n\t\treturn oscillator\r\n    })\r\n\r\n\tbandpass.connect(cowbellGainNode)\r\n\tcowbellGainNode.connect(output)\r\n\t\r\n\tconst cowbell = (velocity=1, length=0.05 )=>{\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\t// clear anything from previous plays\r\n\t\tcowbellGainNode.gain.cancelScheduledValues(time)\r\n\t\toscillators.forEach( oscillator => oscillator.frequency.cancelScheduledValues(time) )\r\n\t\t\r\n\t\t// set neew envelopes\r\n\t\tcowbellGainNode.gain.setValueAtTime(1, time)\r\n\t\tcowbellGainNode.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\t\r\n\t\ttry{\r\n\t\t\toscillators.forEach( oscillator => oscillator.start(time) )\r\n\t\t\r\n\t\t\t//osc4.stop(time + 0.05)  \t\t\t\r\n\t\t}catch(error){\r\n\r\n\t\t}\r\n\t}\r\n\treturn cowbell\r\n}\r\n\r\nexport const createCowbells = (quantity=2) => createQueue(createCowbell, quantity)","import {audioContext, ZERO, getPercussionNode} from '../audio'\r\nimport {createQueue} from '../synthesizers'\r\n\r\n/**\r\n * Create an instance of the snare instrument\r\n * @returns {Function} trigger start method\r\n */\r\nexport const createSnare = () => {\r\n\r\n\tconst output = getPercussionNode()\r\n\r\n    const osc3 = audioContext.createOscillator()\r\n    const gainOsc3 = audioContext.createGain()\r\n    const filterGain = audioContext.createGain()\r\n\tconst noise = audioContext.createBufferSource()\r\n\tconst buffer = audioContext.createBuffer(1, 4096, audioContext.sampleRate)\r\n\r\n\t// just allow the hihgs through\r\n\tconst filter = audioContext.createBiquadFilter()\r\n\tfilter.type = \"highpass\"\r\n\tfilter.gain.value = 2\r\n\r\n\tosc3.type = \"triangle\"\r\n\tosc3.frequency.value = 100\r\n\r\n\t// TODO Cache the noise\r\n\tconst data = buffer.getChannelData(0)\r\n\tfor (var i = 0; i < 4096; i++) \r\n\t{\r\n\t\tdata[i] = Math.random()\r\n\t}\r\n\r\n\tnoise.buffer = buffer\r\n\tnoise.loop = true\r\n\t\r\n\tosc3.connect(gainOsc3)\r\n\tgainOsc3.connect(output )\t\r\n\r\n\tnoise.connect(filter)\r\n\tfilter.connect(filterGain)\r\n\tfilterGain.connect( output )\r\n\r\n\tconst snare = (velocity=1, length = 0.3) => {\r\n\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\tfilterGain.gain.cancelScheduledValues(time)\r\n\t\tfilterGain.gain.setValueAtTime(1, time)\r\n\t\tfilterGain.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\r\n\t\tgainOsc3.gain.cancelScheduledValues(time)\r\n\t\tgainOsc3.gain.setValueAtTime(ZERO, time)\r\n\t\tgainOsc3.gain.exponentialRampToValueAtTime(ZERO, time + (length / 2 ) )\t\r\n\t\t//gainOsc3.gain.value = 0\r\n\r\n\t\t// modulate and filter freqs\r\n\t\tfilter.frequency.cancelScheduledValues(time)\r\n\t\tfilter.frequency.setValueAtTime(10, time)\r\n\t\tfilter.frequency.linearRampToValueAtTime(2000,time + length)\t\t\r\n\t\r\n\t\t//gainNode.gain.value = 1\t\t\t\r\n\t\ttry{\r\n\t\t\tosc3.start(time)\r\n\t\t\t//osc3.stop(audioContext.currentTime + 0.2)\r\n\t\t\tnoise.start(time)\r\n\t\t\t//node.stop(audioContext.currentTime + 0.2)\t\r\n\t\t}catch(error){\r\n\t\t}\r\n\t}\r\n\treturn snare\r\n}\r\nexport const createSnares = (quantity=3) => createQueue(createSnare, quantity)","\r\n// import WebMidi, { InputEventNoteon, InputEventNoteoff } from \"webmidi\"\r\nimport {WebMidi} from \"webmidi\"\r\n\r\n// https://mpe.js.org/#Installation\r\n// import mpeInstrument from 'mpe'\r\n\r\n// we load in the relevant lib...\r\nlet mpeEnabled = false\r\n\r\n// TODO: Load lib from local\r\n\r\n// Define `instrument` as an instance of `mpeInstrument`\r\n// const instrument = mpeInstrument()\r\n\r\n// Request MIDI device access from the Web MIDI API\r\n// navigator.requestMIDIAccess().then(access => {\r\n//   // Iterate over the list of inputs returned\r\n//   access.inputs.forEach(midiInput => {\r\n//     // Send 'midimessage' events to the mpe.js `instrument` instance\r\n//     midiInput.addEventListener(\r\n//       'midimessage',\r\n//       (event) => instrument.processMidiMessage(event.data)\r\n//     )\r\n//   })\r\n// })\r\n\r\n/**\r\n * Check to see if MIDI is available on this platform\r\n * @returns {Boolean} true if MIDI is available\r\n */\r\nexport const testForMIDI = () => navigator.requestMIDIAccess === undefined ? false : true\r\n\r\n/**\r\n * Initialise and connect to MIDI Hardware\r\n * @param {Function} connectedCallback - method to call when connected\r\n * @param {Function} disconnectedCallback - method to call when disconnected\r\n * @returns \r\n */\r\nexport const setupMIDI = (connectedCallback, disconnectedCallback) => new Promise ( (resolve,reject) => {\r\n\t\r\n\tWebMidi.enable().then( ports => {\r\n\r\n\t\t//console.log(\"WebMidi enabled!\", ports, ports.outputs[0] , WebMidi.outputs[0], WebMidi.outputs[0] === ports.outputs[0] )\r\n\t\t\r\n\t\t// I / O change\r\n\t\t// console.log(WebMidi.inputs)\r\n\t\t// console.log(WebMidi.outputs)\r\n\t\tWebMidi.addListener(\"connected\", function(e) {\r\n\t\t\t//console.log(e);\r\n\t\t\r\n\t\t\t// Check for MIDI Clock events\r\n\t\t\t// WebMidi.inputs[0].addListener(\"controlchange\", e => {\r\n\t\t\t// \tconsole.log(`Received 'controlchange' message.`, e);\r\n\t\t\t// })\r\n\t\t\t\r\n\t\t\tconnectedCallback && connectedCallback(e)\t\r\n\t\t})\r\n\t\t  \r\n\t\t  // Reacting when a device becomes unavailable\r\n\t\tWebMidi.addListener(\"disconnected\", function(e) {\r\n\t\t\t//console.log(e);\r\n\t\t\tdisconnectedCallback && disconnectedCallback()\r\n\t\t})\r\n\t\r\n\t\tresolve(WebMidi)\r\n\t\t\r\n\t\t// Display the current time\r\n\t\t//   console.log(WebMidi.time)\r\n\t\t\r\n\t\t// Retrieving an output port/device using its id, name or index\r\n\t\t// midiChannel = WebMidi.getOutputById(\"123456789\")\r\n\t\t// midiChannel = WebMidi.getOutputByName(\"Axiom Pro 25 Ext Out\")\r\n\t\t// midiChannel = WebMidi.outputs[0]\r\n\r\n\t\t// if (midiChannel)\r\n\t\t// {\r\n\t\t// \t// Play a note on all channels of the selected output\r\n\t\t// \tmidiChannel.playNote(\"C3\");\r\n\r\n\t\t// \t// Play a note on channel 3\r\n\t\t// \tmidiChannel.playNote(\"Gb4\", 3);\r\n\r\n\t\t// \t// Play a chord on all available channels\r\n\t\t// \tmidiChannel.playNote([\"C3\", \"D#3\", \"G3\"]);\r\n\r\n\t\t// \t// Play a chord on channel 7\r\n\t\t// \tmidiChannel.playNote([\"C3\", \"D#3\", \"G3\"], 7);\r\n\r\n\t\t// \t// Play a note at full velocity on all channels)\r\n\t\t// \tmidiChannel.playNote(\"F#-1\", \"all\", {velocity: 1});\r\n\r\n\t\t// \t// Play a note on channel 16 in 2 seconds (relative time)\r\n\t\t// \tmidiChannel.playNote(\"F5\", 16, {time: \"+2000\"});\r\n\r\n\t\t// \t// Play a note on channel 1 at an absolute time in the future\r\n\t\t// \tmidiChannel.playNote(\"F5\", 16, {time: WebMidi.time + 3000});\r\n\r\n\t\t// \t// Play a note for a duration of 2 seconds (will send a note off message in 2 seconds). Also use\r\n\t\t// \t// a low attack velocity\r\n\t\t// \tmidiChannel.playNote(\"Gb2\", 10, {duration: 2000, velocity: 0.25});\r\n\r\n\t\t// \t// Stop a playing note on all channels\r\n\t\t// \tmidiChannel.stopNote(\"C-1\");\r\n\r\n\t\t// \t// Stopping a playing note on channel 11\r\n\t\t// \tmidiChannel.stopNote(\"F3\", 11);\r\n\r\n\t\t// \t// Stop a playing note on channel 11 and use a high release velocity\r\n\t\t// \tmidiChannel.stopNote(\"G8\", 11, {velocity: 0.9});\r\n\r\n\t\t// \t// Stopping a playing note in 2.5 seconds\r\n\t\t// \tmidiChannel.stopNote(\"Bb2\", 11, {time: \"+2500\"});\r\n\r\n\t\t// \t// Send polyphonic aftertouch message to channel 8\r\n\t\t// \tmidiChannel.sendKeyAftertouch(\"C#3\", 8, 0.25);\r\n\r\n\t\t// \t// Send pitch bend (between -1 and 1) to channel 12\r\n\t\t// \tmidiChannel.sendPitchBend(-1, 12);\r\n\r\n\t\t// \t// You can chain most method calls\r\n\t\t// \tmidiChannel.playNote(\"G5\", 12)\r\n\t\t// \t\t.sendPitchBend(-0.5, 12, {time: 400}) // After 400 ms.\r\n\t\t// \t\t.sendPitchBend(0.5, 12, {time: 800})  // After 800 ms.\r\n\t\t// \t\t.stopNote(\"G5\", 12, {time: 1200});    // After 1.2 s.\r\n\r\n\t\t// }\r\n\r\n\t}).catch(error=> reject(error))\r\n\r\n})",null,"/**\n * The `EventEmitter` class provides methods to implement the _observable_ design pattern. This\n * pattern allows one to _register_ a function to execute when a specific event is _emitted_ by the\n * emitter.\n *\n * It is intended to be an abstract class meant to be extended by (or mixed into) other objects.\n */\nexport class EventEmitter {\n\n  /**\n   * Creates a new `EventEmitter`object.\n   *\n   * @param {boolean} [eventsSuspended=false] Whether the `EventEmitter` is initially in a suspended\n   * state (i.e. not executing callbacks).\n   */\n  constructor(eventsSuspended = false) {\n\n    /**\n     * An object containing a property for each event with at least one registered listener. Each\n     * event property contains an array of all the [`Listener`]{@link Listener} objects registered\n     * for the event.\n     *\n     * @type {Object}\n     * @readonly\n     */\n    this.eventMap = {};\n\n    /**\n     * Whether or not the execution of callbacks is currently suspended for this emitter.\n     *\n     * @type {boolean}\n     */\n    this.eventsSuspended = eventsSuspended == true ? true : false;\n\n  }\n\n  /**\n   * The callback function is executed when the associated event is triggered via [`emit()`](#emit).\n   * The [`emit()`](#emit) method relays all additional arguments it received to the callback\n   * functions. Since [`emit()`](#emit) can be passed a variable number of arguments, it is up to\n   * the developer to make sure the arguments match those of the associated callback. In addition,\n   * the callback also separately receives all the arguments present in the listener's\n   * [`arguments`](Listener#arguments) property. This makes it easy to pass data from where the\n   * listener is added to where the listener is executed.\n   *\n   * @callback EventEmitter~callback\n   * @param {...*} [args] A variable number of arguments matching the ones (if any) that were passed\n   * to the [`emit()`](#emit) method (except, the first one) followed by the arguments found in the\n   * listener's [`arguments`](Listener#arguments) array.\n   */\n\n  /**\n   * Adds a listener for the specified event. It returns the [`Listener`]{@link Listener} object\n   * that was created and attached to the event.\n   *\n   * To attach a global listener that will be triggered for any events, use\n   * [`EventEmitter.ANY_EVENT`]{@link #ANY_EVENT} as the first parameter. Note that a global\n   * listener will also be triggered by non-registered events.\n   *\n   * @param {string|Symbol} event The event to listen to.\n   * @param {EventEmitter~callback} callback The callback function to execute when the event occurs.\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=this] The value of `this` in the callback function.\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus executed first.\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   * @param {number} [options.remaining=Infinity] The number of times after which the callback\n   * should automatically be removed.\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`]{@link Listener#arguments}\n   * property of the [`Listener`]{@link Listener} object and can be retrieved or modified as\n   * desired.\n   *\n   * @returns {Listener} The newly created [`Listener`]{@link Listener} object.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {TypeError} The `callback` parameter must be a function.\n   */\n  addListener(event, callback, options = {}) {\n\n    if (\n      (typeof event === \"string\" && event.length < 1) ||\n      (event instanceof String && event.length < 1) ||\n      (typeof event !== \"string\" && !(event instanceof String) && event !== EventEmitter.ANY_EVENT)\n    ) {\n      throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n    }\n\n    if (typeof callback !== \"function\") throw new TypeError(\"The callback must be a function.\");\n\n    const listener = new Listener(event, this, callback, options);\n\n    if (!this.eventMap[event]) this.eventMap[event] = [];\n\n    if (options.prepend) {\n      this.eventMap[event].unshift(listener);\n    } else {\n      this.eventMap[event].push(listener);\n    }\n\n    return listener;\n\n  }\n\n  /**\n   * Adds a one-time listener for the specified event. The listener will be executed once and then\n   * destroyed. It returns the [`Listener`]{@link Listener} object that was created and attached\n   * to the event.\n   *\n   * To attach a global listener that will be triggered for any events, use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the first parameter. Note that a\n   * global listener will also be triggered by non-registered events.\n   *\n   * @param {string|Symbol} event The event to listen to\n   * @param {EventEmitter~callback} callback The callback function to execute when the event occurs\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=this] The context to invoke the callback function in.\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus executed first.\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`]{@link Listener#arguments}\n   * property of the [`Listener`]{@link Listener} object and can be retrieved or modified as\n   * desired.\n   *\n   * @returns {Listener} The newly created [`Listener`]{@link Listener} object.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {TypeError} The `callback` parameter must be a function.\n   */\n  addOneTimeListener(event, callback, options = {}) {\n    options.remaining = 1;\n    this.addListener(event, callback, options);\n  }\n\n  /**\n   * Identifier to use when adding or removing a listener that should be triggered when any events\n   * occur.\n   *\n   * @type {Symbol}\n   */\n  static get ANY_EVENT() {\n    return Symbol.for(\"Any event\");\n  }\n\n  /**\n   * Returns `true` if the specified event has at least one registered listener. If no event is\n   * specified, the method returns `true` if any event has at least one listener registered (this\n   * includes global listeners registered to\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}).\n   *\n   * Note: to specifically check for global listeners added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}, use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} [event=(any event)] The event to check\n   * @param {function|Listener} [callback=(any callback)] The actual function that was added to the\n   * event or the {@link Listener} object returned by `addListener()`.\n   * @returns {boolean}\n   */\n  hasListener(event, callback) {\n\n    if (event === undefined) {\n\n      // Check for ANY_EVENT\n      if (\n        this.eventMap[EventEmitter.ANY_EVENT] && this.eventMap[EventEmitter.ANY_EVENT].length > 0\n      ) {\n        return true;\n      }\n\n      // Check for any regular events\n      return Object.entries(this.eventMap).some(([, value]) => {\n        return value.length > 0;\n      });\n\n    } else {\n\n      if (this.eventMap[event] && this.eventMap[event].length > 0) {\n\n        if (callback instanceof Listener) {\n          let result = this.eventMap[event].filter(listener => listener === callback);\n          return result.length > 0;\n        } else if (typeof callback === \"function\") {\n          let result = this.eventMap[event].filter(listener => listener.callback === callback);\n          return result.length > 0;\n        } else if (callback != undefined) {\n          return false;\n        }\n\n        return true;\n\n      } else {\n        return false;\n      }\n\n\n    }\n\n  }\n\n  /**\n   * An array of all the unique event names for which the emitter has at least one registered\n   * listener.\n   *\n   * Note: this excludes global events registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} because they are not tied to a\n   * specific event.\n   *\n   * @type {string[]}\n   * @readonly\n   */\n  get eventNames() {\n    return Object.keys(this.eventMap);\n  }\n\n  /**\n   * Returns an array of all the [`Listener`]{@link Listener} objects that have been registered for\n   * a specific event.\n   *\n   * Please note that global events (those added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}) are not returned for \"regular\"\n   * events. To get the list of global listeners, specifically use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} event The event to get listeners for.\n   * @returns {Listener[]} An array of [`Listener`]{@link Listener} objects.\n   */\n  getListeners(event) {\n    return this.eventMap[event] || [];\n  }\n\n  /**\n   * Suspends execution of all callbacks functions registered for the specified event type.\n   *\n   * You can suspend execution of callbacks registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} by passing\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} to `suspendEvent()`. Beware that this\n   * will not suspend all callbacks but only those registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}. While this may seem counter-intuitive\n   * at first glance, it allows the selective suspension of global listeners while leaving other\n   * listeners alone. If you truly want to suspends all callbacks for a specific\n   * [`EventEmitter`]{@link EventEmitter}, simply set its `eventsSuspended` property to `true`.\n   *\n   * @param {string|Symbol} event The event name (or `EventEmitter.ANY_EVENT`) for which to suspend\n   * execution of all callback functions.\n   */\n  suspendEvent(event) {\n    this.getListeners(event).forEach(listener => {\n      listener.suspended = true;\n    });\n  }\n\n  /**\n   * Resumes execution of all suspended callback functions registered for the specified event type.\n   *\n   * You can resume execution of callbacks registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} by passing\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} to `unsuspendEvent()`. Beware that\n   * this will not resume all callbacks but only those registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}. While this may seem\n   * counter-intuitive, it allows the selective unsuspension of global listeners while leaving other\n   * callbacks alone.\n   *\n   * @param {string|Symbol} event The event name (or `EventEmitter.ANY_EVENT`) for which to resume\n   * execution of all callback functions.\n   */\n  unsuspendEvent(event) {\n    this.getListeners(event).forEach(listener => {\n      listener.suspended = false;\n    });\n  }\n\n  /**\n   * Returns the number of listeners registered for a specific event.\n   *\n   * Please note that global events (those added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}) do not count towards the remaining\n   * number for a \"regular\" event. To get the number of global listeners, specifically use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} event The event which is usually a string but can also be the special\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} symbol.\n   * @returns {number} An integer representing the number of listeners registered for the specified\n   * event.\n   */\n  getListenerCount(event) {\n    return this.getListeners(event).length;\n  }\n\n  /**\n   * Executes the callback function of all the [`Listener`]{@link Listener} objects registered for\n   * a given event. The callback functions are passed the additional arguments passed to `emit()`\n   * (if any) followed by the arguments present in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object (if any).\n   *\n   * If the [`eventsSuspended`]{@link #eventsSuspended} property is `true` or the\n   * [`Listener.suspended`]{@link Listener#suspended} property is `true`, the callback functions\n   * will not be executed.\n   *\n   * This function returns an array containing the return values of each of the callbacks.\n   *\n   * It should be noted that the regular listeners are triggered first followed by the global\n   * listeners (those added with [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}).\n   *\n   * @param {string} event The event\n   * @param {...*} args Arbitrary number of arguments to pass along to the callback functions\n   *\n   * @returns {Array} An array containing the return value of each of the executed listener\n   * functions.\n   *\n   * @throws {TypeError} The `event` parameter must be a string.\n   */\n  emit(event, ...args) {\n\n    if (typeof event !== \"string\" && !(event instanceof String)) {\n      throw new TypeError(\"The 'event' parameter must be a string.\");\n    }\n\n    if (this.eventsSuspended) return;\n\n    // We collect return values from all listeners here\n    let results = [];\n\n    // We must make sure that we do not have undefined otherwise concat() will add an undefined\n    // entry in the array.\n    let listeners = this.eventMap[EventEmitter.ANY_EVENT] || [];\n    if (this.eventMap[event]) listeners = listeners.concat(this.eventMap[event]);\n\n    listeners.forEach(listener => {\n\n      // This is the per-listener suspension check\n      if (listener.suspended) return;\n\n      let params = [...args];\n      if (Array.isArray(listener.arguments)) params = params.concat(listener.arguments);\n\n      if (listener.remaining > 0) {\n        results.push(listener.callback.apply(listener.context, params));\n        listener.count++;\n      }\n\n      if (--listener.remaining < 1) listener.remove();\n\n    });\n\n    return results;\n\n  }\n\n  /**\n   * Removes all the listeners that were added to the object upon which the method is called and\n   * that match the specified criterias. If no parameters are passed, all listeners added to this\n   * object will be removed. If only the `event` parameter is passed, all listeners for that event\n   * will be removed from that object. You can remove global listeners by using\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the first parameter.\n   *\n   * To use more granular options, you must at least define the `event`. Then, you can specify the\n   * callback to match or one or more of the additional options.\n   *\n   * @param {string} [event] The event name.\n   * @param {EventEmitter~callback} [callback] Only remove the listeners that match this exact\n   * callback function.\n   * @param {Object} [options]\n   * @param {*} [options.context] Only remove the listeners that have this exact context.\n   * @param {number} [options.remaining] Only remove the listener if it has exactly that many\n   * remaining times to be executed.\n   */\n  removeListener(event, callback, options = {}) {\n\n    if (event === undefined) {\n      this.eventMap = {};\n      return;\n    } else if (!this.eventMap[event]) {\n      return;\n    }\n\n    // Find listeners that do not match the criterias (those are the ones we will keep)\n    let listeners = this.eventMap[event].filter(listener => {\n\n      return (callback && listener.callback !== callback) ||\n        (options.remaining && options.remaining !== listener.remaining) ||\n        (options.context && options.context !== listener.context);\n\n    });\n\n    if (listeners.length) {\n      this.eventMap[event] = listeners;\n    } else {\n      delete this.eventMap[event];\n    }\n\n  }\n\n  /**\n   * The `waitFor()` method is an async function which returns a promise. The promise is fulfilled\n   * when the specified event occurs. The event can be a regular event or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} (if you want to resolve as soon as any\n   * event is emitted).\n   *\n   * If the `duration` option is set, the promise will only be fulfilled if the event is emitted\n   * within the specified duration. If the event has not been fulfilled after the specified\n   * duration, the promise is rejected. This makes it super easy to wait for an event and timeout\n   * after a certain time if the event is not triggered.\n   *\n   * @param {string|Symbol} event The event to wait for\n   * @param {Object} [options={}]\n   * @param {number} [options.duration=Infinity] The number of milliseconds to wait before the\n   * promise is automatically rejected.\n   */\n  async waitFor(event, options = {}) {\n\n    options.duration = parseInt(options.duration);\n    if (isNaN(options.duration) || options.duration <= 0) options.duration = Infinity;\n\n    return new Promise((resolve, reject) => {\n\n      let timeout;\n\n      let listener = this.addListener(event, () => {\n        clearTimeout(timeout);\n        resolve();\n      }, {remaining: 1});\n\n      if (options.duration !== Infinity) {\n        timeout = setTimeout(() => {\n          listener.remove();\n          reject(\"The duration expired before the event was emitted.\");\n        }, options.duration);\n      }\n\n    });\n\n  }\n\n  /**\n   * The number of unique events that have registered listeners.\n   *\n   * Note: this excludes global events registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} because they are not tied to a\n   * specific event.\n   *\n   * @type {number}\n   * @readonly\n   */\n  get eventCount() {\n    return Object.keys(this.eventMap).length;\n  }\n\n}\n\n/**\n * The `Listener` class represents a single event listener object. Such objects keep all relevant\n * contextual information such as the event being listened to, the object the listener was attached\n * to, the callback function and so on.\n *\n */\nexport class Listener {\n\n  /**\n   * Creates a new `Listener` object\n   *\n   * @param {string|Symbol} event The event being listened to\n   * @param {EventEmitter} target The [`EventEmitter`]{@link EventEmitter} object that the listener\n   * is attached to.\n   * @param {EventEmitter~callback} callback The function to call when the listener is triggered\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=target] The context to invoke the listener in (a.k.a. the\n   * value of `this` inside the callback function).\n   * @param {number} [options.remaining=Infinity] The remaining number of times after which the\n   * callback should automatically be removed.\n   * @param {array} [options.arguments] An array of arguments that will be passed separately to the\n   * callback function upon execution. The array is stored in the [`arguments`]{@link #arguments}\n   * property and can be retrieved or modified as desired.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {ReferenceError} The `target` parameter is mandatory.\n   * @throws {TypeError} The `callback` must be a function.\n   */\n  constructor(event, target, callback, options = {}) {\n\n    if (\n      typeof event !== \"string\" &&\n      !(event instanceof String) &&\n      event !== EventEmitter.ANY_EVENT\n    ) {\n      throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n    }\n\n    if (!target) {\n      throw new ReferenceError(\"The 'target' parameter is mandatory.\");\n    }\n\n    if (typeof callback !== \"function\") {\n      throw new TypeError(\"The 'callback' must be a function.\");\n    }\n\n    // Convert single value argument to array\n    if (options.arguments !== undefined && !Array.isArray(options.arguments)) {\n      options.arguments = [options.arguments];\n    }\n\n    // Define default options and merge declared options into them,\n    options = Object.assign({\n      context: target,\n      remaining: Infinity,\n      arguments: undefined,\n      duration: Infinity,\n    }, options);\n\n    // Make sure it is eventually deleted if a duration is supplied\n    if (options.duration !== Infinity) {\n      setTimeout(() => this.remove(), options.duration);\n    }\n\n    /**\n     * An array of arguments to pass to the callback function upon execution.\n     * @type {array}\n     */\n    this.arguments = options.arguments;\n\n    /**\n     * The callback function to execute.\n     * @type {Function}\n     */\n    this.callback = callback;\n\n    /**\n     * The context to execute the callback function in (a.k.a. the value of `this` inside the\n     * callback function)\n     * @type {Object}\n     */\n    this.context = options.context;\n\n    /**\n     * The number of times the listener function was executed.\n     * @type {number}\n     */\n    this.count = 0;\n\n    /**\n     * The event name.\n     * @type {string}\n     */\n    this.event = event;\n\n    /**\n     * The remaining number of times after which the callback should automatically be removed.\n     * @type {number}\n     */\n    this.remaining = parseInt(options.remaining) >= 1 ? parseInt(options.remaining) : Infinity;\n\n    /**\n     * Whether this listener is currently suspended or not.\n     * @type {boolean}\n     */\n    this.suspended = false;\n\n    /**\n     * The object that the event is attached to (or that emitted the event).\n     * @type {EventEmitter}\n     */\n    this.target = target;\n\n  }\n\n  /**\n   * Removes the listener from its target.\n   */\n  remove() {\n    this.target.removeListener(\n      this.event,\n      this.callback,\n      {context: this.context, remaining: this.remaining}\n    );\n  }\n\n}\n","/**\n * The `Enumerations` class contains enumerations and arrays of elements used throughout the\n * library. All its properties are static and should be referenced using the class name. For\n * example: `Enumerations.CHANNEL_MESSAGES`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Enumerations {\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_MESSAGES instead)\n   * @private\n   * @static\n   */\n  static get MIDI_CHANNEL_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MESSAGES;\n\n  }\n\n  /**\n   * Enumeration of all MIDI channel message names and their associated 4-bit numerical value:\n   *\n   * | Message Name        | Hexadecimal | Decimal |\n   * |---------------------|-------------|---------|\n   * | `noteoff`           | 0x8         | 8       |\n   * | `noteon`            | 0x9         | 9       |\n   * | `keyaftertouch`     | 0xA         | 10      |\n   * | `controlchange`     | 0xB         | 11      |\n   * | `programchange`     | 0xC         | 12      |\n   * | `channelaftertouch` | 0xD         | 13      |\n   * | `pitchbend`         | 0xE         | 14      |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_MESSAGES() {\n\n    return {\n      noteoff: 0x8,           // 8\n      noteon: 0x9,            // 9\n      keyaftertouch: 0xA,     // 10\n      controlchange: 0xB,     // 11\n      programchange: 0xC,     // 12\n      channelaftertouch: 0xD, // 13\n      pitchbend: 0xE          // 14\n    };\n\n  }\n\n  /**\n   * A simple array of the 16 valid MIDI channel numbers (`1` to `16`):\n   *\n   * @type {number[]}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_NUMBERS() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n  }\n\n  /**\n   * @type {number[]}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_NUMBERS instead)\n   * @private\n   * @static\n   */\n  static get MIDI_CHANNEL_NUMBERS() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_NUMBERS array has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_NUMBERS array instead.\"\n      );\n    }\n\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n\n  }\n\n  /**\n   * Enumeration of all MIDI channel mode message names and their associated numerical value:\n   *\n   *\n   * | Message Name          | Hexadecimal | Decimal |\n   * |-----------------------|-------------|---------|\n   * | `allsoundoff`         | 0x78        | 120     |\n   * | `resetallcontrollers` | 0x79        | 121     |\n   * | `localcontrol`        | 0x7A        | 122     |\n   * | `allnotesoff`         | 0x7B        | 123     |\n   * | `omnimodeoff`         | 0x7C        | 124     |\n   * | `omnimodeon`          | 0x7D        | 125     |\n   * | `monomodeon`          | 0x7E        | 126     |\n   * | `polymodeon`          | 0x7F        | 127     |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_MODE_MESSAGES() {\n\n    return {\n      allsoundoff: 120,\n      resetallcontrollers: 121,\n      localcontrol: 122,\n      allnotesoff: 123,\n      omnimodeoff: 124,\n      omnimodeon: 125,\n      monomodeon: 126,\n      polymodeon: 127\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_MODE_MESSAGES instead)\n   * @private\n   * @readonly\n   * @static\n   */\n  static get MIDI_CHANNEL_MODE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MODE_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_MODE_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MODE_MESSAGES;\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @static\n   * @private\n   * @deprecated since version 3.0.26 (use `CONTROL_CHANGE_MESSAGES` instead)\n   */\n  static get MIDI_CONTROL_CHANGE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CONTROL_CHANGE_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CONTROL_CHANGE_MESSAGES array instead.\"\n      );\n    }\n\n    return {\n\n      bankselectcoarse: 0,\n      modulationwheelcoarse: 1,\n      breathcontrollercoarse: 2,\n      controller3: 3,\n      footcontrollercoarse: 4,\n      portamentotimecoarse: 5,\n      dataentrycoarse: 6,\n      volumecoarse: 7,\n      balancecoarse: 8,\n      controller9: 9,\n      pancoarse: 10,\n      expressioncoarse: 11,\n      effectcontrol1coarse: 12,\n      effectcontrol2coarse: 13,\n      controller14: 14,\n      controller15: 15,\n      generalpurposeslider1: 16,\n      generalpurposeslider2: 17,\n      generalpurposeslider3: 18,\n      generalpurposeslider4: 19,\n      controller20: 20,\n      controller21: 21,\n      controller22: 22,\n      controller23: 23,\n      controller24: 24,\n      controller25: 25,\n      controller26: 26,\n      controller27: 27,\n      controller28: 28,\n      controller29: 29,\n      controller30: 30,\n      controller31: 31,\n      bankselectfine: 32,\n      modulationwheelfine: 33,\n      breathcontrollerfine: 34,\n      controller35: 35,\n      footcontrollerfine: 36,\n      portamentotimefine: 37,\n      dataentryfine: 38,\n      volumefine: 39,\n      balancefine: 40,\n      controller41: 41,\n      panfine: 42,\n      expressionfine: 43,\n      effectcontrol1fine: 44,\n      effectcontrol2fine: 45,\n      controller46: 46,\n      controller47: 47,\n      controller48: 48,\n      controller49: 49,\n      controller50: 50,\n      controller51: 51,\n      controller52: 52,\n      controller53: 53,\n      controller54: 54,\n      controller55: 55,\n      controller56: 56,\n      controller57: 57,\n      controller58: 58,\n      controller59: 59,\n      controller60: 60,\n      controller61: 61,\n      controller62: 62,\n      controller63: 63,\n      holdpedal: 64,\n      portamento: 65,\n      sustenutopedal: 66,\n      softpedal: 67,\n      legatopedal: 68,\n      hold2pedal: 69,\n      soundvariation: 70,\n      resonance: 71,\n      soundreleasetime: 72,\n      soundattacktime: 73,\n      brightness: 74,\n      soundcontrol6: 75,\n      soundcontrol7: 76,\n      soundcontrol8: 77,\n      soundcontrol9: 78,\n      soundcontrol10: 79,\n      generalpurposebutton1: 80,\n      generalpurposebutton2: 81,\n      generalpurposebutton3: 82,\n      generalpurposebutton4: 83,\n      controller84: 84,\n      controller85: 85,\n      controller86: 86,\n      controller87: 87,\n      controller88: 88,\n      controller89: 89,\n      controller90: 90,\n      reverblevel: 91,\n      tremololevel: 92,\n      choruslevel: 93,\n      celestelevel: 94,\n      phaserlevel: 95,\n      databuttonincrement: 96,\n      databuttondecrement: 97,\n      nonregisteredparametercoarse: 98,\n      nonregisteredparameterfine: 99,\n      registeredparametercoarse: 100,\n      registeredparameterfine: 101,\n      controller102: 102,\n      controller103: 103,\n      controller104: 104,\n      controller105: 105,\n      controller106: 106,\n      controller107: 107,\n      controller108: 108,\n      controller109: 109,\n      controller110: 110,\n      controller111: 111,\n      controller112: 112,\n      controller113: 113,\n      controller114: 114,\n      controller115: 115,\n      controller116: 116,\n      controller117: 117,\n      controller118: 118,\n      controller119: 119,\n      allsoundoff: 120,\n      resetallcontrollers: 121,\n      localcontrol: 122,\n      allnotesoff: 123,\n      omnimodeoff: 124,\n      omnimodeon: 125,\n      monomodeon: 126,\n      polymodeon: 127\n\n    };\n\n  }\n\n  /**\n   * An array of objects, ordered by control number, describing control change messages. Each object\n   * in the array has 3 properties with some objects having a fourth one (`position`) :\n   *\n   *  * `number`: MIDI control number (0-127);\n   *  * `name`: name of emitted event (eg: `bankselectcoarse`, `choruslevel`, etc) that can be\n   *  listened to;\n   *  * `description`: user-friendly description of the controller's purpose;\n   *  * `position` (optional): whether this controller's value should be considered an `msb` or\n   *  `lsb`\n   *\n   * Not all controllers have a predefined function. For those that don't, `name` is the word\n   * \"controller\" followed by the number (e.g. `controller112`).\n   *\n   * | Event name                     | Control Number |\n   * |--------------------------------|----------------|\n   * | `bankselectcoarse`             | 0              |\n   * | `modulationwheelcoarse`        | 1              |\n   * | `breathcontrollercoarse`       | 2              |\n   * | `controller3`                  | 3              |\n   * | `footcontrollercoarse`         | 4              |\n   * | `portamentotimecoarse`         | 5              |\n   * | `dataentrycoarse`              | 6              |\n   * | `volumecoarse`                 | 7              |\n   * | `balancecoarse`                | 8              |\n   * | `controller9`                  | 9              |\n   * | `pancoarse`                    | 10             |\n   * | `expressioncoarse`             | 11             |\n   * | `effectcontrol1coarse`         | 12             |\n   * | `effectcontrol2coarse`         | 13             |\n   * | `controller14`                 | 14             |\n   * | `controller15`                 | 15             |\n   * | `generalpurposecontroller1`    | 16             |\n   * | `generalpurposecontroller2`    | 17             |\n   * | `generalpurposecontroller3`    | 18             |\n   * | `generalpurposecontroller4`    | 19             |\n   * | `controller20`                 | 20             |\n   * | `controller21`                 | 21             |\n   * | `controller22`                 | 22             |\n   * | `controller23`                 | 23             |\n   * | `controller24`                 | 24             |\n   * | `controller25`                 | 25             |\n   * | `controller26`                 | 26             |\n   * | `controller27`                 | 27             |\n   * | `controller28`                 | 28             |\n   * | `controller29`                 | 29             |\n   * | `controller30`                 | 30             |\n   * | `controller31`                 | 31             |\n   * | `bankselectfine`               | 32             |\n   * | `modulationwheelfine`          | 33             |\n   * | `breathcontrollerfine`         | 34             |\n   * | `controller35`                 | 35             |\n   * | `footcontrollerfine`           | 36             |\n   * | `portamentotimefine`           | 37             |\n   * | `dataentryfine`                | 38             |\n   * | `channelvolumefine`            | 39             |\n   * | `balancefine`                  | 40             |\n   * | `controller41`                 | 41             |\n   * | `panfine`                      | 42             |\n   * | `expressionfine`               | 43             |\n   * | `effectcontrol1fine`           | 44             |\n   * | `effectcontrol2fine`           | 45             |\n   * | `controller46`                 | 46             |\n   * | `controller47`                 | 47             |\n   * | `controller48`                 | 48             |\n   * | `controller49`                 | 49             |\n   * | `controller50`                 | 50             |\n   * | `controller51`                 | 51             |\n   * | `controller52`                 | 52             |\n   * | `controller53`                 | 53             |\n   * | `controller54`                 | 54             |\n   * | `controller55`                 | 55             |\n   * | `controller56`                 | 56             |\n   * | `controller57`                 | 57             |\n   * | `controller58`                 | 58             |\n   * | `controller59`                 | 59             |\n   * | `controller60`                 | 60             |\n   * | `controller61`                 | 61             |\n   * | `controller62`                 | 62             |\n   * | `controller63`                 | 63             |\n   * | `damperpedal`                  | 64             |\n   * | `portamento`                   | 65             |\n   * | `sostenuto`                    | 66             |\n   * | `softpedal`                    | 67             |\n   * | `legatopedal`                  | 68             |\n   * | `hold2`                        | 69             |\n   * | `soundvariation`               | 70             |\n   * | `resonance`                    | 71             |\n   * | `releasetime`                  | 72             |\n   * | `attacktime`                   | 73             |\n   * | `brightness`                   | 74             |\n   * | `decaytime`                    | 75             |\n   * | `vibratorate`                  | 76             |\n   * | `vibratodepth`                 | 77             |\n   * | `vibratodelay`                 | 78             |\n   * | `controller79`                 | 79             |\n   * | `generalpurposecontroller5`    | 80             |\n   * | `generalpurposecontroller6`    | 81             |\n   * | `generalpurposecontroller7`    | 82             |\n   * | `generalpurposecontroller8`    | 83             |\n   * | `portamentocontrol`            | 84             |\n   * | `controller85`                 | 85             |\n   * | `controller86`                 | 86             |\n   * | `controller87`                 | 87             |\n   * | `highresolutionvelocityprefix` | 88             |\n   * | `controller89`                 | 89             |\n   * | `controller90`                 | 90             |\n   * | `effect1depth`                 | 91             |\n   * | `effect2depth`                 | 92             |\n   * | `effect3depth`                 | 93             |\n   * | `effect4depth`                 | 94             |\n   * | `effect5depth`                 | 95             |\n   * | `dataincrement`                | 96             |\n   * | `datadecrement`                | 97             |\n   * | `nonregisteredparameterfine`   | 98             |\n   * | `nonregisteredparametercoarse` | 99             |\n   * | `nonregisteredparameterfine`   | 100            |\n   * | `registeredparametercoarse`    | 101            |\n   * | `controller102`                | 102            |\n   * | `controller103`                | 103            |\n   * | `controller104`                | 104            |\n   * | `controller105`                | 105            |\n   * | `controller106`                | 106            |\n   * | `controller107`                | 107            |\n   * | `controller108`                | 108            |\n   * | `controller109`                | 109            |\n   * | `controller110`                | 110            |\n   * | `controller111`                | 111            |\n   * | `controller112`                | 112            |\n   * | `controller113`                | 113            |\n   * | `controller114`                | 114            |\n   * | `controller115`                | 115            |\n   * | `controller116`                | 116            |\n   * | `controller117`                | 117            |\n   * | `controller118`                | 118            |\n   * | `controller119`                | 119            |\n   * | `allsoundoff`                  | 120            |\n   * | `resetallcontrollers`          | 121            |\n   * | `localcontrol`                 | 122            |\n   * | `allnotesoff`                  | 123            |\n   * | `omnimodeoff`                  | 124            |\n   * | `omnimodeon`                   | 125            |\n   * | `monomodeon`                   | 126            |\n   * | `polymodeon`                   | 127            |\n   *\n   * @type {object[]}\n   * @readonly\n   * @static\n   * @since 3.1\n   */\n  static get CONTROL_CHANGE_MESSAGES() {\n\n    return [\n      {\n        number: 0,\n        name: \"bankselectcoarse\",\n        description: \"Bank Select (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 1,\n        name: \"modulationwheelcoarse\",\n        description: \"Modulation Wheel (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 2,\n        name: \"breathcontrollercoarse\",\n        description: \"Breath Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 3,\n        name: \"controller3\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 4,\n        name: \"footcontrollercoarse\",\n        description: \"Foot Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 5,\n        name: \"portamentotimecoarse\",\n        description: \"Portamento Time (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 6,\n        name: \"dataentrycoarse\",\n        description: \"Data Entry (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 7,\n        name: \"volumecoarse\",\n        description: \"Channel Volume (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 8,\n        name: \"balancecoarse\",\n        description: \"Balance (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 9,\n        name: \"controller9\",\n        description: \"Controller 9 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 10,\n        name: \"pancoarse\",\n        description: \"Pan (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 11,\n        name: \"expressioncoarse\",\n        description: \"Expression Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 12,\n        name: \"effectcontrol1coarse\",\n        description: \"Effect Control 1 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 13,\n        name: \"effectcontrol2coarse\",\n        description: \"Effect Control 2 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 14,\n        name: \"controller14\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 15,\n        name: \"controller15\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 16,\n        name: \"generalpurposecontroller1\",\n        description: \"General Purpose Controller 1 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 17,\n        name: \"generalpurposecontroller2\",\n        description: \"General Purpose Controller 2 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 18,\n        name: \"generalpurposecontroller3\",\n        description: \"General Purpose Controller 3 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 19,\n        name: \"generalpurposecontroller4\",\n        description: \"General Purpose Controller 4 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 20,\n        name: \"controller20\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 21,\n        name: \"controller21\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 22,\n        name: \"controller22\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 23,\n        name: \"controller23\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 24,\n        name: \"controller24\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 25,\n        name: \"controller25\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 26,\n        name: \"controller26\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 27,\n        name: \"controller27\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 28,\n        name: \"controller28\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 29,\n        name: \"controller29\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 30,\n        name: \"controller30\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 31,\n        name: \"controller31\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 32,\n        name: \"bankselectfine\",\n        description: \"Bank Select (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 33,\n        name: \"modulationwheelfine\",\n        description: \"Modulation Wheel (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 34,\n        name: \"breathcontrollerfine\",\n        description: \"Breath Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 35,\n        name: \"controller35\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 36,\n        name: \"footcontrollerfine\",\n        description: \"Foot Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 37,\n        name: \"portamentotimefine\",\n        description: \"Portamento Time (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 38,\n        name: \"dataentryfine\",\n        description: \"Data Entry (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 39,\n        name: \"channelvolumefine\",\n        description: \"Channel Volume (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 40,\n        name: \"balancefine\",\n        description: \"Balance (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 41,\n        name: \"controller41\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 42,\n        name: \"panfine\",\n        description: \"Pan (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 43,\n        name: \"expressionfine\",\n        description: \"Expression Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 44,\n        name: \"effectcontrol1fine\",\n        description: \"Effect control 1 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 45,\n        name: \"effectcontrol2fine\",\n        description: \"Effect control 2 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 46,\n        name: \"controller46\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 47,\n        name: \"controller47\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 48,\n        name: \"controller48\",\n        description: \"General Purpose Controller 1 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 49,\n        name: \"controller49\",\n        description: \"General Purpose Controller 2 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 50,\n        name: \"controller50\",\n        description: \"General Purpose Controller 3 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 51,\n        name: \"controller51\",\n        description: \"General Purpose Controller 4 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 52,\n        name: \"controller52\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 53,\n        name: \"controller53\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 54,\n        name: \"controller54\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 55,\n        name: \"controller55\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 56,\n        name: \"controller56\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 57,\n        name: \"controller57\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 58,\n        name: \"controller58\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 59,\n        name: \"controller59\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 60,\n        name: \"controller60\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 61,\n        name: \"controller61\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 62,\n        name: \"controller62\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 63,\n        name: \"controller63\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 64,\n        name: \"damperpedal\",\n        description: \"Damper Pedal On/Off\"\n      },\n      {\n        number: 65,\n        name: \"portamento\",\n        description: \"Portamento On/Off\"\n      },\n      {\n        number: 66,\n        name: \"sostenuto\",\n        description: \"Sostenuto On/Off\"\n      },\n      {\n        number: 67,\n        name: \"softpedal\",\n        description: \"Soft Pedal On/Off\"\n      },\n      {\n        number: 68,\n        name: \"legatopedal\",\n        description: \"Legato Pedal On/Off\"\n      },\n      {\n        number: 69,\n        name: \"hold2\",\n        description: \"Hold 2 On/Off\"\n      },\n      {\n        number: 70,\n        name: \"soundvariation\",\n        description: \"Sound Variation\",\n        position: \"lsb\"\n      },\n      {\n        number: 71,\n        name: \"resonance\",\n        description: \"Resonance\",\n        position: \"lsb\"\n      },\n      {\n        number: 72,\n        name: \"releasetime\",\n        description: \"Release Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 73,\n        name: \"attacktime\",\n        description: \"Attack Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 74,\n        name: \"brightness\",\n        description: \"Brightness\",\n        position: \"lsb\"\n      },\n      {\n        number: 75,\n        name: \"decaytime\",\n        description: \"Decay Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 76,\n        name: \"vibratorate\",\n        description: \"Vibrato Rate\",\n        position: \"lsb\"\n      },\n      {\n        number: 77,\n        name: \"vibratodepth\",\n        description: \"Vibrato Depth\",\n        position: \"lsb\"\n      },\n      {\n        number: 78,\n        name: \"vibratodelay\",\n        description: \"Vibrato Delay\",\n        position: \"lsb\"\n      },\n      {\n        number: 79,\n        name: \"controller79\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 80,\n        name: \"generalpurposecontroller5\",\n        description: \"General Purpose Controller 5\",\n        position: \"lsb\"\n      },\n      {\n        number: 81,\n        name: \"generalpurposecontroller6\",\n        description: \"General Purpose Controller 6\",\n        position: \"lsb\"\n      },\n      {\n        number: 82,\n        name: \"generalpurposecontroller7\",\n        description: \"General Purpose Controller 7\",\n        position: \"lsb\"\n      },\n      {\n        number: 83,\n        name: \"generalpurposecontroller8\",\n        description: \"General Purpose Controller 8\",\n        position: \"lsb\"\n      },\n      {\n        number: 84,\n        name: \"portamentocontrol\",\n        description: \"Portamento Control\",\n        position: \"lsb\"\n      },\n      {\n        number: 85,\n        name: \"controller85\",\n        description: \"Undefined\"\n      },\n      {\n        number: 86,\n        name: \"controller86\",\n        description: \"Undefined\"\n      },\n      {\n        number: 87,\n        name: \"controller87\",\n        description: \"Undefined\"\n      },\n      {\n        number: 88,\n        name: \"highresolutionvelocityprefix\",\n        description: \"High Resolution Velocity Prefix\",\n        position: \"lsb\"\n      },\n      {\n        number: 89,\n        name: \"controller89\",\n        description: \"Undefined\"\n      },\n      {\n        number: 90,\n        name: \"controller90\",\n        description: \"Undefined\"\n      },\n      {\n        number: 91,\n        name: \"effect1depth\",\n        description: \"Effects 1 Depth (Reverb Send Level)\"\n      },\n      {\n        number: 92,\n        name: \"effect2depth\",\n        description: \"Effects 2 Depth\"\n      },\n      {\n        number: 93,\n        name: \"effect3depth\",\n        description: \"Effects 3 Depth (Chorus Send Level)\"\n      },\n      {\n        number: 94,\n        name: \"effect4depth\",\n        description: \"Effects 4 Depth\"\n      },\n      {\n        number: 95,\n        name: \"effect5depth\",\n        description: \"Effects 5 Depth\"\n      },\n      {\n        number: 96,\n        name: \"dataincrement\",\n        description: \"Data Increment\"\n      },\n      {\n        number: 97,\n        name: \"datadecrement\",\n        description: \"Data Decrement\"\n      },\n      {\n        number: 98,\n        name: \"nonregisteredparameterfine\",\n        description: \"Non-Registered Parameter Number (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 99,\n        name: \"nonregisteredparametercoarse\",\n        description: \"Non-Registered Parameter Number (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 100,\n        name: \"registeredparameterfine\",\n        description: \"Registered Parameter Number (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 101,\n        name: \"registeredparametercoarse\",\n        description: \"Registered Parameter Number (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 102,\n        name: \"controller102\",\n        description: \"Undefined\"\n      },\n      {\n        number: 103,\n        name: \"controller103\",\n        description: \"Undefined\"\n      },\n      {\n        number: 104,\n        name: \"controller104\",\n        description: \"Undefined\"\n      },\n      {\n        number: 105,\n        name: \"controller105\",\n        description: \"Undefined\"\n      },\n      {\n        number: 106,\n        name: \"controller106\",\n        description: \"Undefined\"\n      },\n      {\n        number: 107,\n        name: \"controller107\",\n        description: \"Undefined\"\n      },\n      {\n        number: 108,\n        name: \"controller108\",\n        description: \"Undefined\"\n      },\n      {\n        number: 109,\n        name: \"controller109\",\n        description: \"Undefined\"\n      },\n      {\n        number: 110,\n        name: \"controller110\",\n        description: \"Undefined\"\n      },\n      {\n        number: 111,\n        name: \"controller111\",\n        description: \"Undefined\"\n      },\n      {\n        number: 112,\n        name: \"controller112\",\n        description: \"Undefined\"\n      },\n      {\n        number: 113,\n        name: \"controller113\",\n        description: \"Undefined\"\n      },\n      {\n        number: 114,\n        name: \"controller114\",\n        description: \"Undefined\"\n      },\n      {\n        number: 115,\n        name: \"controller115\",\n        description: \"Undefined\"\n      },\n      {\n        number: 116,\n        name: \"controller116\",\n        description: \"Undefined\"\n      },\n      {\n        number: 117,\n        name: \"controller117\",\n        description: \"Undefined\"\n      },\n      {\n        number: 118,\n        name: \"controller118\",\n        description: \"Undefined\"\n      },\n      {\n        number: 119,\n        name: \"controller119\",\n        description: \"Undefined\"\n      },\n      {\n        number: 120,\n        name: \"allsoundoff\",\n        description: \"All Sound Off\"\n      },\n      {\n        number: 121,\n        name: \"resetallcontrollers\",\n        description: \"Reset All Controllers\"\n      },\n      {\n        number: 122,\n        name: \"localcontrol\",\n        description: \"Local Control On/Off\"\n      },\n      {\n        number: 123,\n        name: \"allnotesoff\",\n        description: \"All Notes Off\"\n      },\n      {\n        number: 124,\n        name: \"omnimodeoff\",\n        description: \"Omni Mode Off\"\n      },\n      {\n        number: 125,\n        name: \"omnimodeon\",\n        description: \"Omni Mode On\"\n      },\n      {\n        number: 126,\n        name: \"monomodeon\",\n        description: \"Mono Mode On\"\n      },\n      {\n        number: 127,\n        name: \"polymodeon\",\n        description: \"Poly Mode On\"\n      },\n    ];\n\n  }\n\n  /**\n   * Enumeration of all MIDI registered parameters and their associated pair of numerical values.\n   * MIDI registered parameters extend the original list of control change messages. Currently,\n   * there are only a limited number of them:\n   *\n   *\n   * | Control Function             | [LSB, MSB]   |\n   * |------------------------------|--------------|\n   * | `pitchbendrange`             | [0x00, 0x00] |\n   * | `channelfinetuning`          | [0x00, 0x01] |\n   * | `channelcoarsetuning`        | [0x00, 0x02] |\n   * | `tuningprogram`              | [0x00, 0x03] |\n   * | `tuningbank`                 | [0x00, 0x04] |\n   * | `modulationrange`            | [0x00, 0x05] |\n   * | `azimuthangle`               | [0x3D, 0x00] |\n   * | `elevationangle`             | [0x3D, 0x01] |\n   * | `gain`                       | [0x3D, 0x02] |\n   * | `distanceratio`              | [0x3D, 0x03] |\n   * | `maximumdistance`            | [0x3D, 0x04] |\n   * | `maximumdistancegain`        | [0x3D, 0x05] |\n   * | `referencedistanceratio`     | [0x3D, 0x06] |\n   * | `panspreadangle`             | [0x3D, 0x07] |\n   * | `rollangle`                  | [0x3D, 0x08] |\n   *\n   * @enum {Object.<string, number[]>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get REGISTERED_PARAMETERS() {\n\n    return {\n      pitchbendrange: [0x00, 0x00],\n      channelfinetuning: [0x00, 0x01],\n      channelcoarsetuning: [0x00, 0x02],\n      tuningprogram: [0x00, 0x03],\n      tuningbank: [0x00, 0x04],\n\n      modulationrange: [0x00, 0x05],\n      azimuthangle: [0x3D, 0x00],\n      elevationangle: [0x3D, 0x01],\n      gain: [0x3D, 0x02],\n      distanceratio: [0x3D, 0x03],\n      maximumdistance: [0x3D, 0x04],\n      maximumdistancegain: [0x3D, 0x05],\n      referencedistanceratio: [0x3D, 0x06],\n      panspreadangle: [0x3D, 0x07],\n      rollangle: [0x3D, 0x08]\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number[]>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.REGISTERED_PARAMETERS instead)\n   * @private\n   * @static\n   */\n  static get MIDI_REGISTERED_PARAMETERS() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_REGISTERED_PARAMETERS enum has been deprecated. Use the \" +\n        \"Enumerations.REGISTERED_PARAMETERS enum instead.\"\n      );\n    }\n\n    return Enumerations.MIDI_REGISTERED_PARAMETERS;\n\n  }\n\n  /**\n   * Enumeration of all valid MIDI system messages and matching numerical values. This library also\n   * uses two additional custom messages.\n   *\n   * **System Common Messages**\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `sysex`                | 0xF0        |  240    |\n   * | `timecode`             | 0xF1        |  241    |\n   * | `songposition`         | 0xF2        |  242    |\n   * | `songselect`           | 0xF3        |  243    |\n   * | `tunerequest`          | 0xF6        |  246    |\n   * | `sysexend`             | 0xF7        |  247    |\n   *\n   * The `sysexend` message is never actually received. It simply ends a sysex stream.\n   *\n   * **System Real-Time Messages**\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `clock`                | 0xF8        |  248    |\n   * | `start`                | 0xFA        |  250    |\n   * | `continue`             | 0xFB        |  251    |\n   * | `stop`                 | 0xFC        |  252    |\n   * | `activesensing`        | 0xFE        |  254    |\n   * | `reset`                | 0xFF        |  255    |\n   *\n   * Values 249 and 253 are relayed by the\n   * [Web MIDI API](https://developer.mozilla.org/en-US/docs/Web/API/Web_MIDI_API) but they do not\n   * serve any specific purpose. The\n   * [MIDI 1.0 spec](https://www.midi.org/specifications/item/table-1-summary-of-midi-message)\n   * simply states that they are undefined/reserved.\n   *\n   * **Custom Messages**\n   *\n   * These two messages are mostly for internal use. They are not MIDI messages and cannot be sent\n   * or forwarded.\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `midimessage`          |             |  0      |\n   * | `unknownsystemmessage` |             |  -1     |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get SYSTEM_MESSAGES() {\n\n    return {\n\n      // System common messages\n      sysex: 0xF0,            // 240\n      timecode: 0xF1,         // 241\n      songposition: 0xF2,     // 242\n      songselect: 0xF3,       // 243\n      tunerequest: 0xF6,      // 246\n      tuningrequest: 0xF6,    // for backwards-compatibility (deprecated in version 3.0)\n      sysexend: 0xF7,         // 247 (never actually received - simply ends a sysex)\n\n      // System real-time messages\n      clock: 0xF8,            // 248\n      start: 0xFA,            // 250\n      continue: 0xFB,         // 251\n      stop: 0xFC,             // 252\n      activesensing: 0xFE,    // 254\n      reset: 0xFF,            // 255\n\n      // Custom WebMidi.js messages\n      midimessage: 0,\n      unknownsystemmessage: -1\n\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.SYSTEM_MESSAGES instead)\n   * @private\n   * @static\n   */\n  static get MIDI_SYSTEM_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_SYSTEM_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.SYSTEM_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.SYSTEM_MESSAGES;\n\n  }\n\n  /**\n   * Array of channel-specific event names that can be listened for. This includes channel mode\n   * events and RPN/NRPN events.\n   *\n   * @type {string[]}\n   * @readonly\n   */\n  static get CHANNEL_EVENTS() {\n\n    return [\n\n      // MIDI channel message events\n      \"noteoff\",\n      \"controlchange\",\n      \"noteon\",\n      \"keyaftertouch\",\n      \"programchange\",\n      \"channelaftertouch\",\n      \"pitchbend\",\n\n      // MIDI channel mode events\n      \"allnotesoff\",\n      \"allsoundoff\",\n      \"localcontrol\",\n      \"monomode\",\n      \"omnimode\",\n      \"resetallcontrollers\",\n\n      // RPN/NRPN events\n      \"nrpn\",\n      \"nrpn-dataentrycoarse\",\n      \"nrpn-dataentryfine\",\n      \"nrpn-dataincrement\",\n      \"nrpn-datadecrement\",\n      \"rpn\",\n      \"rpn-dataentrycoarse\",\n      \"rpn-dataentryfine\",\n      \"rpn-dataincrement\",\n      \"rpn-datadecrement\",\n\n      // Legacy (remove in v4)\n      \"nrpn-databuttonincrement\",\n      \"nrpn-databuttondecrement\",\n      \"rpn-databuttonincrement\",\n      \"rpn-databuttondecrement\",\n\n    ];\n  }\n\n}\n","import {WebMidi} from \"./WebMidi.js\";\nimport {Utilities} from \"./Utilities.js\";\n\n/**\n * The `Note` class represents a single musical note such as `\"D3\"`, `\"G#4\"`, `\"F-1\"`, `\"Gb7\"`, etc.\n *\n * `Note` objects can be played back on a single channel by calling\n * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same\n * output, by calling [`Output.playNote()`]{@link Output#playNote}.\n *\n * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.\n * These can be changed by passing in the appropriate option. It is also possible to set a\n * system-wide default for attack and release velocities by using the\n * [`WebMidi.defaults`](WebMidi#defaults) property.\n *\n * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and\n * [`rawRelease`](#rawRelease) to both get and set the values.\n *\n * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped\n * when the duration has elapsed by sending a `\"noteoff\"` event. By default, the duration is set to\n * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a\n * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},\n * [`Output.stopNote()`]{@link Output#stopNote} or similar.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Note {\n\n  /**\n   * Creates a `Note` object.\n   *\n   * @param value {string|number} The value used to create the note. If an identifier string is used,\n   * it must start with the note letter, optionally followed by an accidental and followed by the\n   * octave number (`\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`, etc.). If a number is used, it must be an\n   * integer between 0 and 127. In this case, middle C is considered to be C4 (note number 60).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should be\n   * explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @throws {Error} Invalid note identifier\n   * @throws {RangeError} Invalid name value\n   * @throws {RangeError} Invalid accidental value\n   * @throws {RangeError} Invalid octave value\n   * @throws {RangeError} Invalid duration value\n   * @throws {RangeError} Invalid attack value\n   * @throws {RangeError} Invalid release value\n   */\n  constructor(value, options = {}) {\n\n    // Assign property defaults\n    this.duration = WebMidi.defaults.note.duration;\n    this.attack = WebMidi.defaults.note.attack;\n    this.release = WebMidi.defaults.note.release;\n\n    // Assign property values from options (validation occurs in setter)\n    if (options.duration != undefined) this.duration = options.duration;\n    if (options.attack != undefined) this.attack = options.attack;\n    if (options.rawAttack != undefined) this.attack = Utilities.from7bitToFloat(options.rawAttack);\n    if (options.release != undefined) this.release = options.release;\n    if (options.rawRelease != undefined) {\n      this.release = Utilities.from7bitToFloat(options.rawRelease);\n    }\n\n    // Assign note depending on the way it was specified (name or number)\n    if (Number.isInteger(value)) {\n      this.identifier = Utilities.toNoteIdentifier(value);\n    } else {\n      this.identifier = value;\n    }\n\n  }\n\n  /**\n   * The name, optional accidental and octave of the note, as a string.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get identifier() {\n    return this._name + (this._accidental || \"\") + this._octave;\n  }\n  set identifier(value) {\n\n    const fragments = Utilities.getNoteDetails(value);\n\n    if (WebMidi.validation) {\n      if (!value) throw new Error(\"Invalid note identifier\");\n    }\n\n    this._name = fragments.name;\n    this._accidental = fragments.accidental;\n    this._octave = fragments.octave;\n\n  }\n\n  /**\n   * The name (letter) of the note. If you need the full name with octave and accidental, you can\n   * use the [`identifier`]{@link Note#identifier} property instead.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n\n    if (WebMidi.validation) {\n      value = value.toUpperCase();\n      if (![\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"].includes(value)) {\n        throw new Error(\"Invalid name value\");\n      }\n    }\n\n    this._name = value;\n\n  }\n\n  /**\n   * The accidental (#, ##, b or bb) of the note.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get accidental() {\n    return this._accidental;\n  }\n  set accidental(value) {\n\n    if (WebMidi.validation) {\n      value = value.toLowerCase();\n      if (![\"#\", \"##\", \"b\", \"bb\"].includes(value)) throw new Error(\"Invalid accidental value\");\n    }\n\n    this._accidental = value;\n\n  }\n\n  /**\n   * The octave of the note.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get octave() {\n    return this._octave;\n  }\n  set octave(value) {\n\n    if (WebMidi.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new Error(\"Invalid octave value\");\n    }\n\n    this._octave = value;\n\n  }\n\n  /**\n   * The duration of the note as a positive decimal number representing the number of milliseconds\n   * that the note should play for.\n   *\n   * @type {number}\n   * @since 3.0.0\n   */\n  get duration() {\n    return this._duration;\n  }\n  set duration(value) {\n\n    if (WebMidi.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || value === null || value < 0) {\n        throw new RangeError(\"Invalid duration value.\");\n      }\n    }\n\n    this._duration = value;\n\n  }\n\n  /**\n   * The attack velocity of the note as an integer between 0 and 1.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get attack() {\n    return this._attack;\n  }\n  set attack(value) {\n\n    if (WebMidi.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || !(value >= 0 && value <= 1)) {\n        throw new RangeError(\"Invalid attack value.\");\n      }\n    }\n\n    this._attack = value;\n\n  }\n\n  /**\n   * The release velocity of the note as an integer between 0 and 1.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get release() {\n    return this._release;\n  }\n  set release(value) {\n\n    if (WebMidi.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || !(value >= 0 && value <= 1)) {\n        throw new RangeError(\"Invalid release value.\");\n      }\n    }\n\n    this._release = value;\n\n  }\n\n  /**\n   * The attack velocity of the note as a positive integer between 0 and 127.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get rawAttack() {\n    return Utilities.fromFloatTo7Bit(this._attack);\n  }\n  set rawAttack(value) {\n    this._attack = Utilities.from7bitToFloat(value);\n  }\n\n  /**\n   * The release velocity of the note as a positive integer between 0 and 127.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get rawRelease() {\n    return Utilities.fromFloatTo7Bit(this._release);\n  }\n  set rawRelease(value) {\n    this._release = Utilities.from7bitToFloat(value);\n  }\n\n  /**\n   * The MIDI number of the note (`0` - `127`). This number is derived from the note identifier\n   * using C4 as a reference for middle C.\n   *\n   * @type {number}\n   * @readonly\n   * @since 3.0.0\n   */\n  get number() {\n    return Utilities.toNoteNumber(this.identifier);\n  }\n\n  /**\n   * Returns a MIDI note number offset by octave and/or semitone. If the calculated value is less\n   * than 0, 0 will be returned. If the calculated value is more than 127, 127 will be returned. If\n   * an invalid value is supplied, 0 will be used.\n   *\n   * @param [octaveOffset] {number} An integer to offset the note number by octave.\n   * @param [semitoneOffset] {number} An integer to offset the note number by semitone.\n   * @returns {number} An integer between 0 and 127\n   */\n  getOffsetNumber(octaveOffset = 0, semitoneOffset = 0) {\n\n    if (WebMidi.validation) {\n      octaveOffset = parseInt(octaveOffset) || 0;\n      semitoneOffset = parseInt(semitoneOffset) || 0;\n    }\n\n    return Math.min(Math.max(this.number + (octaveOffset * 12) + semitoneOffset, 0), 127);\n\n  }\n\n}\n","import {Note} from \"./Note.js\";\nimport {WebMidi} from \"./WebMidi.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/**\n * The `Utilities` class contains general-purpose utility methods. All methods are static and\n * should be called using the class name. For example: `Utilities.getNoteDetails(\"C4\")`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Utilities {\n\n  /**\n   * Returns a MIDI note number matching the identifier passed in the form of a string. The\n   * identifier must include the octave number. The identifier also optionally include a sharp (#),\n   * a double sharp (##), a flat (b) or a double flat (bb) symbol. For example, these are all valid\n   * identifiers: C5, G4, D#-1, F0, Gb7, Eb-1, Abb4, B##6, etc.\n   *\n   * When converting note identifiers to numbers, C4 is considered to be middle C (MIDI note number\n   * 60) as per the scientific pitch notation standard.\n   *\n   * The resulting note number can be offset by using the `octaveOffset` parameter.\n   *\n   * @param identifier {string} The identifier in the form of a letter, followed by an optional \"#\",\n   * \"##\", \"b\" or \"bb\" followed by the octave number. For exemple: C5, G4, D#-1, F0, Gb7, Eb-1,\n   * Abb4, B##6, etc.\n   *\n   * @param {number} [octaveOffset=0] A integer to offset the octave by.\n   *\n   * @returns {number} The MIDI note number (an integer between 0 and 127).\n   *\n   * @throws RangeError Invalid 'octaveOffset' value\n   *\n   * @throws TypeError Invalid note identifier\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   * @static\n   */\n  static toNoteNumber(identifier, octaveOffset = 0) {\n\n    // Validation\n    octaveOffset = octaveOffset == undefined ? 0 : parseInt(octaveOffset);\n    if (isNaN(octaveOffset)) throw new RangeError(\"Invalid 'octaveOffset' value\");\n    if (typeof identifier !== \"string\") identifier = \"\";\n\n    const fragments = this.getNoteDetails(identifier);\n    if (!fragments) throw new TypeError(\"Invalid note identifier\");\n\n    const notes = { C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 };\n    let result = (fragments.octave + 1 + octaveOffset) * 12;\n    result += notes[fragments.name];\n\n    if (fragments.accidental) {\n      if (fragments.accidental.startsWith(\"b\")) {\n        result -= fragments.accidental.length;\n      } else {\n        result += fragments.accidental.length;\n      }\n    }\n\n    if (result < 0 || result > 127) throw new RangeError(\"Invalid octaveOffset value\");\n\n    return result;\n\n  }\n\n  /**\n   * Given a proper note identifier (`C#4`, `Gb-1`, etc.) or a valid MIDI note number (0-127), this\n   * method returns an object containing broken down details about the specified note (uppercase\n   * letter, accidental and octave).\n   *\n   * When a number is specified, the translation to note is done using a value of 60 for middle C\n   * (C4 = middle C).\n   *\n   * @param value {string|number} A note identifier A  atring (\"C#4\", \"Gb-1\", etc.) or a MIDI note\n   * number (0-127).\n   *\n   * @returns {{accidental: string, identifier: string, name: string, octave: number }}\n   *\n   * @throws TypeError Invalid note identifier\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static getNoteDetails(value) {\n\n    if (Number.isInteger(value)) value = this.toNoteIdentifier(value);\n\n    const matches = value.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)$/i);\n    if (!matches) throw new TypeError(\"Invalid note identifier\");\n\n    const name = matches[1].toUpperCase();\n    const octave = parseInt(matches[3]);\n    let accidental = matches[2].toLowerCase();\n    accidental = accidental === \"\" ? undefined : accidental;\n\n    const fragments = {\n      accidental: accidental,\n      identifier: name + (accidental || \"\") + octave,\n      name: name,\n      octave: octave\n    };\n\n    return fragments;\n\n  }\n\n  /**\n   * Returns a sanitized array of valid MIDI channel numbers (1-16). The parameter should be a\n   * single integer or an array of integers.\n   *\n   * For backwards-compatibility, passing `undefined` as a parameter to this method results in all\n   * channels being returned (1-16). Otherwise, parameters that cannot successfully be parsed to\n   * integers between 1 and 16 are silently ignored.\n   *\n   * @param [channel] {number|number[]} An integer or an array of integers to parse as channel\n   * numbers.\n   *\n   * @returns {number[]} An array of 0 or more valid MIDI channel numbers.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static sanitizeChannels(channel) {\n\n    let channels;\n\n    if (WebMidi.validation) {\n\n      if (channel === \"all\") { // backwards-compatibility\n        channels = [\"all\"];\n      } else if (channel === \"none\") { // backwards-compatibility\n        return [];\n      }\n\n    }\n\n    if (!Array.isArray(channel)) {\n      channels = [channel];\n    } else {\n      channels = channel;\n    }\n\n    // In order to preserve backwards-compatibility, we let this assignment as it is.\n    if (channels.indexOf(\"all\") > -1) {\n      channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n    }\n\n    return channels\n      .map(function(ch) {\n        return parseInt(ch);\n      })\n      .filter(function(ch) {\n        return (ch >= 1 && ch <= 16);\n      });\n\n  }\n\n  /**\n   * Returns a valid timestamp, relative to the navigation start of the document, derived from the\n   * `time` parameter. If the parameter is a string starting with the \"+\" sign and followed by a\n   * number, the resulting timestamp will be the sum of the current timestamp plus that number. If\n   * the parameter is a positive number, it will be returned as is. Otherwise, false will be\n   * returned.\n   *\n   * @param [time] {number|string} The time string (e.g. `\"+2000\"`) or number to parse\n   * @return {number|false} A positive number or `false` (if the time cannot be converted)\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static toTimestamp(time) {\n\n    let value = false;\n\n    const parsed = parseFloat(time);\n    if (isNaN(parsed)) return false;\n\n    if (typeof time === \"string\" && time.substring(0, 1) === \"+\") {\n      if (parsed >= 0) value = WebMidi.time + parsed;\n    } else {\n      if (parsed >= 0) value = parsed;\n    }\n\n    return value;\n\n  }\n\n  /**\n   * Returns a valid MIDI note number (0-127) given the specified input. The input usually is a\n   * string containing a note identifier (`\"C3\"`, `\"F#4\"`, `\"D-2\"`, `\"G8\"`, etc.). If an integer\n   * between 0 and 127 is passed, it will simply be returned as is (for convenience). Other strings\n   * will be parsed for integer value, if possible.\n   *\n   * If the input is an identifier, the resulting note number is offset by the `octaveOffset`\n   * parameter. For example, if you pass in \"C4\" (note number 60) and the `octaveOffset` value is\n   * -2, the resulting MIDI note number will be 36.\n   *\n   * @param input {string|number} A string or number to extract the MIDI note number from.\n   * @param octaveOffset {number} An integer to offset the octave by\n   *\n   * @returns {number|false} A valid MIDI note number (0-127) or `false` if the input could not\n   * successfully be parsed to a note number.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static guessNoteNumber(input, octaveOffset) {\n\n    // Validate and, if necessary, assign default\n    octaveOffset = parseInt(octaveOffset) || 0;\n\n    let output = false;\n\n    // Check input type\n    if (Number.isInteger(input) && input >= 0 && input <= 127) {        // uint\n      output = parseInt(input);\n    } else if (parseInt(input) >= 0 && parseInt(input) <= 127) {        // float or uint as string\n      output = parseInt(input);\n    } else if (typeof input === \"string\" || input instanceof String) {  // string\n      try {\n        output = this.toNoteNumber(input.trim(), octaveOffset);\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return output;\n\n  }\n\n  /**\n   * Returns an identifier string representing a note name (with optional accidental) followed by an\n   * octave number. The octave can be offset by using the `octaveOffset` parameter.\n   *\n   * @param {number} number The MIDI note number to convert to a note identifier\n   * @param {number} octaveOffset An offset to apply to the resulting octave\n   *\n   * @returns {string}\n   *\n   * @throws RangeError Invalid note number\n   * @throws RangeError Invalid octaveOffset value\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static toNoteIdentifier(number, octaveOffset) {\n\n    number = parseInt(number);\n    if (isNaN(number) || number < 0 || number > 127) throw new RangeError(\"Invalid note number\");\n\n    octaveOffset = octaveOffset == undefined ? 0 : parseInt(octaveOffset);\n    if (isNaN(octaveOffset)) throw new RangeError(\"Invalid octaveOffset value\");\n\n    const notes = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n    const octave = Math.floor(number / 12 - 1) + octaveOffset;\n    return notes[number % 12] + octave.toString();\n\n  }\n\n  /**\n   * Converts the `input` parameter to a valid [`Note`]{@link Note} object. The input usually is an\n   * unsigned integer (0-127) or a note identifier (`\"C4\"`, `\"G#5\"`, etc.). If the input is a\n   * [`Note`]{@link Note} object, it will be returned as is.\n   *\n   * If the input is a note number or identifier, it is possible to specify options by providing the\n   * `options` parameter.\n   *\n   * @param [input] {number|string|Note}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should\n   * be explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.octaveOffset=0] An integer to offset the octave by. **This is only\n   * used when the input value is a note identifier.**\n   *\n   * @returns {Note}\n   *\n   * @throws TypeError The input could not be parsed to a note\n   *\n   * @since version 3.0.0\n   * @static\n   */\n  static buildNote(input, options= {}) {\n\n    options.octaveOffset = parseInt(options.octaveOffset) || 0;\n\n    // If it's already a Note, we're done\n    if (input instanceof Note) return input;\n\n    let number = this.guessNoteNumber(input, options.octaveOffset);\n\n    if (number === false) { // We use a comparison b/c the note can be 0 (which equates to false)\n      throw new TypeError(`The input could not be parsed as a note (${input})`);\n    }\n\n    // If we got here, we have a proper note number. Before creating the new note, we strip out\n    // 'octaveOffset' because it has already been factored in when calling guessNoteNumber().\n    options.octaveOffset = undefined;\n    return new Note(number, options);\n\n  }\n\n  /**\n   * Converts an input value, which can be an unsigned integer (0-127), a note identifier, a\n   * [`Note`]{@link Note}  object or an array of the previous types, to an array of\n   * [`Note`]{@link Note}  objects.\n   *\n   * [`Note`]{@link Note}  objects are returned as is. For note numbers and identifiers, a\n   * [`Note`]{@link Note} object is created with the options specified. An error will be thrown when\n   * encountering invalid input.\n   *\n   * Note: if both the `attack` and `rawAttack` options are specified, the later has priority. The\n   * same goes for `release` and `rawRelease`.\n   *\n   * @param [notes] {number|string|Note|number[]|string[]|Note[]}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should\n   * be explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.octaveOffset=0] An integer to offset the octave by. **This is only\n   * used when the input value is a note identifier.**\n   *\n   * @returns {Note[]}\n   *\n   * @throws TypeError An element could not be parsed as a note.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static buildNoteArray(notes, options = {}) {\n\n    let result = [];\n    if (!Array.isArray(notes)) notes = [notes];\n\n    notes.forEach(note => {\n      result.push(this.buildNote(note, options));\n    });\n\n    return result;\n\n  }\n\n  /**\n   * Returns a number between 0 and 1 representing the ratio of the input value divided by 127 (7\n   * bit). The returned value is restricted between 0 and 1 even if the input is greater than 127 or\n   * smaller than 0.\n   *\n   * Passing `Infinity` will return `1` and passing `-Infinity` will return `0`. Otherwise, when the\n   * input value cannot be converted to an integer, the method returns 0.\n   *\n   * @param value {number} A positive integer between 0 and 127 (inclusive)\n   * @returns {number} A number between 0 and 1 (inclusive)\n   * @static\n   */\n  static from7bitToFloat(value) {\n    if (value === Infinity) value = 127;\n    value = parseInt(value) || 0;\n    return Math.min(Math.max(value / 127, 0), 1);\n  }\n\n  /**\n   * Returns an integer between 0 and 127 which is the result of multiplying the input value by\n   * 127. The input value should be a number between 0 and 1 (inclusively). The returned value is\n   * restricted between 0 and 127 even if the input is greater than 1 or smaller than 0.\n   *\n   * Passing `Infinity` will return `127` and passing `-Infinity` will return `0`. Otherwise, when\n   * the input value cannot be converted to a number, the method returns 0.\n   *\n   * @param value {number} A positive float between 0 and 1 (inclusive)\n   * @returns {number} A number between 0 and 127 (inclusive)\n   * @static\n   */\n  static fromFloatTo7Bit(value) {\n    if (value === Infinity) value = 1;\n    value = parseFloat(value) || 0;\n    return Math.min(Math.max(Math.round(value * 127), 0), 127);\n  }\n\n  /**\n   * Combines and converts MSB and LSB values (0-127) to a float between 0 and 1. The returned value\n   * is within between 0 and 1 even if the result is greater than 1 or smaller than 0.\n   *\n   * @param msb {number} The most significant byte as a integer between 0 and 127.\n   * @param [lsb=0] {number} The least significant byte as a integer between 0 and 127.\n   * @returns {number} A float between 0 and 1.\n   */\n  static fromMsbLsbToFloat(msb, lsb = 0) {\n\n    if (WebMidi.validation) {\n      msb = Math.min(Math.max(parseInt(msb) || 0, 0), 127);\n      lsb = Math.min(Math.max(parseInt(lsb) || 0, 0), 127);\n    }\n\n    const value = ((msb << 7) + lsb) / 16383;\n    return Math.min(Math.max(value, 0), 1);\n\n  }\n\n  /**\n   * Extracts 7bit MSB and LSB values from the supplied float.\n   *\n   * @param value {number} A float between 0 and 1\n   * @returns {{lsb: number, msb: number}}\n   */\n  static fromFloatToMsbLsb(value) {\n\n    if (WebMidi.validation) {\n      value = Math.min(Math.max(parseFloat(value) || 0, 0), 1);\n    }\n\n    const multiplied = Math.round(value * 16383);\n\n    return {\n      msb: multiplied >> 7,\n      lsb: multiplied & 0x7F\n    };\n\n  }\n\n  /**\n   * Returns the supplied MIDI note number offset by the requested octave and semitone values. If\n   * the calculated value is less than 0, 0 will be returned. If the calculated value is more than\n   * 127, 127 will be returned. If an invalid offset value is supplied, 0 will be used.\n   *\n   * @param number {number} The MIDI note to offset as an integer between 0 and 127.\n   * @param octaveOffset {number} An integer to offset the note by (in octave)\n   * @param octaveOffset {number} An integer to offset the note by (in semitones)\n   * @returns {number} An integer between 0 and 127\n   *\n   * @throws {Error} Invalid note number\n   * @static\n   */\n  static offsetNumber(number, octaveOffset = 0, semitoneOffset = 0) {\n\n    if (WebMidi.validation) {\n      number = parseInt(number);\n      if (isNaN(number)) throw new Error(\"Invalid note number\");\n      octaveOffset = parseInt(octaveOffset) || 0;\n      semitoneOffset = parseInt(semitoneOffset) || 0;\n    }\n\n    return Math.min(Math.max(number + (octaveOffset * 12) + semitoneOffset, 0), 127);\n\n  }\n\n  /**\n   * Returns the name of the first property of the supplied object whose value is equal to the one\n   * supplied. If nothing is found, `undefined` is returned.\n   *\n   * @param object {object} The object to look for the property in.\n   * @param value {*} Any value that can be expected to be found in the object's properties.\n   * @returns {string|undefined} The name of the matching property or `undefined` if nothing is\n   * found.\n   * @static\n   */\n  static getPropertyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  }\n\n  /**\n   * Returns the name of a control change message matching the specified number (0-127). Some valid\n   * control change numbers do not have a specific name or purpose assigned in the MIDI\n   * [spec](https://midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2).\n   * In these cases, the method returns `controllerXXX` (where XXX is the number).\n   *\n   * @param {number} number An integer (0-127) representing the control change message\n   * @returns {string|undefined} The matching control change name or `undefined` if no match was\n   * found.\n   *\n   * @static\n   */\n  static getCcNameByNumber(number) {\n\n    if (WebMidi.validation) {\n      number = parseInt(number);\n      if (!(number >= 0 && number <= 127)) return undefined;\n    }\n\n    return Enumerations.CONTROL_CHANGE_MESSAGES[number].name;\n\n  }\n\n  /**\n   * Returns the number of a control change message matching the specified name.\n   *\n   * @param {string} name A string representing the control change message\n   * @returns {string|undefined} The matching control change number or `undefined` if no match was\n   * found.\n   *\n   * @since 3.1\n   * @static\n   */\n  static getCcNumberByName(name) {\n    let message = Enumerations.CONTROL_CHANGE_MESSAGES.find(element => element.name === name);\n    if (message) {\n      return message.number;\n    } else {\n      // Legacy (remove in v4)\n      return Enumerations.MIDI_CONTROL_CHANGE_MESSAGES[name];\n    }\n  }\n\n  /**\n   * Returns the channel mode name matching the specified number. If no match is found, the function\n   * returns `false`.\n   *\n   * @param {number} number An integer representing the channel mode message (120-127)\n   * @returns {string|false} The name of the matching channel mode or `false` if no match could be\n   * found.\n   *\n   * @since 2.0.0\n   */\n  static getChannelModeByNumber(number) {\n\n    if ( !(number >= 120 && number <= 127) ) return false;\n\n    for (let cm in Enumerations.CHANNEL_MODE_MESSAGES) {\n\n      if (\n        Enumerations.CHANNEL_MODE_MESSAGES.hasOwnProperty(cm) &&\n        number === Enumerations.CHANNEL_MODE_MESSAGES[cm]\n      ) {\n        return cm;\n      }\n\n    }\n\n    return false;\n\n  }\n\n  /**\n   * Indicates whether the execution environment is Node.js (`true`) or not (`false`)\n   * @type {boolean}\n   */\n  static get isNode() {\n    return typeof process !== \"undefined\" &&\n      process.versions != null &&\n      process.versions.node != null;\n  }\n\n  /**\n   * Indicates whether the execution environment is a browser (`true`) or not (`false`)\n   * @type {boolean}\n   */\n  static get isBrowser() {\n    return typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n  }\n\n}\n","import {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {WebMidi} from \"./WebMidi.js\";\nimport {Utilities} from \"./Utilities.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/**\n * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are\n * provided by an [`Output`](Output) port which, itself, is made available by a device. The\n * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `OutputChannel` objects can be found inside the parent output's\n * [`channels`]{@link Output#channels} property.\n *\n * @param {Output} output The [`Output`](Output) this channel belongs to.\n * @param {number} number The MIDI channel number (`1` - `16`).\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class OutputChannel extends EventEmitter {\n\n  /**\n   * Creates an `OutputChannel` object.\n   *\n   * @param {Output} output The [`Output`](Output) this channel belongs to.\n   * @param {number} number The MIDI channel number (`1` - `16`).\n   */\n  constructor(output, number) {\n\n    super();\n\n    /**\n     * @type {Output}\n     * @private\n     */\n    this._output = output;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._number = number;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n  }\n\n  /**\n   * Unlinks the MIDI subsystem, removes all listeners attached to the channel and nulls the channel\n   * number. This method is mostly for internal use. It has not been prefixed with an underscore\n   * since it is called by other objects such as the `Output` object.\n   *\n   * @private\n   */\n  destroy() {\n    this._output = null;\n    this._number = null;\n    this._octaveOffset = 0;\n    this.removeListener();\n  }\n\n  /**\n   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be\n   * sent immediately. The message should be an array of 8-bit unsigned integers (`0` - `225`),\n   * a\n   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}\n   * object or a [`Message`](Message) object.\n   *\n   * It is usually not necessary to use this method directly as you can use one of the simpler\n   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),\n   * [`sendControlChange()`](#sendControlChange), etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param message {number[]|Uint8Array|Message} A `Message` object, an array of 8-bit unsigned\n   * integers or a `Uint8Array` object (not available in Node.js) containing the message bytes.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.\n   *\n   * @throws {RangeError} Data bytes must be integers between 0 and 255.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  send(message, options = {time: 0}) {\n    this.output.send(message, options);\n    return this;\n  }\n\n  /**\n   * Sends a MIDI **key aftertouch** message at the scheduled time. This is a key-specific\n   * aftertouch. For a channel-wide aftertouch message, use\n   * [`sendChannelAftertouch()`]{@link #sendChannelAftertouch}.\n   *\n   * @param target {number|Note|string|number[]|Note[]|string[]} The note(s) for which you are sending\n   * an aftertouch value. The notes can be specified by using a MIDI note number (`0` - `127`), a\n   * [`Note`](Note) object, a note identifier (e.g. `C3`, `G#4`, `F-1`, `Db7`) or an array of the\n   * previous types. When using a note identifier, octave range must be between `-1` and `9`. The\n   * lowest note is `C-1` (MIDI note number `0`) and the highest note is `G9` (MIDI note number\n   * `127`).\n   *\n   * When using a note identifier, the octave value will be offset by the local\n   * [`octaveOffset`](#octaveOffset) and by\n   * [`Output.octaveOffset`](Output#octaveOffset) and [`WebMidi.octaveOffset`](WebMidi#octaveOffset)\n   * (if those values are not `0`). When using a key number, `octaveOffset` values are ignored.\n   *\n   * @param [pressure=0.5] {number} The pressure level (between `0` and `1`). An invalid pressure\n   * value will silently trigger the default behaviour. If the `rawValue` option is set to `true`,\n   * the pressure is defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @throws RangeError Invalid key aftertouch value.\n   */\n  sendKeyAftertouch(target, pressure, options = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy support\n      if (options.useRawValue) options.rawValue = options.useRawValue;\n\n      if (isNaN(parseFloat(pressure))) {\n        throw new RangeError(\"Invalid key aftertouch value.\");\n      }\n      if (options.rawValue) {\n        if (!(pressure >= 0 && pressure <= 127 && Number.isInteger(pressure))) {\n          throw new RangeError(\"Key aftertouch raw value must be an integer between 0 and 127.\");\n        }\n      } else {\n        if (!(pressure >= 0 && pressure <= 1)) {\n          throw new RangeError(\"Key aftertouch value must be a float between 0 and 1.\");\n        }\n      }\n\n    }\n\n    // Normalize pressure to integer\n    if (!options.rawValue) pressure = Utilities.fromFloatTo7Bit(pressure);\n\n    // Plot total offset\n    const offset = WebMidi.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    // Make sure we are dealing with an array\n    if (!Array.isArray(target)) target = [target];\n\n    Utilities.buildNoteArray(target).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.keyaftertouch << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          pressure\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **control change** message to the channel at the scheduled time. The control\n   * change message to send can be specified numerically (`0` to `127`) or by using one of the\n   * following common names:\n   *\n   * | Number | Name                          |\n   * |--------|-------------------------------|\n   * | 0      |`bankselectcoarse`             |\n   * | 1      |`modulationwheelcoarse`        |\n   * | 2      |`breathcontrollercoarse`       |\n   * | 4      |`footcontrollercoarse`         |\n   * | 5      |`portamentotimecoarse`         |\n   * | 6      |`dataentrycoarse`              |\n   * | 7      |`volumecoarse`                 |\n   * | 8      |`balancecoarse`                |\n   * | 10     |`pancoarse`                    |\n   * | 11     |`expressioncoarse`             |\n   * | 12     |`effectcontrol1coarse`         |\n   * | 13     |`effectcontrol2coarse`         |\n   * | 18     |`generalpurposeslider3`        |\n   * | 19     |`generalpurposeslider4`        |\n   * | 32     |`bankselectfine`               |\n   * | 33     |`modulationwheelfine`          |\n   * | 34     |`breathcontrollerfine`         |\n   * | 36     |`footcontrollerfine`           |\n   * | 37     |`portamentotimefine`           |\n   * | 38     |`dataentryfine`                |\n   * | 39     |`volumefine`                   |\n   * | 40     |`balancefine`                  |\n   * | 42     |`panfine`                      |\n   * | 43     |`expressionfine`               |\n   * | 44     |`effectcontrol1fine`           |\n   * | 45     |`effectcontrol2fine`           |\n   * | 64     |`holdpedal`                    |\n   * | 65     |`portamento`                   |\n   * | 66     |`sustenutopedal`               |\n   * | 67     |`softpedal`                    |\n   * | 68     |`legatopedal`                  |\n   * | 69     |`hold2pedal`                   |\n   * | 70     |`soundvariation`               |\n   * | 71     |`resonance`                    |\n   * | 72     |`soundreleasetime`             |\n   * | 73     |`soundattacktime`              |\n   * | 74     |`brightness`                   |\n   * | 75     |`soundcontrol6`                |\n   * | 76     |`soundcontrol7`                |\n   * | 77     |`soundcontrol8`                |\n   * | 78     |`soundcontrol9`                |\n   * | 79     |`soundcontrol10`               |\n   * | 80     |`generalpurposebutton1`        |\n   * | 81     |`generalpurposebutton2`        |\n   * | 82     |`generalpurposebutton3`        |\n   * | 83     |`generalpurposebutton4`        |\n   * | 91     |`reverblevel`                  |\n   * | 92     |`tremololevel`                 |\n   * | 93     |`choruslevel`                  |\n   * | 94     |`celestelevel`                 |\n   * | 95     |`phaserlevel`                  |\n   * | 96     |`dataincrement`                |\n   * | 97     |`datadecrement`                |\n   * | 98     |`nonregisteredparametercoarse` |\n   * | 99     |`nonregisteredparameterfine`   |\n   * | 100    |`registeredparametercoarse`    |\n   * | 101    |`registeredparameterfine`      |\n   * | 120    |`allsoundoff`                  |\n   * | 121    |`resetallcontrollers`          |\n   * | 122    |`localcontrol`                 |\n   * | 123    |`allnotesoff`                  |\n   * | 124    |`omnimodeoff`                  |\n   * | 125    |`omnimodeon`                   |\n   * | 126    |`monomodeon`                   |\n   * | 127    |`polymodeon`                   |\n   *\n   * As you can see above, not all control change message have a matching name. This does not mean\n   * you cannot use the others. It simply means you will need to use their number\n   * (`0` to `127`) instead of their name. While you can still use them, numbers `120` to `127` are\n   * usually reserved for *channel mode* messages. See\n   * [`sendChannelMode()`]{@link OutputChannel#sendChannelMode} method for more info.\n   *\n   * To view a detailed list of all available **control change** messages, please consult \"Table 3 -\n   * Control Change Messages\" from the [MIDI Messages](\n   * https://www.midi.org/specifications/item/table-3-control-change-messages-data-bytes-2)\n   * specification.\n   *\n   * **Note**: messages #0-31 (MSB) are paired with messages #32-63 (LSB). For example, message #1\n   * (`modulationwheelcoarse`) can be accompanied by a second control change message for\n   * `modulationwheelfine` to achieve a greater level of precision. if you want to specify both MSB\n   * and LSB for messages between `0` and `31`, you can do so by passing a 2-value array as the\n   * second parameter.\n   *\n   * @param {number|string} controller The MIDI controller name or number (`0` - `127`).\n   *\n   * @param {number|number[]} value The value to send (0-127). You can also use a two-position array\n   * for controllers 0 to 31. In this scenario, the first value will be sent as usual and the second\n   * value will be sent to the matching LSB controller (which is obtained by adding 32 to the first\n   * controller)\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 127.\n   * @throws {RangeError} Invalid controller name.\n   * @throws {TypeError} The value array must have a length of 2.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   */\n  sendControlChange(controller, value, options = {}) {\n\n    if (typeof controller === \"string\") {\n      controller = Utilities.getCcNumberByName(controller);\n    }\n\n    if (!Array.isArray(value)) value = [value];\n\n    if (WebMidi.validation) {\n\n      if (controller === undefined) {\n        throw new TypeError(\n          \"Control change must be identified with a valid name or an integer between 0 and 127.\"\n        );\n      }\n\n      if (!Number.isInteger(controller) || !(controller >= 0 && controller <= 127)) {\n        throw new TypeError(\"Control change number must be an integer between 0 and 127.\");\n      }\n\n      value = value.map(item => {\n        const output = Math.min(Math.max(parseInt(item), 0), 127);\n        if (isNaN(output)) throw new TypeError(\"Values must be integers between 0 and 127\");\n        return output;\n      });\n\n      if (value.length === 2 && controller >= 32) {\n        throw new TypeError(\"To use a value array, the controller must be between 0 and 31\");\n      }\n\n    }\n\n    value.forEach((item, index) => {\n\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1),\n          controller + (index * 32),\n          value[index]\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Selects a MIDI non-registered parameter so it is affected by upcoming data entry, data\n   * increment and data decrement messages.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes that identify\n   * the registered parameter. The NRPN MSB (99 or 0x63) is a position 0. The NRPN LSB (98 or 0x62)\n   * is at position 1.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _selectNonRegisteredParameter(parameter, options = {}) {\n\n    // parameter[0] = Math.floor(parameter[0]);\n    // if (!(parameter[0] >= 0 && parameter[0] <= 127)) {\n    //   throw new RangeError(\"The control63 value must be between 0 and 127.\");\n    // }\n    //\n    // parameter[1] = Math.floor(parameter[1]);\n    // if (!(parameter[1] >= 0 && parameter[1] <= 127)) {\n    //   throw new RangeError(\"The control62 value must be between 0 and 127.\");\n    // }\n\n    this.sendControlChange(0x63, parameter[0], options);\n    this.sendControlChange(0x62, parameter[1], options);\n\n    return this;\n\n  }\n\n  /**\n   * Deselects the currently active MIDI registered parameter so it is no longer affected by data\n   * entry, data increment and data decrement messages.\n   *\n   * Current best practice recommends doing that after each call to\n   * [_setCurrentParameter()]{@link #_setCurrentParameter}.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _deselectRegisteredParameter(options = {}) {\n    this.sendControlChange(0x65, 0x7F, options);\n    this.sendControlChange(0x64, 0x7F, options);\n    return this;\n  }\n\n  /**\n   * Deselects the currently active MIDI non-registered parameter so it is no longer affected by\n   * data entry, data increment and data decrement messages.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _deselectNonRegisteredParameter(options = {}) {\n    this.sendControlChange(0x65, 0x7F, options);\n    this.sendControlChange(0x64, 0x7F, options);\n    return this;\n  }\n\n  /**\n   * Selects a MIDI registered parameter so it is affected by upcoming data entry, data increment\n   * and data decrement messages.\n   *\n   * @private\n   *\n   * @param parameter {number[]} A two-position array of integers specifying the two control bytes\n   * (0x65, 0x64) that identify the registered parameter. The integers must be between 0 and 127.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _selectRegisteredParameter(parameter, options = {}) {\n    this.sendControlChange(0x65, parameter[0], options);\n    this.sendControlChange(0x64, parameter[1], options);\n    return this;\n  }\n\n  /**\n   * Sets the value of the currently selected MIDI registered parameter.\n   *\n   * @private\n   *\n   * @param data {number|number[]}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _setCurrentParameter(data, options = {}) {\n\n    data = [].concat(data);\n\n    // MSB\n    // data[0] = parseInt(data[0]);\n    // if (!isNaN(data[0]) && data[0] >= 0 && data[0] <= 127) {\n    this.sendControlChange(0x06, data[0], options);\n    // } else {\n    //   throw new RangeError(\"The msb value must be between 0 and 127.\");\n    // }\n\n    if (data.length < 2) return this;\n\n    // LSB\n    // data[1] = parseInt(data[1]);\n\n    // if (!isNaN(data[1]) && data[1] >= 0 && data[1] <= 127) {\n    this.sendControlChange(0x26, data[1], options);\n    // } else {\n    //   throw new RangeError(\"The lsb value must be between 0 and 127.\");\n    // }\n\n    return this;\n\n  }\n\n  /**\n   * Decrements the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified registered parameter is invalid.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnDecrement(parameter, options = {}) {\n\n    if (!Array.isArray(parameter)) parameter = Enumerations.REGISTERED_PARAMETERS[parameter];\n\n    if (WebMidi.validation) {\n\n      if (parameter === undefined) {\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      }\n\n      let valid = false;\n\n      Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach(p => {\n        if (\n          Enumerations.REGISTERED_PARAMETERS[p][0] === parameter[0] &&\n          Enumerations.REGISTERED_PARAMETERS[p][1] === parameter[1]\n        ) {\n          valid = true;\n        }\n      });\n\n      if (!valid) throw new TypeError(\"The specified registered parameter is invalid.\");\n\n    }\n\n    this._selectRegisteredParameter(parameter, options);\n    this.sendControlChange(0x61, 0, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Increments the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified registered parameter is invalid.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnIncrement(parameter, options = {}) {\n\n    if (!Array.isArray(parameter)) parameter = Enumerations.REGISTERED_PARAMETERS[parameter];\n\n    if (WebMidi.validation) {\n\n      if (parameter === undefined) {\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      }\n\n      let valid = false;\n\n      Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach(p => {\n        if (\n          Enumerations.REGISTERED_PARAMETERS[p][0] === parameter[0] &&\n          Enumerations.REGISTERED_PARAMETERS[p][1] === parameter[1]\n        ) {\n          valid = true;\n        }\n      });\n\n      if (!valid) throw new TypeError(\"The specified registered parameter is invalid.\");\n\n    }\n\n    this._selectRegisteredParameter(parameter, options);\n    this.sendControlChange(0x60, 0, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Plays a note or an array of notes on the channel. The first parameter is the note to play. It\n   * can be a single value or an array of the following valid values:\n   *\n   *  - A [`Note`]{@link Note} object\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *\n   * The `playNote()` method sends a **note on** MIDI message for all specified notes. If a\n   * `duration` is set in the `options` parameter or in the [`Note`]{@link Note} object's\n   * [`duration`]{@link Note#duration} property, it will also schedule a **note off** message\n   * to end the note after said duration. If no `duration` is set, the note will simply play until\n   * a matching **note off** message is sent with [`stopNote()`]{@link OutputChannel#stopNote} or\n   * [`sendNoteOff()`]{@link OutputChannel#sendNoteOff}.\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the durations and velocities defined in the\n   * [`Note`]{@link Note} objects have precedence over the ones specified via the method's `options`\n   * parameter.\n   *\n   * **Note**: per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`,\n   * `F-1`, `Db7`), a [`Note`]{@link Note} object or an array of the previous types. When using a\n   * note identifier, the octave range must be between `-1` and `9`. The lowest note is `C-1` (MIDI\n   * note number `0`) and the highest note is `G9` (MIDI note number `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration] A positive decimal number larger than `0` representing the\n   * number of milliseconds to wait before sending a **note off** message. If invalid or left\n   * undefined, only a **note on** message will be sent.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`). If the `rawAttack` option is also defined, it will have priority. An invalid velocity\n   * value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The attack velocity at which to play the note (between\n   * `0` and `127`). This has priority over the `attack` property. An invalid velocity value will\n   * silently trigger the default of 64.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawRelease` option is also defined, it will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`. This is only used with the\n   * **note off** event triggered when `options.duration` is set.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note (between `0`\n   * and `127`). This has priority over the `release` property. An invalid velocity value will\n   * silently trigger the default of 64. This is only used with the **note off** event triggered\n   * when `options.duration` is set.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  playNote(note, options = {}) {\n\n    // Send note on and, optionally, note off message (if duration is a positive number)\n    this.sendNoteOn(note, options);\n\n    const notes = Array.isArray(note) ? note : [note];\n\n    for(let note of notes) {\n      if (parseInt(note.duration) > 0) {\n        const noteOffOptions = {\n          time: (Utilities.toTimestamp(options.time) || WebMidi.time) + parseInt(note.duration),\n          release: note.release,\n          rawRelease: note.rawRelease\n        };\n        this.sendNoteOff(note, noteOffOptions);\n      } else if (parseInt(options.duration) > 0) {\n        const noteOffOptions = {\n          time: (Utilities.toTimestamp(options.time) || WebMidi.time) + parseInt(options.duration),\n          release: options.release,\n          rawRelease: options.rawRelease\n        };\n        this.sendNoteOff(note, noteOffOptions);\n      }\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified notes on the channel. The first parameter is the\n   * note. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`]{@link Note} object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the release velocity defined in the\n   * [`Note`]{@link Note} objects has precedence over the one specified via the method's `options`\n   * parameter.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types. When using a note name, octave\n   * range must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNoteOff(note, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (\n        options.rawRelease != undefined &&\n        !(options.rawRelease >= 0 && options.rawRelease <= 127)\n      ) {\n        throw new RangeError(\"The 'rawRelease' option must be an integer between 0 and 127\");\n      }\n\n      if (options.release != undefined && !(options.release >= 0 && options.release <= 1)) {\n        throw new RangeError(\"The 'release' option must be an number between 0 and 1\");\n      }\n\n      // Legacy compatibility warnings\n      if (options.rawVelocity) {\n        options.rawRelease = options.velocity;\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.\");\n      }\n      if (options.velocity) {\n        options.release = options.velocity;\n        console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\");\n      }\n\n    }\n\n    let nVelocity = 64;\n\n    if (options.rawRelease != undefined) {\n      nVelocity = options.rawRelease;\n    } else {\n      if (!isNaN(options.release)) nVelocity = Math.round(options.release * 127);\n    }\n\n    // Plot total octave offset\n    const offset = WebMidi.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    Utilities.buildNoteArray(note, {rawRelease: parseInt(nVelocity)}).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.noteoff << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          n.rawRelease,\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number. The first parameter is the\n   * note to stop. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  stopNote(note, options = {}) {\n    return this.sendNoteOff(note, options);\n  }\n\n  /**\n   * Sends a **note on** message for the specified note(s) on the channel. The first parameter is\n   * the note. It can be a single value or an array of the following valid values:\n   *\n   *  - A [`Note`]{@link Note} object\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *\n   *  When passing a [`Note`]{@link Note}object or a note name, the `octaveOffset` will be applied.\n   *  This is not the case when using a note number. In this case, we assume you know exactly which\n   *  MIDI note number should be sent out.\n   *\n   * The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the attack velocity defined in the\n   * [`Note`]{@link Note} objects has precedence over the one specified via the method's `options`\n   * parameter. Also, the `duration` is ignored. If you want to also send a **note off** message,\n   * use the [`playNote()`]{@link #playNote} method instead.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`).  If the `rawAttack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The velocity at which to release the note (between `0`\n   * and `127`). If the `attack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `64`.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNoteOn(note, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (options.rawAttack != undefined && !(options.rawAttack >= 0 && options.rawAttack <= 127)) {\n        throw new RangeError(\"The 'rawAttack' option must be an integer between 0 and 127\");\n      }\n\n      if (options.attack != undefined && !(options.attack >= 0 && options.attack <= 1)) {\n        throw new RangeError(\"The 'attack' option must be an number between 0 and 1\");\n      }\n\n      // Legacy compatibility warnings\n      if (options.rawVelocity) {\n        options.rawAttack = options.velocity;\n        options.rawRelease = options.release;\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.\");\n      }\n      if (options.velocity) {\n        options.attack = options.velocity;\n        console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\");\n      }\n\n    }\n\n    let nVelocity = 64;\n\n    if (options.rawAttack != undefined) {\n      nVelocity = options.rawAttack;\n    } else {\n      if (!isNaN(options.attack)) nVelocity = Math.round(options.attack * 127);\n    }\n\n    // Plot total octave offset\n    const offset = WebMidi.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    Utilities.buildNoteArray(note, {rawAttack: nVelocity}).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.noteon << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          n.rawAttack\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel mode** message. The channel mode message to send can be specified\n   * numerically or by using one of the following common names:\n   *\n   * |  Type                |Number| Shortcut Method                                               |\n   * | ---------------------|------|-------------------------------------------------------------- |\n   * | `allsoundoff`        | 120  | [`sendAllSoundOff()`]{@link #sendAllSoundOff}                 |\n   * | `resetallcontrollers`| 121  | [`sendResetAllControllers()`]{@link #sendResetAllControllers} |\n   * | `localcontrol`       | 122  | [`sendLocalControl()`]{@link #sendLocalControl}               |\n   * | `allnotesoff`        | 123  | [`sendAllNotesOff()`]{@link #sendAllNotesOff}                 |\n   * | `omnimodeoff`        | 124  | [`sendOmniMode(false)`]{@link #sendOmniMode}                  |\n   * | `omnimodeon`         | 125  | [`sendOmniMode(true)`]{@link #sendOmniMode}                   |\n   * | `monomodeon`         | 126  | [`sendPolyphonicMode(\"mono\")`]{@link #sendPolyphonicMode}     |\n   * | `polymodeon`         | 127  | [`sendPolyphonicMode(\"poly\")`]{@link #sendPolyphonicMode}     |\n   *\n   * **Note**: as you can see above, to make it easier, all channel mode messages also have a matching\n   * helper method.\n   *\n   * It should be noted that, per the MIDI specification, only `localcontrol` and `monomodeon` may\n   * require a value that's not zero. For that reason, the `value` parameter is optional and\n   * defaults to 0.\n   *\n   * @param {number|string} command The numerical identifier of the channel mode message (integer\n   * between `120` and `127`) or its name as a string.\n   *\n   * @param {number} [value=0] The value to send (integer between `0` - `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendChannelMode(command, value = 0, options = {}) {\n\n    // Normalize command to integer\n    if (typeof command === \"string\") command = Enumerations.CHANNEL_MODE_MESSAGES[command];\n\n    if (WebMidi.validation) {\n\n      if (command === undefined) {\n        throw new TypeError(\"Invalid channel mode message name or number.\");\n      }\n\n      if (isNaN(command) || !(command >= 120 && command <= 127)) {\n        throw new TypeError(\"Invalid channel mode message number.\");\n      }\n\n      if (isNaN(parseInt(value)) || value < 0 || value > 127) {\n        throw new RangeError(\"Value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1),\n        command,\n        value\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sets OMNI mode to `\"on\"` or `\"off\"`. MIDI's OMNI mode causes the instrument to respond to\n   * messages from all channels.\n   *\n   * It should be noted that support for OMNI mode is not as common as it used to be.\n   *\n   * @param [state=true] {boolean} Whether to activate OMNI mode (`true`) or not (`false`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendOmniMode(state, options = {}) {\n\n    if (state === undefined || state) {\n      this.sendChannelMode(\"omnimodeon\", 0, options);\n    } else {\n      this.sendChannelMode(\"omnimodeoff\", 0, options);\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel aftertouch** message. For key-specific aftertouch, you should instead\n   * use [`sendKeyAftertouch()`]{@link #sendKeyAftertouch}.\n   *\n   * @param [pressure] {number} The pressure level (between `0` and `1`). If the `rawValue` option\n   * is set to `true`, the pressure can be defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @throws RangeError Invalid channel aftertouch value.\n   */\n  sendChannelAftertouch(pressure, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (isNaN(parseFloat(pressure))) {\n        throw new RangeError(\"Invalid channel aftertouch value.\");\n      }\n\n      if (options.rawValue) {\n        if (!(pressure >= 0 && pressure <= 127 && Number.isInteger(pressure))) {\n          throw new RangeError(\n            \"Channel aftertouch raw value must be an integer between 0 and 127.\")\n          ;\n        }\n      } else {\n        if (!(pressure >= 0 && pressure <= 1)) {\n          throw new RangeError(\"Channel aftertouch value must be a float between 0 and 1.\");\n        }\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.channelaftertouch << 4) + (this.number - 1),\n        Math.round(pressure * 127)\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **master tuning** message. The value is decimal and must be larger than -65 semitones\n   * and smaller than 64 semitones.\n   *\n   * Because of the way the MIDI specification works, the decimal portion of the value will be\n   * encoded with a resolution of 14bit. The integer portion must be between -64 and 63\n   * inclusively. This function actually generates two MIDI messages: a **Master Coarse Tuning** and\n   * a **Master Fine Tuning** RPN messages.\n   *\n   * @param [value=0.0] {number} The desired decimal adjustment value in semitones (-65 < x < 64)\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The value must be a decimal number between larger than -65 and smaller\n   * than 64.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendMasterTuning(value, options = {}) {\n\n    // @todo allow passing value as msb/lsb pair (the same as pitch bend range)\n\n    value = parseFloat(value) || 0.0;\n\n    if (WebMidi.validation) {\n\n      if (!(value > -65 && value < 64)) {\n        throw new RangeError(\n          \"The value must be a decimal number larger than -65 and smaller than 64.\"\n        );\n      }\n\n    }\n\n    let coarse = Math.floor(value) + 64;\n    let fine = value - Math.floor(value);\n\n    // Calculate MSB and LSB for fine adjustment (14bit resolution)\n    fine = Math.round((fine + 1) / 2 * 16383);\n    let msb = (fine >> 7) & 0x7F;\n    let lsb = fine & 0x7F;\n\n    this.sendRpnValue(\"channelcoarsetuning\", coarse, options);\n    this.sendRpnValue(\"channelfinetuning\", [msb, lsb], options);\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **modulation depth range** message to adjust the depth of the modulation wheel's range.\n   * The range can be specified with the `semitones` parameter, the `cents` parameter or by\n   * specifying both parameters at the same time.\n   *\n   * @param {number} semitones The desired adjustment value in semitones (integer between 0 and\n   * 127).\n   *\n   * @param {number} [cents=0] The desired adjustment value in cents (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendModulationRange(semitones, cents, options = {}) {\n\n    // @todo allow passing value as msb/lsb pair (the same as pitch bend range)\n    // when passing a single argument, semitones and cents shoud be combined\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(semitones) || !(semitones >= 0 && semitones <= 127)) {\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      }\n\n      if (!(cents == undefined) && (!Number.isInteger(cents) || !(cents >= 0 && cents <= 127))) {\n        throw new RangeError(\"If specified, the cents value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    // Default value for cents\n    if (!(cents >= 0 && cents <= 127)) cents = 0;\n\n    this.sendRpnValue(\"modulationrange\", [semitones, cents], options);\n\n    return this;\n\n  }\n\n  /**\n   * Sets a non-registered parameter (NRPN) to the specified value. The NRPN is selected by passing\n   * in a two-position array specifying the values of the two control bytes. The value is specified\n   * by passing in a single integer (most cases) or an array of two integers.\n   *\n   * NRPNs are not standardized in any way. Each manufacturer is free to implement them any way\n   * they see fit. For example, according to the Roland GS specification, you can control the\n   * **vibrato rate** using NRPN (1, 8). Therefore, to set the **vibrato rate** value to **123** you\n   * would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].channels[0].sendNrpnValue([1, 8], 123);\n   * ```\n   *\n   * In some rarer cases, you need to send two values with your NRPN messages. In such cases, you\n   * would use a 2-position array. For example, for its **ClockBPM** parameter (2, 63), Novation\n   * uses a 14-bit value that combines an MSB and an LSB (7-bit values). So, for example, if the\n   * value to send was 10, you could use:\n   *\n   * ```js\n   * WebMidi.outputs[0].channels[0].sendNrpnValue([2, 63], [0, 10]);\n   * ```\n   *\n   * For further implementation details, refer to the manufacturer's documentation.\n   *\n   * @param nrpn {number[]} A two-position array specifying the two control bytes (0x63,\n   * 0x62) that identify the non-registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An integer or an array of integers with a length of 1 or 2\n   * specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The control value must be between 0 and 127.\n   * @throws {RangeError} The msb value must be between 0 and 127\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNrpnValue(nrpn, data, options = {}) {\n\n    data = [].concat(data);\n\n    if (WebMidi.validation) {\n\n      if (!Array.isArray(nrpn) || !Number.isInteger(nrpn[0]) || !Number.isInteger(nrpn[1])) {\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      }\n\n      if (!(nrpn[0] >= 0 && nrpn[0] <= 127)) {\n        throw new RangeError(\"The first byte of the NRPN must be between 0 and 127.\");\n      }\n\n      if (!(nrpn[1] >= 0 && nrpn[1] <= 127)) {\n        throw new RangeError(\"The second byte of the NRPN must be between 0 and 127.\");\n      }\n\n      data.forEach(value => {\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The data bytes of the NRPN must be between 0 and 127.\");\n        }\n      });\n\n    }\n\n    this._selectNonRegisteredParameter(nrpn, options);\n    this._setCurrentParameter(data, options);\n    this._deselectNonRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **pitch bend** message at the scheduled time. The resulting bend is relative to\n   * the pitch bend range that has been defined. The range can be set with\n   * [`sendPitchBendRange()`]{@link #sendPitchBendRange}. So, for example, if the pitch\n   * bend range has been set to 12 semitones, using a bend value of -1 will bend the note 1 octave\n   * below its nominal value.\n   *\n   * @param {number|number[]} [value] The intensity of the bend (between -1.0 and 1.0). A value of\n   * zero means no bend. If the `rawValue` option is set to `true`, the intensity of the bend can be\n   * defined by either using a single integer between 0 and 127 (MSB) or an array of two integers\n   * between 0 and 127 representing, respectively, the MSB (most significant byte) and the LSB\n   * (least significant byte). The MSB is expressed in semitones with `64` meaning no bend. A value\n   * lower than `64` bends downwards while a value higher than `64` bends upwards. The LSB is\n   * expressed in cents (1/100 of a semitone). An LSB of `64` also means no bend.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered as a float between -1.0 and 1.0 (default) or as raw integer between 0 and 127 (or\n   * an array of 2 integers if using both MSB and LSB).\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPitchBend(value, options = {}) {\n\n    // @todo standardize the way msb/lsb are passed in\n\n    if (WebMidi.validation) {\n\n      if (options.rawValue && Array.isArray(value)) {\n\n        if (!(value[0] >= 0 && value[0] <= 127)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n        if (!(value[1] >= 0 && value[1] <= 127)) {\n          throw new RangeError(\"The pitch bend LSB must be an integer between 0 and 127.\");\n        }\n\n      } else if (options.rawValue && !Array.isArray(value)) {\n\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n\n      } else {\n\n        if (isNaN(value) || value === null) {\n          throw new RangeError(\"Invalid pitch bend value.\");\n        }\n\n        if (!(value >= -1 && value <= 1)) {\n          throw new RangeError(\"The pitch bend value must be a float between -1 and 1.\");\n        }\n\n      }\n\n    }\n\n    let msb = 0;\n    let lsb = 0;\n\n    // Calculate MSB and LSB for both scenarios\n    if (options.rawValue && Array.isArray(value)) {\n      msb = value[0];\n      lsb = value[1];\n    } else if (options.rawValue && !Array.isArray(value)) {\n      msb = value;\n    } else {\n      const result = Utilities.fromFloatToMsbLsb((value + 1) / 2); // b/c value is -1 to 1\n      msb = result.msb;\n      lsb = result.lsb;\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.pitchbend << 4) + (this.number - 1),\n        lsb,\n        msb\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **pitch bend range** message at the scheduled time to adjust the range used by the\n   * pitch bend lever. The range is specified by using the `semitones` and `cents` parameters. For\n   * example, setting the `semitones` parameter to `12` means that the pitch bend range will be 12\n   * semitones above and below the nominal pitch.\n   *\n   * @param semitones {number} The desired adjustment value in semitones (between 0 and 127). While\n   * nothing imposes that in the specification, it is very common for manufacturers to limit the\n   * range to 2 octaves (-12 semitones to 12 semitones).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The semitones value must be an integer between 0 and 127.\n   * @throws {RangeError} The cents value must be an integer between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPitchBendRange(semitones, cents, options = {}) {\n\n    // @todo use single value as parameter or pair of msb/lsb\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(semitones) || !(semitones >= 0 && semitones <= 127)) {\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      }\n\n      if (!Number.isInteger(cents) || !(cents >= 0 && cents <= 127)) {\n        throw new RangeError(\"The cents value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"pitchbendrange\", [semitones, cents], options);\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **program change** message at the scheduled time.\n   *\n   * @param [program=1] {number} The MIDI patch (program) number (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 1 is greater\n   * than 0xFF.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   */\n  sendProgramChange(program, options = {}) {\n\n    program = parseInt(program) || 0;\n\n    if (WebMidi.validation) {\n\n      if (!(program >= 0 && program <= 127)) {\n        throw new RangeError(\"The program number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.programchange << 4) + (this.number - 1),\n        program\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sets the specified MIDI registered parameter to the desired value. The value is defined with\n   * up to two bytes of data (msb, lsb) that each can go from 0 to 127.\n   *\n   * MIDI\n   * [registered parameters](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * extend the original list of control change messages. The MIDI 1.0 specification lists only a\n   * limited number of them:\n   *\n   * | Numbers      | Function                 |\n   * |--------------|--------------------------|\n   * | (0x00, 0x00) | `pitchbendrange`         |\n   * | (0x00, 0x01) | `channelfinetuning`      |\n   * | (0x00, 0x02) | `channelcoarsetuning`    |\n   * | (0x00, 0x03) | `tuningprogram`          |\n   * | (0x00, 0x04) | `tuningbank`             |\n   * | (0x00, 0x05) | `modulationrange`        |\n   * | (0x3D, 0x00) | `azimuthangle`           |\n   * | (0x3D, 0x01) | `elevationangle`         |\n   * | (0x3D, 0x02) | `gain`                   |\n   * | (0x3D, 0x03) | `distanceratio`          |\n   * | (0x3D, 0x04) | `maximumdistance`        |\n   * | (0x3D, 0x05) | `maximumdistancegain`    |\n   * | (0x3D, 0x06) | `referencedistanceratio` |\n   * | (0x3D, 0x07) | `panspreadangle`         |\n   * | (0x3D, 0x08) | `rollangle`              |\n   *\n   * Note that the **Tuning Program** and **Tuning Bank** parameters are part of the *MIDI Tuning\n   * Standard*, which is not widely implemented.\n   *\n   * @param rpn {string|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (e.g. `[0x65, 0x64]`) that identify the\n   * registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An single integer or an array of integers with a maximum\n   * length of 2 specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnValue(rpn, data, options = {}) {\n\n    if (!Array.isArray(rpn)) rpn = Enumerations.REGISTERED_PARAMETERS[rpn];\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(rpn[0]) || !Number.isInteger(rpn[1])) {\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      }\n\n      if (!(rpn[0] >= 0 && rpn[0] <= 127)) {\n        throw new RangeError(\"The first byte of the RPN must be between 0 and 127.\");\n      }\n\n      if (!(rpn[1] >= 0 && rpn[1] <= 127)) {\n        throw new RangeError(\"The second byte of the RPN must be between 0 and 127.\");\n      }\n\n      [].concat(data).forEach(value => {\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The data bytes of the RPN must be between 0 and 127.\");\n        }\n      });\n\n    }\n\n    this._selectRegisteredParameter(rpn, options);\n    this._setCurrentParameter(data, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning bank to use. Note that the **Tuning Bank** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning bank (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The bank value must be between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendTuningBank(value, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The tuning bank number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"tuningbank\", value, options);\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning program to use. Note that the **Tuning Program** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning program (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The program value must be between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendTuningProgram(value, options = {}) {\n\n    if (WebMidi.validation) {\n\n      if (!Number.isInteger(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The tuning program number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"tuningprogram\", value, options);\n    return this;\n\n  }\n\n  /**\n   * Turns local control on or off. Local control is usually enabled by default. If you disable it,\n   * the instrument will no longer trigger its own sounds. It will only send the MIDI messages to\n   * its out port.\n   *\n   * @param [state=false] {boolean} Whether to activate local control (`true`) or disable it\n   * (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendLocalControl(state, options = {}) {\n    if (state) {\n      return this.sendChannelMode(\"localcontrol\", 127, options);\n    } else {\n      return this.sendChannelMode(\"localcontrol\", 0, options);\n    }\n  }\n\n  /**\n   * Sends an **all notes off** channel mode message. This will make all currently playing notes\n   * fade out just as if their key had been released. This is different from the\n   * [`sendAllSoundOff()`]{@link #sendAllSoundOff} method which mutes all sounds immediately.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendAllNotesOff(options = {}) {\n    return this.sendChannelMode(\"allnotesoff\", 0, options);\n  }\n\n  /**\n   * Sends an **all sound off** channel mode message. This will silence all sounds playing on that\n   * channel but will not prevent new sounds from being triggered.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendAllSoundOff(options = {}) {\n    return this.sendChannelMode(\"allsoundoff\", 0, options);\n  }\n\n  /**\n   * Sends a **reset all controllers** channel mode message. This resets all controllers, such as\n   * the pitch bend, to their default value.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendResetAllControllers(options = {}) {\n    return this.sendChannelMode(\"resetallcontrollers\", 0, options);\n  }\n\n  /**\n   * Sets the polyphonic mode. In `\"poly\"` mode (usually the default), multiple notes can be played\n   * and heard at the same time. In `\"mono\"` mode, only one note will be heard at once even if\n   * multiple notes are being played.\n   *\n   * @param {string} [mode=poly] The mode to use: `\"mono\"` or `\"poly\"`.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPolyphonicMode(mode, options = {}) {\n    if (mode === \"mono\") {\n      return this.sendChannelMode(\"monomodeon\", 0, options);\n    } else {\n      return this.sendChannelMode(\"polymodeon\", 0, options);\n    }\n  }\n\n  /**\n   * An integer to offset the reported octave of outgoing note-specific messages (`noteon`,\n   * `noteoff` and `keyaftertouch`). By default, middle C (MIDI note number 60) is placed on the 4th\n   * octave (C4).\n   *\n   * Note that this value is combined with the global offset value defined in\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) and with the parent value defined in\n   * [`Output.octaveOffset`]{@link Output#octaveOffset}.\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * The parent [`Output`]{@link Output} this channel belongs to.\n   * @type {Output}\n   * @since 3.0\n   */\n  get output() {\n    return this._output;\n  }\n\n  /**\n   * This channel's MIDI number (`1` - `16`).\n   * @type {number}\n   * @since 3.0\n   */\n  get number() {\n    return this._number;\n  }\n\n}\n","import {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {OutputChannel} from \"./OutputChannel.js\";\nimport {Enumerations, Message, WebMidi} from \"./WebMidi.js\";\nimport {Utilities} from \"./Utilities.js\";\n\n/**\n * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).\n * A port is made available by a MIDI device. A MIDI device can advertise several input and output\n * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)\n * property.\n *\n * The `Output` object is automatically instantiated by the library according to the host's MIDI\n * subsystem and should not be directly instantiated.\n *\n * You can access all available `Output` objects by referring to the\n * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as\n * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or\n * [`WebMidi.getOutputById()`](WebMidi#getOutputById).\n *\n * @fires Output#opened\n * @fires Output#disconnected\n * @fires Output#closed\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nexport class Output extends EventEmitter {\n\n  /**\n   * Creates an `Output` object.\n   *\n   * @param {MIDIOutput} midiOutput [`MIDIOutput`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIOutput)\n   * object as provided by the MIDI subsystem.\n   */\n  constructor(midiOutput) {\n\n    super();\n\n    /**\n     * A reference to the `MIDIOutput` object\n     * @type {MIDIOutput}\n     * @private\n     */\n    this._midiOutput = midiOutput;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * Array containing the 16 [`OutputChannel`]{@link OutputChannel} objects available provided by\n     * this `Output`. The channels are numbered 1 through 16.\n     *\n     * @type {OutputChannel[]}\n     */\n    this.channels = [];\n    for (let i = 1; i <= 16; i++) this.channels[i] = new OutputChannel(this, i);\n\n    this._midiOutput.onstatechange = this._onStateChange.bind(this);\n\n  }\n\n  /**\n   * Destroys the `Output`. All listeners are removed, all channels are destroyed and the MIDI\n   * subsystem is unlinked.\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    this.removeListener();\n    this.channels.forEach(ch => ch.destroy());\n    this.channels = [];\n    if (this._midiOutput) this._midiOutput.onstatechange = null;\n    await this.close();\n    this._midiOutput = null;\n  }\n\n  /**\n   * @private\n   */\n  _onStateChange(e) {\n\n    let event = {\n      timestamp: WebMidi.time\n    };\n\n    if (e.port.connection === \"open\") {\n\n      /**\n       * Event emitted when the {@link Output} has been opened by calling the\n       * [open()]{@link Output#open} method.\n       *\n       * @event Output#opened\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"opened\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {Output} port The port that was opened\n       */\n      event.type = \"opened\";\n      event.target = this;\n      event.port = event.target; // for consistency\n      this.emit(\"opened\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"connected\") {\n\n      /**\n       * Event emitted when the {@link Output} has been closed by calling the\n       * [close()]{@link Output#close} method.\n       *\n       * @event Output#closed\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"closed\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {Output} port The port that was closed\n       */\n      event.type = \"closed\";\n      event.target = this;\n      event.port = event.target; // for consistency\n      this.emit(\"closed\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"disconnected\") {\n\n      /**\n       * Event emitted when the {@link Output} becomes unavailable. This event is typically fired\n       * when the MIDI device is unplugged.\n       *\n       * @event Output#disconnected\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp0 when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"disconnected\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {object} port Object with properties describing the {@link Output} that was\n       * disconnected. This is not the actual `Output` as it is no longer available.\n       */\n      event.type = \"disconnected\";\n      event.port = {\n        connection: e.port.connection,\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n      this.emit(\"disconnected\", event);\n\n    } else if (e.port.connection === \"pending\" && e.port.state === \"disconnected\") {\n      // I don't see the need to forward that...\n    } else {\n      console.warn(\"This statechange event was not caught:\", e.port.connection, e.port.state);\n    }\n\n  }\n\n  /**\n   * Opens the output for usage. When the library is enabled, all ports are automatically opened.\n   * This method is only useful for ports that have been manually closed.\n   *\n   * @returns {Promise<Output>} The promise is fulfilled with the `Output` object.\n   */\n  async open() {\n\n    // Explicitly opens the port for usage. This is not mandatory. When the port is not explicitly\n    // opened, it is implicitly opened (asynchronously) when calling `send()` on the `MIDIOutput`.\n    // We do it explicitly so that 'connected' events are dispatched immediately and we are ready to\n    // send.\n    try {\n      await this._midiOutput.open();\n      return Promise.resolve(this);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n  }\n\n  /**\n   * Closes the output connection. When an output is closed, it cannot be used to send MIDI messages\n   * until the output is opened again by calling [`open()`]{@link #open}. You can check\n   * the connection status by looking at the [`connection`]{@link #connection} property.\n   *\n   * @returns {Promise<void>}\n   */\n  async close() {\n\n    // We close the port. This triggers a 'statechange' event which we listen to to re-trigger the\n    // 'closed' event.\n    if (this._midiOutput) {\n      await this._midiOutput.close();\n    } else {\n      await Promise.resolve();\n    }\n\n  }\n\n  /**\n   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be\n   * sent immediately. The message should be an array of 8 bit unsigned integers (0-225), a\n   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}\n   * object or a [`Message`](Message) object.\n   *\n   * It is usually not necessary to use this method directly as you can use one of the simpler\n   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),\n   * [`sendControlChange()`](#sendControlChange), etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param message {number[]|Uint8Array|Message} An array of 8bit unsigned integers, a `Uint8Array`\n   * object (not available in Node.js) containing the message bytes or a `Message` object.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   */\n  send(message, options = {time: 0}, legacy = 0) {\n\n    // If a Message object is passed in we extract the message data (the jzz plugin used on Node.js\n    // does not support using Uint8Array).\n    if (message instanceof Message) {\n      message = Utilities.isNode ? message.data : message.rawData;\n    }\n\n    // If the data is a Uint8Array and we are on Node, we must convert it to array so it works with\n    // the jzz module.\n    if (message instanceof Uint8Array && Utilities.isNode) {\n      message = Array.from(message);\n    }\n\n    // Validation\n    if (WebMidi.validation) {\n\n      // If message is neither an array nor a Uint8Array, then we are in legacy mode\n      if (!Array.isArray(message) && !(message instanceof Uint8Array)) {\n        message = [message];\n        if (Array.isArray(options)) message = message.concat(options);\n        options = isNaN(legacy) ? {time: 0} : {time: legacy};\n      }\n\n      if (!(parseInt(message[0]) >= 128 && parseInt(message[0]) <= 255)) {\n        throw new RangeError(\"The first byte (status) must be an integer between 128 and 255.\");\n      }\n\n      message.slice(1).forEach(value => {\n        value = parseInt(value);\n        if (!(value >= 0 && value <= 255)) {\n          throw new RangeError(\"Data bytes must be integers between 0 and 255.\");\n        }\n      });\n\n      if (!options) options = {time: 0};\n\n    }\n\n    // Send message and return `Output` for chaining\n    this._midiOutput.send(message, Utilities.toTimestamp(options.time));\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI [**system exclusive**]{@link\n    * https://www.midi.org/specifications-old/item/table-4-universal-system-exclusive-messages}\n   * (*sysex*) message. There are two categories of system exclusive messages: manufacturer-specific\n   * messages and universal messages. Universal messages are further divided into three subtypes:\n   *\n   *   * Universal non-commercial (for research and testing): `0x7D`\n   *   * Universal non-realtime: `0x7E`\n   *   * Universal realtime: `0x7F`\n   *\n   * The method's first parameter (`identification`) identifies the type of message. If the value of\n   * `identification` is `0x7D` (125), `0x7E` (126) or `0x7F` (127), the message will be identified\n   * as a **universal non-commercial**, **universal non-realtime** or **universal realtime** message\n   * (respectively).\n   *\n   * If the `identification` value is an array or an integer between 0 and 124, it will be used to\n   * identify the manufacturer targeted by the message. The *MIDI Manufacturers Association*\n   * maintains a full list of\n   * [Manufacturer ID Numbers](https://www.midi.org/specifications-old/item/manufacturer-id-numbers).\n   *\n   * The `data` parameter should only contain the data of the message. When sending out the actual\n   * MIDI message, WEBMIDI.js will automatically prepend the data with the **sysex byte** (`0xF0`)\n   * and the identification byte(s). It will also automatically terminate the message with the\n   * **sysex end byte** (`0xF7`).\n   *\n   * To use the `sendSysex()` method, system exclusive message support must have been enabled. To\n   * do so, you must set the `sysex` option to `true` when calling\n   * [`WebMidi.enable()`]{@link WebMidi#enable}:\n   *\n   * ```js\n   * WebMidi.enable({sysex: true})\n   *   .then(() => console.log(\"System exclusive messages are enabled\");\n   * ```\n   *\n   * ##### Examples of manufacturer-specific system exclusive messages\n   *\n   * If you want to send a sysex message to a Korg device connected to the first output, you would\n   * use the following code:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(0x42, [0x1, 0x2, 0x3, 0x4, 0x5]);\n   * ```\n   * In this case `0x42` is the ID of the manufacturer (Korg) and `[0x1, 0x2, 0x3, 0x4, 0x5]` is the\n   * data being sent.\n   *\n   * The parameters can be specified using any number notation (decimal, hex, binary, etc.).\n   * Therefore, the code above is equivalent to this code:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(66, [1, 2, 3, 4, 5]);\n   * ```\n   *\n   * Some manufacturers are identified using 3 bytes. In this case, you would use a 3-position array\n   * as the first parameter. For example, to send the same sysex message to a\n   * *Native Instruments* device:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex([0x00, 0x21, 0x09], [0x1, 0x2, 0x3, 0x4, 0x5]);\n   * ```\n   *\n   * There is no limit for the length of the data array. However, it is generally suggested to keep\n   * system exclusive messages to 64Kb or less.\n   *\n   * ##### Example of universal system exclusive message\n   *\n   * If you want to send a universal sysex message, simply assign the correct identification number\n   * in the first parameter. Number `0x7D` (125) is for non-commercial, `0x7E` (126) is for\n   * non-realtime and `0x7F` (127) is for realtime.\n   *\n   * So, for example, if you wanted to send an identity request non-realtime message (`0x7E`), you\n   * could use the following:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(0x7E, [0x7F, 0x06, 0x01]);\n   * ```\n   *\n   * For more details on the format of universal messages, consult the list of\n   * [universal sysex messages](https://www.midi.org/specifications-old/item/table-4-universal-system-exclusive-messages).\n   *\n   * @param {number|number[]} identification An unsigned integer or an array of three unsigned\n   * integers between `0` and `127` that either identify the manufacturer or sets the message to be\n   * a **universal non-commercial message** (`0x7D`), a **universal non-realtime message** (`0x7E`)\n   * or a **universal realtime message** (`0x7F`). The *MIDI Manufacturers Association* maintains a\n   * full list of\n   * [Manufacturer ID Numbers](https://www.midi.org/specifications-old/item/manufacturer-id-numbers).\n   *\n   * @param {number[]|Uint8Array} [data] A `Uint8Array` or an array of unsigned integers between `0`\n   * and `127`. This is the data you wish to transfer.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {DOMException} Failed to execute 'send' on 'MIDIOutput': System exclusive message is\n   * not allowed.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index x is greater\n   * than 0xFF.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendSysex(identification, data= [], options = {}) {\n\n    identification = [].concat(identification);\n\n    // Check if data is Uint8Array\n    if (data instanceof Uint8Array) {\n      const merged = new Uint8Array(1 + identification.length + data.length + 1);\n      merged[0] = Enumerations.SYSTEM_MESSAGES.sysex;\n      merged.set(Uint8Array.from(identification), 1);\n      merged.set(data, 1 + identification.length);\n      merged[merged.length - 1] = Enumerations.SYSTEM_MESSAGES.sysexend;\n      this.send(merged, {time: options.time});\n    } else {\n      const merged = identification.concat(data, Enumerations.SYSTEM_MESSAGES.sysexend);\n      this.send([Enumerations.SYSTEM_MESSAGES.sysex].concat(merged), {time: options.time});\n    }\n\n    return this;\n\n  };\n\n  /**\n   * Clears all messages that have been queued but not yet delivered.\n   *\n   * **Warning**: this method has been defined in the specification but has not been implemented\n   * yet. As soon as browsers implement it, it will work.\n   *\n   * You can check out the current status of this feature for Chromium (Chrome) here:\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=471798\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  clear() {\n\n    if (this._midiOutput.clear) {\n\n      this._midiOutput.clear();\n\n    } else {\n\n      if (WebMidi.validation) {\n        console.warn(\n          \"The 'clear()' method has not yet been implemented in your environment.\"\n        );\n      }\n\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **timecode quarter frame** message. Please note that no processing is being done\n   * on the data. It is up to the developer to format the data according to the\n   * [MIDI Timecode](https://en.wikipedia.org/wiki/MIDI_timecode) format.\n   *\n   * @param value {number} The quarter frame message content (integer between 0 and 127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendTimecodeQuarterFrame(value, options = {}) {\n\n    if (WebMidi.validation) {\n      value = parseInt(value);\n      if (isNaN(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The value must be an integer between 0 and 127.\");\n      }\n    }\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.timecode,\n        value\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  };\n\n  /**\n   * Sends a **song position** MIDI message. The value is expressed in MIDI beats (between `0` and\n   * `16383`) which are 16th note. Position `0` is always the start of the song.\n   *\n   * @param {number} [value=0] The MIDI beat to cue to (integer between `0` and `16383`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendSongPosition(value = 0, options = {}) {\n\n    // @todo allow passing in 2-entries array for msb/lsb\n\n    value = Math.floor(value) || 0;\n\n    var msb = (value >> 7) & 0x7F;\n    var lsb = value & 0x7F;\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.songposition,\n        msb,\n        lsb\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **song select** MIDI message.\n   *\n   * @param {number} [value=0] The number of the song to select (integer between `0` and `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws The song number must be between 0 and 127.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendSongSelect(value = 0, options = {}) {\n\n    if (WebMidi.validation) {\n\n      value = parseInt(value);\n\n      if (isNaN(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The program value must be between 0 and 127\");\n      }\n\n    }\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.songselect,\n        value\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **tune request** real-time message.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuneRequest(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.tunerequest],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **clock** real-time message. According to the standard, there are 24 MIDI clocks\n   * for every quarter note.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendClock(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.clock],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **start** real-time message. A MIDI Start message starts the playback of the current\n   * song at beat 0. To start playback elsewhere in the song, use the\n   * [`sendContinue()`]{@link #sendContinue} method.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendStart(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.start],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **continue** real-time message. This resumes song playback where it was previously\n   * stopped or where it was last cued with a song position message. To start playback from the\n   * start, use the [`sendStart()`]{@link Output#sendStart}` method.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendContinue(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.continue],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **stop** real-time message. This tells the device connected to this output to stop\n   * playback immediately (or at the scheduled time, if specified).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendStop(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.stop],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **active sensing** real-time message. This tells the device connected to this port\n   * that the connection is still good. Active sensing messages are often sent every 300 ms if there\n   * was no other activity on the MIDI port.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendActiveSensing(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.activesensing],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **reset** real-time message. This tells the device connected to this output that it\n   * should reset itself to a default state.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendReset(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.reset],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendTuningRequest(options = {}) {\n\n    if (WebMidi.validation) {\n      console.warn(\n        \"The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead.\"\n      );\n    }\n\n    return this.sendTuneRequest(options);\n\n  }\n\n  /**\n   * Sends a MIDI **key aftertouch** message to the specified channel(s) at the scheduled time. This\n   * is a key-specific aftertouch. For a channel-wide aftertouch message, use\n   * [`setChannelAftertouch()`]{@link #setChannelAftertouch}.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) for which you are sending\n   * an aftertouch value. The notes can be specified by using a MIDI note number (`0` - `127`), a\n   * [`Note`](Note) object, a note identifier (e.g. `C3`, `G#4`, `F-1`, `Db7`) or an array of the\n   * previous types. When using a note identifier, octave range must be between `-1` and `9`. The\n   * lowest note is `C-1` (MIDI note number `0`) and the highest note is `G9` (MIDI note number\n   * `127`).\n   *\n   * @param [pressure=0.5] {number} The pressure level (between 0 and 1). An invalid pressure value\n   * will silently trigger the default behaviour. If the `rawValue` option is set to `true`, the\n   * pressure can be defined by using an integer between 0 and 127.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendKeyAftertouch(note, pressure, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendKeyAftertouch(note, pressure, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a MIDI **control change** message to the specified channel(s) at the scheduled time. The\n   * control change message to send can be specified numerically (0-127) or by using one of the\n   * following common names:\n   *\n   * | Number | Name                          |\n   * |--------|-------------------------------|\n   * | 0      |`bankselectcoarse`             |\n   * | 1      |`modulationwheelcoarse`        |\n   * | 2      |`breathcontrollercoarse`       |\n   * | 4      |`footcontrollercoarse`         |\n   * | 5      |`portamentotimecoarse`         |\n   * | 6      |`dataentrycoarse`              |\n   * | 7      |`volumecoarse`                 |\n   * | 8      |`balancecoarse`                |\n   * | 10     |`pancoarse`                    |\n   * | 11     |`expressioncoarse`             |\n   * | 12     |`effectcontrol1coarse`         |\n   * | 13     |`effectcontrol2coarse`         |\n   * | 18     |`generalpurposeslider3`        |\n   * | 19     |`generalpurposeslider4`        |\n   * | 32     |`bankselectfine`               |\n   * | 33     |`modulationwheelfine`          |\n   * | 34     |`breathcontrollerfine`         |\n   * | 36     |`footcontrollerfine`           |\n   * | 37     |`portamentotimefine`           |\n   * | 38     |`dataentryfine`                |\n   * | 39     |`volumefine`                   |\n   * | 40     |`balancefine`                  |\n   * | 42     |`panfine`                      |\n   * | 43     |`expressionfine`               |\n   * | 44     |`effectcontrol1fine`           |\n   * | 45     |`effectcontrol2fine`           |\n   * | 64     |`holdpedal`                    |\n   * | 65     |`portamento`                   |\n   * | 66     |`sustenutopedal`               |\n   * | 67     |`softpedal`                    |\n   * | 68     |`legatopedal`                  |\n   * | 69     |`hold2pedal`                   |\n   * | 70     |`soundvariation`               |\n   * | 71     |`resonance`                    |\n   * | 72     |`soundreleasetime`             |\n   * | 73     |`soundattacktime`              |\n   * | 74     |`brightness`                   |\n   * | 75     |`soundcontrol6`                |\n   * | 76     |`soundcontrol7`                |\n   * | 77     |`soundcontrol8`                |\n   * | 78     |`soundcontrol9`                |\n   * | 79     |`soundcontrol10`               |\n   * | 80     |`generalpurposebutton1`        |\n   * | 81     |`generalpurposebutton2`        |\n   * | 82     |`generalpurposebutton3`        |\n   * | 83     |`generalpurposebutton4`        |\n   * | 91     |`reverblevel`                  |\n   * | 92     |`tremololevel`                 |\n   * | 93     |`choruslevel`                  |\n   * | 94     |`celestelevel`                 |\n   * | 95     |`phaserlevel`                  |\n   * | 96     |`dataincrement`                |\n   * | 97     |`datadecrement`                |\n   * | 98     |`nonregisteredparametercoarse` |\n   * | 99     |`nonregisteredparameterfine`   |\n   * | 100    |`registeredparametercoarse`    |\n   * | 101    |`registeredparameterfine`      |\n   * | 120    |`allsoundoff`                  |\n   * | 121    |`resetallcontrollers`          |\n   * | 122    |`localcontrol`                 |\n   * | 123    |`allnotesoff`                  |\n   * | 124    |`omnimodeoff`                  |\n   * | 125    |`omnimodeon`                   |\n   * | 126    |`monomodeon`                   |\n   * | 127    |`polymodeon`                   |\n   *\n   * Note: as you can see above, not all control change message have a matching name. This does not\n   * mean you cannot use the others. It simply means you will need to use their number (`0` - `127`)\n   * instead of their name. While you can still use them, numbers `120` to `127` are usually\n   * reserved for *channel mode* messages. See [`sendChannelMode()`]{@link #sendChannelMode} method\n   * for more info.\n   *\n   * To view a list of all available **control change** messages, please consult [Table 3 - Control\n   * Change Messages](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * from the MIDI specification.\n   *\n   * @param controller {number|string} The MIDI controller name or number (0-127).\n   *\n   * @param [value=0] {number} The value to send (0-127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 127.\n   * @throws {RangeError} Invalid controller name.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendControlChange(controller, value, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendControlChange(controller, value, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a **pitch bend range** message to the specified channel(s) at the scheduled time so that\n   * they adjust the range used by their pitch bend lever. The range is specified by using the\n   * `semitones` and `cents` parameters. For example, setting the `semitones` parameter to `12`\n   * means that the pitch bend range will be 12 semitones above and below the nominal pitch.\n   *\n   * @param {number} [semitones=0] The desired adjustment value in semitones (between `0` and `127`).\n   * While nothing imposes that in the specification, it is very common for manufacturers to limit\n   * the range to 2 octaves (-12 semitones to 12 semitones).\n   *\n   * @param {number} [cents=0] The desired adjustment value in cents (integer between `0` and\n   * `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127.\n   * @throws {RangeError} The lsb value must be between 0 and 127.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPitchBendRange(semitones= 0, cents = 0, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPitchBendRange(semitones, cents, options);\n    });\n\n    return this;\n\n  }\n\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setPitchBendRange(semitones = 0, cents = 0, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendPitchBendRange(semitones, cents, options);\n\n  }\n\n  /**\n   * Sets the specified MIDI registered parameter to the desired value. The value is defined with\n   * up to two bytes of data (msb, lsb) that each can go from `0` to `127`.\n   *\n   * MIDI\n   * [registered parameters](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * extend the original list of control change messages. The MIDI 1.0 specification lists only a\n   * limited number of them:\n   *\n   * | Numbers      | Function                 |\n   * |--------------|--------------------------|\n   * | (0x00, 0x00) | `pitchbendrange`         |\n   * | (0x00, 0x01) | `channelfinetuning`      |\n   * | (0x00, 0x02) | `channelcoarsetuning`    |\n   * | (0x00, 0x03) | `tuningprogram`          |\n   * | (0x00, 0x04) | `tuningbank`             |\n   * | (0x00, 0x05) | `modulationrange`        |\n   * | (0x3D, 0x00) | `azimuthangle`           |\n   * | (0x3D, 0x01) | `elevationangle`         |\n   * | (0x3D, 0x02) | `gain`                   |\n   * | (0x3D, 0x03) | `distanceratio`          |\n   * | (0x3D, 0x04) | `maximumdistance`        |\n   * | (0x3D, 0x05) | `maximumdistancegain`    |\n   * | (0x3D, 0x06) | `referencedistanceratio` |\n   * | (0x3D, 0x07) | `panspreadangle`         |\n   * | (0x3D, 0x08) | `rollangle`              |\n   *\n   * Note that the `tuningprogram` and `tuningbank` parameters are part of the *MIDI Tuning\n   * Standard*, which is not widely implemented.\n   *\n   * @param parameter {string|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (e.g. `[0x65, 0x64]`) that identify the\n   * registered parameter.\n   *\n   * @param [data=[]] {number|number[]} A single integer or an array of integers with a maximum\n   * length of 2 specifying the desired data.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnValue(parameter, data, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnValue(parameter, data, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setRegisteredParameter(parameter, data = [], channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnValue(parameter, data, options);\n\n  }\n\n  /**\n   * Sends a MIDI **channel aftertouch** message to the specified channel(s). For key-specific\n   * aftertouch, you should instead use [`setKeyAftertouch()`]{@link #setKeyAftertouch}.\n   *\n   * @param [pressure=0.5] {number} The pressure level (between `0` and `1`). An invalid pressure\n   * value will silently trigger the default behaviour. If the `rawValue` option is set to `true`,\n   * the pressure can be defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   * @since 3.0.0\n   */\n  sendChannelAftertouch(pressure, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendChannelAftertouch(pressure, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **pitch bend** message to the specified channel(s) at the scheduled time.\n   *\n   * The resulting bend is relative to the pitch bend range that has been defined. The range can be\n   * set with [`sendPitchBendRange()`]{@link #sendPitchBendRange}. So, for example, if the pitch\n   * bend range has been set to 12 semitones, using a bend value of `-1` will bend the note 1 octave\n   * below its nominal value.\n   *\n   * @param {number|number[]} value The intensity of the bend (between `-1.0` and `1.0`). A value of\n   * `0` means no bend. If an invalid value is specified, the nearest valid value will be used\n   * instead. If the `rawValue` option is set to `true`, the intensity of the bend can be defined by\n   * either using a single integer between `0` and `127` (MSB) or an array of two integers between\n   * `0` and `127` representing, respectively, the MSB (most significant byte) and the LSB (least\n   * significant byte). The MSB is expressed in semitones with `64` meaning no bend. A value lower\n   * than `64` bends downwards while a value higher than `64` bends upwards. The LSB is expressed\n   * in cents (1/100 of a semitone). An LSB of `64` also means no bend.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered as a float between `-1.0` and `1.0` (default) or as raw integer between `0` and\n   * 127` (or an array of 2 integers if using both MSB and LSB).\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPitchBend(value, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPitchBend(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **program change** message to the specified channel(s) at the scheduled time.\n   *\n   * @param {number} [program=0] The MIDI patch (program) number (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 1 is greater\n   * than 0xFF.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendProgramChange(program = 0, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendProgramChange(program, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **modulation depth range** message to the specified channel(s) so that they adjust the\n   * depth of their modulation wheel's range. The range can be specified with the `semitones`\n   * parameter, the `cents` parameter or by specifying both parameters at the same time.\n   *\n   * @param [semitones=0] {number} The desired adjustment value in semitones (integer between\n   * 0 and 127).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127\n   * @throws {RangeError} The lsb value must be between 0 and 127\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendModulationRange(semitones, cents, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendModulationRange(semitones, cents, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setModulationRange(semitones = 0, cents = 0, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setModulationRange() method is deprecated. Use sendModulationRange() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendModulationRange(semitones, cents, options);\n\n  }\n\n  /**\n   * Sends a master tuning message to the specified channel(s). The value is decimal and must be\n   * larger than `-65` semitones and smaller than `64` semitones.\n   *\n   * Because of the way the MIDI specification works, the decimal portion of the value will be\n   * encoded with a resolution of 14bit. The integer portion must be between -64 and 63\n   * inclusively. This function actually generates two MIDI messages: a **Master Coarse Tuning** and\n   * a **Master Fine Tuning** RPN messages.\n   *\n   * @param [value=0.0] {number} The desired decimal adjustment value in semitones (-65 < x < 64)\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The value must be a decimal number between larger than -65 and smaller\n   * than 64.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendMasterTuning(value, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendMasterTuning(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setMasterTuning(value, channel = {}, options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setMasterTuning() method is deprecated. Use sendMasterTuning() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendMasterTuning(value, options);\n\n  }\n\n  /**\n   * Sets the MIDI tuning program to use. Note that the **Tuning Program** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning program (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The program value must be between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuningProgram(value, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendTuningProgram(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setTuningProgram(value, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setTuningProgram() method is deprecated. Use sendTuningProgram() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendTuningProgram(value, options);\n\n  }\n\n  /**\n   * Sets the MIDI tuning bank to use. Note that the **Tuning Bank** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param {number} [value=0] The desired tuning bank (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The bank value must be between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuningBank(value= 0, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendTuningBank(value, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setTuningBank(parameter, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setTuningBank() method is deprecated. Use sendTuningBank() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendTuningBank(parameter, options);\n\n  }\n\n  /**\n   * Sends a MIDI **channel mode** message to the specified channel(s). The channel mode message to\n   * send can be specified numerically or by using one of the following common names:\n   *\n   * |  Type                |Number| Shortcut Method                                               |\n   * | ---------------------|------|-------------------------------------------------------------- |\n   * | `allsoundoff`        | 120  | [`sendAllSoundOff()`]{@link #sendAllSoundOff}                 |\n   * | `resetallcontrollers`| 121  | [`sendResetAllControllers()`]{@link #sendResetAllControllers} |\n   * | `localcontrol`       | 122  | [`sendLocalControl()`]{@link #sendLocalControl}               |\n   * | `allnotesoff`        | 123  | [`sendAllNotesOff()`]{@link #sendAllNotesOff}                 |\n   * | `omnimodeoff`        | 124  | [`sendOmniMode(false)`]{@link #sendOmniMode}                  |\n   * | `omnimodeon`         | 125  | [`sendOmniMode(true)`]{@link #sendOmniMode}                   |\n   * | `monomodeon`         | 126  | [`sendPolyphonicMode(\"mono\")`]{@link #sendPolyphonicMode}     |\n   * | `polymodeon`         | 127  | [`sendPolyphonicMode(\"poly\")`]{@link #sendPolyphonicMode}     |\n   *\n   * Note: as you can see above, to make it easier, all channel mode messages also have a matching\n   * helper method.\n   *\n   * It should also be noted that, per the MIDI specification, only `localcontrol` and `monomodeon`\n   * may require a value that's not zero. For that reason, the `value` parameter is optional and\n   * defaults to 0.\n   *\n   * @param {number|string} command The numerical identifier of the channel mode message (integer\n   * between 120-127) or its name as a string.\n   *\n   * @param {number} [value=0] The value to send (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   */\n  sendChannelMode(command, value = 0, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendChannelMode(command, value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **all sound off** channel mode message. This will silence all sounds playing on that\n   * channel but will not prevent new sounds from being triggered.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   *\n   * @since 3.0.0\n   */\n  sendAllSoundOff(options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendAllSoundOff(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **all notes off** channel mode message. This will make all currently playing notes\n   * fade out just as if their key had been released. This is different from the\n   * [`turnSoundOff()`]{@link #turnSoundOff} method which mutes all sounds immediately.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   *\n   * @since 3.0.0\n   */\n  sendAllNotesOff(options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendAllNotesOff(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **reset all controllers** channel mode message. This resets all controllers, such as\n   * the pitch bend, to their default value.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   */\n  sendResetAllControllers(options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendResetAllControllers(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets the polyphonic mode. In `poly` mode (usually the default), multiple notes can be played\n   * and heard at the same time. In `mono` mode, only one note will be heard at once even if\n   * multiple notes are being played.\n   *\n   * @param mode {string} The mode to use: `mono` or `poly`.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPolyphonicMode(mode, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPolyphonicMode(mode, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Turns local control on or off. Local control is usually enabled by default. If you disable it,\n   * the instrument will no longer trigger its own sounds. It will only send the MIDI messages to\n   * its out port.\n   *\n   * @param [state=false] {boolean} Whether to activate local control (`true`) or disable it\n   * (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendLocalControl(state, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendLocalControl(state, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets OMNI mode to **on** or **off** for the specified channel(s). MIDI's OMNI mode causes the\n   * instrument to respond to messages from all channels.\n   *\n   * It should be noted that support for OMNI mode is not as common as it used to be.\n   *\n   * @param [state] {boolean} Whether to activate OMNI mode (`true`) or not (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendOmniMode(state, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendOmniMode(state, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets a non-registered parameter to the specified value. The NRPN is selected by passing a\n   * two-position array specifying the values of the two control bytes. The value is specified by\n   * passing a single integer (most cases) or an array of two integers.\n   *\n   * NRPNs are not standardized in any way. Each manufacturer is free to implement them any way\n   * they see fit. For example, according to the Roland GS specification, you can control the\n   * **vibrato rate** using NRPN (`1`, `8`). Therefore, to set the **vibrato rate** value to `123`\n   * you would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([1, 8], 123);\n   * ```\n   *\n   * You probably want to should select a channel so the message is not sent to all channels. For\n   * instance, to send to channel `1` of the first output port, you would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([1, 8], 123, 1);\n   * ```\n   *\n   * In some rarer cases, you need to send two values with your NRPN messages. In such cases, you\n   * would use a 2-position array. For example, for its **ClockBPM** parameter (`2`, `63`), Novation\n   * uses a 14-bit value that combines an MSB and an LSB (7-bit values). So, for example, if the\n   * value to send was `10`, you could use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([2, 63], [0, 10], 1);\n   * ```\n   *\n   * For further implementation details, refer to the manufacturer's documentation.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes (`0x63`,\n   * `0x62`) that identify the non-registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An integer or an array of integers with a length of 1 or 2\n   * specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The control value must be between 0 and 127.\n   * @throws {RangeError} The msb value must be between 0 and 127\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNrpnValue(parameter, data, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNrpnValue(parameter, data, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setNonRegisteredParameter(parameter, data = [], channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendNrpnValue(parameter, data, options);\n\n  }\n\n  /**\n   * Increments the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this method:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnIncrement(parameter, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnIncrement(parameter, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  incrementRegisteredParameter(parameter, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnIncrement(parameter, options);\n\n  }\n\n  /**\n   * Decrements the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this method:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified parameter is not available.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnDecrement(parameter, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnDecrement(parameter, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  decrementRegisteredParameter(parameter, channel = \"all\", options = {}) {\n\n    if (WebMidi.validation) {\n\n      console.warn(\n        \"The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnDecrement(parameter, options);\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number on the specified channel(s).\n   * The first parameter is the note to stop. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`,\n   * `F-1`, `Db7`) or an array of the previous types. When using a note identifier, octave range\n   * must be between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest\n   * note is `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNoteOff(note, options= {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNoteOff(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number on the specified channel(s).\n   * The first parameter is the note to stop. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  stopNote(note, options) {\n    return this.sendNoteOff(note, options);\n  }\n\n  /**\n   * Plays a note or an array of notes on one or more channels of this output. If you intend to play\n   * notes on a single channel, you should probably use\n   * [`OutputChannel.playNote()`](OutputChannel#playNote) instead.\n   *\n   * The first parameter is the note to play. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`]{@link Note} object\n   *\n   * The `playNote()` method sends a **note on** MIDI message for all specified notes on all\n   * specified channels. If no channel is specified, it will send to all channels. If a `duration`\n   * is set in the `options` parameter or in the [`Note`]{@link Note} object's\n   * [`duration`]{@link Note#duration} property, it will also schedule a **note off** message to end\n   * the note after said duration. If no `duration` is set, the note will simply play until a\n   * matching **note off** message is sent with [`stopNote()`]{@link #stopNote}.\n   *\n   * The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the durations and velocities defined in the\n   * [`Note`]{@link Note} objects have precedence over the ones specified via the method's `options`\n   * parameter.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types. When using a note identifier,\n   * octave range must be between -1 and 9. The lowest note is C-1 (MIDI note number `0`) and the\n   * highest note is G9 (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.duration=undefined] The number of milliseconds after which a\n   * **note off** message will be scheduled. If left undefined, only a **note on** message is sent.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`). If the `rawAttack` option is also defined, it will have priority. An invalid velocity\n   * value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The attack velocity at which to play the note (between\n   * `0` and `127`). This has priority over the `attack` property. An invalid velocity value will\n   * silently trigger the default of 64.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawRelease` option is also defined, it will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`. This is only used with the\n   * **note off** event triggered when `options.duration` is set.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note (between `0`\n   * and `127`). This has priority over the `release` property. An invalid velocity value will\n   * silently trigger the default of 64. This is only used with the **note off** event triggered\n   * when `options.duration` is set.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  playNote(note, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy-compatibility warnings\n      if (options.rawVelocity) {\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' instead.\");\n      }\n\n      if (options.velocity) {\n        console.warn(\"The 'velocity' option is deprecated. Use 'velocity' instead.\");\n      }\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].playNote(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note on** message for the specified MIDI note number on the specified channel(s). The\n   * first parameter is the number. It can be a single value or an array of the following valid\n   * values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`).  If the `rawAttack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The velocity at which to release the note (between `0`\n   * and `127`). If the `attack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNoteOn(note, options = {}, legacy = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    // This actually supports passing a Note object even if, semantically, this does not make sense.\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNoteOn(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Name of the MIDI output.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get name() {\n    return this._midiOutput.name;\n  }\n\n  /**\n   * ID string of the MIDI output. The ID is host-specific. Do not expect the same ID on different\n   * platforms. For example, Google Chrome and the Jazz-Plugin report completely different IDs for\n   * the same port.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._midiOutput.id;\n  }\n\n  /**\n   * Output port's connection state: `pending`, `open` or `closed`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get connection() {\n    return this._midiOutput.connection;\n  }\n\n  /**\n   * Name of the manufacturer of the device that makes this output port available.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get manufacturer() {\n    return this._midiOutput.manufacturer;\n  }\n\n  /**\n   * State of the output port: `connected` or `disconnected`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get state() {\n    return this._midiOutput.state;\n  }\n\n  /**\n   * Type of the output port (it will always be: `output`).\n   *\n   * @type {string}\n   * @readonly\n   */\n  get type() {\n    return this._midiOutput.type;\n  }\n\n  /**\n   * An integer to offset the octave of outgoing notes. By default, middle C (MIDI note number 60)\n   * is placed on the 4th octave (C4).\n   *\n   * Note that this value is combined with the global offset value defined in\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) (if any).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n}\n","import {Enumerations} from \"./Enumerations.js\";\nimport {Output} from \"./Output.js\";\nimport {WebMidi} from \"./WebMidi.js\";\n\n/**\n * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you\n * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object\n * to all the outputs listed in its [`destinations`](#destinations) property.\n *\n * If specific channels or message types have been defined in the [`channels`](#channels) or\n * [`types`](#types) properties, only messages matching the channels/types will be forwarded.\n *\n * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as\n * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Forwarder {\n\n  /**\n   * Creates a `Forwarder` object.\n   *\n   * @param {Output|Output[]} [destinations=\\[\\]] An [`Output`](Output) object, or an array of such\n   * objects, to forward the message to.\n   *\n   * @param {object} [options={}]\n   * @param {string|string[]} [options.types=(all messages)] A MIDI message type or an array of such\n   * types (`\"noteon\"`, `\"controlchange\"`, etc.), that the specified message must match in order to\n   * be forwarded. If this option is not specified, all types of messages will be forwarded. Valid\n   * messages are the ones found in either\n   * [`SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES)\n   * or [`CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * A MIDI channel number or an array of channel numbers that the message must match in order to be\n   * forwarded. By default all MIDI channels are included (`1` to `16`).\n   */\n  constructor(destinations = [], options = {}) {\n\n    /**\n     * An array of [`Output`](Output) objects to forward the message to.\n     * @type {Output[]}\n     */\n    this.destinations = [];\n\n    /**\n     * An array of message types (`\"noteon\"`, `\"controlchange\"`, etc.) that must be matched in order\n     * for messages to be forwarded. By default, this array includes all\n     * [`Enumerations.SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES) and\n     * [`Enumerations.CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n     * @type {string[]}\n     */\n    this.types = [\n      ...Object.keys(Enumerations.SYSTEM_MESSAGES),\n      ...Object.keys(Enumerations.CHANNEL_MESSAGES)\n    ];\n\n    /**\n     * An array of MIDI channel numbers that the message must match in order to be forwarded. By\n     * default, this array includes all MIDI channels (`1` to `16`).\n     * @type {number[]}\n     */\n    this.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    /**\n     * Indicates whether message forwarding is currently suspended or not in this forwarder.\n     * @type {boolean}\n     */\n    this.suspended = false;\n\n    // Make sure parameters are arrays\n    if (!Array.isArray(destinations)) destinations = [destinations];\n    if (options.types && !Array.isArray(options.types)) options.types = [options.types];\n    if (options.channels && !Array.isArray(options.channels)) options.channels = [options.channels];\n\n    if (WebMidi.validation) {\n\n      // Validate destinations\n      destinations.forEach(destination => {\n        if ( !(destination instanceof Output) ) {\n          throw new TypeError(\"Destinations must be of type 'Output'.\");\n        }\n      });\n\n      // Validate types\n      if (options.types !== undefined) {\n\n        options.types.forEach(type => {\n          if (\n            ! Enumerations.SYSTEM_MESSAGES.hasOwnProperty(type) &&\n            ! Enumerations.CHANNEL_MESSAGES.hasOwnProperty(type)\n          ) {\n            throw new TypeError(\"Type must be a valid message type.\");\n          }\n        });\n\n      }\n\n      // Validate channels\n      if (options.channels !== undefined) {\n\n        options.channels.forEach(channel => {\n          if (! Enumerations.MIDI_CHANNEL_NUMBERS.includes(channel) ) {\n            throw new TypeError(\"MIDI channel must be between 1 and 16.\");\n          }\n        });\n\n      }\n\n    }\n\n    this.destinations = destinations;\n    if (options.types) this.types = options.types;\n    if (options.channels) this.channels = options.channels;\n\n  }\n\n  /**\n   * Sends the specified message to the forwarder's destination(s) if it matches the specified\n   * type(s) and channel(s).\n   *\n   * @param {Message} message The [`Message`](Message) object to forward.\n   */\n  forward(message) {\n\n    // Abort if forwarding is currently suspended\n    if (this.suspended) return;\n\n    // Abort if this message type should not be forwarded\n    if (!this.types.includes(message.type)) return;\n\n    // Abort if this channel should not be forwarded\n    if (message.channel && !this.channels.includes(message.channel)) return;\n\n    // Forward\n    this.destinations.forEach(destination => {\n      if (WebMidi.validation && !(destination instanceof Output)) return;\n      destination.send(message);\n    });\n\n  }\n\n}\n","import {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {WebMidi} from \"./WebMidi.js\";\nimport {Utilities} from \"./Utilities.js\";\nimport {Note} from \"./Note.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/**\n * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input\n * device. This object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)\n * property.\n *\n * @fires InputChannel#midimessage\n * @fires InputChannel#unknownmessage\n *\n * @fires InputChannel#noteoff\n * @fires InputChannel#noteon\n * @fires InputChannel#keyaftertouch\n * @fires InputChannel#programchange\n * @fires InputChannel#channelaftertouch\n * @fires InputChannel#pitchbend\n *\n * @fires InputChannel#allnotesoff\n * @fires InputChannel#allsoundoff\n * @fires InputChannel#localcontrol\n * @fires InputChannel#monomode\n * @fires InputChannel#omnimode\n * @fires InputChannel#resetallcontrollers\n *\n * @fires InputChannel#event:nrpn\n * @fires InputChannel#event:nrpn-dataentrycoarse\n * @fires InputChannel#event:nrpn-dataentryfine\n * @fires InputChannel#event:nrpn-dataincrement\n * @fires InputChannel#event:nrpn-datadecrement\n * @fires InputChannel#event:rpn\n * @fires InputChannel#event:rpn-dataentrycoarse\n * @fires InputChannel#event:rpn-dataentryfine\n * @fires InputChannel#event:rpn-dataincrement\n * @fires InputChannel#event:rpn-datadecrement\n *\n * @fires InputChannel#controlchange\n * @fires InputChannel#event:controlchange-controllerxxx\n * @fires InputChannel#event:controlchange-bankselectcoarse\n * @fires InputChannel#event:controlchange-modulationwheelcoarse\n * @fires InputChannel#event:controlchange-breathcontrollercoarse\n * @fires InputChannel#event:controlchange-footcontrollercoarse\n * @fires InputChannel#event:controlchange-portamentotimecoarse\n * @fires InputChannel#event:controlchange-dataentrycoarse\n * @fires InputChannel#event:controlchange-volumecoarse\n * @fires InputChannel#event:controlchange-balancecoarse\n * @fires InputChannel#event:controlchange-pancoarse\n * @fires InputChannel#event:controlchange-expressioncoarse\n * @fires InputChannel#event:controlchange-effectcontrol1coarse\n * @fires InputChannel#event:controlchange-effectcontrol2coarse\n * @fires InputChannel#event:controlchange-generalpurposecontroller1\n * @fires InputChannel#event:controlchange-generalpurposecontroller2\n * @fires InputChannel#event:controlchange-generalpurposecontroller3\n * @fires InputChannel#event:controlchange-generalpurposecontroller4\n * @fires InputChannel#event:controlchange-bankselectfine\n * @fires InputChannel#event:controlchange-modulationwheelfine\n * @fires InputChannel#event:controlchange-breathcontrollerfine\n * @fires InputChannel#event:controlchange-footcontrollerfine\n * @fires InputChannel#event:controlchange-portamentotimefine\n * @fires InputChannel#event:controlchange-dataentryfine\n * @fires InputChannel#event:controlchange-channelvolumefine\n * @fires InputChannel#event:controlchange-balancefine\n * @fires InputChannel#event:controlchange-panfine\n * @fires InputChannel#event:controlchange-expressionfine\n * @fires InputChannel#event:controlchange-effectcontrol1fine\n * @fires InputChannel#event:controlchange-effectcontrol2fine\n * @fires InputChannel#event:controlchange-damperpedal\n * @fires InputChannel#event:controlchange-portamento\n * @fires InputChannel#event:controlchange-sostenuto\n * @fires InputChannel#event:controlchange-softpedal\n * @fires InputChannel#event:controlchange-legatopedal\n * @fires InputChannel#event:controlchange-hold2\n * @fires InputChannel#event:controlchange-soundvariation\n * @fires InputChannel#event:controlchange-resonance\n * @fires InputChannel#event:controlchange-releasetime\n * @fires InputChannel#event:controlchange-attacktime\n * @fires InputChannel#event:controlchange-brightness\n * @fires InputChannel#event:controlchange-decaytime\n * @fires InputChannel#event:controlchange-vibratorate\n * @fires InputChannel#event:controlchange-vibratodepth\n * @fires InputChannel#event:controlchange-vibratodelay\n * @fires InputChannel#event:controlchange-generalpurposecontroller5\n * @fires InputChannel#event:controlchange-generalpurposecontroller6\n * @fires InputChannel#event:controlchange-generalpurposecontroller7\n * @fires InputChannel#event:controlchange-generalpurposecontroller8\n * @fires InputChannel#event:controlchange-portamentocontrol\n * @fires InputChannel#event:controlchange-highresolutionvelocityprefix\n * @fires InputChannel#event:controlchange-effect1depth\n * @fires InputChannel#event:controlchange-effect2depth\n * @fires InputChannel#event:controlchange-effect3depth\n * @fires InputChannel#event:controlchange-effect4depth\n * @fires InputChannel#event:controlchange-effect5depth\n * @fires InputChannel#event:controlchange-dataincrement\n * @fires InputChannel#event:controlchange-datadecrement\n * @fires InputChannel#event:controlchange-nonregisteredparameterfine\n * @fires InputChannel#event:controlchange-nonregisteredparametercoarse\n * @fires InputChannel#event:controlchange-registeredparameterfine\n * @fires InputChannel#event:controlchange-registeredparametercoarse\n * @fires InputChannel#event:controlchange-allsoundoff\n * @fires InputChannel#event:controlchange-resetallcontrollers\n * @fires InputChannel#event:controlchange-localcontrol\n * @fires InputChannel#event:controlchange-allnotesoff\n * @fires InputChannel#event:controlchange-omnimodeoff\n * @fires InputChannel#event:controlchange-omnimodeon\n * @fires InputChannel#event:controlchange-monomodeon\n * @fires InputChannel#event:controlchange-polymodeon\n * @fires InputChannel#event:\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class InputChannel extends EventEmitter {\n\n  /**\n   * Creates an `InputChannel` object.\n   *\n   * @param {Input} input The [`Input`](Input) object this channel belongs to.\n   * @param {number} number The channel's MIDI number (1-16).\n   */\n  constructor(input, number) {\n\n    super();\n\n    /**\n     * @type {Input}\n     * @private\n     */\n    this._input = input;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._number = number;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * An array of messages that form the current NRPN sequence\n     * @private\n     * @type {Message[]}\n     */\n    this._nrpnBuffer = [];\n\n    /**\n     * An array of messages that form the current RPN sequence\n     * @private\n     * @type {Message[]}\n     */\n    this._rpnBuffer = [];\n\n    /**\n     * Indicates whether events for **Registered Parameter Number** and **Non-Registered Parameter\n     * Number** should be dispatched. RPNs and NRPNs are composed of a sequence of specific\n     * **control change** messages. When a valid sequence of such control change messages is\n     * received, an [`rpn`](#event-rpn) or [`nrpn`](#event-nrpn) event will fire.\n     *\n     * If an invalid or out-of-order **control change** message is received, it will fall through\n     * the collector logic and all buffered **control change** messages will be discarded as\n     * incomplete.\n     *\n     * @type {boolean}\n     */\n    this.parameterNumberEventsEnabled = true;\n\n    /**\n     * Contains the current playing state of all MIDI notes of this channel (0-127). The state is\n     * `true` for a currently playing note and `false` otherwise.\n     * @type {boolean[]}\n     */\n    this.notesState = new Array(128).fill(false);\n\n  }\n\n  /**\n   * Destroys the `InputChannel` by removing all listeners and severing the link with the MIDI\n   * subsystem's input.\n   */\n  destroy() {\n    this._input = null;\n    this._number = null;\n    this._octaveOffset = 0;\n    this._nrpnBuffer = [];\n    this.notesState = new Array(128).fill(false);\n    this.parameterNumberEventsEnabled = false;\n    this.removeListener();\n  }\n\n  /**\n   * @param e MIDIMessageEvent\n   * @private\n   */\n  _processMidiMessageEvent(e) {\n\n    // Create and emit a new 'midimessage' event based on the incoming one\n    const event = Object.assign({}, e);\n    event.port = this.input;\n    event.target = this;\n    event.type = \"midimessage\";\n\n    /**\n     * Event emitted when a MIDI message of any kind is received by an `InputChannel`\n     *\n     * @event InputChannel#midimessage\n     *\n     * @type {object}\n     *\n     * @property {string} type `midimessage`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n    this.emit(event.type, event);\n\n    // Parse the inbound event for regular MIDI messages\n    this._parseEventForStandardMessages(event);\n\n  }\n\n  /**\n   * Parses incoming channel events and emit standard MIDI message events (noteon, noteoff, etc.)\n   * @param e Event\n   * @private\n   */\n  _parseEventForStandardMessages(e) {\n\n    const event = Object.assign({}, e);\n    event.type = event.message.type || \"unknownmessage\";\n\n    const data1 = e.message.dataBytes[0];\n    const data2 = e.message.dataBytes[1];\n\n    if ( event.type === \"noteoff\" || (event.type === \"noteon\" && data2 === 0) ) {\n\n      this.notesState[data1] = false;\n      event.type = \"noteoff\"; // necessary for note on with 0 velocity\n\n      /**\n       * Event emitted when a **note off** MIDI message has been received on the channel.\n       *\n       * @event InputChannel#noteoff\n       *\n       * @type {object}\n       * @property {string} type `noteoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the incoming\n       * MIDI message.\n       * @property {number} timestamp The moment\n       * ([`DOMHighResTimeStamp`](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp))\n       * when the event occurred (in milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name,\n       * octave and release velocity.\n       * @property {number} value The release velocity amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The release velocity amount expressed as an integer (between 0\n       * and 127).\n       */\n\n      // The object created when a noteoff event arrives is a Note with an attack velocity of 0.\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + WebMidi.octaveOffset\n        ),\n        {\n          rawAttack: 0,\n          rawRelease: data2,\n        }\n      );\n\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // Those are kept for backwards-compatibility but are gone from the documentation. They will\n      // be removed in future versions (@deprecated).\n      event.velocity = event.note.release;\n      event.rawVelocity = event.note.rawRelease;\n\n    } else if (event.type === \"noteon\") {\n\n      this.notesState[data1] = true;\n\n      /**\n       * Event emitted when a **note on** MIDI message has been received.\n       *\n       * @event InputChannel#noteon\n       *\n       * @type {object}\n       * @property {string} type `noteon`\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name,\n       * octave and release velocity.\n       * @property {number} value The attack velocity amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The attack velocity amount expressed as an integer (between 0\n       * and 127).\n       */\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + WebMidi.octaveOffset\n        ),\n        { rawAttack: data2 }\n      );\n\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // Those are kept for backwards-compatibility but are gone from the documentation. They will\n      // be removed in future versions (@deprecated).\n      event.velocity = event.note.attack;\n      event.rawVelocity = event.note.rawAttack;\n\n    } else if (event.type === \"keyaftertouch\") {\n\n      /**\n       * Event emitted when a **key-specific aftertouch** MIDI message has been received.\n       *\n       * @event InputChannel#keyaftertouch\n       *\n       * @type {object}\n       * @property {string} type `\"keyaftertouch\"`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name\n       * and number.\n       * @property {number} value The aftertouch amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The aftertouch amount expressed as an integer (between 0 and\n       * 127).\n       */\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + WebMidi.octaveOffset\n        )\n      );\n\n      // Aftertouch value\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // @deprecated\n      event.identifier = event.note.identifier;\n      event.key = event.note.number;\n      event.rawKey = data1;\n\n    } else if (event.type === \"controlchange\") {\n\n      /**\n       * Event emitted when a **control change** MIDI message has been received.\n       *\n       * @event InputChannel#controlchange\n       *\n       * @type {object}\n       * @property {string} type `controlchange`\n       * @property {string} subtype The type of control change message that was received.\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      event.controller = {\n        number: data1,\n        name: Enumerations.CONTROL_CHANGE_MESSAGES[data1].name,\n        description: Enumerations.CONTROL_CHANGE_MESSAGES[data1].description,\n        position: Enumerations.CONTROL_CHANGE_MESSAGES[data1].position,\n      };\n\n      event.subtype = event.controller.name || \"controller\" + data1;\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      /**\n       * Event emitted when a **control change** MIDI message has been received and that message is\n       * targeting the controller numbered \"xxx\". Of course, \"xxx\" should be replaced by a valid\n       * controller number (0-127).\n       *\n       * @event InputChannel#controlchange-controllerxxx\n       *\n       * @type {object}\n       * @property {string} type `controlchange-controllerxxx`\n       * @property {string} subtype The type of control change message that was received.\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      const numberedEvent = Object.assign({}, event);\n      numberedEvent.type = `${event.type}-controller${data1}`;\n      delete numberedEvent.subtype;\n      this.emit(numberedEvent.type, numberedEvent);\n\n      /**\n       * Event emitted when a **controlchange-bankselectcoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-bankselectcoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-bankselectcoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-modulationwheelcoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-modulationwheelcoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-modulationwheelcoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-breathcontrollercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-breathcontrollercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-breathcontrollercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-footcontrollercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-footcontrollercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-footcontrollercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentotimecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentotimecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentotimecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataentrycoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataentrycoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataentrycoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-volumecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-volumecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-volumecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-balancecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-balancecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-balancecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-pancoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-pancoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-pancoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-expressioncoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-expressioncoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-expressioncoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol1coarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol1coarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol1coarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol2coarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol2coarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol2coarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller1** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller1\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller1`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller2** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller2\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller2`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller3** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller3\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller3`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller4** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller4\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller4`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-bankselectfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-bankselectfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-bankselectfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-modulationwheelfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-modulationwheelfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-modulationwheelfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-breathcontrollerfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-breathcontrollerfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-breathcontrollerfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-footcontrollerfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-footcontrollerfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-footcontrollerfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentotimefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentotimefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentotimefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataentryfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataentryfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataentryfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-channelvolumefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-channelvolumefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-channelvolumefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-balancefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-balancefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-balancefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-panfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-panfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-panfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-expressionfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-expressionfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-expressionfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol1fine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol1fine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol1fine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol2fine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol2fine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol2fine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-damperpedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-damperpedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-damperpedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamento** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamento\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamento`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-sostenuto** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-sostenuto\n       *\n       * @type {object}\n       * @property {string} type `controlchange-sostenuto`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-softpedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-softpedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-softpedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-legatopedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-legatopedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-legatopedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-hold2** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-hold2\n       *\n       * @type {object}\n       * @property {string} type `controlchange-hold2`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-soundvariation** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-soundvariation\n       *\n       * @type {object}\n       * @property {string} type `controlchange-soundvariation`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-resonance** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-resonance\n       *\n       * @type {object}\n       * @property {string} type `controlchange-resonance`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-releasetime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-releasetime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-releasetime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-attacktime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-attacktime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-attacktime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-brightness** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-brightness\n       *\n       * @type {object}\n       * @property {string} type `controlchange-brightness`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-decaytime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-decaytime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-decaytime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratorate** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratorate\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratorate`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratodepth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratodepth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratodepth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratodelay** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratodelay\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratodelay`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller5** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller5\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller5`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller6** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller6\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller6`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller7** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller7\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller7`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller8** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller8\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller8`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentocontrol** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentocontrol\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentocontrol`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-highresolutionvelocityprefix** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-highresolutionvelocityprefix\n       *\n       * @type {object}\n       * @property {string} type `controlchange-highresolutionvelocityprefix`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect1depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect1depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect1depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect2depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect2depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect2depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect3depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect3depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect3depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect4depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect4depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect4depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect5depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect5depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect5depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataincrement** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataincrement\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataincrement`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-datadecrement** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-datadecrement\n       *\n       * @type {object}\n       * @property {string} type `controlchange-datadecrement`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-nonregisteredparameterfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-nonregisteredparameterfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-nonregisteredparameterfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-nonregisteredparametercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-nonregisteredparametercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-nonregisteredparametercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-registeredparameterfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-registeredparameterfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-registeredparameterfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-registeredparametercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-registeredparametercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-registeredparametercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-allsoundoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-allsoundoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-allsoundoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-resetallcontrollers** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-resetallcontrollers\n       *\n       * @type {object}\n       * @property {string} type `controlchange-resetallcontrollers`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-localcontrol** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-localcontrol\n       *\n       * @type {object}\n       * @property {string} type `controlchange-localcontrol`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-allnotesoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-allnotesoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-allnotesoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-omnimodeoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-omnimodeoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-omnimodeoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-omnimodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-omnimodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-omnimodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-monomodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-monomodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-monomodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-polymodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-polymodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-polymodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      const namedEvent = Object.assign({}, event);\n      namedEvent.type = `${event.type}-` + Enumerations.CONTROL_CHANGE_MESSAGES[data1].name;\n      delete namedEvent.subtype;\n\n      // Dispatch controlchange-\"function\" events only if the \"function\" is defined (not the generic\n      // controllerXXX nomenclature)\n      if (namedEvent.type.indexOf(\"controller\") !== 0) {\n        this.emit(namedEvent.type, namedEvent);\n      }\n\n      // Trigger channel mode message events (if appropriate)\n      if (event.message.dataBytes[0] >= 120) this._parseChannelModeMessage(event);\n\n      // Parse the inbound event to see if its part of an RPN/NRPN sequence\n      if (\n        this.parameterNumberEventsEnabled &&\n        this._isRpnOrNrpnController(event.message.dataBytes[0])\n      ) {\n        this._parseEventForParameterNumber(event);\n      }\n\n    } else if (event.type === \"programchange\") {\n\n      /**\n       * Event emitted when a **program change** MIDI message has been received.\n       *\n       * @event InputChannel#programchange\n       *\n       * @type {object}\n       * @property {string} type `programchange`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as an integer between 0 and 127.\n       * @property {number} rawValue  The raw MIDI value expressed as an integer between 0 and 127.\n       */\n      event.value = data1;\n      event.rawValue = event.value;\n\n    } else if (event.type === \"channelaftertouch\") {\n\n      /**\n       * Event emitted when a control change MIDI message has been received.\n       *\n       * @event InputChannel#channelaftertouch\n       *\n       * @type {object}\n       * @property {string} type `channelaftertouch`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The raw MIDI value expressed as an integer between 0 and 127.\n       */\n      event.value = Utilities.from7bitToFloat(data1);\n      event.rawValue = data1;\n\n    } else if (event.type === \"pitchbend\") {\n\n      /**\n       * Event emitted when a pitch bend MIDI message has been received.\n       *\n       * @event InputChannel#pitchbend\n       *\n       * @type {object}\n       * @property {string} type `pitchbend`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The raw MIDI value expressed as an integer (between 0 and\n       * 16383).\n       */\n      event.value = ((data2 << 7) + data1 - 8192) / 8192;\n      event.rawValue = (data2 << 7) + data1;\n\n    } else {\n      event.type = \"unknownmessage\";\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * @param e {Object}\n   * @private\n   */\n  _parseChannelModeMessage(e) {\n\n    // Make a shallow copy of the incoming event so we can use it as the new event.\n    const event = Object.assign({}, e);\n    event.type = event.controller.name;\n\n    /**\n     * Event emitted when an \"all sound off\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#allsoundoff\n     *\n     * @type {object}\n     * @property {string} type `allsoundoff`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when a \"reset all controllers\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#resetallcontrollers\n     *\n     * @type {object}\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when a \"local control\" channel-mode MIDI message has been received. The value\n     * property of the event is set to either `true` (local control on) of `false` (local control\n     * off).\n     *\n     * @event InputChannel#localcontrol\n     *\n     * @type {object}\n     * @property {string} type `localcontrol`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value For local control on, the value is `true`. For local control off,\n     * the value is `false`.\n     * @property {boolean} rawValue For local control on, the value is `127`. For local control off,\n     * the value is `0`.\n     */\n    if (event.type === \"localcontrol\") {\n      event.value = event.message.data[2] === 127 ? true : false;\n      event.rawValue = event.message.data[2];\n    }\n\n    /**\n     * Event emitted when an \"all notes off\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#allnotesoff\n     *\n     * @type {object}\n     * @property {string} type `allnotesoff`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when an \"omni mode\" channel-mode MIDI message has been received. The value\n     * property of the event is set to either `true` (omni mode on) of `false` (omni mode off).\n     *\n     * @event InputChannel#omnimode\n     *\n     * @type {object}\n     * @property {string} type `\"omnimode\"`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value The value is `true` for omni mode on and false for omni mode off.\n     * @property {boolean} rawValue The raw MIDI value\n     */\n    if (event.type === \"omnimodeon\") {\n      event.type = \"omnimode\";\n      event.value = true;\n      event.rawValue = event.message.data[2];\n    } else if (event.type === \"omnimodeoff\") {\n      event.type = \"omnimode\";\n      event.value = false;\n      event.rawValue = event.message.data[2];\n    }\n\n\n    /**\n     * Event emitted when a \"mono/poly mode\" MIDI message has been received. The value property of\n     * the event is set to either `true` (mono mode on / poly mode off) or `false` (mono mode off /\n     * poly mode on).\n     *\n     * @event InputChannel#monomode\n     *\n     * @type {object}\n     * @property {string} type `monomode`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value The value is `true` for omni mode on and false for omni mode off.\n     * @property {boolean} rawValue The raw MIDI value\n     */\n    if (event.type === \"monomodeon\") {\n      event.type = \"monomode\";\n      event.value = true;\n      event.rawValue = event.message.data[2];\n    } else if (event.type === \"polymodeon\") {\n      event.type = \"monomode\";\n      event.value = false;\n      event.rawValue = event.message.data[2];\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * Parses inbound events to identify RPN/NRPN sequences.\n   * @param e Event\n   * @private\n   */\n  _parseEventForParameterNumber(event) {\n\n    // To make it more legible\n    const controller = event.message.dataBytes[0];\n    const value = event.message.dataBytes[1];\n\n    // A. Check if the message is the start of an RPN (101) or NRPN (99) parameter declaration.\n    if (controller === 99 || controller === 101) {\n\n      this._nrpnBuffer = [];\n      this._rpnBuffer = [];\n\n      if (controller === 99) {                          // 99\n        this._nrpnBuffer = [event.message];\n      } else {                                          // 101\n        // 127 is a reset so we ignore it\n        if (value !== 127) this._rpnBuffer = [event.message];\n      }\n\n    // B. Check if the message is the end of an RPN (100) or NRPN (98) parameter declaration.\n    } else if (controller === 98 || controller === 100) {\n\n      if (controller === 98) {                          // 98\n\n        // Flush the other buffer (they are mutually exclusive)\n        this._rpnBuffer = [];\n\n        // Check if we are in sequence\n        if (this._nrpnBuffer.length === 1) {\n          this._nrpnBuffer.push(event.message);\n        } else {\n          this._nrpnBuffer = []; // out of sequence\n        }\n\n      } else {                                          // 100\n\n        // Flush the other buffer (they are mutually exclusive)\n        this._nrpnBuffer = [];\n\n        // 127 is a reset so we ignore it\n        if (this._rpnBuffer.length === 1 && value !== 127) {\n          this._rpnBuffer.push(event.message);\n        } else {\n          this._rpnBuffer = []; // out of sequence or reset\n        }\n\n      }\n\n    // C. Check if the message is for data entry (6, 38, 96 or 97). Those messages trigger events.\n    } else if (\n      controller === 6 ||\n      controller === 38 ||\n      controller === 96 ||\n      controller === 97\n    ) {\n\n      if (this._rpnBuffer.length === 2) {\n        this._dispatchParameterNumberEvent(\n          \"rpn\",\n          this._rpnBuffer[0].dataBytes[1],\n          this._rpnBuffer[1].dataBytes[1],\n          event\n        );\n      } else if (this._nrpnBuffer.length === 2) {\n        this._dispatchParameterNumberEvent(\n          \"nrpn\",\n          this._nrpnBuffer[0].dataBytes[1],\n          this._nrpnBuffer[1].dataBytes[1],\n          event\n        );\n      } else {\n        this._nrpnBuffer = [];\n        this._rpnBuffer = [];\n      }\n\n    }\n\n  }\n\n  /**\n   * Indicates whether the specified controller can be part of an RPN or NRPN sequence\n   * @param controller\n   * @returns {boolean}\n   * @private\n   */\n  _isRpnOrNrpnController(controller) {\n\n    return controller === 6 ||\n      controller === 38 ||\n      controller === 96 ||\n      controller === 97 ||\n      controller === 98 ||\n      controller === 99 ||\n      controller === 100 ||\n      controller === 101;\n\n  }\n\n  /**\n   * @private\n   */\n  _dispatchParameterNumberEvent(type, paramMsb, paramLsb, e) {\n\n    type = type === \"nrpn\" ? \"nrpn\" : \"rpn\";\n\n    /**\n     * Event emitted when an **RPN data entry coarse** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataentrycoarse\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataentrycoarse`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data entry fine** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`EnumerationsREGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataentryfine\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataentryfine`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data increment** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataincrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataincrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data decrement** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-datadecrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-datadecrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data entry coarse** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataentrycoarse\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataentrycoarse`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data entry fine** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataentryfine\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataentryfine`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data increment** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataincrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataincrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data decrement** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-datadecrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-datadecrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    const event = {\n      target: e.target,\n      timestamp: e.timestamp,\n      message: e.message,\n      parameterMsb: paramMsb,\n      parameterLsb: paramLsb,\n      value: Utilities.from7bitToFloat(e.message.dataBytes[1]),\n      rawValue: e.message.dataBytes[1],\n    };\n\n    // Identify the parameter (by name for RPN and by number for NRPN)\n    if (type === \"rpn\") {\n\n      event.parameter = Object.keys(Enumerations.REGISTERED_PARAMETERS).find(key => {\n        return Enumerations.REGISTERED_PARAMETERS[key][0] === paramMsb &&\n          Enumerations.REGISTERED_PARAMETERS[key][1] === paramLsb;\n      });\n\n    } else {\n      event.parameter = (paramMsb << 7) + paramLsb;\n    }\n\n    // Type and subtype\n    const subtype = Enumerations.CONTROL_CHANGE_MESSAGES[e.message.dataBytes[0]].name;\n\n    // Emit specific event\n    event.type = `${type}-${subtype}`;\n    this.emit(event.type, event);\n\n    // Begin Legacy Block (remove in v4)\n    const legacyEvent = Object.assign({}, event);\n    if (legacyEvent.type === \"nrpn-dataincrement\") {\n      legacyEvent.type = \"nrpn-databuttonincrement\";\n    } else if (legacyEvent.type === \"nrpn-datadecrement\") {\n      legacyEvent.type = \"nrpn-databuttondecrement\";\n    } else if (legacyEvent.type === \"rpn-dataincrement\") {\n      legacyEvent.type = \"rpn-databuttonincrement\";\n    } else if (legacyEvent.type === \"rpn-datadecrement\") {\n      legacyEvent.type = \"rpn-databuttondecrement\";\n    }\n    this.emit(legacyEvent.type, legacyEvent);\n    // End Legacy Block\n\n    /**\n     * Event emitted when any NRPN message is received on the input. There are four subtypes of NRPN\n     * messages:\n     *\n     *   * `nrpn-dataentrycoarse`\n     *   * `nrpn-dataentryfine`\n     *   * `nrpn-dataincrement`\n     *   * `nrpn-datadecrement`\n     *\n     * The parameter to which the message applies can be found in the event's `parameter` property.\n     *\n     * @event InputChannel#nrpn\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn`\n     * @property {string} subtype The precise type of NRPN message that was received.\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} parameter The non-registered parameter number (0-16383)\n     * @property {number} parameterMsb The MSB portion of the non-registered parameter number\n     * (0-127)\n     * @property {number} parameterLsb: The LSB portion of the non-registered parameter number\n     * (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when any RPN message is received on the input. There are four subtypes of RPN\n     * messages:\n     *\n     *   * `rpn-dataentrycoarse`\n     *   * `rpn-dataentryfine`\n     *   * `rpn-dataincrement`\n     *   * `rpn-datadecrement`\n     *\n     * The parameter to which the message applies can be found in the event's `parameter` property.\n     * It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn`\n     * @property {string} subtype The precise type of RPN message that was received.\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    // Emit general event\n    event.type = type;\n    event.subtype = subtype;\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * @deprecated since version 3.\n   * @private\n   */\n  getChannelModeByNumber(number) {\n\n    if (WebMidi.validation) {\n      console.warn(\n        \"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n      number = Math.floor(number);\n    }\n\n    return Utilities.getChannelModeByNumber(number);\n\n  }\n\n  /**\n   * @deprecated since version 3.\n   * @private\n   */\n  getCcNameByNumber(number) {\n\n    if (WebMidi.validation) {\n      console.warn(\n        \"The 'getCcNameByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n      number = parseInt(number);\n      if ( !(number >= 0 && number <= 127) ) throw new RangeError(\"Invalid control change number.\");\n    }\n\n    return Utilities.getCcNameByNumber(number);\n\n  }\n\n  /**\n   * Returns the playing status of the specified note (`true` if the note is currently playing,\n   * `false` if it is not). The `note` parameter can be an unsigned integer (0-127), a note\n   * identifier (`\"C4\"`, `\"G#5\"`, etc.) or a [`Note`]{@link Note} object.\n   *\n   * IF the note is specified using an integer (0-127), no octave offset will be applied.\n   *\n   * @param {number|string|Note} note The note to get the state for. The\n   * [`octaveOffset`](#octaveOffset) (channel, input and global) will be factored in for note\n   * identifiers and [`Note`]{@link Note} objects.\n   * @returns {boolean}\n   * @since version 3.0.0\n   */\n  getNoteState(note) {\n\n    // If it's a note object, we simply use the identifier\n    if (note instanceof Note) note = note.identifier;\n\n    const number = Utilities.guessNoteNumber(\n      note,\n      WebMidi.octaveOffset + this.input.octaveOffset + this.octaveOffset\n    );\n\n    return this.notesState[number];\n\n  }\n\n  /**\n   * An integer to offset the reported octave of incoming note-specific messages (`noteon`,\n   * `noteoff` and `keyaftertouch`). By default, middle C (MIDI note number 60) is placed on the 4th\n   * octave (C4).\n   *\n   * If, for example, `octaveOffset` is set to 2, MIDI note number 60 will be reported as C6. If\n   * `octaveOffset` is set to -1, MIDI note number 60 will be reported as C3.\n   *\n   * Note that this value is combined with the global offset value defined by\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) object and with the value defined on the parent\n   * input object with [`Input.octaveOffset`](Input#octaveOffset).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * The [`Input`](Input) this channel belongs to.\n   * @type {Input}\n   * @since 3.0\n   */\n  get input() {\n    return this._input;\n  }\n\n  /**\n   * This channel's MIDI number (1-16).\n   * @type {number}\n   * @since 3.0\n   */\n  get number() {\n    return this._number;\n  }\n\n  /**\n   * Whether RPN/NRPN events are parsed and dispatched.\n   * @type {boolean}\n   * @since 3.0\n   * @deprecated Use parameterNumberEventsEnabled instead.\n   * @private\n   */\n  get nrpnEventsEnabled() {\n    return this.parameterNumberEventsEnabled;\n  }\n  set nrpnEventsEnabled(value) {\n\n    if (this.validation) {\n      value = !!value;\n    }\n\n    this.parameterNumberEventsEnabled = value;\n\n  }\n\n}\n","import {Utilities} from \"./Utilities.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/**\n * The `Message` class represents a single MIDI message. It has several properties that make it\n * easy to make sense of the binary data it contains.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nexport class Message {\n\n  /**\n   * Creates a new `Message` object from raw MIDI data.\n   *\n   * @param {Uint8Array} data The raw data of the MIDI message as a\n   * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n   * of integers between `0` and `255`.\n   */\n  constructor(data) {\n\n    /**\n     * A\n     * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n     * containing the bytes of the MIDI message. Each byte is an integer between `0` and `255`.\n     *\n     * @type {Uint8Array}\n     * @readonly\n     */\n    this.rawData = data;\n\n    /**\n     * An array containing all the bytes of the MIDI message. Each byte is an integer between `0`\n     * and `255`.\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.data = Array.from(this.rawData);\n\n    /**\n     * The MIDI status byte of the message as an integer between `0` and `255`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.statusByte = this.rawData[0];\n\n    /**\n     * A\n     * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n     * of the data byte(s) of the MIDI message. When the message is a system exclusive message\n     * (sysex), `rawDataBytes` explicitly excludes the manufacturer ID and the sysex end byte so\n     * only the actual data is included.\n     *\n     * @type {Uint8Array}\n     * @readonly\n     */\n    this.rawDataBytes = this.rawData.slice(1);\n\n    /**\n     * An array of the the data byte(s) of the MIDI message (as opposed to the status byte). When\n     * the message is a system exclusive message (sysex), `dataBytes` explicitly excludes the\n     * manufacturer ID and the sysex end byte so only the actual data is included.\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.dataBytes = this.data.slice(1);\n\n    /**\n     * A boolean indicating whether the MIDI message is a channel-specific message.\n     *\n     * @type {boolean}\n     * @readonly\n     */\n    this.isChannelMessage = false;\n\n    /**\n     * A boolean indicating whether the MIDI message is a system message (not specific to a\n     * channel).\n     *\n     * @type {boolean}\n     * @readonly\n     */\n    this.isSystemMessage = false;\n\n    /**\n     * An integer identifying the MIDI command. For channel-specific messages, the value is 4-bit\n     * and will be between `8` and `14`. For system messages, the value will be between `240` and\n     * `255`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.command = undefined;\n\n    /**\n     * The MIDI channel number (`1` - `16`) that the message is targeting. This is only for\n     * channel-specific messages. For system messages, this will be left `undefined`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.channel = undefined;\n\n    /**\n     * When the message is a system exclusive message (sysex), this property contains an array with\n     * either 1 or 3 entries that identify the manufacturer targeted by the message.\n     *\n     * To know how to translate these entries into manufacturer names, check out the official list:\n     * https://www.midi.org/specifications-old/item/manufacturer-id-numbers\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.manufacturerId = undefined;\n\n    /**\n     * The type of message as a string (`\"noteon\"`, `\"controlchange\"`, `\"sysex\"`, etc.)\n     *\n     * @type {string}\n     * @readonly\n     */\n    this.type = undefined;\n\n    // Assign values to property that vary according to whether they are channel-specific or system\n    if (this.statusByte < 240) {\n      this.isChannelMessage = true;\n      this.command = this.statusByte >> 4;\n      this.channel = (this.statusByte & 0b00001111) + 1;\n    } else {\n      this.isSystemMessage = true;\n      this.command = this.statusByte;\n    }\n\n    // Assign type (depending on whether the message is channel-specific or system)\n    if (this.isChannelMessage) {\n      this.type = Utilities.getPropertyByValue(Enumerations.CHANNEL_MESSAGES, this.command);\n    } else if (this.isSystemMessage) {\n      this.type = Utilities.getPropertyByValue(Enumerations.SYSTEM_MESSAGES, this.command);\n    }\n\n    // When the message is a sysex message, we add a manufacturer property and strip out the id from\n    // dataBytes and rawDataBytes.\n    if (this.statusByte === Enumerations.SYSTEM_MESSAGES.sysex) {\n\n      if (this.dataBytes[0] === 0) {\n        this.manufacturerId = this.dataBytes.slice(0, 3);\n        this.dataBytes = this.dataBytes.slice(3, this.rawDataBytes.length - 1);\n        this.rawDataBytes = this.rawDataBytes.slice(3, this.rawDataBytes.length - 1);\n      } else {\n        this.manufacturerId = [this.dataBytes[0]];\n        this.dataBytes = this.dataBytes.slice(1, this.dataBytes.length - 1);\n        this.rawDataBytes = this.rawDataBytes.slice(1, this.rawDataBytes.length - 1);\n      }\n\n    }\n\n  }\n\n}\n","import {Enumerations} from \"./Enumerations.js\";\nimport {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {Forwarder} from \"./Forwarder.js\";\nimport {InputChannel} from \"./InputChannel.js\";\nimport {Message} from \"./Message.js\";\nimport {Utilities} from \"./Utilities.js\";\nimport {WebMidi} from \"./WebMidi.js\";\n\n/**\n * The `Input` class represents a single MIDI input port. This object is automatically instantiated\n * by the library according to the host's MIDI subsystem and does not need to be directly\n * instantiated. Instead, you can access all `Input` objects by referring to the\n * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as\n * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and\n * [`WebMidi.getInputById()`](WebMidi#getInputById).\n *\n * Note that a single MIDI device may expose several inputs and/or outputs.\n *\n * **Important**: the `Input` class does not directly fire channel-specific MIDI messages\n * (such as [`noteon`](InputChannel#event:noteon) or\n * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)\n * object does that. However, you can still use the\n * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple\n * [`InputChannel`](InputChannel) objects at once.\n *\n * @fires Input#opened\n * @fires Input#disconnected\n * @fires Input#closed\n * @fires Input#midimessage\n *\n * @fires Input#sysex\n * @fires Input#timecode\n * @fires Input#songposition\n * @fires Input#songselect\n * @fires Input#tunerequest\n * @fires Input#clock\n * @fires Input#start\n * @fires Input#continue\n * @fires Input#stop\n * @fires Input#activesensing\n * @fires Input#reset\n *\n * @fires Input#unknownmidimessage\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nexport class Input extends EventEmitter {\n\n  /**\n   * Creates an `Input` object.\n   *\n   * @param {MIDIInput} midiInput [`MIDIInput`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIInput)\n   * object as provided by the MIDI subsystem (Web MIDI API).\n   */\n  constructor(midiInput) {\n\n    super();\n\n    /**\n     * Reference to the actual MIDIInput object\n     * @private\n     */\n    this._midiInput = midiInput;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * Array containing the 16 [`InputChannel`](InputChannel) objects available for this `Input`. The\n     * channels are numbered 1 through 16.\n     *\n     * @type {InputChannel[]}\n     */\n    this.channels = [];\n    for (let i = 1; i <= 16; i++) this.channels[i] = new InputChannel(this, i);\n\n    /**\n     * @type {Forwarder[]}\n     * @private\n     */\n    this._forwarders = [];\n\n    // Setup listeners\n    this._midiInput.onstatechange = this._onStateChange.bind(this);\n    this._midiInput.onmidimessage = this._onMidiMessage.bind(this);\n\n  }\n\n  /**\n   * Destroys the `Input` by removing all listeners, emptying the [`channels`](#channels) array and\n   * unlinking the MIDI subsystem. This is mostly for internal use.\n   *\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    this.removeListener();\n    this.channels.forEach(ch => ch.destroy());\n    this.channels = [];\n    this._forwarders = [];\n    if (this._midiInput) {\n      this._midiInput.onstatechange = null;\n      this._midiInput.onmidimessage = null;\n    }\n    await this.close();\n    this._midiInput = null;\n  }\n\n  /**\n   * Executed when a `\"statechange\"` event occurs.\n   *\n   * @param e\n   * @private\n   */\n  _onStateChange(e) {\n\n    let event = {\n      timestamp: WebMidi.time,\n      target: this,\n      port: this // for consistency\n    };\n\n    if (e.port.connection === \"open\") {\n\n      /**\n       * Event emitted when the `Input` has been opened by calling the [`open()`]{@link #open}\n       * method.\n       *\n       * @event Input#opened\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `opened`\n       * @property {Input} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       */\n      event.type = \"opened\";\n      this.emit(\"opened\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"connected\") {\n\n      /**\n       * Event emitted when the `Input` has been closed by calling the\n       * [`close()`]{@link #close} method.\n       *\n       * @event Input#closed\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `closed`\n       * @property {Input} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       */\n      event.type = \"closed\";\n      this.emit(\"closed\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"disconnected\") {\n\n      /**\n       * Event emitted when the `Input` becomes unavailable. This event is typically fired\n       * when the MIDI device is unplugged.\n       *\n       * @event Input#disconnected\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `disconnected`\n       * @property {Input} port Object with properties describing the {@link Input} that was\n       * disconnected. This is not the actual `Input` as it is no longer available.\n       * @property {Input} target The object that dispatched the event.\n       */\n      event.type = \"disconnected\";\n      event.port = {\n        connection: e.port.connection,\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n      this.emit(\"disconnected\", event);\n\n    } else if (e.port.connection === \"pending\" && e.port.state === \"disconnected\") {\n      // I don't see the need to forward that...\n    } else {\n      console.warn(\"This statechange event was not caught: \", e.port.connection, e.port.state);\n    }\n\n  }\n\n  /**\n   * Executed when a `\"midimessage\"` event is received\n   * @param e\n   * @private\n   */\n  _onMidiMessage(e) {\n\n    // Create Message object from MIDI data\n    const message = new Message(e.data);\n\n    /**\n     * Event emitted when any MIDI message is received on an `Input`.\n     *\n     * @event Input#midimessage\n     *\n     * @type {object}\n     *\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Input} target The object that dispatched the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `midimessage`\n     *\n     * @since 2.1\n     */\n    const event = {\n      port: this,\n      target: this,\n      message: message,\n      timestamp: e.timeStamp,\n      type: \"midimessage\",\n\n      data: message.data,           // @deprecated (will be removed in v4)\n      rawData: message.data,        // @deprecated (will be removed in v4)\n      statusByte: message.data[0],  // @deprecated (will be removed in v4)\n      dataBytes: message.dataBytes  // @deprecated (will be removed in v4)\n    };\n\n    this.emit(\"midimessage\", event);\n\n    // Messages are forwarded to InputChannel if they are channel messages or parsed locally for\n    // system messages.\n    if (message.isSystemMessage) {           // system messages\n      this._parseEvent(event);\n    } else if (message.isChannelMessage) {   // channel messages\n      this.channels[message.channel]._processMidiMessageEvent(event);\n    }\n\n    // Forward message if forwarders have been defined\n    this._forwarders.forEach(forwarder => forwarder.forward(message));\n\n  }\n\n  /**\n   * @private\n   */\n  _parseEvent(e) {\n\n    // Make a shallow copy of the incoming event so we can use it as the new event.\n    const event = Object.assign({}, e);\n    event.type = event.message.type || \"unknownmidimessage\";\n\n    // Add custom property for 'songselect'\n    if (event.type === \"songselect\") {\n      event.song = e.data[1] + 1; // deprecated\n      event.value = e.data[1];\n      event.rawValue = event.value;\n    }\n\n    // Emit event\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * Opens the input for usage. This is usually unnecessary as the port is opened automatically when\n   * WebMidi is enabled.\n   *\n   * @returns {Promise<Input>} The promise is fulfilled with the `Input` object.\n   */\n  async open() {\n\n    // Explicitly opens the port for usage. This is not mandatory. When the port is not explicitly\n    // opened, it is implicitly opened (asynchronously) when assigning a listener to the\n    // `onmidimessage` property of the `MIDIInput`. We do it explicitly so that 'connected' events\n    // are dispatched immediately and that we are ready to listen.\n    try {\n      await this._midiInput.open();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * Closes the input. When an input is closed, it cannot be used to listen to MIDI messages until\n   * the input is opened again by calling [`Input.open()`](Input#open).\n   *\n   * **Note**: if what you want to do is stop events from being dispatched, you should use\n   * [`eventsSuspended`](#eventsSuspended) instead.\n   *\n   * @returns {Promise<Input>} The promise is fulfilled with the `Input` object\n   */\n  async close() {\n\n    // We close the port. This triggers a statechange event which, in turn, will emit the 'closed'\n    // event.\n    if (!this._midiInput) return Promise.resolve(this);\n\n    try {\n      await this._midiInput.close();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since v3.0.0 (moved to 'Utilities' class)\n   */\n  getChannelModeByNumber() {\n    if (WebMidi.validation) {\n      console.warn(\n        \"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n    }\n  }\n\n  /**\n   * Adds an event listener that will trigger a function callback when the specified event is\n   * dispatched. The event usually is **input-wide** but can also be **channel-specific**.\n   *\n   * Input-wide events do not target a specific MIDI channel so it makes sense to listen for them\n   * at the `Input` level and not at the [`InputChannel`](InputChannel) level. Channel-specific\n   * events target a specific channel. Usually, in this case, you would add the listener to the\n   * [`InputChannel`](InputChannel) object. However, as a convenience, you can also listen to\n   * channel-specific events directly on an `Input`. This allows you to react to a channel-specific\n   * event no matter which channel it actually came through.\n   *\n   * When listening for an event, you simply need to specify the event name and the function to\n   * execute:\n   *\n   * ```javascript\n   * const listener = WebMidi.inputs[0].addListener(\"midimessage\", e => {\n   *   console.log(e);\n   * });\n   * ```\n   *\n   * Calling the function with an input-wide event (such as\n   * [`\"midimessage\"`]{@link #event:midimessage}), will return the [`Listener`](Listener) object\n   * that was created.\n   *\n   * If you call the function with a channel-specific event (such as\n   * [`\"noteon\"`]{@link InputChannel#event:noteon}), it will return an array of all\n   * [`Listener`](Listener) objects that were created (one for each channel):\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addListener(\"noteon\", someFunction);\n   * ```\n   *\n   * You can also specify which channels you want to add the listener to:\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addListener(\"noteon\", someFunction, {channels: [1, 2, 3]});\n   * ```\n   *\n   * In this case, `listeners` is an array containing 3 [`Listener`](Listener) objects. The order of\n   * the listeners in the array follows the order the channels were specified in.\n   *\n   * Note that, when adding channel-specific listeners, it is the [`InputChannel`](InputChannel)\n   * instance that actually gets a listener added and not the `Input` instance. You can check that\n   * by calling [`InputChannel.hasListener()`](InputChannel#hasListener()).\n   *\n   * There are 8 families of events you can listen to:\n   *\n   * 1. **MIDI System Common** Events (input-wide)\n   *\n   *    * [`songposition`]{@link Input#event:songposition}\n   *    * [`songselect`]{@link Input#event:songselect}\n   *    * [`sysex`]{@link Input#event:sysex}\n   *    * [`timecode`]{@link Input#event:timecode}\n   *    * [`tunerequest`]{@link Input#event:tunerequest}\n   *\n   * 2. **MIDI System Real-Time** Events (input-wide)\n   *\n   *    * [`clock`]{@link Input#event:clock}\n   *    * [`start`]{@link Input#event:start}\n   *    * [`continue`]{@link Input#event:continue}\n   *    * [`stop`]{@link Input#event:stop}\n   *    * [`activesensing`]{@link Input#event:activesensing}\n   *    * [`reset`]{@link Input#event:reset}\n   *\n   * 3. **State Change** Events (input-wide)\n   *\n   *    * [`opened`]{@link Input#event:opened}\n   *    * [`closed`]{@link Input#event:closed}\n   *    * [`disconnected`]{@link Input#event:disconnected}\n   *\n   * 4. **Catch-All** Events (input-wide)\n   *\n   *    * [`midimessage`]{@link Input#event:midimessage}\n   *    * [`unknownmidimessage`]{@link Input#event:unknownmidimessage}\n   *\n   * 5. **Channel Voice** Events (channel-specific)\n   *\n   *    * [`channelaftertouch`]{@link InputChannel#event:channelaftertouch}\n   *    * [`controlchange`]{@link InputChannel#event:controlchange}\n   *      * [`controlchange-controller0`]{@link InputChannel#event:controlchange-controller0}\n   *      * [`controlchange-controller1`]{@link InputChannel#event:controlchange-controller1}\n   *      * [`controlchange-controller2`]{@link InputChannel#event:controlchange-controller2}\n   *      * (...)\n   *      * [`controlchange-controller127`]{@link InputChannel#event:controlchange-controller127}\n   *    * [`keyaftertouch`]{@link InputChannel#event:keyaftertouch}\n   *    * [`noteoff`]{@link InputChannel#event:noteoff}\n   *    * [`noteon`]{@link InputChannel#event:noteon}\n   *    * [`pitchbend`]{@link InputChannel#event:pitchbend}\n   *    * [`programchange`]{@link InputChannel#event:programchange}\n   *\n   *    Note: you can listen for a specific control change message by using an event name like this:\n   *    `controlchange-controller23`, `controlchange-controller99`, `controlchange-controller122`,\n   *    etc.\n   *\n   * 6. **Channel Mode** Events (channel-specific)\n   *\n   *    * [`allnotesoff`]{@link InputChannel#event:allnotesoff}\n   *    * [`allsoundoff`]{@link InputChannel#event:allsoundoff}\n   *    * [`localcontrol`]{@link InputChannel#event:localcontrol}\n   *    * [`monomode`]{@link InputChannel#event:monomode}\n   *    * [`omnimode`]{@link InputChannel#event:omnimode}\n   *    * [`resetallcontrollers`]{@link InputChannel#event:resetallcontrollers}\n   *\n   * 7. **NRPN** Events (channel-specific)\n   *\n   *    * [`nrpn`]{@link InputChannel#event:nrpn}\n   *    * [`nrpn-dataentrycoarse`]{@link InputChannel#event:nrpn-dataentrycoarse}\n   *    * [`nrpn-dataentryfine`]{@link InputChannel#event:nrpn-dataentryfine}\n   *    * [`nrpn-dataincrement`]{@link InputChannel#event:nrpn-dataincrement}\n   *    * [`nrpn-datadecrement`]{@link InputChannel#event:nrpn-datadecrement}\n   *\n   * 8. **RPN** Events (channel-specific)\n   *\n   *    * [`rpn`]{@link InputChannel#event:rpn}\n   *    * [`rpn-dataentrycoarse`]{@link InputChannel#event:rpn-dataentrycoarse}\n   *    * [`rpn-dataentryfine`]{@link InputChannel#event:rpn-dataentryfine}\n   *    * [`rpn-dataincrement`]{@link InputChannel#event:rpn-dataincrement}\n   *    * [`rpn-datadecrement`]{@link InputChannel#event:rpn-datadecrement}\n   *\n   * @param event {string | EventEmitter.ANY_EVENT} The type of the event.\n   *\n   * @param listener {function} A callback function to execute when the specified event is detected.\n   * This function will receive an event parameter object. For details on this object's properties,\n   * check out the documentation for the various events (links above).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object and can be retrieved or modified as desired.\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * An integer between 1 and 16 or an array of such integers representing the MIDI channel(s) to\n   * listen on. If no channel is specified, all channels will be used. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {object} [options.context=this] The value of `this` in the callback function.\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   *\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus be triggered before others.\n   *\n   * @param {number} [options.remaining=Infinity] The number of times after which the callback\n   * should automatically be removed.\n   *\n   * @returns {Listener|Listener[]} If the event is input-wide, a single [`Listener`](Listener)\n   * object is returned. If the event is channel-specific, an array of all the\n   * [`Listener`](Listener) objects is returned (one for each channel).\n   */\n  addListener(event, listener, options = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = (listener != undefined) ? [].concat(listener) : undefined; // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    // Check if the event is channel-specific or input-wide\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      // If no channel defined, use all.\n      if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n      let listeners = [];\n\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        listeners.push(this.channels[ch].addListener(event, listener, options));\n      });\n\n      return listeners;\n\n    } else {\n\n      return super.addListener(event, listener, options);\n\n    }\n\n  }\n\n  /**\n   * Adds a one-time event listener that will trigger a function callback when the specified event\n   * happens. The event can be **channel-bound** or **input-wide**. Channel-bound events are\n   * dispatched by [`InputChannel`]{@link InputChannel} objects and are tied to a specific MIDI\n   * channel while input-wide events are dispatched by the `Input` object itself and are not tied\n   * to a specific channel.\n   *\n   * Calling the function with an input-wide event (such as\n   * [`\"midimessage\"`]{@link #event:midimessage}), will return the [`Listener`](Listener) object\n   * that was created.\n   *\n   * If you call the function with a channel-specific event (such as\n   * [`\"noteon\"`]{@link InputChannel#event:noteon}), it will return an array of all\n   * [`Listener`](Listener) objects that were created (one for each channel):\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addOneTimeListener(\"noteon\", someFunction);\n   * ```\n   *\n   * You can also specify which channels you want to add the listener to:\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addOneTimeListener(\"noteon\", someFunction, {channels: [1, 2, 3]});\n   * ```\n   *\n   * In this case, the `listeners` variable contains an array of 3 [`Listener`](Listener) objects.\n   *\n   * The code above will add a listener for the `\"noteon\"` event and call `someFunction` when the\n   * event is triggered on MIDI channels `1`, `2` or `3`.\n   *\n   * Note that, when adding events to channels, it is the [`InputChannel`](InputChannel) instance\n   * that actually gets a listener added and not the `Input` instance.\n   *\n   * Note: if you want to add a listener to a single MIDI channel you should probably do so directly\n   * on the [`InputChannel`](InputChannel) object itself.\n   *\n   * There are 8 families of events you can listen to:\n   *\n   * 1. **MIDI System Common** Events (input-wide)\n   *\n   *    * [`songposition`]{@link Input#event:songposition}\n   *    * [`songselect`]{@link Input#event:songselect}\n   *    * [`sysex`]{@link Input#event:sysex}\n   *    * [`timecode`]{@link Input#event:timecode}\n   *    * [`tunerequest`]{@link Input#event:tunerequest}\n   *\n   * 2. **MIDI System Real-Time** Events (input-wide)\n   *\n   *    * [`clock`]{@link Input#event:clock}\n   *    * [`start`]{@link Input#event:start}\n   *    * [`continue`]{@link Input#event:continue}\n   *    * [`stop`]{@link Input#event:stop}\n   *    * [`activesensing`]{@link Input#event:activesensing}\n   *    * [`reset`]{@link Input#event:reset}\n   *\n   * 3. **State Change** Events (input-wide)\n   *\n   *    * [`opened`]{@link Input#event:opened}\n   *    * [`closed`]{@link Input#event:closed}\n   *    * [`disconnected`]{@link Input#event:disconnected}\n   *\n   * 4. **Catch-All** Events (input-wide)\n   *\n   *    * [`midimessage`]{@link Input#event:midimessage}\n   *    * [`unknownmidimessage`]{@link Input#event:unknownmidimessage}\n   *\n   * 5. **Channel Voice** Events (channel-specific)\n   *\n   *    * [`channelaftertouch`]{@link InputChannel#event:channelaftertouch}\n   *    * [`controlchange`]{@link InputChannel#event:controlchange}\n   *      * [`controlchange-controller0`]{@link InputChannel#event:controlchange-controller0}\n   *      * [`controlchange-controller1`]{@link InputChannel#event:controlchange-controller1}\n   *      * [`controlchange-controller2`]{@link InputChannel#event:controlchange-controller2}\n   *      * (...)\n   *      * [`controlchange-controller127`]{@link InputChannel#event:controlchange-controller127}\n   *    * [`keyaftertouch`]{@link InputChannel#event:keyaftertouch}\n   *    * [`noteoff`]{@link InputChannel#event:noteoff}\n   *    * [`noteon`]{@link InputChannel#event:noteon}\n   *    * [`pitchbend`]{@link InputChannel#event:pitchbend}\n   *    * [`programchange`]{@link InputChannel#event:programchange}\n   *\n   *    Note: you can listen for a specific control change message by using an event name like this:\n   *    `controlchange-controller23`, `controlchange-controller99`, `controlchange-controller122`,\n   *    etc.\n   *\n   * 6. **Channel Mode** Events (channel-specific)\n   *\n   *    * [`allnotesoff`]{@link InputChannel#event:allnotesoff}\n   *    * [`allsoundoff`]{@link InputChannel#event:allsoundoff}\n   *    * [`localcontrol`]{@link InputChannel#event:localcontrol}\n   *    * [`monomode`]{@link InputChannel#event:monomode}\n   *    * [`omnimode`]{@link InputChannel#event:omnimode}\n   *    * [`resetallcontrollers`]{@link InputChannel#event:resetallcontrollers}\n   *\n   * 7. **NRPN** Events (channel-specific)\n   *\n   *    * [`nrpn`]{@link InputChannel#event:nrpn}\n   *    * [`nrpn-dataentrycoarse`]{@link InputChannel#event:nrpn-dataentrycoarse}\n   *    * [`nrpn-dataentryfine`]{@link InputChannel#event:nrpn-dataentryfine}\n   *    * [`nrpn-dataincrement`]{@link InputChannel#event:nrpn-dataincrement}\n   *    * [`nrpn-datadecrement`]{@link InputChannel#event:nrpn-datadecrement}\n   *\n   * 8. **RPN** Events (channel-specific)\n   *\n   *    * [`rpn`]{@link InputChannel#event:rpn}\n   *    * [`rpn-dataentrycoarse`]{@link InputChannel#event:rpn-dataentrycoarse}\n   *    * [`rpn-dataentryfine`]{@link InputChannel#event:rpn-dataentryfine}\n   *    * [`rpn-dataincrement`]{@link InputChannel#event:rpn-dataincrement}\n   *    * [`rpn-datadecrement`]{@link InputChannel#event:rpn-datadecrement}\n   *\n   * @param event {string} The type of the event.\n   *\n   * @param listener {function} A callback function to execute when the specified event is detected.\n   * This function will receive an event parameter object. For details on this object's properties,\n   * check out the documentation for the various events (links above).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object and can be retrieved or modified as desired.\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to listen on. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {object} [options.context=this] The value of `this` in the callback function.\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   *\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus be triggered before others.\n   *\n   * @returns {Listener[]} An array of all [`Listener`](Listener) objects that were created.\n   */\n  addOneTimeListener(event, listener, options = {}) {\n    options.remaining = 1;\n    return this.addListener(event, listener, options);\n  }\n\n  /**\n   * This is an alias to the [Input.addListener()]{@link Input#addListener} method.\n   * @since 2.0.0\n   * @deprecated since v3.0\n   * @private\n   */\n  on(event, channel, listener, options) {\n    return this.addListener(event, channel, listener, options);\n  }\n\n  /**\n   * Checks if the specified event type is already defined to trigger the specified callback\n   * function. For channel-specific events, the function will return `true` only if all channels\n   * have the listener defined.\n   *\n   * @param event {string|Symbol} The type of the event.\n   *\n   * @param listener {function} The callback function to check for.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of such\n   * integers representing the MIDI channel(s) to check. This parameter is ignored for input-wide\n   * events.\n   *\n   * @returns {boolean} Boolean value indicating whether or not the `Input` or\n   * [`InputChannel`](InputChannel) already has this listener defined.\n   */\n  hasListener(event, listener, options = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = [].concat(listener); // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      // If no channel defined, use all.\n      if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n      return Utilities.sanitizeChannels(options.channels).every(ch => {\n        return this.channels[ch].hasListener(event, listener);\n      });\n\n    } else {\n      return super.hasListener(event, listener);\n    }\n\n  }\n\n  /**\n   * Removes the specified event listener. If no listener is specified, all listeners matching the\n   * specified event will be removed. If the event is channel-specific, the listener will be removed\n   * from all [`InputChannel`]{@link InputChannel} objects belonging to that channel. If no event is\n   * specified, all listeners for the `Input` as well as all listeners for all\n   * [`InputChannel`]{@link InputChannel} objects belonging to the `Input` will be removed.\n   *\n   * By default, channel-specific listeners will be removed from all\n   * [`InputChannel`]{@link InputChannel} objects unless the `options.channel` narrows it down.\n   *\n   * @param [type] {string} The type of the event.\n   *\n   * @param [listener] {function} The callback function to check for.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to match. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {*} [options.context] Only remove the listeners that have this exact context.\n   *\n   * @param {number} [options.remaining] Only remove the listener if it has exactly that many\n   * remaining times to be executed.\n   */\n  removeListener(event, listener, options = {}) {\n\n    if (WebMidi.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = [].concat(listener); // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    // If the event is not specified, remove everything (channel-specific and input-wide)!\n    if (event == undefined) {\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        if (this.channels[ch]) this.channels[ch].removeListener();\n      });\n      return super.removeListener();\n    }\n\n    // If the event is specified, check if it's channel-specific or input-wide.\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        this.channels[ch].removeListener(event, listener, options);\n      });\n\n    } else {\n\n      super.removeListener(event, listener, options);\n\n    }\n\n  }\n\n  /**\n   * Adds a forwarder that will forward all incoming MIDI messages matching the criteria to the\n   * specified [`Output`](Output) destination(s). This is akin to the hardware MIDI THRU port, with\n   * the added benefit of being able to filter which data is forwarded.\n   *\n   * @param {Output|Output[]} output An [`Output`](Output) object, or an array of such\n   * objects, to forward messages to.\n   * @param {object} [options={}]\n   * @param {string|string[]} [options.types=(all messages)] A message type, or an array of such\n   * types (`noteon`, `controlchange`, etc.), that the message type must match in order to be\n   * forwarded. If this option is not specified, all types of messages will be forwarded. Valid\n   * messages are the ones found in either\n   * [`SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES) or\n   * [`CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * A MIDI channel number or an array of channel numbers that the message must match in order to be\n   * forwarded. By default all MIDI channels are included (`1` to `16`).\n   *\n   * @returns {Forwarder} The [`Forwarder`](Forwarder) object created to handle the forwarding. This\n   * is useful if you wish to manipulate or remove the [`Forwarder`](Forwarder) later on.\n   */\n  addForwarder(output, options = {}) {\n\n    let forwarder;\n\n    // Unless 'output' is a forwarder, create a new forwarder\n    if (output instanceof Forwarder) {\n      forwarder = output;\n    } else {\n      forwarder = new Forwarder(output, options);\n    }\n\n    this._forwarders.push(forwarder);\n    return forwarder;\n\n  }\n\n  /**\n   * Removes the specified [`Forwarder`](Forwarder) object from the input.\n   *\n   * @param {Forwarder} forwarder The [`Forwarder`](Forwarder) to remove (the\n   * [`Forwarder`](Forwarder) object is returned when calling `addForwarder()`.\n   */\n  removeForwarder(forwarder) {\n    this._forwarders = this._forwarders.filter(item => item !== forwarder);\n  }\n\n  /**\n   * Checks whether the specified [`Forwarder`](Forwarder) object has already been attached to this\n   * input.\n   *\n   * @param {Forwarder} forwarder The [`Forwarder`](Forwarder) to check for (the\n   * [`Forwarder`](Forwarder) object is returned when calling [`addForwarder()`](#addForwarder).\n   * @returns {boolean}\n   */\n  hasForwarder(forwarder) {\n    return this._forwarders.includes(forwarder);\n  }\n\n  /**\n   * Name of the MIDI input.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get name() {\n    return this._midiInput.name;\n  }\n\n  /**\n   * ID string of the MIDI port. The ID is host-specific. Do not expect the same ID on different\n   * platforms. For example, Google Chrome and the Jazz-Plugin report completely different IDs for\n   * the same port.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._midiInput.id;\n  }\n\n  /**\n   * Input port's connection state: `pending`, `open` or `closed`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get connection() {\n    return this._midiInput.connection;\n  }\n\n  /**\n   * Name of the manufacturer of the device that makes this input port available.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get manufacturer() {\n    return this._midiInput.manufacturer;\n  }\n\n  /**\n   * An integer to offset the reported octave of incoming notes. By default, middle C (MIDI note\n   * number 60) is placed on the 4th octave (C4).\n   *\n   * If, for example, `octaveOffset` is set to 2, MIDI note number 60 will be reported as C6. If\n   * `octaveOffset` is set to -1, MIDI note number 60 will be reported as C3.\n   *\n   * Note that this value is combined with the global offset value defined in the\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) property (if any).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * State of the input port: `connected` or `disconnected`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get state() {\n    return this._midiInput.state;\n  }\n\n  /**\n   * The port type. In the case of the `Input` object, this is always: `input`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get type() {\n    return this._midiInput.type;\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   * @deprecated since v3.0.0 (moved to 'InputChannel' class)\n   */\n  get nrpnEventsEnabled() {\n    if (WebMidi.validation) {\n      console.warn(\"The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class.\");\n    }\n    return false;\n  }\n\n}\n\n// Events that do not have code below them must be placed outside the class definition (?!)\n\n/**\n * Input-wide (system) event emitted when a **system exclusive** message has been received.\n * You should note that, to receive `sysex` events, you must call the\n * [`WebMidi.enable()`](WebMidi#enable()) method with the `sysex` option set to `true`:\n *\n * ```js\n * WebMidi.enable({sysex: true})\n *  .then(() => console.log(\"WebMidi has been enabled with sysex support.\"))\n * ```\n *\n * @event Input#sysex\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `sysex`\n *\n */\n\n/**\n * Input-wide (system) event emitted when a **time code quarter frame** message has been\n * received.\n *\n * @event Input#timecode\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `timecode`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **song position** message has been received.\n *\n * @event Input#songposition\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `songposition`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **song select** message has been received.\n *\n * @event Input#songselect\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} value Song (or sequence) number to select (0-127)\n * @property {string} rawValue Song (or sequence) number to select (0-127)\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **tune request** message has been received.\n *\n * @event Input#tunerequest\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `tunerequest`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **timing clock** message has been received.\n *\n * @event Input#clock\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `clock`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **start** message has been received.\n *\n * @event Input#start\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `start`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **continue** message has been received.\n *\n * @event Input#continue\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `continue`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **stop** message has been received.\n *\n * @event Input#stop\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `stop`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when an **active sensing** message has been received.\n *\n * @event Input#activesensing\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `activesensing`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **reset** message has been received.\n *\n * @event Input#reset\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `reset`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when an unknown MIDI message has been received. It could\n * be, for example, one of the undefined/reserved messages.\n *\n * @event Input#unknownmessage\n *\n * @type {Object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `unknownmessage`\n *\n * @since 2.1\n */\n","import {EventEmitter} from \"../node_modules/djipevents/src/djipevents.js\";\nimport {Input} from \"./Input.js\";\nimport {Output} from \"./Output.js\";\nimport {Utilities} from \"./Utilities.js\";\nimport {Enumerations} from \"./Enumerations.js\";\n\n/*START-CJS*/\n\n// This code will only be included in the CJS version (CommonJS).\n\n// If this code is executed by Node.js then we must import the `jzz` module. I import it in this\n// convoluted way to prevent Webpack from automatically bundling it in browser bundles where it\n// isn't needed.\nif (Utilities.isNode) {\n\n  // Some environments may have both Node.js and browser runtimes (Electron, NW.js, React Native,\n  // etc.) so we also check for the presence of the window.navigator property.\n  try {\n    window.navigator;\n  } catch (err) {\n    let jzz;\n    eval('jzz = require(\"jzz\")');\n    global.navigator = jzz;\n  }\n\n  // The `performance` module appeared in Node.js v8.5.0 but has started to be automatically\n  // imported only in v16+.\n  try {\n    performance;\n  } catch (err) {\n    let performance;\n    eval('performance = require(\"perf_hooks\").performance');\n    global.performance = performance;\n  }\n\n}\n\n/*END-CJS*/\n/**\n * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it\n * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.\n *\n * When using the WebMidi.js library, you should know that the `WebMidi` class has already been\n * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should\n * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6\n * module) version, you get an already-instantiated object when you import the module.\n *\n * @fires WebMidi#connected\n * @fires WebMidi#disabled\n * @fires WebMidi#disconnected\n * @fires WebMidi#enabled\n * @fires WebMidi#error\n * @fires WebMidi#midiaccessgranted\n * @fires WebMidi#portschanged\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nclass WebMidi extends EventEmitter {\n\n  /**\n   * The WebMidi class is a singleton and you cannot instantiate it directly. It has already been\n   * instantiated for you.\n   */\n  constructor() {\n\n    super();\n\n    /**\n     * Object containing system-wide default values that can be changed to customize how the library\n     * works.\n     *\n     * @type {object}\n     *\n     * @property {object}  defaults.note - Default values relating to note\n     * @property {number}  defaults.note.attack - A number between 0 and 127 representing the\n     * default attack velocity of notes. Initial value is 64.\n     * @property {number}  defaults.note.release - A number between 0 and 127 representing the\n     * default release velocity of notes. Initial value is 64.\n     * @property {number}  defaults.note.duration - A number representing the default duration of\n     * notes (in seconds). Initial value is Infinity.\n     */\n    this.defaults = {\n      note: {\n        attack: Utilities.from7bitToFloat(64),\n        release: Utilities.from7bitToFloat(64),\n        duration: Infinity\n      }\n    };\n\n    /**\n     * The [`MIDIAccess`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess)\n     * instance used to talk to the lower-level Web MIDI API. This should not be used directly\n     * unless you know what you are doing.\n     *\n     * @type {MIDIAccess}\n     * @readonly\n     */\n    this.interface = null;\n\n    /**\n     * Indicates whether argument validation and backwards-compatibility checks are performed\n     * throughout the WebMidi.js library for object methods and property setters.\n     *\n     * This is an advanced setting that should be used carefully. Setting `validation` to `false`\n     * improves performance but should only be done once the project has been thoroughly tested with\n     * `validation` turned on.\n     *\n     * @type {boolean}\n     */\n    this.validation = true;\n\n    /**\n     * Array of all (Input) objects\n     * @type {Input[]}\n     * @private\n     */\n    this._inputs = [];\n\n    /**\n     * Array of disconnected [`Input`](Input) objects. This is used when inputs are plugged back in\n     * to retain their previous state.\n     * @type {Input[]}\n     * @private\n     */\n    this._disconnectedInputs = [];\n\n    /**\n     * Array of all [`Output`](Output) objects\n     * @type {Output[]}\n     * @private\n     */\n    this._outputs = [];\n\n    /**\n     * Array of disconnected [`Output`](Output) objects. This is used when outputs are plugged back\n     * in to retain their previous state.\n     * @type {Output[]}\n     * @private\n     */\n    this._disconnectedOutputs = [];\n\n    /**\n     * Array of statechange events to process. These events must be parsed synchronously so they do\n     * not override each other.\n     *\n     * @type {string[]}\n     * @private\n     */\n    this._stateChangeQueue = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n  }\n\n  /**\n   * Checks if the Web MIDI API is available in the current environment and then tries to connect to\n   * the host's MIDI subsystem. This is an asynchronous operation and it causes a security prompt to\n   * be displayed to the user.\n   *\n   * To enable the use of MIDI system exclusive messages, the `sysex` option should be set to\n   * `true`. However, under some environments (e.g. Jazz-Plugin), the `sysex` option is ignored\n   * and system exclusive messages are always enabled. You can check the\n   * [`sysexEnabled`](#sysexEnabled) property to confirm.\n   *\n   * To enable access to software synthesizers available on the host, you would set the `software`\n   * option to `true`. However, this option is only there to future-proof the library as support for\n   * software synths has not yet been implemented in any browser (as of September 2021).\n   *\n   * By the way, if you call the [`enable()`](#enable) method while WebMidi.js is already enabled,\n   * the callback function will be executed (if any), the promise will resolve but the events\n   * ([`\"midiaccessgranted\"`](#event:midiaccessgranted), [`\"connected\"`](#event:connected) and\n   * [`\"enabled\"`](#event:enabled)) will not be fired.\n   *\n   * There are 3 ways to execute code after `WebMidi` has been enabled:\n   *\n   * - Pass a callback function in the `options`\n   * - Listen to the [`\"enabled\"`](#event:enabled) event\n   * - Wait for the promise to resolve\n   *\n   * In order, this is what happens towards the end of the enabling process:\n   *\n   * 1. [`\"midiaccessgranted\"`](#event:midiaccessgranted) event is triggered once the user has\n   * granted access to use MIDI.\n   * 2. [`\"connected\"`](#event:connected) events are triggered (for each available input and output)\n   * 3. [`\"enabled\"`](#event:enabled) event is triggered when WebMidi.js is fully ready\n   * 4. specified callback (if any) is executed\n   * 5. promise is resolved and fulfilled with the `WebMidi` object.\n   *\n   * **Important note**: starting with Chrome v77, a page using Web MIDI API must be hosted on a\n   * secure origin (`https://`, `localhost` or `file:///`) and the user will always be prompted to\n   * authorize the operation (no matter if the `sysex` option is `true` or not).\n   *\n   * ##### Example\n   * ```js\n   * // Enabling WebMidi and using the promise\n   * WebMidi.enable().then(() => {\n   *   console.log(\"WebMidi.js has been enabled!\");\n   * })\n   * ```\n   *\n   * @param [options] {object}\n   *\n   * @param [options.callback] {function} A function to execute once the operation completes. This\n   * function will receive an `Error` object if enabling the Web MIDI API failed.\n   *\n   * @param [options.sysex=false] {boolean} Whether to enable MIDI system exclusive messages or not.\n   *\n   * @param [options.validation=true] {boolean} Whether to enable library-wide validation of method\n   * arguments and setter values. This is an advanced setting that should be used carefully. Setting\n   * [`validation`](#validation) to `false` improves performance but should only be done once the\n   * project has been thoroughly tested with [`validation`](#validation)  turned on.\n   *\n   * @param [options.software=false] {boolean} Whether to request access to software synthesizers on\n   * the host system. This is part of the spec but has not yet been implemented by most browsers as\n   * of April 2020.\n   *\n   * @param [options.requestMIDIAccessFunction] {function} A custom function to use to return\n   * the MIDIAccess object. This is useful if you want to use a polyfill for the Web MIDI API\n   * or if you want to use a custom implementation of the Web MIDI API - probably for testing\n   * purposes.\n   *\n   * @async\n   *\n   * @returns {Promise.<WebMidi>} The promise is fulfilled with the `WebMidi` object for\n   * chainability\n   *\n   * @throws {Error} The Web MIDI API is not supported in your environment.\n   * @throws {Error} Jazz-Plugin must be installed to use WebMIDIAPIShim.\n   */\n  async enable(options = {}, legacy = false) {\n\n    /*START-ESM*/\n\n    // This block is stripped out of the IIFE and CJS versions where it isn't needed.\n\n    // If this code is executed by Node.js in \"module\" mode (when \"type\": \"module\" is used in the\n    // package.json file), then we must import the `jzz` module. I import it in this convoluted way\n    // to prevent Webpack from automatically bundling it in browser bundles where it isn't needed.\n    if (Utilities.isNode) {\n\n      // Some environments may have both Node.js and browser runtimes (Electron, NW.js, React\n      // Native, etc.) so we also check for the presence of the window.navigator property.\n      try {\n        window.navigator;\n      } catch (err) {\n        global.navigator = await Object.getPrototypeOf(async function() {}).constructor(`\n        let jzz = await import(\"jzz\");\n        return jzz.default;\n        `)();\n      }\n\n      // The `performance` module appeared in Node.js v8.5.0 but has started to be automatically\n      // imported only in v16+.\n      try {\n        performance;\n      } catch (err) {\n        global.performance = await Object.getPrototypeOf(async function() {}).constructor(`\n        let perf_hooks = await import(\"perf_hooks\");\n        return perf_hooks.performance;\n        `)();\n      }\n\n    }\n\n    /*END-ESM*/\n\n    this.validation = (options.validation !== false);\n\n    if (this.validation) {\n      // Backwards-compatibility. Previous syntax was: enable(callback, sysex)\n      if (typeof options === \"function\") options = {callback: options, sysex: legacy};\n      if (legacy) options.sysex = true;\n    }\n\n    // If already enabled, trigger callback and resolve promise but do not dispatch events.\n    if (this.enabled) {\n      if (typeof options.callback === \"function\") options.callback();\n      return Promise.resolve();\n    }\n\n    // The Jazz-Plugin takes a while to be available (even after the Window's 'load' event has been\n    // fired). Therefore, we wait a little while to give it time to finish loading (initiqted in\n    // constructor).\n    // if (!this.supported) {\n    //\n    //   await new Promise((resolve, reject) => {\n    //\n    //     const start = this.time;\n    //\n    //     const intervalID = setInterval(() => {\n    //\n    //       if (this.supported) {\n    //         clearInterval(intervalID);\n    //         resolve();\n    //       } else {\n    //         if (this.time > start + 1500) {\n    //           clearInterval(intervalID);\n    //           let error = new Error(\"The Web MIDI API is not available in your environment.\");\n    //           if (typeof options.callback === \"function\") options.callback(error);\n    //           reject(error);\n    //         }\n    //       }\n    //\n    //     }, 25);\n    //\n    //   });\n    //\n    // }\n\n    /**\n     * Event emitted when an error occurs trying to enable `WebMidi`\n     *\n     * @event WebMidi#error\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `error`\n     * @property {*} error Actual error that occurred\n     */\n    const errorEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"error\",\n      error: undefined\n    };\n\n    /**\n     * Event emitted once the MIDI interface has been successfully created (which implies user has\n     * granted access to MIDI).\n     *\n     * @event WebMidi#midiaccessgranted\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `midiaccessgranted`\n     */\n    const midiAccessGrantedEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"midiaccessgranted\"\n    };\n\n    /**\n     * Event emitted once `WebMidi` has been fully enabled\n     *\n     * @event WebMidi#enabled\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `\"enabled\"`\n     */\n    const enabledEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"enabled\"\n    };\n\n    // Request MIDI access (this is where the prompt will appear)\n    try {\n      if (typeof options.requestMIDIAccessFunction === \"function\") {\n        this.interface = await options.requestMIDIAccessFunction(\n          {sysex: options.sysex, software: options.software}\n        );\n      } else {\n        this.interface = await navigator.requestMIDIAccess(\n          {sysex: options.sysex, software: options.software}\n        );\n      }\n    } catch(err) {\n      errorEvent.error = err;\n      this.emit(\"error\", errorEvent);\n      if (typeof options.callback === \"function\") options.callback(err);\n      return Promise.reject(err);\n    }\n\n    // Now that the Web MIDI API interface has been created, we trigger the 'midiaccessgranted'\n    // event. This allows the developer an occasion to assign listeners on 'connected' events.\n    this.emit(\"midiaccessgranted\", midiAccessGrantedEvent);\n\n    // We setup the state change listener before creating the ports so that it properly catches the\n    // the ports' `connected` events\n    this.interface.onstatechange = this._onInterfaceStateChange.bind(this);\n\n    // Update inputs and outputs (this is where `Input` and `Output` objects are created).\n    try {\n      await this._updateInputsAndOutputs();\n    } catch (err) {\n      errorEvent.error = err;\n      this.emit(\"error\", errorEvent);\n      if (typeof options.callback === \"function\") options.callback(err);\n      return Promise.reject(err);\n    }\n\n    // If we make it here, the ports have been successfully created, so we trigger the 'enabled'\n    // event.\n    this.emit(\"enabled\", enabledEvent);\n\n    // Execute the callback (if any) and resolve the promise with 'this' (for chainability)\n    if (typeof options.callback === \"function\") options.callback();\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * Completely disables **WebMidi.js** by unlinking the MIDI subsystem's interface and closing all\n   * [`Input`](Input) and [`Output`](Output) objects that may have been opened. This also means that\n   * listeners added to [`Input`](Input) objects, [`Output`](Output) objects or to `WebMidi` itself\n   * are also destroyed.\n   *\n   * @async\n   * @returns {Promise<Array>}\n   *\n   * @throws {Error} The Web MIDI API is not supported by your environment.\n   *\n   * @since 2.0.0\n   */\n  async disable() {\n\n    // This needs to be done right away to prevent racing conditions in listeners while the inputs\n    // are being destroyed.\n    if (this.interface) this.interface.onstatechange = undefined;\n\n    return this._destroyInputsAndOutputs().then(() => {\n\n      if (navigator && typeof navigator.close === \"function\") navigator.close(); // jzz\n      this.interface = null; // also resets enabled, sysexEnabled\n\n      /**\n       * Event emitted once `WebMidi` has been successfully disabled.\n       *\n       * @event WebMidi#disabled\n       * @type {object}\n       * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {WebMidi} target The object that triggered the event\n       * @property {string} type `\"disabled\"`\n       */\n      let event = {\n        timestamp: this.time,\n        target: this,\n        type: \"disabled\"\n      };\n\n      // Finally, trigger the 'disabled' event and then remove all listeners.\n      this.emit(\"disabled\", event);\n      this.removeListener();\n\n    });\n\n  };\n\n  /**\n   * Returns the [`Input`](Input) object that matches the specified ID string or `false` if no\n   * matching input is found. As per the Web MIDI API specification, IDs are strings (not integers).\n   *\n   * Please note that IDs change from one host to another. For example, Chrome does not use the same\n   * kind of IDs as Jazz-Plugin.\n   *\n   * @param id {string} The ID string of the input. IDs can be viewed by looking at the\n   * [`WebMidi.inputs`](WebMidi#inputs) array. Even though they sometimes look like integers, IDs\n   * are strings.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected input\n   *\n   * @returns {Input} An [`Input`](Input) object matching the specified ID string or `undefined`\n   * if no matching input can be found.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getInputById(id, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!id) return;\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedInputs.length; i++) {\n        if (this._disconnectedInputs[i].id === id.toString()) return this._disconnectedInputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.inputs.length; i++) {\n        if (this.inputs[i].id === id.toString()) return this.inputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the first [`Input`](Input) object whose name **contains** the specified string. Note\n   * that the port names change from one environment to another. For example, Chrome does not report\n   * input names in the same way as the Jazz-Plugin does.\n   *\n   * @param name {string} The non-empty string to look for within the name of MIDI inputs (such as\n   * those visible in the [inputs](WebMidi#inputs) array).\n   *\n   * @returns {Input} The [`Input`](Input) that was found or `undefined` if no input contained the\n   * specified name.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected input\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getInputByName(name, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!name) return;\n      name = name.toString();\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedInputs.length; i++) {\n        if (~this._disconnectedInputs[i].name.indexOf(name)) return this._disconnectedInputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.inputs.length; i++) {\n        if (~this.inputs[i].name.indexOf(name)) return this.inputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the first [`Output`](Output) object whose name **contains** the specified string. Note\n   * that the port names change from one environment to another. For example, Chrome does not report\n   * input names in the same way as the Jazz-Plugin does.\n   *\n   * @param name {string} The non-empty string to look for within the name of MIDI inputs (such as\n   * those visible in the [`outputs`](#outputs) array).\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected output\n   *\n   * @returns {Output} The [`Output`](Output) that was found or `undefined` if no output matched\n   * the specified name.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getOutputByName(name, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!name) return;\n      name = name.toString();\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedOutputs.length; i++) {\n        if (~this._disconnectedOutputs[i].name.indexOf(name)) return this._disconnectedOutputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.outputs.length; i++) {\n        if (~this.outputs[i].name.indexOf(name)) return this.outputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the [`Output`](Output) object that matches the specified ID string or `false` if no\n   * matching output is found. As per the Web MIDI API specification, IDs are strings (not\n   * integers).\n   *\n   * Please note that IDs change from one host to another. For example, Chrome does not use the same\n   * kind of IDs as Jazz-Plugin.\n   *\n   * @param id {string} The ID string of the port. IDs can be viewed by looking at the\n   * [`WebMidi.outputs`](WebMidi#outputs) array.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected output\n   *\n   * @returns {Output} An [`Output`](Output) object matching the specified ID string. If no\n   * matching output can be found, the method returns `undefined`.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getOutputById(id, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!id) return;\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedOutputs.length; i++) {\n        if (this._disconnectedOutputs[i].id === id.toString()) return this._disconnectedOutputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.outputs.length; i++) {\n        if (this.outputs[i].id === id.toString()) return this.outputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.toNoteNumber() instead.\n   */\n  noteNameToNumber(name) {\n    if (this.validation) {\n      console.warn(\n        \"The noteNameToNumber() method is deprecated. Use \" +\n        \"Utilities.toNoteNumber() instead.\"\n      );\n    }\n    return Utilities.toNoteNumber(name, this.octaveOffset);\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0, use Utilities.getNoteDetails() instead.\n   */\n  getOctave(number) {\n\n    if (this.validation) {\n      console.warn(\"The getOctave()is deprecated. Use Utilities.getNoteDetails() instead\");\n      number = parseInt(number);\n    }\n\n    if (!isNaN(number) && number >= 0 && number <= 127) {\n      return Utilities.getNoteDetails(Utilities.offsetNumber(number, this.octaveOffset)).octave;\n    } else {\n      return false;\n    }\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0, use Utilities.sanitizeChannels() instead.\n   */\n  sanitizeChannels(channel) {\n\n    if (this.validation) {\n      console.warn(\"The sanitizeChannels() method has been moved to the utilities class.\");\n    }\n\n    return Utilities.sanitizeChannels(channel);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.sanitizeChannels() instead.\n   */\n  toMIDIChannels(channel) {\n\n    if (this.validation) {\n      console.warn(\n        \"The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead.\"\n      );\n    }\n\n    return Utilities.sanitizeChannels(channel);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.guessNoteNumber() instead.\n   */\n  guessNoteNumber(input) {\n\n    if (this.validation) {\n      console.warn(\n        \"The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead.\"\n      );\n    }\n\n    return Utilities.guessNoteNumber(input, this.octaveOffset);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.buildNoteArray() instead.\n   */\n  getValidNoteArray(notes, options = {}) {\n    if (this.validation) {\n      console.warn(\n        \"The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()\"\n      );\n    }\n    return Utilities.buildNoteArray(notes, options);\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.toTimestamp() instead.\n   */\n  convertToTimestamp(time) {\n\n    if (this.validation) {\n      console.warn(\n        \"The convertToTimestamp() method has been moved to Utilities.toTimestamp().\"\n      );\n    }\n\n    return Utilities.toTimestamp(time);\n\n  }\n\n  /**\n   * @return {Promise<void>}\n   * @private\n   */\n  async _destroyInputsAndOutputs() {\n\n    let promises = [];\n\n    this.inputs.forEach(input => promises.push(input.destroy()));\n    this.outputs.forEach(output => promises.push(output.destroy()));\n\n    return Promise.all(promises).then(() => {\n      this._inputs = [];\n      this._outputs = [];\n    });\n\n  }\n\n  /**\n   * @private\n   */\n  _onInterfaceStateChange(e) {\n\n    this._updateInputsAndOutputs();\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) port is connected or\n     * disconnected. This event is typically fired whenever a MIDI device is plugged in or\n     * unplugged. Please note that it may fire several times if a device possesses multiple inputs\n     * and/or outputs (which is often the case).\n     *\n     * @event WebMidi#portschanged\n     * @type {object}\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred\n     * (in milliseconds since the navigation start of the document).\n     * @property {string} type `portschanged`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     *\n     * @since 3.0.2\n     */\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) becomes available. This event is\n     * typically fired whenever a MIDI device is plugged in. Please note that it may fire several\n     * times if a device possesses multiple inputs and/or outputs (which is often the case).\n     *\n     * @event WebMidi#connected\n     * @type {object}\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred\n     * (in milliseconds since the navigation start of the document).\n     * @property {string} type `connected`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     */\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) becomes unavailable. This event\n     * is typically fired whenever a MIDI device is unplugged. Please note that it may fire several\n     * times if a device possesses multiple inputs and/or outputs (which is often the case).\n     *\n     * @event WebMidi#disconnected\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {string} type `disconnected`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     */\n    let event = {\n      timestamp: e.timeStamp,\n      type: e.port.state,\n      target: this\n    };\n\n    // We check if \"connection\" is \"open\" because connected events are also triggered with\n    // \"connection=closed\"\n    if (e.port.state === \"connected\" && e.port.connection === \"open\") {\n\n      if (e.port.type === \"output\") {\n        event.port = this.getOutputById(e.port.id);\n      } else if (e.port.type === \"input\") {\n        event.port = this.getInputById(e.port.id);\n      }\n\n      // Emit \"connected\" event\n      this.emit(e.port.state, event);\n\n      // Make a shallow copy of the event so we can use it for the \"portschanged\" event\n      const portsChangedEvent = Object.assign({}, event);\n      portsChangedEvent.type = \"portschanged\";\n      this.emit(portsChangedEvent.type, portsChangedEvent);\n\n    // We check if \"connection\" is \"pending\" because we do not always get the \"closed\" event\n    } else if (e.port.state === \"disconnected\" && e.port.connection === \"pending\") {\n\n      if (e.port.type === \"input\") {\n        event.port = this.getInputById(e.port.id, {disconnected: true});\n      } else if (e.port.type === \"output\") {\n        event.port = this.getOutputById(e.port.id, {disconnected: true});\n      }\n\n      // Emit \"disconnected\" event\n      this.emit(e.port.state, event);\n\n      // Make a shallow copy of the event so we can use it for the \"portschanged\" event\n      const portsChangedEvent = Object.assign({}, event);\n      portsChangedEvent.type = \"portschanged\";\n      this.emit(portsChangedEvent.type, portsChangedEvent);\n\n    }\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateInputsAndOutputs() {\n\n    return Promise.all([\n      this._updateInputs(),\n      this._updateOutputs()\n    ]);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateInputs() {\n\n    // We must check for the existence of this.interface because it might have been closed via\n    // WebMidi.disable().\n    if (!this.interface) return;\n\n    // Check for items to remove from the existing array (because they are no longer being reported\n    // by the MIDI back-end).\n    for (let i = this._inputs.length - 1; i >= 0; i--) {\n      const current = this._inputs[i];\n      const inputs = Array.from(this.interface.inputs.values());\n      if (! inputs.find(input => input === current._midiInput)) {\n        // Instead of destroying removed inputs, we stash them in case they come back (which is the\n        // case when the computer goes to sleep and is later brought back online).\n        this._disconnectedInputs.push(current);\n        this._inputs.splice(i, 1);\n      }\n    }\n\n    // Array to hold pending promises from trying to open all input ports\n    let promises = [];\n\n    // Add new inputs (if not already present)\n    this.interface.inputs.forEach(nInput => {\n\n      // Check if the input is currently absent from the 'inputs' array.\n      if (! this._inputs.find(input => input._midiInput === nInput) ) {\n\n        // If the input has previously been stashed away, reuse it. If not, create a new one.\n        let input = this._disconnectedInputs.find(input => input._midiInput === nInput);\n        if (!input) input = new Input(nInput);\n        this._inputs.push(input);\n        promises.push(input.open());\n\n      }\n\n    });\n\n    // Return a promise that resolves when all promises have resolved\n    return Promise.all(promises);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateOutputs() {\n\n    // We must check for the existence of this.interface because it might have been closed via\n    // WebMidi.disable().\n    if (!this.interface) return;\n\n    // Check for items to remove from the existing array (because they are no longer being reported\n    // by the MIDI back-end).\n    for (let i = this._outputs.length - 1; i >= 0; i--) {\n      const current = this._outputs[i];\n      const outputs = Array.from(this.interface.outputs.values());\n      if (! outputs.find(output => output === current._midiOutput)) {\n        // Instead of destroying removed inputs, we stash them in case they come back (which is the\n        // case when the computer goes to sleep and is later brought back online).\n        this._disconnectedOutputs.push(current);\n        this._outputs.splice(i, 1);\n      }\n    }\n\n    // Array to hold pending promises from trying to open all output ports\n    let promises = [];\n\n    // Add new outputs (if not already present)\n    this.interface.outputs.forEach(nOutput => {\n\n      // Check if the output is currently absent from the 'outputs' array.\n      if (! this._outputs.find(output => output._midiOutput === nOutput) ) {\n\n        // If the output has previously been stashed away, reuse it. If not, create a new one.\n        let output = this._disconnectedOutputs.find(output => output._midiOutput === nOutput);\n        if (!output) output = new Output(nOutput);\n        this._outputs.push(output);\n        promises.push(output.open());\n\n      }\n\n    });\n\n    // Return a promise that resolves when all sub-promises have resolved\n    return Promise.all(promises);\n\n  };\n\n  // injectPluginMarkup(parent) {\n  //\n  //   // Silently ignore on Node.js\n  //   if (Utilities.isNode) return;\n  //\n  //   // Default to <body> if no parent is specified\n  //   if (!(parent instanceof Element) && !(parent instanceof HTMLDocument)) {\n  //     parent = document.body;\n  //   }\n  //\n  //   // IE10 needs this:\n  //   // <meta http-equiv=\"X-UA-Compatible\" content=\"requiresActiveX=true\"/>\n  //\n  //   // Create markup and add to parent\n  //   const obj = document.createElement(\"object\");\n  //   obj.classid = \"CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90\"; // IE\n  //   if (!obj.isJazz) obj.type = \"audio/x-jazz\";                 // Standards-compliant\n  //   obj.style.visibility = \"hidden\";\n  //   obj.style.width = obj.style.height = \"0px\";\n  //   parent.appendChild(obj);\n  //\n  // }\n\n  /**\n   * Indicates whether access to the host's MIDI subsystem is active or not.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  get enabled() {\n    return this.interface !== null;\n  }\n\n  /**\n   * An array of all currently available MIDI inputs.\n   *\n   * @readonly\n   * @type {Input[]}\n   */\n  get inputs() {\n    return this._inputs;\n  }\n\n  /**\n   * @private\n   * @deprecated\n   */\n  get isNode() {\n\n    if (this.validation) {\n      console.warn(\"WebMidi.isNode has been deprecated. Use Utilities.isNode instead.\");\n    }\n\n    return Utilities.isNode;\n\n  }\n\n  /**\n   * @private\n   * @deprecated\n   */\n  get isBrowser() {\n\n    if (this.validation) {\n      console.warn(\"WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead.\");\n    }\n\n    return Utilities.isBrowser;\n\n  }\n\n  /**\n   * An integer to offset the octave of notes received from external devices or sent to external\n   * devices.\n   *\n   * When a MIDI message comes in on an input channel the reported note name will be offset. For\n   * example, if the `octaveOffset` is set to `-1` and a [`\"noteon\"`](InputChannel#event:noteon)\n   * message with MIDI number 60 comes in, the note will be reported as C3 (instead of C4).\n   *\n   * By the same token, when [`OutputChannel.playNote()`](OutputChannel#playNote) is called, the\n   * MIDI note number being sent will be offset. If `octaveOffset` is set to `-1`, the MIDI note\n   * number sent will be 72 (instead of 60).\n   *\n   * @type {number}\n   *\n   * @since 2.1\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * An array of all currently available MIDI outputs as [`Output`](Output) objects.\n   *\n   * @readonly\n   * @type {Output[]}\n   */\n  get outputs() {\n    return this._outputs;\n  }\n\n  /**\n   * Indicates whether the environment provides support for the Web MIDI API or not.\n   *\n   * **Note**: in environments that do not offer built-in MIDI support, this will report `true` if\n   * the\n   * [`navigator.requestMIDIAccess`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess)\n   * function is available. For example, if you have installed WebMIDIAPIShim.js but no plugin, this\n   * property will be `true` even though actual support might not be there.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  get supported() {\n    return (typeof navigator !== \"undefined\" && navigator.requestMIDIAccess);\n  }\n\n  /**\n   * Indicates whether MIDI system exclusive messages have been activated when WebMidi.js was\n   * enabled via the [`enable()`](#enable) method.\n   *\n   * @readonly\n   * @type boolean\n   */\n  get sysexEnabled() {\n    return !!(this.interface && this.interface.sysexEnabled);\n  }\n\n  /**\n   * The elapsed time, in milliseconds, since the time\n   * [origin](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp#The_time_origin).\n   * Said simply, it is the number of milliseconds that passed since the page was loaded. Being a\n   * floating-point number, it has sub-millisecond accuracy. According to the\n   * [documentation](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp), the\n   * time should be accurate to 5 µs (microseconds). However, due to various constraints, the\n   * browser might only be accurate to one millisecond.\n   *\n   * Note: `WebMidi.time` is simply an alias to `performance.now()`.\n   *\n   * @type {DOMHighResTimeStamp}\n   * @readonly\n   */\n  get time() {\n    return performance.now();\n  }\n\n  /**\n   * The version of the library as a [semver](https://semver.org/) string.\n   *\n   * @readonly\n   * @type string\n   */\n  get version() {\n    return \"[VI]{version}[/VI]\";\n  }\n\n  /**\n   * The flavour of the library. Can be one of:\n   *\n   * * `esm`: ECMAScript Module\n   * * `cjs`: CommonJS Module\n   * * `iife`: Immediately-Invoked Function Expression\n   *\n   * @readonly\n   * @type string\n   * @since 3.0.25\n   */\n  get flavour() {\n    return \"__flavour__\"; // will be replaced during bundling by the correct identifier\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CHANNEL_EVENTS instead.\n   */\n  get CHANNEL_EVENTS() {\n    if (this.validation) {\n      console.warn(\n        \"The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS.\"\n      );\n    }\n    return Enumerations.CHANNEL_EVENTS;\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.SYSTEM_MESSAGES instead.\n   */\n  get MIDI_SYSTEM_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_SYSTEM_MESSAGES enum has been moved to \" +\n        \"Enumerations.SYSTEM_MESSAGES.\"\n      );\n    }\n\n    return Enumerations.SYSTEM_MESSAGES;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CHANNEL_MODE_MESSAGES instead\n   */\n  get MIDI_CHANNEL_MODE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to \" +\n        \"Enumerations.CHANNEL_MODE_MESSAGES.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MODE_MESSAGES;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CONTROL_CHANGE_MESSAGES instead.\n   */\n  get MIDI_CONTROL_CHANGE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CONTROL_CHANGE_MESSAGES enum has been replaced by the \" +\n        \"Enumerations.CONTROL_CHANGE_MESSAGES array.\"\n      );\n    }\n\n    return Enumerations.MIDI_CONTROL_CHANGE_MESSAGES;\n\n  }\n\n  /**\n   * @deprecated since 3.0.0. Use Enumerations.REGISTERED_PARAMETERS instead.\n   * @private\n   */\n  get MIDI_REGISTERED_PARAMETER() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_REGISTERED_PARAMETER enum has been moved to \" +\n        \"Enumerations.REGISTERED_PARAMETERS.\"\n      );\n    }\n\n    return Enumerations.REGISTERED_PARAMETERS;\n\n  }\n\n  /**\n   * @deprecated since 3.0.0.\n   * @private\n   */\n  get NOTES() {\n\n    if (this.validation) {\n      console.warn(\"The NOTES enum has been deprecated.\");\n    }\n\n    return [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n  }\n\n}\n\n// Export singleton instance of WebMidi class. The 'constructor' is nulled so that it cannot be used\n// to instantiate a new WebMidi object or extend it. However, it is not freezed so it remains\n// extensible (properties can be added at will).\nconst wm = new WebMidi();\nwm.constructor = null;\n\nexport {Enumerations} from \"./Enumerations.js\";\nexport {Forwarder} from \"./Forwarder.js\";\nexport {Input} from \"./Input.js\";\nexport {InputChannel} from \"./InputChannel.js\";\nexport {Message} from \"./Message.js\";\nexport {Note} from \"./Note.js\";\nexport {Output} from \"./Output.js\";\nexport {OutputChannel} from \"./OutputChannel.js\";\nexport {Utilities} from \"./Utilities.js\";\nexport {wm as WebMidi};\n\n","const createWavePath = (data, key=0, direction=-1, className=\"lines\") => {\r\n\treturn `<path\r\n\t\t\t\tclass=\"${className}\"\r\n\t\t\t\tkey=${key}\r\n\t\t\t\td=\"M ${key}, ${255 / 2} l 0, ${direction * data / 2}\" \r\n\t\t\t/>`\r\n}\r\n\r\nexport const createWaveform = (data, lineTo) => {\r\n\r\n\tconst pathA = data.map( (d, i) => createWavePath(d, i,-1, \"top\") )\r\n\tconst pathB = data.map( (d, i) => createWavePath(d, i, 1, \"bottom\") )\r\n\r\n\treturn `\r\n\t<svg class=\"waveform\"\r\n        viewBox=\"0 0 255 255\"\r\n        preserveAspectRatio=\"none\"\r\n    >\r\n        <path\r\n\t\t\tclass=\"waveform-start\"\r\n\t\t\td=\"M 0, ${255 / 2} l 255, 0\"\r\n        />\r\n\r\n\t\t${pathA.join(\"\")}\r\n\t\t${pathB.join(\"\")}\r\n\r\n        <path\r\n\t\t\tclass=\"waveform-end\"\r\n          \td=\"M 0, ${255 / 2} l ${lineTo}, 0\"\r\n        />\r\n\r\n    </svg>`\r\n}\r\n","/**\r\n * Single gateway to Webworker versions of the MIDI stuff\r\n */\r\nimport MidiTrack from \"./midi-track\"\r\n\r\nconst createWorker = () => new Worker(\r\n\tnew URL('./midi-file-load.worker.js', import.meta.url),\r\n\t{type: 'module'}\r\n)\r\n\r\nexport const loadMIDIFile = (url, options) => new Promise( (resolve,reject)=>{\r\n\t\r\n\ttry{\r\n\t\tconst midiWorker = createWorker()\r\n\t\tmidiWorker.onmessage = (e) => {\r\n\t\t\t// This comes through stripped of prototypes\r\n\t\t\tconst data = e.data\r\n\t\t\tconsole.error(\"MIDI:Worker loadMIDIFile\", {e, data, url, options})\r\n\t\t\tconst track = new MidiTrack(null, data.midi)\r\n\t\t\tresolve(track)\r\n\t\t}\r\n\t\tmidiWorker.postMessage({command:\"loadMIDIFile\", url, options })\r\n\t\r\n\t}catch(error){\r\n\t\treject(\"Could not access module\")\r\n\t}\r\n})\r\n\r\n// FIXME: The url can be a File\r\nexport const loadMIDIFileThroughClient =  (url, options) => new Promise( (resolve,reject) => {\r\n\r\n\tconsole.error(\"loadMIDIFileThroughClient\", url )\r\n\r\n\ttry{\r\n\t\tconst midiWorker = createWorker()\r\n\t\tmidiWorker.onmessage = (e) => {\r\n\t\t\tconst data = e.data\r\n\t\t\tconsole.error(\"MIDI:Worker loadMIDIFileThroughClient\", {e, data})\r\n\t\t\tconst track = new MidiTrack(null, data.midi)\r\n\t\t\tresolve( track )\r\n\t\t}\r\n\t\tconsole.error(\"loadMIDIFileThroughClient\", {midiWorker} )\r\n\r\n\t\tmidiWorker.postMessage({command:\"loadMIDIFileThroughClient\", url, options })\t\t\r\n\r\n\t}catch(error){\r\n\t\treject(\"Could not access module\")\r\n\t}\r\n})\r\n","import { GENERAL_MIDI_INSTRUMENTS } from './general-midi'\r\nimport MIDICommand from './midi-command'\r\nimport * as MIDICommands from './midi-commands'\r\n\r\nexport default class MidiTrack\r\n{\r\n\t// :MidiHeader\r\n\theader\r\n\r\n\t// :Array<MIDICommands>\r\n\ttracks = []\r\n\tcommands = []\r\n\tinstruments = []\r\n\tnoteOnCommands = []\r\n\r\n\ttrackName = \"\"\r\n\tmeta = \"\"\r\n\tcopyrightNotice = \"Copyright held by respective owners\"\r\n\tlyrics = \"\"\r\n\r\n\ttrackPosition = 0\r\n\tcommandPosition = 0\r\n\tduration = 0\r\n\r\n\tmimeType = \"audio/mid\"\r\n\r\n\tget ticksPerBeat(){\r\n\t\t// return \r\n\t}\r\n\r\n\tget tempo(){\r\n\t\t\r\n\t}\r\n\r\n\tget timeSignature(){\r\n\t\treturn [4,4]\r\n\t}\r\n\r\n\tgetMatchingCommands( types=[MIDICommands.COMMAND_NOTE_ON], type=\"channel\" )\r\n\t{\r\n\t\t// check if array or string and if string make array\r\n\t\tif (typeof types === String)\r\n\t\t{\r\n\t\t\ttypes = [types]\r\n\t\t}\r\n\t\treturn this.commands.filter( value => {\r\n\t\t\t//console.log(\"getMatchingCommands\",value.type === type,value)\r\n\t\t\t\r\n\t\t\tif (value.type === type)\r\n\t\t\t{\r\n\t\t\t\tconst typePosition = types.indexOf(value.subtype)\r\n\t\t\t\t//console.log(\"typePosition > -1\", typePosition > -1, types, value.subType)\r\n\t\t\t\treturn typePosition > -1\r\n\t\t\t}else{\r\n\t\t\t\t//console.log(\"getMatchingCommands\",value.type,value)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn false\r\n\t\t})\r\n\t}\r\n\r\n\tgetNextNoteCommand(){\r\n\r\n\t\tconst commands = []\r\n\t\tlet track = this.tracks[++this.trackPosition]\r\n\t\twhile ( track && track.subtype !== MIDICommands.COMMAND_NOTE_ON || track.subtype !== MIDICommands.COMMAND_NOTE_OFF  )\r\n\t\t{\r\n\t\t\ttrack = this.tracks[++this.trackPosition]\r\n\t\t}\r\n\r\n\t\twhile ( track && ( track.subtype === MIDICommands.COMMAND_NOTE_ON || track.subtype === MIDICommands.COMMAND_NOTE_OFF )  )\r\n\t\t{\r\n\t\t\tcommands.push(track)\r\n\t\t\ttrack = this.tracks[++this.trackPosition]\r\n\t\t}\r\n\t\t\r\n\t\treturn commands\r\n\t}\r\n\r\n\tgetNextNoteOnCommand(){\r\n\r\n\t\tconst commands = []\r\n\t\tlet track = this.tracks[++this.trackPosition]\r\n\t\r\n\t\twhile ( track && track.subtype === MIDICommands.COMMAND_NOTE_ON )\r\n\t\t{\r\n\t\t\tcommands.push(track)\r\n\t\t\ttrack = this.tracks[ ++this.trackPosition ]\r\n\t\t}\r\n\t\t\r\n\t\treturn commands\r\n\t}\r\n\r\n\tgetNextCommands(){\r\n\t\treturn this.tracks[ ++this.trackPosition ]\r\n\t}\r\n\r\n\tgetNextNoteOnCommand(){\r\n\t\treturn this.noteOnCommands[ ++this.commandPosition ]\r\n\t}\r\n\r\n\tgetDurationUntilNextCommand(){\r\n\t\tconst r = this.tracks[ this.trackPosition + 1 ]\r\n\t\treturn r ? r.deltaTime : -1\r\n\t}\r\n\r\n\t/**\r\n\t * If you want all of the events to also be stretchable\r\n\t * we can condense an entire track into 1 second and\r\n\t * move all of the events proportionally so that the \r\n\t * timings align with whatever you would like to fit it too\r\n\t * @param {MIDICommand} command \r\n\t */\r\n\tconvertTimeToFraction( command ){\r\n\t\treturn command.time / this.duration\r\n\t}\r\n\r\n\tcopyCommand( command ) {\r\n\t\tconst copy = new MIDICommand()\r\n\t\tfor (let i in command)\r\n\t\t{\r\n\t\t\tcopy[i] = command[i]\r\n\t\t}\r\n\t\treturn copy\r\n\t}\r\n\r\n\tconstructor( header=null, defaultOptions={} )\r\n\t{\r\n\t\tif (header) \r\n\t\t{\r\n\t\t\tthis.header = header\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in defaultOptions)\r\n\t\t{\r\n\t\t\t// check to see if they are one of our subclasses...\r\n\t\t\tswitch (i)\r\n\t\t\t{\r\n\t\t\t\t// case \"header\": \r\n\t\t\t\t// \tthis.header = defaultOptions[i]\r\n\t\t\t\t// \tbreak\r\n\r\n\t\t\t\tcase \"commands\":\r\n\t\t\t\tcase \"noteOnCommands\":\r\n\t\t\t\t\tthis[i] = defaultOptions[i].map( command => this.copyCommand(command) )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// check if is command\r\n\t\t\t\t\tthis[i] = defaultOptions[i]\r\n\t\t\t\t\tconsole.log(i, this[i] )\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t// A way of adding an event and multiple events to track\r\n\taddEvent( index, midiCommand )\r\n\t{\r\n\t\t// current previous event\r\n\t\tconst currentFinalCommand = this.commands[this.commands.length - 1]\r\n\t\t\r\n\t\t// check to see if there is an pocket already open\r\n\t\t// open a new pocket\r\n\t\tif (midiCommand.type === MIDICommands.TYPE_META)\r\n\t\t{\r\n\t\t\tswitch( midiCommand.subtype )\r\n\t\t\t{\r\n\t\t\t\tcase \"trackName\":\r\n\t\t\t\t\tif (midiCommand.text && midiCommand.text !== \"Untitled\" )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis[midiCommand.subtype] = midiCommand.text\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t\r\n\t\t\t\tcase \"text\":\r\n\t\t\t\tcase \"copyrightNotice\":\r\n\t\t\t\tcase \"lyrics\":\r\n\t\t\t\t\tif (midiCommand.text)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis[midiCommand.subtype] += midiCommand.text\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (midiCommand.text)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.meta += midiCommand.text\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}else{\r\n\r\n\t\t\t// Deal with instrument changes\r\n\t\t\tswitch( midiCommand.subtype )\r\n\t\t\t{\r\n\t\t\t\tcase MIDICommands.COMMAND_PROGRAM_CHANGE:\r\n\t\t\t\t\tconst instrumentName = GENERAL_MIDI_INSTRUMENTS[midiCommand.programNumber]\r\n\t\t\t\t\tthis.instruments.push( instrumentName )\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\r\n\t\t\tswitch( midiCommand.subtype )\r\n\t\t\t{\r\n\t\t\t\tcase MIDICommands.COMMAND_NOTE_ON:\r\n\t\t\t\tcase MIDICommands.COMMAND_NOTE_OFF:\r\n\t\t\t\tcase MIDICommands.COMMAND_CONTROLLER:\r\n\t\t\t\tcase MIDICommands.COMMAND_PITCH_BEND:\r\n\t\t\t\tcase MIDICommands.COMMAND_PROGRAM_CHANGE:\r\n\t\t\t\tcase MIDICommands.COMMAND_CHANNEL_AFTER_TOUCH:\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t// add multidimnsionally?\r\n\t\t\t\t\tif (!currentFinalCommand)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// first command!\r\n\t\t\t\t\t\t//console.log( \"Adding command\", {currentFinalCommand, midiCommand} )\r\n\t\t\t\t\t\tthis.tracks.push([midiCommand])\r\n\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\tif (midiCommand.deltaTime === 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst previousDeltaTime = currentFinalCommand.timeCode\r\n\t\t\t\t\t\t\tmidiCommand.timeCode = previousDeltaTime\r\n\t\t\t\t\t\t\tmidiCommand.time = this.duration\r\n\r\n\t\t\t\t\t\t\t// modify command to contain correct timecode\r\n\t\t\t\t\t\t\tconst commandsAtLocation = this.tracks[ this.tracks.length - 1 ]\r\n\t\t\t\t\t\t\tcommandsAtLocation.push(midiCommand)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//console.log( \"Appending deltaTime 0\", {commandsAtLocation, currentFinalCommand, midiCommand} )\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\t\t// add to duration\r\n\t\t\t\t\t\t\tthis.duration += midiCommand.deltaTime || 0 \r\n\r\n\t\t\t\t\t\t\tmidiCommand.timeCode = midiCommand.deltaTime\r\n\t\t\t\t\t\t\tmidiCommand.time = this.duration\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//console.log( \"Adding\", {currentFinalCommand, midiCommand} )\r\n\t\t\t\t\t\t\tthis.tracks.push([midiCommand])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.commands.push(midiCommand)\r\n\t\t\t}\r\n\r\n\t\t\tswitch( midiCommand.subtype )\r\n\t\t\t{\r\n\t\t\t\tcase MIDICommands.COMMAND_NOTE_ON:\r\n\t\t\t\t\tthis.noteOnCommands.push(midiCommand)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\t\r\n\ttoString()\r\n\t{\r\n\t\treturn `MIDI:Track::${this.commands.map( track => track.toString() ).join(\", \")}`\r\n\t}\r\n\r\n\r\n\tcommandToJSON( command )\r\n\t{\r\n\t\tlet output = `${command.time}. MIDI:Input::${command.subtype} Type:${command.type}`\r\n\t\tif (command.channel){ output += ` [Channel ${command.channel}] ` }\r\n\t\tif (command.noteNumber){ output += ` Note:${command.noteNumber} -> ${command.noteName}` }\r\n\t\tif (command.velocity){ output += ` Velocity:${command.velocity}` }\r\n\t\treturn output\r\n\t}\r\n\r\n\t// To load save midi tracks in a web friendlier way, we can serialise it to JSON\r\n\ttoJSON()\r\n\t{\r\n\t\tconst o = this.commands.map( command => commandToJSON(command) )\r\n\t\treturn o // `[${this.tracks.map( track => track.toString() ).join(\",\")}]`\r\n\t}\r\n}","export default class MIDICommand\r\n{\r\n\t// Uint8Array\r\n\traw\r\n\r\n\ttime = 0\r\n\ttimeCode = 0\r\n\r\n\tdeltaTime\r\n\tframeRate\r\n\tchannel\r\n\r\n\ttype\r\n\tsubtype\r\n\ttext\r\n\tdata\r\n\r\n\thour\r\n\tmin\r\n\tsec\r\n\tframe\r\n\tsubframe\r\n\tmicrosecondsPerBeat\r\n\r\n\tkey\r\n\tscale\r\n\tnumerator\r\n\tdenominator\r\n\tmetronome\r\n\tthirtyseconds\r\n\r\n\tamount\r\n\tnoteNumber\r\n\t// not an official MIDI spec but we use it in our app\r\n\tnoteName\r\n\tvelocity\r\n\r\n\t// pitch value from MIDI is 0 -> 16383\r\n\tvalue\r\n\r\n\tcontrollerType\r\n\tprogramNumber\r\n\tsequenceNumber\r\n\r\n\tconstructor(){\r\n\t}\r\n\r\n\ttoString()\r\n\t{\r\n\t\tlet output = `${this.time}. MIDI:Input::${this.subtype} Type:${this.type}`\r\n\t\tif (this.channel){ output += ` [Channel ${this.channel}] ` }\r\n\t\tif (this.noteNumber){ output += ` Note:${this.noteNumber} -> ${this.noteName}` }\r\n\t\tif (this.velocity){ output += ` Velocity:${this.velocity}` }\r\n\t\treturn output + '\\n'\r\n\t}\r\n}\r\n","// Types!\r\nexport const TYPE_CHANNEL                   = 'channel'\r\nexport const TYPE_META                      = 'meta'\r\nexport const TYPE_SYSTEM_EXCLUSIVE          = 'sysEx'\r\nexport const TYPE_DIVIDED_SYSTEM_EXCLUSIVE  = 'dividedSysEx'\r\n\r\n// Commands!\r\nexport const COMMAND_NOTE_OFF               = 'noteOff'\r\nexport const COMMAND_NOTE_ON                = 'noteOn'\r\nexport const COMMAND_NOTE_AFTER_TOUCH       = 'noteAftertouch'\r\nexport const COMMAND_CONTROLLER             = 'controller'\r\nexport const COMMAND_PROGRAM_CHANGE         = 'programChange'\r\n\r\nexport const COMMAND_CHANNEL_AFTER_TOUCH    = 'channelAftertouch'\r\nexport const COMMAND_CHANNEL_PRESSURE       = 'channelPressure'\r\n\r\nexport const COMMAND_PITCH_BEND             = 'pitchBend'\r\nexport const COMMAND_SYSTEM_MESSAGE         = 'systemMessage'\r\n\r\nexport const COMMANDS = [\r\n\tCOMMAND_NOTE_OFF,\r\n\tCOMMAND_NOTE_ON,\r\n\tCOMMAND_NOTE_AFTER_TOUCH,\r\n\tCOMMAND_CONTROLLER,\r\n\tCOMMAND_PROGRAM_CHANGE,\r\n\tCOMMAND_CHANNEL_PRESSURE,\r\n\tCOMMAND_PITCH_BEND,\r\n\tCOMMAND_SYSTEM_MESSAGE\r\n]","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('4wQTA') + \"midi-file-load.worker.7c310859.js\" + \"?\" + Date.now();module.exports = workerURL(url, bundleURL.getOrigin(url), false);","// This converts a MIDI Track -> MIDI File\r\n\r\n/**\r\n * How long the note should sound.\r\n * 1 : whole\r\n * 2 : half\r\n * d2 : dotted half\r\n * dd2 : double dotted half\r\n * 4 : quarter\r\n * 4t : quarter triplet\r\n * d4 : dotted quarter\r\n * dd4 : double dotted quarter\r\n * 8 : eighth\r\n * 8t : eighth triplet\r\n * d8 : dotted eighth\r\n * dd8 : double dotted eighth\r\n * 16 : sixteenth\r\n * 16t : sixteenth triplet\r\n * 32 : thirty-second\r\n * 64 : sixty-fourth\r\n * Tn : where n is an explicit number of ticks (T128 = 1 beat)\r\n * If an array of durations is passed then the sum of \r\n * the durations will be used.\r\n */\r\n\r\n// Thanks to \r\n// http://grimmdude.com/MidiWriterJS/\r\nimport MidiWriter from 'midi-writer-js'\r\nimport MIDITrack from './midi-track'\r\nimport { \r\n\tCOMMAND_NOTE_ON, COMMAND_NOTE_OFF, COMMAND_PROGRAM_CHANGE,\r\n\tCOMMAND_CHANNEL_AFTER_TOUCH, COMMAND_CHANNEL_PRESSURE,\t\r\n\tCOMMAND_PITCH_BEND,\tCOMMAND_SYSTEM_MESSAGE\r\n} from './midi-commands'\r\n\r\n/**\r\n * Create a MIDI File!\r\n * @param {MIDITrack} midiTrack \r\n */\r\nexport const createMIDIFileFromTrack = (midiTrack, bpm=120 ) => {\r\n\r\n\t// const convertFloatToHex = float => float.toString(16)\r\n\t// ` NoteHEX:${convertFloatToHex(noteNumber)}` \r\n\t// ` VelocityHEX:${convertFloatToHex(velocity)}` \r\n\t\t\r\n\tconst track = new MidiWriter.Track()\r\n\ttrack\r\n\t\t.addCopyright(\"interface.place\")\r\n\t\t.addTrackName(\"interFACE\")\r\n\t\t.setTempo(bpm)\r\n\t\t\r\n\tconsole.log(\"[MIDIFile] Creating MIDI File\", {midiTrack, track} )\r\n\r\n\tmidiTrack.commands.forEach( (command,index)=> {\r\n\t\t//\tconsole.log(\"[MIDIFile] Adding MIDI Command\", {command, index} )\r\n\t\tif (command.type === \"channel\")\r\n\t\t{\r\n\t\t\tswitch(command.type)\r\n\t\t\t{\r\n\t\t\t\tcase COMMAND_NOTE_ON:\r\n\t\t\t\t\ttrack.addEvent(\r\n\t\t\t\t\t\tnew MidiWriter.NoteOnEvent({\r\n\t\t\t\t\t\t\tpitch: [command.noteNumber], \r\n\t\t\t\t\t\t\tduration: '1',\r\n\t\t\t\t\t\t\tvelocity:command.velocity\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase COMMAND_NOTE_OFF:\r\n\t\t\t\t\ttrack.addEvent(\r\n\t\t\t\t\t\tnew MidiWriter.NoteOffEvent({\r\n\t\t\t\t\t\t\tpitch: [command.noteNumber], \r\n\t\t\t\t\t\t\tduration: '4',\r\n\t\t\t\t\t\t\tvelocity:command.velocity\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase COMMAND_PROGRAM_CHANGE:\r\n\t\t\t\t\t// Define an instrument\r\n\t\t\t\t\ttrack.addEvent(\r\n\t\t\t\t\t\tnew MidiWriter.ProgramChangeEvent({\r\n\t\t\t\t\t\t\tinstrument: command.programNumber \r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase COMMAND_CHANNEL_AFTER_TOUCH: \r\n\t\t\t\tcase COMMAND_CHANNEL_PRESSURE:\r\n\t\t\t\tcase COMMAND_PITCH_BEND:\r\n\t\t\t\tcase COMMAND_SYSTEM_MESSAGE:\r\n\t\t\t\t\t// TODO:\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t/*\r\n\t// add our nestup ryhtmn....\r\n\tconst midiLikeEvents = nestup.onOffEvents(ticks);\r\n\tlet lastEvent = null;\r\n\r\n\tlet tickCounter = 0\r\n\tlet noteStartTick = 0\r\n\r\n\tmidiLikeEvents.forEach((event) => {\r\n\r\n\t\tif (event.on) {\r\n\t\t\tnoteStartTick = event.time;\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tconst duration = event.time - noteStartTick;\r\n\t\t\tconst wait = noteStartTick - tickCounter;\r\n\r\n\t\t\ttrack.addEvent(new midiWriter.NoteEvent({\r\n\t\t\t\tpitch: pitch,\r\n\t\t\t\tduration: \"T\" + duration,\r\n\t\t\t\twait: \"T\" + wait\r\n\t\t\t}));\r\n\r\n\t\t\ttickCounter += (wait + duration);\r\n\t\t}\r\n\t})\r\n\t*/\r\n\treturn track\r\n}\r\n\r\n// Generate a data URI & save as blob\r\nexport const saveMIDIFile = (track, output) => {\r\n\tconst writer = new MidiWriter.Writer(track)\r\n\tconsole.log(writer.dataUri())\r\n\t//writer.saveMIDI(output)\r\n}","'use strict';\n\nvar tonalMidi = require('tonal-midi');\n\n/**\n * MIDI file format constants.\n * @return {Constants}\n */\nvar Constants = {\n  VERSION: '2.1.4',\n  HEADER_CHUNK_TYPE: [0x4d, 0x54, 0x68, 0x64],\n  // Mthd\n  HEADER_CHUNK_LENGTH: [0x00, 0x00, 0x00, 0x06],\n  // Header size for SMF\n  HEADER_CHUNK_FORMAT0: [0x00, 0x00],\n  // Midi Type 0 id\n  HEADER_CHUNK_FORMAT1: [0x00, 0x01],\n  // Midi Type 1 id\n  HEADER_CHUNK_DIVISION: [0x00, 0x80],\n  // Defaults to 128 ticks per beat\n  TRACK_CHUNK_TYPE: [0x4d, 0x54, 0x72, 0x6b],\n  // MTrk,\n  META_EVENT_ID: 0xFF,\n  META_TEXT_ID: 0x01,\n  META_COPYRIGHT_ID: 0x02,\n  META_TRACK_NAME_ID: 0x03,\n  META_INSTRUMENT_NAME_ID: 0x04,\n  META_LYRIC_ID: 0x05,\n  META_MARKER_ID: 0x06,\n  META_CUE_POINT: 0x07,\n  META_TEMPO_ID: 0x51,\n  META_SMTPE_OFFSET: 0x54,\n  META_TIME_SIGNATURE_ID: 0x58,\n  META_KEY_SIGNATURE_ID: 0x59,\n  META_END_OF_TRACK_ID: [0x2F, 0x00],\n  CONTROLLER_CHANGE_STATUS: 0xB0,\n  // includes channel number (0)\n  PITCH_BEND_STATUS: 0xE0 // includes channel number (0)\n\n};\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _wrapRegExp() {\n  _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n\n  var _super = RegExp.prototype,\n      _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      return groups[name] = result[g[name]], groups;\n    }, Object.create(null));\n  }\n\n  return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    return result && (result.groups = buildGroups(result, this)), result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    }\n\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != typeof args[args.length - 1] && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * Static utility functions used throughout the library.\n */\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"version\",\n    value:\n    /**\n     * Gets MidiWriterJS version number.\n     * @return {string}\n     */\n    function version() {\n      return Constants.VERSION;\n    }\n    /**\n     * Convert a string to an array of bytes\n     * @param {string} string\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringToBytes\",\n    value: function stringToBytes(string) {\n      return string.split('').map(function (_char) {\n        return _char.charCodeAt();\n      });\n    }\n    /**\n     * Checks if argument is a valid number.\n     * @param {*} n - Value to check\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"isNumeric\",\n    value: function isNumeric(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n    /**\n     * Returns the correct MIDI number for the specified pitch.\n     * Uses Tonal Midi - https://github.com/danigb/tonal/tree/master/packages/midi\n     * @param {(string|number)} pitch - 'C#4' or midi note code\n     * @param {string} middleC\n     * @return {number}\n     */\n\n  }, {\n    key: \"getPitch\",\n    value: function getPitch(pitch) {\n      var middleC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'C4';\n      return 60 - tonalMidi.toMidi(middleC) + tonalMidi.toMidi(pitch);\n    }\n    /**\n     * Translates number of ticks to MIDI timestamp format, returning an array of\n     * hex strings with the time values. Midi has a very particular time to express time,\n     * take a good look at the spec before ever touching this function.\n     * Thanks to https://github.com/sergi/jsmidi\n     *\n     * @param {number} ticks - Number of ticks to be translated\n     * @return {array} - Bytes that form the MIDI time value\n     */\n\n  }, {\n    key: \"numberToVariableLength\",\n    value: function numberToVariableLength(ticks) {\n      ticks = Math.round(ticks);\n      var buffer = ticks & 0x7F; // eslint-disable-next-line no-cond-assign\n\n      while (ticks = ticks >> 7) {\n        buffer <<= 8;\n        buffer |= ticks & 0x7F | 0x80;\n      }\n\n      var bList = [];\n\n      while (true) {\n        bList.push(buffer & 0xff);\n        if (buffer & 0x80) buffer >>= 8;else {\n          break;\n        }\n      }\n\n      return bList;\n    }\n    /**\n     * Counts number of bytes in string\n     * @param {string} s\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringByteCount\",\n    value: function stringByteCount(s) {\n      return encodeURI(s).split(/%..|./).length - 1;\n    }\n    /**\n     * Get an int from an array of bytes.\n     * @param {array} bytes\n     * @return {number}\n     */\n\n  }, {\n    key: \"numberFromBytes\",\n    value: function numberFromBytes(bytes) {\n      var hex = '';\n      var stringResult;\n      bytes.forEach(function (_byte) {\n        stringResult = _byte.toString(16); // ensure string is 2 chars\n\n        if (stringResult.length == 1) stringResult = \"0\" + stringResult;\n        hex += stringResult;\n      });\n      return parseInt(hex, 16);\n    }\n    /**\n     * Takes a number and splits it up into an array of bytes.  Can be padded by passing a number to bytesNeeded\n     * @param {number} number\n     * @param {number} bytesNeeded\n     * @return {array} - Array of bytes\n     */\n\n  }, {\n    key: \"numberToBytes\",\n    value: function numberToBytes(number, bytesNeeded) {\n      bytesNeeded = bytesNeeded || 1;\n      var hexString = number.toString(16);\n\n      if (hexString.length & 1) {\n        // Make sure hex string is even number of chars\n        hexString = '0' + hexString;\n      } // Split hex string into an array of two char elements\n\n\n      var hexArray = hexString.match(/.{2}/g); // Now parse them out as integers\n\n      hexArray = hexArray.map(function (item) {\n        return parseInt(item, 16);\n      }); // Prepend empty bytes if we don't have enough\n\n      if (hexArray.length < bytesNeeded) {\n        while (bytesNeeded - hexArray.length > 0) {\n          hexArray.unshift(0);\n        }\n      }\n\n      return hexArray;\n    }\n    /**\n     * Converts value to array if needed.\n     * @param {string} value\n     * @return {array}\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function toArray(value) {\n      if (Array.isArray(value)) return value;\n      return [value];\n    }\n    /**\n     * Converts velocity to value 0-127\n     * @param {number} velocity - Velocity value 1-100\n     * @return {number}\n     */\n\n  }, {\n    key: \"convertVelocity\",\n    value: function convertVelocity(velocity) {\n      // Max passed value limited to 100\n      velocity = velocity > 100 ? 100 : velocity;\n      return Math.round(velocity / 100 * 127);\n    }\n    /**\n     * Gets the total number of ticks of a specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {(string|array)} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getTickDuration\",\n    value: function getTickDuration(duration) {\n      if (Array.isArray(duration)) {\n        // Recursively execute this method for each item in the array and return the sum of tick durations.\n        return duration.map(function (value) {\n          return Utils.getTickDuration(value);\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      }\n\n      duration = duration.toString();\n\n      if (duration.toLowerCase().charAt(0) === 't') {\n        // If duration starts with 't' then the number that follows is an explicit tick count\n        var ticks = parseInt(duration.substring(1));\n\n        if (isNaN(ticks) || ticks < 0) {\n          throw new Error(duration + ' is not a valid duration.');\n        }\n\n        return ticks;\n      } // Need to apply duration here.  Quarter note == Constants.HEADER_CHUNK_DIVISION\n\n\n      var quarterTicks = Utils.numberFromBytes(Constants.HEADER_CHUNK_DIVISION);\n      var tickDuration = quarterTicks * Utils.getDurationMultiplier(duration);\n      return Utils.getRoundedIfClose(tickDuration);\n    }\n    /**\n     * Due to rounding errors in JavaScript engines,\n     * it's safe to round when we're very close to the actual tick number\n     *\n     * @static\n     * @param {number} tick\n     * @return {number}\n     */\n\n  }, {\n    key: \"getRoundedIfClose\",\n    value: function getRoundedIfClose(tick) {\n      var roundedTick = Math.round(tick);\n      return Math.abs(roundedTick - tick) < 0.000001 ? roundedTick : tick;\n    }\n    /**\n     * Due to low precision of MIDI,\n     * we need to keep track of rounding errors in deltas.\n     * This function will calculate the rounding error for a given duration.\n     *\n     * @static\n     * @param {number} tick\n     * @return {number}\n     */\n\n  }, {\n    key: \"getPrecisionLoss\",\n    value: function getPrecisionLoss(tick) {\n      var roundedTick = Math.round(tick);\n      return roundedTick - tick;\n    }\n    /**\n     * Gets what to multiple ticks/quarter note by to get the specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {string} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getDurationMultiplier\",\n    value: function getDurationMultiplier(duration) {\n      // Need to apply duration here.\n      // Quarter note == Constants.HEADER_CHUNK_DIVISION ticks.\n      if (duration === '0') return 0;\n      var match = duration.match( /*#__PURE__*/_wrapRegExp(/^(d+)?(\\d+)(?:t(\\d*))?/, {\n        dotted: 1,\n        base: 2,\n        tuplet: 3\n      }));\n\n      if (match) {\n        var base = Number(match.groups.base); // 1 or any power of two:\n\n        var isValidBase = base === 1 || (base & base - 1) === 0;\n\n        if (isValidBase) {\n          // how much faster or slower is this note compared to a quarter?\n          var ratio = base / 4;\n          var durationInQuarters = 1 / ratio;\n          var _match$groups = match.groups,\n              dotted = _match$groups.dotted,\n              tuplet = _match$groups.tuplet;\n\n          if (dotted) {\n            var thisManyDots = dotted.length;\n            var divisor = Math.pow(2, thisManyDots);\n            durationInQuarters = durationInQuarters + durationInQuarters * ((divisor - 1) / divisor);\n          }\n\n          if (typeof tuplet === 'string') {\n            var fitInto = durationInQuarters * 2; // default to triplet:\n\n            var thisManyNotes = Number(tuplet || '3');\n            durationInQuarters = fitInto / thisManyNotes;\n          }\n\n          return durationInQuarters;\n        }\n      }\n\n      throw new Error(duration + ' is not a valid duration.');\n    }\n  }]);\n\n  return Utils;\n}();\n\n/**\n * Holds all data for a \"controller change\" MIDI event\n * @param {object} fields {controllerNumber: integer, controllerValue: integer, delta: integer}\n * @return {ControllerChangeEvent}\n */\n\nvar ControllerChangeEvent = /*#__PURE__*/_createClass(function ControllerChangeEvent(fields) {\n  _classCallCheck(this, ControllerChangeEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'controller'; // delta time defaults to 0.\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.CONTROLLER_CHANGE_STATUS, fields.controllerNumber, fields.controllerValue);\n});\n\n/**\n * Object representation of a cue point meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {CuePointEvent}\n */\n\nvar CuePointEvent = /*#__PURE__*/_createClass(function CuePointEvent(fields) {\n  _classCallCheck(this, CuePointEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'cue-point';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_CUE_POINT, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a end track meta event.\n * @param {object} fields {delta: integer}\n * @return {EndTrackEvent}\n */\n\nvar EndTrackEvent = /*#__PURE__*/_createClass(function EndTrackEvent(fields) {\n  _classCallCheck(this, EndTrackEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'end-track'; // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_END_OF_TRACK_ID);\n});\n\n/**\n * Object representation of an instrument name meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {InstrumentNameEvent}\n */\n\nvar InstrumentNameEvent = /*#__PURE__*/_createClass(function InstrumentNameEvent(fields) {\n  _classCallCheck(this, InstrumentNameEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'instrument-name';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_INSTRUMENT_NAME_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Instrument name\n  );\n});\n\n/**\n * Object representation of a key signature meta event.\n * @return {KeySignatureEvent}\n */\n\nvar KeySignatureEvent = /*#__PURE__*/_createClass(function KeySignatureEvent(sf, mi) {\n  _classCallCheck(this, KeySignatureEvent);\n\n  this.type = 'key-signature';\n  var mode = mi || 0;\n  sf = sf || 0; //\tFunction called with string notation\n\n  if (typeof mi === 'undefined') {\n    var fifths = [['Cb', 'Gb', 'Db', 'Ab', 'Eb', 'Bb', 'F', 'C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#'], ['ab', 'eb', 'bb', 'f', 'c', 'g', 'd', 'a', 'e', 'b', 'f#', 'c#', 'g#', 'd#', 'a#']];\n    var _sflen = sf.length;\n    var note = sf || 'C';\n    if (sf[0] === sf[0].toLowerCase()) mode = 1;\n\n    if (_sflen > 1) {\n      switch (sf.charAt(_sflen - 1)) {\n        case 'm':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '-':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case 'M':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '+':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n      }\n    }\n\n    var fifthindex = fifths[mode].indexOf(note);\n    sf = fifthindex === -1 ? 0 : fifthindex - 7;\n  } // Start with zero time delta\n\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_KEY_SIGNATURE_ID, [0x02], // Size\n  Utils.numberToBytes(sf, 1), // Number of sharp or flats ( < 0 flat; > 0 sharp)\n  Utils.numberToBytes(mode, 1) // Mode: 0 major, 1 minor\n  );\n});\n\n/**\n * Object representation of a lyric meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {LyricEvent}\n */\n\nvar LyricEvent = /*#__PURE__*/_createClass(function LyricEvent(fields) {\n  _classCallCheck(this, LyricEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'lyric';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_LYRIC_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a marker meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {MarkerEvent}\n */\n\nvar MarkerEvent = /*#__PURE__*/_createClass(function MarkerEvent(fields) {\n  _classCallCheck(this, MarkerEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'marker';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_MARKER_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Holds all data for a \"note on\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOnEvent}\n */\n\nvar NoteOnEvent = /*#__PURE__*/function () {\n  function NoteOnEvent(fields) {\n    _classCallCheck(this, NoteOnEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.type = 'note-on';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.wait = fields.wait;\n    this.velocity = fields.velocity;\n    this.startTick = fields.startTick;\n    this.tick = null;\n    this.delta = null;\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOnEvent}\n   */\n\n\n  _createClass(NoteOnEvent, [{\n    key: \"buildData\",\n    value: function buildData(track, precisionDelta) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.data = []; // Explicitly defined startTick event\n\n      if (this.startTick) {\n        this.tick = Utils.getRoundedIfClose(this.startTick); // If this is the first event in the track then use event's starting tick as delta.\n\n        if (track.tickPointer == 0) {\n          this.delta = this.tick;\n        }\n      } else {\n        this.delta = Utils.getTickDuration(this.wait);\n        this.tick = Utils.getRoundedIfClose(track.tickPointer + this.delta);\n      }\n\n      this.deltaWithPrecisionCorrection = Utils.getRoundedIfClose(this.delta - precisionDelta);\n      this.data = Utils.numberToVariableLength(this.deltaWithPrecisionCorrection).concat(this.getStatusByte(), Utils.getPitch(this.pitch, options.middleC), Utils.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note on status code based on the selected channel. 0x9{0-F}\n     * Note on at channel 0 is 0x90 (144)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 144 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOnEvent;\n}();\n\n/**\n * Holds all data for a \"note off\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOffEvent}\n */\n\nvar NoteOffEvent = /*#__PURE__*/function () {\n  function NoteOffEvent(fields) {\n    _classCallCheck(this, NoteOffEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      velocity: 50,\n      tick: null\n    }, fields);\n    this.type = 'note-off';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.duration = fields.duration;\n    this.velocity = fields.velocity;\n    this.tick = fields.tick;\n    this.delta = Utils.getTickDuration(this.duration);\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOffEvent}\n   */\n\n\n  _createClass(NoteOffEvent, [{\n    key: \"buildData\",\n    value: function buildData(track, precisionDelta) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (this.tick === null) {\n        this.tick = Utils.getRoundedIfClose(this.delta + track.tickPointer);\n      }\n\n      this.deltaWithPrecisionCorrection = Utils.getRoundedIfClose(this.delta - precisionDelta);\n      this.data = Utils.numberToVariableLength(this.deltaWithPrecisionCorrection).concat(this.getStatusByte(), Utils.getPitch(this.pitch, options.middleC), Utils.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note off status code based on the selected channel. 0x8{0-F}\n     * Note off at channel 0 is 0x80 (128)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 128 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOffEvent;\n}();\n\n/**\n * Wrapper for noteOnEvent/noteOffEvent objects that builds both events.\n * @param {object} fields - {pitch: '[C4]', duration: '4', wait: '4', velocity: 1-100}\n * @return {NoteEvent}\n */\n\nvar NoteEvent = /*#__PURE__*/function () {\n  function NoteEvent(fields) {\n    _classCallCheck(this, NoteEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      repeat: 1,\n      sequential: false,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.data = [];\n    this.type = 'note';\n    this.pitch = Utils.toArray(fields.pitch);\n    this.channel = fields.channel;\n    this.duration = fields.duration;\n    this.grace = fields.grace;\n    this.repeat = fields.repeat;\n    this.sequential = fields.sequential;\n    this.startTick = fields.startTick;\n    this.velocity = fields.velocity;\n    this.wait = fields.wait;\n    this.tickDuration = Utils.getTickDuration(this.duration);\n    this.restDuration = Utils.getTickDuration(this.wait);\n    this.events = []; // Hold actual NoteOn/NoteOff events\n  }\n  /**\n   * Builds int array for this event.\n   * @return {NoteEvent}\n   */\n\n\n  _createClass(NoteEvent, [{\n    key: \"buildData\",\n    value: function buildData() {\n      var _this = this;\n\n      // Reset data array\n      this.data = []; // Apply grace note(s) and subtract ticks (currently 1 tick per grace note) from tickDuration so net value is the same\n\n      if (this.grace) {\n        var graceDuration = 1;\n        this.grace = Utils.toArray(this.grace);\n        this.grace.forEach(function () {\n          var noteEvent = new NoteEvent({\n            pitch: _this.grace,\n            duration: 'T' + graceDuration\n          });\n          _this.data = _this.data.concat(noteEvent.data);\n        });\n      } // fields.pitch could be an array of pitches.\n      // If so create note events for each and apply the same duration.\n      // By default this is a chord if it's an array of notes that requires one NoteOnEvent.\n      // If this.sequential === true then it's a sequential string of notes that requires separate NoteOnEvents.\n\n\n      if (!this.sequential) {\n        // Handle repeat\n        for (var j = 0; j < this.repeat; j++) {\n          // Note on\n          this.pitch.forEach(function (p, i) {\n            var noteOnNew;\n\n            if (i == 0) {\n              noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: _this.wait,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            } else {\n              // Running status (can ommit the note on status)\n              //noteOn = new NoteOnEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            }\n\n            _this.events.push(noteOnNew);\n          }); // Note off\n\n          this.pitch.forEach(function (p, i) {\n            var noteOffNew;\n\n            if (i == 0) {\n              //noteOff = new NoteOffEvent({data: Utils.numberToVariableLength(tickDuration).concat(this.getNoteOffStatus(), Utils.getPitch(p), Utils.convertVelocity(this.velocity))});\n              noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: _this.duration,\n                velocity: _this.velocity,\n                pitch: p,\n                tick: _this.startTick !== null ? Utils.getTickDuration(_this.duration) + _this.startTick : null\n              });\n            } else {\n              // Running status (can ommit the note off status)\n              //noteOff = new NoteOffEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                tick: _this.startTick !== null ? Utils.getTickDuration(_this.duration) + _this.startTick : null\n              });\n            }\n\n            _this.events.push(noteOffNew);\n          });\n        }\n      } else {\n        // Handle repeat\n        for (var _j = 0; _j < this.repeat; _j++) {\n          this.pitch.forEach(function (p, i) {\n            var noteOnNew = new NoteOnEvent({\n              channel: _this.channel,\n              wait: i > 0 ? 0 : _this.wait,\n              // wait only applies to first note in repetition\n              velocity: _this.velocity,\n              pitch: p,\n              startTick: _this.startTick\n            });\n            var noteOffNew = new NoteOffEvent({\n              channel: _this.channel,\n              duration: _this.duration,\n              velocity: _this.velocity,\n              pitch: p\n            });\n\n            _this.events.push(noteOnNew, noteOffNew);\n          });\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return NoteEvent;\n}();\n\n/**\n * Holds all data for a \"Pitch Bend\" MIDI event\n * [ -1.0, 0, 1.0 ] ->  [ 0, 8192, 16383]\n * @param {object} fields { bend : float, channel : int, delta: int }\n * @return {PitchBendEvent}\n */\n\nvar scale14bits = function scale14bits(zeroOne) {\n  if (zeroOne <= 0) {\n    return Math.floor(16384 * (zeroOne + 1) / 2);\n  }\n\n  return Math.floor(16383 * (zeroOne + 1) / 2);\n};\n\nvar PitchBendEvent = /*#__PURE__*/_createClass(function PitchBendEvent(fields) {\n  _classCallCheck(this, PitchBendEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'pitch-bend';\n  var bend14 = scale14bits(fields.bend);\n  var channel = fields.channel || 0;\n  var lsbValue = bend14 & 0x7f;\n  var msbValue = bend14 >> 7 & 0x7f;\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.PITCH_BEND_STATUS | channel, lsbValue, msbValue);\n});\n\n/**\n * Holds all data for a \"program change\" MIDI event\n * @param {object} fields {instrument: integer, delta: integer}\n * @return {ProgramChangeEvent}\n */\n\nvar ProgramChangeEvent = /*#__PURE__*/function () {\n  function ProgramChangeEvent(fields) {\n    _classCallCheck(this, ProgramChangeEvent);\n\n    // Set default fields\n    this.fields = Object.assign({\n      channel: 1,\n      delta: 0x00\n    }, fields);\n    this.type = 'program'; // delta time defaults to 0.\n\n    this.data = Utils.numberToVariableLength(this.fields.delta).concat(this.getStatusByte(), this.fields.instrument);\n  }\n  /**\n   * Gets the status code based on the selected channel. 0xC{0-F}\n   * Program change status byte for channel 0 is 0xC0 (192)\n   * 0 = Ch 1\n   * @return {number}\n   */\n\n\n  _createClass(ProgramChangeEvent, [{\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 192 + this.fields.channel - 1;\n    }\n  }]);\n\n  return ProgramChangeEvent;\n}();\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {bpm: integer, delta: integer}\n * @return {TempoEvent}\n */\n\nvar TempoEvent = /*#__PURE__*/_createClass(function TempoEvent(fields) {\n  _classCallCheck(this, TempoEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'tempo';\n  this.tick = fields.tick;\n  var tempo = Math.round(60000000 / fields.bpm); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TEMPO_ID, [0x03], // Size\n  Utils.numberToBytes(tempo, 3) // Tempo, 3 bytes\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {TextEvent}\n */\n\nvar TextEvent = /*#__PURE__*/_createClass(function TextEvent(fields) {\n  _classCallCheck(this, TextEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'text';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TEXT_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a time signature meta event.\n * @return {TimeSignatureEvent}\n */\n\nvar TimeSignatureEvent = /*#__PURE__*/_createClass(function TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock) {\n  _classCallCheck(this, TimeSignatureEvent);\n\n  this.type = 'time-signature'; // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TIME_SIGNATURE_ID, [0x04], // Size\n  Utils.numberToBytes(numerator, 1), // Numerator, 1 bytes\n  Utils.numberToBytes(Math.log2(denominator), 1), // Denominator is expressed as pow of 2, 1 bytes\n  Utils.numberToBytes(midiclockspertick || 24, 1), // MIDI Clocks per tick, 1 bytes\n  Utils.numberToBytes(notespermidiclock || 8, 1) // Number of 1/32 notes per MIDI clocks, 1 bytes\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {CopyrightEvent}\n */\n\nvar CopyrightEvent = /*#__PURE__*/_createClass(function CopyrightEvent(fields) {\n  _classCallCheck(this, CopyrightEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'copyright';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_COPYRIGHT_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {TrackNameEvent}\n */\n\nvar TrackNameEvent = /*#__PURE__*/_createClass(function TrackNameEvent(fields) {\n  _classCallCheck(this, TrackNameEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'track-name';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TRACK_NAME_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Holds all data for a track.\n * @param {object} fields {type: number, data: array, size: array, events: array}\n * @return {Track}\n */\n\nvar Track = /*#__PURE__*/function () {\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.type = Constants.TRACK_CHUNK_TYPE;\n    this.data = [];\n    this.size = [];\n    this.events = [];\n    this.explicitTickEvents = []; // If there are any events with an explicit tick defined then we will create a \"sub\" track for those\n    // and merge them in and the end.\n\n    this.tickPointer = 0; // Each time an event is added this will increase\n  }\n  /**\n   * Adds any event type to the track.\n   * Events without a specific startTick property are assumed to be added in order of how they should output.\n   * Events with a specific startTick property are set aside for now will be merged in during build process.\n   * @param {(NoteEvent|ProgramChangeEvent)} events - Event object or array of Event objects.\n   * @param {function} mapFunction - Callback which can be used to apply specific properties to all events.\n   * @return {Track}\n   */\n\n\n  _createClass(Track, [{\n    key: \"addEvent\",\n    value: function addEvent(events, mapFunction) {\n      var _this = this;\n\n      Utils.toArray(events).forEach(function (event, i) {\n        if (event instanceof NoteEvent) {\n          // Handle map function if provided\n          if (typeof mapFunction === 'function') {\n            var properties = mapFunction(i, event);\n\n            if (_typeof(properties) === 'object') {\n              for (var j in properties) {\n                switch (j) {\n                  case 'channel':\n                    event.channel = properties[j];\n                    break;\n\n                  case 'duration':\n                    event.duration = properties[j];\n                    break;\n\n                  case 'sequential':\n                    event.sequential = properties[j];\n                    break;\n\n                  case 'velocity':\n                    event.velocity = Utils.convertVelocity(properties[j]);\n                    break;\n                }\n              }\n            }\n          } // If this note event has an explicit startTick then we need to set aside for now\n\n\n          if (event.startTick !== null) {\n            _this.explicitTickEvents.push(event);\n          } else {\n            // Push each on/off event to track's event stack\n            event.buildData().events.forEach(function (e) {\n              return _this.events.push(e);\n            });\n          }\n        } else if (event instanceof EndTrackEvent) {\n          // Only one EndTrackEvent is allowed, so remove\n          // any existing ones before adding.\n          _this.removeEventsByType('end-track');\n\n          _this.events.push(event);\n        } else {\n          _this.events.push(event);\n        }\n      });\n      return this;\n    }\n    /**\n     * Builds int array of all events.\n     * @param {object} options\n     * @return {Track}\n     */\n\n  }, {\n    key: \"buildData\",\n    value: function buildData() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      // If the last event isn't EndTrackEvent, then tack it onto the data.\n      if (!this.events.length || !(this.events[this.events.length - 1] instanceof EndTrackEvent)) {\n        this.addEvent(new EndTrackEvent());\n      } // Reset\n\n\n      this.data = [];\n      this.size = [];\n      this.tickPointer = 0;\n      var precisionLoss = 0;\n      this.events.forEach(function (event) {\n        // Build event & add to total tick duration\n        if (event instanceof NoteOnEvent || event instanceof NoteOffEvent) {\n          var built = event.buildData(_this2, precisionLoss, options);\n          precisionLoss = Utils.getPrecisionLoss(event.deltaWithPrecisionCorrection || 0);\n          _this2.data = _this2.data.concat(built.data);\n          _this2.tickPointer = Utils.getRoundedIfClose(event.tick);\n        } else if (event instanceof TempoEvent) {\n          _this2.tickPointer = Utils.getRoundedIfClose(event.tick);\n          _this2.data = _this2.data.concat(event.data);\n        } else {\n          _this2.data = _this2.data.concat(event.data);\n        }\n      });\n      this.mergeExplicitTickEvents();\n      this.size = Utils.numberToBytes(this.data.length, 4); // 4 bytes long\n\n      return this;\n    }\n  }, {\n    key: \"mergeExplicitTickEvents\",\n    value: function mergeExplicitTickEvents() {\n      var _this3 = this;\n\n      if (!this.explicitTickEvents.length) return; // First sort asc list of events by startTick\n\n      this.explicitTickEvents.sort(function (a, b) {\n        return a.startTick - b.startTick;\n      }); // Now this.explicitTickEvents is in correct order, and so is this.events naturally.\n      // For each explicit tick event, splice it into the main list of events and\n      // adjust the delta on the following events so they still play normally.\n\n      this.explicitTickEvents.forEach(function (noteEvent) {\n        // Convert NoteEvent to it's respective NoteOn/NoteOff events\n        // Note that as we splice in events the delta for the NoteOff ones will\n        // Need to change based on what comes before them after the splice.\n        noteEvent.buildData().events.forEach(function (e) {\n          return e.buildData(_this3);\n        }); // Merge each event indivually into this track's event list.\n\n        noteEvent.events.forEach(function (event) {\n          return _this3.mergeSingleEvent(event);\n        });\n      }); // Hacky way to rebuild track with newly spliced events.  Need better solution.\n\n      this.explicitTickEvents = [];\n      this.buildData();\n    }\n    /**\n     * Merges another track's events with this track.\n     * @param {Track} track\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeTrack\",\n    value: function mergeTrack(track) {\n      var _this4 = this;\n\n      // First build this track to populate each event's tick property\n      this.buildData(); // Then build track to be merged so that tick property is populated on all events & merge each event.\n\n      track.buildData().events.forEach(function (event) {\n        return _this4.mergeSingleEvent(event);\n      });\n    }\n    /**\n     * Merges a single event into this track's list of events based on event.tick property.\n     * @param {NoteOnEvent|NoteOffEvent} - event\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeSingleEvent\",\n    value: function mergeSingleEvent(event) {\n      // There are no events yet, so just add it in.\n      if (!this.events.length) {\n        this.addEvent(event);\n        return;\n      } // Find index of existing event we need to follow with\n\n\n      var lastEventIndex;\n\n      for (var i = 0; i < this.events.length; i++) {\n        if (this.events[i].tick > event.tick) break;\n        lastEventIndex = i;\n      }\n\n      var splicedEventIndex = lastEventIndex + 1; // Need to adjust the delta of this event to ensure it falls on the correct tick.\n\n      event.delta = event.tick - this.events[lastEventIndex].tick; // Splice this event at lastEventIndex + 1\n\n      this.events.splice(splicedEventIndex, 0, event); // Now adjust delta of all following events\n\n      for (var _i = splicedEventIndex + 1; _i < this.events.length; _i++) {\n        // Since each existing event should have a tick value at this point we just need to\n        // adjust delta to that the event still falls on the correct tick.\n        this.events[_i].delta = this.events[_i].tick - this.events[_i - 1].tick;\n      }\n    }\n    /**\n     * Removes all events matching specified type.\n     * @param {string} eventType - Event type\n     * @return {Track}\n     */\n\n  }, {\n    key: \"removeEventsByType\",\n    value: function removeEventsByType(eventType) {\n      var _this5 = this;\n\n      this.events.forEach(function (event, index) {\n        if (event.type === eventType) {\n          _this5.events.splice(index, 1);\n        }\n      });\n      return this;\n    }\n    /**\n     * Sets tempo of the MIDI file.\n     * @param {number} bpm - Tempo in beats per minute.\n     * @param {number} tick - Start tick.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTempo\",\n    value: function setTempo(bpm) {\n      var tick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this.addEvent(new TempoEvent({\n        bpm: bpm,\n        tick: tick\n      }));\n    }\n    /**\n     * Sets time signature.\n     * @param {number} numerator - Top number of the time signature.\n     * @param {number} denominator - Bottom number of the time signature.\n     * @param {number} midiclockspertick - Defaults to 24.\n     * @param {number} notespermidiclock - Defaults to 8.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTimeSignature\",\n    value: function setTimeSignature(numerator, denominator, midiclockspertick, notespermidiclock) {\n      return this.addEvent(new TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock));\n    }\n    /**\n     * Sets key signature.\n     * @param {*} sf -\n     * @param {*} mi -\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setKeySignature\",\n    value: function setKeySignature(sf, mi) {\n      return this.addEvent(new KeySignatureEvent(sf, mi));\n    }\n    /**\n     * Adds text to MIDI file.\n     * @param {string} text - Text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addText\",\n    value: function addText(text) {\n      return this.addEvent(new TextEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds copyright to MIDI file.\n     * @param {string} text - Text of copyright line.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCopyright\",\n    value: function addCopyright(text) {\n      return this.addEvent(new CopyrightEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds Sequence/Track Name.\n     * @param {string} text - Text of track name.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addTrackName\",\n    value: function addTrackName(text) {\n      return this.addEvent(new TrackNameEvent({\n        text: text\n      }));\n    }\n    /**\n     * Sets instrument name of track.\n     * @param {string} text - Name of instrument.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addInstrumentName\",\n    value: function addInstrumentName(text) {\n      return this.addEvent(new InstrumentNameEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds marker to MIDI file.\n     * @param {string} text - Marker text.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(text) {\n      return this.addEvent(new MarkerEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds cue point to MIDI file.\n     * @param {string} text - Text of cue point.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(text) {\n      return this.addEvent(new CuePointEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds lyric to MIDI file.\n     * @param {string} text - Lyric text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addLyric\",\n    value: function addLyric(text) {\n      return this.addEvent(new LyricEvent({\n        text: text\n      }));\n    }\n    /**\n     * Channel mode messages\n     * @return {Track}\n     */\n\n  }, {\n    key: \"polyModeOn\",\n    value: function polyModeOn() {\n      var event = new NoteOnEvent({\n        data: [0x00, 0xB0, 0x7E, 0x00]\n      });\n      return this.addEvent(event);\n    }\n    /**\n     * Sets a pitch bend.\n     * @param {float} bend - Bend value ranging [-1,1], zero meaning no bend.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setPitchBend\",\n    value: function setPitchBend(bend) {\n      return this.addEvent(new PitchBendEvent({\n        bend: bend\n      }));\n    }\n    /**\n     * Adds a controller change event\n     * @param {number} number - Control number.\n     * @param {number} value - Control value.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"controllerChange\",\n    value: function controllerChange(number, value) {\n      return this.addEvent(new ControllerChangeEvent({\n        controllerNumber: number,\n        controllerValue: value\n      }));\n    }\n  }]);\n\n  return Track;\n}();\n\nvar VexFlow = /*#__PURE__*/function () {\n  function VexFlow() {\n    _classCallCheck(this, VexFlow);\n  }\n\n  _createClass(VexFlow, [{\n    key: \"trackFromVoice\",\n    value:\n    /**\n     * Support for converting VexFlow voice into MidiWriterJS track\n     * @return MidiWriter.Track object\n     */\n    function trackFromVoice(voice) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        addRenderedAccidentals: false\n      };\n      var track = new Track();\n      var wait = [];\n      voice.tickables.forEach(function (tickable) {\n        if (tickable.noteType === 'n') {\n          track.addEvent(new NoteEvent({\n            pitch: tickable.keys.map(function (pitch, index) {\n              return _this.convertPitch(pitch, index, tickable, options.addRenderedAccidentals);\n            }),\n            duration: _this.convertDuration(tickable),\n            wait: wait\n          })); // reset wait\n\n          wait = [];\n        } else if (tickable.noteType === 'r') {\n          // move on to the next tickable and add this to the stack\n          // of the `wait` property for the next note event\n          wait.push(_this.convertDuration(tickable));\n        }\n      }); // There may be outstanding rests at the end of the track,\n      // pad with a ghost note (zero duration and velocity), just to capture the wait.\n\n      if (wait.length > 0) {\n        track.addEvent(new NoteEvent({\n          pitch: '[c4]',\n          duration: '0',\n          wait: wait,\n          velocity: '0'\n        }));\n      }\n\n      return track;\n    }\n    /**\n     * Converts VexFlow pitch syntax to MidiWriterJS syntax\n     * @param pitch string\n     * @param index pitch index\n     * @param note struct from Vexflow\n     * @param addRenderedAccidentals adds Vexflow rendered accidentals\n     */\n\n  }, {\n    key: \"convertPitch\",\n    value: function convertPitch(pitch, index, note) {\n      var addRenderedAccidentals = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      // Splits note name from octave\n      var pitchParts = pitch.split('/'); // Retrieves accidentals from pitch\n      // Removes natural accidentals since they are not accepted in Tonal Midi\n\n      var accidentals = pitchParts[0].substring(1).replace('n', '');\n\n      if (addRenderedAccidentals) {\n        var _note$getAccidentals;\n\n        (_note$getAccidentals = note.getAccidentals()) === null || _note$getAccidentals === void 0 ? void 0 : _note$getAccidentals.forEach(function (accidental) {\n          if (accidental.index === index) {\n            if (accidental.type === 'n') {\n              accidentals = '';\n            } else {\n              accidentals += accidental.type;\n            }\n          }\n        });\n      }\n\n      return pitchParts[0][0] + accidentals + pitchParts[1];\n    }\n    /**\n     * Converts VexFlow duration syntax to MidiWriterJS syntax\n     * @param note struct from VexFlow\n     */\n\n  }, {\n    key: \"convertDuration\",\n    value: function convertDuration(note) {\n      return 'd'.repeat(note.dots) + this.convertBaseDuration(note.duration) + (note.tuplet ? 't' + note.tuplet.num_notes : '');\n    }\n    /**\n     * Converts VexFlow base duration syntax to MidiWriterJS syntax\n     * @param duration Vexflow duration\n     * @returns MidiWriterJS duration\n     */\n\n  }, {\n    key: \"convertBaseDuration\",\n    value: function convertBaseDuration(duration) {\n      switch (duration) {\n        case 'w':\n          return '1';\n\n        case 'h':\n          return '2';\n\n        case 'q':\n          return '4';\n\n        default:\n          return duration;\n      }\n    }\n  }]);\n\n  return VexFlow;\n}();\n\n/**\n * Object representation of a header chunk section of a MIDI file.\n * @param {number} numberOfTracks - Number of tracks\n * @return {HeaderChunk}\n */\n\nvar HeaderChunk = /*#__PURE__*/_createClass(function HeaderChunk(numberOfTracks) {\n  _classCallCheck(this, HeaderChunk);\n\n  this.type = Constants.HEADER_CHUNK_TYPE;\n  var trackType = numberOfTracks > 1 ? Constants.HEADER_CHUNK_FORMAT1 : Constants.HEADER_CHUNK_FORMAT0;\n  this.data = trackType.concat(Utils.numberToBytes(numberOfTracks, 2), // two bytes long,\n  Constants.HEADER_CHUNK_DIVISION);\n  this.size = [0, 0, 0, this.data.length];\n});\n\n/**\n * Object that puts together tracks and provides methods for file output.\n * @param {array|Track} tracks - A single {Track} object or an array of {Track} objects.\n * @param {object} options - {middleC: 'C4'}\n * @return {Writer}\n */\n\nvar Writer = /*#__PURE__*/function () {\n  function Writer(tracks) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Writer);\n\n    // Ensure tracks is an array\n    this.tracks = Utils.toArray(tracks);\n    this.options = options;\n  }\n  /**\n   * Builds array of data from chunkschunks.\n   * @return {array}\n   */\n\n\n  _createClass(Writer, [{\n    key: \"buildData\",\n    value: function buildData() {\n      var _this = this;\n\n      var data = [];\n      data.push(new HeaderChunk(this.tracks.length)); // For each track add final end of track event and build data\n\n      this.tracks.forEach(function (track) {\n        data.push(track.buildData(_this.options));\n      });\n      return data;\n    }\n    /**\n     * Builds the file into a Uint8Array\n     * @return {Uint8Array}\n     */\n\n  }, {\n    key: \"buildFile\",\n    value: function buildFile() {\n      var build = []; // Data consists of chunks which consists of data\n\n      this.buildData().forEach(function (d) {\n        return build = build.concat(d.type, d.size, d.data);\n      });\n      return new Uint8Array(build);\n    }\n    /**\n     * Convert file buffer to a base64 string.  Different methods depending on if browser or node.\n     * @return {string}\n     */\n\n  }, {\n    key: \"base64\",\n    value: function base64() {\n      if (typeof btoa === 'function') return btoa(String.fromCharCode.apply(null, this.buildFile()));\n      return Buffer.from(this.buildFile()).toString('base64');\n    }\n    /**\n     * Get the data URI.\n     * @return {string}\n     */\n\n  }, {\n    key: \"dataUri\",\n    value: function dataUri() {\n      return 'data:audio/midi;base64,' + this.base64();\n    }\n    /**\n     * Set option on instantiated Writer.\n     * @param {string} key\n     * @param {any} value\n     * @return {Writer}\n     */\n\n  }, {\n    key: \"setOption\",\n    value: function setOption(key, value) {\n      this.options[key] = value;\n      return this;\n    }\n    /**\n     * Output to stdout\n     * @return {string}\n     */\n\n  }, {\n    key: \"stdout\",\n    value: function stdout() {\n      return process.stdout.write(Buffer.from(this.buildFile()));\n    }\n  }]);\n\n  return Writer;\n}();\n\nvar main = {\n  Constants: Constants,\n  ControllerChangeEvent: ControllerChangeEvent,\n  CuePointEvent: CuePointEvent,\n  EndTrackEvent: EndTrackEvent,\n  InstrumentNameEvent: InstrumentNameEvent,\n  KeySignatureEvent: KeySignatureEvent,\n  LyricEvent: LyricEvent,\n  MarkerEvent: MarkerEvent,\n  NoteOnEvent: NoteOnEvent,\n  NoteOffEvent: NoteOffEvent,\n  NoteEvent: NoteEvent,\n  PitchBendEvent: PitchBendEvent,\n  ProgramChangeEvent: ProgramChangeEvent,\n  TempoEvent: TempoEvent,\n  TextEvent: TextEvent,\n  TimeSignatureEvent: TimeSignatureEvent,\n  Track: Track,\n  TrackNameEvent: TrackNameEvent,\n  Utils: Utils,\n  VexFlow: VexFlow,\n  Writer: Writer\n};\n\nmodule.exports = main;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * A midi note number is a number representation of a note pitch. It can be\n * integers so it's equal tempered tuned, or float to indicate it's not\n * tuned into equal temepered scale.\n *\n * This module contains functions to convert to and from midi notes.\n *\n * @example\n * var midi = require('tonal-midi')\n * midi.toMidi('A4') // => 69\n * midi.note(69) // => 'A4'\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n *\n * @module midi\n */\n\nimport { midi } from 'note-parser'\n\n/**\n * Convert the given note to a midi note number. If you pass a midi number it\n * will returned as is.\n *\n * @param {Array|String|Number} note - the note to get the midi number from\n * @return {Integer} the midi number or null if not valid pitch\n * @example\n * midi.toMidi('C4') // => 60\n * midi.toMidi(60) // => 60\n * midi.toMidi('60') // => 60\n */\nexport function toMidi (val) {\n  if (Array.isArray(val) && val.length === 2) return val[0] * 7 + val[1] * 12 + 12\n  return midi(val)\n}\n\nvar FLATS = 'C Db D Eb E F Gb G Ab A Bb B'.split(' ')\nvar SHARPS = 'C C# D D# E F F# G G# A A# B'.split(' ')\n\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {Integer} midi - the midi note number\n * @param {Boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {String} the note name\n * @example\n * var midi = require('tonal-midi')\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n * // it rounds to nearest note\n * midi.note(61.7) // => 'D4'\n */\nexport function note (num, sharps) {\n  if (num === true || num === false) return function (m) { return note(m, num) }\n  num = Math.round(num)\n  var pcs = sharps === true ? SHARPS : FLATS\n  var pc = pcs[num % 12]\n  var o = Math.floor(num / 12) - 1\n  return pc + o\n}\n","'use strict'\n\n// util\nfunction fillStr (s, num) { return Array(num + 1).join(s) }\nfunction isNum (x) { return typeof x === 'number' }\nfunction isStr (x) { return typeof x === 'string' }\nfunction isDef (x) { return typeof x !== 'undefined' }\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nexport function regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n * and some category (for example an scale: 'C# major'). It's false by default,\n * but when true, en extra tonicOf property is returned with the category ('major')\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n * since, for example, chroma of 'Cb' and 'B' are both 11\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nexport function parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || (!isTonic && m[4])) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  var pos = SEMITONES[p.step] + p.alt\n  p.chroma = pos < 0 ? 12 + pos : pos % 12\n  if (m[3]) { // has octave\n    p.oct = +m[3]\n    p.midi = pos + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\nvar LETTERS = 'CDEFGAB'\nfunction accStr (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\nfunction octStr (n) { return !isNum(n) ? '' : '' + n }\n\n/**\n * Create a string from a parsed object or `step, alteration, octave` parameters\n * @param {Object} obj - the parsed data object\n * @return {String} a note string or null if not valid parameters\n * @since 1.2\n * @example\n * parser.build(parser.parse('cb2')) // => 'Cb2'\n *\n * @example\n * // it accepts (step, alteration, octave) parameters:\n * parser.build(3) // => 'F'\n * parser.build(3, -1) // => 'Fb'\n * parser.build(3, -1, 4) // => 'Fb4'\n */\nexport function build (s, a, o) {\n  if (s === null || typeof s === 'undefined') return null\n  if (s.step) return build(s.step, s.alt, s.oct)\n  if (s < 0 || s > 6) return null\n  return LETTERS.charAt(s) + accStr(a) + octStr(o)\n}\n\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String|Integer} note - the note name or midi number\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n * @example\n * // midi numbers are bypassed (even as strings)\n * parser.midi(60) // => 60\n * parser.midi('60') // => 60\n */\nexport function midi (note) {\n  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n  var p = parse(note)\n  return p && isDef(p.midi) ? p.midi : null\n}\n\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name or note midi number\n * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n * @example\n * // can change tuning (440 by default)\n * parser.freq('A4', 444) // => 444\n * parser.freq('A3', 444) // => 222\n * @example\n * // it accepts midi numbers (as numbers and as strings)\n * parser.freq(69) // => 440\n * parser.freq('69', 442) // => 442\n */\nexport function freq (note, tuning) {\n  var m = midi(note)\n  return m === null ? null : midiToFreq(m, tuning)\n}\n\nexport function letter (src) { return (parse(src) || {}).letter }\nexport function acc (src) { return (parse(src) || {}).acc }\nexport function pc (src) { return (parse(src) || {}).pc }\nexport function step (src) { return (parse(src) || {}).step }\nexport function alt (src) { return (parse(src) || {}).alt }\nexport function chroma (src) { return (parse(src) || {}).chroma }\nexport function oct (src) { return (parse(src) || {}).oct }\n","import Instrument from './instrument'\r\n// A generic interface for instruments\r\nimport {\r\n\tcreateInstruments, \r\n\tgetRandomInstrument, getInstrumentFamily,\r\n\tinstrumentFolders, instrumentNames\r\n} from '../instruments'\r\n\r\nimport { playTrack,loadInstrumentPack } from '../audio'\r\nimport { convertMIDINoteNumberToName, convertNoteNameToMIDINoteNumber} from '../notes'\r\n\r\n// Maximum simultaneous tracks to play (will wait for slot)\r\nconst MAX_TRACKS = 16 // AKA one bar\r\n\r\nexport default class SampleInstrument extends Instrument{\r\n\r\n\ttype = \"sample\"\r\n\tname = \"SamplePlayerInstrument\"\r\n\r\n\tinstrument\r\n\t\r\n\tinstrumentName = \"Unloaded\"\r\n\tinstrumentTitle = \"Unloaded\"\r\n\tinstrumentFamily = \"Unknown\"\r\n\tinstrumentPack  = ''\r\n\tinstrumentNumber\r\n\r\n\t// do not edit\r\n\tinstrumentPointer = 0\r\n\tinstrumentLoading = true\r\n\r\n\tget isLoading(){\r\n\t\treturn this.instrumentLoading\r\n\t}\r\n\t\r\n\tget volume(){\r\n\t\treturn this.gainNode.gain.value\r\n\t}\r\n\r\n\tset volume( value ){\r\n\t\tthis.gainNode.gain.value = value\r\n\t\tthis.currentVolume = value\r\n\t}\r\n\r\n\tget outputNode(){\r\n\t\treturn this.gainNode\r\n\t}\r\n\r\n\t// allow this itself to load instruments from the system\r\n\t// based on whatever programNumber we set below...\r\n\tconstructor( audioContext, destinationNode, options={} ){\r\n\t\tsuper(audioContext, destinationNode, options)\r\n\t\t// we add a few extra sample places for the instruments\r\n\t\tthis.polyphony = 5\r\n\t\t\r\n\t\tthis.gainNode = audioContext.createGain()\r\n\t\tthis.gainNode.connect(destinationNode)\r\n\t\tthis.volume = 1\r\n\t\tthis.available = true\r\n\t}\r\n\r\n\tasync play(audioBuffer, velocity){\r\n\r\n\t\t// too many simultaneous samples\r\n\t\tif ( ++this.polyphony > MAX_TRACKS)\r\n\t\t{\r\n\t\t\t// return\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: Send out pitch bend?\r\n\t\tif (this.active)\r\n\t\t{\r\n\t\t\t//console.log(\"Sample overwriting playback.\", noteName )\r\n\t\t}\r\n\r\n\t\tthis.active = true\r\n\t\tthis.volume = velocity\r\n\t\t\r\n\t\t//console.error( \"PLAYING NOW!\" , {audioBuffer}, this.polyphony, this.gainNode )\r\n\r\n\t\t// FIXME: Add to active so we can remove it later\r\n\t\tconst track = playTrack( audioBuffer, 0, this.gainNode ).then( ()=>{\r\n\t\t\tthis.polyphony--\r\n\t\t\tif (this.polyphony < 1) {\r\n\t\t\t\tthis.active = false\r\n\t\t\t}\r\n\t\t\r\n\t\t\t//console.log(\"Sample completed playback.\", track )\r\n\t\t\treturn true\r\n\t\t})\r\n\t}\r\n\r\n\t// Like note on but using names!\r\n\tasync noteOnByName(noteName, velocity=1 ){\r\n\t\t// const audioBuffer = this.instrument[noteName]\r\n\t\t// audioBuffer && this.play(audioBuffer, velocity)\r\n\t\treturn this.noteOn( convertNoteNameToMIDINoteNumber(noteName), velocity)\r\n\t}\r\n\r\n\tasync noteOn(noteNumber, velocity=1){\r\n\t\tconst audioBuffer = this.instrument[convertMIDINoteNumberToName(noteNumber)]\r\n\t\tif(audioBuffer)\r\n\t\t{\r\n\t\t\tawait this.play(audioBuffer, velocity)\r\n\t\t}\r\n\t\treturn super.noteOn(noteNumber, velocity)\r\n\t}\r\n\r\n\t// FIXME: Fade out the gate\r\n\tasync noteOff(noteNumber, velocity=0){\r\n\t\tthis.volume = velocity\r\n\t\treturn super.noteOff(noteNumber)\r\n\t}\r\n\r\n\tasync aftertouch( noteNumber, pressure ){\r\n\t\tawait super.aftertouch( noteNumber, pressure )\r\n\t}\r\n\t\r\n\tasync pitchBend(pitch){\r\n\t\tawait super.pitchBend(pitch)\r\n\t}\r\n\r\n\t// to load a new sample we can also use the midi methods...\r\n\tasync programChange( programNumber ){\r\n\r\n\t\tawait super.programChange( programNumber )\r\n\t\treturn await this.loadInstrument( instrumentFolders[programNumber] )\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @returns {Array<String>} of Instrument Names\r\n\t */\r\n\tasync getInstruments(){\r\n\t\treturn createInstruments()\r\n\t}\r\n\r\n\t// INTERNAL -------------------------------------------\r\n\t\r\n\t/**\r\n\t * Provide this Person with a random instrument\r\n\t * @param {Function} progressCallback Method to call once the instrument has loaded\r\n\t */\r\n\t async loadRandomInstrument(progressCallback){\r\n\t\treturn await this.loadInstrument( getRandomInstrument(), this.instrumentPack, progressCallback )\r\n\t}\r\n\r\n\t/**\r\n\t * Load the previous instrument in the list\r\n\t * @param {Function} progressCallback Method to call once the instrument has loaded\r\n\t */\r\n\tasync loadPreviousInstrument(progressCallback){\r\n\t\tconst index = this.instrumentPointer-1\r\n\t\tconst newIndex = index < 0 ? instrumentFolders.length + index : index\r\n\t\treturn await this.loadInstrument( instrumentFolders[newIndex], this.instrumentPack, progressCallback )\r\n\t}\r\n\r\n\t/**\r\n\t * Load the subsequent instrument in the list\r\n\t * @param {Function} progressCallback Method to call once the instrument has loaded\r\n\t */\r\n\tasync loadNextInstrument(progressCallback){\r\n\t\tconst index = this.instrumentPointer+1 \r\n\t\tconst newIndex = index >= instrumentFolders.length ? 0 : index\r\n\t\treturn await this.loadInstrument( instrumentFolders[newIndex], this.instrumentPack, progressCallback )\r\n\t}\r\n\r\n\t/**\r\n\t * Reload ALL instruments for this user\r\n\t * NB. If we have swapped the instrument pack we can use this method\r\n\t * to reload the same instrument but with the new samples\r\n\t * @param {Function} callback Method to call once the instrument has loaded\r\n\t */\r\n\tasync reloadInstrument(progressCallback){\r\n\t\treturn await this.loadInstrument( instrumentFolders[this.instrumentPointer], this.instrumentPack, progressCallback )\r\n\t}\r\n\r\n\t/**\r\n\t * Changes all instuments to new pack\r\n\t * @param {*} instrumentPack \r\n\t * @param {Function} progressCallback \r\n\t */\r\n\tasync loadPack(instrumentPack, progressCallback){\r\n\t\tthis.instrumentPack = instrumentPack\r\n\t\treturn await this.reloadInstrument(progressCallback)\r\n\t}\r\n\r\n\t/**\r\n\t * Load a specific instrument for this Person\r\n\t * TODO: Add loading events\r\n\t * @param {String} instrumentName Name of the standard instrument to load\r\n\t * @param {String} instrumentPack Name of the standard instrument to load\r\n\t * @param {Function} callback Method to call once the instrument has loaded\r\n\t */\r\n\t async loadInstrument(instrumentName, instrumentPack, progressCallback ){\r\n\t\t\r\n\t\tconst index = instrumentFolders.indexOf(instrumentName)\r\n\t\t\r\n\t\tthis.instrumentLoading = true\r\n\r\n\t\t// FIXME: Send the -mp3 version...\r\n\t\tthis.instrument = await loadInstrumentPack( instrumentName, instrumentPack, progressCallback )\r\n\t\t\r\n\t\tthis.instrumentNumber = index\r\n\t\tthis.instrumentName = instrumentName\r\n\t\tthis.instrumentPack = instrumentPack\r\n\r\n\t\t// Fetch the GM name\r\n\t\tthis.title = instrumentNames[index]\r\n\t\tthis.name = \"SampleInstrument\"\r\n\t\tthis.instrumentFamily = this.instrument.family\r\n\r\n\t\tthis.instrumentMap = {}\r\n\t\t// TODO: inside out object\r\n\t\t// convert the instrument map into a number map\r\n\t\t// for (let i=0; i < 200; ++i){\r\n\t\t// \tthis.instrumentMap[i] = this.instrument\r\n\t\t// }\r\n\t\t\r\n\t\tthis.instrumentLoading = false\r\n\r\n\r\n\t\t// this.instrumentOrder = this.instrument\r\n\t\treturn this.instrument\r\n\t}\r\n}\r\n","// we always have the same exposed methods\r\n// based on the MIDI implementations\r\n// https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message\r\nexport default class Instrument{\r\n\r\n\tname = \"Unknown\"\r\n\ttitle = \"Untitled\"\r\n\ttype = \"abstract\"\r\n\r\n\tavailable = false\r\n\tactive = false\r\n\r\n\t// monophonic by default\r\n\tpolyphony = 1\r\n\r\n\tcurrentVolume = 1\r\n\r\n\t// where the audio goes to\r\n\toutputNode\r\n\t\r\n\tget isLoading(){\r\n\t\treturn this.available\r\n\t}\r\n\t\r\n\tget volume(){\r\n\t\treturn this.currentVolume\r\n\t}\r\n\r\n\tset volume( value ){\r\n\t\tthis.currentVolume  = value\r\n\t}\r\n\r\n\tconstructor( audioContext, destinationNode, options={} ) \r\n\t{\r\n\t\tthis.outputNode = destinationNode\r\n\t\tthis.context = audioContext\r\n\t\tthis.activeNotes = new Map()\r\n\t\t\r\n\t\t//console.log(\"Instrument:CREATED:\", { audioContext, destinationNode } )\r\n\t}\r\n\t\r\n\t/**\r\n\t * This message is sent when a note is depressed (start).\r\n\t * @param {Number} noteNumber \r\n\t * @param {Number} velocity \r\n\t * @returns {Boolean} has the sample started or is it already playing?\r\n\t */\r\n\t async noteOn( noteNumber, velocity=1 ){\r\n\t\t\r\n\t\tconst activeNote = this.activeNotes.get(noteNumber)\r\n\t\tthis.active = true\r\n\t\t\r\n\t\tif (activeNote)\r\n\t\t{\r\n\t\t\t//console.log(activeNote, \"retrigger noteOn\", noteNumber, this.activeNotes )\r\n\t\t\treturn false\r\n\t\t}else{\r\n\r\n\t\t\t// set it not to true but to the velocity?\r\n\t\t\tthis.activeNotes.set( noteNumber, velocity )\r\n\t\t\t//console.log(\"noteOn\", noteNumber, this.activeNotes )\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * This message is sent when a note is released (ended). \r\n\t * @param {Number} noteNumber \r\n\t * @param {Number} veolcity \r\n\t */\r\n\t async noteOff( noteNumber, veolcity=0 ){\r\n\t\tthis.active = false\r\n\t\tthis.activeNotes.delete( noteNumber )\r\n\t\t//console.log(\"noteOff\", noteNumber, this.activeNotes )\r\n\t\treturn true\r\n\t}\r\n\t\r\n\t/**\r\n\t * Polyphonic Key Pressure\r\n\t * This message is most often sent by pressing down on the key \r\n\t * after it \"bottoms out\". noteNumber is the key (note) number. \r\n\t * pressure is the pressure value.\r\n\t * @param {Number} noteNumber - is the key (note) number\r\n\t * @param {Number} pressure \r\n\t */\r\n\tasync aftertouch( noteNumber, pressure ){\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pitch Bend Change. \r\n\t * This message is sent to indicate a change\r\n\t * in the pitch bender (wheel or lever, typically). \r\n\t * The pitch bender is measured by a fourteen bit value. \r\n\t * Center (no pitch change) is 2000H. \r\n\t * Sensitivity is a function of the receiver, \r\n\t * but may be set using RPN 0. \r\n\t * (lllllll) are the least significant 7 bits. \r\n\t * (mmmmmmm) are the most significant 7 bits.\r\n\t * @param {number} pitch \r\n\t */\r\n\tasync pitchBend(pitch){\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Program Change. \r\n\t * This message sent when the patch number changes. \r\n\t * @param {Number} programNumber - new program number.\r\n\t */\r\n\tasync programChange( programNumber ){\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all the instrument names available for this\r\n\t * instrument preferably at the no\r\n\t * @returns {Array<String>} of Instrument Names\r\n\t */\r\n\tasync getInstruments(){\r\n\t\treturn []\r\n\t\t\r\n\t}\r\n\r\n\t// TODO: \r\n\tallSoundOff(){\r\n\r\n\t}\r\n\r\n\tallNotesOff(){\r\n\r\n\t}\r\n}","\r\nconst getGamePads = () => navigator.getGamepads || navigator.webkitGetGamepads\r\n\r\nconst BUTTON_NAMES = [\r\n\t\"a\",\r\n\t\"b\",\r\n\t\"x\",\r\n\t\"y\",\r\n\t\"lb\",\r\n\t\"rb\",\r\n\t\"lt\",\r\n\t\"rt\",\r\n\t\"select\",\r\n\t\"start\", \r\n\t\"ls\", \r\n\t\"rs\", \r\n\t\"dup\", \r\n\t\"ddown\", \r\n\t\"dleft\", \r\n\t\"dright\"\r\n]\r\n\r\nexport default class GamePad {\r\n\r\n\tgamePadIndex = -1\r\n\tgamepad = null\r\n\tavailable = false\r\n\r\n\tbuttonLibrary = {}\r\n\r\n\ta = false\r\n\tb = false\r\n\tx = false\r\n\ty = false\r\n\trb = false\r\n\tlb = false\r\n\trt = false\r\n\tlt = false\r\n\trs = false\r\n\tls = false\r\n\tstart = false\r\n\tselect = false\r\n\tdup = false\r\n\tddown = false\r\n\tdleft = false\r\n\tdright = false\r\n\r\n\tleftstickX = 0\r\n\tleftstickY = 0\r\n\trightstickX = 0\r\n\trightstickY = 0\r\n\r\n\twatcher = null\r\n\r\n\tget buttons(){\r\n\t\treturn this.gamepad ? this.gamepad.buttons : null\r\n\t}\r\n\r\n\tget axes(){\r\n\t\treturn this.gamepad ? this.gamepad.axes : null\r\n\t}\r\n\r\n    constructor( gamePadId=0 ) {\r\n      \r\n      this.connected = false\r\n\t  this.gamePadIndex = gamePadId\r\n      \r\n      window.addEventListener(\"gamepadconnected\", e => this.connect(e) )\r\n      window.addEventListener(\"gamepaddisconnected\", e => this.disconnect(e) )\r\n    }\r\n\r\n\tgetButton(name){\r\n\t\treturn this.buttonLibrary[name]\r\n\t}\r\n\t\r\n\ton( callback ) {\r\n\t\tthis.watcher = callback\r\n\t}\r\n\r\n\tdispatch( key, value ){\r\n\t\tthis.watcher && this.watcher(key, value)\r\n\t}\r\n\t\r\n    connect(e) {\r\n\t\tconst gamepad = e.originalEvent ? e.originalEvent.gamepad : e.gamepad\r\n\t\tconst log = `Gamepad #${gamepad.index+1} : ${gamepad.id} Connected`\r\n\t\t// check to see if this is the right id...\r\n\t\tif (gamepad.index === this.gamePadIndex)\r\n\t\t{\r\n\t\t\tthis.connected = true\r\n\t\t\tthis.available = true\r\n\t\t\tthis.gamepad = gamepad\r\n\r\n\t\t\tBUTTON_NAMES.forEach( (button,index) => {\r\n\t\t\t\tbuttonLibrary[button] = this.buttons[i]\r\n\t\t\t})\r\n\t\t\r\n\t\t\tthis.update()\r\n\t\t\tthis.dispatch(\"connected\", log)\r\n\t\t}\r\n    }\r\n    \r\n    disconnect(e) {\r\n\t\tconst gamepad = e.originalEvent ? e.originalEvent.gamepad : e.gamepad\r\n\t\tconst log = `Gamepad #${gamepad.index+1} : ${gamepad.id} Disconnected`\r\n\t\tif (gamepad.index === this.gamePadIndex)\r\n\t\t{\r\n\t\t\tthis.connected = false\r\n\t\t\tthis.available = false\r\n\t\t\tthis.gamepad = null\r\n\t\t\tthis.dispatch(\"disconnected\", log)\r\n\t\t}\r\n    }\r\n\r\n\tsetBoolean( gamepad, button, buttonIndex ){\r\n\t\t// check if changed and send out event if so\r\n\t\tconst value = gamepad.buttons[buttonIndex].pressed || gamepad.buttons[buttonIndex].value === 1\r\n\t\tif (this[button] !== value)\r\n\t\t{\r\n\t\t\tthis[button] = value\r\n\t\t\t// dispatch changes\r\n\t\t\tthis.dispatch(button, value)\r\n\t\t\tconsole.log(gamepad.buttons[buttonIndex].value,  \"Dispatching gamepad data\",this.gamepad, {button, value} )\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log( \"unchanged gamepad data\",this.gamepad, value, this[button] )\r\n\t\t}\r\n\t\t// not changed\r\n\t}\r\n    \r\n    update() {\r\n\t\t\r\n\t\tif (!this.gamepad)\r\n\t\t{\r\n\t\t\tconst all = getGamePads()\r\n\t\t\t\r\n\t\t\tthis.gamepad = all[this.gamePadIndex]\r\n\t\t\tthis.available = !!this.gamepad\r\n\r\n\t\t\tconsole.log(this.available, \"Updating gamepad data\", {all}, this.gamepad)\r\n\t\t}\r\n\t\t\r\n    \tif (this.available && this.connected) \r\n\t\t{\r\n\t\t\t//console.log(this.available, \"Updating gamepad data\",this.gamepad)\r\n\t\t\t\r\n\t\t\tthis.leftstickX = this.gamepad.axes[0]\r\n\t\t\tthis.leftstickY = this.gamepad.axes[1]\r\n\t\t\tthis.rightstickX = this.gamepad.axes[2]\r\n\t\t\tthis.rightstickY = this.gamepad.axes[3]\r\n\t\t\tfor (var i = 0, l=BUTTON_NAMES.length; i < l; ++i) \r\n\t\t\t{\r\n\t\t\t\tthis.setBoolean( this.gamepad, BUTTON_NAMES[i], i)\r\n\t\t\t}\r\n\r\n\t\t\t//BUTTON_NAMES.forEach( (button, i) => this.setBoolean( this.gamepad, button, i) )\r\n\t\t\t// this.setBoolean( gamepad, \"a\", 0)\r\n\t\t\t// this.setBoolean( gamepad, \"b\", 1)\r\n\t\t\t// this.setBoolean( gamepad, \"x\", 2)\r\n\t\t\t// this.setBoolean( gamepad, \"y\", 3)\r\n\t\t\t// this.setBoolean( gamepad, \"lb\", 4)\r\n\t\t\t// this.setBoolean( gamepad, \"rb\", 5)\r\n\t\t\t// this.setBoolean( gamepad, \"lt\", 6)\r\n\t\t\t// this.setBoolean( gamepad, \"rt\", 7)\r\n\t\t\t// this.setBoolean( gamepad, \"select\", 8)\r\n\t\t\t// this.setBoolean( gamepad, \"start\", 9)\r\n\t\t\t// this.setBoolean( gamepad, \"ls\", 10)\r\n\t\t\t// this.setBoolean( gamepad, \"rs\", 11)\r\n\t\t\t// this.setBoolean( gamepad, \"dup\", 12)\r\n\t\t\t// this.setBoolean( gamepad, \"ddown\", 13)\r\n\t\t\t// this.setBoolean( gamepad, \"dleft\", 14)\r\n\t\t\t// this.setBoolean( gamepad, \"dright\", 15)\r\n\r\n\t\t\t// this.a = !!gamepad.buttons[0].value\r\n\t\t\t// this.b = !!gamepad.buttons[1].value\r\n\t\t\t// this.x = !!gamepad.buttons[2].value\r\n\t\t\t// this.y = !!gamepad.buttons[3].value\r\n\t\t\t// this.lb = !!gamepad.buttons[4].value\r\n\t\t\t// this.rb = !!gamepad.buttons[5].value\r\n\t\t\t// this. lt = !!gamepad.buttons[6].value\r\n\t\t\t// this.rt = !!gamepad.buttons[7].value\r\n\t\t\t// this.select = !!gamepad.buttons[8].value\r\n\t\t\t// this.start = !!gamepad.buttons[9].value\r\n\t\t\t// this.ls = !!gamepad.buttons[10].value\r\n\t\t\t// this.rs = !!gamepad.buttons[11].value\r\n\t\t\t// this.dup = !!gamepad.buttons[12].value\r\n\t\t\t// this.ddown = !!gamepad.buttons[13].value\r\n\t\t\t// this.dleft = !!gamepad.buttons[14].value\r\n\t\t\t// this.dright = !!gamepad.buttons[15].value\r\n\r\n\t\t}else{\r\n\t\t\t//console.log(this.available, \"failing to update gamepad data\", this.gamepad)\r\n\t\t}\r\n    }\r\n  }","// Only one instance of this timing class is allowed\r\n// but it is designed as such to allow for complex rythmns to \r\n// be created as well as very basic events such as metronomes.\r\n// this is the basis for \"Transport\"\r\n\r\n// import TimeSignature from \"@tonaljs/time-signature\"\r\n// TimeSignature.names()\r\n\r\n// MicrosPerPPQN = MicroTempo/TimeBase\r\n// PPQNPerMIDIClock = TimeBase/24\r\n// MicrosPerSubFrame = 1000000 * Frames * SubFrames\r\n// SubFramesPerQuarterNote = MicroTempo/(Frames * SubFrames)\r\n// SubFramesPerPPQN = SubFramesPerQuarterNote/TimeBase\r\n// MicrosPerPPQN = SubFramesPerPPQN * Frames * SubFrames\r\n\r\nimport {\r\n\tCMD_START,CMD_STOP,CMD_UPDATE,\r\n\tEVENT_READY, EVENT_STARTING, EVENT_STOPPING, EVENT_TICK\r\n} from './timing.events.js'\r\n\r\nexport const MAX_BARS_ALLOWED = 32\r\n\r\nconst DIVISIONS = 4\r\n\r\nconst AudioContext = window.AudioContext || window.webkitAudioContext\r\n\r\nlet startTime = -1\r\nlet period = 100\r\nlet audioContext = null\r\nlet isRunning = false\r\nlet isCompatible = true\r\n\r\n// for time formatting...\r\nlet bar = 0\r\nlet bars = 16\r\nlet barsElapsed = 0\r\n\r\n// There are 16 quarter notes in a note\r\nlet divisionsElapsed = 0\r\n\r\n// NB. https://bugzilla.mozilla.org/show_bug.cgi?id=1203382\r\n//      FF does not allow raf so use setimeout is preffered\r\nlet timingWorker\r\ntry{\r\n\r\n\ttimingWorker = new Worker(\r\n        new URL('./timing.settimeout.worker.js', import.meta.url),\r\n        {type: 'module'}\r\n    )\r\n\t\t\r\n\t// FIX: Safarai does *not* allow inline Workers so we have to use blob\r\n\t// const url = `data:text/javascript;charset=utf-8,${encodeURIComponent(js)}`;\r\n\t// return url;\r\n\t// if (forceDataUri) {\r\n\t//     const url = `data:text/javascript;charset=utf-8,${encodeURIComponent(js)}`;\r\n\t//     return url;\r\n\t// }\r\n\t// const blob = new Blob([js], { type: 'application/javascript' });\r\n\t// return URL.createObjectURL(blob);\r\n\r\n}catch(error){\r\n    isCompatible = false\r\n}\r\n\r\n/**\r\n * Can we use this timing method on this device?\r\n * @returns {Boolean} is the worker available and compatable\r\n */\r\nexport const isAvailable = () => isCompatible\r\n\r\n/**\r\n * Accurate time in milliseconds\r\n * @returns {Number} The current time as of now\r\n */\r\nexport const now = () => audioContext ? audioContext.currentTime : Date.now()\r\n\r\n/**\r\n * Amount of time elapsed since startTimer() in seconds\r\n * @returns {Number} BPM\r\n */\r\n export const getElapsed = () => (now() - startTime) * 0.001\r\n\r\n/**\r\n * Convert a BPM to a period in ms\r\n * @param {Number} bpm beats per minute\r\n * @returns {Number} time in milliseconds\r\n */\r\nexport const convertBPMToPeriod = bpm => 60000 / bpm\r\n\r\n/**\r\n * Fetch current bar length in milliseconds\r\n * @returns {Number} bar length in milliseconds\r\n */\r\nexport const getTimePerBar = () => period * DIVISIONS\r\n\r\n/**\r\n * Fetch whole loop length in milliseconds\r\n * @returns {Number} length in milliseconds\r\n */\r\nexport const getTotalTime = () => getTimePerBar() * bars\r\n\r\n/**\r\n * Fetch current bar\r\n * @returns {Number} current bar\r\n */\r\nexport const getBar = () => bar\r\n\r\n/**\r\n * Fetch total bar quantity\r\n * @returns {Number} total bars\r\n */\r\n export const getBars = () => bars \r\n\r\n/**\r\n * Percentage duration of bar progress\r\n * @returns {Number} percentage elapsed\r\n */\r\nexport const getBarProgress = () => bar / bars\r\n\r\n/**\r\n * Allows a user to set the total number of bars\r\n * @param {Number} value How many bars to have in a measure\r\n * @returns {Number} total bars\r\n */\r\nexport const setBars = value => {\r\n    bars = value < 1 ? 1 : value > MAX_BARS_ALLOWED ? MAX_BARS_ALLOWED : value\r\n    return bars\r\n}\r\n\r\n// Tempos\r\n\r\n/**\r\n * Get the current timing as a Microtempo \r\n * @returns {Number} Microtempo\r\n */\r\n export const getMicroTempo = () => getTimePerBar() * 0.001\r\n\r\n/**\r\n * Get the current timing in Micros per MIDI clock\r\n * MicrosPerMIDIClock = MicroTempo / 24 \r\n * @returns {Number} Microtempo\r\n */\r\n export const getMicrosPerMIDIClock = () => getMicroTempo() / 24\r\n\r\n/**\r\n * Get the current timing as Beats per minute\r\n * BPM = 60,000,000 / MicroTempo\r\n * @returns {Number} BPM\r\n */\r\n export const getBPM = () => 60000 / getTimePerBar()\r\n\r\n /**\r\n  *  Set the current timing using a BPM where \r\n  *  one beat in milliseconds =  60,000 / BPM\r\n  * @param {Number} bpm Beats per minute\r\n  * @returns {Number} period\r\n  */\r\n export const setBPM = bpm => setTimeBetween( convertBPMToPeriod( bpm ) )\r\n \r\n/**\r\n * Using a time in milliseconds, set the amount of time between tick and tock\r\n * @param {Number} time Amount of millieconds between ticks\r\n * @returns {Number} period\r\n */\r\nexport const setTimeBetween = time => {\r\n\r\n\t// we want 16 notes\r\n    period = time / DIVISIONS\r\n\r\n  \t// TODO\r\n    // FIXME\r\n    // if it is running, stop and restart it?\r\n    //interval = newInterval\r\n    timingWorker.postMessage({command:CMD_UPDATE, interval:period, time:now() })\r\n    return period\r\n}\r\n\r\n/**\r\n * Starts the timer and begins events being dispatched\r\n * @param {Function} callback Method to call when the timer ticks\r\n * @param {Number} timeBetween Milliseconds between ticks aka Period\r\n * @param {Object} options Other settings\r\n * @returns {Object} current time and timingWorker\r\n */\r\nexport const startTimer = (callback, timeBetween=200, options={} ) => {\r\n\r\n    barsElapsed = 0\r\n\r\n    // lazily initialise a context\r\n    if (audioContext === null)\r\n    {\r\n        audioContext = new AudioContext()\r\n        // on Safari macOS/iOS, the audioContext is suspended if it's not created\r\n        // in the event handler of a user action: we attempt to resume it.\r\n        if (audioContext.state === 'suspended') {\r\n            audioContext.resume()\r\n        }\r\n    }\r\n\r\n    period = timeBetween\r\n\r\n    if (!isRunning)\r\n    {\r\n        // \r\n    }\r\n   \r\n    // now hook into our worker bee and watch for timing changes\r\n    timingWorker.onmessage = (e) => {\r\n\r\n        const currentTime = now()\r\n        const data = e.data\r\n        switch(data.event)\r\n        {\r\n            case EVENT_STARTING:\r\n               \t// save start time\r\n                startTime = currentTime\r\n                isRunning = true\r\n\t\t\t\tdivisionsElapsed = 0\r\n                //console.log(\"EVENT_STARTING\", {time:data.time, startTime})\r\n                break\r\n\r\n            case EVENT_TICK:\r\n\r\n                // How many ticks have occured yet\r\n                const intervals = data.intervals\r\n                // Expected time stamp\r\n                const expected = intervals * timeBetween * 0.001\r\n                // How long has elapsed according to audio context\r\n                const elapsed = currentTime - startTime\r\n                // How long has elapsed according to our worker\r\n                const timePassed = data.time\r\n                // how much spill over the expected timestamp is there\r\n                const lag = timePassed % timeBetween * 0.001\r\n                // should be 0 if the timer is working...\r\n                const drift = timePassed - elapsed\r\n                // deterministic intervals not neccessary\r\n                const level = Math.floor(timePassed / timeBetween)\r\n                \r\n\t\t\t\tif (++divisionsElapsed === DIVISIONS)\r\n\t\t\t\t{\r\n\t\t\t\t\tbar = ++barsElapsed % bars\r\n\t\t\t\t\tdivisionsElapsed = 0\r\n\t\t\t\t}\r\n\t\t\t\r\n                // elapsed should === time\r\n                //console.log(\"EVENT_TICK\", {timePassed, elapsed, drift, art})\r\n                // console.log(divisionsElapsed, bar +'/' + bars)\r\n                callback && callback({\r\n\t\t\t\t\tdivisionsElapsed, bar, bars, barsElapsed, \r\n\t\t\t\t\ttimePassed, elapsed, expected, drift, level, intervals, lag\r\n\t\t\t\t})\r\n                // timingWorker.postMessage({command:CMD_UPDATE, time:currentTime, interval})\r\n                break\r\n\r\n            default:\r\n                console.log(\"message: \" , e)\r\n        }\r\n    }\r\n\r\n    // Error!\r\n    timingWorker.onerror = error =>{\r\n        console.error(\"error...\", {error} )\r\n        timingWorker.postMessage({error, time:audioContext.currentTime })\r\n    }\r\n\r\n    // send command to worker... options\r\n    timingWorker.postMessage({\r\n        command:CMD_START, \r\n        time:audioContext.currentTime, \r\n        interval:timeBetween,\r\n        // FIXME:\r\n        accurateTiming:false\r\n    })\r\n    //console.log(\"Starting...\", {audioContext, interval:timeBetween, timingWorker} )\r\n\r\n    return {\r\n        currentTime:now(),\r\n        timingWorker\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Stops the timer and prevents events being dispatched\r\n * @returns {Object} current time and timingWorker\r\n */\r\nexport const stopTimer = () => {\r\n    const currentTime = now()\r\n    // cancel the thing thrugh the workers first\r\n    // cancel any scheduled quie noises\r\n    timingWorker.onmessage = (e) => {\r\n        switch(e.event)\r\n        {\r\n            // Clean up\r\n            case EVENT_STOPPING:\r\n                // destroy contexts and unsubscribe from events\r\n                isRunning = false\r\n                audioContext = null\r\n                break\r\n        }\r\n    }\r\n\r\n    timingWorker.postMessage({command:CMD_STOP, time:currentTime})\r\n\r\n    return {\r\n        currentTime,\r\n        timingWorker\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// TODO: Implement lienar regression like nayuki\r\n// https://www.nayuki.io/page/tap-to-measure-tempo-javascript\r\nlet beatTimes = []\r\nconst TAP_TIMEOUT = 10000\r\nconst MINIMUM_TEMPOS = 2\r\n\r\n/**\r\n * Converts a series of method calls into a tempo estimate.\r\n * @param {Boolean} autoReset Start a new estimation session if timeout reached\r\n * @param {Number} timeOut Time frame before ignoring the event and starting a fresh estimation session\r\n * @param {Number} minimumTaps Requires at least x taps before estimate set\r\n * @returns {Number} New Period\r\n */\r\nexport const tapTempo = (autoReset=true, timeOut=TAP_TIMEOUT, minimumTaps = MINIMUM_TEMPOS) => {\r\n    \r\n    const currentTime = now()\r\n\r\n    if ( autoReset && beatTimes.length > 0 && currentTime - beatTimes[beatTimes.length-1] > timeOut )\r\n    {\r\n        beatTimes = []\r\n    }\r\n\r\n    beatTimes.push(currentTime)\r\n\r\n    const quantity = beatTimes.length\r\n    const x = quantity - 1\r\n    const y = beatTimes[x] - beatTimes[0]\r\n    // const time = (y / 1000).toFixed(3)\r\n   \r\n    if (quantity >= minimumTaps) \r\n    {\r\n        // const tempo = 60000 * x / y\r\n        const period = y / x\r\n        return period\r\n    }\r\n    return -1\r\n}","export const CMD_START = \"start\"\r\nexport const CMD_STOP  = \"stop\"\r\nexport const CMD_UPDATE  = \"update\"\r\n\r\nexport const EVENT_READY = \"ready\"\r\nexport const EVENT_STARTING = \"starting\"\r\nexport const EVENT_STOPPING = \"stopping\"\r\nexport const EVENT_TICK = \"tick\"","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('4wQTA') + \"timing.settimeout.worker.29d4de36.js\" + \"?\" + Date.now();module.exports = workerURL(url, bundleURL.getOrigin(url), false);","// AKA \"Sequences\"\r\nimport {\r\n\tkickSequences,\r\n\tsnareSequences,\r\n\thatSequences,\r\n\tdrumRollSequence\r\n} from './drum-patterns'\r\n\r\n// Just a simple factory for creating random repetitive beats\r\nconst subdivisions = 4\r\n\r\nexport const createPattern = (preset, bars=16) => {\r\n\r\n\t// keep adding the preset until we get to the required size...\r\n\tconst gaps = bars * subdivisions\r\n\tconst pattern = new Array()\r\n\r\n}\r\n\r\n// \r\nexport const factory = (bars=16) => {\r\n\r\n\t// each bar has 4 sub divisions\r\n\tconst gaps = bars * subdivisions\r\n\tconst sequence = new Array(gaps).fill(0)\r\n\t// const sequence = []\r\n\t// for (let i=0; i<gaps; ++i)\r\n\t// {\r\n\t// \tconst playNote = false\r\n\t// \tsequence.push(playNote)\r\n\t// }\r\n\treturn sequence\r\n}\r\n\r\n/**\r\n * Create a pattern or sequence of velocities\r\n * that can be used as triggers for percussion\r\n * @param {*} sequence \r\n * @param {*} offset \r\n * @returns \r\n */\r\nexport const pattern = ( sequence, offset=0 )=>{\r\n\r\n\tlet index = offset\r\n\t\r\n\tconst length = sequence.length - 1\r\n\r\n\t// accessors\r\n\treturn {\r\n\t\treset:()=> {\r\n\t\t\tindex = 0\r\n\t\t\treturn sequence[index]\r\n\t\t},\r\n\t\tprevious:()=>{\r\n\t\t\tconst newIndex = index - 1\r\n\t\t\tindex = newIndex < 0 ? length : newIndex\r\n\t\t\treturn sequence[index]\r\n\t\t},\r\n\t\tnext:()=>{\r\n\t\t\tconst newIndex = index + 1\r\n\t\t\tindex = newIndex > length ? 0 : newIndex\r\n\t\t\treturn sequence[index]\r\n\t\t},\r\n\t\tposition: i => sequence[i],\r\n\t\tlength:sequence.length,\r\n\t\tcurrent:()=> sequence[index],\r\n\t\tset:s => sequence = s\r\n\t}\r\n}\r\n\r\nexport const kickSequence = pattern( kickSequences[0] )\r\nexport const snareSequence = pattern(snareSequences[0])\r\nexport const hatSequence = pattern(hatSequences[0])\r\n\r\n// should we add ways to randomise this???\r\nexport const kitSequence = (kitIndex=0) => {\r\n\treturn {\r\n\t\tkick:pattern( kickSequences[kitIndex%(kickSequences.length-1)] ),\r\n\t\that:pattern( hatSequences[kitIndex%(hatSequences.length-1)] ),\r\n\t\tsnare:pattern( snareSequences[kitIndex%(snareSequences.length-1)] ),\r\n\t\troll:pattern( drumRollSequence )\r\n\t}\r\n}\r\n\r\nexport const combinePatternWithInstrument = (pattern, instrument )=> {\r\n\r\n}\r\n\r\nexport const playNextPart = (pattern, instrument, ...options )=> {\r\n\tconst velocity = pattern.next()\r\n\tif (velocity > 0)\r\n\t{\r\n\t\tinstrument(velocity, ...options)\t// velocity\r\n\t\treturn true\r\n\t}else{\r\n\t\t// no note but noteOff?\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\n// const kickVelocity = patterns.kick.next()\r\n// if (kickVelocity > 0)\r\n// {\r\n// \tkit.kick()\t// kickVelocity\r\n// }\r\n// const snareVelocity = patterns.snare.next()\r\n// if (snareVelocity > 0)\r\n// {\r\n// \tkit.snare() // snareVelocity\r\n// }\r\n\r\n// const hatVelocity = patterns.hats.next()\r\n// if (hatVelocity > 0)\r\n// {\r\n// \tkit.hat() // snareVelocity\r\n// }","\r\nexport const kickSequences = [\r\n\t[\r\n\t\t255,0,0,0,\r\n\t\t255,0,0,0,\r\n\t\t255,0,0,0,\r\n\t\t255,0,0,0\r\n\t],\r\n\t[\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,0\r\n\t],\r\n\t[\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,255\r\n\t],\r\n\t[\r\n\t\t0, 255,0,255,\r\n\t\t0, 255,0,255,\r\n\t\t0, 255,0,255,\r\n\t\t0, 255,0,255\r\n\t],\r\n\t[\r\n\t\t255,0,0,0,\r\n\t\t0,0,0,0,\r\n\t\t255,0,0,0,\r\n\t\t0,0,0,0\r\n\t],\r\n\t[\r\n\t\t255,0,0,0,\r\n\t\t0,0,0,0,\r\n\t\t0,0,0,0,\r\n\t\t5,50,150,200\r\n\t],\r\n\t[\r\n\t\t255,155,0,0,\r\n\t\t0,0,0,0,\r\n\t\t255,155,0,0,\r\n\t\t0,0,0,0\r\n\t],\r\n\t[\r\n\t\t0,255,0,0,\r\n\t\t0,0,0,0,\r\n\t\t0,255,0,0,\r\n\t\t0,0,0,0\r\n\t],\r\n\t[\r\n\t\t0,255,155,0,\r\n\t\t0,0,0,0,\r\n\t\t0,255,155,0,\r\n\t\t0,0,0,0\r\n\t]\r\n]\r\n\r\nexport const snareSequences = [\r\n\t[\r\n\t\t0,0,0,0,\r\n\t\t0,0,255,0,\r\n\t\t0,0,0,0,\r\n\t\t0,0,255,0\r\n\t],\r\n\t[\r\n\t\t0,255,0,0,\r\n\t\t0,255,0,0,\r\n\t\t0,255,0,0,\r\n\t\t0,255,0,0\r\n\t\r\n\t],\r\n\t[\r\n\t\t0,255,0,0,\r\n\t\t0,255,0,0,\r\n\t\t0,255,205,205,\r\n\t\t255,205,205,255\r\n\t\r\n\t],\r\n\t[\r\n\t\t0,255,0,0,\r\n\t\t0,0,0,255,\r\n\t\t0,255,0,0,\r\n\t\t0,0,0,255\r\n\t],\t\r\n\t[\r\n\t\t0,0,0,0,\r\n\t\t0,10,20,30,\r\n\t\t40,50,60,70,\r\n\t\t80,90,100,110\r\n\t],\r\n\t[\r\n\t\t0,255,0,0,\r\n\t\t0,0,0,0,\r\n\t\t0,255,0,0,\r\n\t\t0,0,0,0\r\n\t]\r\n]\r\n\r\nexport const drumRollSequence = new Array(16).map( i => i * 255 / 16 )\r\n\r\nexport const hatSequences = [\r\n\t[\r\n\t\t255,0,170,0,\r\n\t\t200,0,170,0,\r\n\t\t255,0,170,0,\r\n\t\t200,0,170,0\r\n\t],\r\n\t[\r\n\t\t0, 100, 0, 100,\r\n\t\t0, 100, 0, 100,\r\n\t\t0, 100, 0, 100,\r\n\t\t0, 100, 0, 100\r\n\t],\r\n\t[\r\n\t\t255,0,170,0,\r\n\t\t200,0,170,0,\r\n\t\t255,0,170,0,\r\n\t\t200,0,170,188\r\n\t],\t\r\n\t[\r\n\t\t170,0,0,0,\r\n\t\t170,0,0,0,\r\n\t\t170,0,0,0,\r\n\t\t170,0,0,0\r\n\t],\r\n\t[\r\n\t\t50,50,50,50,\r\n\t\t50,50,50,50,\r\n\t\t50,50,50,50,\r\n\t\t50,50,50,50\r\n\t],\r\n\t[\r\n\t\t20,50,20,50,\r\n\t\t20,50,20,50,\r\n\t\t20,50,20,50,\r\n\t\t20,50,20,50\r\n\t],\r\n\t[\r\n\t\t0,0,0,0,\r\n\t\t0,0,0,0,\r\n\t\t0,0,0,0,\r\n\t\t0,0,0,0\r\n\t]\r\n// \t,[\r\n// \t\t255,180,200,170,\r\n// \t\t200,180,200,170,\r\n// \t\t255,180,200,170,\r\n// \t\t200,180,200,170,\r\n// \t]\r\n]","import { instrumentNames, instrumentFolders} from '../audio/instruments'\r\nimport {canFullscreen, exitFullscreen,goFullscreen,toggleFullScreen} from './full-screen'\r\nimport {getShareLink} from '../location-handler'\r\nimport {formattedDate} from '../models/info'\r\nimport {setToggle} from './toggle'\r\nimport { connectSelect } from './select'\r\n\r\n\r\nconst doc = document\r\n// const { getElementById, querySelector } = document\r\n\r\nexport let buttonQuantise\r\nexport let buttonVideo\r\nexport let controlPanel\r\n\r\nconst main = doc.querySelector(\"main\")\r\n\r\nexport const video = doc.querySelector(\"video\")\r\n\r\n/**\r\n * is the element currently visible?\r\n * @param {HTMLElement} element to toggle the visibility of\r\n * @return {Boolean} visibility state of the element \r\n */\r\nexport const isVisible = (element) => {\r\n\treturn element.style.visibility !== \"hidden\" \r\n}\r\n/**\r\n * show or hide an element depending on the provided value\r\n * @param {HTMLElement} element to toggle the visibility of\r\n * @param {Boolean} visisble value to set visibility to\r\n * @return {Boolean} is now visible \r\n */\r\nexport const setVisibility = (element, visisble) => {\r\n\telement.style.visibility = !visisble ? \"visible\" : \"hidden\"\r\n\treturn isVisible(element)\r\n}\r\n/**\r\n * toggle an element's visibility to the opposite of it's current state\r\n * @param {HTMLElement} element to toggle the visibility of\r\n * @return {Boolean} is now visible \r\n */\r\nexport const toggleVisibility = element => {\r\n\tconst isVisisble = isVisible(element)\r\n\tsetVisibility(element, !isVisisble)\r\n\treturn isVisible(element)\r\n}\r\n\r\n\r\n/**\r\n * is the video element currently visible on the screen?\r\n * @return {Boolean} visibility of video\r\n */\r\nexport const isVideoVisible = () => isVisible(video) \r\n\r\n/**\r\n * show or hide the video element\r\n * @param {Boolean} value to set the visibility to\r\n */\r\nexport const toggleVideoVisiblity = value => {\r\n\tconst currentlyVisible = setVisibility(video, value ? value : !isVideoVisible())\r\n\tconsole.error(\"toggling video vis\", {value, currentlyVisible})\r\n}\r\n\r\n\r\n/**\r\n * add a html fragment to a specific person's control panel\r\n * @param {HTMLElement} fragment as a quantity of beats per measure\r\n * @param {String} personName as a quantity of beats per measure\r\n */\r\nexport const setControls = (fragment, personName='person-a-controls') => {\r\n\t\r\n\tconst personControl = doc.getElementById(personName)\r\n\r\n\t// add to dom or replace existing????\r\n\tpersonControl.appendChild( fragment )\r\n\r\n\t// bind mouse events here???\r\n}\r\n\r\n/**\r\n * Add a select with all available cameras as a dropdown\r\n * @param {Array} cameras Collection of hardware cameras\r\n * @param {Function} callback Mehod to trigger when camera selected\r\n * @returns {Boolean} true if the user hit duet\r\n */\r\nexport const setupCameraForm = (cameras, callback) => {\r\n\t\r\n\tconst cameraForm = doc.getElementById(\"camera\")\r\n\tconst select = cameraForm.querySelector('#camera select')\r\n\r\n\t// loop through cameras and add to list\r\n\tconst optionElements = cameras.map( (camera, index) => `<option value=\"${camera.deviceId}\">${camera.label}</option>` )\r\n\t\t\t\r\n\t// we only inject into the select field\r\n\tselect.innerHTML = `<optgroup label=\"Detected Cameras\">${optionElements.join('')}</optgroup>`\r\n\tconnectSelect( select, callback )\r\n}\r\n/**\r\n * Create the markup required for one instrument\r\n *  \r\n * @param {*} folder \r\n * @param {*} instrumentName \r\n * @returns \r\n */\r\nconst createInstumentForForm = \r\n\t( folder, instrumentName ) => \r\n\t\t`<li><label for=\"${folder}\">${instrumentName}<input id=\"${folder}\" name=\"instrument-selector\" type=\"radio\" value=\"${folder}\"></input></label></li>`\r\nconst createInstumentFamilyForForm = \r\n\t( family, instruments ) => \r\n\t\t`<details open>\r\n\t\t\t<summary>${family}</summary>\r\n\t\t\t<menu>${uiOptions.join('')}</menu>\r\n\t\t</details>`\r\n\r\n/**\r\n * Setup the instrument list\r\n * @param {Function} callback Method to trigger when instument selected\r\n */\r\nexport const setupInstrumentForm = (instruments, packName='') => {\r\n\r\n\tlet output = `<legend>${packName} Select an instrument</legend>`\r\n\tlet family = instruments[0].family\r\n\tconst uiOptions = []// instruments.map( (instrument, index) => createInstumentForForm( instrument.location, instrument.name ) ) \r\n\t// add a title at the start...\r\n\t// uiOptions.unshift(\"<legend>Select an instrument</legend>\")\r\n\r\n\toutput += `<details open id=\"instrument-family-${family}\"><summary>${family}</summary><menu>`\r\n\r\n\t// now group them into families...\r\n\tinstruments.forEach( (instrument, index) => {\r\n\t\t\r\n\t\tconst form = createInstumentForForm( instrument.location, instrument.name )\r\n\t\toutput += form\r\n\t\tif (family !== instrument.family)\r\n\t\t{\r\n\t\t\r\n\t\t\tfamily = instrument.family\r\n\t\t\toutput += `</menu></details>`\r\n\t\t\toutput += `<details open id=\"instrument-family-${family}\"><summary>${family}</summary><menu>`\r\n\t\t}\r\n\t})\r\n\toutput += `</menu></details>`\r\n\treturn output\r\n}\r\n\r\n/**\r\n * Update the BPM on screen\r\n * @param {Number} tempo as a quantity of beats per measure\r\n */\r\nexport const updateTempo = tempo =>{\r\n\tconst b = doc.getElementById('input-tempo')\r\n\tif (b)\r\n\t{\r\n\t\tb.setAttribute(\"value\", tempo)\r\n\t}\r\n\tconsole.log(\"Setting tempo\", tempo)\r\n}\r\n\r\n/**\r\n * DOM elements on main app screen\r\n * @param {Object} options Configuration object\r\n */\r\nexport const setupInterface = ( options ) => {\r\n\tconst h1 = doc.querySelector(\"h1\")\r\n\t\r\n\tconst buttonShare = doc.getElementById(\"share\")\r\n\t// const buttonSolo = doc.getElementById(\"button-solo\")\r\n\t// const buttonDuet = doc.getElementById(\"button-duet\")\r\n\t// const title = doc.getElementById(\"title\")\r\n\t\r\n\tconst shareElement = doc.querySelector(\"share-menu\")\r\n\tshareElement.url = getShareLink( options )\r\n\tbuttonShare.addEventListener('click', e => {\r\n\t\tshareElement.setAttribute( \"url\", getShareLink( options ) )\r\n\t\t//console.error(\"SHARING\", {shareElement, url:shareElement.url  } )\r\n\t}, false)\r\n\t\r\n\tcontrolPanel = doc.getElementById(\"control-panel\")\r\n\r\n\tbuttonInstrument = doc.getElementById(\"button-instrument\")\r\n\tbuttonVideo = doc.getElementById(\"button-video\")\r\n\tbuttonRecord = doc.getElementById(\"button-record\")\r\n\tbuttonQuantise = doc.getElementById(\"button-quantise\")\r\n\t//buttonPhotograph = doc.getElementById(\"button-photograph\")\r\n\t\r\n\tif ( canFullscreen() )\r\n\t{\r\n\t\t//also pass this inott a flip flopper\r\n\t\tconst buttonFullscreen = setToggle( \"button-fullscreen\", status =>{\r\n\t\t\toptions.fullscreen = toggleFullScreen()\r\n\t\t\tbuttonFullscreen.classList.toggle(\"fs\", options.fullscreen)\r\n\t\t\t//console.log(\"fullscreen\", options.fullscreen)\r\n\t\t\t//setToast(\"Metronome \" + (ui.metronome ? 'enabled' : 'disabled')  )\r\n\t\t}, false )\r\n\t\r\n\t}else{\r\n\t\t// no full screen mode available so hide the full screen button\r\n\t\tdoc.getElementById( \"button-fullscreen\").classList.toggle(\"hide\", true)\r\n\t}\r\n\r\n\t// if (options.duet){\r\n\t// \th1.innerHTML += \":DUET\"\r\n\t// }\r\n\t\r\n\t// title.innerHTML = \"The InterFACE is ready, open your mouth to begin\"\r\n\t// Show the release date on the UI somewhere...\r\n\tconst versionElement = doc.getElementById(\"version\")\r\n\tconst currentVersion = versionElement.innerHTML\r\n\tversionElement.innerHTML = `${currentVersion} <span id=\"release\">${formattedDate}</span>`\r\n\t\r\n\t// console.log(`InterFACE ${currentVersion} build date : ${formattedDate} `, {DATE, releaseDate})\r\n\r\n\t// prevent the form from changing the url\t\r\n\tcontrolPanel.addEventListener(\"submit\", (event) => {\r\n\t\tevent.preventDefault()\r\n\t\t// removes the ?\r\n        //window.history.back()\r\n\t}, true)\r\n}\r\n\r\n/**\r\n * For accessibility, once the app has loaded we try and put the\r\n * user in the right place so that they can begin\r\n */\r\nexport const focusApp = ()=>{ \r\n\t\r\n}\r\n\r\n\r\n\r\n// showPersonalControlPanel( this.name, this.controls, this.instrumentName ) \r\nexport const showPersonalControlPanel = (playerName, controls, instrumentName) => {\r\n\t\r\n\tconst isCurrentlyOpen = controls.classList.contains(\"showing\",true)\r\n\t// find active input field and focus\r\n\tconst active = document.getElementById(instrumentName)\r\n\tif (active)\r\n\t{\r\n\t\tactive.focus()\r\n\t}else{\r\n\t\t// send focus to form?\r\n\t\tcontrols.focus()\r\n\t}\r\n\r\n\tconsole.log(\"SHOW Form\", {active, isCurrentlyOpen})\r\n\t// FIXME: Add aria-roles\r\n\tcontrols.classList.toggle(\"showing\",true)\r\n\tdocument.documentElement.classList.toggle(`${playerName}-sidebar-showing`,true)\r\n\r\n\treturn true\r\n}\r\n\r\nexport const hidePersonalControlPanel = (playerName, controls) => {\r\n\tconsole.log(\"HIDE Form\")\r\n\t\r\n\t//const inputs = this.controls.querySelectorAll('input')\r\n\t//inputs.forEach( input => input.removeEventListener('change',  this.onInstrumentInput))\r\n\t//this.controls.innerHTML = ''\r\n\tcontrols.classList.toggle(\"showing\",false)\r\n\tdocument.documentElement.classList.toggle(`${playerName}-sidebar-showing`,false)\r\n\t// setTimeout( ()=> this.controls.classList.toggle(\"showing\",false), 303 )\t\r\n\r\n\treturn false\r\n}","\r\nexport const canFullscreen = () => document.fullscreenEnabled || document.mozFullScreenEnabled || document.documentElement.webkitRequestFullScreen\r\n\r\nexport const exitFullscreen = () => {\r\n\tdocument.exitFullscreen()\r\n}\r\n\r\nexport const goFullscreen = (callback) => {\r\n\r\n\tif ( canFullscreen() ) \r\n\t{\r\n\t\tdocument.documentElement.requestFullscreen()\r\n\t}\r\n\t// leave full screen... \r\n}\r\n\r\nexport const toggleFullScreen = () => {\r\n\tif (!document.fullscreenElement) \r\n\t{\r\n\t\tgoFullscreen()\r\n\t\treturn true\r\n\r\n\t} else {\r\n\r\n\t  if (document.exitFullscreen) \r\n\t  {\r\n\t\texitFullscreen()\r\n\t  }\r\n\r\n\t  return false\r\n\t}\r\n}","import {setButton, setPressureButton} from './button'\r\n\r\n/**\r\n * this allows checkbox use to determine when the variable is changed\r\n * @param {HTMLElement} toggleName unique toggle name\r\n * @param {HTMLElement} callback method to call when selected toggle\r\n * @param {Boolean} value to set toggle to\r\n * @return {HTMLElement} is now visible \r\n */\r\nexport const setToggle = (toggleName, callback, value ) => {\r\n\t\r\n\tconst element = setButton( toggleName, ()=>{\r\n\t\tvalue = !value\r\n\t\t// add classes to any associated wrapped label\r\n\t\tif (element.parentNode.nodeName === \"LABEL\")\r\n\t\t{\r\n\t\t\telement.parentNode.classList.toggle(\"checked\", value )\r\n\t\t}\r\n\t\t//element.setAttribute(\"checked\", value)\r\n\t\tcallback(value)\r\n\t})\r\n\t// preset the button\r\n\tif (value)\r\n\t{\r\n\t\t// goto parent and add checked classes?\r\n\t\telement.setAttribute('checked', value)\r\n\t\telement.parentNode.classList.toggle(\"checked\", value )\r\n\t}\r\n\treturn element\r\n}\r\n\r\n// Same as regular toggle but if held down you get different outcome\r\nexport const setPressureToggle = (toggleName, tapCallback, holdCallback, holdingProgressCallback, value ) => {\r\n\r\n\tconst toggle = () => {\r\n\t\tvalue = !value\r\n\t\t// add classes to any associated wrapped label\r\n\t\tif (element.parentNode.nodeName === \"LABEL\")\r\n\t\t{\r\n\t\t\telement.parentNode.classList.toggle(\"checked\", value )\r\n\t\t}\r\n\t}\r\n\r\n\tconst element = setPressureButton( toggleName, \r\n\t\ttap =>{\r\n\t\t\ttoggle()\r\n\t\t\ttapCallback && tapCallback(value)\r\n\t\t},\r\n\t\thold => {\r\n\t\t\ttoggle()\r\n\t\t\tholdCallback && holdCallback(value)\r\n\t\t},\r\n\t\tholdingProgressCallback\r\n\t)\r\n\r\n\t// preset the button\r\n\telement.setAttribute('checked', value)\r\n\telement.parentNode.classList.toggle(\"checked\", value )\r\n\r\n\treturn element\r\n}","import {updateTempo} from './ui'\r\n\r\nexport const connectSelect = async (element,callback) => {\r\n\tconst select = typeof element === \"string\" ? document.getElementById(element) : element\r\n\t\r\n\tif (!select){\r\n\t\tthrow Error(\"No element found with that spec\")\r\n\t}\r\n\tselect.addEventListener( 'change', event=>{\r\n\t\t//const selection = select.options.selectedIndex\r\n\t\t// const option = select.childNodes[selection]\r\n\t\tconst option = select.options[select.selectedIndex || select.options.selectedIndex] \r\n\t\tcallback && callback (option)\r\n\t\tevent.preventDefault()\r\n\t})\r\n\r\n\treturn select\r\n}\r\n\r\nexport const connectPaletteSelector = (callback) => connectSelect('select-palette', callback )\r\nexport const connectReverbSelector = (callback) => connectSelect('select-impulse', callback )\r\n\r\nexport const connectTempoControls = (callback) => {\r\n\tconnectSelect('select-tempo', (option)=>{\r\n\t\tconst tempo = parseInt( option.innerHTML )\r\n\t\tupdateTempo(tempo)\r\n\t\tcallback && callback (tempo)\r\n\t} )\r\n}\r\n\r\n\r\nimport {loadImpulseJSON, DIRS, REVERB_PATHS} from '../audio/effects/reverb'\r\n\r\nconst path = './assets/audio/acoustics/'\t\r\n\r\n// Connect the options comand to the JSON files\r\nexport const connectReverbControls = (callback) => {\r\n\r\n\tconst ID = 'select-impulse'\r\n\tconst dirs = DIRS// REVERB_PATHS\r\n\t// inject\r\n\tconst options = document.getElementById( ID )\t\r\n\t// TODO: dir should flip depending on the item prefix\r\n\tif (options)\r\n\t{\t\t\t\t\r\n\t\tconst createOptionValues = (items, directory) => items.map( item => {\r\n\t\t\titem = item.trim()\r\n\t\t\tconst filePath = item\r\n\t\t\tconst fileName = item.substring( item.lastIndexOf(\"/\") + 1 )\r\n\t\t\tconst name = fileName.substring(0, fileName.lastIndexOf('.'))\r\n\t\t\t//const option = `<option value=\"verb\">reverbing</option>` \r\n\t\t\tconst option = `<option value=\"${filePath}\">${name}</option>` \r\n\t\t\treturn option\r\n\t\t}).join('\\n')\r\n\t\r\n\t\tconst maapped = dirs.map( async (dir) => {\r\n\t\t\ttry{\r\n\t\t\t\tconst json = await loadImpulseJSON(dir)\r\n\t\t\t\tconst option = createOptionValues( json, dir)\r\n\t\t\t\treturn `<optgroup>${dir}</optgroup>${option}`\t\r\n\t\t\t}catch(error){\r\n\t\t\t\tconsole.error(\"Couldn't load reverb impulse json\", error )\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tPromise.all(maapped).then( optionData => {\r\n\t\t\toptions.innerHTML = optionData.join('')\r\n\t\t})\r\n\t\r\n\t}else{\r\n\t\tconsole.error(\"Injecting impulse FAILED to \", {options, impulseList})\r\n\t}\r\n\r\n\treturn connectSelect( ID, (option)=> callback && callback(option) )\r\n}\r\n","import { addTooltip, removeTooltip } from \"./tooltips\"\r\n\r\n\r\nconst doc = document\r\n\r\n/**\r\n * This is the 2nd screen, just after loading\r\n * @param {Object} options Configuration object\r\n * @param {Object} state State object - used for preselecting options\r\n * @returns {Boolean} true if the user hit duet\r\n */\r\nexport const showPlayerSelector = (options, state) => new Promise( (resolve,reject)=>{\r\n\r\n\tconst CSS_CLASS = \"player-selection\"\r\n\tconst form = doc.getElementById(\"onboard\")\r\n\tconst panel = doc.getElementById(\"player-selector\")\r\n\tconst solo = panel.querySelector(\"#button-solo\")\r\n\tconst duet = panel.querySelector(\"#button-duet\")\r\n\tconst trio = panel.querySelector(\"#button-trio\")\r\n\tconst start =  doc.getElementById(\"button-start\")\r\n\tconst body = doc.documentElement\r\n\t\r\n\tconst advanced = panel.querySelector(\"#toggle-advanced-mode\")\r\n\tconst automation = panel.querySelector(\"#toggle-automation-mode\")\r\n\r\n\t// 1. We first set the state of the gadgets based on the query string set object \r\n\t//\t  passed in as a property\r\n\r\n\t// 2. We await an input from the user\r\n\r\n\t// determine state of the UI and update the DOM\r\n\tlet advancedMode = state.advancedMode\r\n\tlet automationMode = state.automationMode\r\n\tlet players = state.duet ? 2 : 1\r\n\r\n\tconst setPlayers = amount => {\r\n\t\tplayers = amount\r\n\t\tbody.classList.remove(\"solo\", \"duet\", \"trio\")\r\n\t\tbody.classList.add( players === 1 ? \"solo\" : \"duet\")\r\n\t}\r\n\r\n\tconst complete = result => {\r\n\t\t\r\n\t\t// if we are in solo mode\r\n\t\tif (result < 2)\r\n\t\t{\r\n\t\t\tsolo.classList.toggle( \"hide\", true)\r\n\t\t\tduet.classList.toggle( \"hide\", false)\r\n\t\t\t\r\n\t\t\tdoc.documentElement.classList.add(\"solo\")\r\n\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tduet.classList.toggle( \"hide\", true)\r\n\t\t\tsolo.classList.toggle( \"hide\", false)\r\n\t\t\t\r\n\t\t\tdoc.documentElement.classList.add(\"duet\")\r\n\t\t}\r\n\r\n\t\t// start the animation out.\r\n\t\t// NB. This is not superflous as the camera\r\n\t\t// takes a broze age to load into memory\r\n\t\tpanel.classList.add(\"completed\")\r\n\t\tbody.classList.toggle(CSS_CLASS, true)\r\n\t\t\t\r\n\t\t// wait for animation to complete\r\n\t\tsetTimeout( ()=> {\r\n\t\t\t//console.log({advancedMode})\r\n\t\t\tbody.classList.toggle('advanced', advancedMode)\r\n\t\t\tbody.classList.toggle(CSS_CLASS, false)\r\n\t\t\tpanel.classList.remove(\"completed\")\r\n\t\t}, 45 )\r\n\r\n\t\t// removeTooltip( start.parentElement )\r\n\t\t// removeTooltip( automation.parentElement )\r\n\t\t\r\n\t\tresolve({\r\n\t\t\tplayers:result,\r\n\t\t\tadvancedMode,\r\n\t\t\tautomationMode\r\n\t\t})\r\n\t}\r\n\r\n\tsolo.addEventListener(\"click\", event => setPlayers(1) )\r\n\tduet.addEventListener(\"click\", event => setPlayers(2) )\r\n\ttrio.addEventListener(\"click\", event => setPlayers(3) )\r\n\r\n\tadvanced.addEventListener(\"change\", event =>{ \r\n\t\tadvancedMode = !advancedMode \r\n\t\tbody.classList.toggle(\"beginner\", !advancedMode)\r\n\t})\r\n\t\r\n\tautomation.addEventListener(\"change\", event =>{ \r\n\t\tautomationMode = !automationMode \r\n\t\tbody.classList.toggle(\"automated\", automationMode)\r\n\t})\r\n\t\r\n\t// start.addEventListener(\"click\", event => {\r\n\t// \tevent.preventDefault()\r\n\t// \tcomplete(players)\r\n\t// \treturn false\r\n\t// } , true )\r\n\t\r\n\tform.addEventListener(\"submit\", (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tcomplete(players)\r\n\t\treturn false\r\n\t}, true)\r\n\t\r\n\t// update UI\r\n\tsetPlayers( players )\r\n\tadvanced.checked = !advancedMode\r\n\tautomation.checked = automationMode\r\n\tbody.classList.toggle(\"beginner\", !advancedMode)\r\n\tbody.classList.toggle(\"automated\", automationMode)\r\n\t\r\n\tswitch(players)\r\n\t{\t\t\r\n\t\tcase 2:\r\n\t\t\tduet.checked = true\r\n\t\t\tbreak\r\n\r\n\t\tcase 1:\r\n\t\tdefault:\r\n\t}\r\n\r\n\tbody.classList.toggle(CSS_CLASS, true)\r\n\r\n\t// add tooltips\r\n\t// addTooltip( start.parentElement )\r\n\t// addTooltip( automation.parentElement )\r\n\r\n\tpanel.focus()\r\n})\r\n","// inspired by\r\n// https://web.dev/building-a-dialog-component/\r\n// https://github.com/argyleink/gui-challenges/tree/main/dialog\r\nimport dialogPolyfill from 'dialog-polyfill'\r\n\r\n// custom events to be added to <dialog>\r\nconst dialogClosingEvent = new Event('closing')\r\nconst dialogClosedEvent  = new Event('closed')\r\nconst dialogOpeningEvent = new Event('opening')\r\nconst dialogOpenedEvent  = new Event('opened')\r\nconst dialogRemovedEvent = new Event('removed')\r\n\r\n// track opening\r\nconst dialogAttrObserver = new MutationObserver((mutations, observer) => {\r\n  mutations.forEach(async mutation => {\r\n    if (mutation.attributeName === 'open') {\r\n      const dialog = mutation.target\r\n\r\n      const isOpen = dialog.hasAttribute('open')\r\n      if (!isOpen) return\r\n\r\n      dialog.removeAttribute('inert')\r\n\r\n      // set focus\r\n      const focusTarget = dialog.querySelector('[autofocus]')\r\n      focusTarget\r\n        ? focusTarget.focus()\r\n        : dialog.querySelector('button').focus()\r\n\r\n      dialog.dispatchEvent(dialogOpeningEvent)\r\n      await animationsComplete(dialog)\r\n      dialog.dispatchEvent(dialogOpenedEvent)\r\n    }\r\n  })\r\n})\r\n\r\n// track deletion\r\nconst dialogDeleteObserver = new MutationObserver((mutations, observer) => {\r\n  mutations.forEach(mutation => {\r\n    mutation.removedNodes.forEach(removedNode => {\r\n      if (removedNode.nodeName === 'DIALOG') {\r\n        dialog.removeEventListener('click', lightDismiss)\r\n        dialog.removeEventListener('close', dialogClose)\r\n        removedNode.dispatchEvent(dialogRemovedEvent)\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\n// wait for all dialog animations to complete their promises\r\nconst animationsComplete = element =>\r\n  Promise.allSettled(element.getAnimations().map(animation => animation.finished))\r\n\r\n// click outside the dialog handler\r\nconst lightDismiss = ({target:dialog}) => {\r\n  if (dialog.nodeName === 'DIALOG')\r\n    dialog.close('dismiss')\r\n}\r\n\r\nconst dialogClose = async ({target:dialog}) => {\r\n  dialog.setAttribute('inert', '')\r\n  dialog.dispatchEvent(dialogClosingEvent)\r\n\r\n  await animationsComplete(dialog)\r\n\r\n  dialog.dispatchEvent(dialogClosedEvent)\r\n}\r\n\r\n// page load dialogs setup\r\nconst setupDialog = async (dialog) => {\r\n  dialog.addEventListener('click', lightDismiss)\r\n  dialog.addEventListener('close', dialogClose)\r\n\r\n  dialogAttrObserver.observe(dialog, { \r\n    attributes: true,\r\n  })\r\n\r\n  dialogDeleteObserver.observe(document.body, {\r\n    attributes: false,\r\n    subtree: false,\r\n    childList: true,\r\n  })\r\n\r\n  // remove loading attribute\r\n  // prevent page load @keyframes playing\r\n  await animationsComplete(dialog)\r\n  dialog.removeAttribute('loading')\r\n}\r\n\r\n// -------------------------------------------------------\r\n\r\nconst onDialogClosing = ({target:dialog}) => {\r\n\t// console.log('Dialog closing', dialog)\r\n}\r\n\r\nconst onDialogClosed = ({target:dialog}) => {\r\n\t// console.log('Dialog closed', dialog)\r\n\t// console.info('Dialog user action:', dialog.returnValue)\r\n\r\n\tif (dialog.returnValue === 'confirm') {\r\n\t\t// const dialogFormData = new FormData(dialog.querySelector('form'))\r\n\t\t// console.info('Dialog form data', Object.fromEntries(dialogFormData.entries()))\r\n\t\t// dialog.querySelector('form')?.reset()\r\n\t}\r\n}\r\n\r\nconst onDialogOpened = ({target:dialog}) => {\r\n\t// console.log('Dialog open', dialog)\r\n}\r\n\r\nconst onDialogOpening = ({target:dialog}) => {\r\n\t// console.log('Dialog opening', dialog)\r\n}\r\n\r\nconst onDialogRemoved = ({target:dialog}) => {\r\n\t// cleanup new/optional <dialog> events\r\n\tdialog.removeEventListener('closing', onDialogClosing)\r\n\tdialog.removeEventListener('closed', onDialogClosed)\r\n\tdialog.removeEventListener('opening', onDialogOpening)\r\n\tdialog.removeEventListener('opened', onDialogOpened)\r\n\tdialog.removeEventListener('removed', onDialogRemoved)\r\n}\r\n\r\n// ----------------------------------------------------\r\n\r\n// adds extra events and glosss to dialogs\r\nconst setupDialogs = () => {\r\n\r\n\tconst dialogs = document.querySelectorAll('dialog')\r\n\tdialogs.forEach( dialog => {\r\n\t\tdialogPolyfill.registerDialog(dialog) \r\n\t\tsetupDialog( dialog )\r\n\t\t\r\n\t\t// new/optional <dialog> events to choose from\r\n\t\tdialog.addEventListener('closing', onDialogClosing)\r\n\t\tdialog.addEventListener('closed', onDialogClosed)\r\n\t\tdialog.addEventListener('opening', onDialogOpening)\r\n\t\tdialog.addEventListener('opened', onDialogOpened)\r\n\t\tdialog.addEventListener('removed', onDialogRemoved)\r\n\t} )\t\r\n}\r\n\r\nexport default setupDialogs","// nb. This is for IE10 and lower _only_.\nvar supportCustomEvent = window.CustomEvent;\nif (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n  supportCustomEvent = function CustomEvent(event, x) {\n    x = x || {};\n    var ev = document.createEvent('CustomEvent');\n    ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n    return ev;\n  };\n  supportCustomEvent.prototype = window.Event.prototype;\n}\n\n/**\n * Dispatches the passed event to both an \"on<type>\" handler as well as via the\n * normal dispatch operation. Does not bubble.\n *\n * @param {!EventTarget} target\n * @param {!Event} event\n * @return {boolean}\n */\nfunction safeDispatchEvent(target, event) {\n  var check = 'on' + event.type.toLowerCase();\n  if (typeof target[check] === 'function') {\n    target[check](event);\n  }\n  return target.dispatchEvent(event);\n}\n\n/**\n * @param {Element} el to check for stacking context\n * @return {boolean} whether this el or its parents creates a stacking context\n */\nfunction createsStackingContext(el) {\n  while (el && el !== document.body) {\n    var s = window.getComputedStyle(el);\n    var invalid = function(k, ok) {\n      return !(s[k] === undefined || s[k] === ok);\n    };\n\n    if (s.opacity < 1 ||\n        invalid('zIndex', 'auto') ||\n        invalid('transform', 'none') ||\n        invalid('mixBlendMode', 'normal') ||\n        invalid('filter', 'none') ||\n        invalid('perspective', 'none') ||\n        s['isolation'] === 'isolate' ||\n        s.position === 'fixed' ||\n        s.webkitOverflowScrolling === 'touch') {\n      return true;\n    }\n    el = el.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the nearest <dialog> from the passed element.\n *\n * @param {Element} el to search from\n * @return {HTMLDialogElement} dialog found\n */\nfunction findNearestDialog(el) {\n  while (el) {\n    if (el.localName === 'dialog') {\n      return /** @type {HTMLDialogElement} */ (el);\n    }\n    if (el.parentElement) {\n      el = el.parentElement;\n    } else if (el.parentNode) {\n      el = el.parentNode.host;\n    } else {\n      el = null;\n    }\n  }\n  return null;\n}\n\n/**\n * Blur the specified element, as long as it's not the HTML body element.\n * This works around an IE9/10 bug - blurring the body causes Windows to\n * blur the whole application.\n *\n * @param {Element} el to blur\n */\nfunction safeBlur(el) {\n  // Find the actual focused element when the active element is inside a shadow root\n  while (el && el.shadowRoot && el.shadowRoot.activeElement) {\n    el = el.shadowRoot.activeElement;\n  }\n\n  if (el && el.blur && el !== document.body) {\n    el.blur();\n  }\n}\n\n/**\n * @param {!NodeList} nodeList to search\n * @param {Node} node to find\n * @return {boolean} whether node is inside nodeList\n */\nfunction inNodeList(nodeList, node) {\n  for (var i = 0; i < nodeList.length; ++i) {\n    if (nodeList[i] === node) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {HTMLFormElement} el to check\n * @return {boolean} whether this form has method=\"dialog\"\n */\nfunction isFormMethodDialog(el) {\n  if (!el || !el.hasAttribute('method')) {\n    return false;\n  }\n  return el.getAttribute('method').toLowerCase() === 'dialog';\n}\n\n/**\n * @param {!DocumentFragment|!Element} hostElement\n * @return {?Element}\n */\nfunction findFocusableElementWithin(hostElement) {\n  // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n  // alternative involves stepping through and trying to focus everything.\n  var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n  var query = opts.map(function(el) {\n    return el + ':not([disabled])';\n  });\n  // TODO(samthor): tabindex values that are not numeric are not focusable.\n  query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n  var target = hostElement.querySelector(query.join(', '));\n\n  if (!target && 'attachShadow' in Element.prototype) {\n    // If we haven't found a focusable target, see if the host element contains an element\n    // which has a shadowRoot.\n    // Recursively search for the first focusable item in shadow roots.\n    var elems = hostElement.querySelectorAll('*');\n    for (var i = 0; i < elems.length; i++) {\n      if (elems[i].tagName && elems[i].shadowRoot) {\n        target = findFocusableElementWithin(elems[i].shadowRoot);\n        if (target) {\n          break;\n        }\n      }\n    }\n  }\n  return target;\n}\n\n/**\n * Determines if an element is attached to the DOM.\n * @param {Element} element to check\n * @return {boolean} whether the element is in DOM\n */\nfunction isConnected(element) {\n  return element.isConnected || document.body.contains(element);\n}\n\n/**\n * @param {!Event} event\n * @return {?Element}\n */\nfunction findFormSubmitter(event) {\n  if (event.submitter) {\n    return event.submitter;\n  }\n\n  var form = event.target;\n  if (!(form instanceof HTMLFormElement)) {\n    return null;\n  }\n\n  var submitter = dialogPolyfill.formSubmitter;\n  if (!submitter) {\n    var target = event.target;\n    var root = ('getRootNode' in target && target.getRootNode() || document);\n    submitter = root.activeElement;\n  }\n\n  if (!submitter || submitter.form !== form) {\n    return null;\n  }\n  return submitter;\n}\n\n/**\n * @param {!Event} event\n */\nfunction maybeHandleSubmit(event) {\n  if (event.defaultPrevented) {\n    return;\n  }\n  var form = /** @type {!HTMLFormElement} */ (event.target);\n\n  // We'd have a value if we clicked on an imagemap.\n  var value = dialogPolyfill.imagemapUseValue;\n  var submitter = findFormSubmitter(event);\n  if (value === null && submitter) {\n    value = submitter.value;\n  }\n\n  // There should always be a dialog as this handler is added specifically on them, but check just\n  // in case.\n  var dialog = findNearestDialog(form);\n  if (!dialog) {\n    return;\n  }\n\n  // Prefer formmethod on the button.\n  var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n  if (formmethod !== 'dialog') {\n    return;\n  }\n  event.preventDefault();\n\n  if (value != null) {\n    // nb. we explicitly check against null/undefined\n    dialog.close(value);\n  } else {\n    dialog.close();\n  }\n}\n\n/**\n * @param {!HTMLDialogElement} dialog to upgrade\n * @constructor\n */\nfunction dialogPolyfillInfo(dialog) {\n  this.dialog_ = dialog;\n  this.replacedStyleTop_ = false;\n  this.openAsModal_ = false;\n\n  // Set a11y role. Browsers that support dialog implicitly know this already.\n  if (!dialog.hasAttribute('role')) {\n    dialog.setAttribute('role', 'dialog');\n  }\n\n  dialog.show = this.show.bind(this);\n  dialog.showModal = this.showModal.bind(this);\n  dialog.close = this.close.bind(this);\n\n  dialog.addEventListener('submit', maybeHandleSubmit, false);\n\n  if (!('returnValue' in dialog)) {\n    dialog.returnValue = '';\n  }\n\n  if ('MutationObserver' in window) {\n    var mo = new MutationObserver(this.maybeHideModal.bind(this));\n    mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n  } else {\n    // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n    // seem to fire even if the element was removed as part of a parent removal. Use the removed\n    // events to force downgrade (useful if removed/immediately added).\n    var removed = false;\n    var cb = function() {\n      removed ? this.downgradeModal() : this.maybeHideModal();\n      removed = false;\n    }.bind(this);\n    var timeout;\n    var delayModel = function(ev) {\n      if (ev.target !== dialog) { return; }  // not for a child element\n      var cand = 'DOMNodeRemoved';\n      removed |= (ev.type.substr(0, cand.length) === cand);\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(cb, 0);\n    };\n    ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n      dialog.addEventListener(name, delayModel);\n    });\n  }\n  // Note that the DOM is observed inside DialogManager while any dialog\n  // is being displayed as a modal, to catch modal removal from the DOM.\n\n  Object.defineProperty(dialog, 'open', {\n    set: this.setOpen.bind(this),\n    get: dialog.hasAttribute.bind(dialog, 'open')\n  });\n\n  this.backdrop_ = document.createElement('div');\n  this.backdrop_.className = 'backdrop';\n  this.backdrop_.addEventListener('mouseup'  , this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('mousedown', this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('click'    , this.backdropMouseEvent_.bind(this));\n}\n\ndialogPolyfillInfo.prototype = /** @type {HTMLDialogElement.prototype} */ ({\n\n  get dialog() {\n    return this.dialog_;\n  },\n\n  /**\n   * Maybe remove this dialog from the modal top layer. This is called when\n   * a modal dialog may no longer be tenable, e.g., when the dialog is no\n   * longer open or is no longer part of the DOM.\n   */\n  maybeHideModal: function() {\n    if (this.dialog_.hasAttribute('open') && isConnected(this.dialog_)) { return; }\n    this.downgradeModal();\n  },\n\n  /**\n   * Remove this dialog from the modal top layer, leaving it as a non-modal.\n   */\n  downgradeModal: function() {\n    if (!this.openAsModal_) { return; }\n    this.openAsModal_ = false;\n    this.dialog_.style.zIndex = '';\n\n    // This won't match the native <dialog> exactly because if the user set top on a centered\n    // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n    // possible to polyfill this perfectly.\n    if (this.replacedStyleTop_) {\n      this.dialog_.style.top = '';\n      this.replacedStyleTop_ = false;\n    }\n\n    // Clear the backdrop and remove from the manager.\n    this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n    dialogPolyfill.dm.removeDialog(this);\n  },\n\n  /**\n   * @param {boolean} value whether to open or close this dialog\n   */\n  setOpen: function(value) {\n    if (value) {\n      this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n    } else {\n      this.dialog_.removeAttribute('open');\n      this.maybeHideModal();  // nb. redundant with MutationObserver\n    }\n  },\n\n  /**\n   * Handles mouse events ('mouseup', 'mousedown', 'click') on the fake .backdrop element, redirecting them as if\n   * they were on the dialog itself.\n   *\n   * @param {!Event} e to redirect\n   */\n  backdropMouseEvent_: function(e) {\n    if (!this.dialog_.hasAttribute('tabindex')) {\n      // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n      // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n      // would not be needed - clicks would move the implicit cursor there.\n      var fake = document.createElement('div');\n      this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n      fake.tabIndex = -1;\n      fake.focus();\n      this.dialog_.removeChild(fake);\n    } else {\n      this.dialog_.focus();\n    }\n\n    var redirectedEvent = document.createEvent('MouseEvents');\n    redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n        e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n        e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n    this.dialog_.dispatchEvent(redirectedEvent);\n    e.stopPropagation();\n  },\n\n  /**\n   * Focuses on the first focusable element within the dialog. This will always blur the current\n   * focus, even if nothing within the dialog is found.\n   */\n  focus_: function() {\n    // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n    var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n    if (!target && this.dialog_.tabIndex >= 0) {\n      target = this.dialog_;\n    }\n    if (!target) {\n      target = findFocusableElementWithin(this.dialog_);\n    }\n    safeBlur(document.activeElement);\n    target && target.focus();\n  },\n\n  /**\n   * Sets the zIndex for the backdrop and dialog.\n   *\n   * @param {number} dialogZ\n   * @param {number} backdropZ\n   */\n  updateZIndex: function(dialogZ, backdropZ) {\n    if (dialogZ < backdropZ) {\n      throw new Error('dialogZ should never be < backdropZ');\n    }\n    this.dialog_.style.zIndex = dialogZ;\n    this.backdrop_.style.zIndex = backdropZ;\n  },\n\n  /**\n   * Shows the dialog. If the dialog is already open, this does nothing.\n   */\n  show: function() {\n    if (!this.dialog_.open) {\n      this.setOpen(true);\n      this.focus_();\n    }\n  },\n\n  /**\n   * Show this dialog modally.\n   */\n  showModal: function() {\n    if (this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n    }\n    if (!isConnected(this.dialog_)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n    }\n    if (!dialogPolyfill.dm.pushDialog(this)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n    }\n\n    if (createsStackingContext(this.dialog_.parentElement)) {\n      console.warn('A dialog is being shown inside a stacking context. ' +\n          'This may cause it to be unusable. For more information, see this link: ' +\n          'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n    }\n\n    this.setOpen(true);\n    this.openAsModal_ = true;\n\n    // Optionally center vertically, relative to the current viewport.\n    if (dialogPolyfill.needsCentering(this.dialog_)) {\n      dialogPolyfill.reposition(this.dialog_);\n      this.replacedStyleTop_ = true;\n    } else {\n      this.replacedStyleTop_ = false;\n    }\n\n    // Insert backdrop.\n    this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n    // Focus on whatever inside the dialog.\n    this.focus_();\n  },\n\n  /**\n   * Closes this HTMLDialogElement. This is optional vs clearing the open\n   * attribute, however this fires a 'close' event.\n   *\n   * @param {string=} opt_returnValue to use as the returnValue\n   */\n  close: function(opt_returnValue) {\n    if (!this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n    }\n    this.setOpen(false);\n\n    // Leave returnValue untouched in case it was set directly on the element\n    if (opt_returnValue !== undefined) {\n      this.dialog_.returnValue = opt_returnValue;\n    }\n\n    // Triggering \"close\" event for any attached listeners on the <dialog>.\n    var closeEvent = new supportCustomEvent('close', {\n      bubbles: false,\n      cancelable: false\n    });\n    safeDispatchEvent(this.dialog_, closeEvent);\n  }\n\n});\n\nvar dialogPolyfill = {};\n\ndialogPolyfill.reposition = function(element) {\n  var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n  var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n  element.style.top = Math.max(scrollTop, topValue) + 'px';\n};\n\ndialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n  for (var i = 0; i < document.styleSheets.length; ++i) {\n    var styleSheet = document.styleSheets[i];\n    var cssRules = null;\n    // Some browsers throw on cssRules.\n    try {\n      cssRules = styleSheet.cssRules;\n    } catch (e) {}\n    if (!cssRules) { continue; }\n    for (var j = 0; j < cssRules.length; ++j) {\n      var rule = cssRules[j];\n      var selectedNodes = null;\n      // Ignore errors on invalid selector texts.\n      try {\n        selectedNodes = document.querySelectorAll(rule.selectorText);\n      } catch(e) {}\n      if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n        continue;\n      }\n      var cssTop = rule.style.getPropertyValue('top');\n      var cssBottom = rule.style.getPropertyValue('bottom');\n      if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndialogPolyfill.needsCentering = function(dialog) {\n  var computedStyle = window.getComputedStyle(dialog);\n  if (computedStyle.position !== 'absolute') {\n    return false;\n  }\n\n  // We must determine whether the top/bottom specified value is non-auto.  In\n  // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n  // Firefox returns the used value. So we do this crazy thing instead: check\n  // the inline style and then go through CSS rules.\n  if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n      (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n    return false;\n  }\n  return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n};\n\n/**\n * @param {!Element} element to force upgrade\n */\ndialogPolyfill.forceRegisterDialog = function(element) {\n  if (window.HTMLDialogElement || element.showModal) {\n    console.warn('This browser already supports <dialog>, the polyfill ' +\n        'may not work correctly', element);\n  }\n  if (element.localName !== 'dialog') {\n    throw new Error('Failed to register dialog: The element is not a dialog.');\n  }\n  new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n};\n\n/**\n * @param {!Element} element to upgrade, if necessary\n */\ndialogPolyfill.registerDialog = function(element) {\n  if (!element.showModal) {\n    dialogPolyfill.forceRegisterDialog(element);\n  }\n};\n\n/**\n * @constructor\n */\ndialogPolyfill.DialogManager = function() {\n  /** @type {!Array<!dialogPolyfillInfo>} */\n  this.pendingDialogStack = [];\n\n  var checkDOM = this.checkDOM_.bind(this);\n\n  // The overlay is used to simulate how a modal dialog blocks the document.\n  // The blocking dialog is positioned on top of the overlay, and the rest of\n  // the dialogs on the pending dialog stack are positioned below it. In the\n  // actual implementation, the modal dialog stacking is controlled by the\n  // top layer, where z-index has no effect.\n  this.overlay = document.createElement('div');\n  this.overlay.className = '_dialog_overlay';\n  this.overlay.addEventListener('click', function(e) {\n    this.forwardTab_ = undefined;\n    e.stopPropagation();\n    checkDOM([]);  // sanity-check DOM\n  }.bind(this));\n\n  this.handleKey_ = this.handleKey_.bind(this);\n  this.handleFocus_ = this.handleFocus_.bind(this);\n\n  this.zIndexLow_ = 100000;\n  this.zIndexHigh_ = 100000 + 150;\n\n  this.forwardTab_ = undefined;\n\n  if ('MutationObserver' in window) {\n    this.mo_ = new MutationObserver(function(records) {\n      var removed = [];\n      records.forEach(function(rec) {\n        for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n          if (!(c instanceof Element)) {\n            continue;\n          } else if (c.localName === 'dialog') {\n            removed.push(c);\n          }\n          removed = removed.concat(c.querySelectorAll('dialog'));\n        }\n      });\n      removed.length && checkDOM(removed);\n    });\n  }\n};\n\n/**\n * Called on the first modal dialog being shown. Adds the overlay and related\n * handlers.\n */\ndialogPolyfill.DialogManager.prototype.blockDocument = function() {\n  document.documentElement.addEventListener('focus', this.handleFocus_, true);\n  document.addEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n};\n\n/**\n * Called on the first modal dialog being removed, i.e., when no more modal\n * dialogs are visible.\n */\ndialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n  document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n  document.removeEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.disconnect();\n};\n\n/**\n * Updates the stacking of all known dialogs.\n */\ndialogPolyfill.DialogManager.prototype.updateStacking = function() {\n  var zIndex = this.zIndexHigh_;\n\n  for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n    dpi.updateZIndex(--zIndex, --zIndex);\n    if (i === 0) {\n      this.overlay.style.zIndex = --zIndex;\n    }\n  }\n\n  // Make the overlay a sibling of the dialog itself.\n  var last = this.pendingDialogStack[0];\n  if (last) {\n    var p = last.dialog.parentNode || document.body;\n    p.appendChild(this.overlay);\n  } else if (this.overlay.parentNode) {\n    this.overlay.parentNode.removeChild(this.overlay);\n  }\n};\n\n/**\n * @param {Element} candidate to check if contained or is the top-most modal dialog\n * @return {boolean} whether candidate is contained in top dialog\n */\ndialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n  while (candidate = findNearestDialog(candidate)) {\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      if (dpi.dialog === candidate) {\n        return i === 0;  // only valid if top-most\n      }\n    }\n    candidate = candidate.parentElement;\n  }\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n  var target = event.composedPath ? event.composedPath()[0] : event.target;\n\n  if (this.containedByTopDialog_(target)) { return; }\n\n  if (document.activeElement === document.documentElement) { return; }\n\n  event.preventDefault();\n  event.stopPropagation();\n  safeBlur(/** @type {Element} */ (target));\n\n  if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n  var dpi = this.pendingDialogStack[0];\n  var dialog = dpi.dialog;\n  var position = dialog.compareDocumentPosition(target);\n  if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n    if (this.forwardTab_) {\n      // forward\n      dpi.focus_();\n    } else if (target !== document.documentElement) {\n      // backwards if we're not already focused on <html>\n      document.documentElement.focus();\n    }\n  }\n\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n  this.forwardTab_ = undefined;\n  if (event.keyCode === 27) {\n    event.preventDefault();\n    event.stopPropagation();\n    var cancelEvent = new supportCustomEvent('cancel', {\n      bubbles: false,\n      cancelable: true\n    });\n    var dpi = this.pendingDialogStack[0];\n    if (dpi && safeDispatchEvent(dpi.dialog, cancelEvent)) {\n      dpi.dialog.close();\n    }\n  } else if (event.keyCode === 9) {\n    this.forwardTab_ = !event.shiftKey;\n  }\n};\n\n/**\n * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n * removed and immediately readded don't stay modal, they become normal.\n *\n * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n */\ndialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n  // This operates on a clone because it may cause it to change. Each change also calls\n  // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n  // at a time?!\n  var clone = this.pendingDialogStack.slice();\n  clone.forEach(function(dpi) {\n    if (removed.indexOf(dpi.dialog) !== -1) {\n      dpi.downgradeModal();\n    } else {\n      dpi.maybeHideModal();\n    }\n  });\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n * @return {boolean} whether the dialog was allowed\n */\ndialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n  var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n  if (this.pendingDialogStack.length >= allowed) {\n    return false;\n  }\n  if (this.pendingDialogStack.unshift(dpi) === 1) {\n    this.blockDocument();\n  }\n  this.updateStacking();\n  return true;\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n */\ndialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n  var index = this.pendingDialogStack.indexOf(dpi);\n  if (index === -1) { return; }\n\n  this.pendingDialogStack.splice(index, 1);\n  if (this.pendingDialogStack.length === 0) {\n    this.unblockDocument();\n  }\n  this.updateStacking();\n};\n\ndialogPolyfill.dm = new dialogPolyfill.DialogManager();\ndialogPolyfill.formSubmitter = null;\ndialogPolyfill.imagemapUseValue = null;\n\n/**\n * Installs global handlers, such as click listers and native method overrides. These are needed\n * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n */\nif (window.HTMLDialogElement === undefined) {\n\n  /**\n   * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n   * one that returns the correct value.\n   */\n  var testForm = document.createElement('form');\n  testForm.setAttribute('method', 'dialog');\n  if (testForm.method !== 'dialog') {\n    var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n    if (methodDescriptor) {\n      // nb. Some older iOS and older PhantomJS fail to return the descriptor. Don't do anything\n      // and don't bother to update the element.\n      var realGet = methodDescriptor.get;\n      methodDescriptor.get = function() {\n        if (isFormMethodDialog(this)) {\n          return 'dialog';\n        }\n        return realGet.call(this);\n      };\n      var realSet = methodDescriptor.set;\n      /** @this {HTMLElement} */\n      methodDescriptor.set = function(v) {\n        if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n          return this.setAttribute('method', v);\n        }\n        return realSet.call(this, v);\n      };\n      Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n    }\n  }\n\n  /**\n   * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n   * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n   * document.activeElement.\n   */\n  document.addEventListener('click', function(ev) {\n    dialogPolyfill.formSubmitter = null;\n    dialogPolyfill.imagemapUseValue = null;\n    if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n    var target = /** @type {Element} */ (ev.target);\n    if ('composedPath' in ev) {\n      var path = ev.composedPath();\n      target = path.shift() || target;\n    }\n    if (!target || !isFormMethodDialog(target.form)) { return; }\n\n    var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n    if (!valid) {\n      if (!(target.localName === 'input' && target.type === 'image')) { return; }\n      // this is a <input type=\"image\">, which can submit forms\n      dialogPolyfill.imagemapUseValue = ev.offsetX + ',' + ev.offsetY;\n    }\n\n    var dialog = findNearestDialog(target);\n    if (!dialog) { return; }\n\n    dialogPolyfill.formSubmitter = target;\n\n  }, false);\n\n  /**\n   * Global 'submit' handler. This handles submits of `method=\"dialog\"` which are invalid, i.e.,\n   * outside a dialog. They get prevented.\n   */\n  document.addEventListener('submit', function(ev) {\n    var form = ev.target;\n    var dialog = findNearestDialog(form);\n    if (dialog) {\n      return;  // ignore, handle there\n    }\n\n    var submitter = findFormSubmitter(ev);\n    var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n    if (formmethod === 'dialog') {\n      ev.preventDefault();\n    }\n  });\n\n  /**\n   * Replace the native HTMLFormElement.submit() method, as it won't fire the\n   * submit event and give us a chance to respond.\n   */\n  var nativeFormSubmit = HTMLFormElement.prototype.submit;\n  var replacementFormSubmit = function () {\n    if (!isFormMethodDialog(this)) {\n      return nativeFormSubmit.call(this);\n    }\n    var dialog = findNearestDialog(this);\n    dialog && dialog.close();\n  };\n  HTMLFormElement.prototype.submit = replacementFormSubmit;\n}\n\nexport default dialogPolyfill;\n","import {debounce} from '../utils'\r\n\r\n/**\r\n * updates the text on screen and hides it after a time out \r\n * here we take an element and return a method to set it\r\n * @param {HTMLElement} element DOM element to bind to\r\n * @param {Number} rate typing rate in characters per second\r\n * @param {Number} clearAfter clear word after x ms\r\n * @returns {Boolean} split if the user hit duet\r\n */\r\nexport const bindTextElement = (element, rate=700, clearAfter=0, split=false) => {\r\n\t\r\n\tlet cachedMessage = null\r\n\tlet interval = -1\r\n\tlet clearInterval = -1\r\n\tlet currentMessage = null\r\n\t\r\n\tconst db = debounce((message)=>{\r\n\t\telement.innerHTML = message\r\n\t}, rate)\r\n\r\n\t//\r\n\tconst clear = (rate) => {\r\n\t\tconst after = clearAfter * rate\r\n\t\tclearInterval = setTimeout(()=>{\r\n\t\t\telement.innerHTML = ''\r\n\t\t}, after)\r\n\t\treturn after\r\n\t}\r\n\t\r\n\treturn element ? (message, responseRate=rate, showFlasher=true ) => {\r\n\r\n\t\tif (split)\r\n\t\t{\r\n\t\t\tmessage = message.split(/!|\\./i).join(\"<br>\")\r\n\t\t}\r\n\r\n\t\tif (!showFlasher){\r\n\t\t\t// FIXME: Hide the cursor indicator\r\n\t\t}\r\n\r\n\t\tcurrentMessage = message\r\n\t\t// debounce and only change if var has\r\n\t\tif (element.innerHTML === '' || cachedMessage != message)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t// prevent it blanking from previous request\r\n\t\t\tclearTimeout(clearInterval)\r\n\r\n\t\t\tcachedMessage = message\r\n\t\t\tif (responseRate === 0)\r\n\t\t\t{\r\n\t\t\t\t// instant overwrite\r\n\t\t\t\tclearTimeout(interval)\r\n\t\t\t\telement.innerHTML = message\r\n\t\t\t}else{\r\n\t\t\t\t// change it after debounce timeout to prevent flooding\r\n\t\t\t\tinterval = db(message)\t\t\t\t\r\n\t\t\t}\r\n\t\t\t// clear after wards unless intercepted...\r\n\t\t\tif (clearAfter > 0)\r\n\t\t\t{\r\n\t\t\t\tclearInterval = clear(message.length)\r\n\t\t\t}\r\n\t\t}\r\n\t} : null\r\n}\r\n\r\n\r\n/**\r\n * Create a method that controls the feedback element remotely\r\n * @param {HTMLElement} controls DOM element to search within\r\n * @param {String} query query selector for finding the elements to bind to\r\n */\r\nexport const setFeedback = bindTextElement( document.getElementById(\"feedback\"), 20 )\r\n","import { now } from '../timing/timing.js'\r\nimport { getCanvasDimensions } from '../visual/canvas'\r\nimport { takePhotograph } from '../visual/2d'\r\n\r\nexport const createPhotographElement = () => {\r\n\tconst unique = Math.ceil( now() * 10000000 )\r\n\tconst id = `photograph-${unique}`\r\n\tconst dimensions = getCanvasDimensions()\r\n\tconst img = new Image()\r\n\timg.src = takePhotograph()\r\n\timg.alt = \"Photograph taken \" + Date.now().toString()\r\n\timg.width = dimensions.width\r\n\timg.height = dimensions.height\r\n\r\n\tconst anchor = document.createElement(\"a\")\r\n\tanchor.href = img.src\r\n\tanchor.innerHTML = `Click to download this photograph`\r\n\tanchor.id = id\r\n\tanchor.download = `snapshot-${unique}.png`\r\n\tanchor.appendChild(img)\r\n\r\n\t//document.getElementById(\"photographs\").appendChild(anchor)\r\n\treturn anchor\r\n}\r\n\r\n\r\nexport const appendPhotographElement = () => {\r\n\tconst photo = createPhotographElement()\r\n\tdocument.getElementById(\"photographs\").appendChild( photo )\r\n\t// Scroll the photograph frame into view\r\n\trequestAnimationFrame( ()=>document.getElementById(photo.id).scrollIntoView() )\r\n}","\r\n/**\r\n * Todo: remove all individual canvas references\r\n */\r\n\r\nexport const canvas = document.getElementById('interface')\r\nexport const canvasContext = canvas.getContext('2d')\r\n\r\nlet width = canvas.width\r\nlet height = canvas.height\r\n\r\nexport const updateCanvasSize = (w,h) => {\r\n\twidth = w ?? canvas.width\r\n\theight = h ?? canvas.height\r\n\t// console.error(\"Updated canvas size to\", {w,h}, canvas.width, canvas.height)\r\n}\r\n\r\nexport const getCanvasDimensions = () => { \r\n\treturn {\r\n\t\twidth, height\r\n\t}\r\n}\r\n\r\n/**\r\n * Empty the canvas and paint it transparent\r\n */\r\nexport const clear = (canvasContext) => {\r\n\t// canvasContext.fillStyle = 'rgba(255,0,0,0)'\r\n\t//canvasContext.clearRect(0, 0, width, height)\r\n\t// canvasContext.fillRect(0, 0, width, height)\r\n\t// canvasContext.restore()\r\n}\r\n\r\n/**\r\n * Overwrite the existing canvas with the same one but\r\n * positioned at a specific offset to make it look cool\r\n * @param {Number} x \r\n * @param {Number} y \r\n */\r\nexport const overdraw = (ctx, x=0, y=-1) => {\r\n\t\r\n\t// ctx.save()\r\n\t\r\n\t//ctx.translate(0, -1)\r\n\tctx.drawImage(canvas,x,y)\r\n\t// for (var i = 0; i < numImages; i++) {\r\n\t// \tctx.drawImage(img, i * img.width, 0);\r\n\t// }\r\n\r\n\r\n\t// ctx.restore()\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n// FIXME: Wrap in ty catch always\r\n//////////////////////////////////////////////////////////////////////\r\nexport const copyCanvasToClipboard = async () => canvas.toBlob(async (blob) => {\r\n\tawait navigator.clipboard.write([ new ClipboardItem({ [blob.type]:blob }) ])\r\n})\r\n\r\n\r\nexport const drawElement = (ctx, element, x=0, y=0, flip=true) => {\r\n\t\r\n\tctx.save()\r\n\t// invert horizontally (mirror image)\r\n\tif (flip){\r\n\t\tctx.translate(width, 0)\r\n\t\tctx.scale(-1, 1)\r\n\t}\r\n\tctx.drawImage(element , x, y)\r\n\tctx.restore()\r\n}\r\n\r\n/**\r\n * Draws a rounded rectangle using the current state of the canvas.\r\n * If you omit the last three params, it will draw a rectangle\r\n * outline with a 5 pixel border radius\r\n * @param {CanvasRenderingContext2D} ctx\r\n * @param {Number} x The top left x coordinate\r\n * @param {Number} y The top left y coordinate\r\n * @param {Number} width The width of the rectangle\r\n * @param {Number} height The height of the rectangle\r\n * @param {Number} [radius = 5] The corner radius; It can also be an object \r\n *                 to specify different radii for corners\r\n * @param {Number} [radius.tl = 0] Top left\r\n * @param {Number} [radius.tr = 0] Top right\r\n * @param {Number} [radius.br = 0] Bottom right\r\n * @param {Number} [radius.bl = 0] Bottom left\r\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\r\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\r\n */\r\n export const drawRoundedRect = (\r\n\tctx,\r\n\tx,\r\n\ty,\r\n\twidth,\r\n\theight,\r\n\tradius = 5,\r\n\tfill = false,\r\n\tstroke = true\r\n  ) => {\r\n\tif (typeof radius === 'number') {\r\n\t  radius = {tl: radius, tr: radius, br: radius, bl: radius}\r\n\t} else {\r\n\t  radius = {...{tl: 0, tr: 0, br: 0, bl: 0}, ...radius}\r\n\t}\r\n\tctx.beginPath()\r\n\tctx.moveTo(x + radius.tl, y)\r\n\tctx.lineTo(x + width - radius.tr, y)\r\n\tctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\r\n\tctx.lineTo(x + width, y + height - radius.br)\r\n\tctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height)\r\n\tctx.lineTo(x + radius.bl, y + height)\r\n\tctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\r\n\tctx.lineTo(x, y + radius.tl)\r\n\tctx.quadraticCurveTo(x, y, x + radius.tl, y)\r\n\tctx.closePath()\r\n\tif (fill) {\r\n\t  ctx.fill()\r\n\t}\r\n\tif (stroke) {\r\n\t  ctx.stroke()\r\n\t}\r\n  }","import { clamp, TAU, HALF_PI , TWO_PI } from \"../maths/maths\"\r\nimport { canvas, canvasContext } from './canvas'\r\nimport { easeInQuad} from \"../maths/easing\"\r\nimport PALETTE, { DEFAULT_COLOURS } from \"../palette\"\r\n\r\nimport {TRIANGULATION} from '../models/face-mesh-constants'\r\n\r\n/**\r\n * converts the canvas into a PNG / JPEG and adds returns as a blob?\r\n * @param {String} type \r\n * @returns Blob\r\n */\r\nexport const takePhotograph = (type=\"image/png\") => {\r\n\t// TODO: reassemble canvas with logo and stuff?\r\n\treturn canvas.toDataURL(type)\r\n}\r\n\r\n/**\r\n * Create a 2D path object\r\n * @param {Array<Object>} points - 2D array {x,y}\r\n * @param {Boolean} closePath \r\n * @returns \r\n */\r\nexport const drawPath = ( points, closePath=false ) => {\r\n\tconst region = new Path2D()\r\n\tregion.moveTo(points[0].x, points[0].y)\r\n\t\r\n\tfor (let i = 1; i < points.length; ++i) \r\n\t{\r\n\t  const point = points[i]\r\n\t  region.lineTo(point.x, point.y)\r\n\t}\r\n  \r\n\tif (closePath) \r\n\t{\r\n\t  region.closePath()\r\n\t}\r\n\r\n\tcanvasContext.stroke(region)\r\n\treturn region\r\n}\r\n\r\n/**\r\n * Draws a specific part by looping through the part array and \r\n * connecting the nodes together with paths\r\n * @param {Array} keypoints \r\n * @param {Number} nodeRadius \r\n * @param {String} strokeStyle \r\n * @param {Boolean} lines \r\n * @param {Boolean} fill \r\n * @param {Boolean} showNumbers \r\n * @param {Color} fillStyle \r\n * @param {Number} strokeWidth \r\n */\r\nexport const drawPart = (keypoints, nodeRadius=0, strokeStyle=\"red\", lines=true, fill=true, showNumbers=false, fillStyle=\"rgba(255,0,0,0.5)\", strokeWidth=1 ) => {\r\n\t\r\n\t// console.error(\"Keypoints\", keypoints)\r\n\tconst length = keypoints.length\r\n\tlet piece = keypoints[0]\r\n\r\n\tcanvasContext.moveTo(piece.x, piece.y)\r\n\r\n\tcanvasContext.fillStyle  = fillStyle || strokeStyle\r\n\tcanvasContext.strokeStyle = strokeStyle\r\n\tcanvasContext.strokeWidth = strokeWidth\r\n\r\n\tcanvasContext.beginPath()\r\n\r\n\tfor (let i = 0; i < length; ++i) \r\n\t{\r\n\t\tpiece = keypoints[i]\r\n\r\n\t\tconst x = piece.x\r\n\t\tconst y = piece.y\r\n\t\r\n\t\t// draw blob\r\n\t\tif (nodeRadius > 0)\r\n\t\t{\r\n\t\t\tcanvasContext.arc(x, y, nodeRadius, 0, TAU)\r\n\t\t}\r\n\t\t\r\n\t\t// onnecting lines\r\n\t\tif (lines)\r\n\t\t{\r\n\t\t\tcanvasContext.lineTo(x, y)\r\n\t\t}\r\n\t}\t\r\n\r\n\t// if we want a filled shape\r\n\tif (fill)\r\n\t{\r\n\t\tcanvasContext.fill()\r\n\t}\r\n\t\r\n\tif (lines)\r\n\t{\r\n\t\tcanvasContext.stroke()\r\n\t}\r\n\t\r\n\tif (showNumbers)\r\n\t{\r\n\t\t// every second number\r\n\t\tfor (let i = 0; i < length; i += 2 ) \r\n\t\t{\r\n\t\t\tpiece = keypoints[i]\r\n\t\t\tcanvasContext.stroke( )\r\n\t\t\tcanvasContext.font = \"18px Oxanium\"\r\n\t\t\tcanvasContext.textAlign = \"center\"\r\n\t\t\tcanvasContext.fillStyle = PALETTE.dark\r\n\t\t\tcanvasContext.fillText(`#${i}`, piece.x, piece.y  )\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Draw a canvas circle\r\n * @param {Number} cx \r\n * @param {Number} cy \r\n * @param {Number} radius \r\n * @param {Number} strokeWidth \r\n * @param {Number} fillColour \r\n * @param {Number} strokeColour \r\n */\r\nexport const drawCircle = (cx,cy, radius=5, strokeWidth=3, fillColour='#FF6A6A', strokeColour=\"#FF0000\") => {\r\n\t\r\n\tcanvasContext.beginPath()\r\n    canvasContext.arc(cx, cy, radius, 0, TWO_PI, true)\r\n    canvasContext.fillStyle = fillColour\r\n    canvasContext.fill()\r\n     \r\n\tif (strokeWidth)\r\n\t{\r\n\t\t// draw the stroke\r\n\t\tcanvasContext.lineWidth = strokeWidth\r\n\t\tcanvasContext.strokeStyle = strokeColour\r\n\t\tcanvasContext.stroke()\r\n\t}\r\n\tcanvasContext.closePath()\r\n}\r\n\r\n/**\r\n * draws a three pointed shape \r\n * @param {Number} x1 \r\n * @param {Number} y1 \r\n * @param {Number} x2 \r\n * @param {Number} y2 \r\n * @param {Number} x3 \r\n * @param {Number} y3 \r\n * @param {Number} fill \r\n * @param {Number} strokeWidth \r\n */\r\nexport const drawTriangle = ( x1, y1, x2, y2, x3, y3, fill, strokeWidth=1 ) => {\r\n\t\r\n\tcanvasContext.beginPath()\r\n\r\n\tcanvasContext.lineWidth = strokeWidth\r\n\tcanvasContext.strokeStyle = fill\r\n\r\n\tcanvasContext.moveTo( x1, y1 )\r\n\tcanvasContext.lineTo( x2, y2 )\r\n\tcanvasContext.lineTo( x3, y3 )\r\n\r\n\tcanvasContext.closePath()\r\n\r\n\t// canvasContext.fillStyle\r\n\r\n\t// canvasContext.lineTo( x1, y1 )\r\n\tcanvasContext.stroke()\r\n}\r\n\r\n/**\r\n * Highlight a specific node\r\n * @param {*} pointA \r\n * @param {*} radius \r\n * @param {*} fill \r\n */\r\nexport const drawNode = (point, radius=5, fill=\"blue\", text='', fontSize=\"12px\", strokeWidth=2 ) => {\r\n\t\r\n\tdrawCircle( point.x, point.y, radius, strokeWidth, fill)\r\n\r\n\tif (text.length > 0)\r\n\t{\r\n\t\tdrawText( point.x, point.y, text, fontSize )\r\n\t}\r\n}\r\n\r\n/**\r\n * draw a line with a ball on either end\r\n * @param {Object} pointA \r\n * @param {Object} pointB \r\n * @param {Number} radius \r\n * @param {Number} fill \r\n */\r\nexport const drawNodes = (pointA, pointB, radius=5, fill=\"blue\", strokeWidth=2 ) => {\r\n\t\r\n\t// first circle\r\n\tdrawCircle( pointA.x, pointA.y, radius, strokeWidth, fill)\r\n\r\n\t// 2nd circle\r\n\tdrawCircle( pointB.x, pointB.y, radius, strokeWidth, fill)\r\n\t\r\n\t// connecting line\r\n\tcanvasContext.beginPath()\t\r\n\tcanvasContext.strokeStyle = PALETTE.orange\r\n\tcanvasContext.moveTo(pointA.x, pointA.y)\r\n\tcanvasContext.lineTo(pointB.x, pointB.y)\r\n\tcanvasContext.stroke()\r\n\tcanvasContext.closePath()\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n// Add a string of text to the canvas\r\n//////////////////////////////////////////////////////////////////////\r\nexport const drawText = (x, y, text='', size='10px', align=\"center\") => {\r\n\tconst f = false\r\n\tcanvasContext.font = `900 ${size} Oxanium`\r\n\tcanvasContext.textAlign = align\r\n\tcanvasContext.fillStyle = f ? PALETTE.dark :  PALETTE.white\r\n\tcanvasContext.strokeStyle  = f ? PALETTE.white : PALETTE.dark\r\n\tcanvasContext.strokeText(`${text}`, x,y )\r\n\tcanvasContext.fillText(`${text}`, x, y )\r\n}\r\n\r\n// multi line\r\nexport const drawParagraph = (x, y, paragraph=[], size='8px', lineHeight=20) => {\r\n\tlet textY = y\r\n\tfor (const p of paragraph)\r\n\t{\r\n\t\tdrawText( x, textY, p, size, \"left\" )\r\n\t\ttextY += lineHeight\r\n\t}\r\n}\r\n\r\n/**\r\n * Write out the intstrument text\r\n * @param {*} boundingBox \r\n * @param {*} instrumentName \r\n * @param {*} extra \r\n */\r\nexport const drawInstrument = (boundingBox, instrumentName, extra='') => {\r\n\r\n\t// use prediction.boundingBox to position text\r\n\tconst text = `${instrumentName.toUpperCase()} - ${extra}`\r\n\t// canvasContext.beginPath()\r\n\t// these aren't scaled :(\r\n\t// canvasContext.fillStyle  = colour\r\n\t// canvasContext.rect( boundingBox.xMin boundingBox.yMin, boundingBox.xMax, boundingBox.yMax )\r\n\t// canvasContext.strokeRect( boundingBox.xMin, boundingBox.yMin, boundingBox.xMax, boundingBox.yMax )\r\n\t// canvasContext.fill()\r\n\tdrawText( boundingBox.xMin, boundingBox.yMin, text, \"24px\" )\r\n}\r\n\r\n/**\r\n * Draw a rectangle at the set position and dimension\r\n * @param {*} boundingBox \r\n * @param {*} colour \r\n */\r\nexport const drawBoundingBox = (boundingBox, colour='red') => {\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.fillStyle  = colour\r\n\tcanvasContext.strokeRect( boundingBox.xMin, boundingBox.yMin, boundingBox.xMax, boundingBox.yMax )\r\n\tcanvasContext.fill()\r\n}\r\n\r\n\r\nlet nodeCount = 0\r\nexport const setNodeCount = value => nodeCount += value\r\n\r\nlet cycleCounter = 0\r\n\r\n// shape the bump sizes\r\nconst modifier = easeInQuad\r\n\r\n/**\r\n * Just draws lots of dots on an image on the canvas\r\n * @param {*} prediction \r\n * @param {*} colour \r\n * @param {*} size \r\n * @param {*} colourCycle \r\n * @param {*} showText \r\n */\r\nexport const drawPoints = (prediction, colour={h:0,s:100,l:100}, size=3, colourCycle=false, showText=true) => {\r\n\r\n\tconst scaledMesh = prediction.keypoints\r\n\tconst quantity = scaledMesh.length\r\n\t\r\n\t// draw face points at correct position on canvas\r\n\tfor (let i = 0; i < quantity; i++) \r\n\t{\r\n\t\tconst x = scaledMesh[i].x\r\n\t\tconst y = scaledMesh[i].y\r\n\t\tconst z = scaledMesh[i].z || 1\r\n\t\t// z index should not be considered as depth as we\r\n\t\t// start from the front and head back\r\n\t\t\r\n\t\t// const depth = size * ( z + 2) * 0.1\r\n\t\tconst depth =  (1 - ( ((z+45) / 45)) )//* 0.1\r\n\t\t\r\n\t\tconst radius = clamp(size * modifier(depth), 1, size)\r\n\t\tconst alpha = clamp( depth, 0.5, 1)\r\n\t\t// console.log({depth,radius,alpha})\r\n\t\t// const radius = size * Math.abs(10 - z) * 0.1\r\n\t\tcanvasContext.beginPath()\r\n\t\t\r\n\t\t// This just draws the number of the node\r\n\t\tif (showText && ( i === (nodeCount % quantity) ))\r\n\t\t{\r\n\t\t\tcanvasContext.stroke( )\r\n\t\t\tcanvasContext.font = \"22px Oxanium\"\r\n\t\t\tcanvasContext.textAlign = \"center\"\r\n\t\t\tcanvasContext.fillStyle = PALETTE.dark\r\n\t\t\tcanvasContext.fillText(`#${i}`, x + radius + 1, y  )\r\n\t\t\t\r\n\t\t\tcanvasContext.fillStyle = `hsla(0,90%,70%,1)`\r\n\t\t\tcanvasContext.arc(x, y, radius * 3, 0, TAU)\r\n\t\t}else{\r\n\t\t\tconst hue = colour.h\r\n\t\t\tconst modifiedHue = colourCycle ? ((cycleCounter++)+hue+360*i/quantity)%360 : hue\r\n\t\t\tcanvasContext.fillStyle = `hsla(${modifiedHue},${colour.s}%,${colour.l}%,${alpha})`\r\n\t\t\tcanvasContext.arc(x, y, radius, 0, TAU)\r\n\t\t}\r\n\r\n\t\tcanvasContext.fill()\r\n\t}\r\n}\r\n\r\n/**\r\n * Draws a triangulated face using the matrix model\r\n */\r\nexport const drawFaceMesh = (prediction, palette={h:0,s:100,l:100}, strokeWidth=0.5, colourCycle=false, alpha=0.2 ) => {\r\n\tconst scaledMesh = prediction.keypoints\r\n\tconst hue = palette.h\r\n\tfor( let i = 0, q=TRIANGULATION.length - 2; i < q; i+=3 ) \r\n\t{\r\n\t\tconst pointA = scaledMesh[ TRIANGULATION[ i ] ]\r\n\t\tconst pointB = scaledMesh[ TRIANGULATION[ i + 1 ] ]\r\n\t\tconst pointC = scaledMesh[ TRIANGULATION[ i + 2 ] ]\r\n\t\tconst alpha = palette.a || 1\r\n\t\t\r\n\t\tconst phase = colourCycle ? (hue + ( 360 * i/q )) % 360 : hue\r\n\t\tconst colour = `hsla(${phase},${palette.s}%,${palette.l}%,${alpha})`\r\n\r\n\t\tdrawTriangle( pointA.x, pointA.y, pointB.x, pointB.y, pointC.x, pointC.y, colour, strokeWidth )\r\n\t}\r\n}","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\n export const TRIANGULATION = [\r\n    127, 34, 139, 11, 0, 37, 232, 231, 120, 72, 37, 39, 128, 121, 47, 232, 121,\r\n    128, 104, 69, 67, 175, 171, 148, 157, 154, 155, 118, 50, 101, 73, 39, 40, 9,\r\n    151, 108, 48, 115, 131, 194, 204, 211, 74, 40, 185, 80, 42, 183, 40, 92,\r\n    186, 230, 229, 118, 202, 212, 214, 83, 18, 17, 76, 61, 146, 160, 29, 30, 56,\r\n    157, 173, 106, 204, 194, 135, 214, 192, 203, 165, 98, 21, 71, 68, 51, 45, 4,\r\n    144, 24, 23, 77, 146, 91, 205, 50, 187, 201, 200, 18, 91, 106, 182, 90, 91,\r\n    181, 85, 84, 17, 206, 203, 36, 148, 171, 140, 92, 40, 39, 193, 189, 244,\r\n    159, 158, 28, 247, 246, 161, 236, 3, 196, 54, 68, 104, 193, 168, 8, 117,\r\n    228, 31, 189, 193, 55, 98, 97, 99, 126, 47, 100, 166, 79, 218, 155, 154, 26,\r\n    209, 49, 131, 135, 136, 150, 47, 126, 217, 223, 52, 53, 45, 51, 134, 211,\r\n    170, 140, 67, 69, 108, 43, 106, 91, 230, 119, 120, 226, 130, 247, 63, 53,\r\n    52, 238, 20, 242, 46, 70, 156, 78, 62, 96, 46, 53, 63, 143, 34, 227, 173,\r\n    155, 133, 123, 117, 111, 44, 125, 19, 236, 134, 51, 216, 206, 205, 154, 153,\r\n    22, 39, 37, 167, 200, 201, 208, 36, 142, 100, 57, 212, 202, 20, 60, 99, 28,\r\n    158, 157, 35, 226, 113, 160, 159, 27, 204, 202, 210, 113, 225, 46, 43, 202,\r\n    204, 62, 76, 77, 137, 123, 116, 41, 38, 72, 203, 129, 142, 64, 98, 240, 49,\r\n    102, 64, 41, 73, 74, 212, 216, 207, 42, 74, 184, 169, 170, 211, 170, 149,\r\n    176, 105, 66, 69, 122, 6, 168, 123, 147, 187, 96, 77, 90, 65, 55, 107, 89,\r\n    90, 180, 101, 100, 120, 63, 105, 104, 93, 137, 227, 15, 86, 85, 129, 102,\r\n    49, 14, 87, 86, 55, 8, 9, 100, 47, 121, 145, 23, 22, 88, 89, 179, 6, 122,\r\n    196, 88, 95, 96, 138, 172, 136, 215, 58, 172, 115, 48, 219, 42, 80, 81, 195,\r\n    3, 51, 43, 146, 61, 171, 175, 199, 81, 82, 38, 53, 46, 225, 144, 163, 110,\r\n    246, 33, 7, 52, 65, 66, 229, 228, 117, 34, 127, 234, 107, 108, 69, 109, 108,\r\n    151, 48, 64, 235, 62, 78, 191, 129, 209, 126, 111, 35, 143, 163, 161, 246,\r\n    117, 123, 50, 222, 65, 52, 19, 125, 141, 221, 55, 65, 3, 195, 197, 25, 7,\r\n    33, 220, 237, 44, 70, 71, 139, 122, 193, 245, 247, 130, 33, 71, 21, 162,\r\n    153, 158, 159, 170, 169, 150, 188, 174, 196, 216, 186, 92, 144, 160, 161, 2,\r\n    97, 167, 141, 125, 241, 164, 167, 37, 72, 38, 12, 145, 159, 160, 38, 82, 13,\r\n    63, 68, 71, 226, 35, 111, 158, 153, 154, 101, 50, 205, 206, 92, 165, 209,\r\n    198, 217, 165, 167, 97, 220, 115, 218, 133, 112, 243, 239, 238, 241, 214,\r\n    135, 169, 190, 173, 133, 171, 208, 32, 125, 44, 237, 86, 87, 178, 85, 86,\r\n    179, 84, 85, 180, 83, 84, 181, 201, 83, 182, 137, 93, 132, 76, 62, 183, 61,\r\n    76, 184, 57, 61, 185, 212, 57, 186, 214, 207, 187, 34, 143, 156, 79, 239,\r\n    237, 123, 137, 177, 44, 1, 4, 201, 194, 32, 64, 102, 129, 213, 215, 138, 59,\r\n    166, 219, 242, 99, 97, 2, 94, 141, 75, 59, 235, 24, 110, 228, 25, 130, 226,\r\n    23, 24, 229, 22, 23, 230, 26, 22, 231, 112, 26, 232, 189, 190, 243, 221, 56,\r\n    190, 28, 56, 221, 27, 28, 222, 29, 27, 223, 30, 29, 224, 247, 30, 225, 238,\r\n    79, 20, 166, 59, 75, 60, 75, 240, 147, 177, 215, 20, 79, 166, 187, 147, 213,\r\n    112, 233, 244, 233, 128, 245, 128, 114, 188, 114, 217, 174, 131, 115, 220,\r\n    217, 198, 236, 198, 131, 134, 177, 132, 58, 143, 35, 124, 110, 163, 7, 228,\r\n    110, 25, 356, 389, 368, 11, 302, 267, 452, 350, 349, 302, 303, 269, 357,\r\n    343, 277, 452, 453, 357, 333, 332, 297, 175, 152, 377, 384, 398, 382, 347,\r\n    348, 330, 303, 304, 270, 9, 336, 337, 278, 279, 360, 418, 262, 431, 304,\r\n    408, 409, 310, 415, 407, 270, 409, 410, 450, 348, 347, 422, 430, 434, 313,\r\n    314, 17, 306, 307, 375, 387, 388, 260, 286, 414, 398, 335, 406, 418, 364,\r\n    367, 416, 423, 358, 327, 251, 284, 298, 281, 5, 4, 373, 374, 253, 307, 320,\r\n    321, 425, 427, 411, 421, 313, 18, 321, 405, 406, 320, 404, 405, 315, 16, 17,\r\n    426, 425, 266, 377, 400, 369, 322, 391, 269, 417, 465, 464, 386, 257, 258,\r\n    466, 260, 388, 456, 399, 419, 284, 332, 333, 417, 285, 8, 346, 340, 261,\r\n    413, 441, 285, 327, 460, 328, 355, 371, 329, 392, 439, 438, 382, 341, 256,\r\n    429, 420, 360, 364, 394, 379, 277, 343, 437, 443, 444, 283, 275, 440, 363,\r\n    431, 262, 369, 297, 338, 337, 273, 375, 321, 450, 451, 349, 446, 342, 467,\r\n    293, 334, 282, 458, 461, 462, 276, 353, 383, 308, 324, 325, 276, 300, 293,\r\n    372, 345, 447, 382, 398, 362, 352, 345, 340, 274, 1, 19, 456, 248, 281, 436,\r\n    427, 425, 381, 256, 252, 269, 391, 393, 200, 199, 428, 266, 330, 329, 287,\r\n    273, 422, 250, 462, 328, 258, 286, 384, 265, 353, 342, 387, 259, 257, 424,\r\n    431, 430, 342, 353, 276, 273, 335, 424, 292, 325, 307, 366, 447, 345, 271,\r\n    303, 302, 423, 266, 371, 294, 455, 460, 279, 278, 294, 271, 272, 304, 432,\r\n    434, 427, 272, 407, 408, 394, 430, 431, 395, 369, 400, 334, 333, 299, 351,\r\n    417, 168, 352, 280, 411, 325, 319, 320, 295, 296, 336, 319, 403, 404, 330,\r\n    348, 349, 293, 298, 333, 323, 454, 447, 15, 16, 315, 358, 429, 279, 14, 15,\r\n    316, 285, 336, 9, 329, 349, 350, 374, 380, 252, 318, 402, 403, 6, 197, 419,\r\n    318, 319, 325, 367, 364, 365, 435, 367, 397, 344, 438, 439, 272, 271, 311,\r\n    195, 5, 281, 273, 287, 291, 396, 428, 199, 311, 271, 268, 283, 444, 445,\r\n    373, 254, 339, 263, 466, 249, 282, 334, 296, 449, 347, 346, 264, 447, 454,\r\n    336, 296, 299, 338, 10, 151, 278, 439, 455, 292, 407, 415, 358, 371, 355,\r\n    340, 345, 372, 390, 249, 466, 346, 347, 280, 442, 443, 282, 19, 94, 370,\r\n    441, 442, 295, 248, 419, 197, 263, 255, 359, 440, 275, 274, 300, 383, 368,\r\n    351, 412, 465, 263, 467, 466, 301, 368, 389, 380, 374, 386, 395, 378, 379,\r\n    412, 351, 419, 436, 426, 322, 373, 390, 388, 2, 164, 393, 370, 462, 461,\r\n    164, 0, 267, 302, 11, 12, 374, 373, 387, 268, 12, 13, 293, 300, 301, 446,\r\n    261, 340, 385, 384, 381, 330, 266, 425, 426, 423, 391, 429, 355, 437, 391,\r\n    327, 326, 440, 457, 438, 341, 382, 362, 459, 457, 461, 434, 430, 394, 414,\r\n    463, 362, 396, 369, 262, 354, 461, 457, 316, 403, 402, 315, 404, 403, 314,\r\n    405, 404, 313, 406, 405, 421, 418, 406, 366, 401, 361, 306, 408, 407, 291,\r\n    409, 408, 287, 410, 409, 432, 436, 410, 434, 416, 411, 264, 368, 383, 309,\r\n    438, 457, 352, 376, 401, 274, 275, 4, 421, 428, 262, 294, 327, 358, 433,\r\n    416, 367, 289, 455, 439, 462, 370, 326, 2, 326, 370, 305, 460, 455, 254,\r\n    449, 448, 255, 261, 446, 253, 450, 449, 252, 451, 450, 256, 452, 451, 341,\r\n    453, 452, 413, 464, 463, 441, 413, 414, 258, 442, 441, 257, 443, 442, 259,\r\n    444, 443, 260, 445, 444, 467, 342, 445, 459, 458, 250, 289, 392, 290, 290,\r\n    328, 460, 376, 433, 435, 250, 290, 392, 411, 416, 433, 341, 463, 464, 453,\r\n    464, 465, 357, 465, 412, 343, 412, 399, 360, 363, 440, 437, 399, 456, 420,\r\n    456, 363, 401, 435, 288, 372, 383, 353, 339, 255, 249, 448, 261, 255, 133,\r\n    243, 190, 133, 155, 112, 33, 246, 247, 33, 130, 25, 398, 384, 286, 362, 398,\r\n    414, 362, 463, 341, 263, 359, 467, 263, 249, 255, 466, 467, 260, 75, 60,\r\n    166, 238, 239, 79, 162, 127, 139, 72, 11, 37, 121, 232, 120, 73, 72, 39,\r\n    114, 128, 47, 233, 232, 128, 103, 104, 67, 152, 175, 148, 173, 157, 155,\r\n    119, 118, 101, 74, 73, 40, 107, 9, 108, 49, 48, 131, 32, 194, 211, 184, 74,\r\n    185, 191, 80, 183, 185, 40, 186, 119, 230, 118, 210, 202, 214, 84, 83, 17,\r\n    77, 76, 146, 161, 160, 30, 190, 56, 173, 182, 106, 194, 138, 135, 192, 129,\r\n    203, 98, 54, 21, 68, 5, 51, 4, 145, 144, 23, 90, 77, 91, 207, 205, 187, 83,\r\n    201, 18, 181, 91, 182, 180, 90, 181, 16, 85, 17, 205, 206, 36, 176, 148,\r\n    140, 165, 92, 39, 245, 193, 244, 27, 159, 28, 30, 247, 161, 174, 236, 196,\r\n    103, 54, 104, 55, 193, 8, 111, 117, 31, 221, 189, 55, 240, 98, 99, 142, 126,\r\n    100, 219, 166, 218, 112, 155, 26, 198, 209, 131, 169, 135, 150, 114, 47,\r\n    217, 224, 223, 53, 220, 45, 134, 32, 211, 140, 109, 67, 108, 146, 43, 91,\r\n    231, 230, 120, 113, 226, 247, 105, 63, 52, 241, 238, 242, 124, 46, 156, 95,\r\n    78, 96, 70, 46, 63, 116, 143, 227, 116, 123, 111, 1, 44, 19, 3, 236, 51,\r\n    207, 216, 205, 26, 154, 22, 165, 39, 167, 199, 200, 208, 101, 36, 100, 43,\r\n    57, 202, 242, 20, 99, 56, 28, 157, 124, 35, 113, 29, 160, 27, 211, 204, 210,\r\n    124, 113, 46, 106, 43, 204, 96, 62, 77, 227, 137, 116, 73, 41, 72, 36, 203,\r\n    142, 235, 64, 240, 48, 49, 64, 42, 41, 74, 214, 212, 207, 183, 42, 184, 210,\r\n    169, 211, 140, 170, 176, 104, 105, 69, 193, 122, 168, 50, 123, 187, 89, 96,\r\n    90, 66, 65, 107, 179, 89, 180, 119, 101, 120, 68, 63, 104, 234, 93, 227, 16,\r\n    15, 85, 209, 129, 49, 15, 14, 86, 107, 55, 9, 120, 100, 121, 153, 145, 22,\r\n    178, 88, 179, 197, 6, 196, 89, 88, 96, 135, 138, 136, 138, 215, 172, 218,\r\n    115, 219, 41, 42, 81, 5, 195, 51, 57, 43, 61, 208, 171, 199, 41, 81, 38,\r\n    224, 53, 225, 24, 144, 110, 105, 52, 66, 118, 229, 117, 227, 34, 234, 66,\r\n    107, 69, 10, 109, 151, 219, 48, 235, 183, 62, 191, 142, 129, 126, 116, 111,\r\n    143, 7, 163, 246, 118, 117, 50, 223, 222, 52, 94, 19, 141, 222, 221, 65,\r\n    196, 3, 197, 45, 220, 44, 156, 70, 139, 188, 122, 245, 139, 71, 162, 145,\r\n    153, 159, 149, 170, 150, 122, 188, 196, 206, 216, 92, 163, 144, 161, 164, 2,\r\n    167, 242, 141, 241, 0, 164, 37, 11, 72, 12, 144, 145, 160, 12, 38, 13, 70,\r\n    63, 71, 31, 226, 111, 157, 158, 154, 36, 101, 205, 203, 206, 165, 126, 209,\r\n    217, 98, 165, 97, 237, 220, 218, 237, 239, 241, 210, 214, 169, 140, 171, 32,\r\n    241, 125, 237, 179, 86, 178, 180, 85, 179, 181, 84, 180, 182, 83, 181, 194,\r\n    201, 182, 177, 137, 132, 184, 76, 183, 185, 61, 184, 186, 57, 185, 216, 212,\r\n    186, 192, 214, 187, 139, 34, 156, 218, 79, 237, 147, 123, 177, 45, 44, 4,\r\n    208, 201, 32, 98, 64, 129, 192, 213, 138, 235, 59, 219, 141, 242, 97, 97, 2,\r\n    141, 240, 75, 235, 229, 24, 228, 31, 25, 226, 230, 23, 229, 231, 22, 230,\r\n    232, 26, 231, 233, 112, 232, 244, 189, 243, 189, 221, 190, 222, 28, 221,\r\n    223, 27, 222, 224, 29, 223, 225, 30, 224, 113, 247, 225, 99, 60, 240, 213,\r\n    147, 215, 60, 20, 166, 192, 187, 213, 243, 112, 244, 244, 233, 245, 245,\r\n    128, 188, 188, 114, 174, 134, 131, 220, 174, 217, 236, 236, 198, 134, 215,\r\n    177, 58, 156, 143, 124, 25, 110, 7, 31, 228, 25, 264, 356, 368, 0, 11, 267,\r\n    451, 452, 349, 267, 302, 269, 350, 357, 277, 350, 452, 357, 299, 333, 297,\r\n    396, 175, 377, 381, 384, 382, 280, 347, 330, 269, 303, 270, 151, 9, 337,\r\n    344, 278, 360, 424, 418, 431, 270, 304, 409, 272, 310, 407, 322, 270, 410,\r\n    449, 450, 347, 432, 422, 434, 18, 313, 17, 291, 306, 375, 259, 387, 260,\r\n    424, 335, 418, 434, 364, 416, 391, 423, 327, 301, 251, 298, 275, 281, 4,\r\n    254, 373, 253, 375, 307, 321, 280, 425, 411, 200, 421, 18, 335, 321, 406,\r\n    321, 320, 405, 314, 315, 17, 423, 426, 266, 396, 377, 369, 270, 322, 269,\r\n    413, 417, 464, 385, 386, 258, 248, 456, 419, 298, 284, 333, 168, 417, 8,\r\n    448, 346, 261, 417, 413, 285, 326, 327, 328, 277, 355, 329, 309, 392, 438,\r\n    381, 382, 256, 279, 429, 360, 365, 364, 379, 355, 277, 437, 282, 443, 283,\r\n    281, 275, 363, 395, 431, 369, 299, 297, 337, 335, 273, 321, 348, 450, 349,\r\n    359, 446, 467, 283, 293, 282, 250, 458, 462, 300, 276, 383, 292, 308, 325,\r\n    283, 276, 293, 264, 372, 447, 346, 352, 340, 354, 274, 19, 363, 456, 281,\r\n    426, 436, 425, 380, 381, 252, 267, 269, 393, 421, 200, 428, 371, 266, 329,\r\n    432, 287, 422, 290, 250, 328, 385, 258, 384, 446, 265, 342, 386, 387, 257,\r\n    422, 424, 430, 445, 342, 276, 422, 273, 424, 306, 292, 307, 352, 366, 345,\r\n    268, 271, 302, 358, 423, 371, 327, 294, 460, 331, 279, 294, 303, 271, 304,\r\n    436, 432, 427, 304, 272, 408, 395, 394, 431, 378, 395, 400, 296, 334, 299,\r\n    6, 351, 168, 376, 352, 411, 307, 325, 320, 285, 295, 336, 320, 319, 404,\r\n    329, 330, 349, 334, 293, 333, 366, 323, 447, 316, 15, 315, 331, 358, 279,\r\n    317, 14, 316, 8, 285, 9, 277, 329, 350, 253, 374, 252, 319, 318, 403, 351,\r\n    6, 419, 324, 318, 325, 397, 367, 365, 288, 435, 397, 278, 344, 439, 310,\r\n    272, 311, 248, 195, 281, 375, 273, 291, 175, 396, 199, 312, 311, 268, 276,\r\n    283, 445, 390, 373, 339, 295, 282, 296, 448, 449, 346, 356, 264, 454, 337,\r\n    336, 299, 337, 338, 151, 294, 278, 455, 308, 292, 415, 429, 358, 355, 265,\r\n    340, 372, 388, 390, 466, 352, 346, 280, 295, 442, 282, 354, 19, 370, 285,\r\n    441, 295, 195, 248, 197, 457, 440, 274, 301, 300, 368, 417, 351, 465, 251,\r\n    301, 389, 385, 380, 386, 394, 395, 379, 399, 412, 419, 410, 436, 322, 387,\r\n    373, 388, 326, 2, 393, 354, 370, 461, 393, 164, 267, 268, 302, 12, 386, 374,\r\n    387, 312, 268, 13, 298, 293, 301, 265, 446, 340, 380, 385, 381, 280, 330,\r\n    425, 322, 426, 391, 420, 429, 437, 393, 391, 326, 344, 440, 438, 458, 459,\r\n    461, 364, 434, 394, 428, 396, 262, 274, 354, 457, 317, 316, 402, 316, 315,\r\n    403, 315, 314, 404, 314, 313, 405, 313, 421, 406, 323, 366, 361, 292, 306,\r\n    407, 306, 291, 408, 291, 287, 409, 287, 432, 410, 427, 434, 411, 372, 264,\r\n    383, 459, 309, 457, 366, 352, 401, 1, 274, 4, 418, 421, 262, 331, 294, 358,\r\n    435, 433, 367, 392, 289, 439, 328, 462, 326, 94, 2, 370, 289, 305, 455, 339,\r\n    254, 448, 359, 255, 446, 254, 253, 449, 253, 252, 450, 252, 256, 451, 256,\r\n    341, 452, 414, 413, 463, 286, 441, 414, 286, 258, 441, 258, 257, 442, 257,\r\n    259, 443, 259, 260, 444, 260, 467, 445, 309, 459, 250, 305, 289, 290, 305,\r\n    290, 460, 401, 376, 435, 309, 250, 392, 376, 411, 433, 453, 341, 464, 357,\r\n    453, 465, 343, 357, 412, 437, 343, 399, 344, 360, 440, 420, 437, 456, 360,\r\n    420, 363, 361, 401, 288, 265, 372, 353, 390, 339, 249, 339, 448, 255];\r\n\r\n","import { now } from '../timing/timing.js'\r\nimport { addTooltip, removeTooltip } from './tooltips.js'\r\nimport { audioContext, getMasterMixdown } from '../audio/audio.js'\r\nimport {createButton} from './button'\r\n\r\nconst createCanvasProgressBar = (width, height) => {\r\n\tconst canvas = document.createElement(\"canvas\")\r\n\tcanvas.className = \"audio-progress\"\r\n\tcanvas.width = width\r\n\tcanvas.height = height\r\n\treturn canvas\r\n}\r\n\r\nexport const createAudioElement = (src, fileName, downloadCallback, waveform=null ) => {\r\n\t\r\n\tconst width = 100\r\n\tconst height = 1\r\n\r\n\tlet isPlaying = false\r\n\r\n\tconst buttons = []\r\n\tconst unique = Math.ceil( now() * 10000000 )\r\n\tconst id = `audio-${unique}`\r\n\t\r\n\tconst wrapper = document.createElement(\"div\")\r\n\twrapper.className = \"audio-player paused instrument-\"+fileName\r\n\twrapper.id = id\r\n\r\n\tconst progressBar = createCanvasProgressBar(  width, height )\r\n\tconst canvasContext = progressBar.getContext(\"2d\")\r\n\t\r\n\t// we guess how long the duration is until the meta tells us for sure\r\n\tconst estimatedAudioDuration = 3 * 1000\r\n\r\n\tlet audio = new Audio()\r\n\tlet duration = audio.duration || estimatedAudioDuration\r\n\tlet currentTime = audio.currentTime\t|| 0\r\n\r\n\t// console.log(\"Creating an audio element...\", audio, {src,fileName, duration, currentTime})\r\n\t\r\n\taudio.className = \"audio-file\"\r\n\taudio.playbackRate.value = 1\r\n\taudio.onload = e =>{\r\n\t\t\r\n\t}\r\n\taudio.onloadedmetadata = e => {\r\n\t\t// probably infinity!\r\n\t\tduration = !isNaN(audio.duration) ? audio.duration : estimatedAudioDuration\r\n\t\tcurrentTime = audio.currentTime\r\n\t}\r\n\r\n\t// audio.onprogress = e =>{\r\n\t// \tconsole.log(\"change indicator\", e)\r\n\t// }\r\n\r\n\taudio.ontimeupdate = e =>{\r\n\t\tcurrentTime = audio.currentTime\r\n\t\tduration = audio.duration\r\n\t\tconst progress = currentTime / duration\r\n\t\t// cheeat and use canvas for progress\r\n\t\tcanvasContext.clearRect(0, 0, width, height)\r\n\t\r\n\t\tcanvasContext.fillStyle = \"white\"\r\n\t\tcanvasContext.fillRect(0, 0, progress * width, height)\r\n\t\t// expensive : wrapper.setAttribute(\"style\", `--progress:${progress}` )\r\n\t}\r\n\taudio.src = URL.createObjectURL(src)\r\n\taudio.loop = true\r\n\r\n\t// hijack and re route the audio\r\n\tconst proxy = audioContext.createMediaElementSource(audio)\r\n\tproxy.connect( getMasterMixdown() )\r\n\r\n\tconst menu = document.createElement(\"menu\")\r\n\tmenu.className = \"audio-download-menu\"\r\n\r\n\t// fileName\r\n\tconst textPlay = `Play <strong>${fileName}</strong> loop`\r\n\tconst textPause = `Pause <strong>${fileName}</strong> loop`\r\n\r\n\tconst playPause = createButton(textPlay,`Play or Pause this loop`, \"button-play-pause\" )\r\n\tplayPause.addEventListener(\"mousedown\", e => {\r\n\t\tisPlaying ? \r\n\t\t\taudio.pause() :\r\n\t\t\taudio.play() \r\n\t\t\r\n\t\tisPlaying = !isPlaying\r\n\t\twrapper.classList.toggle(\"paused\", !isPlaying)\r\n\t\tplayPause.innerHTML = isPlaying ? textPause : textPlay\r\n\t})\r\n\r\n\tbuttons.push( playPause )\r\n\r\n\tconst exitButton = document.createElement(\"button\")\r\n\texitButton.className = \"button-close\"\r\n\texitButton.textContent = \"Exit\"\r\n\texitButton.setAttribute(\"aria-label\", `Clear this loop`) \r\n\texitButton.addEventListener(\"click\", e => {\r\n\t\t// DESTROY\r\n\t\taudio.pause()\r\n\t\taudio.ontimeupdate = audio.onloadedmetadata = audio.onload = null\r\n\t\taudio.currentTime = 0\r\n\t\tURL.revokeObjectURL(audio.src)\r\n\t\taudio = null\r\n\t\twrapper.parentElement.removeChild(wrapper)\r\n\t\tbuttons.forEach( button => removeTooltip( button) )\r\n\t})\r\n\t\r\n\tbuttons.push( exitButton )\r\n\r\n\tconst anchor = document.createElement(\"a\")\r\n\tanchor.className = \"audio-downloader\"\r\n\tanchor.textContent = `Click to download this audio file as WAVE`\r\n\tanchor.download = fileName\r\n\tanchor.href = audio.src\r\n\t\t\r\n\twrapper.appendChild(anchor)\r\n\twrapper.appendChild(playPause)\r\n\twrapper.appendChild(audio)\r\n\twrapper.appendChild(menu)\r\n\twrapper.appendChild(exitButton)\r\n\r\n\tconst fileTypes = [\"mp3\", \"ogg\", \"wave\"]\r\n\r\n\tfileTypes.forEach( buttonName => {\r\n\t\tconst button = document.createElement(\"button\")\r\n\t\tbutton.textContent = buttonName\r\n\t\tbutton.setAttribute(\"aria-label\", `Download as an ${buttonName} file`) \r\n\t\tbutton.type = \"button\"\r\n\t\tbutton.class = `download button-download-${buttonName}`\r\n\t\tbutton.addEventListener(\"click\", e => {\r\n\t\t\t// user has clicked the download button...\r\n\t\t\tdownloadCallback && downloadCallback(buttonName)\r\n\t\t})\r\n\t\tbuttons.push( button )\r\n\t\tmenu.appendChild(button)\r\n\t})\r\n\r\n\tbuttons.forEach( button => addTooltip( button) )\r\n\t\r\n\tif (waveform)\r\n\t{\r\n\t\tconst interactiveWaveform = document.createElement(\"div\")\r\n\t\tinteractiveWaveform.className =\"waveform-wrapper\"\r\n\t\tinteractiveWaveform.innerHTML = waveform\r\n\t\tinteractiveWaveform.appendChild(progressBar)\r\n\t\twrapper.appendChild(interactiveWaveform)\r\n\t}\r\n\t\r\n\treturn wrapper\r\n}\r\n\r\nexport const appendAudioElement = (src, fileName, downloadCallback, waveform ) => {\r\n\tsrc = Array.isArray(src) ? src[0] : src\r\n\tconst audio = createAudioElement(src, fileName, downloadCallback, waveform)\r\n\tdocument.getElementById(\"photographs\").appendChild( audio )\r\n\t// Scroll the audio frame into view\r\n\trequestAnimationFrame( ()=>document.getElementById(audio.id).scrollIntoView() )\r\n}","\r\n/**\r\n * Add a drag and drop zone to allow files to be \r\n * dragged onto the app to then load additional features\r\n */\r\nexport const connectDropZone = ( method ) => {\r\n\t\r\n\tconst body = document.documentElement\r\n\tconst dropAreas = [ body ]\r\n\tconst evs = ['dragenter', 'dragover', 'dragleave', 'drop']\r\n\r\n\tdropAreas.forEach( dropArea => {\r\n\t\tevs.forEach(eventName => {\r\n\t\t\tdropArea.addEventListener(eventName, async (event) => {\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tevent.stopPropagation()\r\n\t\t\t\tswitch (event.type)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 'dragenter':\r\n\t\t\t\t\tcase 'dragover':\r\n\t\t\t\t\t\tbody.classList.toggle('dragging', true)\r\n\t\t\t\t\t\tbreak\r\n\t\r\n\t\t\t\t\tcase 'dragleave':\r\n\t\t\t\t\tcase 'drop':\r\n\t\t\t\t\t\tbody.classList.toggle('dragging', false)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (event.type === \"drop\")\r\n\t\t\t\t{\r\n\t\t\t\t\tconst dataTransfer = event.originalEvent ? event.originalEvent.dataTransfer : event.dataTransfer\r\n\t\t\t\t\tconst file = dataTransfer.files[0]\r\n\t\t\t\t\tawait method( file )\r\n\t\t\t\t}\r\n\r\n\t\t\t}, false)\r\n\t\t})\r\n\t})\r\n}","// Project FUGU has a Chrome native version of this API...\r\n// https://developer.chrome.com/articles/idle-detection/\r\n\r\nconst TIME_OUT = 4000\r\n\r\n\r\nconst main = async ( onActive, onInactive, timeOut = TIME_OUT) => {\r\n\t// Feature detection.\r\n\tif (!('IdleDetector' in window)) {\r\n\t\treturn console.log('IdleDetector is not available.');\r\n\t}\r\n\t// Request permission to use the feature.\r\n\tif (await IdleDetector.requestPermission() !== 'granted') {\r\n\t\treturn console.log('Idle detection permission not granted.');\r\n\t}\r\n\ttry {\r\n\t\tconst controller = new AbortController();\r\n\t\tconst signal = controller.signal;\r\n\r\n\t\tconst idleDetector = new IdleDetector();\r\n\t\tidleDetector.addEventListener('change', () => {\r\n\t\t\tconsole.log(`Idle change: ${idleDetector.userState}, ${idleDetector.screenState}.`);\r\n\r\n// const main = async ( onActive, onInactive, timeOut = TIME_OUT) => {\r\n\t\r\n\t\t});\r\n\t\tawait idleDetector.start({\r\n\t\t\tthreshold: timeOut,\r\n\t\t\tsignal,\r\n\t\t});\r\n\t\tconsole.log('IdleDetector is active.');\r\n\r\n\t\twindow.setTimeout(() => {\r\n\t\t\tcontroller.abort();\r\n\t\t\tconsole.log('IdleDetector is stopped.');\r\n\t\t}, 120000);\r\n\t} catch (err) {\r\n\t\t// Deal with initialization errors like permission denied,\r\n\t\t// running outside of top-level frame, etc.\r\n\t\tconsole.error(err.name, err.message);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst interact = (activityElement, onActive, onInactive, timeOut = TIME_OUT) => {\r\n\r\n\tlet isUserActive = true\r\n\tlet isUserBusy = true\r\n\tlet interval\r\n\r\n\t// after a period of inactivity...\r\n\tactivityElement.addEventListener(\"mousemove\", (event) => {\r\n\r\n\t\tclearInterval(interval)\r\n\r\n\t\tif (!isUserBusy) {\r\n\t\t\tisUserBusy = true\r\n\t\t\tonActive && onActive()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tinterval = setTimeout(() => {\r\n\t\t\tisUserBusy = false\r\n\t\t\tonInactive && onInactive()\r\n\t\t}, timeOut)\r\n\r\n\t}, false)\r\n\r\n\tactivityElement.addEventListener(\"mouseout\", (event) => {\r\n\t\tclearInterval(interval)\r\n\t}, false)\r\n\r\n\tdocument.addEventListener(\"mouseenter\", (event) => {\r\n\r\n\t\tclearInterval(interval)\r\n\t\tif (isUserActive) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tisUserActive = true\r\n\t\t//console.error(\"user active again\")\r\n\t\tonActive && onActive()\r\n\t}, false)\r\n\r\n\tdocument.addEventListener(\"mouseleave\", (event) => {\r\n\t\tclearInterval(interval)\r\n\t\tif (isUserActive && (event.clientY <= 0 || event.clientX <= 0 || (event.clientX >= window.innerWidth || event.clientY >= window.innerHeight))) {\r\n\t\t\t// outside\r\n\t\t\tisUserActive = false\r\n\t\t\t//console.error(\"user inactive\")\r\n\t\t\tonInactive && onInactive()\r\n\t\t}\r\n\t}, false)\r\n\r\n\r\n\t// NB. can trigger multiple times\r\n\tdocument.addEventListener(\"visibilitychange\", e => {\r\n\t\tclearInterval(interval)\r\n\t\tdocument.documentElement.classList.toggle(\"tab-hidden\", document.hidden)\r\n\t\tif (document.hidden) {\r\n\t\t\tisUserActive = false\r\n\t\t\tonInactive && onInactive()\r\n\t\t} else {\r\n\t\t\tonActive && onActive()\r\n\t\t}\r\n\t}, false)\r\n\r\n\tonActive && onActive()\r\n}\r\n\r\n\r\n\r\n\r\nexport default interact","import { RGBA_ASTC_4x4_Format } from 'three'\r\nimport {drawRoundedRect} from './canvas'\r\n\r\nconst whiteKeys = 7\r\nconst blackKeys = 5\r\nconst keyRadius = 2\r\nconst BLACK_KEY_HEIGHT_SCALE = 0.5\r\nconst BLACK_KEY_WIDTH_SCALE = 0.5\r\n\r\nconst NO_KEY = 0\r\nconst WHITE_KEY = 1\r\nconst BLACK_KEY = 2\r\nconst KEY_SEQUENCE = [ WHITE_KEY, BLACK_KEY, WHITE_KEY, BLACK_KEY, WHITE_KEY, NO_KEY, WHITE_KEY, BLACK_KEY, WHITE_KEY, BLACK_KEY, WHITE_KEY, BLACK_KEY, WHITE_KEY ]\r\nconst DRAW_SEQUENCE = [ WHITE_KEY, BLACK_KEY ]\r\n\r\nconst getKeyInSequence = (noteNumber) => KEY_SEQUENCE[ noteNumber % (KEY_SEQUENCE.length-1) ]\r\n\r\n\r\nclass MusicalKey{\r\n\tconstructor(){\r\n\r\n\t}\r\n\r\n\tupdate(){\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Just an onscreen canvas keyboard that changes colour when midi signal sent in\r\n * It is actually two canvasses one with outlines over blocks of colour\r\n */\r\nexport default class MusicalKeyboard{\r\n\r\n\toctaves = 1\r\n\r\n\tcontext\r\n\tbuffer\r\n\toriginalKeyboard\r\n\r\n\tget keyboardCanvas(){\r\n\t\treturn this.originalKeyboard\r\n\t}\r\n\r\n\tget canvas(){\r\n\t\treturn this.buffer\r\n\t}\r\n\r\n\tconstructor( width, height, amountOfOctaves=1 ){\r\n\t\tthis.octaves = amountOfOctaves\r\n\r\n\t\t// create custom double blit canvas\r\n\t\tthis.draw( width, height, amountOfOctaves )\r\n\t}\r\n\r\n\tdrawKey( colour, noteNumber ){\r\n\t\tconst height = this.buffer.height\r\n\t\tthis.context.fillStyle = 'transparent'//colour === BLACK_KEY ? \"black\" : \"white\" \r\n\t\tconst key = drawRoundedRect( \r\n\t\t\tthis.context, \r\n\t\t\tthis.keyPositions[noteNumber], 0, \r\n\t\t\tthis.keyWidths[noteNumber], this.keyHeights[noteNumber],\r\n\t\t\tkeyRadius, \r\n\t\t\ttrue, true\r\n\t\t)\r\n\t}\r\n\r\n\tdrawActiveKey( noteColour, noteNumber, velocity ){\r\n\t\t// * velocity as alpha / white blend\r\n\t\tthis.context.fillStyle = noteColour\r\n\t\tconst key = drawRoundedRect( \r\n\t\t\tthis.context, \r\n\t\t\tthis.keyPositions[noteNumber], 0, \r\n\t\t\tthis.keyWidths[noteNumber], this.keyHeights[noteNumber],\r\n\t\t\tkeyRadius, \r\n\t\t\ttrue, false\r\n\t\t)\r\n\t\tconsole.error(\"drawActiveKey\", {...arguments})\r\n\t}\r\n\r\n\r\n\tclearActiveKey( noteNumber ){\r\n\t\tthis.context.clearRect( \r\n\t\t\tthis.keyPositions[noteNumber], 0,\r\n\t\t\tthis.keyWidths[noteNumber], this.keyHeights[noteNumber]\r\n\t\t)\r\n\t}\r\n\r\n\tclear(){\r\n\t\tthis.context.drawImage(this.originalKeyboard, 0, 0)\r\n\t}\r\n\r\n\tdraw( width, height, amountOfOctaves ){\r\n\r\n\t\tconst buffer = document.createElement('canvas')\t\t\r\n\t\tbuffer.width = width\r\n\t\tbuffer.height = height\r\n\r\n\t\tconst context = buffer.getContext(\"2d\")\r\n\t\t\r\n\t\tthis.buffer = buffer\r\n\t\tthis.context = context\r\n\r\n\t\t// create a sequence the length of how many octaves\r\n\t\tconst keySequence = new Array(amountOfOctaves).fill([...KEY_SEQUENCE]).flat()\r\n\t\t//const colourSequence = (new Array(whiteKeys)).map( (k,i) => keySequence[i]))\r\n\t\tconst keyQuantity = amountOfOctaves * (whiteKeys ) // keySequence.length\r\n\t\tconst whiteKeyWidth = width / (keyQuantity + 1)\r\n\t\tconst blackKeyWidth = whiteKeyWidth * BLACK_KEY_WIDTH_SCALE\r\n\t\t\r\n\t\tthis.whiteKeyWidth = whiteKeyWidth\r\n\t\tthis.blackKeyWidth = blackKeyWidth\r\n\t\t\r\n\t\tthis.keyWidths = []\r\n\t\tthis.keyHeights = []\r\n\r\n\t\tlet xi = 0\r\n\t\tthis.keyPositions = keySequence.map( (key, index) => {\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase WHITE_KEY: \r\n\t\t\t\t\txi += whiteKeyWidth\r\n\t\t\t\t\tthis.keyWidths.push( whiteKeyWidth )\r\n\t\t\t\t\tthis.keyHeights.push( height )\r\n\t\t\t\t\treturn xi\r\n\r\n\t\t\t\tcase BLACK_KEY: \r\n\t\t\t\t\tthis.keyWidths.push( blackKeyWidth  )\r\n\t\t\t\t\tthis.keyHeights.push( height * BLACK_KEY_HEIGHT_SCALE )\r\n\t\t\t\t\treturn xi +( whiteKeyWidth / 2 )+ (blackKeyWidth / 2)\r\n\r\n\t\t\t\tcase NO_KEY:\r\n\t\t\t\tdefault: \r\n\t\t\t\t\tthis.keyWidths.push( 0 )\r\n\t\t\t\t\tthis.keyHeights.push( 0 )\r\n\t\t\t\t\treturn -1\r\n\t\t\t} \r\n\t\t})\r\n\r\n\t\tcontext.strokeStyle = \"black\" \r\n\t\tDRAW_SEQUENCE.forEach( keyColour => {\r\n\t\t\tthis.keyPositions.forEach( (position,i) => {\r\n\t\t\t\tconst colour = keySequence[i]\r\n\t\t\t\tif (colour === keyColour)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.drawKey(colour, i)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t\t// allow us to return to the clean state\r\n\t\tcontext.save()\r\n\r\n\t\t//create a new canvas to save our perfect keyboard in\r\n\t\tconst newCanvas = document.createElement('canvas')\r\n\t\tconst spareContext = newCanvas.getContext('2d')\r\n\t\tnewCanvas.width = buffer.width\r\n\t\tnewCanvas.height = buffer.height\r\n\t\tspareContext.drawImage(buffer, 0, 0)\r\n\t\tthis.originalKeyboard = newCanvas\r\n\r\n\t\t// console.error(\"2d::KeyBoard\", this)\r\n\t}\r\n\r\n\t// call every frame to redraw\r\n\tredraw(){\r\n\r\n\t}\r\n\r\n\t// MIDI interface!\r\n\tnoteOn( noteNumber, velocity=1 ){\r\n\t\t// new MusicalKey()\r\n\t\tconst colour = `#${(Math.random() * 0xfffff * 1000000).toString(16).slice(0, 6)}`\r\n\t\tthis.drawActiveKey( colour, noteNumber, velocity )\r\n\t}\r\n\r\n\tnoteOff( noteNumber, velocity=1 ){\r\n\t\t//this.drawActiveKey( noteNumber, colour )\r\n\t\t// this.clear()\r\n\t\tthis.clearActiveKey( noteNumber )\r\n\t}\r\n}","/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '154';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = this.alphaHash;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$5.copy( geometry.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$5.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$5, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$4.center.set( 0, 0, 0 );\n\t\t_sphere$4.radius = 0.7071067811865476;\n\t\t_sphere$4.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tanisotropyV /= material.anisotropy;\\n\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, vMapUv );\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst xr = renderer.xr;\n\t\tconst environmentBlendMode = xr.getEnvironmentBlendMode();\n\n\t\tswitch ( environmentBlendMode ) {\n\n\t\t\tcase 'opaque':\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'additive':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'alpha-blend':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase SRGBColorSpace:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t} else {\n\n\t\t\t\t// default error reporting\n\n\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\tfragmentErrors\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tuseLegacyLights: renderer.useLegacyLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( colorSpace === SRGBColorSpace && forceLinearTransfer === false ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis.useLegacyLights = true;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t}, handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {canvasContext} from '../visual/canvas'\r\nimport {drawCircle} from '../visual/2d'\r\nimport { getMouseCoords } from '../hardware/mouse'\r\n\r\n\r\n/**\r\n * On devices with mice, we simulate pressure of push\r\n * with mouse down duration\r\n * Here as a sprite\r\n */\r\n// export const drawMousePressure = ( progress ) => {\r\n\t\r\n// \tconst coords = getMouseCoords()\r\n\r\n// \t// hide for the first few frames...\r\n\r\n// \t// draw 2 circles...\r\n// \tconsole.log(\"Mouse Pressure\", progress * 100, coords )\r\n\r\n// \tdrawCircle( coords.x, coords.y, 100 * progress, 4, '#ff0000','#00ff00' )\r\n// }\r\n\r\n\r\nconst pointer = document.createElement(\"div\")\r\npointer.className = \"cursor\"\r\ndocument.documentElement.appendChild( pointer )\r\n\r\nlet showingCustomCursor = false\r\n\r\n// here as a pseudo element on body\r\nexport const drawMousePressure = ( progress, duration ) => {\r\n\t\r\n\t// pointer.setAttribute(\"style\", `--mx:${coords.x};--my:${coords.y};--p:${percentage};--duration:${duration};` )\r\n\tconst percentage = Math.ceil( progress * 100) / 100\r\n\t\t\r\n\tif (!showingCustomCursor)\r\n\t{\r\n\t\tconst coords = getMouseCoords()\r\n\t\r\n\t\tpointer.className = \"cursor pressure\"\r\n\t\tpointer.setAttribute(\"style\", `--mx:${coords.x};--my:${coords.y};--p:${1};--duration:${duration};` )\r\n\t\r\n\t\tshowingCustomCursor = true\r\n\t\t\r\n\t}else if (percentage >= 1)\t{\r\n\r\n\t\tshowingCustomCursor = false\r\n\t\tpointer.className = \"cursor hiding\"\r\n\r\n\t}else{\r\n\r\n\t\t// progress\r\n\t\t//pointer.className = \"cursor\"\r\n\t}\r\n\r\n\t//console.log(\"Mouse Pressure\", progress * 100, coords )\r\n}","\r\nexport const setupImage = async (image) => {\r\n\treturn new Promise( async (resolve,reject) => {\r\n\t\tconst setSize = ()=> {\r\n\t\t\timage.width = image.naturalWidth\r\n\t\t\timage.height = image.naturalHeight\r\n\t\t}\r\n\t\t// check to see if has already loaded...\r\n\t\tif (image.naturalWidth > 0)\r\n\t\t{\r\n\t\t\tsetSize()\r\n\t\t\tresolve(image) \r\n\t\t}else{\r\n\t\t\timage.onloaded = ()=>{ \r\n\t\t\t\tsetSize()\r\n\t\t\t\tresolve(image)\r\n\t\t\t}\r\n\t\t\timage.onerror = error => reject(error)\r\n\t\t}\r\n\t})\r\n}\r\n","\r\nimport { canvasContext, getCanvasDimensions  } from './canvas'\r\nimport PALETTE, { DEFAULT_COLOURS } from \"../palette\"\r\n\r\nlet counter = 0\r\nconst { width, height} = getCanvasDimensions()\r\n\r\n// Visualisations\r\nexport const drawWaves = (dataArray, bufferLength)=>{\r\n\r\n\t// PALETTE\r\n\tcanvasContext.lineWidth = 2\r\n\tcanvasContext.strokeStyle = `hsla(${counter}, 100, 150, 0.5)`\r\n\r\n\tcanvasContext.beginPath()\r\n\r\n\tcounter = counter++ % 360\r\n\r\n\tconst sliceWidth = width * 1.0 / bufferLength\r\n\tlet x = 0\r\n\r\n\tfor(let i = 0; i < bufferLength; i++) \r\n\t{\r\n\t  const v = dataArray[i] / 128\r\n\t  const y = v * height / 2\r\n\r\n\t  if(i === 0) \r\n\t  {\r\n\t\tcanvasContext.moveTo(x, y)\r\n\t  } else {\r\n\t\tcanvasContext.lineTo(x, y)\r\n\t  }\r\n\r\n\t  x += sliceWidth\r\n\t}\r\n\r\n\tcanvasContext.lineTo(width, height/2)\r\n\tcanvasContext.stroke()\r\n}\r\n\r\n\r\nexport const drawBars = (dataArray, bufferLength)=>{\r\n\r\n\tconst barWidth = (width / bufferLength) * 2\t// number here is just cos we only care about a really narrow band\r\n\tlet barHeight\r\n\tlet x = 0\r\n\r\n\tfor(let i = 0; i < bufferLength; i++) \r\n\t{\r\n\t\tbarHeight = dataArray[i]\r\n\r\n\t\tcanvasContext.fillStyle = 'hsla(' + (barHeight/height*360) + ',50%,50%,0.3)'\r\n\t\tcanvasContext.fillRect(x, 0, barWidth, barHeight )\r\n// height-barHeight\r\n\t\tx += barWidth + 1\r\n\t}\r\n\r\n\t// console.log(\"draw bars\", dataArray, bufferLength)\r\n}","\r\nimport { RedFormat } from \"three\"\r\nimport { clamp, TAU, easeInQuad } from \"../maths/maths\"\r\nimport PALETTE, { DEFAULT_COLOURS } from \"../palette\"\r\nimport { canvasContext, getCanvasDimensions } from './canvas'\r\n\r\nconst { width, height} = getCanvasDimensions()\r\n\r\n// TODO:\r\n// Rather than just show one at a time - with no concept of when the next is coming\r\n// instead we move all of them almost like a giant progress bar but dropping from\r\n// top to bottom where the centre is \"now\" and below the line is the past\r\n// or the so called \"history\" that could also change colour to the note played\r\n// if in single player mode\r\n/**\r\n * \r\n * @param {Number} hasPlayed - is this note playing?\r\n * @param {Number} bar \r\n * @param {Number} totalBars \r\n * @param {Number} noteColour \r\n * @param {Number} stroke - color of the ring\r\n * @param {Number} radius - of the circle\r\n * @param {Number} positionX - x position of the gadget\r\n * @param {Number} positionY - y position of the gadget\r\n */\r\nexport const drawQuantise = (hasPlayed, bar=-1, totalBars=1,noteColour=0xff0000, stroke = 30, radius = 4, positionX=0, positionY=0) => {\r\n\r\n\t// canvasContext.strokeWidth = stroke//+\"px\"\r\n\t// canvasContext.font = \"24px Oxanium\"\r\n\t// canvasContext.textAlign = \"left\"\r\n\t// canvasContext.fillStyle = PALETTE.grey\r\n\t// canvasContext.strokeStyle = PALETTE.dark\r\n\t// canvasContext.fillText( (bar === -1 ? `-` : `${bar+1}`) + extras, stroke, stroke)\r\n\t// const gap = width /( bars + 1 )\r\n\tconst gap = height / ( totalBars + 1 )\r\n\r\n\t// blobs up to down\r\n\t// for (let i=0, l= bar+1; i<l; ++i)\r\n\t// grows up\r\n\tfor (let i=totalBars; i>=0; --i)\r\n\t{\r\n\t\t// + gap fence post\r\n\t\tconst colour = hasPlayed ? noteColour : i === bar ? PALETTE.cream : PALETTE.orange\r\n\t\tconst x = positionX // i * gap + gap\r\n\t\tconst y = i * gap + gap + positionY\r\n\t\tconst finished = i < bar\r\n\t\tconst active = i === bar\r\n\t\tconst scaleFactor = active ? 2 : 1\r\n\t\tconst scale = finished || active ? 6 : 1\r\n\t\tconst size = scaleFactor * scale\r\n\r\n\t\t//PALETTE.cream PALETTE.brown\r\n\t\tcanvasContext.fillStyle = active ?  colour : noteColour\r\n\t\tcanvasContext.strokeStyle = active ? noteColour : finished ? PALETTE.cream : PALETTE.orange //  : noteColour\r\n\t\tcanvasContext.strokeWidth = stroke\r\n\t\tcanvasContext.lineWidth = size\r\n\t\tcanvasContext.beginPath()\r\n\t\tcanvasContext.arc( x, y, radius, 0, TAU )\r\n\t\tcanvasContext.fill()\r\n\t\tcanvasContext.stroke()\r\n\t\tcanvasContext.closePath()\r\n\t}\r\n\r\n\tcanvasContext.lineWidth = 1\r\n\r\n\t// draw a frame around the whole qindow\r\n\t// canvasContext.fillStyle = \"hsla(90, 80%, \"+(active ? 90 : 10 )+\"%, 0.9)\"\r\n\t// canvasContext.strokeRect(0,0,width,height)\r\n\t// console.log(\"quantise enabled!\")\r\n}\r\n\r\n\r\nexport class Quanitiser{\r\n\r\n\thistory = []\r\n\r\n\tconstructor(){\r\n\r\n\t}\r\n\r\n\tdraw(hasPlayed, bar=-1, totalBars=1,noteColour=0xff0000, stroke = 30, radius = 4, positionX=0, positionY=0){\r\n\t\t// canvasContext.strokeWidth = stroke//+\"px\"\r\n\t\t// canvasContext.font = \"24px Oxanium\"\r\n\t\t// canvasContext.textAlign = \"left\"\r\n\t\t// canvasContext.fillStyle = PALETTE.grey\r\n\t\t// canvasContext.strokeStyle = PALETTE.dark\r\n\t\t// canvasContext.fillText( (bar === -1 ? `-` : `${bar+1}`) + extras, stroke, stroke)\r\n\t\t// const gap = width /( bars + 1 )\r\n\t\tconst gap = height / ( totalBars + 1 )\r\n\r\n\t\t// blobs up to down\r\n\t\t// for (let i=0, l= bar+1; i<l; ++i)\r\n\t\t// grows up\r\n\t\tfor (let i=totalBars - 1; i>=0; --i)\r\n\t\t{\r\n\t\t\t// + gap fence post\r\n\t\t\tconst colour = hasPlayed ? noteColour : i === bar ? PALETTE.cream : PALETTE.orange\r\n\t\t\tconst x = positionX // i * gap + gap\r\n\t\t\tconst y = i * gap + gap + positionY\r\n\t\t\tconst finished = i < bar\r\n\t\t\tconst active = i === bar\r\n\t\t\tconst scaleFactor = active ? 2 : 1\r\n\t\t\tconst scale = finished || active ? 6 : 1\r\n\t\t\tconst size = scaleFactor * scale\r\n\r\n\t\t\t//PALETTE.cream PALETTE.brown\r\n\t\t\tcanvasContext.fillStyle = active ?  colour : noteColour\r\n\t\t\tcanvasContext.strokeStyle = active ? noteColour : finished ? this.history[i] || PALETTE.cream : PALETTE.orange //  : noteColour\r\n\t\t\tcanvasContext.strokeWidth = stroke\r\n\t\t\tcanvasContext.lineWidth = size\r\n\t\t\tcanvasContext.beginPath()\r\n\t\t\tcanvasContext.arc( x, y, radius, 0, TAU )\r\n\t\t\tcanvasContext.fill()\r\n\t\t\tcanvasContext.stroke()\r\n\t\t\tcanvasContext.closePath()\r\n\r\n\t\t\tif (active)\r\n\t\t\t{\r\n\t\t\t\tthis.history[i] = noteColour\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcanvasContext.lineWidth = 1\r\n\t}\r\n}","\r\n\r\nlet cameraLoading = false\r\n\r\n/**\r\n * This returns a list of IDS that you can then feed into the setupCamera,\r\n * for if you want to select a specific camera\r\n * WARNING : Triggers an error if not from a user interaction!\r\n * @returns {Array<Object>} All camera device objects on this device\r\n */\r\nexport const detectCameras = async () => navigator.mediaDevices.enumerateDevices()\r\n\r\n/**\r\n * filters a list of local cameras to only return videoinputs kinds of camera devices\r\n * @param {Array<string>} devices Array of video input camera devices\r\n * @returns {Array<Object>} Collection of video input camera device objects\r\n */\r\nexport const filterVideoCameras = (devices) => devices.filter( device => device.kind === \"videoinput\" )\r\n\r\n/**\r\n * finds all local cameras and filters them to only return kind of videoinputs\r\n * @returns {Array<Object>} Collection of video input camera device objects\r\n */\r\nexport const fetchVideoCameras = async() => {\r\n\tconst allCameras = await detectCameras()\r\n\treturn filterVideoCameras( allCameras )\r\n}\r\n\r\n/**\r\n * Bind a video element to a camera\r\n * @param {HTMLElement} video - A video HTMLElement NB. If not specified a new video element is created in the DOM\r\n * @param {?string} deviceId - Device ID unique to the camera to try to access first if provided\r\n * @returns {Promise} video stream is returned if successfull\r\n */\r\nexport const setupCamera = async (video, deviceId ) => new Promise( async (resolve,reject) => {\r\n\t\t\r\n\tlet stream\r\n\tvideo = video ?? document.createElement('video')\r\n\r\n\t// stop it if it is already running?\r\n\t// video.stop()\r\n\r\n\tlet loadCount = 2\r\n\tconst checkVideoAccess = () => {\r\n\t\tif (--loadCount <= 0)\r\n\t\t{\r\n\t\t\t// if not from a user document interaction, this\r\n\t\t\t// will throw some blah blah error so we must wrap and re-act\r\n\t\t\ttry{\r\n\t\t\t\tvideo.play()\r\n\t\t\t\tvideo.width = video.videoWidth\r\n\t\t\t\tvideo.height = video.videoHeight\r\n\t\t\t\tresolve(stream)\t\r\n\t\t\t}catch(error){\r\n\t\t\t\treject(stream)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// FIXED: This was suggested to use rather than meta\r\n\tvideo.onloadedmetadata = (event) => checkVideoAccess()\r\n\tvideo.onloadeddata = (event) => checkVideoAccess()\r\n\tvideo.onerror = event => reject(stream)\r\n\t\r\n\tconst videoConstraints = {}\r\n\tif (deviceId) {\r\n\t\tvideoConstraints.deviceId = { exact: deviceId }\r\n\t} else {\r\n\t\tvideoConstraints.facingMode = 'user' // 'environment'\r\n\t}\r\n\r\n\tconst constraints = {\r\n\t\tvideo: videoConstraints,\r\n\t\taudio: false\r\n\t}\r\n\t\r\n\ttry{\r\n\t\t// hope and pray that this is the right camera...\r\n\t\t// NB. FIXME: If the camera is already in use this can take forever\r\n\t\t// and so can hang here - let's add some protection\r\n\t\tconst BAD_RESULT = \"BAD_RESULT\"\r\n\t\tstream = await navigator.mediaDevices.getUserMedia( constraints )\r\n\t\t//stream = navigator.mediaDevices.getUserMedia( constraints )\r\n\t\tconst timeout = new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(resolve, 5000, BAD_RESULT)\r\n\t\t})\r\n\t\tconst result = await Promise.race([ timeout, stream ])\r\n\t\r\n\t\t// FIXME: \"Failed to set the 'srcObject' property on 'HTMLMediaElement': \r\n\t\t// Failed to convert value to 'MediaStream'.\"\r\n\t\tif (result === BAD_RESULT){\r\n\t\t\treject(\"Camera was located but could not be accessed - perhaps it is being used by another page?\")\r\n\t\t}else{\r\n\t\t\tvideo.srcObject = stream\r\n\t\t}\r\n\r\n\t\t// console.log(\"setupCamera\", {constraints, stream})\r\n\t\t\r\n\t}catch(error){\r\n\r\n\t\tconsole.error(\"Camera:Error > \",{constraints,stream,video,error})\r\n\t\treject(error)\r\n\t}\r\n})\r\n\r\n\r\n/**\r\n * Requests access to a specific device\r\n * @param {HTMLElement} video A video HTMLElement NB. If not specified a new video element is created in the DOM\r\n * @param {String} deviceId Device ID unique to the camera to try to access first if provided\r\n * @param {?String} name Optional name to bind to the camera\r\n * @returns {Promise} video stream is returned if successfull\r\n */\r\nexport const loadCamera = async (video, deviceId, name=\"Default\") => {\r\n\r\n\tlet newCamera\r\n\r\n\t// prevent screen re-draw during camera loading\r\n\tcameraLoading = true\r\n\r\n\ttry{\r\n\t\t\r\n\t\tif (deviceId.length > 0)\r\n\t\t{\r\n\t\t\tnewCamera = await setupCamera( video, deviceId )\r\n\t\t\r\n\t\t\t// store.setItem( 'camera', {deviceId} )\r\n\t\t\t// console.log( deviceId, \"Camera id saved\")\r\n\t\t\t// track('Action', {category:'Camera', label:name, value:deviceId})\r\n\t\t\t\r\n\t\t}else{\r\n\r\n\t\t\tconsole.log( deviceId, \"Camera unfound\", {video,deviceId})\r\n\t\t\tthrow Error(\"Camera Device not specified \"+ deviceId )\r\n\t\t}\r\n\t\t \t\t\t\r\n\t}catch(error){\r\n\r\n\t\t// NotAllowedError: Permission denied\r\n\t\tconst errorReason = String(error).replace(\"NotAllowedError: \",'')\r\n\t\r\n\t\t// console.error( deviceId, \"Camera errored\", error)\r\n\t\t// trackError( `${name} camera could not be accessed`, deviceId, \"Camera\" )\r\n\t\tthrow Error(errorReason)\r\n\t}\r\n\t\r\n\tcameraLoading = false\r\n\treturn newCamera\r\n}\r\n\r\n\r\n/**\r\n * Try and determine which camera would be best suited for this app\r\n * @param {?HTMLElement} store A video HTMLElement NB. If not specified a new video element is created in the DOM\r\n * @param {?HTMLElement} video A video HTMLElement NB. If not specified a new video element is created in the DOM\r\n* @returns {Object} best camera, all cameras, using saved device?\r\n */\r\nexport const findBestCamera = async (store, video, onStatus) => {\r\n\t\t\r\n\t// first fetch all cameras - array of these objects\r\n\t// deviceId: \"d3071f102b089a7c24ad1aefc6dc7ab9a22d2707e53c891f6dc5bd9ad182dc70\"\r\n\t// groupId: \"2416e346fdaf93298be3415c78df5eebb51c4945a7c910743406c3cd23eeb004\"\r\n\t// kind: \"videoinput\"\r\n\t// label: \"DroidCam Source 3\"\r\n\tconst videoCameraDevices = await fetchVideoCameras()\r\n\t\r\n\t// 1st point of failure is if there are no cameras at all...\r\n\tif (videoCameraDevices.length < 1)\r\n\t{\r\n\t\tthrow Error(\"No Cameras found on this device\")\r\n\t}\r\n\r\n\tlet camera\r\n\tlet saved = false\r\n\tconst deviceId = store.has('camera') ? store.getItem('camera').deviceId : undefined\r\n\tconst attempts = {}\r\n\t\r\n\t// try and find if there is video camera with that ID available...\r\n\t// the deviceId is only a suggestion as the camera may well have been removed\r\n\t// since the last time that the app was used or may have changed names\r\n\tconst matches = videoCameraDevices.filter( videoCamera => videoCamera.deviceId === deviceId )\r\n\t\r\n\t// we do not have any device id so attempt to load the default \r\n\tif (!deviceId || matches.length < 1)\r\n\t{\r\n\t\ttry{\r\n\t\t\tcamera = await setupCamera( video )\r\n\t\t\treturn {\r\n\t\t\t\tcamera, videoCameraDevices, saved, attempts\r\n\t\t\t}\r\n\t\t}catch(error){\r\n\t\t\t\r\n\t\t\tonStatus && onStatus(\"default camera not found\")\r\n\t\t}\r\n\t}\r\n\r\n\tif (matches.length > 0)\r\n\t{\r\n\t\t// a saved device ID was found let's test to see if it works...\r\n\t\tonStatus && onStatus(`Attempting to connect to saved camera <strong>${matches[0].label}</strong>...` )\r\n\t\ttry{\r\n\t\t\tcamera = await loadCamera(video, deviceId, \"Saved\")\r\n\t\t\tsaved = true\r\n\t\t\treturn {\r\n\t\t\t\tcamera,\r\n\t\t\t\tvideoCameraDevices,\r\n\t\t\t\tsaved, attempts\r\n\t\t\t}\r\n\t\t\r\n\t\t}catch( error ) {\r\n\r\n\t\t\t// delete saved key as was invalid...\r\n\t\t\tstore.removeItem('camera')\r\n\t\t\tsaved = false\r\n\t\t\tattempts[deviceId] = false\r\n\t\r\n\t\t\t// bummer! try and use fallback?\r\n\t\t\tonStatus && onStatus(`Found saved camera <strong>${matches[0].label}</strong> but could not access it` )\r\n\t\t\tconsole.error(\"Couldn't access saved camera - removed from store\", errorReason )\r\n\t\t}\r\n\r\n\t}else{\r\n\t\t// this camera is no longer available on this device so remove from the system?\r\n\t\tstore.removeItem('camera')\r\n\t\tsaved = false\r\n\t\tattempts[deviceId] = false\r\n\t\tonStatus && onStatus(\"Saved camera no longer available on this device\" )\r\n\t}\r\n\r\n\t// front facing next\r\n\ttry{\r\n\t\tcamera = await loadCamera(video, undefined, \"Front-Facing\")\r\n\t\treturn {\r\n\t\t\tcamera,\r\n\t\t\tvideoCameraDevices,\r\n\t\t\tsaved, attempts\r\n\t\t}\r\n\t}catch(error){\r\n\t\tonStatus && onStatus(\"No front facing camera found on this device\" )\r\n\t}\r\n\r\n\t// should we filter these based on certain names?\r\n\t// desperation! loop through and try the others?\r\n\tconst filteredDevices = videoCameraDevices.filter( videoCamera => videoCamera.deviceId !== deviceId )\r\n\tfor (let i=0; i<filteredDevices.length; ++i)\r\n\t{\r\n\t\tconst videoCameraDevice = filteredDevices[i]\r\n\t\ttry{\r\n\t\t\tonStatus && onStatus( `Found another camera <br><strong>${videoCameraDevice.label}</strong>` )\r\n\t\t\tcamera = await setupCamera( video, videoCameraDevice.deviceId )\r\n\t\t\treturn {\r\n\t\t\t\tcamera,\r\n\t\t\t\tvideoCameraDevices,\r\n\t\t\t\tsaved, attempts\r\n\t\t\t}\r\n\t\t}catch(error){\r\n\t\t\tattempts[videoCameraDevice.deviceId] = false\r\n\t\t\t//console.error(error)\r\n\t\t\tonStatus && onStatus(`Camera <strong>${videoCameraDevice.label}</strong> was denied access` )\r\n\t\t}\r\n\t\t// pause to show error and to allow camera hardware to rest\r\n\t\tawait new Promise(resolve=>setTimeout(resolve, 900))\r\n\t}\r\n\t\r\n\t// still here huh? \r\n\t// so, we tried the saved camera, that didn't work\r\n\t// we tried the forward facing cam, that didn't work\r\n\t// then we tried the remaining cameras too!\r\n\tonStatus && onStatus( \"No cameras accessible!\" )\r\n\tthrow Error(\"There was no access to the cameras on this machine, <strong>suspect the permission was denied</strong>\")\r\n}\r\n","/**\r\n * each person in the app has their own instrument and face\r\n * \r\n * \r\n  DADSHR :\r\n  Delay | Attack | Decay | Sustain | Release\r\n  +----------------------------------------+\r\n  |               XXX                      |\r\n  |              XX XX                     |\r\n  |             XX   XX                    |\r\n  |            XX     XXX                  |\r\n  |           XX        XXXXXXXXXXX        |\r\n  |          XX                   XX       |\r\n  |         XX                     XXX     |  Amplitude\r\n  |        XX                        XX    |\r\n  |       XX                          XX   |\r\n  |      XX                            X   |\r\n  |     XX                             XX  |\r\n  |    XX                               XX |\r\n  |   XX                                 XX|\r\n  |XXX                                    XX\r\n  XX---------------------------------------X\r\n  Start                    |HOLD| Stop\r\n * \r\n *  */ \r\n\r\n\r\n// Any instruments you may want to load later on!\r\nimport simplePluginURI from \"url:./audio/wam2/simple/index.js\"\r\nimport samplerPluginURI from \"url:./audio/wam2/sampler/index.js\"\r\n\r\nimport { rescale, lerp, clamp, range, rangeRounded } from \"./maths/maths\"\r\nimport { easeInSine, easeOutSine , easeInCubic, easeOutCubic, linear, easeOutQuad} from \"./maths/easing\"\r\n\r\n// all the different instruments!\r\nimport WAM2Instrument from './audio/instruments/instrument.wam2'\r\nimport SampleInstrument from './audio/instruments/instrument.sample'\r\nimport MIDIInstrument from './audio/instruments/instrument.midi'\r\n// import OscillatorInstrument from './audio/instruments/instrument.oscillator'\r\n// import WaveGuideInstrument from \"./audio/instruments/instrument.waveguide\"\r\n// import YoshimiInstrument from \"./audio/instruments/instrument.yoshimi\"\r\n\r\nimport { convertNoteNameToMIDINoteNumber, getNoteText, getNoteName, getNoteSound, getFriendlyNoteName } from './audio/notes'\r\nimport { instrumentFolders } from './audio/instruments'\r\nimport { hidePersonalControlPanel, setupInstrumentForm, showPersonalControlPanel } from './dom/ui'\r\nimport { ParamaterRecorder } from './parameter-recorder'\r\n\r\nimport { \r\n\tdrawNodes,\r\n\tdrawPart, drawPoints, \r\n\tdrawFaceMesh,  drawBoundingBox, \r\n\tdrawText, drawParagraph, \r\n\tdrawInstrument\r\n} from './visual/2d'\r\n\r\nimport { drawMousePressure } from './dom/mouse-pressure'\r\nimport { \r\n\tEYE_COLOURS,\r\n\tDEFAULT_PERSON_OPTIONS,\r\n\tDEFAULT_VOICE_OPTIONS\r\n} from './settings'\r\n\r\n// States for the audio controlled by the face\r\nexport const STATE_INSTRUMENT_SILENT = \"instrument-not-playing\"\r\nexport const STATE_INSTRUMENT_ATTACK = \"instrument-attack\"\r\nexport const STATE_INSTRUMENT_SUSTAIN = \"instrument-sustain\"\r\nexport const STATE_INSTRUMENT_PITCH_BEND = \"instrument-pitchbend\"\r\nexport const STATE_INSTRUMENT_DECAY = \"instrument-decay\"\r\nexport const STATE_INSTRUMENT_RELEASE = \"instrument-release\"\r\n\r\nexport const EVENT_INSTRUMENT_CHANGED = \"instrument-changed\"\r\nexport const EVENT_INSTRUMENT_LOADING = \"instrument-loading\"\r\n\r\n// after how many frames do we set the DOM css vars\r\nconst UPDATE_FACE_BUTTON_AFTER_FRAMES = 24\r\n\r\n// FIXME:\r\nconst FUDGE = 1.0// 1.3\r\nexport default class Person{\r\n\r\n\t// instances\r\n\tmidiPlayer\r\n\tsamplePlayer\r\n\tactiveInstrument\r\n\t\r\n\t// States, default state is audio off\r\n\tstate = STATE_INSTRUMENT_SILENT\r\n\r\n\t// Flags\r\n\tactive = false\r\n\tsinging = false\r\n\tisMouthOpen = false\r\n\tisLeftEyeOpen = true\r\n\tisRightEyeOpen = true\r\n\r\n\t// if we are repeating our bars...\r\n\tisLooping = false\r\n\t// if we are watching the face perform without interaction\r\n\tisPlayingBack = false\r\n\t// is the instrument panel selection form visibile\r\n\tisFormShowing = false\r\n\t// is a sample based instrument loading still?\r\n\tinstrumentLoading = false\r\n\t// is the MIDI port active?\r\n\tisMIDIActive = false\r\n\t\r\n\t// Head orientation\r\n\tyaw = 0\r\n\tpitch = 0\r\n\troll = 0\r\n\r\n\t// internal person frame counter\r\n\tcounter = 0\r\n\r\n\ttracks = 0\r\n\toctave = 4\r\n\r\n\t// real time colour settings\r\n\tdefaultHue = 0\r\n\tsaturation = 50\r\n\tluminosity = 50\r\n\thueRange = 360\r\n\r\n\tinstrumentPointer = 0\r\n\tinstrumentLoadedAt = -1\r\n\r\n\tmouseDownAt = -1\r\n\tmouseHeldAt = -1\r\n\tinputCoordinates = { x:0, y:0 }\r\n\r\n\tleftEyeClosedAt = -1\r\n\trightEyeClosedAt = -1\r\n\teyesClosed = false\r\n\r\n\tinstruments = []\r\n\r\n\tdata = null\r\n\tmidi = null\r\n\r\n\tlastNoteSound = \"-\"\r\n\tlastNoteName = \"A0\"\r\n\tlastNoteFriendlyName = \"C-4\"\r\n\tlastNoteNumber\r\n\t\r\n\t// default MIDI settings\r\n\tmidiChannel = \"all\"\r\n\r\n\t/**\r\n\t * Are the user's eyes both open?\r\n\t * @returns {Boolean} are both eyes open\r\n\t */\r\n\tget areEyesOpen(){\r\n\t\treturn this.isLeftEyeOpen && this.isRightEyeOpen\r\n\t}\r\n\r\n\t/**\r\n\t * Are the user's eyes both closed?\r\n\t * @returns {Boolean} are both eyes closed?\r\n\t */\r\n\tget areEyesClosed(){\r\n\t\treturn this.eyesClosed\r\n\t}\r\n\r\n\t/**\r\n\t * Returns time in ms since the user moused down\r\n\t * or else -1 if the mouse is not down at all \r\n\t */\r\n\tget mouseDownFor(){\r\n\t\treturn this.isMouseDown ? \r\n\t\t\tthis.audioContext.currentTime - this.mouseDownAt :\r\n\t\t\t-1\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Is the mouse button down?\r\n\t * @returns {Boolean} Mouse button state\r\n\t */\r\n\tget isMouseDown(){\r\n\t\treturn this.mouseDownAt > -1\r\n\t}\r\n\r\n\t/**\r\n\t * Checks to see if the user is pressing their face\r\n\t * @returns {Boolean} has this Person got a finger depressed on their face?\r\n\t */\r\n\tget isMouseHeld(){\r\n\t\t//console.log(\"isMouseHld\", this.mouseDownFor, this.options.mouseHoldDuration )\r\n\t\treturn this.mouseDownFor > this.options.mouseHoldDuration\r\n\t}\r\n\r\n\t/**\r\n\t * Checks to see if the user is pressing their face\r\n\t * @returns {Number} 0-1 how long the user has proportionally held their finger\r\n\t */\r\n\tget mouseHoldProgress(){\r\n\t\treturn this.mouseDownFor / this.options.mouseHoldDuration\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch the class of the form on the DOM that matches this Person\r\n\t * @returns {String} ID name\r\n\t */\r\n\tget controlsID (){\r\n\t\treturn `.${this.name}-controls`\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch the form controls on the DOM that matches this Person\r\n\t * @returns {HTMLElement} Form element for this Person\r\n\t */\r\n\tget controls (){\r\n\t\treturn document.querySelector(this.controlsID)\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch the instrument name eg. french-horn\r\n\t * @returns {String} Instrument name\r\n\t */\r\n\tget instrumentName(){\r\n\t\treturn this.activeInstrument ? this.activeInstrument.name : 'loading'\r\n\t}\t\r\n\r\n\t/**\r\n\t * Fetch the instrument title eg. French Horn\r\n\t * @returns {String} Instrument title\r\n\t */\r\n\tget instrumentTitle(){\r\n\t\treturn this.activeInstrument ? this.activeInstrument.title : 'loading'\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch the index in the instrument array of the current instrument\r\n\t * @returns {Number} Instrument index\r\n\t */\r\n\tget instrumentIndex(){\r\n\t\treturn this.instrumentPointer // instrumentFolders.indexOf(this.instrumentName)\r\n\t}\r\n\r\n\t/**\r\n\t * Is the instrument currently loading\r\n\t * @returns {Boolean} are samples loading\r\n\t */\r\n\tget instrumentLoading(){\r\n\t\treturn this.activeInstrument.isLoading\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch the instrument title eg. French Horn\r\n\t * @returns {Boolean} does this machine have MIDI set up?\r\n\t */\r\n\tget hasMIDI(){\r\n\t\treturn this.midi !== null && this.midiChannel && this.midiChannel.length > 0\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch the MIDI device name if one is connected\r\n\t * @returns {String} MIDI Device name\r\n\t */\r\n\tget MIDIDeviceName(){\r\n\t\treturn this.midi ? this.midi.name : 'unknown'\r\n\t}\r\n\r\n\t/**\r\n\t * Return a time based library of face movements since recording began\r\n\t * @returns {Array<String>} time based library of face movements\r\n\t */\r\n\tget history(){\r\n\t\treturn this.parameterRecorder.recording\r\n\t}\r\n\r\n\t/**\r\n\t * get the current time in milliseconds\r\n\t */\r\n\tget now(){\r\n\t\treturn this.audioContext.currentTime\r\n\t}\r\n\r\n\t/**\r\n\t * get the time elapsed in milliseconds since\r\n\t * the Person's instrument last changed\r\n\t */\r\n\tget timeSinceInstrumentChanged(){\r\n\t\treturn this.instrumentLoadedAt < 0 ? \r\n\t\t\t0 : this.now - this.instrumentLoadedAt\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the HUE (0-100) set for this user or any variation\r\n\t * due to implicit state alterations such as during loading\r\n\t */\r\n\tget hue(){\r\n\t\treturn this.instrumentLoading ? \r\n\t\t\tthis.defaultHue + (90+counter % this.hueRange) : \r\n\t\t\tthis.defaultHue\r\n\t}\r\n\r\n\t/**\r\n\t * Get's the hue but as a colour\r\n\t */\r\n\tget hsl(){\r\n\t\treturn `hsl(${this.hue},${this.saturation}%,${this.luminosity}%)`\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get's the hue but as a colour\r\n\t */\r\n\tget hsla(){\r\n\t\treturn `hsla(${this.hue},${this.saturation}%,${this.luminosity}%,0.5)`\r\n\t}\r\n\t\r\n\r\n\tconstructor(name, audioContext, destinationNode, options={} ) {\r\n\t\t\r\n\t\tthis.options = Object.assign({}, DEFAULT_PERSON_OPTIONS, options)\r\n\t\tthis.name = name\r\n\t\t\t\r\n\t\t// HSL Colour scheme that can be overwritten\r\n\t\tthis.setPalette(this.options)\r\n\r\n\t\t// probably not neccessary with reverb effect\r\n\t\tthis.precision = Math.pow(10, parseInt(this.options.precision) )\r\n\t\t\r\n\t\t// allow us to record the performances (not the audio)\r\n\t\t// useful for showing recordings of a person\r\n\t\tthis.parameterRecorder = new ParamaterRecorder( audioContext )\r\n\t\tthis.isRecordingParameters = false\r\n\t\r\n\t\tthis.debug = this.options.debug\r\n\r\n\t\t// this.range = 1 / ( 1 - this.options.mouthCutOff )\r\n\t\tthis.mouthScale = rescale(this.options.mouthCutOff)\r\n\r\n\t\t// Create our Audio wiring\r\n\t\tthis.setupAudio(audioContext, destinationNode)\r\n\r\n\t\t// fetch face button dom element\r\n\t\tthis.button = document.getElementById(name)\r\n\r\n\t\t// Create our side bar and instrument selector for m\r\n\t\tthis.setupForm().then(()=>{\r\n\t\t\t\r\n\t\t\tthis.button.addEventListener( 'mousedown', e =>{ \r\n\t\t\t\t//console.log(\"mouse down\")\r\n\t\t\t\tthis.onFaceTouchStart(e) \r\n\t\t\t\tdocument.addEventListener('mouseup', e => this.onFaceTouchEnd(e), {once:true})\r\n\t\t\t})\r\n\t\t\t// this.button.addEventListener( 'mouseup', e => {\r\n\t\t\t// \tconsole.log(\"mouse up\")\r\n\t\t\t// \tthis.onFaceTouchEnd(e) \r\n\t\t\t// })\r\n\r\n\t\t\tthis.button.addEventListener( 'touchstart', e =>{ \r\n\t\t\t\t//console.log(\"touch start\")\r\n\t\t\t\tthis.onFaceTouchStart(e) \r\n\t\t\t\tdocument.addEventListener('touchend', e => this.onFaceTouchEnd(e), {once:true})\r\n\t\t\t})\r\n\t\t\t// this.button.addEventListener( 'touchend', e => {\r\n\t\t\t// \tconsole.log(\"touch end\")\r\n\t\t\t// \tthis.onFaceTouchEnd(e) \r\n\t\t\t// })\r\n\r\n\t\t\tthis.button.addEventListener( 'mouseover', event => {\r\n\t\t\t\tthis.isMouseOver = true\r\n\t\t\t})\r\n\r\n\t\t\tthis.button.addEventListener( 'mouseout', event => {\r\n\t\t\t\tthis.isMouseOver = false\r\n\t\t\t})\r\n\r\n\t\t\tthis.instrumentLoadedAt = this.now\r\n\t\t})\r\n\r\n\t\t//console.log(\"Created new person\", this, \"connecting to\", destinationNode )\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy this person - disconnect audio chain\r\n\t * free up associated memory\r\n\t */\r\n\tdestroy(){\r\n\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Set the internal State for this Person from the constants above\r\n\t * @param {String} state - which state the Person is in\r\n\t */\r\n\tsetState(state){\r\n\t\t// console.log(state)\r\n\t\t// Vocal state machine ASDR\r\n\t\tthis.state = state\r\n\t}\r\n\t\r\n\t/**\r\n\t * Dispatch a custom event\r\n\t * @param {String} type \r\n\t * @param {Object} data \r\n\t */\r\n\tdispatchEvent(type, data = {}){\r\n\t\tthis.button.dispatchEvent(new CustomEvent( type, {\r\n\t\t\tdetail: data\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * Set the palette for this Person\r\n\t * @param {Object} options HSL colour model\r\n\t */\r\n\tsetPalette(options){\r\n\t\tthis.saturation = options.saturation // && 100\r\n\t\tthis.luminosity = options.luminosity //&& 100\r\n\t\tthis.hueRange = options.hueRange //&& 360\r\n\t\tthis.defaultHue = options.hue ?? Math.random() * this.hueRange\r\n\t\t//console.log(\"Setting palette\", this, {options, h:this.hue, s:this.saturation, l:this.luminosity, range:this.hueRange} )\r\n\t}\r\n\r\n\t/** \r\n\t * Update Person's Memory state\r\n\t * Cache data for use in processing later\r\n\t * @param {Object} prediction data model\r\n\t */\r\n\tupdate(prediction, forceRefresh=false){\r\n\t\t\r\n\t\tthis.counter++\r\n\t\t\r\n\t\t// reuse old prediction aka refresh\r\n\t\tif (!prediction || forceRefresh)\r\n\t\t{\r\n\t\t\tprediction = this.data\r\n\t\t}\r\n\r\n\t\t// cache all data\r\n\t\tthis.data = prediction\r\n\t\t\r\n\t\t// save all the parameters for recall later on...\r\n\t\tif (this.isRecordingParameters)\r\n\t\t{\r\n\t\t\tthis.parameterRecorder.save(prediction)\r\n\t\t}\r\n\r\n\t\t// If we are playing back an old session, we overwrite\r\n\t\t// this data with the existing session data\r\n\t\tif (this.isPlayingBack)\r\n\t\t{\r\n\t\t\t// TODO:\r\n\t\t\t// overwrite prediction\r\n\t\t}\r\n\r\n\t\t// check to see if mouse if down\r\n\t\tif (this.mouseHeldAt === -1 && this.isMouseHeld)\r\n\t\t{\r\n\t\t\tthis.onButtonHeld()\r\n\t\t}\r\n\r\n\t\tconst rightEyeClosedFor = this.isRightEyeOpen ? -1 : prediction.time - this.rightEyeClosedAt\r\n\t\tconst leftEyeClosedFor = this.isLeftEyeOpen ? -1 : prediction.time - this.leftEyeClosedAt\r\n\t\tconst eyesClosedFor = this.instrumentLoading || this.isRightEyeOpen || this.isLeftEyeOpen ? -1 : Math.max(leftEyeClosedFor, rightEyeClosedFor)\r\n\t\t\r\n\t\t// update any eye states\r\n\t\t// FIXME: Smooth these out either here or directly in model\r\n\t\tif (this.isLeftEyeOpen !== !prediction.leftEyeClosed)\r\n\t\t{\r\n\t\t\tif (prediction.leftEyeClosed)\r\n\t\t\t{\r\n\t\t\t\tthis.onLeftEyeClose( prediction.time )\r\n\t\t\t}else{\r\n\t\t\t\t// open eye\r\n\t\t\t\tthis.onLeftEyeOpen( prediction.time - this.leftEyeClosedAt )\r\n\t\t\t}\r\n\t\t\t// eye state changed\r\n\t\t\tthis.isLeftEyeOpen = !prediction.leftEyeClosed\r\n\t\t}\r\n\r\n\t\tif (this.isRightEyeOpen !== !prediction.rightEyeClosed)\r\n\t\t{\r\n\t\t\tif (prediction.rightEyeClosed)\r\n\t\t\t{\r\n\t\t\t\tthis.onRightEyeClose( prediction.time )\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.onRightEyeOpen( prediction.time - this.rightEyeClosedAt )\r\n\t\t\t}\r\n\t\t\t// eye state changed\r\n\t\t\tthis.isRightEyeOpen = !prediction.rightEyeClosed\r\n\t\t}\r\n\t\t\r\n\t\t// eyes have been closed for X -period of time\r\n\t\tif (eyesClosedFor > this.options.eyeShutHolddDuration)\r\n\t\t{\r\n\t\t\t// both eyes are closed for X amount of time...\r\n\t\t\t// console.log(\"EYES SHUT\", {\r\n\t\t\t// \trightEyeClosedFor, \r\n\t\t\t// \tleftEyeClosedFor, \r\n\t\t\t// \teyesClosedFor, \r\n\t\t\t// \tro:this.isRightEyeOpen,\r\n\t\t\t// \tlo:this.isLeftEyeOpen,\r\n\t\t\t// \ttime:prediction.time, \r\n\t\t\t// \trca:this.rightEyeClosedAt, \r\n\t\t\t// \tlca:this.leftEyeClosedAt\r\n\t\t\t// } )\r\n\r\n\t\t\t// update to reset counter\r\n\t\t\tthis.leftEyeClosedAt = prediction.time\r\n\t\t\tthis.rightEyeClosedAt = prediction.time\r\n\r\n\t\t\tthis.onEyesClosedForTimePeriod()\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Update visuals\r\n\t * @param {Object} prediction data model\r\n\t * @param {Boolean} forceRefresh forces the redraw regardless of other settings\r\n\t * @param {Boolean} beatJustPlayed has the metronome just ticked?\r\n\t */\r\n\tdraw(prediction, forceRefresh=false, beatJustPlayed=false){\r\n\t\t\r\n\t\tif (!forceRefresh && !prediction && !this.prediction && !this.isPlayingBack)\r\n\t\t{\r\n\t\t\t// nothing to (re)draw so exit here\r\n\t\t\treturn this.options\r\n\t\t}\r\n\t\r\n\t\t// change colour while loading\r\n\t\tconst hue = this.hue\r\n\r\n\t\t// can this just be a reference???\r\n\t\tconst options = this.options\r\n\t\t\r\n\t\t// const rightEyeClosedFor = this.isRightEyeOpen ? -1 : prediction.time - this.rightEyeClosedAt\r\n\t\t// const leftEyeClosedFor = this.isLeftEyeOpen ? -1 : prediction.time - this.leftEyeClosedAt\r\n\t\t// this.areEyesOpen \r\n\r\n\t\t// allows us to use the metronome to shape the colours\r\n\t\tconst saturation = options.saturation\r\n\r\n\t\t// Extra luminosity on beat just played\r\n\t\tconst luminosity = options.luminosity + (beatJustPlayed ? 33 : 0)\r\n\t\t\r\n\t\t// update colours...\r\n\t\tconst sl = `${saturation}%, ${luminosity}%`\r\n\t\t// options.dots = hue\r\n\t\t// options.face = `hsla(${hue},${sl},0.8)`\r\n\t\toptions.mouth = `hsla(${(hue+30)%360},${sl},0.8)`\r\n\t\toptions.mouthClosed = `hsla(${(hue+30)%360},${sl},0.9)`\r\n\t\toptions.lipsUpperInner = `hsla(${(hue+50)%360},${sl},1)`\r\n\t\toptions.lipsLowerInner = `hsla(${(hue+50)%360},${sl},1)`\r\n\t\toptions.midwayBetweenEyes = `hsla(${(hue+270)%360},${sl},1)`\r\n\t\toptions.leftEyeLower0 = `hsla(${(hue+300)%360},${sl},0.8)`\r\n\t\toptions.rightEyeLower0 = `hsla(${(hue+300)%360},${sl},0.8)`\r\n\t\toptions.pupil = \"rgba(0,0,0,0.8)\"\r\n\t\t// change eye colours if closed...?\r\n\t\t// options.leftEyeIris = `hsla(${(hue+90)%360},${saturation}%,50%,1)`\r\n\t\t// options.rightEyeIris = `hsla(${(hue+90)%360},${saturation}%,50%,1)`\r\n\t\t\r\n\t\toptions.leftEyeIris = `hsla(${(this.isLeftEyeOpen ? hue+90 : hue-90)%360},${options.saturation}%,${options.luminosity}%, 1)`\r\n\t\toptions.rightEyeIris = `hsla(${(this.isRightEyeOpen ? hue+90 : hue-90)%360},${options.saturation}%, ${options.luminosity}%, 1)`\r\n\t\toptions.leftEyebrow = `hsla(${(this.isLeftEyeOpen ? hue+90 : hue-90)%360},${options.saturation}%,${options.luminosity}%, 1)`\r\n\t\toptions.rightEyebrow = `hsla(${(this.isRightEyeOpen ? hue+90 : hue-90)%360},${options.saturation}%, ${options.luminosity}%, 1)`\r\n\r\n\t\treturn options\r\n\t}\r\n\r\n\t/**\r\n\t * Draw some text onto the screen - used to show text above users and to\r\n\t * show debug code in realtime\r\n\t * \r\n\t * @param {*} prediction \r\n\t * @param {AbstractDisplay} display \r\n\t */\r\n\tdrawText(prediction, display){\r\n\r\n\t\tconst boundingBox = prediction.box\r\n\r\n\t\t// we only want this every frame or so as this \r\n\t\t// is altering the DOM and very costly\r\n\t\tif (this.counter%UPDATE_FACE_BUTTON_AFTER_FRAMES===0)\r\n\t\t{\r\n\t\t\tconst boundingBoxWidth = boundingBox.width || boundingBox.xMax - boundingBox.xMin\r\n\t\t\tconst boundingBoxHeight = boundingBox.height || boundingBox.yMax - boundingBox.yMin\r\n\t\t\t// TODO: Profile which is faster...\r\n\t\t\t// this.button.style.setProperty(`--${this.name}-x`, bottomRight[0] )\r\n\t\t\t// this.button.style.setProperty(`--${this.name}-y`, topLeft[1] )\r\n\t\t\t// this.button.style.setProperty(`--${this.name}-w`, boxWidth )\r\n\t\t\t// this.button.style.setProperty(`--${this.name}-h`, boxHeight )\t\t\t\r\n\t\t\tthis.button.setAttribute( \"style\", `--${this.name}-x:${boundingBox.xMin};--${this.name}-y:${boundingBox.yMin};--${this.name}-w:${boundingBoxWidth};--${this.name}-h:${boundingBoxHeight};` );\r\n\r\n\t\t\t// ?\r\n\t\t\t// this.button.cssText = `--${this.name}-x:${bottomRight[0]};--${this.name}-y:${topLeft[1]};--${this.name}-w:${boxWidth};--${this.name}-h:${boxHeight};`\r\n\t\t}\r\n\r\n\t\t// Mouse interactions via DOM buttons\r\n\t\tif ( this.isMouseOver || this.instrumentLoading ){\r\n\r\n\t\t\t// draw silhoette directly on the canvas or\r\n\t\t\t// SVG shape in the button for hitarea?\r\n\t\t\t// user is interacting...\r\n\t\t\tif (this.isMouseDown && !this.instrumentLoading)\r\n\t\t\t{\r\n\t\t\t\r\n\t\t\t\t// user is holding mouse down on user...\r\n\t\t\t\tconst remaining = 1 - this.mouseHoldProgress\r\n\t\t\t\tconst percentageRemaining = 100 - Math.ceil(remaining*100)\r\n\t\t\t\t\r\n\t\t\t\t//console.error(\"this.isMouseHeld\",this.isMouseHeld,{remaining,percentageRemaining} )\r\n\t\t\t\tif (this.isMouseHeld)\r\n\t\t\t\t{\t\r\n\t\t\t\t\t// user is holding mouse down on user...\r\n\t\t\t\t\tdrawInstrument(boundingBox, this.instrumentTitle, 'Select')\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t// FIXME: Do we hide the face entirely???\r\n\t\t\t\t\t// drawPart( faceOval, 4, `hsla(${hue},50%,${percentageRemaining}%,0.1)`, true, false, false)\r\n\t\t\t\t\tdrawParagraph(boundingBox.xMax, boundingBox.yMin + 40, [`Press me`], '14px' )\r\n\t\t\t\r\n\t\t\t\t\t// draw our mouse expanding circles...\r\n\t\t\t\t\t// we use CSS and it is only hidden here?\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tdrawInstrument(boundingBox, this.instrumentTitle, `${100-percentageRemaining}`)\t\t\t\r\n\t\t\t\t\t//drawPart( faceOval, 4, `hsla(${hue},50%,${percentageRemaining}%,${remaining})`, true)\t\t\t\t\t\r\n\t\t\t\t\tdrawParagraph(boundingBox.xMax, boundingBox.yMin + 40, [`Hold me to see all instruments`], '14px' )\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\t// No mouse held\r\n\t\t\t\tdrawInstrument(boundingBox, this.instrumentTitle, 'Hold to choose instrument')\r\n\t\t\t\t//drawPart( faceOval, 4, `hsla(${hue},50%,50%,0.3)`, true)\r\n\t\t\t\t/*\t\r\n\t\t\t\tconst offsetX = topLeft[0]\r\n\t\t\t\tconst offsetY = topLeft[1]\r\n\t\t\t\tconst svgCoord = coord => `${boxWidth - (coord[0] - offsetX)} ${(coord[1] - offsetY)}`\r\n\t\t\t\tconst svgPaths = faceOval.map( part => `L${svgCoord(part)}`)\r\n\t\t\t\tconst circles = faceOval.map( part =>{\r\n\t\t\t\t\tconst c = svgCoord(part)\r\n\t\t\t\t\treturn `<circle cx=\"${c[0] - offsetX}\" cy=\"${c[1]}\" r=\"20\" />`\r\n\t\t\t\t})\r\n\t\t\t\t// for outline...+ ` Z`\r\n\t\t\t\tconst svgPath = `M${svgCoord(faceOval[0])} ` + svgPaths.join(\" \")\r\n\t\t\t\t//  height=\"210\" width=\"400\"\r\n\t\t\t\tconst silhoetteShape = \r\n\t\t\t\t`<svg width=\"${boxWidth}\" height=\"${boxHeight}\" viewBox=\"0 0 ${boxWidth} ${boxHeight}\">\r\n\t\t\t\t\t<path d=\"${svgPath}\" />\r\n\t\t\t\t\t${circles.join('')}\r\n\t\t\t\t</svg>`\r\n\t\t\t\t//console.log(\"SVG\",faceOval, silhoetteShape)\r\n\t\t\t\tthis.button.innerHTML = silhoetteShape\t\r\n\t\t\t\t*/\r\n\t\t\t}\r\n\t\t\r\n\t\t}else if (this.instrumentLoading){\r\n\r\n\t\t\t// Instrument loading...\r\n\t\t\tdrawInstrument(boundingBox, this.instrumentTitle, 'loading...')\r\n\r\n\t\t}else{\r\n\r\n\t\t\t// Main data flow\r\n\t\t\tconst extra = this.lastNoteFriendlyName \r\n\t\t\tconst suffix = this.singing ? `| ♫ ${this.lastNoteSound}` : this.isMouthOpen ? `<` : `-`\r\n\t\t\t// const suffix = this.singing ? MUSICAL_NOTES[this.counter%(MUSICAL_NOTES.length-1)] : this.isMouthOpen ? `<` : ` ${this.lastNoteSound}`\r\n\t\t\t\r\n\t\t\t// eye:${prediction.eyeDirection}\r\n\t\t\tdrawInstrument(boundingBox, this.instrumentTitle, `${extra} ${suffix}` )\r\n\t\t\t\r\n\t\t\tif (this.debug )\r\n\t\t\t{\r\n\t\t\t\tconst paragraphs = [\r\n\t\t\t\t\t// `Pitch:${(prediction.pitch||0).toFixed(3)}`, \r\n\t\t\t\t\t// `Roll:${(prediction.roll||0).toFixed(3)}`, \r\n\t\t\t\t\t// `Yaw:${(prediction.yaw||0).toFixed(3)}`, \r\n\t\t\t\t\t`Pitch:${(prediction.pitch||0).toFixed(3)} Roll:${(prediction.roll||0).toFixed(3)} Yaw:${(prediction.yaw||0).toFixed(3)}`,\r\n\t\t\t\t\t\r\n\t\t\t\t\t`Eyes: LEFT:${(prediction.leftEyeDirection||0).toFixed(3)} RIGHT:${(prediction.rightEyeDirection||0).toFixed(3)}`,\r\n\t\t\t\t\t\r\n\t\t\t\t\t`Gain:${(this.gainNode.gain.value||0).toFixed(2)}`, \r\n\t\t\t\t\t\r\n\t\t\t\t\t`Happiness:${(prediction.happiness||0).toFixed(3)}`, \r\n\t\t\t\t\t`Smirks left:${(prediction.leftSmirk||0).toFixed(3)} / right:${(prediction.rightSmirk||0).toFixed(3)}`, \r\n\t\t\t\t\t\r\n\t\t\t\t\t`mouthOpen:${prediction.mouthOpen}`, \r\n\t\t\t\t\t`mouthRange:${(prediction.mouthRange||0).toFixed(3)}`, \r\n\t\t\t\t\t`mouthRatio:${(prediction.mouthRatio||0).toFixed(3)}`, \r\n\t\t\t\t\t`mouthWidth:${(prediction.mouthWidth||0).toFixed(3)} & mouthHeight:${(prediction.mouthHeight||0).toFixed(3)}`, \r\n\t\t\t\t\t\r\n\t\t\t\t\t`eyes direction:${(prediction.eyeDirection||0).toFixed(3)} left:${(prediction.leftEye||0).toFixed(3)} right:${(prediction.rightEye||0).toFixed(3)}`,\r\n\t\t\t\t\t`eyes open :${this.areEyesOpen} left:${!prediction.leftEyeClosed} right:${!prediction.rightEyeClosed}`,\r\n\t\t\t\t\t\r\n\t\t\t\t\t// `eye closed left:${prediction.leftEyeClosed} right:${prediction.rightEyeClosed}`,\r\n\t\t\t\t\t// `dims:${(prediction.mouthRatio||0).toFixed(2)}x${(prediction.mouthRange||0).toFixed(2)}`,\r\n\t\t\t\t\t`facing ${prediction.lookingRight ? 'left' : 'right'}`\r\n\t\t\t\t]\r\n\r\n\t\t\t\tdrawParagraph(boundingBox.xMax, boundingBox.yMin + 40, paragraphs, '14px' )\r\n\t\t\t\t// drawText(boundingBox.topLeft[0], boundingBox.topLeft[1], extra )\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sing some songs\r\n\t * state machine diagram :\r\n\t * SILENT ATTACK SUSTAIN PITCH_BEND SUSTAIN DECAY RELEASE\r\n\t * This is responsible for converting the Face Model into \r\n\t * a musical model that we than pass to our Audio Factory\r\n\t */\r\n\tsing(){\r\n\r\n\t\t// nothing to play\r\n\t\tif ( !this.data )\r\n\t\t{\r\n\t\t\treturn DEFAULT_VOICE_OPTIONS\r\n\t\t}\r\n\r\n\t\t// only change the note if not active?\r\n\t\t// if (active)\r\n\t\t// {\r\n\t\t// \t// return\r\n\t\t// }\r\n\r\n\t\tconst played = []\r\n\t\tconst prediction = this.data\r\n\t\tconst options = this.options\r\n\t\t\r\n\t\t// do some checks on data to see if an event\r\n\t\t// should be triggered such as eye left / right\r\n\r\n\t\t// we want to ignore the 0-5px range too as inconclusive!\r\n\t\tconst lipPercentage = prediction.mouthRatio\r\n\t\t\r\n\t\t// Controls minor / major\r\n\t\tconst yaw = prediction.yaw\r\n\t\t\r\n\t\t// Octave control by up and down head\r\n\t\t// const pitchRaw = clamp(0.5 * (prediction.pitch + 1) * this.options.pitchSensitivity, 0, 1)\r\n\t\t// const pitch = (prediction.pitch + 1 ) / 2\r\n\t\t\r\n\t\t// -1 => +1 -> convert to \r\n\t\t// ignore < -0.5 and > 0.5\r\n\t\t// we can exagerate a motion by amplyifying it's signal and clamping its output\r\n\t\t//const rollRaw = clamp((prediction.roll + 0.5) * this.options.rollSensitivity, 0, 1)\r\n\t\t\r\n\t\t// swap em arounnd!\r\n\t\tconst pitch = this.options.swapControls ? prediction.roll : prediction.pitch\r\n\t\tconst roll = this.options.swapControls ? prediction.pitch : prediction.roll\r\n\r\n\t\t// remap -1 -> +1 to 0 -> 1\r\n\t\tconst rolled = (1 + roll) * 0.5 \r\n\r\n\t\t// Controls stereo pan\r\n\t\tconst eyeDirection = prediction.eyeDirection\r\n\r\n\t\t// volume is an log of this\r\n\t\tconst amp = clamp(lipPercentage * FUDGE, 0, 1 ) //- 0.1\r\n\t\t// const logAmp = options.ease(amp)\r\n\t\t\r\n\t\t// pitch goes from -1 -> +1 and we want to map to 1 -> 7\r\n\t\t// straight at screen to positive below and negative above\r\n\t\tconst newOctave = rangeRounded( -pitch , -1, 1, 1, 7 )\r\n\t\t\r\n\t\t// FIXME: if we don't want the happy notes...\r\n\t\tconst isMinor = prediction.isFacingRight\r\n\r\n\t\t// eg. A1 Ab1 C3 etc\r\n\t\tconst noteName = getNoteName(rolled, newOctave, isMinor)\r\n\t\t// eg. Do Re Mi\r\n\t\tconst noteSound = getNoteSound(rolled, isMinor)\r\n\t\t// MIDI Note Number 0-127\r\n\t\tconst noteNumberForMIDI = convertNoteNameToMIDINoteNumber(noteName)\r\n\t\t\r\n\t\tconst friendlyNoteName = getFriendlyNoteName( noteName ) \r\n\t\tconst hasNoteChanged = this.lastNoteName !== noteName\r\n\r\n\t\t// you want the scale to be from 0-1 but from 03-1\r\n\t\tlet newVolume = amp\r\n\t\tlet note = -1\r\n\t\t\r\n\t\r\n\t\t// cache for drawing getNoteText\r\n\t\tthis.lastNoteName = noteName\r\n\t\tthis.lastNoteSound = noteSound\r\n\t\tthis.lastNoteNumber = noteNumberForMIDI\r\n\t\tthis.lastNoteFriendlyName = friendlyNoteName\r\n\t\tthis.octave = newOctave\r\n\r\n\t\tthis.defaultHue = roll * this.hueRange\r\n\t\t\r\n\t\tthis.saturation = 100 * lipPercentage\r\n\t\tthis.singing = amp >= options.mouthCutOff\r\n\r\n\r\n\t\t// console.log(\"Person\", prediction.yaw , yaw)\r\n\t\t// // console.log(\"Person\", {lipPercentage, yaw, pitch, amp, logAmp})\r\n\t\tif (this.options.stereoPan)\r\n\t\t{\r\n\t\t\t//FIXME:\r\n\t\t\tthis.stereoNode.pan.value = eyeDirection\r\n\t\t\t//console.log(\"stereoNode\", this.stereoNode.pan.value, eyeDirection )\r\n\t\t\t//this.stereoNode.pan.setValueAtTime(panControl.value, this.audioContext.currentTime);\r\n\t\t}\r\n\t\t\r\n\t\t// If we have an instrument and singing is enabled\r\n\t\tif ( this.instrument && this.singing )\r\n\t\t{\r\n\t\t\t// here is where we need to do our majic\r\n\t\t\t// play a note from the collection\r\n\t\t\tnote = this.instrument[ noteName ]\r\n\t\t\tif (note)\r\n\t\t\t{\r\n\t\t\t\tplayed.push(note)\r\n\t\t\t}else{\r\n\t\t\t\t//console.log(\"note not found!\", {noteName, roll, octave:this.octave, isMinor})\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.active)\r\n\t\t\t{\r\n\t\t\t\t// fresh note playing\r\n\t\t\t\tthis.active = true\r\n\t\t\t\tthis.setState(STATE_INSTRUMENT_ATTACK)\r\n\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\t// already playing so we continue the note\r\n\t\t\t\t// or if it has changed pitch, re-attack\r\n\t\t\t\tthis.setState( hasNoteChanged ? \r\n\t\t\t\t\tSTATE_INSTRUMENT_ATTACK : \r\n\t\t\t\t\tSTATE_INSTRUMENT_SUSTAIN\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// rescale for 0.3->1\r\n\t\t\t// newVolume = this.mouthScale( amp )\r\n\t\t\t// curve\r\n\t\t\t// newVolume = options.ease(newVolume)\r\n\t\t\t// smooth\r\n\t\t\tnewVolume = Math.round( newVolume * this.precision ) / this.precision \r\n\t\t\t\r\n\t\t\t// newVolume = Math.round( newVolume * options.precision * 10 ) / (options.precision * 10) \r\n\t\t\t// newVolume = parseFloat( newVolume.toFixed( options.precision)) \r\n\t\t\t\r\n\t\t\t// send out some MIDI yum yum noteName && \r\n\t\t\t// if (this.hasMIDI && !this.active)\r\n\t\t\tif (this.options.sendMIDI && this.hasMIDI)\r\n\t\t\t{\r\n\t\t\t\t// https://github.com/djipco/webmidi/blob/develop/src/Output.js\r\n\t\t\t\t//console.log(\"MIDI\",amp, noteNumber, INSTRUMENT_NAMES.length, noteName, this.midiChannel)\r\n\t\t\t\tconst midiOptions = { \r\n\t\t\t\t\t//attack:newVolume // amp\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if all is specified - leave the channel option empty\r\n\t\t\t\tif (this.midiChannel !== \"all\")\r\n\t\t\t\t{\r\n\t\t\t\t\tmidiOptions.channel = this.midiChannel\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// https://webmidijs.org/api/classes/Output#playNote\r\n\t\t\t\tthis.midi.playNote( noteName, midiOptions )\r\n\t\t\t\t//console.log(this.midi, \"MIDI noteOn\", noteName, \"Channel:\"+this.midiChannel, { newVolume, midiOptions, channel:this.midiChannel, hasMIDI:this.hasMIDI} )\r\n\t\t\r\n\t\t\t\tif (this.isMIDIActive)\r\n\t\t\t\t{\r\n\t\t\t\t\t//this.midi.sendKeyAftertouch(noteName, (eyeDirection + 1 ) * 0.5 )\r\n\t\t\t\t\t// this.midi.setPitchBend( eyeDirection )\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.midiActive = true\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Use eye direction as a modifier for the sound\r\n\t\t\t\tif (eyeDirection !== 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Midi pitch bending with eyes!\r\n\t\t\t\t\t// Pitch bending eyes!\r\n\t\t\t\t\t//this.midi.setPitchBend( eyeDirection )\r\n\t\t\t\t\tthis.midi.sendKeyAftertouch(noteName, (eyeDirection + 1 ) * 0.5 )\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.isMouthOpen = true\r\n\t\t\t\r\n\t\t}else if ( amp > options.mouthSilence && amp < options.mouthCutOff ){\r\n\r\n\t\t\t// dampen the sound to silence\r\n\t\t\t// this.gainNode.gain.value = 0\r\n\t\t\t//const destinationVolume  = 0 // logAmp\r\n\t\t\t\r\n\t\t\t// newVolume = this.gainNode.gain.value + (destinationVolume - this.gainNode.gain.value) * options.volumeRate\r\n\t\t\tnewVolume = 0\r\n\t\t\tthis.isMouthOpen = true\r\n\t\t\tif (this.active)\r\n\t\t\t{\r\n\t\t\t\t// already playing so release it\r\n\t\t\t\tthis.active = false\r\n\t\t\t\tthis.setState(STATE_INSTRUMENT_DECAY)\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState(STATE_INSTRUMENT_RELEASE)\r\n\t\t\t\t// this.setState(STATE_INSTRUMENT_ATTACK)\r\n\t\t\t\t// this.setState(STATE_INSTRUMENT_DECAY)\r\n\t\t\t}\r\n\t\t\r\n\t\t}else{\r\n\r\n\t\t\tthis.setState(STATE_INSTRUMENT_SILENT)\r\n\r\n\t\t\t// no instrument available or mouth totally closed\r\n\t\t\tnewVolume = 0\r\n\t\t\tthis.isMouthOpen = false\r\n\t\t\tthis.active = false\r\n\t\t\t// no instruments in memory yet... play silence?\r\n\t\t}\r\n\r\n\t\t//&& this.midiActive If the user has stopped singing we need to stop the midi too!\r\n\t\tif (this.options.sendMIDI && this.hasMIDI)\r\n\t\t{\r\n\t\t\tthis.midi.sendClock( )\r\n\t\t\t//this.midi.setSongPosition( getBarProgress() * 16383 )\r\n\t\t\t\t\r\n\t\t\tif (!this.singing)\r\n\t\t\t{\r\n\t\t\t\tthis.midi.stopNote(noteName, {\r\n\t\t\t\t\t// The velocity at which to release the note (between `0` * and `1`). If the `rawValue` option is `true`, the value should be specified as an integer\r\n\t\t\t\t\t// between `0` and `127`. An invalid velocity value will silently trigger the default of `0.5`.\r\n\t\t\t\t\trelease:0.2\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// immediate mute, but doesn't block (sounds better)\r\n\t\t\t\t//this.midi.turnSoundOff()\r\n\r\n\t\t\t\t// fade out but prevents new notes...\r\n\t\t\t\t//this.midi.turnNotesOff()\r\n\t\t\t\t\r\n\t\t\t\t// prevent flooding the off bus\r\n\t\t\t\tthis.midiActive = false\r\n\r\n\t\t\t\t//console.log(this.midi, \"MIDI turnSoundOff\", noteName, \"Channel:\"+this.midiChannel,{ channel:this.midiChannel, hasMIDI:this.hasMIDI, MIDIDeviceName:this.MIDIDeviceName} )\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\t//console.log(\"Singing\", {newOctave, newVolume, amp,isMinor, noteName, friendlyNoteName, noteSound, noteNumberForMIDI, lipPercentage, pitch, roll, rolled, eyeDirection, hasNoteChanged })\r\n\r\n\r\n\t\t\r\n\t\t// smooth this down\r\n\t\t// try and smooth the volume if it is fading out...\r\n\t\t// if ( this.gainNode.gain.value > newVolume)\r\n\t\t// {\r\n\t\t// \t// volume decrease fades\r\n\t\t\t//this.gainNode.gain.value = this.gainNode.gain.value + (newVolume - this.gainNode.gain.value) * options.volumeRate\r\n\t\t\r\n\t\t// }else{\r\n\r\n\t\t// \tthis.gainNode.gain.value = this.gainNode.gain.value + (newVolume - this.gainNode.gain.value) * 0.9\r\n\t\t// \t// volume in direct\r\n\t\t// \t// this.gainNode.gain.value = newVolume\r\n\t\t// }\r\n\t\t// this.gainNode.gain.value = newVolume\r\n\t\t//console.log(\"Gain\", this.gainNode.gain.value, \"newVolume\", newVolume, \"Precision\", this.precision )\r\n\t\t\r\n\t\tthis.gainNode.gain.value = newVolume\r\n\r\n\t\tthis.yaw = yaw\r\n\t\tthis.pitch = pitch\r\n\t\tthis.roll = roll\r\n\r\n\t\t// TODO: Return all notes played\r\n\t\treturn {\r\n\t\t\tplayed,\r\n\t\t\tyaw, pitch, roll, \r\n\t\t\thue:this.defaultHue,\r\n\t\t\tlipPercentage,\r\n\t\t\teyeDirection,\r\n\t\t\toctave:newOctave,\r\n\t\t\tfriendlyNoteName,\r\n\t\t\tnote,\r\n\t\t\tnoteNumberForMIDI,\r\n\t\t\tnoteName,\r\n\t\t\tvolume:newVolume,\r\n\t\t\tsinging:this.singing,\r\n\t\t\tmouthOpen: this.isMouthOpen,\r\n\t\t\tactive:this.active,\r\n\t\t\tstate:this.state\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Load a sample using one of the prebuilt methods\r\n\t * @param {String} method - name of the function to call\r\n\t * @param {Function} progressCallback - method to invoke on loading progress\r\n\t * @returns instrument\r\n\t */\r\n\tasync loadSamples(method=\"loadRandomInstrument\",progressCallback=null){\r\n\t\tthis.instrumentLoadedAt = this.now\r\n\t\tthis.instrument = await this.samplePlayer[method]( ({progress,instrumentName}) => {\r\n\t\t\tprogressCallback && progressCallback( progress )\r\n\t\t\tthis.dispatchEvent(EVENT_INSTRUMENT_LOADING, { progress, instrumentName })\r\n\t\t} )\r\n\t\tawait this.setupForm()\r\n\t\t// FIXME: If automatic demo mode enabled, this will auto hide...\r\n\t\tthis.hideForm()\r\n\t\tthis.dispatchEvent(EVENT_INSTRUMENT_CHANGED, { instrument:this.instrument, instrumentName:this.instrument.instrumentName })\r\n\t\treturn this.instrument\r\n\t}\r\n\r\n\t/**\r\n\t * Provide this Person with a random instrument\r\n\t * @param {Function} progressCallback Method to call once the instrument has loaded\r\n\t */\r\n\t\r\n\tasync loadRandomInstrument(progressCallback){\r\n\t\treturn this.loadSamples(\"loadRandomInstrument\", progressCallback)\r\n\t}\r\n\r\n\t/**\r\n\t * Provide this Person with a the previous instrument in the list\r\n\t * @param {Function} progressCallback Method to call once the instrument has loaded\r\n\t */\r\n\tasync loadPreviousInstrument(progressCallback){\r\n\t\treturn this.loadSamples(\"loadPreviousInstrument\", progressCallback)\r\n\t}\r\n\r\n\t/**\r\n\t * Provide this Person with a the subsequent instrument in the list\r\n\t * @param {Function} progressCallback Method to call once the instrument has loaded\r\n\t */\r\n\tasync loadNextInstrument(progressCallback){\r\n\t\treturn this.loadSamples(\"loadNextInstrument\", progressCallback)\r\n\t}\r\n\r\n\t/**\r\n\t * Reload ALL instruments for this user\r\n\t * NB. If we have swapped the instrument pack we can use this method\r\n\t * to reload the same instrument but with the new samples\r\n\t * @param {Function} progressCallback Method to call once the instrument has loaded\r\n\t */\r\n\tasync reloadInstrument(progressCallback){\r\n\t\treturn this.loadSamples(\"reloadInstrument\", progressCallback)\r\n\t}\r\n\t\r\n\t/**\r\n\t * Load a specific instrument for this Person\r\n\t * TODO: Add loading events\r\n\t * @param {String} instrumentName Name of the standard instrument to load\r\n\t * @param {Function} progressCallback Method to call once the instrument has loaded\r\n\t */\r\n\tasync loadInstrument(instrumentName, progressCallback){\r\n\r\n\t\tconst generalMIDIInstrumentId = instrumentFolders.indexOf(instrumentName)\r\n\t\tif ( generalMIDIInstrumentId  < 0 )\r\n\t\t{\r\n\t\t\tthrow Error(\"Person.loadInstrument(\"+instrumentName+\") failed\")\r\n\t\t}\r\n\t\tthis.instrumentPointer = generalMIDIInstrumentId\r\n\r\n\t\tconst instrumentPack = this.options.instrumentPack\r\n\t\t//console.log(generalMIDIInstrumentId, \"Person loading instrument \"+instrumentName + '>' + instrumentPack + +\" via sampleplayer\", {instrumentFolders})\r\n\t\tthis.instrument = await this.samplePlayer.loadInstrument(instrumentName, instrumentPack, progress => {\r\n\t\t\tprogressCallback && progressCallback( progress )\r\n\t\t\tthis.dispatchEvent(EVENT_INSTRUMENT_LOADING, { progress, instrumentName })\r\n\t\t} )\r\n\t\tthis.dispatchEvent(EVENT_INSTRUMENT_LOADING, { progress:1, instrumentName })\r\n\t\t\r\n\t\t// you have to dispatch the event from an element!\r\n\t\tthis.dispatchEvent(EVENT_INSTRUMENT_CHANGED, { instrument:this.instrument, instrumentName })\r\n\t\treturn instrumentName\r\n\t}\r\n\r\n\t/**\r\n\t * Create the Audio wiring for these options\r\n\t * @param {AudioContext} audioContext \r\n\t */\r\n\tsetupAudio(audioContext, destinationNode){\r\n\r\n\t\tthis.audioContext = audioContext\r\n\t\t\r\n\t\t// this controls the amplitude and connects to the mouth ui\r\n\t\tthis.gainNode = audioContext.createGain()\r\n\t\tthis.gainNode.gain.value = 0\r\n\r\n\t\t// allow stereo pannning...\r\n\t\t// NB. This is actually quite a greedy method\r\n\t\tif (this.options.stereoPan)\r\n\t\t{\r\n\t\t\tthis.stereoNode = audioContext.createStereoPanner()\r\n\t\t\tthis.stereoNode.connect(this.gainNode)\r\n\t\t\t// this.stereoNode.connect(delayNode)\r\n\t\t\tthis.outputNode = this.stereoNode\r\n\t\t}else{\r\n\t\t\t// TODO: go directly into gain or through other fx first?\r\n\t\t\tthis.outputNode = this.gainNode\r\n\t\t}\r\n\r\n\t\tif (this.options.useDelay)\r\n\t\t{\r\n\t\t\t// DELAY : Feedback smooths out the audio\r\n\t\t\tconst delayNode = audioContext.createDelay( this.options.delayLength )\r\n\t\t\tconst feedbackNode = audioContext.createGain()\r\n\t\t\tdelayNode.delayTime.value = this.options.delayTime\r\n\t\t\tfeedbackNode.gain.value = this.options.feedback\r\n\t\t\t\r\n\t\t\t// connect gain to delay (delay feeds back)\r\n\t\t\tthis.gainNode.connect(delayNode)\r\n\t\t\t// connect the delay node to the output\r\n\t\t\tdelayNode.connect(destinationNode)\r\n\t\t\t// and back in tot he feedback?\r\n\t\t\t// delayNode.connect(destinationNode)\r\n\r\n\t\t}else{\r\n\t\t\t// direct to main mixer\r\n\t\t\tthis.gainNode.connect(destinationNode)\r\n\t\t}\r\n\r\n\t\t// TODO: \r\n\t\t// create a sample player, oscillator add all other instruments\r\n\t\tthis.samplePlayer = this.setInstrument( this.addInstrument( new SampleInstrument(audioContext, this.gainNode, {}) ) )\r\n\t\t// this.addInstrument( new OscillatorInstrument(audioContext, this.gainNode) )\r\n\t\t// this.addInstrument( new WaveGuideInstrument(audioContext, this.gainNode) )\r\n\t\t// this.addInstrument( new YoshimiInstrument(audioContext, this.gainNode) )\r\n\t}\r\n\r\n\t/**\r\n\t * Inject an instrument to be used by this person\r\n\t * @param {Instrument} instrument \r\n\t */\r\n\taddInstrument( instrument ){\r\n\t\tthis.instruments.push( instrument )\r\n\t\t// FIXME: Also connect for changes to instrument\r\n\t\treturn instrument\r\n\t}\r\n\r\n\t/**\r\n\t * Add instrument to pool and set as master\r\n\t * @param {Instrument} instrument \r\n\t */\r\n\tsetInstrument( instrument ){\r\n\t\tthis.activeInstrument = instrument\r\n\t\treturn instrument\r\n\t}\r\n\r\n\t/**\r\n\t * Set the MIDI channel to use for this Person\r\n\t * @param {Function} midiDevice MIDI implementation\r\n\t * @param {String} channel MIDI CHannel to dispatch MIDI events to\r\n\t */\r\n\tsetMIDI(midiDevice, channel=\"all\"){\r\n\t\tthis.midiChannel = channel\r\n\t\tthis.midi = midiDevice\r\n\t\tthis.midiPlayer = new MIDIInstrument(midiDevice, channel)\r\n\t\tthis.addInstrument( this.midiPlayer )\r\n\t\t//console.log(\"MIDI set for person\", this, \"Channel:\"+channel, {midi,channel, hasMIDI:this.hasMIDI } )\r\n\t}\r\n\r\n\t/**\r\n\t * send a single midi command to all active instruments\r\n\t * @param {String} methodName - method to call on the instrument\r\n\t * @param  {...any} values \r\n\t */\r\n\tsendMIDI( methodName=\"noteOn\", ...values ){\r\n\t\tthis.instruments.forEach( instrument => {\r\n\t\t\t// console.log(\"PLAY:\", methodName, instrument, {values} )\r\n\t\t\t//instrument[methodName].apply( null, values )\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Touch BEGIN\r\n\t * stores coordinates of the system in order for gestures\r\n\t * @param {Event} event \r\n\t */\r\n\tonFaceTouchStart(event){\r\n\t\t// console.log(\"mousedown:currentTime\",  audioContext.currentTime )\r\n\t\tevent.preventDefault()\r\n\r\n\t\tthis.mouseDownAt = this.audioContext.currentTime\r\n\t\tthis.inputCoordinates.x = event.clientX\r\n\t\tthis.inputCoordinates.y = event.clientY\r\n\t\t\r\n\t\t// start mouse pressure animation\r\n\t\tdrawMousePressure( 0, this.options.mouseHoldDuration )\r\n\t}\r\n\r\n\t/**\r\n\t * Touch END\r\n\t * @param {Event} event \r\n\t */\r\n\tonFaceTouchEnd(event){\r\n\t\t\t\r\n\t\tevent.preventDefault()\r\n\t\t\r\n\t\t// Gestures -----\r\n\t\t// if someone just keeps the finger on the screen...\r\n\t\tif (this.isMouseHeld)\r\n\t\t{\t\r\n\t\t\t// should this trigger something else depending on time?\r\n\t\t\t// const elapsed = this.mouseDownFor\r\n\t\t\r\n\t\t\t// long press so show the form cept it shouls already be visible\r\n\t\t\t// this is called in update() via onButtonHeld()\r\n\t\t\t// this.showForm()\r\n\r\n\t\t}else{\r\n\r\n\t\t\tconst xTravel = event.clientX - this.inputCoordinates.x\r\n\t\t\tconst yTravel = event.clientY - this.inputCoordinates.y\r\n\t\t\t\r\n\t\t\tif (Math.abs(xTravel) > this.options.mouseGestureDistance)\r\n\t\t\t{\r\n\t\t\t\t//console.log(\"Swipe \", xTravel < 0 ? 'l' : 'r', xTravel)\r\n\t\t\t\txTravel < 0 ? \r\n\t\t\t\t\tthis.loadPreviousInstrument() : \r\n\t\t\t\t\tthis.loadNextInstrument()\r\n\r\n\t\t\t}else if (Math.abs(yTravel) > this.options.mouseGestureDistance){\r\n\r\n\t\t\t\t//console.log(\"Swipe down\", yTravel < 0 ? 'u' : 'd', yTravel )\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\t// Quick tap so don't show the form, instead change instrument directly\r\n\t\t\t\tthis.loadRandomInstrument()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// reset it\r\n\t\tthis.mouseDownAt = -1\r\n\t\tthis.mouseHeldAt = -1\r\n\r\n\t\tdrawMousePressure( 1, this.options.mouseHoldDuration )\t\r\n\t}\r\n\r\n\tonButtonHeld(){\r\n\t\tthis.mouseHeldAt = this.audioContext.currentTime\r\n\t\tdrawMousePressure( 1, this.options.mouseHoldDuration )\r\n\t\tthis.showForm()\r\n\t}\r\n\r\n\tonInstrumentInput(event) {\r\n\t\tconst id = event.target.id\r\n\t\t// console.error(id, \"on inputted\", event)\r\n\t\tthis.hideForm()\r\n\t\tthis.loadInstrument(id)\r\n\t\t// event.preventDefault()\r\n\t}\r\n\r\n\tonLeftEyeOpen( timeClosedFor ){\r\n\t\t// console.error( \"onLeftEyeOpen\", {timeClosedFor} ) \r\n\t\tthis.leftEyeClosedAt = -1\r\n\t}\r\n\r\n\tonLeftEyeClose( timeClosed ){\r\n\t\t// console.error( \"onLeftEyeClose\", {timeClosed} ) \r\n\t\tthis.leftEyeClosedAt = timeClosed\r\n\t}\r\n\r\n\tonRightEyeOpen( timeClosedFor ){\r\n\t\t// console.error( \"onRightEyeOpen\", {timeClosedFor} ) \r\n\t\t\r\n\t\tthis.rightEyeClosedAt = -1\r\n\t}\r\n\r\n\tonRightEyeClose( timeClosed ){\r\n\t\t// console.error( \"onRightEyeClose\", {timeClosed}  ) \r\n\t\t\r\n\t\tthis.rightEyeClosedAt = timeClosed\r\n\t}\r\n\r\n\tonEyesClosedForTimePeriod(){\r\n\t\t// console.error( \"onEyesClosedForTimePeriod\" ) \r\n\t\tthis.eyesClosed = true\r\n\t\tthis.loadNextInstrument( instrumentName => console.log(\"instrumnetName\",instrumentName ) )\r\n\t}\r\n\r\n\t/**\r\n\t * Create the instrument panel HTML for this user's instrument\r\n\t * and other settings specific to this person. Needs to be done per person\r\n\t */\r\n\tasync setupForm(){\r\n\r\n\t\t// TODO: Use ACTIVE instrument - don't assume it's samplePlayer\r\n\t\tconst instruments = await this.activeInstrument.getInstruments()\r\n\t\t\r\n\t\t// hide existing\r\n\t\tconst allInstruments = this.controls.querySelectorAll(\".instrument\")\r\n\t\tallInstruments.forEach( instrument => instrument.classList.add(\"hide\") )\r\n\r\n\t\t// replace \r\n\t\tconst existing = this.controls.querySelector(`.${this.activeInstrument.name}`)\r\n\t\tconst instrumentPanel = existing ? existing : document.createElement(\"div\")\r\n\t\tinstrumentPanel.innerHTML = setupInstrumentForm( instruments, this.samplePlayer.instrumentPack )\r\n\t\tinstrumentPanel.className = `${this.activeInstrument.name} instrument`\r\n\r\n\t\tthis.controls.appendChild(instrumentPanel)\r\n\r\n\t\tconst inputs = this.controls.querySelectorAll('input')\r\n\t\tinputs.forEach( input => input.addEventListener('change', event => this.onInstrumentInput(event) ), false)\r\n\r\n\t\tconst legend = this.controls.querySelector('legend')\r\n\t\tlegend.addEventListener(\"click\", event => {\r\n\t\t\tconst details = this.controls.querySelectorAll('details')\r\n\t\t\tif (details.length)\r\n\t\t\t{\r\n\t\t\t\tconst shouldOpen = !details[0].hasAttribute(\"open\")\r\n\t\t\t\tdetails.forEach( detail => {\r\n\t\t\t\t\tshouldOpen ? detail.setAttribute(\"open\", true) : detail.removeAttribute(\"open\")\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn true\r\n\t}\r\n\r\n\t/**\r\n\t * This pops up the user side bar control panel\r\n\t */\r\n\tshowForm(){\r\n\t\tif (!this.isFormShowing)\r\n\t\t{\r\n\t\t\tthis.isFormShowing = showPersonalControlPanel( this.name, this.controls, this.instrumentName )\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hide this Person's control panel form\r\n\t */\r\n\thideForm(){\r\n\t\tif (this.isFormShowing)\r\n\t\t{\r\n\t\t\tthis.isFormShowing = hidePersonalControlPanel(this.name, this.controls)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hide / Show the Person's control panel form\r\n\t */\r\n\ttoggleForm(){\r\n\t\tif (this.isFormShowing)\r\n\t\t{\r\n\t\t\tthis.hideForm()\r\n\t\t}else{\r\n\t\t\tthis.showForm()\r\n\t\t}\r\n\t}\r\n}","module.exports = require('./helpers/bundle-url').getBundleURL('4wQTA') + \"simple.a856a379.js\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('4wQTA') + \"sampler.f1a97295.js\" + \"?\" + Date.now();","/**\r\n * WAM 2 Instrument! (we must also show the GUI!)\r\n */\r\n\r\nimport Instrument from './instrument'\r\nimport { initializeWamHost } from \"@webaudiomodules/sdk\"\r\n\r\nexport default class WAM2Instrument extends Instrument{\r\n\r\n\ttype = \"web audio module 2\"\r\n\tname = \"WAM2\"\r\n\ttitle = \"WebAudioModule2\"\r\n\r\n\tinitialised = false\r\n\r\n\tplugin\r\n\t// get isLoading(){\r\n\t// \treturn this.available\r\n\t// }\r\n\t\r\n\tget volume(){\r\n\t\treturn this.gainNode.gain.value\r\n\t}\r\n\r\n\tset volume( value ){\r\n\t\tthis.gainNode.gain.value = value\r\n\t\tthis.currentVolume = value\r\n\t}\r\n\r\n\tget outputNode(){\r\n\t\treturn this.gainNode\r\n\t}\r\n\r\n\t/**\r\n\t * Load in a WAM!\r\n\t * TODO: Check to see if the WAM arrives in a zip\r\n\t * @param {AudioContext} audioContext \r\n\t * @param {String} pluginURL \r\n\t * @param {Object} options \r\n\t */\r\n\tasync loadWAM(audioContext, pluginURL, options={} )\r\n\t{\r\n\t\tconst [hostGroupId] = await initializeWamHost(audioContext)\r\n\t\t// const { default: WAMPlugin } = await import(\"/source/audio/wam2/simple/index.js\")\r\n\t\tconst { default: WAMPlugin } = await import(\"/source/audio/wam2/sampler/index.js\")\r\n\t\t// const { default: WAMPlugin } = await import(pluginURL)\r\n\t\tconst plugin = await WAMPlugin.createInstance(hostGroupId, audioContext, options )\r\n\t\t\t\r\n\t\tif (!plugin.audioNode || !plugin.audioNode.connect )\r\n\t\t{\r\n\t\t\tthrow Error(\"No Output node set on this WAM! \"+pluginURL)\r\n\t\t}\r\n\r\n\t\t// instance.audioNode is the plugin WebAudio node (native, AudioWorklet or\r\n\t\t// Composite). It can then be connected to the WebAudio graph.\r\n\t\tplugin.audioNode.connect(this.gainNode)\r\n\r\n\t\t// TODO: Fetch from plugin's descriptor file\r\n\t\t// we add a few extra sample places for the instruments\r\n\t\tthis.polyphony = 5\r\n\r\n\t\t// save for use later!\r\n\t\tthis.plugin = plugin\r\n\r\n\t\t\r\n\t\tconsole.error(\"Loaded WAM from\", pluginURL, {options, plugin, WAMPlugin})\r\n\t}\r\n\r\n\tconstructor( audioContext, destinationNode, options={} )\r\n\t{\r\n\t\tsuper(audioContext, destinationNode, options)\r\n\t\t\r\n\t\t// main controllable output\r\n\t\tthis.gainNode = audioContext.createGain()\r\n\t\tthis.gainNode.connect(destinationNode)\r\n\t\tthis.volume = 1\r\n\r\n\t\t// simplePluginURI  || \r\n\t\tthis.loadWAM(audioContext, options.wamURL, options ).then( result => {\r\n\t\t\t\t\r\n\t\t\tthis.available = true\r\n\r\n\t\t})\r\n\t}\r\n\r\n\tasync noteOn(noteNumber, velocity=1){\r\n\r\n\t\t// const audioBuffer = this.instrument[convertMIDINoteNumberToName(noteNumber)]\r\n\t\t// if(audioBuffer)\r\n\t\t// {\r\n\t\t// \tawait this.play(audioBuffer, velocity)\r\n\t\t// }\r\n\t\tconsole.log(\"Instrument:noteOn\",this.plugin, this )\r\n\r\n\t\t// this.plugin.noteOn(noteNumber, velocity)\r\n\t\treturn super.noteOn(noteNumber, velocity)\r\n\t}\r\n\r\n\t// FIXME: Fade out the gate\r\n\tasync noteOff(noteNumber, velocity=0){\r\n\t\t// this.volume = velocity\r\n\t\tconsole.log(\"note off\", {noteNumber, velocity}, this.plugin )\r\n\t\t\r\n\t\treturn super.noteOff(noteNumber)\r\n\t}\r\n\r\n\tasync aftertouch( noteNumber, pressure ){\r\n\t\tawait super.aftertouch( noteNumber, pressure )\r\n\t}\r\n\t\r\n\tasync pitchBend(pitch){\r\n\t\tawait super.pitchBend(pitch)\r\n\t}\r\n\r\n\t/**\r\n\t * Program Change. \r\n\t * to load a new sample we can also use the midi methods...\r\n\t * This message sent when the patch number changes. \r\n\t * @param {Number} programNumber - new program number.\r\n\t */\r\n\tasync programChange( programNumber )\r\n\t{\r\n\t\treturn await super.programChange( programNumber )\r\n\t\t//return await this.loadInstrument( instrumentFolders[programNumber] )\r\n\t}\r\n\r\n\t/**\r\n\t *  create a data object that contains the full state of the plugin\r\n\t *  for loading in via setState at a future occassion!\r\n\t * @returns {Blob}\r\n\t */\r\n\tasync getState () \r\n\t{\r\n\t\tconst state = await this.plugin.audioNode.getState()\r\n\t\treturn new Blob([JSON.stringify(state, undefined, 2)])\r\n\t}\r\n\r\n\tasync setState(){\r\n\t\t// TODO: \r\n\t}\r\n\r\n\t/**\r\n\t * force download...\r\n\t */\r\n\tasync downloadState()\r\n\t{\r\n\t\tconst link = document.createElement('a')\r\n\t\tlink.href = URL.createObjectURL( this.getState() )\r\n\t\tlink.download = 'state.json'\r\n\t\tlink.click()\r\n\t}\r\n}","import Instrument from './instrument'\r\nimport {getBarProgress} from '../../timing/timing'\r\nimport {WebMidi} from \"webmidi\"\r\nexport default class MIDIInstrument extends Instrument{\r\n\r\n\ttype = \"midi\"\r\n\tname = \"MIDIInstrument\"\r\n\r\n\tget enabled(){\r\n\t\treturn this.sendMIDI\r\n\t}\r\n\r\n\tset enabled(value){\r\n\t\tthis.sendMIDI = value\r\n\t}\r\n\r\n\tconstructor( device, channel=\"all\" ){\r\n\t\tsuper()\r\n\t\tthis.channel = channel\r\n\t\tthis.sendMIDI = true\r\n\t\tthis.midiPort = device\r\n\t\tthis.title = device\r\n\t}\r\n\r\n\tsetMIDI(value){\r\n\t\tthis.sendMIDI = value\r\n\t}\r\n\r\n\tasync noteOn(noteNumber, velocity=1){\r\n\t\t\r\n\t\t// TODO: multiple velocity by currentVolume\r\n\r\n\t\t// duration: 2000,\r\n\t\t// https://github.com/djipco/webmidi/blob/develop/src/Output.js\r\n\t\t//console.log(\"MIDI\",amp, noteNumber, INSTRUMENT_NAMES.length, noteName, this.midiChannel)\r\n\t\tconst midiOptions = { \r\n\t\t\tchannels:this.channel,\r\n\t\t\tattack:newVolume // amp\r\n\t\t}\r\n\t\tsuper.noteOn(noteNumber)\r\n\t\treturn this.midiPort.playNote( noteNumber, midiOptions )\r\n\t}\r\n\r\n\tasync noteOff(noteNumber){\r\n\r\n\t\t//this.midi.sendClock( )\r\n\t\t//this.midi.setSongPosition( getBarProgress() * 16383 )\r\n\t\t\r\n\t\tthis.midiPort.stopNote(noteNumber, {\r\n\t\t\t// The velocity at which to release the note (between `0` * and `1`). If the `rawValue` option is `true`, the value should be specified as an integer\r\n\t\t\t// between `0` and `127`. An invalid velocity value will silently trigger the default of `0.5`.\r\n\t\t\trelease:0.2\r\n\t\t})\r\n\r\n\t\t// immediate mute, but doesn't block (sounds better)\r\n\t\t// this.midi.turnSoundOff()\r\n\r\n\t\t// // fade out but prevents new notes...\r\n\t\t// this.midi.turnNotesOff()\r\n\t\t\r\n\t\t// prevent flooding the off bus\r\n\t\tthis.midiActive = false\r\n\r\n\t\tconsole.log(this.midi, \"MIDI turnSoundOff\", noteName, \"Channel:\"+this.midiChannel,{ channel:this.midiChannel, hasMIDI:this.hasMIDI, MIDIDeviceName:this.MIDIDeviceName} )\r\n\t\treturn super.noteOff( noteNumber )\r\n\t}\r\n\r\n\t// Set polyphonic aftertouch : Send polyphonic aftertouch message to channel 8\r\n\tasync aftertouch(noteNumber, pressure){\r\n\t\tthis.midiPort.setKeyAftertouch(noteNumber, (pressure + 1 ) * 0.5 )\r\n\t\tsuper.aftertouch(noteNumber, pressure)\r\n\t}\r\n\t\r\n\t// Set pitch bend value : The value is between -1 and 1 (a value of 0 means no bend).\r\n\tasync pitchBend(pitch){\r\n\t\tthis.midiPort.setPitchBend( pitch )\r\n\t\tsuper.pitchBend(pitch)\r\n\t}\r\n\r\n\tsendClock(){\r\n\t\tthis.midiPort.sendClock( )\r\n\t}\r\n}\r\n\r\n\r\n/*\r\n// incoming MIDI\r\nconst h = function(event){\r\n\r\n\tfunction MIDIMessage (event){\r\n\t\tthis._event = event;\r\n\t\tthis._data = event.data;\r\n\t\tthis.receivedTime = event.receivedTime;\r\n\r\n\t\tif (this._data && this._data.length < 2){\r\n\t\t\tconsole.warn(\"Illegal MIDI message of length\", this._data.length);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._messageCode = event.data[0] & 0xf0;\r\n\t\tthis.channel = (event.data[0] & 0x0f)+1;\r\n\r\n\t\tswitch(this._messageCode){\r\n\r\n\t\t\t// Note Off\r\n\t\t\tcase 0x80:\r\n\t\t\t\tthis.messageType = \"noteoff\";\r\n\t\t\t\tthis.key = event.data[1] & 0x7F;\r\n\t\t\t\tthis.velocity = event.data[2] & 0x7F;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// Note On\r\n\t\t\tcase 0x90:\r\n\t\t\t\tthis.messageType = \"noteon\";\r\n\t\t\t\tthis.key = event.data[1] & 0x7F;\r\n\t\t\t\tthis.velocity = event.data[2] & 0x7F;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// Polyphonic Key Pressure\r\n\t\t\tcase 0xA0:\r\n\t\t\t\tthis.messageType = \"keypressure\";\r\n\t\t\t\tthis.key = event.data[1] & 0x7F;\r\n\t\t\t\tthis.pressure = event.data[2] & 0x7F;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// Control Change\r\n\t\t\tcase 0xB0:\r\n\t\t\t\tthis.messageType = \"controlchange\";\r\n\t\t\t\tthis.controllerNumber = event.data[1] & 0x7F;\r\n\t\t\t\tthis.controllerValue = event.data[2] & 0x7F;\r\n\r\n\t\t\t\tif (this.controllerNumber === 120 && this.controllerValue === 0){\r\n\t\t\t\t\tthis.channelModeMessage = \"allsoundoff\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.controllerNumber === 121){\r\n\t\t\t\t\tthis.channelModeMessage = \"resetallcontrollers\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.controllerNumber === 122){\r\n\t\t\t\t\tif (this.controllerValue === 0){\r\n\t\t\t\t\t\tthis.channelModeMessage =  \"localcontroloff\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.channelModeMessage =  \"localcontrolon\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.controllerNumber === 123 && this.controllerValue === 0){\r\n\t\t\t\t\tthis.channelModeMessage = \"allnotesoff\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.controllerNumber === 124 && this.controllerValue === 0){\r\n\t\t\t\t\tthis.channelModeMessage = \"omnimodeoff\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.controllerNumber === 125 && this.controllerValue === 0){\r\n\t\t\t\t\tthis.channelModeMessage = \"omnimodeon\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.controllerNumber === 126){\r\n\t\t\t\t\tthis.channelModeMessage = \"monomodeon\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.controllerNumber === 127){\r\n\t\t\t\t\tthis.channelModeMessage = \"polymodeon\";\r\n\t\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\t// Program Change\r\n\t\t\tcase 0xC0:\r\n\t\t\t\tthis.messageType = \"programchange\";\r\n\t\t\t\tthis.program = event.data[1];\r\n\t\t\tbreak;\r\n\r\n\t\t\t// Channel Pressure\r\n\t\t\tcase 0xD0:\r\n\t\t\t\tthis.messageType = \"channelpressure\";\r\n\t\t\t\tthis.pressure = event.data[1] & 0x7F;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// Pitch Bend Change\r\n\t\t\tcase 0xE0:\r\n\t\t\t\tthis.messageType = \"pitchbendchange\";\r\n\t\t\t\tvar msb = event.data[2] & 0x7F;\r\n\t\t\t\tvar lsb = event.data[1] & 0x7F;\r\n\t\t\t\tthis.pitchBend = (msb << 7) + lsb;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn new MIDIMessage(event);\r\n}*/","// Ok, here's a fun one...\r\n\r\n// RECORD Vars just save it and it will record the time\r\nexport class ParamaterRecorder{\r\n\r\n\tconstructor( audioContext, options={} ) {\r\n\r\n\t\tthis.isRecording = false\r\n\t\tthis.context = audioContext\r\n\t\tthis.parameters\r\n\t\tthis.startTime\r\n\t}\r\n\r\n\tget recording(){\r\n\t\treturn this.parameters\r\n\t}\r\n\tget isActive(){\r\n\t\treturn this.isRecording\r\n\t}\r\n\r\n\treset(){\r\n\t\tthis.parameters = {}\r\n\t}\r\n\r\n\tsave( values ){\r\n\t\tlet time = this.context.currentTime\r\n\t\tif (!this.isRecording)\r\n\t\t{\r\n\t\t\tthis.startTime = time\r\n\t\t\tthis.isRecording = true\r\n\t\t}\r\n\t\t// save whatever you want innit\r\n\t\tconst elapsed = this.startTime - time\r\n\t\tthis.parameters[elapsed] = parameters\r\n\t}\r\n\r\n\tgetValuesAtTime(time){\r\n\t\treturn this.parameters[time]\r\n\t}\r\n\r\n}","/**\r\n * Load in different displays to use as the front end.\r\n * \r\n * There are differernt displays depending on which library is used\r\n * and which hardware is available.\r\n * \r\n * The WebXR version has an extra holographic mode too\r\n */\r\n\r\nexport const DISPLAY_COMPOSITE = \"DisplayComposite\"\r\nexport const DISPLAY_CANVAS_2D = \"DisplayCanvas2D\"\r\nexport const DISPLAY_MEDIA_VISION_2D = \"DisplayMediaVision2D\"\r\nexport const DISPLAY_WEB_GL_3D = \"DisplayWebGL3D\"\r\nexport const DISPLAY_LOOKING_GLASS_3D = \"DisplayLookingGlass3D\"\r\n\r\nexport const loadDisplay = async( type ) => {\r\n\tswitch(type)\r\n\t{\r\n\t\t// FIXME: Face detection has dependency clash\r\n\t\t// case DISPLAY_CANVAS_2D: \r\n\t\t// \tconst {Display2D} = await import('./display-canvas-2d.js')\r\n\t\t// \treturn Display2D\r\n\r\n\t\tcase DISPLAY_COMPOSITE: \r\n\t\tconst {DisplayComposite} = await import('./display-composite.js')\r\n\t\t\treturn DisplayComposite\r\n\r\n\t\tcase DISPLAY_MEDIA_VISION_2D: \r\n\t\t\tconst {DisplayMediaVision2D} = await import('./display-mediavision-2d.js')\r\n\t\t\treturn DisplayMediaVision2D\r\n\r\n\t\tcase DISPLAY_WEB_GL_3D: \r\n\t\t\tconst { DisplayWebGL3D } = await import( './display-webgl-3d.js')\r\n\t\t\treturn DisplayWebGL3D\r\n\r\n\t\tcase DISPLAY_LOOKING_GLASS_3D: \r\n\t\t\tconst { DisplayLookingGlass3D } = await import( './display-looking-glass-3d.js')\r\n\t\t\treturn DisplayLookingGlass3D\r\n\t}\r\n}","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-composite.255af2ae.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})).then(() => module.bundle.root('6G1eY'));","module.exports = Promise.all([require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-mediavision-2d.c82388fd.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-mediavision-2d.0fbb1141.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-mediavision-2d.f75ecb4f.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})]).then(() => module.bundle.root('gmSJu'));","module.exports = Promise.all([require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-webgl-3d.5118dfff.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-mediavision-2d.c82388fd.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-webgl-3d.35437246.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})]).then(() => module.bundle.root('44DAj'));","module.exports = Promise.all([require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-webgl-3d.5118dfff.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-mediavision-2d.c82388fd.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-webgl-3d.35437246.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-looking-glass-3d.7356368e.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})]).then(() => module.bundle.root('8GSE2'));","export const loadMLModel = async (type) => {\r\n\t\r\n\tswitch (type)\r\n\t{\r\n\t\t// Uses TensorFlow @media pipe but not @media-pipe/vision\r\n\t\tcase \"old\":\r\n\t\t\tconst {loadFaceModel} = await import('./face')\r\n\t\t\treturn loadFaceModel\r\n\t\t\t\r\n\t\t// TODO: Models changing all the time I can't keep up!\r\n\t\tcase \"body\":\r\n\t\t\tconst {loadBodyModel} = await import('./body')\r\n\t\t\treturn loadBodyModel\r\n\t\t\r\n\t\t// Face\r\n\t\tdefault:\r\n\t\t\tconst {loadFaceLandmarksModel} = await import('./face-landmarks')\r\n\t\t\treturn loadFaceLandmarksModel\r\n\t}\r\n}\r\n","module.exports = Promise.all([require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"face.a5b0ac2d.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-mediavision-2d.0fbb1141.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"face.8149b6ca.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})]).then(() => module.bundle.root('fVAka'));","module.exports = Promise.all([require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"face.a5b0ac2d.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"body.2452b682.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})]).then(() => module.bundle.root('lg7Pv'));","module.exports = Promise.all([require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-mediavision-2d.c82388fd.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"display-mediavision-2d.0fbb1141.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;}), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"face-landmarks.6f5afaf7.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})]).then(() => module.bundle.root('kswz0'));","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"instructions.2af44c78.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})).then(() => module.bundle.root('8WlBb'));","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"reporting.87270bcb.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})).then(() => module.bundle.root('dFRyc'));","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('4wQTA') + \"share-menu.623e57a9.js\" + \"?\" + Date.now()).catch(err => {delete module.bundle.cache[module.id]; throw err;})).then(() => module.bundle.root('agJ2u'));"],"names":["const","nextPort","PARAMS","onAudioProcess","e","parameters","index","this","forEach","value","key","arr","Float32Array","bufferSize","fill","processor","realm","exec","context","sampleRate","currentTime","inputs","channelToArray","inputBuffer","outputs","outputBuffer","instance","process","ch","out","i","numberOfChannels","getChannelData","getProcessorsForContext","audioContext","$$processors","AudioWorkletNode","self","name","options","scriptProcessor","createScriptProcessor","undefined","outputChannelCount","Map","properties","let","length","prop","node","createGain","gain","defaultValue","set","mc","MessageChannel","port2","inst","Processor","port","port1","onaudioprocess","Object","defineProperty","AudioContext","webkitAudioContext","prototype","get","$$audioWorklet","AudioWorklet","$$context","addModule","url","fetch","then","r","ok","Error","status","text","code","AudioWorkletProcessor","registerProcessor","parameterDescriptors","scope","parentElement","frame","document","createElement","style","cssText","appendChild","win","contentWindow","doc","vars","script","createTextNode","body","documentElement","transpile","String","eventMap","event","entries","listener","listeners","params","suspended","Array","args","push","callback","parseInt","duration","timeout","resolve","remaining","setTimeout","reject","assign","target","arguments","Infinity","validation","resetallcontrollers","localcontrol","allnotesoff","omnimodeoff","omnimodeon","monomodeon","polymodeon","modulationwheelcoarse","breathcontrollercoarse","controller3","footcontrollercoarse","portamentotimecoarse","dataentrycoarse","volumecoarse","balancecoarse","controller9","pancoarse","expressioncoarse","effectcontrol1coarse","effectcontrol2coarse","controller14","controller15","generalpurposeslider1","generalpurposeslider2","generalpurposeslider3","generalpurposeslider4","controller20","controller21","controller22","controller23","controller24","controller25","controller26","controller27","controller28","controller29","controller30","controller31","bankselectfine","modulationwheelfine","breathcontrollerfine","controller35","footcontrollerfine","portamentotimefine","dataentryfine","volumefine","balancefine","controller41","panfine","expressionfine","effectcontrol1fine","effectcontrol2fine","controller46","controller47","controller48","controller49","controller50","controller51","controller52","controller53","controller54","controller55","controller56","controller57","controller58","controller59","controller60","controller61","controller62","controller63","holdpedal","portamento","sustenutopedal","softpedal","legatopedal","hold2pedal","soundvariation","resonance","soundreleasetime","soundattacktime","brightness","soundcontrol6","soundcontrol7","soundcontrol8","soundcontrol9","soundcontrol10","generalpurposebutton1","generalpurposebutton2","generalpurposebutton3","generalpurposebutton4","controller84","controller85","controller86","controller87","controller88","controller89","controller90","reverblevel","tremololevel","choruslevel","celestelevel","phaserlevel","databuttonincrement","databuttondecrement","nonregisteredparametercoarse","nonregisteredparameterfine","registeredparametercoarse","registeredparameterfine","controller102","controller103","controller104","controller105","controller106","controller107","controller108","controller109","controller110","controller111","controller112","controller113","controller114","controller115","controller116","controller117","controller118","controller119","allsoundoff","description","position","channelfinetuning","channelcoarsetuning","tuningprogram","tuningbank","modulationrange","azimuthangle","elevationangle","distanceratio","maximumdistance","maximumdistancegain","referencedistanceratio","panspreadangle","rollangle","unknownsystemmessage","attack","wm","release","defaults","note","rawAttack","identifier","_accidental","_octave","semitoneOffset","octaveOffset","isNaN","result","D","E","F","G","A","B","toUpperCase","octave","matches","accidental","toLowerCase","Enumerations","time","parsed","input","output","number","RangeError","toString","Math","floor","lsb","min","max","multiplied","_number","_octaveOffset","removeListener","pressure","keyaftertouch","TypeError","controller","map","controlchange","sendControlChange","parameter","REGISTERED_PARAMETERS","noteOffOptions","Utilities","rawRelease","sendNoteOff","console","warn","n","noteoff","velocity","noteon","sendChannelMode","channelaftertouch","fine","sendRpnValue","Number","semitones","cents","nrpn","isArray","pitchbend","program","programchange","rpn","channels","emit","id","manufacturer","state","type","open","err","Promise","message","merged","sysex","data","_midiOutput","SYSTEM_MESSAGES","mode","destinations","types","_nrpnBuffer","notesState","parameterNumberEventsEnabled","data1","data2","dataBytes","rawValue","rawVelocity","rawKey","numberedEvent","subtype","namedEvent","_rpnBuffer","_dispatchParameterNumberEvent","paramMsb","timestamp","parameterMsb","parameterLsb","paramLsb","command","channel","slice","rawDataBytes","_midiInput","onmidimessage","_onMidiMessage","bind","_forwarders","_parseEvent","isChannelMessage","addListener","window","eval","jzz","global","performance","from7bitToFloat","error","requestMIDIAccessFunction","software","errorEvent","disconnected","_inputs","promises","portsChangedEvent","getInputById","from","_outputs"],"version":3,"file":"interface.6185bf9f.js.map","sourceRoot":"/__parcel_source_root/"}