var q=(o,r)=>()=>(r||o((r={exports:{}}).exports,r),r.exports);var x=q((C,l)=>{(function(o,r,V,i,_){var s=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{},h=typeof s[i]=="function"&&s[i],c=h.cache||{},b=typeof l!="undefined"&&typeof l.require=="function"&&l.require.bind(l);function t(e,u){if(!c[e]){if(!o[e]){var a=typeof s[i]=="function"&&s[i];if(!u&&a)return a(e,!0);if(h)return h(e,!0);if(b&&typeof e=="string")return b(e);var p=new Error("Cannot find module '"+e+"'");throw p.code="MODULE_NOT_FOUND",p}d.resolve=D,d.cache={};var w=c[e]=new t.Module(e);o[e][0].call(w.exports,d,w,w.exports,this)}return c[e].exports;function d(n){var f=d.resolve(n);return f===!1?{}:t(f)}function D(n){var f=o[e][1][n];return f??n}}function g(e){this.id=e,this.bundle=t,this.exports={}}t.isParcelRequire=!0,t.Module=g,t.modules=o,t.cache=c,t.parent=h,t.register=function(e,u){o[e]=[function(a,p){p.exports=u},{}]},Object.defineProperty(t,"root",{get:function(){return s[i]}}),s[i]=t;for(var v=0;v<r.length;v++)t(r[v]);if(V){var y=t(V);typeof C=="object"&&typeof l!="undefined"?l.exports=y:typeof define=="function"&&define.amd?define(function(){return y}):_&&(this[_]=y)}})({bbDCg:[function(o,r,V){class i extends AudioWorkletProcessor{static get parameterDescriptors(){return[{name:"bitDepth",defaultValue:12,minValue:1,maxValue:16},{name:"frequencyReduction",defaultValue:.5,minValue:0,maxValue:1}]}constructor(){super();this.phase_=0,this.lastSampleValue_=0}process(s,h,c){const b=s[0],t=h[0],g=c.bitDepth,v=c.frequencyReduction,y=g.length===1,e=b.length;for(let u=0;u<e;++u){const a=b[u],p=t[u],w=g[0],d=a.length;let D=Math.pow(.5,w);for(let n=0;n<d;++n){const f=v[n];y||(D=Math.pow(.5,g[n])),isNaN(f)||(this.phase_+=f,this.phase_>=1&&(this.phase_-=1,this.lastSampleValue_=D*Math.floor(a[n]/D+.5))),p[n]=this.lastSampleValue_}}return!0}}registerProcessor("bit-crusher-processor",i)},{}]},["bbDCg"],"bbDCg","parcelRequireaaed")});export default x();
