{"mappings":"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AAIvM,eAAe,eAChC7J,EAAAuW,eAAAA,EAAiBH,EAAIvM,eAAe,oBAG/B,EAAAsM,EAAA0D,iBACL,CAEC,MAAMC,EAAmBpP,EAAW,oBAAqBC,IACxDrE,EAAQyT,YAAa,EAAA5D,EAAA6D,oBACrBF,EAAiBnW,UAAUC,OAAO,KAAM0C,EAAQyT,cAG9C,QAIH3D,EAAIvM,eAAgB,qBAAqBlG,UAAUC,OAAO,QAAQ,GAUnE,MAAMqW,EAAc,IAAIvO,KAAK6J,EAAAA,MAOvB2E,EAAiB9D,EAAIvM,eAAe,WACpCsQ,EAAiBD,EAAelO,UAChCoO,EAAiB,GAAEH,EAAYzE,aAAayE,EAAYI,WAAW,KAAKJ,EAAYK,iBAAkBL,EAAYM,mBAAmB,QARvH,CACnBC,QAAS,EACTC,KAAO,UACPC,OAAS,cAMVR,EAAelO,UAAa,GAAEmO,wBAAqCC,WAOnE1D,EAASrP,iBAAiB,SAAWC,IACpCA,EAAMyO,mBAGJ,eAGoB,wjBCnWK,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAGzD,MAAMmC,EAAqB,CACjC,gBACA,oBACA,2BACA,4BACA,4BACA,YACA,eACA,eACA,cACA,YACA,mBACA,cACA,iBACA,mBACA,oBACA,mBACA,4BACA,cACA,YACA,iBACA,mBACA,eACA,eACA,iBACA,wBACA,oBACA,eACA,2BACA,yBACA,2BACA,4BACA,2BACA,4BACA,uBACA,uBACA,mBACA,aACA,YACA,kBACA,oBACA,gBACA,sBACA,mBACA,sBACA,sBACA,mBACA,kBACA,iBACA,mBACA,wBACA,uBACA,cACA,gBACA,kBACA,iBACA,sBACA,cACA,WACA,oBACA,sBACA,sBACA,mBACA,qBACA,mBACA,oBACA,wBACA,cACA,kBACA,gBACA,oBACA,WACA,cACA,oBACA,sBACA,wBACA,oBACA,iBACA,sBACA,kBACA,kBACA,qBACA,iBACA,kBACA,gBACA,uBACA,cACA,wBACA,eACA,iBACA,qBACA,iBACA,eACA,iBACA,eACA,aACA,YACA,kBACA,kBACA,kBACA,kBACA,wBACA,wBACA,mBACA,mBACA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","sources":["./node_modules/@parcel/runtime-js/lib/JSRuntime.js","./node_modules/@parcel/runtime-js/lib/bundle-manifest.js","./source/index.js","./source/install.js","./source/ui.js","./source/instruments.js","./source/version.js","./source/utils.js","./source/full-screen.js","./source/location-handler.js","./source/palette.js","./node_modules/@parcel/runtime-js/lib/bundle-url.js","./node_modules/@parcel/runtime-js/lib/relative-path.js","./source/store.js","./source/speech.js","./source/audio.js","./source/maths.js","./source/timing.js","./node_modules/@parcel/runtime-js/lib/bundles/a5d6bd3da0a1d7f5f6fb9fa05f1fa458.js","./source/synthesizers.js","./source/midi.js","./node_modules/webmidi/dist/webmidi.esm.js","./node_modules/process/browser.js","./node_modules/jzz/javascript/JZZ.js","./node_modules/jazz-midi/index.js","./source/camera.js","./source/visual.js","./source/patterns.js","./source/instructions.js","./source/person.js","./source/reporting.js","./node_modules/analytics/lib/analytics.browser.cjs.js","./node_modules/@analytics/core/lib/analytics.browser.cjs.js","./node_modules/analytics-utils/lib/analytics-utils.browser.cjs.js","./node_modules/dlv/dist/dlv.umd.js","./node_modules/@analytics/storage-utils/lib/analytics-util-storage.browser.cjs.js","./node_modules/@analytics/cookie-utils/lib/analytics-util-cookie.browser.cjs.js","./node_modules/@analytics/google-analytics/lib/analytics-plugin-ga.browser.cjs.js","./node_modules/@parcel/runtime-js/lib/loaders/browser/js-loader.js","./node_modules/@parcel/runtime-js/lib/cacheLoader.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = require(\"@parcel/plugin\");\n\nvar _utils = require(\"@parcel/utils\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n};\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n}\n\nvar _default = new _plugin.Runtime({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        // If this bundle already has the asset this dependency references,\n        // return a simple runtime of `Promise.resolve(require(\"path/to/asset\"))`.\n        assets.push({\n          filePath: _path.default.join(options.projectRoot, 'JSRuntime.js'),\n          // Using Promise['resolve'] to prevent Parcel from inferring this is an async dependency.\n          // TODO: Find a better way of doing this.\n          code: `module.exports = Promise['resolve'](require(${JSON.stringify('./' + _path.default.relative(options.projectRoot, resolved.value.filePath))}))`,\n          dependency\n        });\n      } else {\n        assets.push(...getLoaderRuntimes({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value\n        }));\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let mainBundle = (0, _nullthrows.default)(bundleGraph.getBundlesInBundleGroup(bundleGroup).find(b => {\n        let main = b.getMainEntry();\n        return main && bundleGroup.entryAssetId === main.id;\n      }));\n\n      if (mainBundle.isInline) {\n        assets.push({\n          filePath: _path.default.join(__dirname, `/bundles/${mainBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, mainBundle));\n    }\n\n    if (shouldUseRuntimeManifest(bundle) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getLoaderRuntimes({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph\n}) {\n  let assets = []; // Sort so the bundles containing the entry asset appear last\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline).sort(bundle => bundle.getEntryAssets().map(asset => asset.id).includes(bundleGroup.entryAssetId) ? 1 : -1); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary) {\n    externalBundles = externalBundles.slice(-1);\n  }\n\n  let loaders = getLoaders(bundle.env); // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = loaders ? externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows.default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    return `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n  }).filter(Boolean) : [];\n\n  if (loaderModules.length > 0) {\n    let loaders = loaderModules.join(', ');\n\n    if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n      loaders = `Promise.all([${loaders}])`;\n\n      if (bundle.env.outputFormat !== 'global') {\n        loaders += `.then(r => r[r.length - 1])`;\n      }\n    } else {\n      loaders = `(${loaders})`;\n    }\n\n    if (bundle.env.outputFormat === 'global') {\n      loaders += `.then(() => parcelRequire('${bundleGroup.entryAssetId}')${// In global output with scope hoisting, functions return exports are\n      // always returned. Otherwise, the exports are returned.\n      bundle.env.scopeHoist ? '()' : ''})`;\n    }\n\n    assets.push({\n      filePath: __filename,\n      code: `module.exports = ${loaders};`,\n      dependency\n    });\n  }\n\n  return assets;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  return bundle.isEntry || bundleGraph.getParentBundles(bundle).some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to) {\n  let relativePathExpr = getRelativePathExpr(from, to);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[getPublicBundleId(bundle)] = (0, _nullthrows.default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to) {\n  if (shouldUseRuntimeManifest(from)) {\n    return `require('./relative-path')(${JSON.stringify(getPublicBundleId(from))}, ${JSON.stringify(getPublicBundleId(to))})`;\n  }\n\n  return JSON.stringify((0, _utils.relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser();\n}\n\nfunction getPublicBundleId(bundle) {\n  return bundle.id.slice(-16);\n}","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","// Just a simple face detection script with visual overlaid feedback and audio\r\n// https://github.com/tensorflow/tfjs-models/tree/master/face-landmarks-detection\r\n// Best used with the Looking Glass Portrait\r\nimport {installer} from './install.js'\r\n\r\nimport {createStore} from './store'\r\n\r\nimport {say, hasSpeech} from './speech'\r\n\r\n// You need to require the backend explicitly because facemesh itself does not\r\nimport { \r\n\taudioContext,\r\n\tactive, playing, \r\n\trandomInstrument, \r\n\tplayAudio, stopAudio, \r\n\tupdateByteFrequencyData,\r\n\tbufferLength,dataArray, \r\n\tsetupAudio,\r\n\tgetVolume, setVolume, setAmplitude, \r\n\trecord } from './audio'\r\n\r\nimport { \r\n\tgetBars, setBars, getBar, \r\n\tstart, stop,\r\n\tnow, \r\n\tsetTimeBetween, timePerBar, \r\n\tgetBPM } from './timing.js'\r\n\t\r\nimport {\r\n\tshowPlayerSelector,\r\n\tprogressBar, \r\n\tvideo,isVideoVisible,toggleVideoVisiblity,\r\n\tsetToggle, setButton, \r\n\tsetupMIDIButton, \r\n\tshowUpdateButton, showReloadButton,\r\n\tsetupCameraForm, \r\n\tsetupInterface, addToolTips,\r\n\tsetFeedback, setToast,\r\n\tfocusApp } from './ui'\r\n\r\nimport { getLocationSettings, getShareLink, addToHistory } from './location-handler'\r\nimport { createDrumkit } from './synthesizers'\r\nimport { setupMIDI } from './midi'\r\nimport { detectCameras, setupCamera, filterVideoCameras } from './camera'\r\nimport { setupImage, getCanvasDimensions } from './visual'\r\nimport { takePhotograph, overdraw, setNodeCount, updateCanvasSize, clear, canvas, drawWaves, drawBars, drawQuantise, drawElement } from './visual'\r\nimport { playNextPart, kitSequence } from './patterns'\r\nimport { getInstruction, getHelp } from './instructions'\r\nimport Person, {DEFAULT_OPTIONS, NAMES} from './person'\r\nimport { setupReporting, track, trackError, trackExit } from './reporting'\r\nimport { VERSION } from './version'\r\n\r\n// DOM Elements\r\nconst body = document.documentElement\r\nconst main = document.querySelector(\"main\")\r\nconst image = document.querySelector(\"img\")\r\n\r\n// Record stuff\r\nconst {isRecording, startRecording, stopRecording} = record()\r\n\r\nconst store = createStore()\r\n\r\n// coletion of persons\r\nconst people = []\r\nlet inputElement = video // image\r\n\t\t\r\nlet instrument\r\n\r\nlet camera\r\nlet photo\r\nlet audio \r\nlet midi\r\nlet midiButton\r\n\r\nlet reporter\r\n\r\n// samples and synths\r\nlet kit\r\nlet patterns\r\nlet recorder\r\n\r\n// As each sample is 2403 ms long, we should try and do it \r\n// as a factor of that, so perhaps bars would be better than BPM?\r\n\r\nlet isLoading = true\r\nlet ultimateFailure = false\r\nlet midiAvailable = false\r\nlet cameraLoading = false\r\nlet noFacesFound = false\r\nlet counter = 0\r\n\r\n// for disco mode!\r\nconst cameraPan = {x:1,y:1}\r\n\r\n\r\n// ESCAPE - no cameras found on system?\r\n// ESCAPE - no GPU\r\n\r\n// should be set on the html but jic\r\nbody.classList.toggle(\"loading\", true)\r\n\r\n// realtime UI options\r\nconst ui = getLocationSettings({\r\n\t// play a constant beat\r\n\tmetronome:false,\r\n\t// play music at same time\r\n\tbackingTrack:false,\r\n\t// clear canvas every frame (if transparent will be ignored)\r\n\tclear:true,\r\n\t// draw video onto canvas\r\n\ttransparent:true,\r\n\t// same thing?\r\n\tsynch:true,\r\n\t// show debug texts\r\n\tdebug:process.env.NODE_ENV === \"development\",\r\n\t// cancel audio playback (not midi)\r\n\tmuted:false,\r\n\t// dual person mode (required reload)\r\n\tduet:false,\r\n\t// synchronise the beats with metronome\r\n\tquantise:true,\r\n\t// show the person's texts above them\r\n\ttext:true,\r\n\t// audio visualiser is actually helpful to play\r\n\tspectrogram:true,\r\n\t// read out important instructions\r\n\tspeak:true\r\n})\r\n\r\nconst SETTINGS = {\r\n\r\n\t// maxFaces - The maximum number of faces detected in the input. Should be set to the minimum number for performance. Defaults to 10.\r\n\tmaxFaces:ui.duet ? 2 : 1,\r\n\t\r\n   \t// Whether to load the MediaPipe iris detection model (an additional 2.6 MB of weights). The MediaPipe iris detection model provides (1) an additional 10 keypoints outlining the irises and (2) improved eye region keypoints enabling blink detection. Defaults to true.\r\n\tshouldLoadIrisModel:true,\r\n\t\r\n\t// maxContinuousChecks - How many frames to go without running the bounding box detector. Only relevant if maxFaces > 1. Defaults to 5.\r\n    // detectionConfidence - Threshold for discarding a prediction. Defaults to 0.9.\r\n    // iouThreshold - A float representing the threshold for deciding whether boxes overlap too much in non-maximum suppression. Must be between [0, 1]. Defaults to 0.3. A score of 0 means no overlapping faces will be detected, whereas a score closer to 1 means the model will attempt to detect completely overlapping faces.\r\n    // scoreThreshold - A threshold for deciding when to remove boxes based on score in non-maximum suppression. Defaults to 0.75. Increase this score in order to reduce false positives (detects fewer faces).\r\n    // modelUrl - Optional param for specifying a custom facemesh model url or a tf.io.IOHandler object.\r\n    // irisModelUrl - Optional param for specifying a custom iris model url or a tf.io.IOHandler object.\r\n}\r\n\r\n// ESCAPE: before doing anything, let us check the bare minimum...\r\n// is https()\r\nif (!ui.debug && location.protocol !== 'https:')\r\n{\r\n\tisLoading = false\r\n\tultimateFailure = true\r\n\tsetToast(\"Redirecting to a secure site, please stand by!\")\r\n\t// show link or just try and force a redirect?\r\n\tsetTimeout(()=> location.replace(`https:${location.href.substring(location.protocol.length)}`), 50 )\r\n\t// EXIT HERE\r\n\treturn\r\n}\r\n\r\n// TODO: a version of the instructor that also reads out the messages\r\nconst setToaster = (message, time=0) => {\r\n\tif (ui.speak)\r\n\t{\r\n\t\tspeak( message,true)\r\n\t}\r\n\tsetToast(message,time)\r\n\t\r\n}\r\n\r\n// This sets the master volume below the compressor\r\nconst setMasterVolume = volume => {\r\n\tconst r = setVolume(volume)\r\n\tstore.setItem('audio', { volume:r })\r\n\tsetToast(`Volume ${Math.ceil(r * 100)}%`,0)\r\n\treturn r\r\n}\r\n\r\nconst speak = toSay => {\r\n\tif ( ui.speak && hasSpeech() ) \r\n\t{\r\n\t\tsay(toSay,true)\r\n\t}\r\n}\r\n\r\n// For all people!\r\nconst loadInstruments = async (method, callback) => people.map( async (person) => { \r\n\tconst instrument = await person[method](callback)\r\n\tsetToast(`${person.name} has ${instrument} loaded`)\r\n\tconsole.log(`${person.name} has ${instrument} loaded` )\r\n\treturn instrument\r\n})\r\n\r\nconst loadRandomInstrument = async (callback) => await loadInstruments('loadRandomInstrument', callback)\r\nconst previousInstrument = async (callback) => await loadInstruments('loadPreviousInstrument', callback)\r\nconst nextInstrument = async (callback) => await loadInstruments('loadNextInstrument', callback)\r\n\r\n// We cache every new user!\r\nconst getPerson = (index) => {\r\n\t\r\n\tconst duetAvailable = ui.duet\r\n\r\n\tif (people[index] == undefined)\r\n\t{\r\n\t\tconst options = { \r\n\t\t\tdots:'green', \r\n\t\t\tleftEyeIris:'blue', \r\n\t\t\trightEyeIris:'blue',\r\n\t\t\thue:Math.random() * 360,\r\n\t\t\tdebug:ui.debug\r\n\t\t}\r\n\t\tconst name = NAMES[index]\r\n\t\tconst savedOptions = store.has(name) ? store.getItem(name) : {}\r\n\t\tconst person = new Person(name, audioContext, audio, options ) \r\n\t\t// see if there is a stored name for the instrument...\r\n\t\tconst instrument = savedOptions.instrument || randomInstrument()\r\n\t\r\n\t\t// the instrument has changed / loaded!\r\n\t\tperson.button.addEventListener( 'instrumentchange', event => {\r\n\t\t\t// save it for next time\r\n\t\t\tconst {detail} = event\r\n\t\t\tconst cache = store.setItem(name, {instrument:detail.instrumentName })\r\n\t\t\tconsole.log(\"External event for \",{ person, detail , cache})\r\n\t\t})\r\n\t\tperson.loadInstrument( instrument, instrumentName => {} )\r\n\t\t\r\n\t\t//console.error(name, {instrument, person, savedOptions})\r\n\t\t\r\n\t\tif (midi && midi.outputs && midi.outputs.length > 0) \r\n\t\t{\r\n\t\t\tperson.setMIDI( midi.outputs[0] )\r\n\t\t}\r\n\t\tpeople.push( person )\r\n\t\treturn person\r\n\t} else{\r\n\t\treturn people[index]\r\n\t}\r\n}\r\n\r\n// BEGIN ---------------------------------------\r\n\r\n// start on click as things require gesture for permission\r\nconst enableMIDIForPerson = (personIndex=0, portIndex=0) => {\r\n\tconst person = getPerson(personIndex)\r\n\tperson.setMIDI(midi.outputs[portIndex])\r\n\tconsole.log(\"Enabling MIDI for\", person)\r\n}\r\n\r\n// this needs a user interaction to trigger\r\nconst enableMIDI = async () => {\r\n\r\n\ttry{\r\n\t\tmidi = await setupMIDI()\r\n\t\t// console.log(midi.inputs)\r\n\t\tif (midi.outputs.length>0)\r\n\t\t{\r\n\t\t\t// w00t\r\n\t\t\tconsole.log(\"MIDI devices\", midi.outputs, midi)\r\n\t\t\tsetFeedback(\"MIDI Available<br>Stand By\", 0)\r\n\t\t\t// use this to fill the peoples\r\n\t\t\tenableMIDIForPerson(0,0)\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t// bugger\r\n\t\t\tconsole.log(\"No MIDI devices detected\", midi)\r\n\t\t\tsetFeedback(\"MIDI Available but no instruments detected\", 0)\r\n\t\t\tsetToast(\"No MIDI Device connected\")\r\n\t\t\tmain.classList.toggle('midi-no-devices', true)\r\n\t\t}\r\n\t\t\r\n\t\t// midi device connected! huzzah!\r\n\t\tmidi.addListener(\"connected\", (e) => {\r\n\t\t\tconsole.log(e)\r\n\t\t\tsetFeedback(\"MIDI Device connected!\")\r\n\t\t\t// check outputs\r\n\t\t\tif (midi.outputs.length > 0)\r\n\t\t\t{\r\n\t\t\t\tmain.classList.toggle('midi-no-devices', false)\r\n\t\t\t\tpeople.forEach( (person,i) => enableMIDIForPerson(i,0) )\r\n\t\t\t}\r\n\t\t\tmidiButton.setText(\"Click to disable\")\r\n\t\t})\r\n\t\t\r\n\t\t// Reacting when a device becomes unavailable\r\n\t\tmidi.addListener(\"disconnected\", (e) => {\r\n\t\t\tconsole.log(e)\r\n\t\t\tsetFeedback(\"Lost MIDI Device connection\")\r\n\t\t\tif (midi.outputs.length > 0)\r\n\t\t\t{\r\n\r\n\t\t\t}else{\r\n\t\t\t\tmain.classList.toggle('midi-no-devices', true)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tmidiAvailable = midi // && midi.outputs && midi.outputs.length > 0\r\n\t\tmain.classList.add('midi-available')\r\n\r\n\t\tsetToast(midi.outputs.length > 0 ? \"MIDI Connected\" : \"Connect a MIDI Device to continue\")\r\n\r\n\t}catch(error){\t\r\n\r\n\t\t// failed\r\n\t\tconsole.error(\"Total failure\", error)\r\n\t\t// this needs a user interaction to trigger\r\n\t\tsetFeedback(\"MIDI NOT Available<br>\"+error, 0)\r\n\t\treturn false\r\n\t}\r\n\t// suvvess\r\n\treturn true\t\r\n}\r\n\r\nconst disableMIDI = () => {\r\n\t// midiButton.setText()\r\n}\r\n\r\n// MIDI will require a user interaction\r\nconst showMIDI = async () => {\r\n\r\n\t// to skip clicking but results in a warning\r\n\tmidiButton = setupMIDIButton( async (b) => {\r\n\t\tawait enableMIDI()\r\n\t\tsetFeedback(\"MIDI available<br>Connecting to instruments...\", 0)\r\n\t\tconsole.log(\"User input detected so enabling MIDI!\")\r\n\t\tmain.classList.add('midi-activated')\r\n\t\treturn false\r\n\t})\r\n\t\r\n\treturn true\r\n}\r\n\r\nconst loadCamera = async (deviceId, name=\"Default\") => {\r\n\tlet newCamera\r\n\t// prevent screen re-draw\r\n\tcameraLoading = true\r\n\ttry{\r\n\t\t\r\n\t\tnewCamera = await setupCamera( video, deviceId )\r\n\t\tif (deviceId && deviceId.length > 0)\r\n\t\t{\r\n\t\t\tstore.setItem( 'camera', {deviceId} )\r\n\t\t\t\r\n\t\t\tconsole.log( deviceId, \"Camera id saved\")\r\n\t\t}\r\n\t\t \r\n\t\ttrack('Action', {category:'Camera', label:name, value:deviceId})\r\n\t\t\t\t\t\t\r\n\t}catch(error){\r\n\t\tconsole.error( deviceId, \"Camera errored\", error)\r\n\t\ttrackError( `${name} camera could not be accessed`, deviceId, \"Camera\" )\r\n\t\tthrow error\r\n\t}\r\n\t\r\n\tcameraLoading = false\r\n\treturn newCamera\r\n}\r\n\r\n// selected\r\nconst setup = async (update, settings, progressCallback) => {\r\n\r\n\tconst loadTotal = 5\r\n\tlet loadIndex = 0\r\n\r\n\ttry{\r\n\t\t\r\n\t\tsetFeedback(\"Setting things up\")\r\n\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t\tif (image)\r\n\t\t{\r\n\t\t\tsetFeedback( \"Image downloaded...<br> Please wait\")\r\n\t\t\tphoto = await setupImage(image)\r\n\t\t}\r\n\t\t\r\n\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t\t// wait for video or image to be loaded!\r\n\t\tif (video)\r\n\t\t{\r\n\t\t\tconst deviceId = store.has('camera') ? store.getItem('camera').deviceId : undefined\r\n\t\t\tsetFeedback( deviceId ? \"Found saved camera\" : \"Attempting to locate a camera...<br>Please click accept if you are prompted\")\r\n\t\t\r\n\t\t\tconst videoCameraDevices = filterVideoCameras( await detectCameras() )\r\n\t\t\t\r\n\t\t\ttry{\r\n\t\t\t\tcamera = await loadCamera(deviceId, \"Saved\")\r\n\r\n\t\t\t}catch( error ) {\r\n\r\n\t\t\t\t// bummer! try and use fallback?\r\n\t\t\t\tif (videoCameraDevices.length > 1)\r\n\t\t\t\t{\r\n\t\t\t\t\t// loop through and try the others?\r\n\t\t\t\t\tsetFeedback( \"Could not open saved camera, but found others...\")\r\n\t\t\t\t\tcamera = await loadCamera()\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tsetFeedback( \"Could not open saved camera, looking for another...\")\r\n\t\t\t\t\tcamera = await loadCamera()\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!camera)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsetFeedback( \"Could not find any camera :(\")\r\n\t\t\t\t\t\t// ultimate failure???\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// delete saved key\r\n\t\t\t\tstore.removeItem('cameraId')\r\n\t\t\t}\r\n\r\n\t\t\t// check to see if we want a selector\r\n\t\t\tif (videoCameraDevices.length > 1)\r\n\t\t\t{\r\n\t\t\t\tsetupCameraForm(videoCameraDevices, async (selected) => {\r\n\t\t\t\t\tcamera = loadCamera( selected.deviceId, selected.label )\r\n\t\t\t\t\t//console.log( selected.deviceId, \"Camera selected\",selected, camera)\r\n\t\t\t\t\tsetToast( `Camera ${selected.label} changed`, 0 )\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t// show / hide camera button\r\n\t\t\t\tmain.classList.toggle(\"multiple-cameras\", true)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tsetFeedback( \"Camera located!\", 0 )\r\n\t\t\tprogressCallback(loadIndex++/loadTotal)\r\n\t\t}\r\n\t\t\r\n\t\t// at this point the video dimensions are accurate\r\n\t\t// so we add the main style vars\r\n\t\tmain.style.setProperty('--width', video.width )\r\n\t\tmain.style.setProperty('--height', video.height )\r\n\t\tmain.classList.toggle('landscape', video.width > video.height )\r\n\t\tmain.classList.toggle('portrait', video.width < video.height )\r\n\t\tmain.classList.toggle('square', video.width === video.height )\r\n\t\t\r\n\t\tupdateCanvasSize(video.width, video.height)\r\n\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t}catch(error){\r\n\r\n\t\tconst errorMessage = String(error).replace(\"NotAllowedError: \",'')\r\n\t\t// NotAllowedError: Permission denied\r\n\t\tsetFeedback(`Camera could not be accessed<br><strong>${errorMessage}</strong>`, 0)\r\n\t\tsetToast( errorMessage )\r\n\t\tisLoading = false\r\n\t\tultimateFailure = true\r\n\t\ttrackError('Camera Rejected or Not allowed')\r\n\t\t// FATAL ERROR\r\n\t\treturn\r\n\t}\r\n\r\n\ttry{\r\n\t\taudio = setupAudio()\r\n\t\tsetFeedback( \"Audio Available...<br>Instrument \"+instrument+\" Sounds downloaded\", 0 )\r\n\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t\t// not neccessary if using Person\r\n\t\t// instrument = await loadInstrument( randomInstrument() )\r\n\t\t// const instrumentName = await loadRandomInstrument()\r\n\t\t// // now you can play any of the objects keys with\r\n\t\t// // playTrack(instrument[ INSTRUMENT_NAMES[0] ], 0)\r\n\t\t// //playTrack(instrument.A0, 0)\r\n\t\t// setFeedback( instrumentName.name + \" Samples available...<br>Instrument Sounds downloaded\")\r\n\t\t\r\n\t\tkit = createDrumkit()\r\n\t\tpatterns = kitSequence()\r\n\r\n\t\t// console.log(\"Streamin\", {video, photo, camera} )\r\n\t\tsetFeedback( \"Audio available...<br>Instrument Sounds ready\")\r\n\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t}catch(error){\r\n\r\n\t\tultimateFailure = true\r\n\t\tsetFeedback(\"Something went wrong with the Audio<br>\"+error, 0)\r\n\t\treturn \r\n\t}\r\n\r\n\t// MIDI ------\r\n\ttry{\r\n\t\t// rather than enabling midi directly we show a button to enable it\r\n\t\tconst hasMIDI = await showMIDI()\r\n\t\tif (hasMIDI)\r\n\t\t{\r\n\t\t\tmain.classList.add('midi')\r\n\t\t\tsetFeedback(\"MIDI available<br>Click the button to connect\", 0)\r\n\t\t}else{\r\n\t\t\tmain.classList.add('midi','no-instrument')\r\n\t\t\tsetFeedback(\"MIDI available<br>Connect an instrument <small>and click the button</small>\", 0)\r\n\t\t}\r\n\t\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t}catch(error){\r\n\t\t// no midi - don't show midi button\r\n\t\tconsole.log(\"no MIDI!\", error)\r\n\t\tmain.classList.add('no-midi')\r\n\t\tsetFeedback(\"MIDI unavailable, or no instrument connected<br>\"+error, 0)\r\n\t}\r\n\t\r\n\t// const {startRecording, stopRecording} = record(stream)\r\n\t\r\n\t// set the input element to either the image or the video\r\n\t// hide the other or just set the class?\r\n\r\n\t// set the canvas to the size of the video / image\r\n\tcanvas.width = inputElement.width\r\n\tcanvas.height = inputElement.height\r\n\r\n\t// console.error(\"Tensorflow\", tf)\r\n\tmain.classList.add( inputElement.nodeName.toLowerCase() )\r\n\t\r\n\taddToolTips()\r\n\r\n\t// turn up the amp\r\n\tconst volume = store.getItem('audio') ? parseFloat(store.getItem('audio').volume) : 1\r\n\tsetVolume( volume > 0 ? volume : 1 )\r\n\r\n\t// load scripts once eveything has completed...\r\n\t// setTimeout( ()=>{\r\n\t// }, 0 )\r\n\r\n\t// ----------------------------------------------------------------------------------\r\n\r\n\r\n\t// after a period of inactivity...\r\n\t//setFeedback(\"Everything is ready to \"+ (inputElement === video? \"record\" : \"read\"))\r\n\r\n\t// remove loading flag as we now have all of our assets!\r\n\r\n\tprogressCallback(loadIndex++/loadTotal)\r\n\t\r\n\r\n\t// update( inputElement === video, (predictions)=>{\r\n\r\n\t// \t//console.log(inputElement === video, \"Predictions found \",predictions)\r\n\t// })\r\n\t// console.log(inputElement === video, \"Waiting on predicions\")\r\n\t// return\r\n\t// LOOP ---------------------------------------\r\n\r\n\tconst shouldUpdate = () => !cameraLoading\r\n\r\n\t// FaceMesh.getUVCoords \r\n\t// this then runs the loop if set to true\r\n\tupdate( inputElement === video, (predictions)=>{\r\n\r\n\t\tif(isLoading)\r\n\t\t{\r\n\t\t\tisLoading = false\r\n\t\t}\r\n\r\n\t\t// return if camera is still connecting...\r\n\t\tif (cameraLoading)\r\n\t\t{\r\n\t\t\t//console.log(\"update:progress loading\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet tickerTape = ''\r\n\t\tcounter++\r\n\r\n\t\tif (ui.clear)\r\n\t\t{\r\n\t\t\t// clear for invisible canvas but \r\n\t\t\t// NB. this may cause visual disconnect\r\n\t\t\tclear()\r\n\t\t\t\r\n\t\t\tif (!ui.transparent)\r\n\t\t\t{\r\n\t\t\t\t// paste video frame\r\n\t\t\t\tdrawElement( inputElement )\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\t// switch effect type?\r\n\t\t\tconst t = counter * 0.01\r\n\t\t\t\r\n\t\t\toverdraw( -7 * cameraPan.x + Math.sin(t), -4 * cameraPan.y + Math.cos(t))\r\n\t\t}\r\n\t\t\r\n\t\tif (ui.quantise)\r\n\t\t{\r\n\t\t\t// Start on BAR\r\n\t\t\t// show quantise\r\n\t\t\tdrawQuantise(true, getBar())\r\n\t\t}\r\n\t\t\r\n\t\tif (ui.spectrogram)\r\n\t\t{\r\n\t\t\t//drawWaves( dataArray, bufferLength )\r\n\t\t\t\r\n\t\t\tupdateByteFrequencyData()\r\n\t\t\tdrawBars( dataArray, bufferLength )\r\n\t\t}\r\n\t\t\t\r\n\t\tif (predictions)\r\n\t\t{\r\n\t\t\t// loop through all predictions...\r\n\t\t\tfor (let i=0, l=predictions.length; i < l; ++i)\r\n\t\t\t{\r\n\t\t\t\tconst prediction = predictions[i]\r\n\t\t\t\t// create as many people as we need\r\n\t\t\t\tconst person = getPerson(i)\r\n\t\t\t\r\n\t\t\t\t// face available!\r\n\t\t\t\tif (prediction && prediction.faceInViewConfidence > 0.9)\r\n\t\t\t\t{\r\n\t\t\t\t\t//if (!act)\r\n\t\t\t\t\t//main.classList.toggle(\"active\", true)\r\n\t\t\t\t\t// playAudio()\r\n\t\t\t\t\tif (noFacesFound)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnoFacesFound = false\r\n\t\t\t\t\t\tmain.classList.toggle( `${person.name}-active`, true)\r\n\t\t\t\t\t\tmain.classList.toggle( `no-faces`, false)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\t// stopAudio()\r\n\t\t\t\t\tif (!noFacesFound)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// face found!??\r\n\t\t\t\t\t\tmain.classList.toggle( `${person.name}-active`, false)\r\n\t\t\t\t\t\tmain.classList.toggle( `no-faces`, true)\r\n\t\t\t\t\t\tnoFacesFound = true\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetFeedback( getHelp( Math.floor(counter/100) ) )\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// first update the person\r\n\t\t\t\tperson.update(prediction)\r\n\r\n\t\t\t\t// then redraw them\r\n\t\t\t\t// const { yaw, pitch, lipPercentage } = \r\n\t\t\t\tperson.draw(prediction, ui.text)\r\n\t\t\t\t\r\n\t\t\t\t// then whenever you fancy it,\r\n\t\t\t\tif (!ui.quantise && !ui.muted)\r\n\t\t\t\t{\r\n\t\t\t\t\t// unless quantize is turned off\r\n\t\t\t\t\tconst stuff = person.sing()\r\n\t\t\t\t\t// stuff.eyeDirection\r\n\t\t\t\t\tif (i===0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// stuff.eyeDirection\r\n\t\t\t\t\t\t// use person 1's eyes to control other stuff too?\r\n\t\t\t\t\t\t// in this case the direction of the pan in disco mode\r\n\t\t\t\t\t\tcameraPan.x = stuff.eyeDirection\r\n\t\t\t\t\t\tcameraPan.y = stuff.pitch\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// we only want it on the beat\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// you want a tight curve\r\n\t\t\t\t//setFrequency( 1/4 * 261.63 + 261.63 * lipPercentage)\r\n\t\t\t\ttickerTape += `<br>PITCH:${prediction.pitch} ROLL:${prediction.roll} YAW:${prediction.yaw} MOUTH:${Math.ceil(100*prediction.mouthRange/DEFAULT_OPTIONS.LIPS_RANGE)}%`\r\n\t\t\t\t// tickerTape += `<br>PITCH:${Math.ceil(100*prediction.pitch)} ROLL:${Math.ceil(100*prediction.roll)} YAW:${180*prediction.yaw} MOUTH:${Math.ceil(100*prediction.mouthRange/DEFAULT_OPTIONS.LIPS_RANGE)}%`\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}else{\r\n\t\t\t// tickerTape += `No prediction`\r\n\t\t}\r\n\r\n\t\t// Feedback text changes depending on time\r\n\t\tif (!predictions)\r\n\t\t{\r\n\t\t\t// Need to show instructions to the user...\r\n\t\t\t// as no face can be detected\r\n\t\t\tsetFeedback( getHelp( Math.floor(counter/100)  ))\r\n\t\t// }else if (tickerTape.length){\r\n\t\t// \tsetFeedback(tickerTape)\r\n\t\t// \t// setFeedback(`PITCH:${Math.ceil(360*prediction.pitch)} ROLL:${Math.ceil(360*prediction.roll)} YAW:${Math.ceil(360 * prediction.yaw)} MOUTH:${Math.ceil(100*lipPercentage)}% - ${person.instrumentName}`)\r\n\t\t}else{\r\n\t\t\tsetFeedback( getInstruction( Math.floor(counter/100) ))\r\n\t\t\t// setFeedback(`Look at me and open your mouth`)\r\n\t\t}\r\n\r\n\t\t//console.warn(\"update\",predictions, tickerTape )\r\n\t}, shouldUpdate )\r\n\r\n\r\n\t// Metronome\r\n\tconst timer = start( ({bar, bars, barsElapsed, timePassed, elapsed, expected, drift, level, intervals, lag} )=>{\r\n\t\r\n\t\tif (ui.muted)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (ui.metronome && bars % 2 === 0 )\r\n\t\t{\r\n\t\t\t// TODO: change timbre for first & last stroke\r\n\t\t\tconst metronomeLength = 0.1\r\n\t\t\tkit.clack( metronomeLength, bars % 4 === 0 ? 0.2 : 0.1 )\r\n\t\t}\r\n\r\n\t\t// console.log(barsElapsed, \"timer\", timer)\r\n\t\t// Play metronome!\r\n\t\tif(ui.quantise)\r\n\t\t{\r\n\t\t\tfor (let i=0, l=people.length; i<l; ++i )\r\n\t\t\t{\r\n\t\t\t\tconst person = getPerson(i)\r\n\t\t\t\t// yaw, pitch, lipPercentage, eyeDirection\r\n\t\t\t\tconst stuff = person.sing()\r\n\t\t\t\tif (i===0)\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\t// stuff.eyeDirection\r\n\t\t\t\t\t// use person 1's eyes to control other stuff too?\r\n\t\t\t\t\t// in this case the direction of the pan in disco mode\r\n\t\t\t\t\tcameraPan.x = stuff.eyeDirection\r\n\t\t\t\t\tcameraPan.y = stuff.pitch\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// play some accompanyment music!\r\n\t\tif (ui.backingTrack && bar%2 === 0 )\r\n\t\t{\r\n\t\t\tconst kick = playNextPart( patterns.kick, kit.kick )\r\n\t\t\tconst snare = playNextPart( patterns.snare, kit.snare )\r\n\t\t\tconst hat = playNextPart( patterns.hat, kit.hat )\r\n\r\n\t\t\tconsole.error(\"backing|\", {kick, snare, hat })\r\n\t\t\t// todo: also MIDI beats on channel 16?\r\n\t\t}\r\n\r\n\t\tif (playing)\r\n\t\t{\r\n\t\t\t// timePassed\r\n\t\t}\r\n\t\t\r\n\t}, timePerBar() )\r\n\r\n} \r\n\r\n\r\n\r\n\r\nconst load = async (settings, progressCallback) => {\r\n\r\n\tconst loadTotal = 5\r\n\tlet loadIndex = 0\r\n\t\r\n\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t// test of loading external scripts sequentially...\r\n\tconst {loadModel} = await import('./predictor')\r\n\r\n\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t// set up the instrument selctor etc\r\n\tsetupInterface( ui )\r\n\r\n\tprogressCallback(loadIndex++/loadTotal)\r\n\r\n\t// Connect up sone buttons?\r\n\tsetToggle( \"button-quantise\", status =>{\r\n\t\tui.quantise = status\r\n\t\taddToHistory(ui,'quantise')\r\n\t\tmain.classList.toggle('flag-quantise', status )\r\n\t\tsetToast(\"Quantise \" + (ui.quantise ? 'enabled' : 'disabled')  )\r\n\t}, ui.quantise)\r\n\r\n\t// Connect up sone buttons?\r\n\tsetToggle( \"button-metronome\", status =>{\r\n\t\tui.metronome = status\r\n\t\taddToHistory(ui,'metronome')\r\n\t\tmain.classList.toggle('flag-metronome', status )\r\n\t\tsetToast(\"Metronome \" + (ui.metronome ? 'enabled' : 'disabled')  )\r\n\t}, ui.metronome )\r\n\r\n\tsetToggle( \"button-spectrogram\", status =>{\r\n\t\tui.spectrogram = status\r\n\t\taddToHistory(ui,'spectrogram')\r\n\t\tmain.classList.toggle('flag-spectrogram', status )\r\n\t\tsetToast(\"Spectrogram \" + (ui.spectrogram ? 'enabled' : 'disabled')  )\r\n\t}, ui.spectrogram )\r\n\r\n\tsetToggle( \"button-transparent\", status =>{\r\n\t\tui.transparent = status\r\n\t\taddToHistory(ui,'transparent')\r\n\t\tmain.classList.toggle('flag-transparent', status )\r\n\t\tsetToast(\"Video Synch \" + (ui.spectrogram ? 'enabled' : 'disabled')  )\r\n\t}, ui.transparent )\r\n\r\n\tsetToggle( \"button-clear\", status =>{ \r\n\t\tui.clear = status\r\n\t\taddToHistory(ui,'clear')\r\n\t\tmain.classList.toggle('flag-clear', status )\r\n\t}, ui.clear )\r\n\r\n\tsetToggle( \"button-overlay\", status => toggleVideoVisiblity(), !isVideoVisible() )\r\n\r\n\tsetButton( \"button-photograph\", event => {\r\n\t\tconst unique = Math.ceil( now() * 10000000 )\r\n\t\tconst id = `photograph-${unique}`\r\n\t\tconst dimensions = getCanvasDimensions()\r\n\t\tconst img = new Image()\r\n\t\timg.src = takePhotograph()\r\n\t\timg.alt = \"Photograph taken \" + Date.now().toString()\r\n\t\timg.width = dimensions.width\r\n\t\timg.height = dimensions.height\r\n\r\n\t\tconst anchor = document.createElement(\"a\")\r\n\t\tanchor.href = img.src\r\n\t\tanchor.innerHTML = `Click to download this photograph`\r\n\t\tanchor.id = id\r\n\t\tanchor.download = `snapshot-${unique}.png`\r\n\t\tanchor.appendChild(img)\r\n\r\n\t\tdocument.getElementById(\"photographs\").appendChild(anchor)\r\n\r\n\t\trequestAnimationFrame( ()=>document.getElementById(id).scrollIntoView() )\r\n\t} )\r\n\r\n\t// Button video loads random instruments for all\r\n\tsetButton( \"button-video\", status => loadRandomInstrument() )\r\n\t\r\n\tprogressCallback(loadIndex++/loadTotal)\r\n\t\r\n\t// Load tf model and wait\r\n\treturn loadModel(inputElement, settings)\r\n}\r\n\r\n// \r\nsetFeedback(\"Initialising...<br> Please wait\")\r\n\r\n// create our reporter for analytics\r\n// reporter.track()\r\nreporter = setupReporting(\"InterFACE\")\r\n\r\n\r\n// Progressive Web Application ---------------------------------\r\nlet installation = null\r\nlet loadMeter = 0\r\n\r\n// allow for debug via css\r\nbody.classList.toggle(\"debug\", ui.debug )\r\n\r\nconst onLoaded = async () => {\r\n\r\n\tbody.classList.toggle(\"loading\", false)\r\n\tbody.classList.toggle(\"loaded\", true)\r\n\t\r\n\t// focus app\r\n\t\t\r\n\t// at any point we can now trigger the installation\r\n\tif (installation)\r\n\t{\r\n\t\ttry{\r\n\t\t\tconst destination = document.getElementById(\"shared-controls\")\r\n\t\t\tconst needsInstall = await installation( destination )\t\t\r\n\t\t\tsetToast( needsInstall ? \"You can install this as an app! Click install below\" : \"\" )\r\n\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.error(\"Install/Update issue\", error)\r\n\t\t}\r\n\t\t\r\n\t}else{\r\n\t\tconsole.log(\"Loaded Webpage\", VERSION)\r\n\t}\r\n\r\n\ttry{\r\n\t\t// load the share menu :)\r\n\t\tconst sharer = await import('share-menu')\r\n\t}catch(error){\r\n\t\t// disable the share menu...\r\n\t\tdocument.getElementById(\"share\").style.display = \"none\"\r\n\t}\r\n\t\r\n\t// change this depending on whether a face is detected\r\n\tspeak(\"Open your mouth to begin!\")\r\n\r\n\t// Show hackers message\r\n\tif (ui.debug)\r\n\t{\r\n\t\t// console.log(\"Loaded App\", {VERSION, needsInstall, needsUpdate })\r\n\t\tconsole.log(`Loaded App ${VERSION} ${needsInstall ? \"Installable\" : needsUpdate ? \"Update Available\" : \"\"}` )\t\r\n\t}\r\n}\r\n\r\n\r\n// loop until loaded...\r\nconst loadingLoop = async () => {\r\n\r\n\tif (isLoading)\r\n\t{ \r\n\t\t// console.log(\"loading\",loadMeter*100)\r\n\t\trequestAnimationFrame( loadingLoop ) \r\n\t}else{\r\n\r\n\t\tif (ultimateFailure)\r\n\t\t{\r\n\t\t\tbody.classList.add(\"failure\")\r\n\t\t\tshowReloadButton()\r\n\r\n\t\t}else{\r\n\t\t\tonLoaded()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// import {installer} from './install'\r\n// import {update}  from './update.js'\r\n// const test = async ()=>{\r\n// \tconst {installer} = await import('./install.js')\r\n// \tconst {update} = await import('./update.js')\r\n// \tconst destination = document.getElementById(\"shared-controls\")\r\n// \tconst install = await installer(true)\r\n// \tconst needsInstall = await install( destination )\t\t\r\n// \tconst needsUpdate = await update()\r\n// }\r\n// test()\r\n\r\n// progressive web app variant\r\nconst pwa = async() => {\r\n\ttry{\r\n\t\t// const {installer} = await import('./install.js')\r\n\t\tinstallation = await installer(true)\r\n\t\r\n\t\tconst {updateApp} = await import('./update.js')\r\n\t\t\r\n\t\t// may as well disrupt the load if an update is available!\r\n\t\t// as we reload the thing anyways!\r\n\t\tconst {updater, updateAvailable} = await updateApp()\r\n\r\n\t\tif (updateAvailable)\r\n\t\t{\r\n\t\t\tshowUpdateButton(updater)\r\n\t\t\tsetToast(\"An Update is available! Press update to install it\" )\r\n\t\t}\r\n\r\n\t\tconsole.log(\"installer\", { installer, installation})\r\n\t\r\n\t}catch(error){\r\n\t\tconsole.error(\"PWA\", error)\r\n\t}\r\n}\r\n\r\n\r\n\r\n// ---------------------------------------------------------\r\nconst options = Object.assign( {}, SETTINGS, {} )\r\n// now load dependencies and show progress\r\nload(options, progress => {\r\n\t\r\n\t//console.log(\"Loading\", progress, progressBar )\r\n\tprogressBar.setAttribute(\"value\",progress)\r\n\t// ease this?\r\n\tloadMeter = progress\r\n\r\n}).then( async update =>{ \r\n\r\n\tsetToast( \"Please select how many players you want to play\" )\r\n\r\n\tsetFeedback(\"\")\r\n\r\n\t// hide the loading screen but dont sdt it to loaded just yet\r\n\tbody.classList.toggle(\"loading\", false)\r\n\r\n\t// load completed and now we show the ui\r\n\t// for selecting regular or multi-face mode!\r\n\ttry{\r\n\t\tui.duet = await showPlayerSelector(options)\r\n\r\n\t}catch(error){\r\n\t\tconsole.error(\"player selection failed\")\r\n\t}\r\n\tbody.classList.toggle(\"loading\", true)\r\n\r\n\r\n\tconsole.error(\"player selection duet\", ui.duet)\r\n\r\n\t// load settings from store here too?\r\n\t// set up some extra options from query strings\r\n\t// any custom overrides (shouldn't be needed : use query strings)\r\n\treturn setup( update, options, progress => {\r\n\t\t\r\n\t\t//console.log(\"Loading\", progress, progressBar )\r\n\t\tprogressBar.setAttribute(\"value\",progress)\r\n\t\t// ease this?\r\n\t\tloadMeter = progress\r\n\t})\r\n\r\n}).catch( error => {\r\n\tconsole.error(\"Could not load\", error )\r\n})\r\n\r\n\r\nsetFeedback(\"Loading... Please wait<br>This can take <strong>some</strong> time!\")\r\npwa()\r\n\r\nloadingLoop()\r\n\r\n\r\n// Exit\r\nwindow.onbeforeunload = ()=>{\r\n\t// save ui settings in cookie too?\r\n\ttrackExit()\r\n\t//store.setItem(person.name, {instrument})\r\n\tsetToast(\"bye bye!\")\r\n\tsetFeedback(\"strong>I hope you had fun!<</strong>\")\r\n\r\n}\r\n\r\n// document.addEventListener( \"contextmenu\", (e) => {\r\n//     console.log(e)\r\n// })\r\n\r\n// if this is a desktop?\r\nwindow.oncontextmenu = () => {\r\n\t// reset instructions\r\n\tcounter = 0\r\n\t// restart counter?\r\n    //return false     // cancel default menu\r\n}\r\n// ---- Other forms of input -----\r\n\r\n// now wire up the bits...\r\n// canvas.addEventListener('mousedown',loadRandomInstrument )\r\n// video.addEventListener('mousedown', loadRandomInstrument )\r\n\r\nwindow.addEventListener('keydown', async (event)=>{\r\n\r\n\tswitch(event.key)\r\n\t{\r\n\t\tcase 'CapsLock':\r\n\t\t\tui.debug = !ui.debug\r\n\t\t\tpeople.forEach( person => person.debug = ui.debug )\r\n\t\t\tsetToast(`DEBUG : ${ui.debug}`)\r\n\t\t\tspeak( ui.debug ? \"secret mode unlocked\" : \"disabling developer mode\", true)\r\n\t\t\tbreak\r\n\r\n\t\tcase 'Space':\r\n\t\t\t// read out last bit of help?\r\n\t\t\tspeak(document.getElementById('toast').innerText, true)\r\n\t\t\tloadRandomInstrument() \r\n\t\t\tbreak\r\n\r\n\t\tcase 'ArrowLeft':\r\n\t\t\tpreviousInstrument()\r\n\t\t\tbreak\r\n\r\n\t\tcase 'ArrowRight':\r\n\t\t\tnextInstrument() \r\n\t\t\tbreak\r\n\r\n\t\t// change amount of bars\r\n\t\tcase 'ArrowUp':\r\n\t\t\tlet b = getBars() + 1\r\n\t\t\tlet bars = setBars( b )\r\n\t\t\tlet t = setTimeBetween( timePerBar() )\r\n\t\r\n\t\t\tconsole.error(\"bars---\",bars,  b, t )\r\n\t\t\tsetToast(`Bars : ${bars} / BPM : ${getBPM()}`)\r\n\t\t\tbreak\r\n\r\n\t\tcase 'ArrowDown':\r\n\t\t\tlet ub = getBars() - 1\r\n\t\t\tlet ubars = setBars( ub )\r\n\t\t\tlet ut = setTimeBetween( timePerBar() )\r\n\t\r\n\t\t\tconsole.error(\"bars---\", ubars, ub, ut )\r\n\t\t\tsetToast( `Bars ${ubars} / BPM : ${getBPM()}` )\r\n\t\t\tbreak\r\n\r\n\t\tcase ',':\r\n\t\t\tsetNodeCount(-1)\r\n\t\t\tbreak\r\n\r\n\t\tcase '.':\r\n\t\t\tsetNodeCount(1)\r\n\t\t\tbreak\r\n\r\n\t\tcase 'w':\r\n\t\t\tkit.cowbell()\r\n\t\t\tbreak\r\n\r\n\t\tcase 'a':\r\n\t\t\tkit.kick()\r\n\t\t\tbreak\r\n\r\n\t\tcase 's':\r\n\t\t\tkit.snare()\r\n\t\t\tbreak\r\n\r\n\t\tcase 'd':\r\n\t\t\tkit.hat()\r\n\t\t\tbreak\r\n\r\n\t\tcase 'q':\r\n\t\t\tkit.clack()\r\n\t\t\tbreak\r\n\t\r\n\t\tcase 'b':\r\n\t\t\tui.backingTrack = !ui.backingTrack\r\n\t\t\tsetToast( ui.backingTrack ? \"Backing track starting\" : \"Ending Backing Track\" )\r\n\t\t\tbreak\r\n\r\n\t\tcase 'c':\r\n\t\t\tui.clear = !ui.clear\r\n\t\t\tbreak\r\n\r\n\t\tcase 't':\r\n\t\t\tui.text = !ui.text\r\n\t\t\tbreak\r\n\r\n\t\tcase 'r':\r\n\t\t\tif (!isRecording())\r\n\t\t\t{\r\n\t\t\t\tsetToast(\"Recording START\")\r\n\t\t\t\tconsole.error(\"Recording START\", audio)\r\n\t\t\t\trecorder = await startRecording(audio)\r\n\t\t\t\tconsole.error(\"Recording...\", recorder)\r\n\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Recording END\", recorder)\r\n\t\t\t\tsetToast( `Recording Ended - now encoding` )\r\n\t\t\t\tstopRecording().then(recording=>{\r\n\r\n\t\t\t\t\tconst mp3 = encodeRecording(recording, 'audio/mp3;')\r\n\t\t\t\t\t// Creating audio url with reference  \r\n\t\t\t\t\t// of created blob named 'audioData' \r\n\t\t\t\t\tconst audioSrc = window.URL.createObjectURL(mp3)\r\n\t\t\t\t\tconsole.error(\"Recording END\", {recording, audioSrc, mp3})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tbreak\r\n\r\n\t\t// Hide video\r\n\t\tcase 'v':\r\n\t\t\t// FIXME: Alsoenable sync?\r\n\t\t\tvideo.style.visibility = video.style.visibility === \"hidden\" ? \"visible\" : \"hidden\"\r\n\t\t\tbreak\r\n\r\n\t\tcase 'm':\r\n\t\t\tui.metronome = !ui.metronome\r\n\t\t\tsetToast( ui.metronome ? `Quantised enabled` : `Quantise disabled` )\r\n\t\t\tbreak\r\n\r\n\t\tcase '?':\r\n\t\t\t// toggle speech\r\n\t\t\tui.speak = !ui.speak\r\n\t\t\tsetToast( ui.speak ? `Reading out instructions` : `Staying quiet` )\r\n\t\t\tbreak\r\n\r\n\t\t// don't hijack tab you numpty!\r\n\t\t// FILTER\r\n\t\tcase 'Tab':\r\n\t\t\tbreak\r\n\r\n\t\tdefault:\r\n\t\t\tloadRandomInstrument()\r\n\t\t\tspeak(\"Loading random instruments\",true)\r\n\t}\r\n\r\n\t// we run this when we want to \r\n\taddToHistory(ui, event.key)\r\n\tconsole.log(\"key\", ui, event)\r\n})\r\n\r\n// URL has been updated internally\r\nwindow.addEventListener('popstate', (event) => {\r\n\t//console.log(\"location: \" + document.location + \", state: \" + JSON.stringify(event.state))\r\n})\r\n\r\n// window.addEventListener('wheel' , event => {\r\n\t\r\n// \treturn\r\n\r\n// \tlet d = event.detail\r\n// \tconst w =  event.deltaY || event.wheelDelta\r\n// \tlet n = 225\r\n// \tlet n1 = n-1\r\n// \tlet f\r\n\r\n// \t// Normalize delta\r\n// \td = d ? w && (f = w/d) ? d/f : -d/1.35 : w/120\r\n// \t// Quadratic scale if |d| > 1\r\n// \td = d < 1 ? d < -1 ? (-Math.pow(d, 2) - n1) / n : d : (Math.pow(d, 2) + n1) / n\r\n// \t// Delta *should* not be greater than 2...\r\n// \tconst wheel = Math.min(Math.max(d / 2, -1), 1) * 0.1\r\n// \tconst volume = getVolume()\r\n// \t//const result = setMasterVolume(volume + wheel)\r\n\r\n// \tconsole.log(\"mouse wheel\",{ wheel, volume, result}, event)\t\r\n// })\r\n\r\n// window.addEventListener('deviceorientation' , event => {\r\n// \t//console.log(\"device orientation\", event)\r\n// })","\r\nimport { setFeedback, setToast, addTooltip } from './ui'\r\n\r\nimport { VERSION, DATE } from './version'\r\n\r\nimport manifestPath from \"url:./manifest.webmanifest\"\r\n// let manifestPath = \"./manifest.webmanifest\"\r\n\t\r\nconst body = document.documentElement\r\n\r\n// const shareMenu = document.getElementById('share-menu')\r\n// check for beforeinstallprompt support\r\nexport const isSupportingBrowser = window.hasOwnProperty(\"BeforeInstallPromptEvent\")\r\n\r\nlet deferredPrompt\r\n\r\n\t\t   \r\nlet installed = false\r\nlet hasPrompt = false\r\nlet openModal = false\r\n\r\nexport const installer = async (defer=false) => {\r\n\r\n\tlet manifestData\r\n\tlet relatedApps = []\r\n\r\n    // handle iOS specifically\r\n    // this includes the regular iPad\r\n    // and the iPad pro\r\n    // but not macOS\r\n    const isIOS =\r\n      navigator.userAgent.includes(\"iPhone\") || navigator.userAgent.includes(\"iPad\") ||\r\n      (navigator.userAgent.includes(\"Macintosh\") && navigator.maxTouchPoints && navigator.maxTouchPoints > 2)\r\n\r\n\tconst cancelInstall = () => new Promise((resolve, reject) => {\r\n\t\t// close the modal\r\n\t\topenModal = false\r\n\r\n\t//   if (this.hasAttribute(\"openmodal\")) {\r\n\t// \tthis.removeAttribute(\"openmodal\")\r\n\t//   }\r\n\r\n\t//   let event = new CustomEvent(\"hide\")\r\n\t//   this.dispatchEvent(event)\r\n\r\n\t\tresolve()\r\n\t})\r\n\t\r\n\r\n    document.addEventListener(\"keyup\", (event) => {\r\n      if (event.key === \"Escape\") {\r\n        cancelInstall()\r\n      }\r\n\t})\r\n\t\r\n\tconst getInstalledStatus = () => {\r\n\t\tif (navigator.standalone) {\r\n\t\t  return navigator.standalone\r\n\t\t} else if (matchMedia(\"(display-mode: standalone)\").matches) {\r\n\t\t  return true\r\n\t\t} else {\r\n\t\t  return false\r\n\t\t}\r\n\t}\r\n\r\n\tconst shouldShowInstall = () => {\r\n\t\tconst eligibleUser = isSupportingBrowser &&\r\n\t\trelatedApps.length < 1 &&\r\n\t\t(hasPrompt || isIOS)\r\n\t\r\n\t\treturn eligibleUser\r\n\t}\r\n\r\n\t// Check that the manifest has our 3 required properties\r\n\t// If not console an error to the user and return\r\n\tconst checkManifest = (manifestToCheck) => {\r\n\t  if (!manifestToCheck.icons || !manifestToCheck.icons[0]) {\r\n\t\tconsole.error(\"Your web manifest must have atleast one icon listed\");\r\n\t\treturn\r\n\t  }\r\n  \r\n\t  if (!manifestToCheck.name) {\r\n\t\tconsole.error(\"Your web manifest must have a name listed\");\r\n\t\treturn\r\n\t  }\r\n  \r\n\t  if (!manifestToCheck.description) {\r\n\t\tconsole.error(\"Your web manifest must have a description listed\");\r\n\t\treturn\r\n\t  }\r\n\t}\r\n\r\n\tconst getManifestData = async () => {\r\n\t\ttry {\r\n\t\t  const response = await fetch(manifestPath)\r\n\t\t  const data = await response.json()\r\n\t\r\n\t\t  manifestData = data\r\n\t\r\n\t\t  if (data) \r\n\t\t  {\r\n\t\t\t// any point if it only logs and still continues?\r\n\t\t\tcheckManifest(data)\r\n\t\t\treturn data\r\n\t\t  }\r\n\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Manifest could not be loaded\",err)\r\n\t\t  \treturn null\r\n\t\t}\r\n\t  }\r\n\t\r\n\t  \r\n\tconst firstUpdated = async () => {\r\n\t\tif (manifestPath) \r\n\t\t{\r\n\t\t  try {\r\n\t\t\tawait getManifestData()\r\n\t\t  } catch (err) {\r\n\t\t\tconsole.error(\"Error getting manifest, check that you have a valid web manifest\")\r\n\t\t  }\r\n\t\t}\r\n\t\r\n\t\tif (\"getInstalledRelatedApps\" in navigator) {\r\n\t\t\trelatedApps = await navigator.getInstalledRelatedApps()\r\n\t\t}\r\n\t}\r\n\r\n\t// This is created from the manifest\r\n\tconst createOverlayMarkup = () =>\r\n\t`<dialog open>\r\n\t\t<!-- background needs to cancel install too? -->\r\n\t\t<header id=\"logoContainer\">\r\n\t\t\t<img src=\"${ manifestData.icons[0].src }\" alt=\"App Logo\"/>\r\n\r\n\t\t\t<div id=\"installTitle\">\r\n\t\t\t\t<h1>${ manifestData.short_name || manifestData.name}</h1>\r\n\t\t\t\t<p id=\"desc\">${explainer}</p>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\r\n\t\t<button id=\"closeButton\" click=\"\" aria-label=\"Close\">\r\n\t\t\t<svg width=\"23\" height=\"22\" viewBox=\"0 0 23 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t<path opacity=\"0.33\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.11932 0.357981C1.59693 -0.119327 2.37129 -0.119327 2.8489 0.357981L11.7681 9.27152L20.6873 0.357981C21.165 -0.119327 21.9393 -0.119327 22.4169 0.357981C22.8945 0.835288 22.8945 1.60916 22.4169 2.08646L13.4977 11L22.4169 19.9135C22.8945 20.3908 22.8945 21.1647 22.4169 21.642C21.9393 22.1193 21.165 22.1193 20.6873 21.642L11.7681 12.7285L2.8489 21.642C2.37129 22.1193 1.59693 22.1193 1.11932 21.642C0.641705 21.1647 0.641705 20.3908 1.11932 19.9135L10.0385 11L1.11932 2.08646C0.641705 1.60916 0.641705 0.835288 1.11932 0.357981Z\" fill=\"#60656D\"/>\r\n\t\t\t</svg>\r\n\t\t</button>\r\n\r\n\r\n\t\t<div id=\"contentContainer\">\r\n\r\n\t\t\t<div id=\"featuresScreenDiv\">\r\n\r\n\t\t\t${ manifestData.features ? \r\n\t\t\t\t`<div id=\"keyFeatures\">\r\n\t\t\t\t<h3>Features</h3>\r\n\t\t\t\t<ul>\r\n\t\t\t\t${\r\n\t\t\t\t\tmanifestData.features\r\n\t\t\t\t\t? manifestDatafeatures.map((feature) => ` <li>${feature}</li> ` )\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t</div>`\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\r\n\t\t\t${manifestData.screenshots\r\n\t\t\t\t? html`\r\n\t\t\t\t\t<div id=\"screenshotsContainer\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\taria-label=\"previous image\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\tviewBox=\"0 0 512 512\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\td=\"M401.4 224h-214l83-79.4c11.9-12.5 11.9-32.7 0-45.2s-31.2-12.5-43.2 0L89 233.4c-6 5.8-9 13.7-9 22.4v.4c0 8.7 3 16.6 9 22.4l138.1 134c12 12.5 31.3 12.5 43.2 0 11.9-12.5 11.9-32.7 0-45.2l-83-79.4h214c16.9 0 30.6-14.3 30.6-32 .1-18-13.6-32-30.5-32z\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<section id=\"screenshots\">\r\n\t\t\t\t\t\t${manifestData.screenshots.map((screen) => {\r\n\t\t\t\t\t\t\treturn html`\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img alt=\"App Screenshot\" src=\"${screen.src}\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\taria-label=\"next image\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 512 512\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\td=\"M284.9 412.6l138.1-134c6-5.8 9-13.7 9-22.4v-.4c0-8.7-3-16.6-9-22.4l-138.1-134c-12-12.5-31.3-12.5-43.2 0-11.9 12.5-11.9 32.7 0 45.2l83 79.4h-214c-17 0-30.7 14.3-30.7 32 0 18 13.7 32 30.6 32h214l-83 79.4c-11.9 12.5-11.9 32.7 0 45.2 12 12.5 31.3 12.5 43.3 0z\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t`\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"descriptionWrapper\">\r\n\t\t\t\t<h3>${manifestData.descriptionheader}</h3>\r\n\t\t\t\t<p id=\"manifest-description\">${manifestData.description}</p>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\r\n\t\t<button id=\"openButton\" class=\"install-app\">Install InterFACE Version ${VERSION}</button>\r\n\t\t<button class=\"cancel-install\">Cancel</button>\r\n\r\n\t\t<p id=\"iosText\">${iosinstallinfotext}</p> \r\n\r\n\t</dialog>\r\n\t`\r\n\r\n\t\r\n\tconst install = async () => new Promise( async (resolve,reject)=>{\r\n\r\n\t\tif (deferredPrompt) \r\n\t\t{\r\n\t\t\tdeferredPrompt.prompt()\r\n\t\t\r\n\t\t\t//   let event = new CustomEvent(\"show\")\r\n\t\t\t//   this.dispatchEvent(event)\r\n\t\t\tawait cancelInstall()\r\n\r\n\t\t\t// brute force hide the button?\r\n\t\t\t// set installed to true because we dont\r\n\t\t\t// want to show the install button to\r\n\t\t\t// a user who chose not to install?\r\n\t\t\t\t\r\n\t\t \tconst choiceResult = await deferredPrompt.userChoice\r\n\t\r\n\t\t\tif (choiceResult.outcome === \"accepted\") \r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"Your PWA has been installed\")\r\n\t\t\r\n\t\t\t\tinstalled = true\r\n\t\r\n\t\t\t\tresolve(true)\r\n\r\n\t\t  \t} else {\r\n\r\n\t\t\t\tconsole.log(\"User chose to not install\")\r\n\t\t\r\n\t\t\t\tinstalled = false\r\n\t\t\t\t\r\n\t\t\t\tresolve(false);\r\n\t\t  \t}\r\n\r\n\t\t} else {\r\n\t\t\t  // handle else case\r\n\t\t\t  reject(\"no prompt cached\")\r\n\t\t}\r\n\t})\r\n\r\n\tconst begin = async (destination) => {\r\n\r\n\t\tconst showInstaller = shouldShowInstall()\r\n\t\tif (hasPrompt && (\"standalone\" in navigator && navigator.standalone === false) || (showInstaller && installed === false))\r\n\t\t{\r\n\t\t\t// we need to show the installer!\t// const test = await getManifestData()\r\n\t\t\tconst test = await firstUpdated()\r\n\t\t\t\r\n\t\t\tbody.classList.add(getInstalledStatus() ? \"installed\" : \"not-installed\")\r\n\r\n\t\t\t// show install button or update button???\r\n\t\t\t// reveal update button?\r\n\t\t\tconst button = document.createElement('button')\r\n\t\t\tbutton.classList.add(\"install-app\")\r\n\t\t\tbutton.setAttribute(\"aria-label\",`Click to install ${manifestData.short_name} V-${VERSION.replaceAll(\".\",\"-\")}<br>Date:${(new Date(DATE)).getDate()}`  )\r\n\t\t\tbutton.style.setProperty(\"--logo\",`url(${ manifestData.icons[0].src })`)\r\n\r\n\t\t\tbutton.innerHTML = \"Install App\"\r\n\t\t\t\r\n\t\t\taddTooltip(button)\r\n\r\n\t\t\tsetToast(\"This App can be installed!<br> Click the orange button on the left\")\r\n\r\n\t\t\t// on button press...\r\n\t\t\tbutton.addEventListener('click', async ()=>{\r\n\t\t\t\r\n\t\t\t\t// show overlay with install button or just install directly?\r\n\t\t\t\tsetFeedback(\"Installing\",0)\r\n\t\t\t\ttry{\r\n\t\t\t\t\t// installed\r\n\t\t\t\t\tconst success = await install()\r\n\t\t\t\t\tsetToast( success ? \"The App was installed\" : \"Maybe some other time\" )\r\n\t\t\t\t\tif (!success)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// show buton?\r\n\t\t\t\t\t\t//document.querySelector(\".install-app\").style.display = \"none\"\r\n\t\t\t\t\t\tbutton.classList.add(\"later\")\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// hide button\r\n\t\t\t\t\t\tdocument.querySelector(\".install-app\").style.display = \"none\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch(error){\r\n\t\t\t\t\tsetToast(\"The App was not installed\")\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t} )\r\n\r\n\t\t\tdestination = destination || body\r\n    \r\n\t\t\tdestination.appendChild(button)\r\n\r\n\t\t\t// console.log(\"Application is currently \", getInstalledStatus() ? \"installed\" : \"not installed\" )\r\n\t\t\t// console.log({manifestdata: manifestData})\r\n\t\t\r\n\t\t\treturn true\r\n\r\n\t\t}else{\r\n\r\n\t\t\tbody.classList.add( installed ? \"installed\" : \"not-installed\" )\r\n\r\n\t\t\t// we are already showing?\r\n\t\t\t// console.log(\"Application not installable\", {showInstaller, installed} , getInstalledStatus() ? \"installed\" : \"not-installed\" )\r\n\t\t\t// console.error( { isSupportingBrowser, relatedApps, hasPrompt, isIOS} )\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\t  \r\n\t// hijack an install event\r\n\tif (!deferredPrompt && !hasPrompt)\r\n\t{\r\n\t\twindow.addEventListener(\"beforeinstallprompt\", event => {\r\n\t\t\t\r\n\t\t\tdeferredPrompt = event\r\n\t\t\thasPrompt = true\r\n\t\t\tevent.preventDefault() \r\n\r\n\t\t\tif (!defer && !isIOS)\r\n\t\t\t{\r\n\t\t\t\tbegin()\r\n\t\t\t}\r\n\r\n\t\t}, {once:true})\t\r\n\t}\r\n  \r\n\r\n\tif (!defer && isIOS)\r\n\t{\r\n\t\twindow.addEventListener(\"load\", async (event) => {\r\n\t\t\t\r\n\t\t\tbegin()\r\n\r\n\t\t}, {once:true})\t\t\r\n\t}\r\n\r\n\treturn begin\r\n}\r\n\r\n\r\nwindow.addEventListener(\"beforeinstallprompt\", event => {\r\n\t\t\r\n\tdeferredPrompt = event\r\n\thasPrompt = true\r\n\tevent.preventDefault() \r\n\r\n}, {once:true})\r\n /*\r\n\r\n*/\r\n//   render() {\r\n//     return html`\r\n//       ${(\"standalone\" in navigator &&\r\n//         (navigator as any).standalone === false) ||\r\n//       (this.usecustom !== true &&\r\n//         this.shouldShowInstall() &&\r\n//         this.installed === false)\r\n//         ? html`<button\r\n//             part=\"openButton\"\r\n//             id=\"openButton\"\r\n//             @click=\"${() => this.openPrompt()}\"\r\n//           >\r\n//             <slot>\r\n//               ${this.installbuttontext}\r\n//             </slot>\r\n//           </button>`\r\n//         : null}\r\n//       ${this.openmodal === true\r\n//         ? html`\r\n//           <div id=\"installModalWrapper\">\r\n//           ${\r\n//             this.openmodal\r\n//               ? html`<div\r\n//                   id=\"background\"\r\n//                   @click=\"${() => this.cancel()}\"\r\n//                 ></div>`\r\n//               : null\r\n//           }\r\n//           <div id=\"installModal\" part=\"installModal\">\r\n//           <div id=\"headerContainer\">\r\n//           <div id=\"logoContainer\">\r\n//             <img src=\"${\r\n//               this.iconpath ? this.iconpath : this.manifestdata.icons[0].src\r\n//             }\" alt=\"App Logo\"/>\r\n\r\n//             <div id=\"installTitle\">\r\n//               <h1>${this.manifestdata.short_name || this.manifestdata.name}</h1>\r\n\r\n//               <p id=\"desc\">\r\n//                 ${this.explainer}\r\n//               </p>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <button id=\"closeButton\" @click=\"${() =>\r\n//             this.cancel()}\" aria-label=\"Close\">\r\n//             <svg width=\"23\" height=\"22\" viewBox=\"0 0 23 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n//               <path opacity=\"0.33\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.11932 0.357981C1.59693 -0.119327 2.37129 -0.119327 2.8489 0.357981L11.7681 9.27152L20.6873 0.357981C21.165 -0.119327 21.9393 -0.119327 22.4169 0.357981C22.8945 0.835288 22.8945 1.60916 22.4169 2.08646L13.4977 11L22.4169 19.9135C22.8945 20.3908 22.8945 21.1647 22.4169 21.642C21.9393 22.1193 21.165 22.1193 20.6873 21.642L11.7681 12.7285L2.8489 21.642C2.37129 22.1193 1.59693 22.1193 1.11932 21.642C0.641705 21.1647 0.641705 20.3908 1.11932 19.9135L10.0385 11L1.11932 2.08646C0.641705 1.60916 0.641705 0.835288 1.11932 0.357981Z\" fill=\"#60656D\"/>\r\n//             </svg>\r\n//           </button>\r\n//         </div>\r\n\r\n//         <div id=\"contentContainer\">\r\n\r\n//         <div id=\"featuresScreenDiv\">\r\n\r\n//           ${\r\n//             this.manifestdata.features\r\n//               ? html`<div id=\"keyFeatures\">\r\n//             <h3>${this.featuresheader}</h3>\r\n//             <ul>\r\n//               ${\r\n//                 this.manifestdata.features\r\n//                   ? this.manifestdata.features.map((feature) => {\r\n//                       return html` <li>${feature}</li> `;\r\n//                     })\r\n//                   : null\r\n//               }\r\n//             </ul>\r\n//           </div>\r\n//           </div>`\r\n//               : null\r\n//           }\r\n\r\n//           ${\r\n//             this.manifestdata.screenshots\r\n//               ? html`\r\n//                   <div id=\"screenshotsContainer\">\r\n//                     <button\r\n//                       @click=\"${() => this.scrollToLeft()}\"\r\n//                       aria-label=\"previous image\"\r\n//                     >\r\n//                       <svg\r\n//                         xmlns=\"http://www.w3.org/2000/svg\"\r\n//                         viewBox=\"0 0 512 512\"\r\n//                       >\r\n//                         <path\r\n//                           d=\"M401.4 224h-214l83-79.4c11.9-12.5 11.9-32.7 0-45.2s-31.2-12.5-43.2 0L89 233.4c-6 5.8-9 13.7-9 22.4v.4c0 8.7 3 16.6 9 22.4l138.1 134c12 12.5 31.3 12.5 43.2 0 11.9-12.5 11.9-32.7 0-45.2l-83-79.4h214c16.9 0 30.6-14.3 30.6-32 .1-18-13.6-32-30.5-32z\"\r\n//                         />\r\n//                       </svg>\r\n//                     </button>\r\n//                     <section id=\"screenshots\">\r\n//                       ${this.manifestdata.screenshots.map((screen) => {\r\n//                         return html`\r\n//                           <div>\r\n//                             <img alt=\"App Screenshot\" src=\"${screen.src}\" />\r\n//                           </div>\r\n//                         `;\r\n//                       })}\r\n//                     </section>\r\n//                     <button\r\n//                       @click=\"${() => this.scrollToRight()}\"\r\n//                       aria-label=\"next image\"\r\n//                     >\r\n//                       <svg\r\n//                         xmlns=\"http://www.w3.org/2000/svg\"\r\n//                         viewBox=\"0 0 512 512\"\r\n//                       >\r\n//                         <path\r\n//                           d=\"M284.9 412.6l138.1-134c6-5.8 9-13.7 9-22.4v-.4c0-8.7-3-16.6-9-22.4l-138.1-134c-12-12.5-31.3-12.5-43.2 0-11.9 12.5-11.9 32.7 0 45.2l83 79.4h-214c-17 0-30.7 14.3-30.7 32 0 18 13.7 32 30.6 32h214l-83 79.4c-11.9 12.5-11.9 32.7 0 45.2 12 12.5 31.3 12.5 43.3 0z\"\r\n//                         />\r\n//                       </svg>\r\n//                     </button>\r\n//                   </div>\r\n//                 `\r\n//               : null\r\n//           }\r\n//           </div>\r\n\r\n//           <div id=\"descriptionWrapper\">\r\n//             <h3>${this.descriptionheader}</h3>\r\n//             <p id=\"manifest-description\">${this.manifestdata.description}</p>\r\n//           </div>\r\n//         </div>\r\n\r\n//         ${\r\n//           !this.isIOS\r\n//             ? html`<div id=\"buttonsContainer\">\r\n//           ${\r\n//             this.deferredprompt\r\n//               ? html`<button\r\n//                   id=\"installButton\"\r\n//                   @click=\"${() => this.install()}\"\r\n//                 >\r\n//                   ${this.installbuttontext} ${this.manifestdata.short_name}\r\n//                 </button>`\r\n//               : html`<button\r\n//                   @click=\"${() => this.cancel()}\"\r\n//                   id=\"installCancelButton\"\r\n//                 >\r\n//                   ${this.cancelbuttontext}\r\n//                 </button>`\r\n//           }\r\n//         </div>\r\n//           </div>`\r\n//             : html`<p id=\"iosText\">${this.iosinstallinfotext}</p>`\r\n//         }\r\n//         `\r\n//         : null}\r\n//     `;\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Allow app to be installed\r\n// FIXME: Lazy load this whilst camera searching...\r\n\r\n// @customElement(\"pwa-install\")\r\n// export class pwainstall extends LitElement {\r\n//   @property({ type: String }) manifestpath: string = \"manifest.json\";\r\n//   @property({ type: String }) iconpath: string;\r\n//   @property({ type: Object }) manifestdata: ManifestData;\r\n\r\n//   @property({ type: Boolean }) openmodal: boolean = false;\r\n//   @property({ type: Boolean }) showopen: boolean;\r\n//   @property({ type: Boolean }) isSupportingBrowser: boolean;\r\n//   @property({ type: Boolean }) isIOS: boolean;\r\n//   @property({ type: Boolean }) installed: boolean;\r\n//   @property({ type: Boolean }) hasprompt: boolean = false;\r\n//   @property({ type: Boolean }) usecustom: boolean;\r\n//   @property({ type: Array }) relatedApps: any[] = [];\r\n\r\n//   @property({ type: String }) explainer: string =\r\n//     \"This app can be installed on your PC or mobile device.  This will allow this web app to look and behave like any other installed app.  You will find it in your app lists and be able to pin it to your home screen, start menus or task bars.  This installed web app will also be able to safely interact with other apps and your operating system. \";\r\n//   @property({ type: String }) featuresheader: string = \"Key Features\";\r\n//   @property({ type: String }) descriptionheader: string = \"Description\";\r\n//   @property({ type: String }) installbuttontext: string = \"Install\";\r\n//   @property({ type: String }) cancelbuttontext: string = \"Cancel\";\r\n//   @property({ type: String }) iosinstallinfotext: string =\r\n//     \"Tap the share button and then 'Add to Homescreen'\";\r\n\r\n//   @property() deferredprompt: any;\r\n\r\n//   static get styles() {\r\n//     return css`\r\n//       :host {\r\n//         --install-focus-color: #919c9c;\r\n//         --install-button-color: #0078d4;\r\n//         --modal-z-index: 9999;\r\n//         --background-z-index: 9998;\r\n//         --modal-background-color: white;\r\n//       }\r\n\r\n//       button {\r\n//         outline: none;\r\n//       }\r\n\r\n//       #installModalWrapper {\r\n//         height: 100vh;\r\n//         width: 100vw;\r\n//         overflow: auto;\r\n//         position: fixed;\r\n//         bottom: 0;\r\n//         top: 0;\r\n//         left: 0;\r\n//         right: 0;\r\n//         z-index: var(--modal-z-index);\r\n\r\n//         display: flex;\r\n//         justify-content: center;\r\n//         align-items: center;\r\n//       }\r\n\r\n//       #descriptionWrapper {\r\n//         margin-bottom: 3em;\r\n//       }\r\n\r\n//       #installModal {\r\n//         position: absolute;\r\n//         background: var(--modal-background-color);\r\n//         font-family: sans-serif;\r\n//         box-shadow: 0px 25px 26px rgba(32, 36, 50, 0.25),\r\n//           0px 5px 9px rgba(51, 58, 83, 0.53);\r\n//         border-radius: 10px;\r\n//         display: flex;\r\n//         flex-direction: column;\r\n//         padding: 0;\r\n\r\n//         animation-name: opened;\r\n//         animation-duration: 150ms;\r\n\r\n//         z-index: var(--modal-z-index);\r\n\r\n//         max-width: 56em;\r\n//       }\r\n\r\n//       @keyframes opened {\r\n//         from {\r\n//           transform: scale(0.8, 0.8);\r\n//           opacity: 0.4;\r\n//         }\r\n//         to {\r\n//           transform: scale(1, 1);\r\n//           opacity: 1;\r\n//         }\r\n//       }\r\n\r\n//       @keyframes mobile {\r\n//         from {\r\n//           opacity: 0.6;\r\n//         }\r\n//         to {\r\n//           opacity: 1;\r\n//         }\r\n//       }\r\n\r\n//       @keyframes fadein {\r\n//         from {\r\n//           opacity: 0.2;\r\n//         }\r\n//         to {\r\n//           opacity: 1;\r\n//         }\r\n//       }\r\n\r\n//       #background {\r\n//         position: fixed;\r\n//         top: 0;\r\n//         bottom: 0;\r\n//         left: 0;\r\n//         right: 0;\r\n//         background: #e3e3e3b0;\r\n//         backdrop-filter: blur(5px);\r\n//         z-index: var(--background-z-index);\r\n\r\n//         animation-name: fadein;\r\n//         animation-duration: 250ms;\r\n//       }\r\n\r\n//       #headerContainer {\r\n//         display: flex;\r\n//         justify-content: space-between;\r\n//         margin: 40px;\r\n//         margin-bottom: 32px;\r\n//       }\r\n\r\n//       #headerContainer h1 {\r\n//         font-size: 34px;\r\n//         color: #3c3c3c;\r\n//         margin-top: 20px;\r\n//         margin-bottom: 7px;\r\n//       }\r\n\r\n//       #headerContainer img {\r\n//         height: 122px;\r\n//         width: 122px;\r\n//         background: lightgrey;\r\n//         border-radius: 10px;\r\n//         padding: 12px;\r\n//         border-radius: 24px;\r\n//         margin-right: 24px;\r\n//       }\r\n\r\n//       #buttonsContainer {\r\n//         display: flex;\r\n//         justify-content: flex-end;\r\n//         position: relative;\r\n//         height: 100px;\r\n\r\n//         background: #dedede75;\r\n//         width: 100%;\r\n//         right: 0em;\r\n//         border-radius: 0px 0px 12px 12px;\r\n//       }\r\n\r\n//       #openButton,\r\n//       #installButton,\r\n//       #installCancelButton {\r\n//         text-align: center;\r\n//         align-content: center;\r\n//         align-self: center;\r\n//         vertical-align: middle;\r\n//         justify-self: flex-end;\r\n//         line-height: 200%;\r\n//         flex: 0 0 auto;\r\n//         display: inline-block;\r\n//         background: #0078d4;\r\n//         color: #ffffff;\r\n//         cursor: pointer;\r\n//         border: solid 1px rgba(0, 0, 0, 0);\r\n//         outline: none;\r\n//       }\r\n\r\n//       #openButton {\r\n//         background: var(--install-button-color);\r\n//       }\r\n\r\n//       #openButton:focus {\r\n//         outline: auto;\r\n//         outline: -webkit-focus-ring-color auto 1px;\r\n//       }\r\n\r\n//       #installButton,\r\n//       #installCancelButton {\r\n//         min-width: 130px;\r\n//         margin-right: 30px;\r\n//         background: var(--install-button-color);\r\n//         border-radius: 20px;\r\n//         font-weight: 600;\r\n//         font-size: 14px;\r\n//         line-height: 21px;\r\n//         padding-top: 10px;\r\n//         padding-bottom: 9px;\r\n//         padding-left: 20px;\r\n//         padding-right: 20px;\r\n//         outline: none;\r\n//         color: white;\r\n//       }\r\n\r\n//       #closeButton {\r\n//         background: transparent;\r\n//         border: none;\r\n//         color: black;\r\n//         padding-left: 12px;\r\n//         padding-right: 12px;\r\n//         padding-top: 4px;\r\n//         padding-bottom: 4px;\r\n//         border-radius: 20px;\r\n//         font-weight: 600;\r\n//         outline: none;\r\n//         cursor: pointer;\r\n//         align-self: self-end;\r\n//       }\r\n\r\n//       #closeButton:focus,\r\n//       #installButton:focus,\r\n//       #installCancelButton:focus {\r\n//         box-shadow: 0 0 0 3px var(--install-focus-color);\r\n//       }\r\n\r\n//       #contentContainer {\r\n//         margin-left: 40px;\r\n//         margin-right: 40px;\r\n//         flex: 1;\r\n//       }\r\n\r\n//       #contentContainer h3 {\r\n//         font-size: 22px;\r\n//         color: #3c3c3c;\r\n//         margin-bottom: 12px;\r\n//       }\r\n\r\n//       #contentContainer p {\r\n//         font-size: 14px;\r\n//         color: #3c3c3c;\r\n//       }\r\n\r\n//       #featuresScreenDiv {\r\n//         display: flex;\r\n//         justify-content: space-around;\r\n//         align-items: center;\r\n//         margin-right: 20px;\r\n//       }\r\n\r\n//       #featuresScreenDiv h3 {\r\n//         font-style: normal;\r\n//         font-weight: 600;\r\n//         font-size: 22px;\r\n//         line-height: 225%;\r\n//         margin-top: 0px;\r\n//       }\r\n\r\n//       #keyFeatures {\r\n//         overflow: hidden;\r\n//         padding-right: 2em;\r\n//       }\r\n\r\n//       #keyFeatures ul {\r\n//         padding-inline-start: 22px;\r\n//         margin-block-start: 12px;\r\n//       }\r\n\r\n//       #featuresScreenDiv #keyFeatures li {\r\n//         font-style: normal;\r\n//         font-weight: 600;\r\n//         font-size: 16px;\r\n//         line-height: 29px;\r\n//         color: rgba(51, 51, 51, 0.72);\r\n//       }\r\n\r\n//       #screenshotsContainer {\r\n//         max-height: 220px;\r\n//         display: flex;\r\n//         max-width: 30em;\r\n//       }\r\n\r\n//       #screenshotsContainer button {\r\n//         border: none;\r\n//         width: 4em;\r\n\r\n//         transition: background-color 0.2s;\r\n//       }\r\n\r\n//       #screenshotsContainer button:focus,\r\n//       #screenshotsContainer button:hover {\r\n//         background-color: #bbbbbb;\r\n//       }\r\n\r\n//       #screenshotsContainer button svg {\r\n//         width: 28px;\r\n//         fill: #6b6969;\r\n//       }\r\n\r\n//       #screenshots {\r\n//         display: flex;\r\n//         scroll-snap-type: x mandatory;\r\n//         flex-wrap: wrap;\r\n//         flex-direction: column;\r\n//         overflow-x: scroll;\r\n\r\n//         width: 22em;\r\n//         max-height: 220px;\r\n\r\n//         -webkit-overflow-scrolling: touch;\r\n//       }\r\n\r\n//       #screenshots div {\r\n//         display: flex;\r\n//         align-items: center;\r\n//         justify-content: center;\r\n//         scroll-snap-align: start;\r\n\r\n//         height: 14em;\r\n//         width: 100%;\r\n\r\n//         background: #efefef;\r\n//       }\r\n\r\n//       #screenshots img {\r\n//         height: 100%;\r\n//         object-fit: contain;\r\n//       }\r\n\r\n//       #screenshots::-webkit-scrollbar {\r\n//         display: none;\r\n//       }\r\n\r\n//       #tagsDiv {\r\n//         margin-top: 1em;\r\n//         margin-bottom: 1em;\r\n//       }\r\n\r\n//       #desc {\r\n//         width: 100%;\r\n//         max-width: 40em;\r\n//         font-size: 14px;\r\n//         color: #7e7e7e;\r\n//         text-overflow: ellipsis;\r\n//         overflow: hidden;\r\n//       }\r\n\r\n//       #logoContainer {\r\n//         display: flex;\r\n//       }\r\n\r\n//       #tagsDiv span {\r\n//         background: grey;\r\n//         color: white;\r\n//         padding-left: 12px;\r\n//         padding-right: 12px;\r\n//         padding-bottom: 4px;\r\n//         font-weight: bold;\r\n//         border-radius: 24px;\r\n//         margin-right: 12px;\r\n//         padding-top: 1px;\r\n//       }\r\n\r\n//       #iosText {\r\n//         color: var(--install-button-color);\r\n//         text-align: center;\r\n//         font-weight: bold;\r\n\r\n//         position: fixed;\r\n//         bottom: 0;\r\n//         left: 0;\r\n//         right: 0;\r\n//         backdrop-filter: blur(10px);\r\n//         background: rgba(239, 239, 239, 0.17);\r\n//         margin: 0;\r\n//         padding: 2em;\r\n//       }\r\n\r\n//       #manifest-description {\r\n//         white-space: pre-wrap;\r\n//       }\r\n\r\n//       @media (max-height: 780px) {\r\n//         #buttonsContainer {\r\n//           height: 70px;\r\n//           background: transparent;\r\n//         }\r\n//       }\r\n\r\n//       @media (max-width: 1220px) {\r\n//         #installModal {\r\n//           margin: 0;\r\n//           border-radius: 0px;\r\n//           min-height: 100%;\r\n//           width: 100%;\r\n\r\n//           animation-name: mobile;\r\n//           animation-duration: 250ms;\r\n//         }\r\n\r\n//         #screenshots {\r\n//           justify-content: center;\r\n//         }\r\n//       }\r\n\r\n//       @media (max-width: 962px) {\r\n//         #headerContainer h1 {\r\n//           margin-top: 0;\r\n//           margin-bottom: 0;\r\n//         }\r\n\r\n//         #logoContainer {\r\n//           align-items: center;\r\n//         }\r\n\r\n//         #desc {\r\n//           display: none;\r\n//         }\r\n\r\n//         #headerContainer {\r\n//           margin-bottom: 24px;\r\n//         }\r\n\r\n//         #headerContainer img {\r\n//           height: 42px;\r\n//           width: 42px;\r\n//         }\r\n//       }\r\n\r\n//       @media (max-width: 800px) {\r\n//         #background {\r\n//           display: none;\r\n//         }\r\n\r\n//         #installModal {\r\n//           overflow: scroll;\r\n//           box-shadow: none;\r\n//           max-width: 100%;\r\n//           height: 100%;\r\n//         }\r\n\r\n//         #screenshotsContainer {\r\n//           width: 100%;\r\n//         }\r\n\r\n//         #screenshots img {\r\n//           height: 180px;\r\n//         }\r\n\r\n//         #buttonsContainer {\r\n//           display: flex;\r\n//           justify-content: center;\r\n//           bottom: 0;\r\n//           margin-bottom: 0;\r\n//           border-radius: 0;\r\n\r\n//           padding-top: 1em;\r\n//           padding-bottom: 1em;\r\n//         }\r\n\r\n//         #buttonsContainer #installButton {\r\n//           margin-right: 0px;\r\n//         }\r\n\r\n//         #featuresScreenDiv {\r\n//           flex-direction: column;\r\n//           align-items: flex-start;\r\n//           margin-right: 0px;\r\n//         }\r\n\r\n//         #headerContainer {\r\n//           margin: 20px;\r\n//         }\r\n\r\n//         #desc {\r\n//           display: none;\r\n//         }\r\n\r\n//         #contentContainer {\r\n//           margin-left: 20px;\r\n//           margin-right: 20px;\r\n//           margin-bottom: 5em;\r\n//         }\r\n\r\n//         #headerContainer img {\r\n//           height: 60px;\r\n//           width: 60px;\r\n//           margin-right: 12px;\r\n//         }\r\n\r\n//         #buttonsContainer {\r\n//           position: fixed;\r\n//           bottom: 0;\r\n//           background: #efefef2b;\r\n//           backdrop-filter: blur(10px);\r\n//         }\r\n//       }\r\n\r\n//       @media (max-width: 400px) {\r\n//         #headerContainer h1 {\r\n//           font-size: 26px;\r\n//         }\r\n\r\n//         #headerContainer img {\r\n//           height: 40px;\r\n//           width: 40px;\r\n//         }\r\n\r\n//         #featuresScreenDiv h3 {\r\n//           font-size: 18px;\r\n//           margin-bottom: 0px;\r\n//         }\r\n\r\n//         #keyFeatures ul {\r\n//           margin-top: 0px;\r\n//         }\r\n//       }\r\n\r\n//       @media all and (display-mode: standalone) {\r\n//         button {\r\n//           display: none;\r\n//         }\r\n//       }\r\n\r\n//       @media (prefers-color-scheme: dark) {\r\n//         :host {\r\n//           --modal-background-color: black;\r\n//         }\r\n\r\n//         #installModal h1,\r\n//         #installModal h2,\r\n//         #installModal h3,\r\n//         #installModal p,\r\n//         #featuresScreenDiv #keyFeatures li {\r\n//           color: #ffffff;\r\n//         }\r\n\r\n//         #closeButton svg path {\r\n//           fill: #ffffff;\r\n//           opacity: 1;\r\n//         }\r\n\r\n//         #buttonsContainer {\r\n//           background: rgb(36 36 36);\r\n//         }\r\n//       }\r\n\r\n//       /* 08-26-2020: supported by only safari desktop */\r\n//       @media (inverted-colors: inverted) {\r\n//         :host {\r\n//           --install-focus-color: #6e6363;\r\n//           --install-button-color: #ff872b;\r\n//           --modal-background-color: black;\r\n//         }\r\n\r\n//         #installModal h1,\r\n//         #installModal h2,\r\n//         #installModal h3,\r\n//         #installModal p,\r\n//         #featuresScreenDiv #keyFeatures li {\r\n//           color: #ffffff;\r\n//         }\r\n\r\n//         #closeButton svg path {\r\n//           fill: #ffffff;\r\n//           opacity: 1;\r\n//         }\r\n\r\n//         #buttonsContainer {\r\n//           background: rgb(36 36 36);\r\n//         }\r\n//       }\r\n//     `;\r\n//   }\r\n","import {INSTRUMENT_NAMES, INSTRUMENT_FOLDERS} from './instruments'\r\nimport {VERSION, DATE} from './version'\r\nimport {debounce} from './utils'\r\nimport {canFullscreen, exitFullscreen,goFullscreen,toggleFullScreen} from './full-screen'\r\nimport {getShareLink,loadSoloMode,loadDuetMode} from './location-handler'\r\n\r\nconst doc = document\r\n\r\nexport const progressBar = doc.querySelector('progress')\r\n\r\nlet buttonInstrument\r\nlet buttonRecord\r\n\r\nexport let buttonQuantise\r\nexport let buttonMIDI\r\nexport let buttonVideo\r\nexport let controls\r\n\r\nimport PALETTE from \"./palette\"\r\n\r\nconst main = doc.querySelector(\"main\")\r\n\t\r\n// updates the text on screen\r\n// here we take an element and return a method to set it\r\nexport const bindTextElement = (element, rate=700, clearAfter=0, split=false) => {\r\n\t\r\n\tlet cachedMessage = null\r\n\tlet interval = -1\r\n\tlet clearInterval = -1\r\n\tlet currentMessage = null\r\n\t\r\n\tconst db = debounce((message)=>{\r\n\t\telement.innerHTML = message\r\n\t}, rate)\r\n\r\n\tconst clear = (rate) => {\r\n\t\tconst after = clearAfter * rate\r\n\t\tclearInterval = setTimeout(()=>{\r\n\t\t\telement.innerHTML = ''\r\n\t\t}, after)\r\n\t\treturn after\r\n\t}\r\n\t\r\n\treturn element ? (message, responseRate=rate ) => {\r\n\r\n\t\tif (split)\r\n\t\t{\r\n\t\t\tmessage = message.split(/!|\\./i).join(\"<br>\")\r\n\t\t}\r\n\r\n\t\tcurrentMessage = message\r\n\t\t// debounce and only change if var has\r\n\t\tif (element.innerHTML === '' || cachedMessage != message)\r\n\t\t{\r\n\t\t\t// prevent it blanking from previous request\r\n\t\t\tclearTimeout(clearInterval)\r\n\r\n\t\t\tcachedMessage = message\r\n\t\t\tif (responseRate === 0)\r\n\t\t\t{\r\n\t\t\t\t// instant overwrite\r\n\t\t\t\tclearTimeout(interval)\r\n\t\t\t\telement.innerHTML = message\r\n\t\t\t}else{\r\n\t\t\t\t// change it after debounce timeout to prevent flooding\r\n\t\t\t\tinterval = db(message)\t\t\t\t\r\n\t\t\t}\r\n\t\t\t// clear after wards unless intercepted...\r\n\t\t\tif (clearAfter > 0)\r\n\t\t\t{\r\n\t\t\t\tclearInterval = clear(message.length)\r\n\t\t\t}\r\n\t\t}\r\n\t} : null\r\n}\r\n\r\n\r\nexport const video = doc.querySelector(\"video\")\r\nexport const isVideoVisible = () => video.style.visibility === \"hidden\" \r\nexport const toggleVideoVisiblity = value => {\r\n\tconst currentlyVisible = isVideoVisible()\r\n\tconsole.error(\"toggling video vis\", {value, currentlyVisible})\r\n\tvideo.style.visibility = currentlyVisible ? \"visible\" : \"hidden\", !currentlyVisible \r\n}\r\n\r\n// Feedback ui\r\nexport const setFeedback = bindTextElement( doc.getElementById(\"feedback\"), 20 )\r\nexport const setToast = bindTextElement( doc.getElementById(\"toast\"), 20, 900, true )\r\n\r\nexport const setControls = fragment => {\r\n\t\r\n\tconst personControl = doc.getElementById('person-a-controls')\r\n\r\n\t// add to dom or replace existing????\r\n\tpersonControl.appendChild( fragment )\r\n\r\n\t// bind mouse events here???\r\n}\r\n\r\nexport const setupCameraForm = (cameras, callback) => {\r\n\t\r\n\tconst cameraForm = doc.getElementById(\"camera\")\r\n\tconst select = cameraForm.querySelector('select')\r\n\r\n\t// loop through cameras and add to list\r\n\tconst optionElements = cameras.map( (camera, index) => {\r\n\t\t// now add this to the fragment\r\n\t\treturn `<option value=\"${camera.deviceId}\">${camera.label}</option>`\r\n\t})\r\n\t\t\t\r\n\t// we only inject into the select field\r\n\tselect.innerHTML = `<optgroup label=\"Detected Cameras\">${optionElements.join('')}</optgroup>`\r\n\r\n\t// now add the interaction\r\n\tselect.addEventListener( 'change', event=>{\r\n\t\t\r\n\t\tconst selection = select.options.selectedIndex\r\n\t\t// send out the device change to the callback...\r\n\t\tcallback & callback( cameras[selection] )\r\n\t\t//console.error( \"cameraForm input\", {event, select, selection} ) \r\n\t})\r\n}\r\n\r\n// Setup the instrument list - connect to callback?\r\nexport const setupInstrumentForm = callback => {\r\n\t\r\n\t// populate ui\t\r\n\tconst uiOptions = INSTRUMENT_FOLDERS.map( (folder, index) => `<label for=\"${folder}\">${INSTRUMENT_NAMES[index]}<input id=\"${folder}\" name=\"instrument-selector\" type=\"radio\" value=\"${folder}\"></input></label>` ) \r\n\t\r\n\t// bind mouse events too???\r\n\r\n\t// const uiOptions = INSTRUMENT_FOLDERS.map( folder => `<option value=\"${folder}\">${folder}</option>` ) \r\n\treturn `${uiOptions.join('')}`\r\n}\r\n\r\n// a simple midi buttnon with states\r\n// just set the state with the return\r\nexport const setupMIDIButton = (callback) => {\r\n\tlet midiEnabled = false\r\n\tconst onStartRequested = async (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tcallback && callback()\r\n\t\tmidiEnabled = true\r\n\t\t//buttonMIDI.removeEventListener('mousedown', onStartRequested)\r\n\t\treturn false\r\n\t}\r\n\tbuttonMIDI.addEventListener('mousedown', onStartRequested, { once: true })\r\n\treturn {\r\n\t\tsetText:text=>buttonMIDI.innerHTML = test\r\n\t}\r\n}\r\n\r\nexport const addTooltip = button =>  button.addEventListener(\"mouseover\", event => {\r\n\tconst toolTip = event.target.getAttribute(\"aria-label\") || event.target.innerHTML\r\n\tsetToast(toolTip)\r\n})\r\n\r\nexport const setButton = (buttonName, callback ) => {\r\n\tconst element = doc.getElementById(buttonName)\r\n\telement.addEventListener(\"click\", (event) => {\r\n\t\tcallback && callback({element})\r\n\t})\r\n\r\n\treturn element\r\n}\r\n\r\n// this allows checkbox use where the variable is changed\r\nexport const setToggle = (toggleName, callback, value ) => {\r\n\t\r\n\tconst element = setButton( toggleName, ()=>{\r\n\t\tvalue = !value\r\n\t\t// add classes to any associated wrapped label\r\n\t\tif (element.parentNode.nodeName === \"LABEL\")\r\n\t\t{\r\n\t\t\telement.parentNode.classList.toggle(\"checked\", value )\r\n\t\t}\r\n\t\tcallback(value)\r\n\t})\r\n\t// preset the button\r\n\tif (value)\r\n\t{\r\n\t\t// goto parent and add checked classes?\r\n\t\telement.setAttribute('checked', value)\r\n\t\telement.parentNode.classList.toggle(\"checked\", value )\r\n\t}\r\n\treturn element\r\n}\r\n\r\nexport const showReloadButton = () => {\r\n\r\n}\r\n\r\n\r\nexport const showUpdateButton = (action) => {\r\n\t// reveal update button?\r\n\tconst button = doc.createElement('button')\r\n\tbutton.id = \"button-update\"\r\n\tbutton.setAttribute(\"aria-label\", `Update to new version` )\r\n\tbutton.classList.add(\"update-available\")\r\n\tbutton.innerHTML = \"Update\"\r\n\r\n\t// on button press...\r\n\tbutton.addEventListener('click', ()=>action() )\r\n\tcontrols.appendChild(button)\r\n}\r\n\r\nexport const addToolTips = (query=\"button, label\") => {\r\n\t\r\n\t// do a query here to catch all buttons?\r\n\tconst buttons = controls.querySelectorAll(query)\r\n\t\r\n\t// const fragment = doc.createDocumentFragment() \r\n\t// fragment.appendChild(doc.createElement('fieldset'))\r\n\t// const fragment = doc.createElement('fieldset')\r\n\t// fragment.innerHTML = setupInstrumentForm()\r\n\t// add to dom\r\n\t// controls.appendChild( fragment )\r\n\r\n\t// intercept any hover events...\r\n\tbuttons.forEach( button => addTooltip(button) )\r\n}\r\n\r\n// This is the 2nd screen, just after loading\r\n// returns a true or false for if the user hit duet\r\nexport const showPlayerSelector = (options) => new Promise( (resolve,reject)=>{\r\n\r\n\tconst CSS_CLASS = \"player-selection\"\r\n\tconst panel = doc.getElementById(\"player-selector\")\r\n\tconst solo = panel.querySelector(\"#button-solo\")\r\n\tconst duet = panel.querySelector(\"#button-duet\")\r\n\tconst trio = panel.querySelector(\"#button-trio\")\r\n\tconst advanced = panel.querySelector(\"#toggle-advanced-mode\")\r\n\tlet advancedMode = false\r\n\t\r\n\tdoc.documentElement.classList.toggle(CSS_CLASS, true)\r\n\r\n\tconst complete = result => {\r\n\t\t\r\n\t\t// if we are in solo mode\r\n\t\tif (result < 2)\r\n\t\t{\r\n\t\t\tsolo.classList.toggle( \"hide\", true)\r\n\t\t\tduet.classList.toggle( \"hide\", false)\r\n\t\t\t\r\n\t\t\tmain.classList.add(\"solo\")\r\n\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tduet.classList.toggle( \"hide\", true)\r\n\t\t\tsolo.classList.toggle( \"hide\", false)\r\n\t\t\t\r\n\t\t\tmain.classList.add(\"duet\")\r\n\t\t}\r\n\r\n\t\t// start the animation out.\r\n\t\t// NB. This is not superflous as the camera\r\n\t\t// takes a broze age to load into memory\r\n\t\tpanel.classList.add(\"completed\")\r\n\t\tdoc.documentElement.classList.toggle(CSS_CLASS, false)\r\n\t\t\t\r\n\t\t// wait for animation to complete\r\n\t\tsetTimeout( ()=> {\r\n\t\t\tconsole.log({advancedMode})\r\n\t\t\tdoc.documentElement.classList.toggle(CSS_CLASS, false)\r\n\t\t\tpanel.classList.remove(\"completed\")\r\n\t\t}, 450 )\r\n\t\t\r\n\t\tresolve(result > 1)\r\n\t}\r\n\r\n\tsolo.addEventListener(\"click\", event => complete(1) )\r\n\tduet.addEventListener(\"click\", event => complete(2) )\r\n\ttrio.addEventListener(\"click\", event => complete(3) )\r\n\t\r\n\tadvanced.addEventListener(\"change\", event =>{ \r\n\t\tadvancedMode = !advancedMode \r\n\t\tmain.classList.toggle(\"beginner\", !advancedMode)\r\n\t})\r\n\tmain.classList.toggle(\"beginner\", !advancedMode)\r\n\tpanel.focus()\r\n})\r\n\r\n\r\n// DOM elements\r\nexport const setupInterface = ( options ) => {\r\n\tconst h1 = doc.querySelector(\"h1\")\r\n\t\r\n\tconst buttonShare = doc.getElementById(\"share\")\r\n\tconst buttonSolo = doc.getElementById(\"button-solo\")\r\n\tconst buttonDuet = doc.getElementById(\"button-duet\")\r\n\tconst title = doc.getElementById(\"title\")\r\n\t\r\n\tconst shareElement = doc.querySelector(\"share-menu\")\r\n\tshareElement.url = getShareLink( options )\r\n\tbuttonShare.addEventListener('mousedown', e => {\r\n\t\t\r\n\t\tshareElement.setAttribute( \"url\", getShareLink( options ) )\r\n\t\tconsole.error(\"SHARING\", {shareElement, url:shareElement.url  } )\r\n\t}, false)\r\n\t\r\n\tcontrols = doc.getElementById(\"controls\")\r\n\r\n\tbuttonInstrument = doc.getElementById(\"button-instrument\")\r\n\tbuttonVideo = doc.getElementById(\"button-video\")\r\n\tbuttonRecord = doc.getElementById(\"button-record\")\r\n\tbuttonMIDI = doc.getElementById(\"button-midi\")\r\n\tbuttonQuantise = doc.getElementById(\"button-quantise\")\r\n\t//buttonPhotograph = doc.getElementById(\"button-photograph\")\r\n\t\r\n\tif ( canFullscreen() )\r\n\t{\r\n\t\t//also pass this inott a flip flopper\r\n\t\tconst buttonFullscreen = setToggle( \"button-fullscreen\", status =>{\r\n\t\t\toptions.fullscreen = toggleFullScreen()\r\n\t\t\tbuttonFullscreen.classList.toggle(\"fs\", options.fullscreen)\r\n\t\t\t//console.log(\"fullscreen\", options.fullscreen)\r\n\t\t\t//setToast(\"Metronome \" + (ui.metronome ? 'enabled' : 'disabled')  )\r\n\t\t}, false )\r\n\t\r\n\t}else{\r\n\t\t// no full screen mode available so hide the full screen button\r\n\t\tdoc.getElementById( \"button-fullscreen\").classList.toggle(\"hide\", true)\r\n\t}\r\n\r\n\t// if (options.duet){\r\n\t// \th1.innerHTML += \":DUET\"\r\n\t// }\r\n\t\r\n\t// title.innerHTML = \"The InterFACE is ready, open your mouth to begin\"\r\n\t// Show the release date on the UI somewhere...\r\n\t\r\n\tconst releaseDate = new Date(DATE)\r\n\tconst dateOptions = {\r\n\t\thour12 : true,\r\n\t\thour:  \"numeric\",\r\n\t\tminute:  \"numeric\",\r\n\t }\r\n \r\n\tconst versionElement = doc.getElementById(\"version\")\r\n\tconst currentVersion = versionElement.innerHTML\r\n\tconst formattedDate = `${releaseDate.getDate()}/${releaseDate.getMonth()+1}/${releaseDate.getFullYear()} ${ releaseDate.toLocaleTimeString(\"en-GB\",dateOptions) }`\r\n\tversionElement.innerHTML = `${currentVersion} <span id=\"release\">${formattedDate}</span>`\r\n\t\r\n\t// console.log(`InterFACE ${currentVersion} build date : ${formattedDate} `, {DATE, releaseDate})\r\n\t// buttonSolo.addEventListener( \"click\", event => loadDuetMode, false)\r\n\t// buttonDuet.addEventListener( \"click\", event => loadSoloMode, false)\r\n\r\n\t// prevent the form from changing the url\t\r\n\tcontrols.addEventListener(\"submit\", (event) => {\r\n\t\tevent.preventDefault()\r\n\t\t// removes the ?\r\n        //window.history.back()\r\n\t}, true)\r\n}\r\n\r\nexport const focusApp = ()=>{ \r\n\tcontrols\r\n}","export const MUSICAL_NOTES = ['♫','𝅗𝅥','𝅘𝅥','𝅘𝅥𝅮','𝅘𝅥𝅯','𝅘𝅥𝅰','𝅘𝅥𝅱','𝅘𝅥𝅲']\r\n// '𝄞',\r\n\r\nexport const INSTRUMENT_FOLDERS = [\r\n\t\"accordion-mp3\",\r\n\t\"acoustic_bass-mp3\",\r\n\t\"acoustic_grand_piano-mp3\",\r\n\t\"acoustic_guitar_nylon-mp3\",\r\n\t\"acoustic_guitar_steel-mp3\",\r\n\t\"agogo-mp3\",\r\n\t\"alto_sax-mp3\",\r\n\t\"applause-mp3\",\r\n\t\"bagpipe-mp3\",\r\n\t\"banjo-mp3\",\r\n\t\"baritone_sax-mp3\",\r\n\t\"bassoon-mp3\",\r\n\t\"bird_tweet-mp3\",\r\n\t\"blown_bottle-mp3\",\r\n\t\"brass_section-mp3\",\r\n\t\"breath_noise-mp3\",\r\n\t\"bright_acoustic_piano-mp3\",\r\n\t\"celesta-mp3\",\r\n\t\"cello-mp3\",\r\n\t\"choir_aahs-mp3\",\r\n\t\"church_organ-mp3\",\r\n\t\"clarinet-mp3\",\r\n\t\"clavinet-mp3\",\r\n\t\"contrabass-mp3\",\r\n\t\"distortion_guitar-mp3\",\r\n\t\"drawbar_organ-mp3\",\r\n\t\"dulcimer-mp3\",\r\n\t\"electric_bass_finger-mp3\",\r\n\t\"electric_bass_pick-mp3\",\r\n\t\"electric_grand_piano-mp3\",\r\n\t\"electric_guitar_clean-mp3\",\r\n\t\"electric_guitar_jazz-mp3\",\r\n\t\"electric_guitar_muted-mp3\",\r\n\t\"electric_piano_1-mp3\",\r\n\t\"electric_piano_2-mp3\",\r\n\t\"english_horn-mp3\",\r\n\t\"fiddle-mp3\",\r\n\t\"flute-mp3\",\r\n\t\"french_horn-mp3\",\r\n\t\"fretless_bass-mp3\",\r\n\t\"fx_1_rain-mp3\",\r\n\t\"fx_2_soundtrack-mp3\",\r\n\t\"fx_3_crystal-mp3\",\r\n\t\"fx_4_atmosphere-mp3\",\r\n\t\"fx_5_brightness-mp3\",\r\n\t\"fx_6_goblins-mp3\",\r\n\t\"fx_7_echoes-mp3\",\r\n\t\"fx_8_scifi-mp3\",\r\n\t\"glockenspiel-mp3\",\r\n\t\"guitar_fret_noise-mp3\",\r\n\t\"guitar_harmonics-mp3\",\r\n\t\"gunshot-mp3\",\r\n\t\"harmonica-mp3\",\r\n\t\"harpsichord-mp3\",\r\n\t\"helicopter-mp3\",\r\n\t\"honkytonk_piano-mp3\",\r\n\t\"kalimba-mp3\",\r\n\t\"koto-mp3\",\r\n\t\"lead_1_square-mp3\",\r\n\t\"lead_2_sawtooth-mp3\",\r\n\t\"lead_3_calliope-mp3\",\r\n\t\"lead_4_chiff-mp3\",\r\n\t\"lead_5_charang-mp3\",\r\n\t\"lead_6_voice-mp3\",\r\n\t\"lead_7_fifths-mp3\",\r\n\t\"lead_8_bass__lead-mp3\",\r\n\t\"marimba-mp3\",\r\n\t\"melodic_tom-mp3\",\r\n\t\"music_box-mp3\",\r\n\t\"muted_trumpet-mp3\",\r\n\t\"oboe-mp3\",\r\n\t\"ocarina-mp3\",\r\n\t\"orchestra_hit-mp3\",\r\n\t\"orchestral_harp-mp3\",\r\n\t\"overdriven_guitar-mp3\",\r\n\t\"pad_1_new_age-mp3\",\r\n\t\"pad_2_warm-mp3\",\r\n\t\"pad_3_polysynth-mp3\",\r\n\t\"pad_4_choir-mp3\",\r\n\t\"pad_5_bowed-mp3\",\r\n\t\"pad_6_metallic-mp3\",\r\n\t\"pad_7_halo-mp3\",\r\n\t\"pad_8_sweep-mp3\",\r\n\t\"pan_flute-mp3\",\r\n\t\"percussive_organ-mp3\",\r\n\t\"piccolo-mp3\",\r\n\t\"pizzicato_strings-mp3\",\r\n\t\"recorder-mp3\",\r\n\t\"reed_organ-mp3\",\r\n\t\"reverse_cymbal-mp3\",\r\n\t\"rock_organ-mp3\",\r\n\t\"seashore-mp3\",\r\n\t\"shakuhachi-mp3\",\r\n\t\"shamisen-mp3\",\r\n\t\"shanai-mp3\",\r\n\t\"sitar-mp3\",\r\n\t\"slap_bass_1-mp3\",\r\n\t\"slap_bass_2-mp3\",\r\n\t\"soprano_sax-mp3\",\r\n\t\"steel_drums-mp3\",\r\n\t\"string_ensemble_1-mp3\",\r\n\t\"string_ensemble_2-mp3\",\r\n\t\"synth_bass_1-mp3\",\r\n\t\"synth_bass_2-mp3\",\r\n\t\"synth_brass_1-mp3\",\r\n\t\"synth_brass_2-mp3\",\r\n\t\"synth_choir-mp3\",\r\n\t\"synth_drum-mp3\",\r\n\t\"synth_strings_1-mp3\",\r\n\t\"synth_strings_2-mp3\",\r\n\t\"taiko_drum-mp3\",\r\n\t\"tango_accordion-mp3\",\r\n\t\"telephone_ring-mp3\",\r\n\t\"tenor_sax-mp3\",\r\n\t\"timpani-mp3\",\r\n\t\"tinkle_bell-mp3\",\r\n\t\"tremolo_strings-mp3\",\r\n\t\"trombone-mp3\",\r\n\t\"trumpet-mp3\",\r\n\t\"tuba-mp3\",\r\n\t\"tubular_bells-mp3\",\r\n\t\"vibraphone-mp3\",\r\n\t\"viola-mp3\",\r\n\t\"violin-mp3\",\r\n\t\"voice_oohs-mp3\",\r\n\t\"whistle-mp3\",\r\n\t\"woodblock-mp3\",\r\n\t\"xylophone-mp3\"\r\n]\r\n\r\n// TODO: Which of these are loops?\r\n// export const LOOPS = []\r\n// export const SINGLE_SHOTS = []\r\n\r\nexport const cleanTitle = name => name && name.length > 1 ? name.replaceAll(\"_\", \" \").replace(\"-mp3\", \"\") : ''\r\n\r\nexport const INSTRUMENT_NAMES = INSTRUMENT_FOLDERS.map( instrument => cleanTitle(instrument) )\r\n\r\nexport const instrumentCache = {}\r\nexport const fetchInstrument = (name) =>{\r\n\t\r\n\t// FIXME: Create if it doesn't exist?\r\n\treturn instrumentCache[name]\r\n}\r\n\r\nexport const storeInstrument = (name,data) => {\r\n\tinstrumentCache[name] = data\r\n}","export const VERSION=\"0.40.0\";\rexport const DATE=1614381950669;","\r\nexport const debounce = (callback, wait) => {\r\n\tlet timerId\r\n\t\r\n\treturn (...args) => {\r\n\t\t//console.error(args, \"debounce\", arguments)\r\n\t  clearTimeout(timerId)\r\n\t  timerId = setTimeout(() => callback(...args), wait)\r\n\t  return timerId\r\n\t}\r\n}\r\n","\r\nexport const canFullscreen = () => document.fullscreenEnabled || document.mozFullScreenEnabled || document.documentElement.webkitRequestFullScreen\r\n\r\nexport const exitFullscreen = () => {\r\n\tdocument.exitFullscreen()\r\n}\r\n\r\nexport const goFullscreen = (callback) => {\r\n\r\n\tif ( canFullscreen() ) \r\n\t{\r\n\t\tdocument.documentElement.requestFullscreen()\r\n\t}\r\n\t// leave full screen... \r\n}\r\n\r\nexport const toggleFullScreen = () => {\r\n\tif (!document.fullscreenElement) \r\n\t{\r\n\t\tgoFullscreen()\r\n\t\treturn true\r\n\r\n\t} else {\r\n\r\n\t  if (document.exitFullscreen) \r\n\t  {\r\n\t\texitFullscreen()\r\n\t  }\r\n\r\n\t  return false\r\n\t}\r\n}","const guessType = value => {\r\n\r\n\tif (typeof value === \"string\")\r\n\t{\r\n\t\tconst lower = value.toLowerCase()\r\n\t\t// check for bool and such\r\n\t\tif (lower === \"true\" || lower === \"1\") {\r\n\t\t\treturn true\r\n\t\t} else if (lower === \"false\"|| lower === \"0\") {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\treturn value\r\n\r\n\t}else if (Array.isArray(value)){\r\n\t\t// Array convert the array to a string?\r\n\t\t// convert booleans from 1 / 0 ?\r\n\t\treturn value.toString()\r\n\r\n    } else {\r\n\r\n\t\treturn data\r\n\t}\r\n\r\n}\r\n\r\n\r\n// convert string to rudimentary types\r\nexport const parseType = value => {\r\n\r\n\t// check to see if the string is also an array...\r\n\tif (typeof value === \"string\")\r\n\t{\r\n\t\tif (value.toLowerCase() === \"true\") {\r\n\t\t\treturn true\r\n\t\t} else if (value === \"false\") {\r\n\t\t\treturn false\r\n\t\t}else if (value.indexOf(',') >= 0){\r\n\t\t\t// this is a comma seperated list array...\r\n\t\t\t\r\n\t\t\treturn convertIntegerArrayToBooleans( value.split(\",\") )\r\n\r\n\t\t} else if (!isNaN(parseFloat(value))) {\r\n\t\t\t// Number / Int\r\n\t\t\treturn parseFloat(value)\r\n\t\t} else{\r\n\t\t\treturn value\r\n\t\t}\r\n\r\n\t}else if (Array.isArray(value)){\r\n\t\t// Array convert the array to a string?\r\n\t\t// convert booleans from 1 / 0 ?\r\n\t\treturn value.toString()\r\n    } else {\r\n\t\t// God only knows\r\n        return value\r\n    }\r\n}\r\n\r\n// this takes a snapshot of the url and takes and queries\r\n// then it will take apart and create an object\r\n// and return a merged subset\r\nexport const getLocationSettings = (defaultOptions) => {{\r\n\tconst locationOptions = Object.assign( {}, defaultOptions )\r\n\tconst urlParams = new URLSearchParams(window.location.search)\r\n\tfor (const [key, value] of urlParams) \r\n\t{\r\n\t//\tconsole.log(`${key}:${value}`)\r\n\t\t// ensure we data type these\r\n\t\tlocationOptions[key] = guessType(value)\r\n\t}\r\n\r\n\t//console.log(`query:${locationOptions}`)\r\n\treturn locationOptions\r\n}}\r\n\r\n// reload the exact same URL but wih duet=true enabled\r\nexport const loadDuetMode = ()=> {\r\n\t// grab existing...\r\n\tconst urlParams = new URLSearchParams(window.location.search)\r\n\turlParams.duet = true\r\n\t//window.location = url\r\n}\r\n\r\nexport const loadSoloMode = ()=> {\r\n\tconst urlParams = new URLSearchParams(window.location.search)\r\n\turlParams.duet = false\r\n\t//window.location = url\r\n}\r\n\r\nexport const refresh = options => {\r\n\t// save to url?\r\n\twindow.location.reload()\r\n}\r\n\r\nexport const toQuery = options =>  (new URLSearchParams(options).toString())\r\n\r\nexport const addToHistory = (options, title=\"\") => {\r\n\tconst url = new URL(window.location)\r\n\tfor (let i in options){\r\n\t\tconst option = options[i]\r\n\t\turl.searchParams.set(i, option)\r\n\t\t//console.log(\"History\", {out, options, title, url} )\r\n\t}\r\n\t//\r\n\tconst out = window.history.pushState(options, title, url)\r\n\t//console.log(\"History\", {out, options, title, url} )\r\n}\r\nexport const getShareLink = (options) => {\r\n\t\r\n\treturn window.location + toQuery(options)\r\n}","const PALETTE = {\r\n\twhite:\"hsl(22, 28%, 87%)\",\r\n\tdark:\"hsl(30, 6%, 14%)\",\r\n\tgrey:\"hsl(11, 6%, 50%)\",\r\n\tcream:\"hsl(27, 30%, 45%)\",\r\n\tbrown:\"hsl(23, 22%, 30%)\",\r\n\tblue:\"hsl(196, 18%, 33%)\",\r\n\tgreen:\"hsl(56, 18%, 33%)\",\r\n\tyellow:\"hsl(56, 18%, 33%)\",\r\n\torange:\"hsl(28, 69%, 38%)\",\r\n\tred:\"hsl(9, 58%, 35%)\"\r\n}\r\n\r\nexport const DEFAULT_COLOURS = {\r\n\tdots:'red',\r\n\tmouth:'rgba(255,0,0,0.5)',\r\n\tmouthClosed:'rgba(255,0,0,0.2)',\r\n\tlipsUpperInner:'pink',\r\n\tlipsLowerInner:'pink',\r\n\tmidwayBetweenEyes:'blue',\r\n\tleftEyeLower0:'red',\r\n\trightEyeLower0:'red',\r\n\tleftEyeIris:'yellow',\r\n\trightEyeIris:'yellow',\r\n}\r\n\r\nexport default PALETTE","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","import {debounce} from './utils'\r\n\r\n// little local storage wrapper for storing cached objects\r\nexport const createStore = (name=\"Plops\") => {\r\n\tconst storage = localStorage.getItem(name)\r\n\tconst data = Object.assign({}, JSON.parse(storage) )\r\n\tconst save = debounce( updates => {\r\n\t\tconst encoded = JSON.stringify(updates)\r\n\t\tlocalStorage.setItem(name, encoded )\r\n\t\t\r\n\t}, 20 )\r\n\t\r\n// console.error(\"store\",name,\"created\", {data, storage})\r\n\r\n\treturn {\r\n\t\tsave,\r\n\t\thas:key =>{\r\n\t\t\treturn data[key] ? true : false\r\n\t\t},\r\n\t\tremoveItem:key =>{\r\n\t\t\tdelete data[key] \r\n\t\t},\r\n\t\tgetItem:key =>{\r\n\t\t\treturn data[key] \r\n\t\t},\r\n\t\tsetItem:(key,value)=>{\r\n\t\t\tdata[key] = Object.assign( {}, data[key], value )\r\n\t\t\t// save to local\r\n\t\t\tsave(data)\r\n\t\t\t\r\n\t\t\treturn data\r\n\t\t},\r\n\t}\r\n}\r\n\r\n","// https://www.chromestatus.com/features/5687444770914304\r\nconst TIME_OUT = 10000\r\n\r\nexport const hasSpeech = () =>{\r\n  return \"speechSynthesis\" in window\r\n}\r\n\r\n// we have to loop this with a settimout until voices are available...\r\nconst getVoices = async () => new Promise( (resolve,reject) => {\r\n\r\n  let voices \r\n  const startTime = Date.now()\r\n\r\n  const waitForVoices = () => {\r\n\r\n    voices = window.speechSynthesis.getVoices()\r\n\r\n    if (voices.length > 0)\r\n    {\r\n      resolve( voices )\r\n\r\n    }else{\r\n\r\n      // check to see we aren't wasting too much time\r\n      const elapsed = Date.now() - startTime\r\n\r\n      if (elapsed < TIME_OUT)\r\n      {\r\n        // in some ways this is a fudge factor as the voices\r\n        // aren't always known about on DOM available : LOOP\r\n        setTimeout(waitForVoices,0)\r\n\r\n      }else{\r\n        reject(\"No voices found\")\r\n      }\r\n    \r\n    }\r\n  }\r\n\r\n  waitForVoices()\r\n})\r\n\r\nconst getSpecificVoice = async (lang = \"en-US\", name =\"Zira\") =>{\r\n  const voices = getVoices()\r\n  const filtered = voices.filter( voice => {\r\n    // first we check to see if the language is the same...\r\n    return (voice.lang === lang && voice.name.indexOf(name) > -1 )\r\n  })\r\n  return filtered.length < 1 ? voices : filtered\r\n}\r\n\r\n////////////////////////////////////////////////////////////\r\n// Speak this out loud\r\n// rate     0.1 to 10\r\n// pitch    0 to 2\r\n////////////////////////////////////////////////////////////\r\nexport const say = async (text, interupt=true, volume=1, rate=1, pitch=1, lang, name ) =>{\r\n\r\n  return new Promise(  (resolve,reject)=>{\r\n\r\n    if (!hasSpeech)\r\n    {\r\n      reject(\"Speech tech not available\")\r\n\r\n    }else{\r\n\r\n      // now pause whilst we attempt to list...\r\n      const talk = async () => {\r\n\r\n        try{\r\n\r\n          const voices = (lang && name) ? await getSpecificVoice(lang, name) : await getVoices()\r\n          const person = voices[0]\r\n          const speech = new SpeechSynthesisUtterance()\r\n\r\n          speech.lang = 'en-US'\r\n          // set voice if specified\r\n          // Note: some voices don't support altering params\r\n          speech.voice = person\r\n          speech.voiceURI = 'native'\r\n\r\n          // watch for ending...\r\n          speech.onend = (event) => {\r\n            //console.log('Finished in ' + event.elapsedTime + ' seconds.')\r\n            speech.onend = null\r\n            resolve(event)\r\n          }\r\n\r\n          speech.onerror = (event) =>{\r\n            reject()\r\n          }\r\n\r\n          // 0 to 1\r\n          speech.volume = volume\r\n          // 0.1 to 10\r\n          speech.rate = rate\r\n          //0 to 2\r\n          speech.pitch = pitch\r\n          speech.text = text\r\n            // console.error(\"specific voices\", {\r\n            //   speech, lang,\r\n            //   name,\r\n            //   voices\r\n            // });\r\n\r\n          // kill any pending!\r\n          if (interupt)\r\n          {\r\n            window.speechSynthesis.cancel()\r\n          }\r\n          window.speechSynthesis.speak(speech)\r\n\r\n        }catch (error){\r\n\r\n          reject(error) \r\n        }\r\n      }\r\n      talk()\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const stopSpeaking = ()=>{\r\n\r\n  return window.speechSynthesis.cancel()\r\n}\r\n\r\n\r\nexport const isVoiceActive = ()=>{\r\n\r\n  return window.speechSynthesis.pending\r\n}","import {clamp, lerp, TAU} from \"./maths\"\r\nimport {cleanTitle} from './instruments'\r\n\r\nimport {INSTRUMENT_FOLDERS} from \"./instruments\"\r\n\r\nconst BANKS = [\"A\",\"Ab\",\"B\",\"Bb\",\"C\",\"D\", \"Db\",\"E\", \"Eb\", \"F\", \"G\",\"Gb\"]\r\n\r\nconst NOTES_BLACK = [\"Ab\", \"Bb\", \"Db\", \"Eb\", \"Gb\"]\r\nconst NOTES_WHITE = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\", \"G\" ]\r\n\t\r\nexport const randomInstrument = () => INSTRUMENT_FOLDERS[ Math.floor( Math.random() * INSTRUMENT_FOLDERS.length ) ]\r\n\r\nexport let audioContext\r\nlet mediaRecorder\r\n\r\nexport let bufferLength\r\nexport let dataArray\r\n\r\nlet oscillator\r\nlet gainNode\r\nlet delayNode\r\nlet feedbackNode\r\nlet analyser\r\nlet compressor\r\nlet reverb\r\nlet recorder\r\nlet destinationVolume = 0\r\n\r\nexport let playing = false\r\nexport let active = false\r\n\r\nexport const inputNode = () => delayNode\r\nexport const inputDryNode = () => gainNode\r\n\r\nexport const setupAudio = (\r\n\tBUFFER_SIZE = 2048, // the buffer size in units of sample-frames.\r\n\tINPUT_CHANNELS = 1, // the number of channels for this node's input, defaults to 2\r\n\tOUTPUT_CHANNELS = 1 // the number of channels for this node's output, defaults to 2\r\n) => {\r\n\r\n\t// set up forked web audio context, for multiple browsers\r\n  \t// window. is needed otherwise Safari explodes\r\n\taudioContext = new (window.AudioContext || window.webkitAudioContext)()\r\n\r\n\tgainNode = audioContext.createGain()\r\n\tgainNode.gain.value = 0\r\n\r\n\t// oscillator = audioContext.createOscillator()\r\n\t// oscillator.type = \"sine\" // \"sawtooth\"\r\n\t// oscillator.frequency.value = 261.63\r\n\t// oscillator.connect(delayNode)\r\n\t// oscillator.start()\r\n\r\n\t// this should hopefully balance the outputs\r\n\tcompressor = audioContext.createDynamicsCompressor()\r\n\t// \tthreshold: [-100, 0],\r\n\t// \tknee: [0, 40],\r\n\t// \tratio: [1, 20],\r\n\t// \tattack: [0, 1],\r\n\t// \trelease: [0, 1]\r\n\tcompressor.threshold.value = -70\r\n\tcompressor.knee.value = 40\r\n\tcompressor.ratio.value = 15\r\n\tcompressor.attack.value = 0.2\r\n\tcompressor.release.value = 0.5\r\n\r\n\treverb = audioContext.createConvolver()\r\n\t// reverb = audioContext.createConvolver(null, true)\r\n\tdelayNode = audioContext.createDelay(0.01)\r\n\tfeedbackNode = audioContext.createGain()\r\n\r\n\t//delayNode.delayTime.value = 0\r\n\tfeedbackNode.gain.value = 0.2\r\n\r\n\tanalyser = audioContext.createAnalyser()\r\n\tanalyser.minDecibels = -90\r\n\tanalyser.maxDecibels = -10\r\n\tanalyser.smoothingTimeConstant = 0.85\r\n\r\n\t// for waves\r\n\t// analyser.fftSize = 2048\r\n\t// bufferLength = analyser.fftSize\r\n\r\n\t// for bars\r\n\tanalyser.fftSize = 256\r\n\tbufferLength = analyser.frequencyBinCount\r\n\t\r\n    dataArray = new Uint8Array(bufferLength)\r\n\t\r\n\t//console.error(\"instrument\",{oscillator, compressor, dataArray} )\r\n\t\r\n\t// To recreate feedback...\r\n\tdelayNode.connect(feedbackNode)\r\n\tfeedbackNode.connect(delayNode)\r\n\tdelayNode.connect(gainNode)\r\n\r\n\t// delayNode.connect(reverb)\r\n\t// reverb.connect(gainNode)\r\n\r\n\tgainNode.connect(compressor)\r\n\tcompressor.connect(analyser)\r\n\r\n\trecorder = audioContext.createScriptProcessor(BUFFER_SIZE, INPUT_CHANNELS, OUTPUT_CHANNELS)\r\n\r\n\tanalyser.connect(audioContext.destination)\r\n\t\r\n\treturn delayNode\r\n}\r\n\r\n\r\nexport const updateByteFrequencyData = ()=> analyser.getByteFrequencyData(dataArray)\r\nexport const updateByteTimeDomainData = ()=> analyser.getByteTimeDomainData(dataArray)\r\n\r\nconst monitor = () => {\r\n\r\n\tconst result = requestAnimationFrame(monitor)\r\n\r\n\t// waves\r\n\t//analyser.getByteTimeDomainData(dataArray)\r\n\t\r\n\t// bsrs\r\n\tanalyser.getByteFrequencyData(dataArray)\r\n\r\n\treturn result\r\n}\r\n\r\nexport const stopAudio = () => {\r\n\tif (playing)\r\n\t{\r\n\t\tplaying = false\r\n\t\t// you cannot restart an oscillator!\r\n\t\t//oscillator.stop()\r\n\t\t//oscillator.disconnect()\r\n\t\t// analyser.disconnect()\r\n\t\treturn true\r\n\t}else{\r\n\t\treturn false\r\n\t}\r\n\t//console.error(\"stop audio\",{playing})\r\n}\r\nexport const playAudio = () => {\r\n\tif (playing)\r\n\t{\r\n\t\treturn false\r\n\t}else{\r\n\t\tif (audioContext.state === 'suspended') \r\n\t\t{\r\n\t\t\taudioContext.resume()\r\n\t\t}\r\n\t\t// analyser.connect(audioContext.destination)\r\n\t\t//oscillator.connect(delayNode)\r\n\t\t\r\n\t\tplaying = true\r\n\t\tmonitor()\r\n\t\treturn true\r\n\t}\r\n\t//console.error(\"start audio\",{playing})\r\n\treturn oscillator\r\n}\r\n\r\nexport const setShape = shape => {\r\n\toscillator.type = shape\r\n}\r\n\r\nexport const setFrequency = frequency => {\r\n\toscillator.frequency.value = frequency\r\n}\r\n\r\nexport const getVolume = () => destinationVolume // gainNode.gain.value\r\n\r\n// smaller means slower\r\nexport const setVolume = (destinationVolume) => {\r\n\r\n\tdestinationVolume = clamp(destinationVolume, 0, 1)\r\n\t//gainNode.gain.setValueAtTime(newVolume, audioContext.currentTime)\r\n\tgainNode.gain.value = destinationVolume\r\n\r\n\treturn destinationVolume\r\n}\r\n\r\nconst rate = 0.1\r\nconst fadeVolume = (destinationVolume) => {\r\n\r\n\t//gainNode.gain.value = lerp( gain.gain.value, destinationVolume, 0.1 )\r\n\tconst newVolume = gainNode.gain.value + (destinationVolume - gainNode.gain.value) * rate\r\n\tgainNode.gain.setValueAtTime(destinationVolume, audioContext.currentTime)\r\n\t\r\n\tif (gainNode.gain.value === destinationVolume)\r\n\t{\r\n\r\n\t}else{\r\n\t\trequestAnimationFrame( fadeVolume )\r\n\t}\r\n\treturn newVolume\r\n}\r\n\r\n\r\nexport const setAmplitude = amplitude => {\r\n\t// lerp towards\r\n\t destinationVolume = amplitude\r\n\t fadeVolume()\r\n\t//gainNode.gain.clearValues()\r\n\t//gainNode.gain.setValueAtTime(amplitude, audioContext.currentTime)\r\n}\r\n\r\nasync function loadAudio(path) {\r\n\tconst response = await fetch(path)\r\n\tconst arrayBuffer = await response.arrayBuffer()\r\n\tconst audioBuffer = await audioContext.decodeAudioData(arrayBuffer)\r\n\treturn audioBuffer\r\n  }\r\n\r\n  // create a buffer, plop in data, connect and play -> modify graph here if required\r\n  // detune:0,,  playbackRate:1\r\nexport const playTrack = (audioBuffer, offset=0, destination=delayNode, options={ loop:false } ) => {\r\n\t\r\n\treturn new Promise((resolve, reject)=>{\r\n\r\n\t\tconst trackSource = audioContext.createBufferSource()\r\n\t\ttrackSource.buffer = audioBuffer\r\n\t\t\r\n\t\t// loop through options nad add\r\n\t\t// options\r\n\t\ttrackSource.loop = options.loop\r\n\t\t// trackSource.detune = options.detune\r\n\t\t//trackSource.playbackRate = options.playbackRate\r\n\r\n\t\ttrackSource.connect(destination)\r\n\t\t// trackSource.connect(audioContext.destination)\r\n\t\t// console.error(\"Playing track\", {audioBuffer,trackSource} )\r\n\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode\r\n\t\t// FIXME: when it has finished playing remove it...\r\n\t\t// trackSource.addEventListener()\r\n\t\ttrackSource.onended = () => {\r\n\t\t\ttrackSource.disconnect()\r\n\t\t\tactive = false\r\n\t\t\tresolve()\r\n\t\t}\r\n\t\ttrackSource.onerror = (error) => {\r\n\t\t\ttrackSource.disconnect()\r\n\t\t\tactive = false\r\n\t\t\treject(error)\r\n\t\t}\r\n\r\n\t\tif (audioContext.state === 'suspended') \r\n\t\t{\r\n\t\t\taudioContext.resume()\r\n\t\t}\r\n\t\t\r\n\t\tif (offset == 0) \r\n\t\t{\r\n\t\t\ttrackSource.start()\r\n\t\t//offset = audioContext.currentTime\r\n\t\t} else {\r\n\t\t\ttrackSource.start(0, audioContext.currentTime - offset)\r\n\t\t}\r\n\t\tactive = true\r\n\t})\r\n}\r\n\r\n// const track = await loadAudio()\r\n// const r = playTrack(track)\r\n\r\nasync function loadInstrumentPart (instrumentName, part) {\r\n\treturn new Promise((resolve,reject)=>{\r\n\t\tconst path = `${instrumentName}/${part}`\r\n\t\tconst audio = new Audio()\r\n\r\n\t\tconst resolution = event => {\r\n\t\t\tdisconnect()\r\n\t\t\tresolve( audio )\r\n\t\t}\r\n\t\tconst failure = event =>{\r\n\t\t\tdisconnect()\r\n\t\t\treject(event.error)\r\n\t\t} \r\n\r\n\t\tconst connect = ()=>{\r\n\t\t\taudio.addEventListener('canplaythrough',resolution)\r\n\t\t\taudio.addEventListener('error', failure)\r\n\t\t}\r\n\t\tconst disconnect = ()=>{\r\n\t\t\taudio.removeEventListener('error',failure)\r\n\t\t\taudio.removeEventListener('canplaythrough',resolution)\r\n\t\t}\r\n\r\n\t\tconnect()\r\n\t\taudio.src = path\r\n\t})\r\n}\r\n\r\nconst createInstrumentBanks = (fileTye=\"mp3\", dot=\".\")=>{\r\n\r\n\tconst bank = []\r\n\tfor (let b=0; b<BANKS.length;++b)\r\n\t{\r\n\t\tconst key = BANKS[b]\r\n\t\t// insert a 0 for A\r\n\t\tif (key===\"A\")\r\n\t\t{\r\n\t\t\tbank.push( `A0${dot}${fileTye}` )\r\n\t\t}\r\n\t\tfor (let i=1; i<8; ++i)\r\n\t\t{\r\n\t\t\tbank.push( `${key}${i}${dot}${fileTye}` )\r\n\t\t}\r\n\t\t// add an extra one for C\r\n\t\tif (key===\"C\")\r\n\t\t{\r\n\t\t\tbank.push( `C8${dot}${fileTye}` )\r\n\t\t}\r\n\t}\r\n\treturn bank\r\n\t\r\n\t// A0-7\r\n\t// Ab1-7\r\n\t// B0-7\r\n\t// Bb1-Bb7\r\n\t// C1-C8\r\n\t// D1-7\r\n\t// Db1-7\r\n\t// E1-7\r\n\t// Eb1-7\r\n\t// F1-7\r\n\t// G1-7\r\n\t// Gb1-7\r\n}\r\n\r\nexport const NOTE_NAMES = createInstrumentBanks('','')\r\n\r\n// this is an object with the keys being the NOTE_NAMES\r\nconst NOTE_NAMES_FRIENDLY = {}\r\n\r\nNOTE_NAMES.forEach( note => {\r\n\t// for each name we do a clever thing innit...\r\n\tNOTE_NAMES_FRIENDLY[note] = note\r\n} )\r\n\r\n// console.error({BANKS, NOTE_NAMES, NOTE_NAMES_FRIENDLY})\r\n\r\n \r\n// octaves 1-7\r\nexport const getNoteName = (percent, octave=3, isMinor=false) => {\r\n\r\n\t// restrict to 1-7 even though 0 is available for many\r\n\t// octave = clamp(octave, 1, 7)\r\n\tlet noteNumber\r\n\tlet noteName\r\n\t\r\n\tif (isMinor)\r\n\t{\r\n\t\tnoteNumber = Math.floor( percent * (NOTES_BLACK.length-1) )\r\n\t\tnoteName = NOTES_BLACK[noteNumber]\r\n\t}else{\r\n\t\tnoteNumber = Math.floor( percent * (NOTES_WHITE.length-1) )\r\n\t\tnoteName = NOTES_WHITE[noteNumber]\r\n\t}\r\n\r\n\t// here is where we need to do our majic\r\n\t// const BANKS = [\"A\",\"Ab\",\"B\",\"Bb\",\"C\",\"D\", \"Db\",\"E\", \"Eb\", \"F\", \"G\",\"Gb\"]\r\n\t// play a note from bank (this is the same for every octave?)\r\n\t// const noteNumber = Math.floor( percent * (BANKS.length-1) )\r\n\t\r\n\t// console.log(\"Creating note\", {percent, octave, isMinor, noteNumber, noteName} )\r\n\t// const noteNumber = Math.floor( percent * (NOTE_NAMES.length-1) )\r\n\t// const noteNumber = Math.floor( percent * (NOTE_NAMES.length-1) )\r\n\t// const noteNumber = Math.floor( lipPercentage * (INSTRUMENT_NAMES.length-1) )\r\n\t// const noteName = NOTE_NAMES[noteNumber]\r\n\r\n\t// just in case the note name is not found?\r\n\treturn `${noteName}${clamp(octave, 1, 7)}`\r\n\t// return noteName ? `${noteName}${clamp(octave, 1, 7)}` : `A0`\r\n}\r\n\r\n\r\nexport const loadInstrumentParts = (instrumentName=\"alto_sax-mp3\", path=\"./FluidR3_GM\") => {\r\n\r\n\tconst instrumentPath = `${path}/${instrumentName}`\r\n\tconst parts = createInstrumentBanks()\r\n\t// console.error(\"parts\",parts)\r\n\t// array of buffers to pass to playTrack\r\n\tconst instruments = parts.map( part => loadAudio( `${instrumentPath}/${part}` ) )\r\n\t//const instruments = parts.map( part => loadInstrumentPart(instrumentPath, part) )\r\n\t// eg FluidR3_GM\r\n\t// array of promises\r\n\treturn instruments\r\n}\r\n\r\n\r\nexport const loadInstrument = async (instrumentName=\"alto_sax-mp3\", path=\"./FluidR3_GM\", progressCallback ) => {\r\n\t\r\n\tconst output = {\r\n\t\ttitle:cleanTitle(instrumentName),\r\n\t\tname:instrumentName,\r\n\t}\r\n\t// progressCallback?\r\n\tconst parts = await Promise.all( loadInstrumentParts(instrumentName, path) )\r\n\tNOTE_NAMES.forEach( (instrument, index) => {\r\n\t\toutput[ instrument.split('.')[0] ] = parts[index]\r\n\t})\r\n\treturn output\r\n}\r\n\r\n\r\n// If audio data available then push  it to the chunk array \r\nexport const record = (stream)=>{\r\n\tlet recording = false\r\n\tlet dataArray\r\n\r\n\tconst startRecording = stream => {\r\n\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\t\r\n\t\t\tif (recording)\r\n\t\t\t{\r\n\t\t\t\treturn reject(\"already recording\")\r\n\t\t\t}\r\n\r\n\t\t\tdataArray = []\r\n\t\t\t\r\n\t\t\tmediaRecorder = new MediaRecorder(stream)\r\n\t\t\tmediaRecorder.ondataavailable = (ev) =>{ \r\n\t\t\t\tdataArray.push(ev.data)\r\n\t\t\t\tresolve({mediaRecorder,dataArray,stream})\r\n\t\t\t}\r\n\r\n\t\t\tmediaRecorder.onwarning = function(e) {\r\n\t\t\t\tconsole.log('onwarning fired')\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  mediaRecorder.onerror = (error) => {\r\n\t\t\t\tconsole.log('onerror fired')\r\n\t\t\t\tswitch(error.name) {\r\n\t\t\t\t\tcase 'InvalidState':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tcase 'OutOfMemory':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tcase 'IllegalStreamModification':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tcase 'OtherRecordingError':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tcase 'GenericError':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error('MediaRecorder Error', error);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t// Convert the audio data in to blob  \r\n\t\t\t// after stopping the recording \r\n\t\t\tmediaRecorder.start()\r\n\t\t\trecording = true\t\r\n\t\t})\r\n\t}\r\n\r\n\tconst stopRecording = ( ) => {\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\tif (!recording)\r\n\t\t\t{\r\n\t\t\t\treturn reject(\"Not recording\")\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmediaRecorder.onstop = event => { \r\n\t\r\n\t\t\t\t// After fill up the chunk  \r\n\t\t\t\t// array make it empty \r\n\t\t\t\trecording = false\r\n\r\n\t\t\t\t// Pass the audio url to the 2nd video tag \r\n\t\t\t\tresolve( dataArray )\r\n\t\t\t}\r\n\t\t\tmediaRecorder.stop()\r\n\t\t})\r\n\t}\r\n\r\n\tconst encodeRecording = (recording, type='audio/mp3;') => {\r\n\r\n\t\t// 'audio': [\r\n\t\t// \t'audio/webm;codecs=opus',\r\n\t\t// \t'audio/webm',\r\n\t\t// \t'audio/ogg',\r\n\t\t// \t'audio/mp3',\r\n\t\t// \t'audio/wav'\r\n\t\t// ],\r\n\t\t// 'video': [\r\n\t\t// \t'video/webm;codecs=vp9',\r\n\t\t// \t'video/webm;codecs=vp8',\r\n\t\t// \t'video/webm;codecs=h264',\r\n\t\t// \t'video/webm;codecs=opus',\r\n\t\t// \t'video/webm',\r\n\t\t// \t'video/mp4',\r\n\t\t// \t'video/mpeg'\r\n\t\t// ]\r\n\t\tconst audioData = new Blob(recording, { 'type': type })\r\n\t\treturn audioData\r\n\t}\r\n\tconst looper = (blob) => {\r\n\t\tconst audioURL = window.URL.createObjectURL(blob)\r\n \t\tconst audio = document.createElement('audio')\r\n\t\taudio.setAttribute('controls', '')\r\n\t\taudio.src = audioURL;\r\n\t}\r\n\r\n\tconst downloadRecording = () => {\r\n\t\tvar blob = new Blob(recordedChunks, {\r\n\t\t  type: \"video/webm\"\r\n\t\t});\r\n\t\tvar url = URL.createObjectURL(blob);\r\n\t\tvar a = document.createElement(\"a\");\r\n\t\tdocument.body.appendChild(a);\r\n\t\ta.style = \"display: none\";\r\n\t\ta.href = url;\r\n\t\ta.download = \"test.webm\";\r\n\t\ta.click();\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t  }\r\n\r\n\tconst isAvailable = () => !!(window && window.MediaRecorder && typeof window.MediaRecorder.isTypeSupported === 'function' && window.Blob)\r\n\tconst isRecording = () => recording\r\n\r\n\treturn {isAvailable, downloadRecording, encodeRecording, startRecording,stopRecording, isRecording}\r\n} ","export const TAU = 2 * Math.PI\r\n\r\n// provide the value and a smallest and largest original then new sizes\r\nexport const rescale = (smallest, largest=1) => {\r\n    // find the scale and create a method that allows \r\n    // you to simply rescale at will\r\n    const range = 1 / ( largest - smallest )\r\n\r\n    return value => range * ( value - smallest )\r\n}\r\n\r\nexport const lerp = (start, end, amt) => (1-amt) * start + amt * end\r\n\r\nexport const clamp = (val, min, max) => val > max ? max : val < min ? min : val\r\n// Based on https://gist.github.com/gre/1650294\r\n\r\n// No easing, no acceleration\r\nexport const linear = t => t\r\n\r\n// Slight acceleration from zero to full speed\r\nexport const easeInSine = t  => -1 * Math.cos( t * ( Math.PI / 2 ) ) + 1\r\n\r\n// Slight deceleration at the end\r\nexport function easeOutSine( t ) {\r\n    return Math.sin( t * ( Math.PI / 2 ) )\r\n}\r\n\r\n// Slight acceleration at beginning and slight deceleration at end\r\nexport function easeInOutSine( t ) {\r\n    return -0.5 * ( Math.cos( Math.PI * t ) - 1 )\r\n}\r\n\r\n// Accelerating from zero velocity\r\nexport function easeInQuad( t ) {\r\n    return t * t\r\n}\r\n\r\n// Decelerating to zero velocity\r\nexport function easeOutQuad( t ) {\r\n    return t * ( 2 - t )\r\n}\r\n\r\n// Acceleration until halfway, then deceleration\r\nexport function easeInOutQuad( t ) {\r\n    return t < 0.5 ? 2 * t * t : - 1 + ( 4 - 2 * t ) * t\r\n}\r\n\r\n// Accelerating from zero velocity\r\nexport function easeInCubic( t ) {\r\n    return t * t * t\r\n}\r\n\r\n// Decelerating to zero velocity\r\nexport function easeOutCubic( t ) {\r\n    const t1 = t - 1\r\n    return t1 * t1 * t1 + 1\r\n}\r\n\r\n// Acceleration until halfway, then deceleration\r\nexport function easeInOutCubic( t ) {\r\n    return t < 0.5 ? 4 * t * t * t : ( t - 1 ) * ( 2 * t - 2 ) * ( 2 * t - 2 ) + 1\r\n}\r\n\r\n// Accelerating from zero velocity\r\nexport function easeInQuart( t ) {\r\n    return t * t * t * t\r\n}\r\n\r\n// Decelerating to zero velocity\r\nexport function easeOutQuart( t ) {\r\n    const t1 = t - 1\r\n    return 1 - t1 * t1 * t1 * t1\r\n}\r\n\r\n// Acceleration until halfway, then deceleration\r\nexport function easeInOutQuart( t ) {\r\n    const t1 = t - 1\r\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * t1 * t1 * t1 * t1\r\n}\r\n\r\n// Accelerating from zero velocity\r\nexport function easeInQuint( t ) {\r\n    return t * t * t * t * t\r\n}\r\n\r\n// Decelerating to zero velocity\r\nexport function easeOutQuint( t ) {\r\n    const t1 = t - 1\r\n    return 1 + t1 * t1 * t1 * t1 * t1\r\n}\r\n\r\n// Acceleration until halfway, then deceleration\r\nexport function easeInOutQuint( t ) {\r\n    const t1 = t - 1\r\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * t1 * t1 * t1 * t1 * t1\r\n}\r\n\r\n// Accelerate exponentially until finish\r\nexport function easeInExpo( t ) {\r\n\r\n    if( t === 0 ) {\r\n        return 0\r\n    }\r\n\r\n    return Math.pow( 2, 10 * ( t - 1 ) )\r\n\r\n}\r\n\r\n// Initial exponential acceleration slowing to stop\r\nexport function easeOutExpo( t ) {\r\n\r\n    if( t === 1 ) {\r\n        return 1\r\n    }\r\n\r\n    return ( -Math.pow( 2, -10 * t ) + 1 )\r\n\r\n}\r\n\r\n// Exponential acceleration and deceleration\r\nexport function easeInOutExpo( t ) {\r\n    \r\n    if( t === 0 || t === 1 ) {\r\n        return t\r\n    }\r\n\r\n    const scaledTime = t * 2\r\n    const scaledTime1 = scaledTime - 1\r\n\r\n    if( scaledTime < 1 ) {\r\n        return 0.5 * Math.pow( 2, 10 * ( scaledTime1 ) )\r\n    }\r\n\r\n    return 0.5 * ( -Math.pow( 2, -10 * scaledTime1 ) + 2 )\r\n\r\n}\r\n\r\n// Increasing velocity until stop\r\nexport function easeInCirc( t ) {\r\n\r\n    const scaledTime = t / 1\r\n    return -1 * ( Math.sqrt( 1 - scaledTime * t ) - 1 )\r\n\r\n}\r\n\r\n// Start fast, decreasing velocity until stop\r\nexport function easeOutCirc( t ) {\r\n\r\n    const t1 = t - 1\r\n    return Math.sqrt( 1 - t1 * t1 )\r\n\r\n}\r\n\r\n// Fast increase in velocity, fast decrease in velocity\r\nexport function easeInOutCirc( t ) {\r\n\r\n    const scaledTime = t * 2\r\n    const scaledTime1 = scaledTime - 2\r\n\r\n    if( scaledTime < 1 ) {\r\n        return -0.5 * ( Math.sqrt( 1 - scaledTime * scaledTime ) - 1 )\r\n    }\r\n\r\n    return 0.5 * ( Math.sqrt( 1 - scaledTime1 * scaledTime1 ) + 1 )\r\n\r\n}\r\n\r\n// Slow movement backwards then fast snap to finish\r\nexport function easeInBack( t, magnitude = 1.70158 ) {\r\n\r\n    return t * t * ( ( magnitude + 1 ) * t - magnitude )\r\n\r\n}\r\n\r\n// Fast snap to backwards point then slow resolve to finish\r\nexport function easeOutBack( t, magnitude = 1.70158 ) {\r\n\r\n    const scaledTime = ( t / 1 ) - 1\r\n    \r\n    return (\r\n        scaledTime * scaledTime * ( ( magnitude + 1 ) * scaledTime + magnitude )\r\n    ) + 1\r\n\r\n}\r\n\r\n// Slow movement backwards, fast snap to past finish, slow resolve to finish\r\nexport function easeInOutBack( t, magnitude = 1.70158 ) {\r\n\r\n    const scaledTime = t * 2\r\n    const scaledTime2 = scaledTime - 2\r\n\r\n    const s = magnitude * 1.525\r\n\r\n    if( scaledTime < 1) {\r\n\r\n        return 0.5 * scaledTime * scaledTime * (\r\n            ( ( s + 1 ) * scaledTime ) - s\r\n        )\r\n\r\n    }\r\n\r\n    return 0.5 * (\r\n        scaledTime2 * scaledTime2 * ( ( s + 1 ) * scaledTime2 + s ) + 2\r\n    )\r\n\r\n}\r\n// Bounces slowly then quickly to finish\r\nexport function easeInElastic( t, magnitude = 0.7 ) {\r\n\r\n    if( t === 0 || t === 1 ) {\r\n        return t\r\n    }\r\n\r\n    const scaledTime = t / 1\r\n    const scaledTime1 = scaledTime - 1\r\n\r\n    const p = 1 - magnitude\r\n    const s = p / ( 2 * Math.PI ) * Math.asin( 1 )\r\n\r\n    return -(\r\n        Math.pow( 2, 10 * scaledTime1 ) *\r\n        Math.sin( ( scaledTime1 - s ) * ( 2 * Math.PI ) / p )\r\n    )\r\n\r\n}\r\n\r\n// Fast acceleration, bounces to zero\r\nexport function easeOutElastic( t, magnitude = 0.7 ) {\r\n\r\n    const p = 1 - magnitude\r\n    const scaledTime = t * 2\r\n\r\n    if( t === 0 || t === 1 ) {\r\n        return t\r\n    }\r\n\r\n    const s = p / ( 2 * Math.PI ) * Math.asin( 1 )\r\n    return (\r\n        Math.pow( 2, -10 * scaledTime ) *\r\n        Math.sin( ( scaledTime - s ) * ( 2 * Math.PI ) / p )\r\n    ) + 1\r\n\r\n}\r\n\r\n// Slow start and end, two bounces sandwich a fast motion\r\nexport function easeInOutElastic( t, magnitude = 0.65 ) {\r\n\r\n    const p = 1 - magnitude\r\n\r\n    if( t === 0 || t === 1 ) {\r\n        return t\r\n    }\r\n\r\n    const scaledTime = t * 2\r\n    const scaledTime1 = scaledTime - 1\r\n    \r\n    const s = p / ( 2 * Math.PI ) * Math.asin( 1 )\r\n\r\n    if( scaledTime < 1 ) {\r\n        return -0.5 * (\r\n            Math.pow( 2, 10 * scaledTime1 ) *\r\n            Math.sin( ( scaledTime1 - s ) * ( 2 * Math.PI ) / p )\r\n        )\r\n    }\r\n\r\n    return (\r\n        Math.pow( 2, -10 * scaledTime1 ) *\r\n        Math.sin( ( scaledTime1 - s ) * ( 2 * Math.PI ) / p ) * 0.5\r\n    ) + 1\r\n\r\n}\r\n\r\n// Bounce to completion\r\nexport function easeOutBounce( t ) {\r\n\r\n    const scaledTime = t / 1\r\n\r\n    if( scaledTime < ( 1 / 2.75 ) ) {\r\n\r\n        return 7.5625 * scaledTime * scaledTime\r\n\r\n    } else if( scaledTime < ( 2 / 2.75 ) ) {\r\n\r\n        const scaledTime2 = scaledTime - ( 1.5 / 2.75 )\r\n        return ( 7.5625 * scaledTime2 * scaledTime2 ) + 0.75\r\n\r\n    } else if( scaledTime < ( 2.5 / 2.75 ) ) {\r\n\r\n        const scaledTime2 = scaledTime - ( 2.25 / 2.75 )\r\n        return ( 7.5625 * scaledTime2 * scaledTime2 ) + 0.9375\r\n\r\n    } else {\r\n\r\n        const scaledTime2 = scaledTime - ( 2.625 / 2.75 )\r\n        return ( 7.5625 * scaledTime2 * scaledTime2 ) + 0.984375\r\n\r\n    }\r\n\r\n}\r\n\r\n// Bounce increasing in velocity until completion\r\nexport function easeInBounce( t ) {\r\n    return 1 - easeOutBounce( 1 - t )\r\n}\r\n\r\n// Bounce in and bounce out\r\nexport function easeInOutBounce( t ) {\r\n\r\n    if( t < 0.5 ) {\r\n\r\n        return easeInBounce( t * 2 ) * 0.5\r\n        \r\n    }\r\n\r\n    return ( easeOutBounce( ( t * 2 ) - 1 ) * 0.5 ) + 0.5\r\n\r\n}","export const CMD_START = \"start\"\r\nexport const CMD_STOP  = \"stop\"\r\nexport const CMD_UPDATE  = \"update\"\r\n\r\nexport const EVENT_READY = \"ready\"\r\nexport const EVENT_STARTING = \"starting\"\r\nexport const EVENT_STOPPING = \"stopping\"\r\nexport const EVENT_TICK = \"tick\"\r\n\r\nexport const MAX_BARS_ALLOWED = 32\r\n\r\nconst AudioContext = window.AudioContext || window.webkitAudioContext\r\n\r\n// Load in the correct worker...timing.requestframe.worker.js\r\n// const timingWorker = new Worker(\"data-url:./timing.setinterval.worker.js\") \r\n// const timingWorker = new Worker(\"data-url:./timing.settimeout.worker.js\") \r\nconst timingWorker = new Worker(\"data-url:./timing.requestframe.worker.js\")\r\n\r\nlet startTime = -1\r\nlet currentInterval = 1\r\nlet audioContext = null\r\nlet isRunning = false\r\n\r\n// for time formatting...\r\nlet bar = 0\r\nlet bars = 16\r\nlet barsElapsed = 0\r\n\r\n// time sig\r\nexport const timePerBar = () => 2403 / bars\r\nexport const getBar = () => bar\r\n\r\nexport const getBPM = () => 60000 / timePerBar()\r\nexport const getBars = () => bars \r\nexport const setBars = value => {\r\n    bars = value < 1 ? 1 : value > MAX_BARS_ALLOWED ? MAX_BARS_ALLOWED : value\r\n    return bars\r\n}\r\n\r\nexport const now = () => audioContext.currentTime\r\n\r\nconst elapsed = () => (now() - startTime) * 0.001\r\n\r\n// export const setMode = newMode => {\r\n//     // check to see if in array of acceptable types\r\n//     mode = newMode\r\n//     timingWorker = new Worker(`${prefix}/timing.${mode}.worker.js`)\r\n//     // TODO: restart if running\r\n//    // console.error(\"Changing mode\",mode, timingWorker)\r\n//     if (isRunning)\r\n//     {\r\n//         // \r\n//     }\r\n// }\r\n\r\nexport const setTimeBetween = time => {\r\n    currentInterval = time\r\n    // if it is running, stop and restart it?\r\n     //interval = newInterval\r\n    // TODO\r\n    // FIXME\r\n    timingWorker.postMessage({command:CMD_UPDATE, interval:currentInterval, time:now() })\r\n    return currentInterval\r\n}\r\n\r\nexport const start = (callback, timeBetween=200, options={} ) => {\r\n\r\n    barsElapsed = 0\r\n\r\n    // lazily initialise a context\r\n    if (audioContext === null)\r\n    {\r\n        audioContext = new AudioContext()\r\n        // on Safari macOS/iOS, the audioContext is suspended if it's not created\r\n        // in the event handler of a user action: we attempt to resume it.\r\n        if (audioContext.state === 'suspended') {\r\n            audioContext.resume()\r\n        }\r\n    }\r\n\r\n    currentInterval = timeBetween\r\n\r\n    if (!isRunning)\r\n    {\r\n        // \r\n    }\r\n   \r\n    // now hook into our worker bee and watch for timing changes\r\n    timingWorker.onmessage = (e) => {\r\n\r\n        const currentTime = now()\r\n        const data = e.data\r\n        switch(data.event)\r\n        {\r\n            case EVENT_STARTING:\r\n                const time = data.time\r\n                // save start time\r\n                startTime = currentTime\r\n                isRunning = true\r\n                //console.log(\"EVENT_STARTING\", {time, startTime})\r\n                break\r\n\r\n            case EVENT_TICK:\r\n                // How many ticks have occured yet\r\n                const intervals = data.intervals\r\n                // Expected time stamp\r\n                const expected = intervals * timeBetween * 0.001\r\n                // How long has elapsed according to audio context\r\n                const elapsed = currentTime - startTime\r\n                // How long has elapsed according to our worker\r\n                const timePassed = data.time\r\n                // how much spill over the expected timestamp is there\r\n                const lag = timePassed % timeBetween * 0.001\r\n                // should be 0 if the timer is working...\r\n                const drift = timePassed - elapsed\r\n                // deterministic intervals not neccessary\r\n                const level = Math.floor(timePassed / timeBetween)\r\n                \r\n                bar = ++barsElapsed % bars\r\n\t\t\t\t\r\n                // elapsed should === time\r\n                //console.log(\"EVENT_TICK\", {timePassed, elapsed, drift, art})\r\n                callback && callback({bar, bars, barsElapsed, timePassed, elapsed, expected, drift, level, intervals, lag})\r\n                // timingWorker.postMessage({command:CMD_UPDATE, time:currentTime, interval})\r\n                break\r\n\r\n            default:\r\n                console.log(\"message: \" , e)\r\n        }\r\n    }\r\n\r\n    // Error!\r\n    timingWorker.onerror = error =>{\r\n        console.error(\"error...\", {error} )\r\n        timingWorker.postMessage({error, time:audioContext.currentTime })\r\n    }\r\n\r\n    // send command to worker... options\r\n    timingWorker.postMessage({\r\n        command:CMD_START, \r\n        time:audioContext.currentTime, \r\n        interval:timeBetween,\r\n        // FIXME:\r\n        accurateTiming:false\r\n    })\r\n    //console.log(\"Starting...\", {audioContext, interval:timeBetween, timingWorker} )\r\n\r\n    // methods that can be chained?\r\n    return {\r\n        currentTime:now(),\r\n        timingWorker\r\n    }\r\n}\r\n\r\n\r\nexport const stop = () => {\r\n    const currentTime = now()\r\n    // cancel the thing thrugh the workers first\r\n    // cancel any scheduled quie noises\r\n    timingWorker.onmessage = (e) => {\r\n        switch(e.event)\r\n        {\r\n            // Clean up\r\n            case EVENT_STOPPING:\r\n                // destroy contexts and unsubscribe from events\r\n                isRunning = false\r\n                audioContext = null\r\n                break\r\n        }\r\n    }\r\n\r\n    timingWorker.postMessage({command:CMD_STOP, time:currentTime})\r\n\r\n    return {\r\n        currentTime:now(),\r\n        timingWorker\r\n    }\r\n}",null,"\r\nimport {audioContext, inputDryNode} from './audio'\r\n\r\nconst ZERO = 0.0000001\r\n\r\n// this is just an array of kicks\r\nexport const createQueue = (factorymethod, quantity=5) => {\r\n\r\n\tconst instruments = []\r\n\tfor (let i=0; i < quantity; ++i)\r\n\t{\r\n\t\tconst instrument = factorymethod()\r\n\t\tinstruments.push( instrument )\r\n\t}\r\n\r\n\t// interface to play\r\n\tlet index = 0\r\n\tconst fetchNextInstrument = (...args) => {\r\n\t\tindex = index + 1 < quantity ? index + 1 : 0\r\n\t\tconst instrument = instruments[index]\r\n\t\tinstrument(...args)\r\n\t\t//instrument.apply(null, arguments)\r\n\t}\r\n\treturn fetchNextInstrument\r\n}\r\n\r\n// Kick me\r\nexport const createKick = () => {\r\n\r\n    const osc = audioContext.createOscillator()\r\n    const osc2 = audioContext.createOscillator()\r\n    const gainOsc = audioContext.createGain()\r\n    const gainOsc2 = audioContext.createGain()\r\n\r\n    osc.type = \"triangle\"\r\n    osc2.type = \"sine\"\r\n\r\n\tconst kick = (velocity=1, length=0.05, attack=0.01, duration=0.5) => {\r\n\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\t// clear anything from previous plays\r\n\t\tgainOsc.gain.cancelScheduledValues(time)\r\n\t\tgainOsc2.gain.cancelScheduledValues(time)\r\n\t\tosc.frequency.cancelScheduledValues(time)\r\n\t\tosc2.frequency.cancelScheduledValues(time)\r\n\r\n\t\tgainOsc.gain.setValueAtTime(1, time)\r\n\t\tgainOsc.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\r\n\t\tgainOsc2.gain.setValueAtTime(1, audioContext.currentTime)\r\n\t\tgainOsc2.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\r\n\t\tosc.frequency.setValueAtTime(120, audioContext.currentTime)\r\n\t\tosc.frequency.exponentialRampToValueAtTime(attack, time + length)\r\n\t\r\n\t\tosc2.frequency.setValueAtTime(50, audioContext.currentTime)\r\n\t\tosc2.frequency.exponentialRampToValueAtTime(attack, time + length)\r\n\t\t \r\n\t\t try{\r\n\r\n\t\t\tosc.start(time)\r\n\t\t\tosc2.start(time)\r\n\r\n\t\t }catch(error)\r\n\t\t {\r\n\r\n\t\t }\r\n\t \r\n\t\t//  osc.stop(audioContext.currentTime + duration)\r\n\t\t//  osc2.stop(audioContext.currentTime + duration)\r\n\t}\r\n \r\n    osc.connect(gainOsc)\r\n    osc2.connect(gainOsc2)\r\n    gainOsc.connect(inputDryNode())\r\n    gainOsc2.connect(inputDryNode())\r\n\r\n\treturn kick\r\n}\r\n\r\n// export const createKicks = (quantity=5) => {\r\n\r\n// \tconst kicks = []\r\n// \tfor (let i=0; i < quantity; ++i)\r\n// \t{\r\n// \t\tconst kick = createKick()\r\n// \t\tkicks.push( kick )\r\n// \t}\r\n\r\n// \t// interface to play\r\n// \tlet index = 0\r\n// \tconst fetchNextKick = (attack=0.01,duration=0.5) => {\r\n// \t\tindex = index + 1 < quantity ? index + 1 : 0\r\n// \t\tconst kick = kicks[index]\r\n// \t\tkick(attack, duration)\r\n// \t}\r\n// \treturn fetchNextKick\r\n// }\r\n\r\nexport const createSnare = () => {\r\n\r\n    const osc3 = audioContext.createOscillator()\r\n    const gainOsc3 = audioContext.createGain()\r\n    const filterGain = audioContext.createGain()\r\n\tconst noise = audioContext.createBufferSource()\r\n\tconst buffer = audioContext.createBuffer(1, 4096, audioContext.sampleRate)\r\n\r\n\tconst filter = audioContext.createBiquadFilter()\r\n\tfilter.type = \"highpass\"\r\n\r\n\tosc3.type = \"triangle\"\r\n\tosc3.frequency.value = 100\r\n\r\n\t// TODO Cache the noise\r\n\tconst data = buffer.getChannelData(0)\r\n\tfor (var i = 0; i < 4096; i++) \r\n\t{\r\n\t\tdata[i] = Math.random()\r\n\t}\r\n\r\n\tnoise.buffer = buffer\r\n\tnoise.loop = true\r\n\t\r\n\tosc3.connect(gainOsc3)\r\n\tgainOsc3.connect(inputDryNode() )\t\r\n\r\n\tnoise.connect(filter)\r\n\tfilter.connect(filterGain)\r\n\tfilterGain.connect(inputDryNode() )\r\n\r\n\tconst snare = (velocity=1, length = 0.2) => {\r\n\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\tfilterGain.gain.cancelScheduledValues(time)\r\n\t\tfilterGain.gain.setValueAtTime(1, time)\r\n\t\tfilterGain.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\r\n\t\tgainOsc3.gain.cancelScheduledValues(time)\r\n\t\tgainOsc3.gain.setValueAtTime(ZERO, time)\r\n\t\tgainOsc3.gain.exponentialRampToValueAtTime(ZERO, time + (length / 2 ) )\t\r\n\t\t//gainOsc3.gain.value = 0\r\n\r\n\t\t// modulate and filter freqs\r\n\t\tfilter.frequency.cancelScheduledValues(time)\r\n\t\tfilter.frequency.setValueAtTime(100, time)\r\n\t\tfilter.frequency.linearRampToValueAtTime(1000,time + length)\t\t\r\n\t\r\n\t\t//gainNode.gain.value = 1\t\t\t\r\n\t\ttry{\r\n\t\t\tosc3.start(time)\r\n\t\t\t//osc3.stop(audioContext.currentTime + 0.2)\r\n\t\t\r\n\t\t\tnoise.start(time)\r\n\r\n\t\t\t//node.stop(audioContext.currentTime + 0.2)\t\r\n\t\t}catch(error){\r\n\r\n\t\t}\r\n\t}\r\n\r\n\treturn snare\r\n}\r\n\r\nexport const createHihat = () => {\r\n\r\n    const gainOsc4 = audioContext.createGain()\r\n    const fundamental = 40\r\n    const ratios = [2, 3, 4.16, 5.43, 6.79, 8.21]\r\n\r\n    const bandpass = audioContext.createBiquadFilter()\r\n    bandpass.type = \"bandpass\"\r\n    bandpass.frequency.value = 10000\r\n\r\n    const highpass = audioContext.createBiquadFilter()\r\n    highpass.type = \"highpass\"\r\n    highpass.frequency.value = 7000\r\n\r\n    const oscillators = ratios.map((ratio) => {\r\n\r\n        const osc4 = audioContext.createOscillator()\r\n        osc4.type = \"square\"\r\n\t\tosc4.frequency.value = fundamental * ratio\r\n\t\tosc4.connect(bandpass)\r\n\t\treturn osc4\r\n    })\r\n\r\n\tbandpass.connect(highpass)\r\n    highpass.connect(gainOsc4)\r\n\tgainOsc4.connect(inputDryNode())\r\n\t\r\n\tconst hihat = (velocity=1, length=0.05 )=>{\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\t// clear anything from previous plays\r\n\t\tgainOsc4.gain.cancelScheduledValues(time)\r\n\t\toscillators.forEach( oscillator => oscillator.frequency.cancelScheduledValues(time) )\r\n\t\t\r\n\t\t// set neew envelopes\r\n\t\tgainOsc4.gain.setValueAtTime(1, time)\r\n\t\tgainOsc4.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\t\r\n\t\ttry{\r\n\t\t\toscillators.forEach( oscillator => oscillator.start(time) )\r\n\t\t\r\n\t\t\t//osc4.stop(time + 0.05)  \t\t\t\r\n\t\t}catch(error){\r\n\r\n\t\t}\r\n\t}\r\n\treturn hihat\r\n}\r\n\r\nexport const createClack = () => {\r\n\t\r\n\tconst cowbellGainNode = audioContext.createGain()\r\n \r\n    const bandpass = audioContext.createBiquadFilter()\r\n    bandpass.type = \"bandpass\"\r\n    bandpass.frequency.value = 2640\r\n    bandpass.Q.value = 3.5\r\n\r\n    const highpass = audioContext.createBiquadFilter()\r\n    highpass.type = \"highpass\"\r\n    highpass.frequency.value = 7000\r\n\r\n\tconst fundamental = 1\r\n    const ratios = [587,845]\r\n\r\n    const oscillators = ratios.map((ratio) => {\r\n\r\n        const oscillator = audioContext.createOscillator()\r\n        oscillator.type = \"triangle\"\r\n\t\toscillator.frequency.value = fundamental * ratio\r\n\t\toscillator.connect(bandpass)\r\n\t\treturn oscillator\r\n    })\r\n\r\n\tbandpass.connect(highpass)\r\n    highpass.connect(cowbellGainNode)\r\n\tcowbellGainNode.connect(inputDryNode())\r\n\t\r\n\tconst clack = (velocity=1, length=0.05, ocatave=fundamental )=>{\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\t// clear anything from previous plays\r\n\t\tcowbellGainNode.gain.cancelScheduledValues(time)\r\n\t\toscillators.forEach( (oscillator,i) =>{ \r\n\t\t\toscillator.frequency.cancelScheduledValues(time) \r\n\t\t\toscillator.frequency.value = ocatave * ratios[i]\r\n\t\t})\r\n\t\t\r\n\t\t// set neew envelopes\r\n\t\tcowbellGainNode.gain.setValueAtTime(1, time)\r\n\t\tcowbellGainNode.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\t\r\n\t\ttry{\r\n\t\t\toscillators.forEach( oscillator => oscillator.start(time) )\r\n\t\t\r\n\t\t\t//osc4.stop(time + 0.05)  \t\t\t\r\n\t\t}catch(error){\r\n\r\n\t\t}\r\n\t}\r\n\treturn clack\r\n}\r\n\r\nexport const createCowbell = () => {\r\n\t\r\n\tconst cowbellGainNode = audioContext.createGain()\r\n \r\n    const bandpass = audioContext.createBiquadFilter()\r\n    bandpass.type = \"bandpass\"\r\n    bandpass.frequency.value = 2640\r\n    bandpass.Q.value = 3.5\r\n\r\n\tconst fundamental = 1\r\n    const ratios = [587,845]\r\n\r\n    const oscillators = ratios.map((ratio) => {\r\n\r\n        const oscillator = audioContext.createOscillator()\r\n        oscillator.type = \"triangle\"\r\n\t\toscillator.frequency.value = fundamental * ratio\r\n\t\toscillator.connect(bandpass)\r\n\t\treturn oscillator\r\n    })\r\n\r\n\tbandpass.connect(cowbellGainNode)\r\n\tcowbellGainNode.connect(inputDryNode())\r\n\t\r\n\tconst cowbell = (velocity=1, length=0.05 )=>{\r\n\t\tconst time = audioContext.currentTime\r\n\t\t\r\n\t\t// clear anything from previous plays\r\n\t\tcowbellGainNode.gain.cancelScheduledValues(time)\r\n\t\toscillators.forEach( oscillator => oscillator.frequency.cancelScheduledValues(time) )\r\n\t\t\r\n\t\t// set neew envelopes\r\n\t\tcowbellGainNode.gain.setValueAtTime(1, time)\r\n\t\tcowbellGainNode.gain.exponentialRampToValueAtTime(ZERO, time + length)\r\n\t\t\r\n\t\ttry{\r\n\t\t\toscillators.forEach( oscillator => oscillator.start(time) )\r\n\t\t\r\n\t\t\t//osc4.stop(time + 0.05)  \t\t\t\r\n\t\t}catch(error){\r\n\r\n\t\t}\r\n\t}\r\n\treturn cowbell\r\n}\r\n\r\n// this is just an array of kicks\r\nexport const createKicks = (quantity=2) => createQueue(createKick, quantity)\r\nexport const createSnares = (quantity=3) => createQueue(createSnare, quantity)\r\nexport const createHihats = (quantity=3) => createQueue(createHihat, quantity)\r\nexport const createCowbells = (quantity=2) => createQueue(createCowbell, quantity)\r\nexport const createClacks = (quantity=2) => createQueue(createClack, quantity)\r\n\r\n// Just a drum kit you can play that has one of each of the\r\n// drum sounds set up in cascades. simply createDrumkit().kick() etc\r\nexport const createDrumkit = () => {\r\n\r\n\tconst kick = createKicks()\r\n\tconst hat = createHihats()\r\n\tconst snare = createSnares()\r\n\tconst cowbell = createCowbell()\r\n\tconst clack = createClack()\r\n\r\n\treturn {\r\n\t\tkick,\r\n\t\tsnare,\r\n\t\that,\r\n\t\tcowbell,\r\n\t\tclack\r\n\t}\r\n}\r\n\r\n// tODO : Bind pattern to kit?","\r\n// import WebMidi, { InputEventNoteon, InputEventNoteoff } from \"webmidi\"\r\nimport {WebMidi} from \"../node_modules/webmidi/dist/webmidi.esm.js\"\r\n\r\n// https://mpe.js.org/#Installation\r\n// import mpeInstrument from 'mpe'\r\n\r\nlet mpeEnabled = false\r\n\r\n// Define `instrument` as an instance of `mpeInstrument`\r\n// const instrument = mpeInstrument()\r\n\r\n// Request MIDI device access from the Web MIDI API\r\n// navigator.requestMIDIAccess().then(access => {\r\n//   // Iterate over the list of inputs returned\r\n//   access.inputs.forEach(midiInput => {\r\n//     // Send 'midimessage' events to the mpe.js `instrument` instance\r\n//     midiInput.addEventListener(\r\n//       'midimessage',\r\n//       (event) => instrument.processMidiMessage(event.data)\r\n//     )\r\n//   })\r\n// })\r\n\r\nexport const setupMIDI = () => new Promise ( (resolve,reject) => {\r\n\t\r\n\tWebMidi.enable().then( ports => {\r\n\r\n\r\n\t\t//console.log(\"WebMidi enabled!\", ports, ports.outputs[0] , WebMidi.outputs[0], WebMidi.outputs[0] === ports.outputs[0] )\r\n\t\t// I / O change\r\n\t\t// console.log(WebMidi.inputs)\r\n\t\t// console.log(WebMidi.outputs)\r\n\r\n\t\tresolve(WebMidi)\r\n\t\t\r\n\t\t// Display the current time\r\n\t\t//   console.log(WebMidi.time)\r\n\t\t\r\n\t\t// Retrieving an output port/device using its id, name or index\r\n\t\t// midiChannel = WebMidi.getOutputById(\"123456789\")\r\n\t\t// midiChannel = WebMidi.getOutputByName(\"Axiom Pro 25 Ext Out\")\r\n\t\t// midiChannel = WebMidi.outputs[0]\r\n\r\n\t\t// if (midiChannel)\r\n\t\t// {\r\n\t\t// \t// Play a note on all channels of the selected output\r\n\t\t// \tmidiChannel.playNote(\"C3\");\r\n\r\n\t\t// \t// Play a note on channel 3\r\n\t\t// \tmidiChannel.playNote(\"Gb4\", 3);\r\n\r\n\t\t// \t// Play a chord on all available channels\r\n\t\t// \tmidiChannel.playNote([\"C3\", \"D#3\", \"G3\"]);\r\n\r\n\t\t// \t// Play a chord on channel 7\r\n\t\t// \tmidiChannel.playNote([\"C3\", \"D#3\", \"G3\"], 7);\r\n\r\n\t\t// \t// Play a note at full velocity on all channels)\r\n\t\t// \tmidiChannel.playNote(\"F#-1\", \"all\", {velocity: 1});\r\n\r\n\t\t// \t// Play a note on channel 16 in 2 seconds (relative time)\r\n\t\t// \tmidiChannel.playNote(\"F5\", 16, {time: \"+2000\"});\r\n\r\n\t\t// \t// Play a note on channel 1 at an absolute time in the future\r\n\t\t// \tmidiChannel.playNote(\"F5\", 16, {time: WebMidi.time + 3000});\r\n\r\n\t\t// \t// Play a note for a duration of 2 seconds (will send a note off message in 2 seconds). Also use\r\n\t\t// \t// a low attack velocity\r\n\t\t// \tmidiChannel.playNote(\"Gb2\", 10, {duration: 2000, velocity: 0.25});\r\n\r\n\t\t// \t// Stop a playing note on all channels\r\n\t\t// \tmidiChannel.stopNote(\"C-1\");\r\n\r\n\t\t// \t// Stopping a playing note on channel 11\r\n\t\t// \tmidiChannel.stopNote(\"F3\", 11);\r\n\r\n\t\t// \t// Stop a playing note on channel 11 and use a high release velocity\r\n\t\t// \tmidiChannel.stopNote(\"G8\", 11, {velocity: 0.9});\r\n\r\n\t\t// \t// Stopping a playing note in 2.5 seconds\r\n\t\t// \tmidiChannel.stopNote(\"Bb2\", 11, {time: \"+2500\"});\r\n\r\n\t\t// \t// Send polyphonic aftertouch message to channel 8\r\n\t\t// \tmidiChannel.sendKeyAftertouch(\"C#3\", 8, 0.25);\r\n\r\n\t\t// \t// Send pitch bend (between -1 and 1) to channel 12\r\n\t\t// \tmidiChannel.sendPitchBend(-1, 12);\r\n\r\n\t\t// \t// You can chain most method calls\r\n\t\t// \tmidiChannel.playNote(\"G5\", 12)\r\n\t\t// \t\t.sendPitchBend(-0.5, 12, {time: 400}) // After 400 ms.\r\n\t\t// \t\t.sendPitchBend(0.5, 12, {time: 800})  // After 800 ms.\r\n\t\t// \t\t.stopNote(\"G5\", 12, {time: 1200});    // After 1.2 s.\r\n\r\n\t\t// }\r\n\t}).catch(error=> reject(error))\r\n\r\n})","/**\n * WebMidi.js v3.0.0-alpha.2\n * A JavaScript library to kickstart your MIDI projects\n * https://webmidijs.org\n *\n * This build was generated on June 17th 2020.\n *\n *\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015-2020, Jean-Philippe Côté\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software\n * and associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass e{constructor(e=!1){this.eventMap={},this.eventsSuspended=1==e;}addListener(n,r,i={}){if(\"string\"==typeof n&&n.length<1||n instanceof String&&n.length<1||\"string\"!=typeof n&&!(n instanceof String)&&n!==e.ANY_EVENT)throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");if(\"function\"!=typeof r)throw new TypeError(\"The callback must be a function.\");const s=new t(n,this,r,i);return this.eventMap[n]||(this.eventMap[n]=[]),i.prepend?this.eventMap[n].unshift(s):this.eventMap[n].push(s),s}addOneTimeListener(e,t,n={}){n.remaining=1,this.addListener(e,t,n);}static get ANY_EVENT(){return Symbol.for(\"Any event\")}hasListener(n,r){if(void 0===n)return !!(this.eventMap[e.ANY_EVENT]&&this.eventMap[e.ANY_EVENT].length>0)||Object.entries(this.eventMap).some(([,e])=>e.length>0);if(this.eventMap[n]&&this.eventMap[n].length>0){if(r instanceof t){return this.eventMap[n].filter(e=>e===r).length>0}if(\"function\"==typeof r){return this.eventMap[n].filter(e=>e.callback===r).length>0}return null==r}return !1}get eventNames(){return Object.keys(this.eventMap)}getListeners(e){return this.eventMap[e]||[]}suspendEvent(e){this.getListeners(e).forEach(e=>{e.suspended=!0;});}unsuspendEvent(e){this.getListeners(e).forEach(e=>{e.suspended=!1;});}getListenerCount(e){return this.getListeners(e).length}emit(t,...n){if(\"string\"!=typeof t&&!(t instanceof String))throw new TypeError(\"The 'event' parameter must be a string.\");if(this.eventsSuspended)return;let r=[],i=this.eventMap[e.ANY_EVENT]||[];return this.eventMap[t]&&(i=i.concat(this.eventMap[t])),i.forEach(e=>{if(e.suspended)return;let t=[...n];Array.isArray(e.arguments)&&(t=t.concat(e.arguments)),e.remaining>0&&(r.push(e.callback.apply(e.context,t)),e.count++),--e.remaining<1&&e.remove();}),r}removeListener(e,t,n={}){if(void 0===e)return void(this.eventMap={});if(!this.eventMap[e])return;let r=this.eventMap[e].filter(e=>t&&e.callback!==t||n.remaining&&n.remaining!==e.remaining||n.context&&n.context!==e.context);r.length?this.eventMap[e]=r:delete this.eventMap[e];}async waitFor(e,t={}){return t.duration=parseInt(t.duration),(isNaN(t.duration)||t.duration<=0)&&(t.duration=1/0),new Promise((n,r)=>{let i,s=this.addListener(e,()=>{clearTimeout(i),n();},{remaining:1});t.duration!==1/0&&(i=setTimeout(()=>{s.remove(),r(\"The duration expired before the event was emitted.\");},t.duration));})}get eventCount(){return Object.keys(this.eventMap).length}}class t{constructor(t,n,r,i={}){if(\"string\"!=typeof t&&!(t instanceof String)&&t!==e.ANY_EVENT)throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");if(!n)throw new ReferenceError(\"The 'target' parameter is mandatory.\");if(\"function\"!=typeof r)throw new TypeError(\"The 'callback' must be a function.\");void 0===i.arguments||Array.isArray(i.arguments)||(i.arguments=[i.arguments]),(i=Object.assign({context:n,remaining:1/0,arguments:void 0,duration:1/0},i)).duration!==1/0&&setTimeout(()=>this.remove(),i.duration),this.event=t,this.target=n,this.callback=r,this.context=i.context,this.remaining=parseInt(i.remaining)>=1?parseInt(i.remaining):1/0,this.count=0,this.arguments=i.arguments,this.suspended=!1;}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining});}}\n\n/**\n * The `InputChannel` class represents a single input MIDI channel (1-16) from a single input\n * device. This object is derived from the host's MIDI subsystem and cannot be instantiated\n * directly.\n *\n * All 16 `InputChannel` objects can be found inside the input's [channels]{@link Input#channels}\n * property.\n *\n * The `InputChannel` class extends the\n * [EventEmitter](https://djipco.github.io/djipevents/EventEmitter.html) class from the\n * [djipevents]{@link https://djipco.github.io/djipevents/index.html} module. This means\n * it also includes methods such as\n * [addListener()](https://djipco.github.io/djipevents/EventEmitter.html#addListener),\n * [removeListener()](https://djipco.github.io/djipevents/EventEmitter.html#removeListener),\n * [hasListener()](https://djipco.github.io/djipevents/EventEmitter.html#hasListener) and several\n * others. Check out the\n * [documentation for EventEmitter](https://djipco.github.io/djipevents/EventEmitter.html) for more\n * details.\n *\n * @param {Input} input The `Input` this channel belongs to\n * @param {number} number The MIDI channel's number (1-16)\n *\n * @fires InputChannel#midimessage\n *\n * @fires InputChannel#noteoff\n * @fires InputChannel#noteon\n * @fires InputChannel#keyaftertouch\n * @fires InputChannel#controlchange\n * @fires InputChannel#channelmode\n * @fires InputChannel#programchange\n * @fires InputChannel#channelaftertouch\n * @fires InputChannel#pitchbend\n *\n * @fires InputChannel#allnotesoff\n * @fires InputChannel#allsoundoff\n * @fires InputChannel#localcontrol\n * @fires InputChannel#monomode\n * @fires InputChannel#omnimode\n * @fires InputChannel#resetallcontrollers\n *\n * @since 3.0.0\n */\nclass InputChannel extends e {\n\n  constructor(input, number) {\n\n    super();\n\n    /**\n     * The {@link Input} this channel belongs to\n     * @type {Input}\n     */\n    this.input = input;\n\n    /**\n     * This channel's number (1-16)\n     * @type {number}\n     */\n    this.number = number;\n\n    // /**\n    //  * An array of the current NRPNs being constructed for this channel\n    //  *\n    //  * @private\n    //  *\n    //  * @type {string[]}\n    //  */\n    // this._nrpnBuffer = [];\n    //\n    // // Enable NRPN events by default\n    // this.nrpnEventsEnabled = true;\n\n  }\n\n  destroy() {\n    this.input = null;\n    this.number = null;\n    // this._nrpnBuffer = null;\n    // this._nrpnEventsEnabled = false;\n    this.removeListener();\n  }\n\n  /**\n   * @param e Event\n   * @protected\n   */\n  _parseEvent(e) {\n\n    // Extract data bytes (unless it's a sysex message)\n    let dataBytes = null;\n    if (e.data[0] !== wm.MIDI_SYSTEM_MESSAGES.sysex) dataBytes = e.data.slice(1);\n\n    /**\n     * Event emitted when a MIDI message of any kind is received by the `InputChannel`.\n     *\n     * @event InputChannel#midimessage\n     * @type {Object}\n     * @property {InputChannel} target The `InputChannel` that triggered the event.\n     * @property {Array} event.data The MIDI message as an array of 8 bit values.\n     * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n     * @property {number} event.statusByte The message's status byte.\n     * @property {?number[]} event.dataBytes The message's data bytes as an array of 0, 1 or 2\n     * integers. This will be null for `sysex` messages.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `\"midimessage\"`\n     */\n    let midiMessageEvent = {\n      target: this,\n      data: Array.from(e.data),\n      rawData: e.data,\n      statusByte: e.data[0],\n      dataBytes: dataBytes,\n      timestamp: e.timeStamp,\n      type: \"midimessage\"\n    };\n\n    this.emit(\"midimessage\", midiMessageEvent);\n\n    // Parse the event to see if its part of an NRPN sequence\n    // this._parseEventForNrpnMessage(e);\n\n    // Parse the inbound event for regular messages\n    this._parseEventForStandardMessages(e);\n\n  }\n\n  getStructuredMidiMessage(data) {\n\n    return {\n      command: data[0] >> 4,\n      data1: data.length > 1 ? data[1] : undefined,\n      data2: data.length > 2 ? data[2] : undefined\n    };\n\n  }\n\n  /**\n   * Parses channel events for standard (non-NRPN) events.\n   * @param e Event\n   * @private\n   */\n  _parseEventForStandardMessages(e) {\n\n    let {command, data1, data2} = this.getStructuredMidiMessage(e.data);\n\n    // Returned event\n    let event = {\n      target: this,\n      data: Array.from(e.data),\n      rawData: e.data,\n      timestamp: e.timeStamp\n    };\n\n    if (\n      command === wm.MIDI_CHANNEL_VOICE_MESSAGES.noteoff ||\n      (command === wm.MIDI_CHANNEL_VOICE_MESSAGES.noteon && data2 === 0)\n    ) {\n\n      /**\n       * Event emitted when a **note off** MIDI message has been received.\n       *\n       * @event InputChannel#noteoff\n       * @type {Object}\n       * @property {InputChannel} target The `InputChannel` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a `Uint8Array`.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"noteoff\"`\n       * @property {Object} note A {@link Note} object containing information such as note number,\n       * note name and octave.\n       * @property {number} release The release velocity expressed as a float between 0 and 1.\n       * @property {number} rawRelease The release velocity expressed as an integer (between 0 and\n       * 127).\n       */\n      event.type = \"noteoff\";\n      event.note = new Note(data1, {rawRelease: data2});\n      event.release = event.note.release;\n      event.rawRelease = event.note.rawRelease;\n\n    } else if (command === wm.MIDI_CHANNEL_VOICE_MESSAGES.noteon) {\n\n      /**\n       * Event emitted when a **note on** MIDI message has been received.\n       *\n       * @event InputChannel#noteon\n       * @type {Object}\n       * @property {InputChannel} target The `InputChannel` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"noteon\"`\n       * @property {Object} note A {@link Note} object containing information such as note number,\n       * note name and octave.\n       * @property {number} attack The attack velocity expressed as a float between 0 and 1.\n       * @property {number} rawAttack The attack velocity expressed as an integer (between 0 and\n       * 127).\n       */\n      event.type = \"noteon\";\n      event.note = new Note(data1, {rawAttack: data2});\n      event.attack = event.note.attack;\n      event.rawAttack = event.note.rawAttack;\n\n    } else if (command === wm.MIDI_CHANNEL_VOICE_MESSAGES.keyaftertouch) {\n\n      /**\n       * Event emitted when a **key-specific aftertouch** MIDI message has been received.\n       *\n       * @event InputChannel#keyaftertouch\n       * @type {Object}\n       * @property {InputChannel} target The `InputChannel` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a `Uint8Array`.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"keyaftertouch\"`\n       * @property {Object} note A {@link Note} object containing information such as note number,\n       * note name and octave.\n       * @property {number} value The aftertouch amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The aftertouch amount expressed as an integer (between 0 and\n       * 127).\n       */\n      event.type = \"keyaftertouch\";\n      event.note = new Note(data1);\n      event.value = data2 / 127;\n      event.rawValue = data2;\n\n    } else if (\n      command === wm.MIDI_CHANNEL_VOICE_MESSAGES.controlchange &&\n      data1 >= 0 && data1 <= 119\n    ) {\n\n      /**\n       * Event emitted when a **control change** MIDI message has been received.\n       *\n       * @event InputChannel#controlchange\n       * @type {Object}\n       * @property {InputChannel} target The `InputChannel` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"controlchange\"`\n       * @property {Object} controller\n       * @property {Object} controller.number The number of the controller.\n       * @property {Object} controller.name The usual name or function of the controller.\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      event.type = \"controlchange\";\n      event.controller = {\n        number: data1,\n        name: this.getCcNameByNumber(data1)\n      };\n      event.value = data2 / 127;\n      event.rawValue = data2;\n\n    } else if (\n      command === wm.MIDI_CHANNEL_VOICE_MESSAGES.channelmode &&\n      data1 >= 120 && data1 <= 127\n    ) {\n\n      /**\n       * Event emitted when a **channel mode** MIDI message has been received.\n       *\n       * @event InputChannel#channelmode\n       * @type {Object}\n       * @property {InputChannel} target The `InputChannel` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"channelmode\"`\n       * @property {Object} controller\n       * @property {Object} controller.number The number of the controller.\n       * @property {Object} controller.name The usual name or function of the controller.\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      event.type = \"channelmode\";\n      event.controller = {\n        number: data1,\n        name: this.getChannelModeByNumber(data1)\n      };\n      event.value = data2;\n\n      // Also dispatch specific channel mode events\n      this._parseChannelModeMessage(e);\n\n    } else if (command === wm.MIDI_CHANNEL_VOICE_MESSAGES.programchange) {\n\n      /**\n       * Event emitted when a **program change** MIDI message has been received.\n       *\n       * @event InputChannel#programchange\n       * @type {Object}\n       * @property {InputChannel} target The `InputChannel` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"programchange\"`\n       * @property {number} value The value expressed as an integer between 1 and 128.\n       * @property {number} rawValue The value expressed as an integer between 0 and 127.\n       */\n      event.type = \"programchange\";\n      event.value = data1 + 1;\n      event.rawValue = data1;\n\n    } else if (command === wm.MIDI_CHANNEL_VOICE_MESSAGES.channelaftertouch) {\n\n      /**\n       * Event emitted when a control change MIDI message has been received.\n       *\n       * @event InputChannel#channelaftertouch\n       * @type {Object}\n       * @property {InputChannel} target The `InputChannel` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"channelaftertouch\"`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      event.type = \"channelaftertouch\";\n      event.value = data1 / 127;\n      event.rawValue = data1;\n\n    } else if (command === wm.MIDI_CHANNEL_VOICE_MESSAGES.pitchbend) {\n\n      /**\n       * Event emitted when a pitch bend MIDI message has been received.\n       *\n       * @event InputChannel#pitchbend\n       * @type {Object}\n       * @property {InputChannel} target The `InputChannel` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"pitchbend\"`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 16383).\n       */\n      event.type = \"pitchbend\";\n      event.value = ((data2 << 7) + data1 - 8192) / 8192;\n      event.rawValue = (data2 << 7) + data1;\n\n    } else {\n      event.type = \"unknownmessage\";\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * Returns the channel mode name matching the specified number. If no match is found, the function\n   * returns `false`.\n   *\n   * @param {number} number An integer representing the channel mode message.\n   * @returns {string|false} The name of the matching channel mode or `false` if not match could be\n   * found.\n   *\n   * @since 2.0.0\n   */\n  getChannelModeByNumber(number) {\n\n    if (wm.validation) {\n      number = Math.floor(number);\n    }\n\n    if ( !(number >= 120 && number <= 127) ) return false;\n\n    for (let cm in wm.MIDI_CHANNEL_MODE_MESSAGES) {\n\n      if (\n        wm.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(cm) &&\n        number === wm.MIDI_CHANNEL_MODE_MESSAGES[cm]\n      ) {\n        return cm;\n      }\n\n    }\n\n  }\n\n  _parseChannelModeMessage(e) {\n\n    let data1, data2;\n\n    if (e.data.length > 1) {\n      data1 = e.data[1];\n      data2 = e.data.length > 2 ? e.data[2] : undefined;\n    }\n\n    // Basis for the returned event\n    let event = {\n      target: this,\n      data: Array.from(e.data),\n      rawData: e.data,\n      timestamp: e.timeStamp,\n      type: this.getChannelModeByNumber(data1)\n    };\n\n    /**\n     * Event emitted when an \"all sound off\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#allsoundoff\n     * @type {Object}\n     * @property {InputChannel} target The `InputChannel` that triggered the event.\n     * @property {Array} event.data The MIDI message as an array of 8 bit values.\n     * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `\"allsoundoff\"`\n     */\n\n    /**\n     * Event emitted when a \"reset all controllers\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#resetallcontrollers\n     * @type {Object}\n     * @property {InputChannel} target The `InputChannel` that triggered the event.\n     * @property {Array} event.data The MIDI message as an array of 8 bit values.\n     * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `\"resetallcontrollers\"`\n     */\n\n    /**\n     * Event emitted when a \"local control\" channel-mode MIDI message has been received. The value\n     * property of the event is set to either `true` (local control on) of `false` (local control\n     * off).\n     *\n     * @event InputChannel#localcontrol\n     * @type {Object}\n     * @property {InputChannel} target The `InputChannel` that triggered the event.\n     * @property {Array} event.data The MIDI message as an array of 8 bit values.\n     * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `\"localcontrol\"`\n     * @property {boolean} value For local control on, the value is `true`. For local control off,\n     * the value is `false`.\n     */\n    if (event.type === \"localcontrol\") {\n      event.value = data2 === 127 ? true : false;\n    }\n\n    /**\n     * Event emitted when an \"all notes off\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#allnotesoff\n     * @type {Object}\n     * @property {InputChannel} target The `InputChannel` that triggered the event.\n     * @property {Array} event.data The MIDI message as an array of 8 bit values.\n     * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `\"allnotesoff\"`\n     */\n\n    /**\n     * Event emitted when an \"omni mode\" channel-mode MIDI message has been received. The value\n     * property of the event is set to either `true` (omni mode on) of `false` (omni mode off).\n     *\n     * @event InputChannel#omnimode\n     * @type {Object}\n     * @property {InputChannel} target The `InputChannel` that triggered the event.\n     * @property {Array} event.data The MIDI message as an array of 8 bit values.\n     * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `\"omnimode\"`\n     * @property {boolean} value The value is `true` for omni mode on and false for omni mode off.\n     */\n    if (event.type === \"omnimodeon\") {\n      event.type = \"omnimode\";\n      event.value = true;\n    } else if (event.type === \"omnimodeoff\") {\n      event.type = \"omnimode\";\n      event.value = false;\n    }\n\n    /**\n     * Event emitted when a \"mono/poly mode\" MIDI message has been received. The value property of\n     * the event is set to either `true` (mono mode on / poly mode off) or `false` (mono mode off /\n     * poly mode on).\n     *\n     * @event InputChannel#monomode\n     * @type {Object}\n     * @property {InputChannel} target The `InputChannel` that triggered the event.\n     * @property {Array} event.data The MIDI message as an array of 8 bit values.\n     * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `\"monomode\"`\n     * @property {boolean} value The value is `true` for omni mode on and false for omni mode off.\n     */\n    if (event.type === \"monomodeon\") {\n      event.type = \"monomode\";\n      event.value = true;\n    } else if (event.type === \"polymodeon\") {\n      event.type = \"monomode\";\n      event.value = false;\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  // /**\n  //  * Parses channel events and constructs NRPN message parts in valid sequences.\n  //  * Keeps a separate NRPN buffer for each channel.\n  //  * Emits an event after it receives the final CC parts msb 127 lsb 127.\n  //  * If a message is incomplete and other messages are received before\n  //  * the final 127 bytes, the incomplete message is cleared.\n  //  * @param e Event\n  //  * @private\n  //  *\n  //  *\n  //  * Uint8Array [ 176, 99, 12 ]\n  //  * Uint8Array [ 176, 98, 34 ]\n  //  * Uint8Array [ 176, 6, 56 ]\n  //  * Uint8Array [ 176, 38, 78 ]\n  //  * Uint8Array [ 176, 101, 127 ]\n  //  * Uint8Array [ 176, 100, 127 ]\n  //  */\n  // _parseEventForNrpnMessage(e) {\n  //\n  //   if (!this.nrpnEventsEnabled) return;\n  //\n  //   // Extract basic data\n  //   let command = e.data[0] >> 4;\n  //   let channel = (e.data[0] & 0xf) + 1;\n  //   let data1;\n  //   let data2;\n  //\n  //   if (e.data.length > 1) {\n  //     data1 = e.data[1];\n  //     data2 = e.data.length > 2 ? e.data[2] : undefined;\n  //   }\n  //\n  //   // Message not valid for NRPN\n  //   if (\n  //     !(\n  //       command === WebMidi.MIDI_CHANNEL_VOICE_MESSAGES.controlchange &&\n  //       (\n  //         (\n  //           data1 >= WebMidi.MIDI_NRPN_MESSAGES.increment &&\n  //           data1 <= WebMidi.MIDI_NRPN_MESSAGES.parammsb\n  //         ) ||\n  //         data1 === WebMidi.MIDI_NRPN_MESSAGES.entrymsb ||\n  //         data1 === WebMidi.MIDI_NRPN_MESSAGES.entrylsb\n  //       )\n  //     )\n  //   ) {\n  //     return;\n  //   }\n  //\n  //   // set up a CC event to parse as NRPN part\n  //   let ccEvent = {\n  //     target: this,\n  //     type: \"controlchange\",\n  //     data: Array.from(e.data),\n  //     rawData: e.data,\n  //     timestamp: e.timeStamp,\n  //     channel: channel,\n  //     controller: {\n  //       number: data1,\n  //       name: this.getCcNameByNumber(data1)\n  //     },\n  //     value: data2\n  //   };\n  //\n  //   if (\n  //     // if we get a starting MSB (CC99 - 0-126) vs an end MSB (CC99 - 127), destroy incomplete\n  //     // NRPN and begin building again\n  //     ccEvent.controller.number === WebMidi.MIDI_NRPN_MESSAGES.parammsb &&\n  //     ccEvent.value != WebMidi.MIDI_NRPN_MESSAGES.nullactiveparameter\n  //   ) {\n  //     this._nrpnBuffer = [];\n  //     this._nrpnBuffer[0] = ccEvent;\n  //   } else if(\n  //     // add the param LSB\n  //     this._nrpnBuffer.length === 1 &&\n  //     ccEvent.controller.number === WebMidi.MIDI_NRPN_MESSAGES.paramlsb\n  //   ) {\n  //     this._nrpnBuffer.push(ccEvent);\n  //\n  //   } else if(\n  //     // add data inc/dec or value MSB for 14bit\n  //     this._nrpnBuffer.length === 2 &&\n  //     (ccEvent.controller.number === WebMidi.MIDI_NRPN_MESSAGES.increment ||\n  //       ccEvent.controller.number === WebMidi.MIDI_NRPN_MESSAGES.decrement ||\n  //       ccEvent.controller.number === WebMidi.MIDI_NRPN_MESSAGES.entrymsb)\n  //   ) {\n  //     this._nrpnBuffer.push(ccEvent);\n  //   } else if(\n  //     // if we have a value MSB, only add an LSB to pair with that\n  //     this._nrpnBuffer.length === 3 &&\n  //     this._nrpnBuffer[2].number === WebMidi.MIDI_NRPN_MESSAGES.entrymsb &&\n  //     ccEvent.controller.number === WebMidi.MIDI_NRPN_MESSAGES.entrylsb\n  //   ) {\n  //     this._nrpnBuffer.push(ccEvent);\n  //\n  //   } else if(\n  //     // add an end MSB (CC99 - 127)\n  //     this._nrpnBuffer.length >= 3 &&\n  //     this._nrpnBuffer.length <= 4 &&\n  //     ccEvent.controller.number === WebMidi.MIDI_NRPN_MESSAGES.parammsb &&\n  //     ccEvent.value === WebMidi.MIDI_NRPN_MESSAGES.nullactiveparameter\n  //   ) {\n  //     this._nrpnBuffer.push(ccEvent);\n  //   } else if(\n  //     // add an end LSB (CC99 - 127)\n  //     this._nrpnBuffer.length >= 4 &&\n  //     this._nrpnBuffer.length <= 5 &&\n  //     ccEvent.controller.number === WebMidi.MIDI_NRPN_MESSAGES.paramlsb &&\n  //     ccEvent.value === WebMidi.MIDI_NRPN_MESSAGES.nullactiveparameter\n  //   ) {\n  //     this._nrpnBuffer.push(ccEvent);\n  //     // now we have a full inc or dec NRPN message, lets create that event!\n  //\n  //     let rawData = [];\n  //\n  //     this._nrpnBuffer.forEach(ev => rawData.push(ev.data));\n  //\n  //     let nrpnNumber = (this._nrpnBuffer[0].value<<7) | (this._nrpnBuffer[1].value);\n  //     let nrpnValue = this._nrpnBuffer[2].value;\n  //     if (this._nrpnBuffer.length === 6) {\n  //       nrpnValue = (this._nrpnBuffer[2].value<<7) | (this._nrpnBuffer[3].value);\n  //     }\n  //\n  //     let nrpnControllerType = \"\";\n  //\n  //     switch (this._nrpnBuffer[2].controller.number) {\n  //     case WebMidi.MIDI_NRPN_MESSAGES.entrymsb:\n  //       nrpnControllerType = InputChannel.NRPN_TYPES[0];\n  //       break;\n  //     case WebMidi.MIDI_NRPN_MESSAGES.increment:\n  //       nrpnControllerType = InputChannel.NRPN_TYPES[1];\n  //       break;\n  //     case WebMidi.MIDI_NRPN_MESSAGES.decrement:\n  //       nrpnControllerType = InputChannel.NRPN_TYPES[2];\n  //       break;\n  //     default:\n  //       throw new Error(\"The NPRN type was unidentifiable.\");\n  //     }\n  //\n  //     // now we are done building an NRPN, so clear the NRPN buffer\n  //     this._nrpnBuffer = [];\n  //\n  //     /**\n  //      * Event emitted when a valid NRPN message sequence has been received.\n  //      *\n  //      * @event InputChannel#nrpn\n  //      * @type {Object}\n  //      * @property {InputChannel} target The `InputChannel` that triggered the event.\n  //      * @property {Array} event.data The MIDI message as an array of 8 bit values.\n  //      * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n  //      * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred\n  //      * (in milliseconds since the navigation start of the document).\n  //      * @property {string} type `\"nrpn\"`\n  //      * @property {Object} controller\n  //      * @property {Object} controller.number The number of the NRPN.\n  //      * @property {Object} controller.name The usual name or function of the controller.\n  //      * @property {number} value The aftertouch amount expressed as a float between 0 and 1.\n  //      * @property {number} rawValue The aftertouch amount expressed as an integer (between 0 and\n  //      * 65535).\n  //      */\n  //     let nrpnEvent = {\n  //       timestamp: ccEvent.timestamp,\n  //       channel: ccEvent.channel,\n  //       type: \"nrpn\",\n  //       data: Array.from(rawData),\n  //       rawData: rawData,\n  //       controller: {\n  //         number: nrpnNumber,\n  //         type: nrpnControllerType,\n  //         name: \"Non-Registered Parameter \" + nrpnNumber\n  //       },\n  //       value: nrpnValue / 65535,\n  //       rawValue: nrpnValue\n  //     };\n  //\n  //     this.emit(nrpnEvent.type, nrpnEvent);\n  //\n  //   } else {\n  //     // something didn't match, clear the incomplete NRPN message buffer\n  //     this._nrpnBuffer = [];\n  //   }\n  // }\n\n  /**\n   * Returns the name of a control change message matching the specified number. Some valid control\n   * change numbers do not have a specific name or purpose assigned in the MIDI\n   * [spec](https://midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2).\n   * In this case, the method returns `false`.\n   *\n   * @param {number} number An integer representing the control change message\n   * @returns {string|false} The matching control change name or `false` if not match was found\n   *\n   * @throws {RangeError} Invalid control change number.\n   *\n   * @since 2.0.0\n   */\n  getCcNameByNumber(number) {\n\n    if (wm.validation) {\n      number = parseInt(number);\n      if ( !(number >= 0 && number <= 119) ) {\n        throw new RangeError(\"Invalid control change number.\");\n      }\n    }\n\n    for (let cc in wm.MIDI_CONTROL_CHANGE_MESSAGES) {\n\n      if (\n        wm.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(cc) &&\n        number === wm.MIDI_CONTROL_CHANGE_MESSAGES[cc]\n      ) {\n        return cc;\n      }\n\n    }\n\n    return false;\n\n  }\n\n\n  // /**\n  //  * Indicates whether events for **Non-Registered Parameter Number** should be dispatched. NRPNs\n  //  * are composed of a sequence of specific **control change** messages. When a valid sequence of\n  //  * such control change messages is received, an `nrpn` event will fire. If an invalid or out of\n  //  * order control change message is received, it will fall through the collector logic and all\n  //  * buffered control change messages will be discarded as incomplete.\n  //  *\n  //  * @type Boolean\n  //  */\n  // get nrpnEventsEnabled() {\n  //   return this._nrpnEventsEnabled;\n  // }\n  // set nrpnEventsEnabled(enabled) {\n  //   this._nrpnEventsEnabled = !!enabled;\n  // }\n\n  // /**\n  //  * Array of valid **non-registered parameter number** (NRPNs) types.\n  //  *\n  //  * @type {string[]}\n  //  * @readonly\n  //  */\n  // static get NRPN_TYPES() {\n  //   return [\"entry\", \"increment\", \"decrement\"];\n  // }\n\n}\n\n/**\n * The `Input` class represents a single MIDI input port. This object is derived from the host's\n * MIDI subsystem and cannot be instantiated directly.\n *\n * You can find a list of all currently available `Input` objects in the {@link WebMidi#inputs}\n * array.\n *\n * The `Input` class extends the\n * [EventEmitter](https://djipco.github.io/djipevents/EventEmitter.html) class from the\n * [djipevents]{@link https://djipco.github.io/djipevents/index.html} module. This means\n * it also includes methods such as\n * [getListeners()](https://djipco.github.io/djipevents/EventEmitter.html#getListeners),\n * [emit()](https://djipco.github.io/djipevents/EventEmitter.html#emit),\n * [suspendEvent()](https://djipco.github.io/djipevents/EventEmitter.html#suspendEvent) and several\n * others.\n *\n * @param {MIDIInput} midiInput `MIDIInput` object as provided by the MIDI subsystem (Web MIDI API).\n *\n * @fires Input#opened\n * @fires Input#disconnected\n * @fires Input#closed\n * @fires Input#midimessage\n * @fires Input#sysex\n * @fires Input#timecode\n * @fires Input#songposition\n * @fires Input#songselect\n * @fires Input#tunerequest\n * @fires Input#clock\n * @fires Input#start\n * @fires Input#continue\n * @fires Input#stop\n * @fires Input#activesensing\n * @fires Input#reset\n * @fires Input#midimessage\n * @fires Input#unknownmidimessage\n */\nclass Input extends e {\n\n  constructor(midiInput) {\n\n    super();\n\n    /**\n     * Reference to the actual MIDIInput object\n     * @private\n     */\n    this._midiInput = midiInput;\n\n    /**\n     * Array containing the 16 {@link InputChannel} objects available for this `Input`. The\n     * channels are numbered 1 through 16.\n     *\n     * @type {InputChannel[]}\n     */\n    this.channels = [];\n    for (let i = 1; i <= 16; i++) this.channels[i] = new InputChannel(this, i);\n\n    // Setup listeners\n    this._midiInput.onstatechange = this._onStateChange.bind(this);\n    this._midiInput.onmidimessage = this._onMidiMessage.bind(this);\n\n  }\n\n  /**\n   * Destroys the `Input` by remove all listeners, emptying the `channels` array and unlinking the\n   * MIDI subsystem.\n   *\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    this.removeListener();\n    this.channels.forEach(ch => ch.destroy());\n    this.channels = [];\n    this._midiInput.onstatechange = null;\n    this._midiInput.onmidimessage = null;\n    await this.close();\n    this._midiInput = null;\n  }\n\n  /**\n   * Executed when a `\"statechange\"` event occurs.\n   *\n   * @param e\n   * @private\n   */\n  _onStateChange(e) {\n\n    let event = {\n      timestamp: wm.time,\n      target: this\n    };\n\n    if (e.port.connection === \"open\") {\n\n      /**\n       * Event emitted when the {@link Input} has been opened by calling the {@link Input#open}\n       * method.\n       *\n       * @event Input#opened\n       * @type {Object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"opened\"`\n       * @property {Input} target The object that triggered the event\n       */\n      event.type = \"opened\";\n      this.emit(\"opened\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"connected\") {\n\n      /**\n       * Event emitted when the {@link Input} has been closed by calling the {@link Input#close}\n       * method.\n       *\n       * @event Input#closed\n       * @type {Object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"closed\"`\n       * @property {Input} target The object that triggered the event\n       */\n      event.type = \"closed\";\n      this.emit(\"closed\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"disconnected\") {\n\n      /**\n       * Event emitted when the {@link Input} becomes unavailable. This event is typically fired\n       * when the MIDI device is unplugged.\n       *\n       * @event Input#disconnected\n       * @type {Object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"disconnected\"`\n       * @property {Object} target Object with properties describing the {@link Input} that\n       * triggered the event. This is not the actual `Input` as it is no longer available.\n       * @property {string} target.connection `\"closed\"`\n       * @property {string} target.id ID of the input\n       * @property {string} target.manufacturer Manufacturer of the device that provided the input\n       * @property {string} target.name Name of the device that provided the input\n       * @property {string} target.state `\"disconnected\"`\n       * @property {string} target.type `\"input\"`\n       */\n      event.type = \"disconnected\";\n      event.target = {\n        connection: e.port.connection,\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n      this.emit(\"disconnected\", event);\n\n    } else if (e.port.connection === \"pending\" && e.port.state === \"disconnected\") ; else {\n      console.warn(\"This statechange event was not caught: \", e.port.connection, e.port.state);\n    }\n\n  }\n\n  /**\n   * Executed when a `\"midimessage\"` event is received\n   * @param e\n   * @private\n   */\n  _onMidiMessage(e) {\n\n    // Extract data bytes (unless it's a sysex message)\n    let dataBytes = null;\n    if (e.data[0] !== wm.MIDI_SYSTEM_MESSAGES.sysex) dataBytes = e.data.slice(1);\n\n    /**\n     * Event emitted when a MIDI message is received on the `Input`\n     *\n     * @event Input#midimessage\n     * @type {Object}\n     * @property {Input} target The `Input` that triggered the event.\n     * @property {Array} event.data The MIDI message as an array of 8 bit values.\n     * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `\"midimessage\"`\n     * @property {number} event.statusByte The message's status byte.\n     * @property {?number[]} event.dataBytes The message's data bytes as an array of 0, 1 or 2\n     * integers. This will be null for `sysex` messages.\n     *\n     * @since 2.1\n     */\n    let event = {\n      target: this,\n      data: Array.from(e.data),\n      rawData: e.data,\n      statusByte: e.data[0],\n      dataBytes: dataBytes,\n      timestamp: e.timeStamp,\n      type: \"midimessage\"\n    };\n\n    this.emit(\"midimessage\", event);\n\n    // Messages are forwarded to InputChannel if they are targeted at a channel or parsed locally\n    // for system messages.\n    if (e.data[0] < 240) {          // channel-specific message\n      let channel = (e.data[0] & 0xf) + 1;\n      this.channels[channel]._parseEvent(e);\n    } else if (e.data[0] <= 255) {  // system message\n      this._parseEvent(e);\n    }\n\n  }\n\n  /**\n   * @private\n   */\n  _parseEvent(e) {\n\n    let command = e.data[0];\n\n    // Returned event\n    var event = {\n      target: this,\n      data: Array.from(e.data),\n      rawData: e.data,\n      timestamp: e.timeStamp\n    };\n\n    if (command === wm.MIDI_SYSTEM_MESSAGES.sysex) {\n\n      /**\n       * Input-wide (system) event emitted when a **system exclusive** message has been received.\n       * You should note that, to receive `sysex` events, you must call the `WebMidi.enable()`\n       * method with the `sysex` option set to `true`:\n       *\n       * ```js\n       * WebMidi.enable({sysex: true})\n       *  .then(() => console.log(\"WebMidi has been enabled with sysex support.\"))\n       *  .catch(err => console.log(\"WebMidi could not be enabled.\"))\n       * ```\n       *\n       * @event Input#sysex\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"sysex\"`\n       */\n      event.type = \"sysex\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.timecode) {\n\n      /**\n       * Input-wide (system) event emitted when a **time code quarter frame** message has been\n       * received.\n       *\n       * @event Input#timecode\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"sysextimecode\"`\n       */\n      event.type = \"timecode\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.songposition) {\n\n      /**\n       * Input-wide (system) event emitted when a **song position** message has been received.\n       *\n       * @event Input#songposition\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"songposition\"`\n       */\n      event.type = \"songposition\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.songselect) {\n\n      /**\n       * Input-wide (system) event emitted when a **song select** message has been received.\n       *\n       * @event Input#songselect\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"songselect\"`\n       * @property {string} song Song (or sequence) number to select (1-128)\n       */\n      event.type = \"songselect\";\n      event.song = e.data[1] + 1;\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.tunerequest) {\n\n      /**\n       * Input-wide (system) event emitted when a **tune request** message has been received.\n       *\n       * @event Input#tunerequest\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"tunerequest\"`\n       */\n      event.type = \"tunerequest\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.clock) {\n\n      /**\n       * Input-wide (system) event emitted when a **timing clock** message has been received.\n       *\n       * @event Input#clock\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"clock\"`\n       */\n      event.type = \"clock\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.start) {\n\n      /**\n       * Input-wide (system) event emitted when a **start** message has been received.\n       *\n       * @event Input#start\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"start\"`\n       */\n      event.type = \"start\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.continue) {\n\n      /**\n       * Input-wide (system) event emitted when a **continue** message has been received.\n       *\n       * @event Input#continue\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"continue\"`\n       */\n      event.type = \"continue\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.stop) {\n\n      /**\n       * Input-wide (system) event emitted when a **stop** message has been received.\n       *\n       * @event Input#stop\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"stop\"`\n       */\n      event.type = \"stop\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.activesensing) {\n\n      /**\n       * Input-wide (system) event emitted when an **active sensing** message has been received.\n       *\n       * @event Input#activesensing\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"activesensing\"`\n       */\n      event.type = \"activesensing\";\n\n    } else if (command === wm.MIDI_SYSTEM_MESSAGES.reset) {\n\n      /**\n       * Input-wide (system) event emitted when a **reset** message has been received.\n       *\n       * @event Input#reset\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"reset\"`\n       */\n      event.type = \"reset\";\n\n    } else {\n\n      /**\n       * Input-wide (system) event emitted when an unknown MIDI message has been received. It could\n       * be, for example, one of the undefined/reserved messages.\n       *\n       * @event Input#unknownmidimessage\n       * @type {Object}\n       * @property {InputChannel} target The `Input` that triggered the event.\n       * @property {Array} event.data The MIDI message as an array of 8 bit values.\n       * @property {Uint8Array} event.rawData The raw MIDI message as a Uint8Array.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"unknownmidimessage\"`\n       */\n      event.type = \"unknownmidimessage\";\n\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * Opens the input for usage.\n   *\n   * @returns {Promise<Input>} The promise is fulfilled with the `Input`\n   */\n  async open() {\n\n    // Explicitly opens the port for usage. This is not mandatory. When the port is not explicitly\n    // opened, it is implicitly opened (asynchronously) when assigning a listener to the\n    // `onmidimessage` property of the `MIDIInput`. We do it explicitly so that 'connected' events\n    // are dispatched immediately and that we are ready to listen.\n    try {\n      await this._midiInput.open();\n      return Promise.resolve(this);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n  }\n\n  /**\n   * Closes the input. When an input is closed, it cannot be used to listen to MIDI messages until\n   * the input is opened again by calling [Input.open()]{@link Input#open}.\n   *\n   * @returns {Promise<void|*>}\n   */\n  async close() {\n\n    // We close the port. This triggers a statechange event which, in turn, will emit the 'closed'\n    // event.\n    if (this._midiInput) {\n      return this._midiInput.close();\n    } else {\n      return Promise.resolve();\n    }\n\n  }\n\n  /**\n   * @private\n   * @deprecated since v3.0.0 (moved to 'InputChannel' class)\n   */\n  getChannelModeByNumber() {\n    if (wm.validation) {\n      console.warn(\n        \"The 'getChannelModeByNumber()' method has been moved to the 'InputChannel' class.\"\n      );\n    }\n  }\n\n  /**\n   * Adds an event listener that will trigger a function callback when the specified event happens.\n   * The event can be **channel-bound** or **input-wide**. Channel-bound events are dispatched by\n   * {@link InputChannel} objects and are tied to a specific MIDI channel while input-wide events\n   * are dispatched by the {@link Input} object itself and are not tied to a specific channel.\n   *\n   * When listening for an input-wide event, you must specify the event to listen for and the\n   * callback function to trigger when the event happens:\n   *\n   * ```\n   * WebMidi.inputs[0].addListener(\"midimessage\", someFunction);\n   * ```\n   *\n   * To listen for a channel-bound event, you must also specify the event to listen for and the\n   * function to trigger but you have to add the channels you wish to listen on in the `options`\n   * parameter:\n   *\n   * ```\n   * WebMidi.inputs[0].addListener(\"noteon\", someFunction, {channels: [1, 2, 3]});\n   * ```\n   *\n   * The code above will add a listener for the `\"noteon\"` event and call `someFunction` when the\n   * event is triggered on MIDI channels `1`, `2` or `3`.\n   *\n   * Note that, when adding events to channels, it is the {@link InputChannel} instance that\n   * actually gets a listener added and not the `{@link Input} instance.\n   *\n   * Note: if you want to add a listener to a single MIDI channel you should probably do so directly\n   * on the {@link InputChannel} object itself.\n   *\n   * There are 6 families of events you can listen to:\n   *\n   * 1. **MIDI System Common** Events (input-wide)\n   *\n   *    * [songposition]{@link Input#event:songposition}\n   *    * [songselect]{@link Input#event:songselect}\n   *    * [sysex]{@link Input#event:sysex}\n   *    * [timecode]{@link Input#event:timecode}\n   *    * [tunerequest]{@link Input#event:tunerequest}\n   *\n   * 2. **MIDI System Real-Time** Events (input-wide)\n   *\n   *    * [clock]{@link Input#event:clock}\n   *    * [start]{@link Input#event:start}\n   *    * [continue]{@link Input#event:continue}\n   *    * [stop]{@link Input#event:stop}\n   *    * [activesensing]{@link Input#event:activesensing}\n   *    * [reset]{@link Input#event:reset}\n   *\n   * 3. **State Change** Events (input-wide)\n   *\n   *    * [opened]{@link Input#event:opened}\n   *    * [closed]{@link Input#event:closed}\n   *    * [disconnected]{@link Input#event:disconnected}\n   *\n   * 4. **Catch-All** Events (input-wide)\n   *\n   *    * [midimessage]{@link Input#event:midimessage}\n   *    * [unknownmidimessage]{@link Input#event:unknownmidimessage}\n   *\n   * 5. **Channel Voice** Events (channel-specific)\n   *\n   *    * [channelaftertouch]{@link InputChannel#event:channelaftertouch}\n   *    * [controlchange]{@link InputChannel#event:controlchange}\n   *    * [keyaftertouch]{@link InputChannel#event:keyaftertouch}\n   *    * [noteoff]{@link InputChannel#event:noteoff}\n   *    * [noteon]{@link InputChannel#event:noteon}\n   *    * [nrpn]{@link InputChannel#event:nrpn}\n   *    * [pitchbend]{@link InputChannel#event:pitchbend}\n   *    * [programchange]{@link InputChannel#event:programchange}\n   *\n   * 6. **Channel Mode** Events (channel-specific)\n   *\n   *    * [channelmode]{@link InputChannel#event:channelmode}\n   *    * To be completed...\n   *\n   * @param event {string} The type of the event.\n   *\n   * @param listener {function} A callback function to execute when the specified event is detected.\n   * This function will receive an event parameter object. For details on this object's properties,\n   * check out the documentation for the various events (links above).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the `arguments` property of the `Listener` object\n   * and can be retrieved or modified as desired.\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to listen on. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {Object} [options.context=this] The value of `this` in the callback function.\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   *\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array.\n   *\n   * @param {boolean} [options.remaining=Infinity] The number of times after which the callback\n   * should automatically be removed.\n   *\n   * @throws {Error} For channel-specific events, 'options.channels' must be defined.\n   *\n   * @returns {Listener[]} An array of all `Listener` objects that were created.\n   */\n  addListener(event, listener, options) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = (listener != undefined) ? [].concat(listener) : undefined; // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n      // Validation\n      if (\n        wm.MIDI_CHANNEL_VOICE_MESSAGES[event] !== undefined &&\n        options.channels === undefined\n      ) {\n        throw new Error(\"For channel-specific events, 'options.channels' must be defined.\");\n      }\n\n    }\n\n    let listeners = [];\n\n    // Check if the event is channel-specific or input-wide\n    if (wm.MIDI_CHANNEL_VOICE_MESSAGES[event] === undefined) {\n      listeners.push(super.addListener(event, listener, options));\n    } else {\n      wm.sanitizeChannels(options.channels).forEach(ch => {\n        listeners.push(this.channels[ch].addListener(event, listener, options));\n      });\n    }\n\n    return listeners;\n\n  }\n\n  /**\n   * Adds a one-time event listener that will trigger a function callback when the specified event\n   * happens. The event can be **channel-bound** or **input-wide**. Channel-bound events are\n   * dispatched by {@link InputChannel} objects and are tied to a specific MIDI channel while\n   * input-wide events are dispatched by the {@link Input} object itself and are not tied to a\n   * specific channel.\n   *\n   * When listening for an input-wide event, you must specify the event to listen for and the\n   * callback function to trigger when the event happens:\n   *\n   * ```\n   * WebMidi.inputs[0].addListener(\"midimessage\", someFunction);\n   * ```\n   *\n   * To listen for a channel-bound event, you must also specify the event to listen for and the\n   * function to trigger but you have to add the channels you wish to listen on in the `options`\n   * parameter:\n   *\n   * ```\n   * WebMidi.inputs[0].addListener(\"noteon\", someFunction, {channels: [1, 2, 3]});\n   * ```\n   *\n   * The code above will add a listener for the `\"noteon\"` event and call `someFunction` when the\n   * event is triggered on MIDI channels `1`, `2` or `3`.\n   *\n   * Note that, when adding events to channels, it is the {@link InputChannel} instance that\n   * actually gets a listener added and not the `{@link Input} instance.\n   *\n   * Note: if you want to add a listener to a single MIDI channel you should probably do so directly\n   * on the {@link InputChannel} object itself.\n   *\n   * There are 6 families of events you can listen to:\n   *\n   * 1. **MIDI System Common** Events (input-wide)\n   *\n   *    * [songposition]{@link Input#event:songposition}\n   *    * [songselect]{@link Input#event:songselect}\n   *    * [sysex]{@link Input#event:sysex}\n   *    * [timecode]{@link Input#event:timecode}\n   *    * [tunerequest]{@link Input#event:tunerequest}\n   *\n   * 2. **MIDI System Real-Time** Events (input-wide)\n   *\n   *    * [clock]{@link Input#event:clock}\n   *    * [start]{@link Input#event:start}\n   *    * [continue]{@link Input#event:continue}\n   *    * [stop]{@link Input#event:stop}\n   *    * [activesensing]{@link Input#event:activesensing}\n   *    * [reset]{@link Input#event:reset}\n   *\n   * 3. **State Change** Events (input-wide)\n   *\n   *    * [opened]{@link Input#event:opened}\n   *    * [closed]{@link Input#event:closed}\n   *    * [disconnected]{@link Input#event:disconnected}\n   *\n   * 4. **Catch-All** Events (input-wide)\n   *\n   *    * [midimessage]{@link Input#event:midimessage}\n   *    * [unknownmidimessage]{@link Input#event:unknownmidimessage}\n   *\n   * 5. **Channel Voice** Events (channel-specific)\n   *\n   *    * [channelaftertouch]{@link InputChannel#event:channelaftertouch}\n   *    * [controlchange]{@link InputChannel#event:controlchange}\n   *    * [keyaftertouch]{@link InputChannel#event:keyaftertouch}\n   *    * [noteoff]{@link InputChannel#event:noteoff}\n   *    * [noteon]{@link InputChannel#event:noteon}\n   *    * [nrpn]{@link InputChannel#event:nrpn}\n   *    * [pitchbend]{@link InputChannel#event:pitchbend}\n   *    * [programchange]{@link InputChannel#event:programchange}\n   *\n   * 6. **Channel Mode** Events (channel-specific)\n   *\n   *    * [channelmode]{@link InputChannel#event:channelmode}\n   *    * To be completed...\n   *\n   * @param event {string} The type of the event.\n   *\n   * @param listener {function} A callback function to execute when the specified event is detected.\n   * This function will receive an event parameter object. For details on this object's properties,\n   * check out the documentation for the various events (links above).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the `arguments` property of the `Listener` object\n   * and can be retrieved or modified as desired.\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to listen on. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {Object} [options.context=this] The value of `this` in the callback function.\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   *\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array.\n   *\n   * @throws {Error} For channel-specific events, 'options.channels' must be defined.\n   *\n   * @returns {Listener[]} An array of all `Listener` objects that were created.\n   */\n  addOneTimeListener(event, listener, options = {}) {\n    options.remaining = 1;\n    return this.addListener(event, listener, options);\n  }\n\n  /**\n   * This is an alias to the [Input.addListener()]{@link Input#addListener} method.\n   * @since 2.0.0\n   * @deprecated since v3.0\n   * @private\n   */\n  on(event, channel, listener, options) {\n    return this.addListener(event, channel, listener, options);\n  }\n\n  /**\n   * Checks if the specified event type is already defined to trigger the listener function. For\n   * channel-specific events, the function will return `true` only if all channels have the listener\n   * defined.\n   *\n   * @param event {string} The type of the event.\n   *\n   * @param listener {function} The callback function to check for.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to check. This parameter is ignored for\n   * input-wide events.\n   *\n   * @returns {Boolean} Boolean value indicating whether or not the channel(s) already have this\n   * listener defined.\n   *\n   * @throws Error For channel-specific events, 'options.channels' must be defined.\n   */\n  hasListener(event, listener, options = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = [].concat(listener); // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n      // Validation\n      if (\n        wm.MIDI_CHANNEL_VOICE_MESSAGES[event] !== undefined &&\n        options.channels === undefined\n      ) {\n        throw new Error(\"For channel-specific events, 'options.channels' must be defined.\");\n      }\n\n    }\n\n    if (wm.MIDI_CHANNEL_VOICE_MESSAGES[event] !== undefined) {\n\n      return wm.sanitizeChannels(options.channels).every(ch => {\n        return this.channels[ch].hasListener(event, listener);\n      });\n\n    } else {\n      return super.hasListener(event, listener);\n    }\n\n  }\n\n  /**\n   * Removes the specified listener for the specified event. If no listener is specified, all\n   * listeners for the specified event will be removed. If no event is specified, all listeners for\n   * the `Input` as well as all listeners for all `InputChannels` will be removed.\n   *\n   * By default, channel-specific listeners will be removed from all channels unless the\n   * `options.channel` narrows it down.\n   *\n   * @param [type] {String} The type of the event.\n   *\n   * @param [listener] {Function} The callback function to check for.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to match. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {*} [options.context] Only remove the listeners that have this exact context.\n   *\n   * @param {number} [options.remaining] Only remove the listener if it has exactly that many\n   * remaining times to be executed.\n   */\n  removeListener(event, listener, options = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = [].concat(listener); // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    if (options.channels === undefined) {\n      options.channels = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    }\n\n    // If the event is not specified, remove everything (channel-specific and input-wide)!\n    if (event == undefined) {\n      wm.sanitizeChannels(options.channels).forEach(ch => this.channels[ch].removeListener());\n      return super.removeListener();\n    }\n\n    // If the event is specified, check if it's channel-specific or input-wide.\n    if (wm.MIDI_CHANNEL_VOICE_MESSAGES[event] !== undefined) {\n\n      wm.sanitizeChannels(options.channels).forEach(ch => {\n        this.channels[ch].removeListener(event, listener, options);\n      });\n\n    } else {\n\n      super.removeListener(event, listener, options);\n\n    }\n\n  }\n\n  /**\n   * Name of the MIDI input\n   *\n   * @type {string}\n   * @readonly\n   */\n  get name() {\n    return this._midiInput.name;\n  }\n\n  /**\n   * ID string of the MIDI port. The ID is host-specific. Do not expect the same ID on different\n   * platforms. For example, Google Chrome and the Jazz-Plugin report completely different IDs for\n   * the same port.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._midiInput.id;\n  }\n\n  /**\n   * Input port's connection state: `\"pending\"`, `\"open\"` or `\"closed\"`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get connection() {\n    return this._midiInput.connection;\n  }\n\n  /**\n   * Name of the manufacturer of the device that makes this input port available.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get manufacturer() {\n    return this._midiInput.manufacturer;\n  }\n\n  /**\n   * State of the input port: `\"connected\"` or `\"disconnected\"`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get state() {\n    return this._midiInput.state;\n  }\n\n  /**\n   * Port type. In the case of `Input`, this is always: `\"input\"`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get type() {\n    return this._midiInput.type;\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   * @deprecated since v3.0.0 (moved to 'InputChannel' class)\n   */\n  get nrpnEventsEnabled() {\n    if (wm.validation) {\n      console.warn(\"The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class.\");\n    }\n    return false;\n  }\n\n}\n\n/**\n * The `OutputChannel` class represents a single output channel (1-16) from an output device. This\n * object is derived from the host's MIDI subsystem and cannot be instantiated directly.\n *\n * All 16 `OutputChannel` objects can be found inside the output's [channels]{@link Output#channels}\n * property.\n *\n * The `OutputChannel` class extends the\n * [EventEmitter](https://djipco.github.io/djipevents/EventEmitter.html) class from the\n * [djipevents]{@link https://djipco.github.io/djipevents/index.html} module. This means\n * it also includes methods such as\n * [addListener()](https://djipco.github.io/djipevents/EventEmitter.html#addListener),\n * [removeListener()](https://djipco.github.io/djipevents/EventEmitter.html#removeListener),\n * [hasListener()](https://djipco.github.io/djipevents/EventEmitter.html#hasListener) and several\n * others.\n *\n * @param {Output} output The output this channel belongs to\n * @param {number} number The channel's number (1-16)\n *\n * @since 3.0.0\n */\nclass OutputChannel extends e {\n\n  constructor(output, number) {\n\n    super();\n\n    /**\n     * The {@link Output} this channel belongs to\n     * @type {Output}\n     */\n    this.output = output;\n\n    /**\n     * The channel's number (1-16)\n     * @type {number}\n     */\n    this.number = number;\n\n  }\n\n  /**\n   * Unlinks the MIDI subsystem, removes all listeners attached to the channel and nulls the channel\n   * number. This method is mostly for internal use. It has not been prefixed with an underscore\n   * since it is called by other objects such as the `Output` object.\n   *\n   * @private\n   */\n  destroy() {\n    this.output = null;\n    this.number = null;\n    this.removeListener();\n  }\n\n  /**\n   * Sends a MIDI message at the scheduled timestamp. It is usually not necessary to use this method\n   * directly as you can use one of the simpler helper methods such as `playNote()`, `stopNote()`,\n   * `sendControlChange()`, etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param status {Number} The MIDI status byte of the message (128-255). This is a combination of\n   * the command and the channel.\n   *\n   * @param {number[]} [data] An array of unsigned integers for the message. The number of data\n   * bytes varies depending on the status byte. It is perfectly legal to send no data for some\n   * message types (use `undefined` or an empty array in this case). Each byte must be between 0 and\n   * 255.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 0 is greater\n   * than 0xFF.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 2 is greater\n   * than 0xFF.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Running status is not allowed at\n   * index 0.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Message is incomplete.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Reserved status is not allowed at\n   * index 0.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': System exclusive message is not\n   * allowed at index 0.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Unexpected end of system\n   * exclusive message at index 0.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Unexpected status byte at index\n   * 1.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Unexpected status byte at index\n   * 2.\n   *\n   * @throw {TypeError} Failed to execute 'send' on 'MIDIOutput': ? is not a UInt8 value.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  send(status, data = [], options = {}) {\n    this.output.send(status, data, options);\n    return this;\n  }\n\n  /**\n   * Sends a MIDI **key aftertouch** message at the scheduled time. This is a key-specific\n   * aftertouch. For a channel-wide aftertouch message, use\n   * [setChannelAftertouch()]{@link Output#setChannelAftertouch}.\n   *\n   * The note can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A {@link Note} object\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) for which you are sending\n   * an aftertouch value. The notes can be specified by using a MIDI note number (0-127), a note\n   * name (e.g. C3, G#4, F-1, Db7), a {@link Note} object or an array of the previous types. When\n   * using a note name, octave range must be between -1 and 9. The lowest note is C-1 (MIDI note\n   * number 0) and the highest note is G9 (MIDI note number 127).\n   *\n   * @param [pressure=0.5] {number} The pressure level (between 0 and 1). An invalid pressure value\n   * will silently trigger the default behaviour. If the `rawValue` option is set to `true`, the\n   * pressure is defined by using an integer between 0 and 127.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {boolean} [options.useRawValue=false] A boolean indicating whether the value should be\n   * considered a float between 0 and 1.0 (default) or a raw integer between 0 and 127.\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @return {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @throws RangeError Invalid key aftertouch value.\n   */\n  setKeyAftertouch(note, pressure, options = {}) {\n\n    if (wm.validation) {\n\n      // Legacy support\n      if (options.useRawValue) options.rawValue = options.useRawValue;\n\n      if (isNaN(parseFloat(pressure))) {\n        throw new RangeError(\"Invalid key aftertouch value.\");\n      }\n      if (options.rawValue) {\n        if (!(pressure >= 0 && pressure <= 127 && Number.isInteger(pressure))) {\n          throw new RangeError(\"Key aftertouch raw value must be an integer between 0 and 127.\");\n        }\n      } else {\n        if (!(pressure >= 0 && pressure <= 1)) {\n          throw new RangeError(\"Key aftertouch value must be a float between 0 and 1.\");\n        }\n      }\n\n    }\n\n    // Normalize to integer\n    if (!options.rawValue) pressure = Math.round(pressure * 127);\n\n    wm.getValidNoteArray(note, options).forEach(n => {\n      this.send(\n        (wm.MIDI_CHANNEL_VOICE_MESSAGES.keyaftertouch << 4) + (this.number - 1),\n        [n.number, pressure],\n        wm.convertToTimestamp(options.time)\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **control change** message to the channel at the scheduled time. The control\n   * change message to send can be specified numerically or by using one of the following common\n   * names:\n   *\n   *  * `bankselectcoarse` (#0)\n   *  * `modulationwheelcoarse` (#1)\n   *  * `breathcontrollercoarse` (#2)\n   *  * `footcontrollercoarse` (#4)\n   *  * `portamentotimecoarse` (#5)\n   *  * `dataentrycoarse` (#6)\n   *  * `volumecoarse` (#7)\n   *  * `balancecoarse` (#8)\n   *  * `pancoarse` (#10)\n   *  * `expressioncoarse` (#11)\n   *  * `effectcontrol1coarse` (#12)\n   *  * `effectcontrol2coarse` (#13)\n   *  * `generalpurposeslider1` (#16)\n   *  * `generalpurposeslider2` (#17)\n   *  * `generalpurposeslider3` (#18)\n   *  * `generalpurposeslider4` (#19)\n   *  * `bankselectfine` (#32)\n   *  * `modulationwheelfine` (#33)\n   *  * `breathcontrollerfine` (#34)\n   *  * `footcontrollerfine` (#36)\n   *  * `portamentotimefine` (#37)\n   *  * `dataentryfine` (#38)\n   *  * `volumefine` (#39)\n   *  * `balancefine` (#40)\n   *  * `panfine` (#42)\n   *  * `expressionfine` (#43)\n   *  * `effectcontrol1fine` (#44)\n   *  * `effectcontrol2fine` (#45)\n   *  * `holdpedal` (#64)\n   *  * `portamento` (#65)\n   *  * `sustenutopedal` (#66)\n   *  * `softpedal` (#67)\n   *  * `legatopedal` (#68)\n   *  * `hold2pedal` (#69)\n   *  * `soundvariation` (#70)\n   *  * `resonance` (#71)\n   *  * `soundreleasetime` (#72)\n   *  * `soundattacktime` (#73)\n   *  * `brightness` (#74)\n   *  * `soundcontrol6` (#75)\n   *  * `soundcontrol7` (#76)\n   *  * `soundcontrol8` (#77)\n   *  * `soundcontrol9` (#78)\n   *  * `soundcontrol10` (#79)\n   *  * `generalpurposebutton1` (#80)\n   *  * `generalpurposebutton2` (#81)\n   *  * `generalpurposebutton3` (#82)\n   *  * `generalpurposebutton4` (#83)\n   *  * `reverblevel` (#91)\n   *  * `tremololevel` (#92)\n   *  * `choruslevel` (#93)\n   *  * `celestelevel` (#94)\n   *  * `phaserlevel` (#95)\n   *  * `databuttonincrement` (#96)\n   *  * `databuttondecrement` (#97)\n   *  * `nonregisteredparametercoarse` (#98)\n   *  * `nonregisteredparameterfine` (#99)\n   *  * `registeredparametercoarse` (#100)\n   *  * `registeredparameterfine` (#101)\n   *\n   * Note: as you can see above, not all control change message have a matching common name. This\n   * does not mean you cannot use the others. It simply means you will need to use their number\n   * instead of their name.\n   *\n   * To view a detailed list of all available **control change** messages, please consult \"Table 3 -\n   * Control Change Messages\" from the [MIDI Messages](\n   * https://www.midi.org/specifications/item/table-3-control-change-messages-data-bytes-2)\n   * specification.\n   *\n   * @param {number|string} controller The MIDI controller name or number (0-119).\n   *\n   * @param {number} value The value to send (0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 119.\n   * @throws {RangeError} Invalid controller name.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendControlChange(controller, value, options = {}) {\n\n    if (typeof controller === \"string\") {\n      controller = wm.MIDI_CONTROL_CHANGE_MESSAGES[controller];\n    }\n\n    if (wm.validation) {\n      if (controller === undefined) {\n        throw new TypeError(\n          \"Control change must be identified with a valid name or an integer between 0 and 119.\"\n        );\n      }\n\n      if (!Number.isInteger(controller) || !(controller >= 0 && controller <= 119)) {\n        throw new TypeError(\"Control change number must be an integer between 0 and 119.\");\n      }\n\n      if (!Number.isInteger(value) || !(value >= 0 && value <= 127)) {\n        throw new TypeError(\"Control change value must be an integer between 0 and 127\");\n      }\n    }\n\n    this.send(\n      (wm.MIDI_CHANNEL_VOICE_MESSAGES.controlchange << 4) + (this.number - 1),\n      [controller, value],\n      wm.convertToTimestamp(options.time)\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Selects a MIDI non-registered parameter so it is affected by upcoming data entry, data\n   * increment and data decrement messages.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes that identify\n   * the registered parameter. The NRPN MSB (99 or 0x63) is a position 0. The NRPN LSB (98 or 0x62)\n   * is at position 1.\n   *\n   * @private\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _selectNonRegisteredParameter(parameter, options = {}) {\n\n    // parameter[0] = Math.floor(parameter[0]);\n    // if (!(parameter[0] >= 0 && parameter[0] <= 127)) {\n    //   throw new RangeError(\"The control63 value must be between 0 and 127.\");\n    // }\n    //\n    // parameter[1] = Math.floor(parameter[1]);\n    // if (!(parameter[1] >= 0 && parameter[1] <= 127)) {\n    //   throw new RangeError(\"The control62 value must be between 0 and 127.\");\n    // }\n\n    this.sendControlChange(0x63, parameter[0], options);\n    this.sendControlChange(0x62, parameter[1], options);\n\n    return this;\n\n  }\n\n  /**\n   * Deselects the currently active MIDI registered parameter so it is no longer affected by data\n   * entry, data increment and data decrement messages.\n   *\n   * Current best practice recommends doing that after each call to\n   * [_setCurrentParameter()]{@link OutputChannel#_setCurrentParameter}.\n   *\n   * @private\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _deselectRegisteredParameter(options = {}) {\n    this.sendControlChange(0x65, 0x7F, options);\n    this.sendControlChange(0x64, 0x7F, options);\n    return this;\n  }\n\n  /**\n   * Deselects the currently active MIDI non-registered parameter so it is no longer affected by\n   * data entry, data increment and data decrement messages.\n   *\n   * @private\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _deselectNonRegisteredParameter(options = {}) {\n    this.sendControlChange(0x65, 0x7F, options);\n    this.sendControlChange(0x64, 0x7F, options);\n    return this;\n  }\n\n  /**\n   * Selects a MIDI registered parameter so it is affected by upcoming data entry, data increment\n   * and data decrement messages.\n   *\n   * @private\n   *\n   * @param parameter {number[]} A two-position array of integers specifying the two control bytes\n   * (0x65, 0x64) that identify the registered parameter. The integers must be between 0 and 127.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _selectRegisteredParameter(parameter, options = {}) {\n    this.sendControlChange(0x65, parameter[0], options);\n    this.sendControlChange(0x64, parameter[1], options);\n    return this;\n  }\n\n  /**\n   * Sets the value of the currently selected MIDI registered parameter.\n   *\n   * @private\n   *\n   * @param data {number|number[]}\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _setCurrentParameter(data, options = {}) {\n\n    data = [].concat(data);\n\n    // MSB\n    // data[0] = parseInt(data[0]);\n    // if (!isNaN(data[0]) && data[0] >= 0 && data[0] <= 127) {\n    this.sendControlChange(0x06, data[0], options);\n    // } else {\n    //   throw new RangeError(\"The msb value must be between 0 and 127.\");\n    // }\n\n    if (data.length < 2) return this;\n\n    // LSB\n    // data[1] = parseInt(data[1]);\n\n    // if (!isNaN(data[1]) && data[1] >= 0 && data[1] <= 127) {\n    this.sendControlChange(0x26, data[1], options);\n    // } else {\n    //   throw new RangeError(\"The lsb value must be between 0 and 127.\");\n    // }\n\n    return this;\n\n  }\n\n  /**\n   * Decrements the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified registered parameter is invalid.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  decrementRegisteredParameter(parameter, options = {}) {\n\n    if (!Array.isArray(parameter)) parameter = wm.MIDI_REGISTERED_PARAMETER[parameter];\n\n    if (wm.validation) {\n      if (parameter === undefined) {\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      }\n\n      let valid = false;\n\n      Object.getOwnPropertyNames(wm.MIDI_REGISTERED_PARAMETER).forEach(p => {\n        if (\n          wm.MIDI_REGISTERED_PARAMETER[p][0] === parameter[0] &&\n          wm.MIDI_REGISTERED_PARAMETER[p][1] === parameter[1]\n        ) {\n          valid = true;\n        }\n      });\n\n      if (!valid) throw new TypeError(\"The specified registered parameter is invalid.\");\n    }\n\n    this._selectRegisteredParameter(parameter, options);\n    this.sendControlChange(0x61, 0, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Increments the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified registered parameter is invalid.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  incrementRegisteredParameter(parameter, options = {}) {\n\n    if (!Array.isArray(parameter)) parameter = wm.MIDI_REGISTERED_PARAMETER[parameter];\n\n    if (wm.validation) {\n      if (parameter === undefined) {\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      }\n\n      let valid = false;\n\n      Object.getOwnPropertyNames(wm.MIDI_REGISTERED_PARAMETER).forEach(p => {\n        if (\n          wm.MIDI_REGISTERED_PARAMETER[p][0] === parameter[0] &&\n          wm.MIDI_REGISTERED_PARAMETER[p][1] === parameter[1]\n        ) {\n          valid = true;\n        }\n      });\n\n      if (!valid) throw new TypeError(\"The specified registered parameter is invalid.\");\n    }\n\n    this._selectRegisteredParameter(parameter, options);\n    this.sendControlChange(0x60, 0, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Plays a note or an array of notes on the channel. The first parameter is the note to play. It\n   * can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A {@link Note} object\n   *\n   * The `playNote()` method sends a **note on** MIDI message for all specified notes on all\n   * specified channels. If a `duration` is set in the `options` parameter or in the {@link Note}\n   * object's [duration]{@link Note#duration} property, it will also schedule a **note off** message\n   * to end the note after said duration. If no `duration` is set, the note will simply play until\n   * a matching **note off** message is sent with [stopNote()]{@link OutputChannel#stopNote} or\n   * [sendNoteOff()]{@link OutputChannel#sendNoteOff}.\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using {@link Note} objects, the durations and velocities defined in the {@link Note}\n   * objects have precedence over the ones specified via the method's `options` parameter.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note name (e.g. C3, G#4, F-1, Db7), a\n   * {@link Note} object or an array of the previous types. When using a note name, octave range\n   * must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number} [options.duration] A positive number larger than 0 representing the number of\n   * milliseconds to wait before sending a **note off** message. If invalid or left undefined, only\n   * a **note on** message will be sent.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`). If the `rawAttack` option is also defined, it will have priority. An invalid velocity\n   * value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=0.5] The attack velocity at which to play the note (between\n   * `0` and `127`). This has priority over the `attack` property. An invalid velocity value will\n   * silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawRelease` option is also defined, it will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`. This is only used with the\n   * **note off** event triggered when `options.duration` is set.\n   *\n   * @param {number} [options.rawRelease=0.5] The velocity at which to release the note (between `0`\n   * and `127`). This has priority over the `release` property. An invalid velocity value will\n   * silently trigger the default of `0.5`. This is only used with the **note off** event triggered\n   * when `options.duration` is set.\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  playNote(note, options = {}) {\n\n    // Send note on and, optionally, note off message (if duration is a positive number)\n    this.sendNoteOn(note, options);\n\n    // https://stackoverflow.com/questions/600763#answer-601877\n    if (options.duration > 0 && isFinite(String(options.duration).trim() || NaN)) {\n\n      let noteOffOptions = {\n        time: wm.convertToTimestamp(options.time) + options.duration,\n        release: options.release,\n        rawRelease: options.rawRelease,\n      };\n\n      this.sendNoteOff(note, noteOffOptions);\n\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified notes on the channel. The first parameter is the\n   * note. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A {@link Note} object\n   *\n   *  The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using {@link Note} objects, the release velocity defined in the {@link Note} objects has\n   * precedence over the one specified via the method's `options` parameter.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (0-127), a note name (e.g. C3, G#4, F-1, Db7), a\n   * {@link Note} object or an array of the previous types. When using a note name, octave range\n   * must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNoteOff(note, options = {}) {\n\n    if (wm.validation) {\n\n      if (\n        options.rawRelease != undefined &&\n        !(options.rawRelease >= 0 && options.rawRelease <= 127)\n      ) {\n        throw new RangeError(\"The 'rawRelease' option must be an integer between 0 and 127\");\n      }\n\n      if (options.release != undefined && !(options.release >= 0 && options.release <= 1)) {\n        throw new RangeError(\"The 'release' option must be an number between 0 and 1\");\n      }\n\n      // Legacy compatibility warnings\n      if (options.rawVelocity) {\n        options.rawRelease = options.velocity;\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.\");\n      }\n      if (options.velocity) {\n        options.release = options.velocity;\n        console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\");\n      }\n\n    }\n\n\n\n    let nVelocity = 64;\n\n    if (options.rawRelease != undefined) {\n      nVelocity = options.rawRelease;\n    } else {\n      if (!isNaN(options.release)) nVelocity = Math.round(options.release * 127);\n    }\n\n    // Send note off messages\n    let o = {rawRelease: parseInt(nVelocity)};\n\n    wm.getValidNoteArray(note, o).forEach(n => {\n      this.send(\n        (wm.MIDI_CHANNEL_VOICE_MESSAGES.noteoff << 4) + (this.number - 1),\n        [n.number, n.rawRelease],\n        wm.convertToTimestamp(options.time)\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * This is an alias to the [sendNoteOff()]{@link OutputChannel#sendNoteOff} method.\n   *\n   * @see {@link OutputChannel#sendNoteOff}\n   *\n   * @param note\n   * @param options\n   * @returns {Output}\n   */\n  stopNote(note, options = {}) {\n    return this.sendNoteOff(note, options);\n  }\n\n  /**\n   * Sends a **note on** message for the specified notes on the channel. The first parameter is the\n   * note. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A {@link Note} object\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using {@link Note} objects, the attack velocity defined in the {@link Note} objects has\n   * precedence over the one specified via the method's `options` parameter. Also, the `duration` is\n   * ignored. If you want to also send a **note off** message, use the\n   * [playNote()]{@link Output#playNote} method instead.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note name (e.g. C3, G#4, F-1, Db7), a\n   * {@link Note} object or an array of the previous types. When using a note name, octave range\n   * must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`).  If the `rawAttack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The velocity at which to release the note (between `0`\n   * and `127`). If the `attack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `64`.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNoteOn(note, options = {}) {\n\n    if (wm.validation) {\n\n      if (options.rawAttack != undefined && !(options.rawAttack >= 0 && options.rawAttack <= 127)) {\n        throw new RangeError(\"The 'rawAttack' option must be an integer between 0 and 127\");\n      }\n\n      if (options.attack != undefined && !(options.attack >= 0 && options.attack <= 1)) {\n        throw new RangeError(\"The 'attack' option must be an number between 0 and 1\");\n      }\n\n      // Legacy compatibility warnings\n      if (options.rawVelocity) {\n        options.rawAttack = options.velocity;\n        options.rawRelease = options.release;\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.\");\n      }\n      if (options.velocity) {\n        options.attack = options.velocity;\n        console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\");\n      }\n\n    }\n\n    let nVelocity = 64;\n\n    if (options.rawAttack != undefined) {\n      nVelocity = options.rawAttack;\n    } else {\n      if (!isNaN(options.attack)) nVelocity = Math.round(options.attack * 127);\n    }\n\n    let o = {rawAttack: nVelocity};\n\n    wm.getValidNoteArray(note, o).forEach(n => {\n      this.send(\n        (wm.MIDI_CHANNEL_VOICE_MESSAGES.noteon << 4) + (this.number - 1),\n        [n.number, n.rawAttack],\n        wm.convertToTimestamp(options.time)\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel mode** message. The channel mode message to send can be specified\n   * numerically or by using one of the following common names:\n   *\n   *   * `\"allsoundoff\"` (#120)\n   *   * `\"resetallcontrollers\"` (#121)\n   *   * `\"localcontrol\"` (#122)\n   *   * `\"allnotesoff\"` (#123)\n   *   * `\"omnimodeoff\"` (#124)\n   *   * `\"omnimodeon\"` (#125)\n   *   * `\"monomodeon\"` (#126)\n   *   * `\"polymodeon\"` (#127)\n   *\n   * It should be noted that, per the MIDI specification, only `localcontrol` and `monomodeon` may\n   * require a value that's not zero. For that reason, the `value` parameter is optional and\n   * defaults to 0.\n   *\n   * To make it easier, all channel mode messages have a matching helper method:\n   *\n   *   - [turnSoundOff()]{@link Output#turnSoundOff}\n   *   - [resetAllControllers()]{@link Output#resetAllControllers}\n   *   - [setLocalControl()]{@link Output#turnSoundOff}\n   *   - [turnNotesOff()]{@link Output#turnNotesOff}\n   *   - [setOmniMode()]{@link Output#setOmniMode}\n   *   - [setPolyphonicMode()]{@link Output#setPolyphonicMode}\n   *\n   * @param command {number|string} The numerical identifier of the channel mode message (integer\n   * between 120-127) or its name as a string.\n   *\n   * @param value {number} The value to send (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendChannelMode(command, value, options = {}) {\n\n    // Normalize command to integer\n    if (typeof command === \"string\") command = wm.MIDI_CHANNEL_MODE_MESSAGES[command];\n\n    if (wm.validation) {\n\n      if (command === undefined) {\n        throw new TypeError(\"Invalid channel mode message name or number.\");\n      }\n\n      if (isNaN(command) || !(command >= 120 && command <= 127)) {\n        throw new TypeError(\"Invalid channel mode message number.\");\n      }\n\n      if (isNaN(parseInt(value)) || value < 0 || value > 127) {\n        throw new RangeError(\"Value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    this.send(\n      (wm.MIDI_CHANNEL_VOICE_MESSAGES.channelmode << 4) + (this.number - 1),\n      [command, value],\n      wm.convertToTimestamp(options.time)\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sets OMNI mode to `\"on\"` or `\"off\"`. MIDI's OMNI mode causes the instrument to respond to\n   * messages from all channels.\n   *\n   * It should be noted that support for OMNI mode is not as common as it used to be.\n   *\n   * @param [state=true] {boolean} Whether to activate OMNI mode (`true`) or not (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setOmniMode(state, options = {}) {\n\n    if (state === undefined || state) {\n      this.sendChannelMode(\"omnimodeon\", 0, options);\n    } else {\n      this.sendChannelMode(\"omnimodeoff\", 0, options);\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel aftertouch** message. For key-specific aftertouch, you should instead\n   * use [setKeyAftertouch()]{@link Output#setKeyAftertouch}.\n   *\n   * @param [pressure] {number} The pressure level (between 0 and 1). If the `rawValue` option is\n   * set to `true`, the pressure can be defined by using an integer between 0 and 127.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between 0 and 1.0 (default) or a raw integer between 0 and 127.\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @throws RangeError Invalid channel aftertouch value.\n   */\n  setChannelAftertouch(pressure, options = {}) {\n\n    if (wm.validation) {\n\n      if (isNaN(parseFloat(pressure))) {\n        throw new RangeError(\"Invalid channel aftertouch value.\");\n      }\n\n      if (options.rawValue) {\n        if (!(pressure >= 0 && pressure <= 127 && Number.isInteger(pressure))) {\n          throw new RangeError(\n            \"Channel aftertouch raw value must be an integer between 0 and 127.\")\n          ;\n        }\n      } else {\n        if (!(pressure >= 0 && pressure <= 1)) {\n          throw new RangeError(\"Channel aftertouch value must be a float between 0 and 1.\");\n        }\n      }\n\n    }\n\n    this.send(\n      (wm.MIDI_CHANNEL_VOICE_MESSAGES.channelaftertouch << 4) + (this.number - 1),\n      [Math.round(pressure * 127)],\n      wm.convertToTimestamp(options.time)\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **master tuning** message. The value is decimal and must be larger than -65 semitones\n   * and smaller than 64 semitones.\n   *\n   * Because of the way the MIDI specification works, the decimal portion of the value will be\n   * encoded with a resolution of 14bit. The integer portion must be between -64 and 63\n   * inclusively. This function actually generates two MIDI messages: a **Master Coarse Tuning** and\n   * a **Master Fine Tuning** RPN messages.\n   *\n   * @param [value=0.0] {number} The desired decimal adjustment value in semitones (-65 < x < 64)\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The value must be a decimal number between larger than -65 and smaller\n   * than 64.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setMasterTuning(value, options = {}) {\n\n    value = parseFloat(value) || 0.0;\n\n    if (wm.validation) {\n\n      if (!(value > -65 && value < 64)) {\n        throw new RangeError(\n          \"The value must be a decimal number larger than -65 and smaller than 64.\"\n        );\n      }\n\n    }\n\n    let coarse = Math.floor(value) + 64;\n    let fine = value - Math.floor(value);\n\n    // Calculate MSB and LSB for fine adjustment (14bit resolution)\n    fine = Math.round((fine + 1) / 2 * 16383);\n    let msb = (fine >> 7) & 0x7F;\n    let lsb = fine & 0x7F;\n\n    this.setRegisteredParameter(\"channelcoarsetuning\", coarse, options);\n    this.setRegisteredParameter(\"channelfinetuning\", [msb, lsb], options);\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **modulation depth range** message to adjust the depth of the modulation wheel's range.\n   * The range can be specified with the `semitones` parameter, the `cents` parameter or by\n   * specifying both parameters at the same time.\n   *\n   * @param {number} semitones The desired adjustment value in semitones (integer between 0 and\n   * 127).\n   *\n   * @param {number} [cents=0] The desired adjustment value in cents (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setModulationRange(semitones, cents, options = {}) {\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(semitones) || !(semitones >= 0 && semitones <= 127)) {\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      }\n\n      if (!(cents == undefined) && (!Number.isInteger(cents) || !(cents >= 0 && cents <= 127))) {\n        throw new RangeError(\"If specified, the cents value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    // Default value for cents\n    if (!(cents >= 0 && cents <= 127)) cents = 0;\n\n    this.setRegisteredParameter(\"modulationrange\", [semitones, cents], options);\n\n    return this;\n\n  }\n\n  /**\n   * Sets a non-registered parameter (NRPN) to the specified value. The NRPN is selected by passing\n   * in a two-position array specifying the values of the two control bytes. The value is specified\n   * by passing in a single integer (most cases) or an array of two integers.\n   *\n   * NRPNs are not standardized in any way. Each manufacturer is free to implement them any way\n   * they see fit. For example, according to the Roland GS specification, you can control the\n   * **vibrato rate** using NRPN (1, 8). Therefore, to set the **vibrato rate** value to **123** you\n   * would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].channels[0].setNonRegisteredParameter([1, 8], 123);\n   * ```\n   *\n   * In some rarer cases, you need to send two values with your NRPN messages. In such cases, you\n   * would use a 2-position array. For example, for its **ClockBPM** parameter (2, 63), Novation\n   * uses a 14-bit value that combines an MSB and an LSB (7-bit values). So, for example, if the\n   * value to send was 10, you could use:\n   *\n   * ```js\n   * WebMidi.outputs[0].channels[0].setNonRegisteredParameter([2, 63], [0, 10]);\n   * ```\n   *\n   * For further implementation details, refer to the manufacturer's documentation.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes (0x63,\n   * 0x62) that identify the non-registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An integer or an array of integers with a length of 1 or 2\n   * specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The control value must be between 0 and 127.\n   * @throws {RangeError} The msb value must be between 0 and 127\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setNonRegisteredParameter(nrpn, data, options = {}) {\n\n    data = [].concat(data);\n\n    if (wm.validation) {\n\n      if (!Array.isArray(nrpn) || !Number.isInteger(nrpn[0]) || !Number.isInteger(nrpn[1])) {\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      }\n\n      if (!(nrpn[0] >= 0 && nrpn[0] <= 127)) {\n        throw new RangeError(\"The first byte of the NRPN must be between 0 and 127.\");\n      }\n\n      if (!(nrpn[1] >= 0 && nrpn[1] <= 127)) {\n        throw new RangeError(\"The second byte of the NRPN must be between 0 and 127.\");\n      }\n\n      data.forEach(value => {\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The data bytes of the NRPN must be between 0 and 127.\");\n        }\n      });\n\n    }\n\n    this._selectNonRegisteredParameter(nrpn, options);\n    this._setCurrentParameter(data, options);\n    this._deselectNonRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **pitch bend** message at the scheduled time.\n   *\n   * @param {number|number[]} [value] The intensity of the bend (between -1.0 and 1.0). A value of\n   * zero means no bend. The resulting bend is relative to the pitch bend range that has been\n   * defined. The range can be set with [setPitchBendRange()]{@link OutputChannel#setPitchBendRange}\n   * . So, for example, if the pitch bend range has been set to 12 semitones, using a bend value of\n   * -1 will bend the note 1 octave below its nominal value.\n   *\n   * If the `rawValue` option is set to `true`, the intensity of the bend can be defined by either\n   * using a single integer between 0 and 127 (MSB) or an array of two integers between 0 and 127\n   * representing, respectively, the MSB (most significant byte) and the LSB (least significant\n   * byte). The MSB is expressed in semitones with `64` meaning no bend. A value lower than `64`\n   * bends downwards while a value higher than `64` bends upwards. The LSB is expressed in cents\n   * (1/100 of a semitone). An LSB of `64` also means no bend.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered as a float between -1.0 and 1.0 (default) or as raw integer between 0 and 127 (or\n   * an array of 2 integers if using both MSB and LSB).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setPitchBend(value, options = {}) {\n\n    if (wm.validation) {\n\n      if (options.rawValue && Array.isArray(value)) {\n\n        if (!(value[0] >= 0 && value[0] <= 127)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n        if (!(value[1] >= 0 && value[1] <= 127)) {\n          throw new RangeError(\"The pitch bend LSB must be an integer between 0 and 127.\");\n        }\n\n      } else if (options.rawValue && !Array.isArray(value)) {\n\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n\n      } else {\n\n        if (isNaN(value) || value === null) {\n          throw new RangeError(\"Invalid pitch bend value.\");\n        }\n\n        if (!(value >= -1 && value <= 1)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n\n      }\n\n    }\n\n    let msb = 0;\n    let lsb = 0;\n\n    // Calculate MSB and LSB for both scenarios\n    if (options.rawValue && Array.isArray(value)) {\n      msb = value[0];\n      lsb = value[1];\n    } else if (options.rawValue && !Array.isArray(value)) {\n      msb = value;\n    } else {\n      let nLevel = Math.round((value + 1) / 2 * 16383);\n      msb = (nLevel >> 7) & 0x7F;\n      lsb = nLevel & 0x7F;\n    }\n\n    this.send(\n      (wm.MIDI_CHANNEL_VOICE_MESSAGES.pitchbend << 4) + (this.number - 1),\n      [lsb, msb],\n      wm.convertToTimestamp(options.time)\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a pitch bend range message to the specified channel(s) at the scheduled time so that they\n   * adjust the range used by their pitch bend lever. The range is specified by using the\n   * `semitones` and `cents` parameters. For example, setting the `semitones` parameter to `12`\n   * means that the pitch bend range will be 12 semitones above and below the nominal pitch.\n   *\n   * @param semitones {number} The desired adjustment value in semitones (between 0 and 127). While\n   * nothing imposes that in the specification, it is very common for manufacturers to limit the\n   * range to 2 octaves (-12 semitones to 12 semitones).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127.\n   * @throws {RangeError} The lsb value must be between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setPitchBendRange(semitones, cents, options = {}) {\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(semitones) || !(semitones >= 0 && semitones <= 127)) {\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      }\n\n      if (!Number.isInteger(cents) || !(cents >= 0 && cents <= 127)) {\n        throw new RangeError(\"The cents value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    this.setRegisteredParameter(\"pitchbendrange\", [semitones, cents], options);\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **program change** message at the scheduled time.\n   *\n   * **Note**: since version 3.0, the program number is an integer between 1 and 128. In versions\n   * 1.0 and 2.0, the number was between 0 and 127. This change aligns WebMidi.js with most devices\n   * that use a numbering scheme starting at 1.\n   *\n   * @param [program=1] {number} The MIDI patch (program) number (1-128)\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 1 is greater\n   * than 0xFF.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   */\n  setProgram(program, options = {}) {\n\n    program = parseInt(program) || 1;\n\n    if (wm.validation) {\n\n      if (!(program >= 1 && program <= 128)) {\n        throw new RangeError(\"The program number must be between 1 and 128.\");\n      }\n\n    }\n\n    this.send(\n      (wm.MIDI_CHANNEL_VOICE_MESSAGES.programchange << 4) + (this.number - 1),\n      [program - 1],\n      wm.convertToTimestamp(options.time)\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sets the specified MIDI registered parameter to the desired value. The value is defined with\n   * up to two bytes of data (msb, lsb) that each can go from 0 to 127.\n   *\n   * MIDI\n   * [registered parameters]\n   * (https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * extend the original list of control change messages. The MIDI 1.0 specification lists only a\n   * limited number of them. Here are the original registered parameters with the identifier that\n   * can be used as the first parameter of this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *\n   * Note that the **Tuning Program** and **Tuning Bank** parameters are part of the *MIDI Tuning\n   * Standard*, which is not widely implemented.\n   *\n   * Another set of extra parameters have been later added for 3D sound controllers. They are:\n   *\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {string|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (e.g. `[0x65, 0x64]`) that identify the\n   * registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An single integer or an array of integers with a maximum\n   * length of 2 specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setRegisteredParameter(rpn, data, options = {}) {\n\n    if (!Array.isArray(rpn)) rpn = wm.MIDI_REGISTERED_PARAMETER[rpn];\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(rpn[0]) || !Number.isInteger(rpn[1])) {\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      }\n\n      if (!(rpn[0] >= 0 && rpn[0] <= 127)) {\n        throw new RangeError(\"The first byte of the RPN must be between 0 and 127.\");\n      }\n\n      if (!(rpn[1] >= 0 && rpn[1] <= 127)) {\n        throw new RangeError(\"The second byte of the RPN must be between 0 and 127.\");\n      }\n\n      [].concat(data).forEach(value => {\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The data bytes of the RPN must be between 0 and 127.\");\n        }\n      });\n\n    }\n\n    this._selectRegisteredParameter(rpn, options);\n    this._setCurrentParameter(data, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning bank to use. Note that the **Tuning Bank** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * **Note**: since version 3.0, the bank number is an integer between 1 and 128. In versions\n   * 1.0 and 2.0, the number was between 0 and 127. This change aligns WebMidi.js with most devices\n   * that use a numbering scheme starting at 1.\n   *\n   * @param value {number} The desired tuning bank (1-128).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The bank value must be between 1 and 128.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setTuningBank(value, options = {}) {\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(value) || !(value >= 1 && value <= 128)) {\n        throw new RangeError(\"The tuning bank number must be between 1 and 128.\");\n      }\n\n    }\n\n    this.setRegisteredParameter(\"tuningbank\", value - 1, options);\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning program to use. Note that the **Tuning Program** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * **Note**: since version 3.0, the program number is an integer between 1 and 128. In versions\n   * 1.0 and 2.0, the number was between 0 and 127. This change aligns WebMidi.js with most devices\n   * that use a numbering scheme starting at 1.\n   *\n   * @param value {number} The desired tuning program (1-128).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The program value must be between 1 and 128.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setTuningProgram(value, options = {}) {\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(value) || !(value >= 1 && value <= 128)) {\n        throw new RangeError(\"The tuning program number must be between 1 and 128.\");\n      }\n\n    }\n\n    this.setRegisteredParameter(\"tuningprogram\", value - 1, options);\n    return this;\n\n  }\n\n  /**\n   * Turns local control on or off. Local control is usually enabled by default. If you disable it,\n   * the instrument will no longer trigger its own sounds. It will only send the MIDI messages to\n   * its out port.\n   *\n   * @param [state=false] {boolean} Whether to activate local control (`true`) or disable it\n   * (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setLocalControl(state, options = {}) {\n    if (state) {\n      return this.sendChannelMode(\"localcontrol\", 127, options);\n    } else {\n      return this.sendChannelMode(\"localcontrol\", 0, options);\n    }\n  }\n\n  /**\n   * Sends an **all notes off** channel mode message. This will turn all currently playing notes\n   * off. However, this does not prevent new notes from being played.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  turnNotesOff(options = {}) {\n    return this.sendChannelMode(\"allnotesoff\", 0, options);\n  }\n\n  /**\n   * Sends an **all sound off** channel mode message. This will silence all sounds playing on that\n   * channel but will not prevent new sounds from being triggered.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  turnSoundOff(options = {}) {\n    return this.sendChannelMode(\"allsoundoff\", 0, options);\n  }\n\n  /**\n   * Sends a **reset all controllers** channel mode message. This resets all controllers, such as\n   * the pitch bend, to their default value.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  resetAllControllers(options = {}) {\n    return this.sendChannelMode(\"resetallcontrollers\", 0, options);\n  }\n\n  /**\n   * Sets the polyphonic mode. In `\"poly\"` mode (usually the default), multiple notes can be played\n   * and heard at the same time. In `\"mono\"` mode, only one note will be heard at once even if\n   * multiple notes are being played.\n   *\n   * @param {string} [mode=poly] The mode to use: `\"mono\"` or `\"poly\"`.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [WebMidi.time]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the operation\n   * will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  setPolyphonicMode(mode, options = {}) {\n    if (mode === \"mono\") {\n      return this.sendChannelMode(\"monomodeon\", 0, options);\n    } else {\n      return this.sendChannelMode(\"polymodeon\", 0, options);\n    }\n  }\n\n}\n\n/**\n * The `Output` class represents a MIDI output port. This object is derived from the host's MIDI\n * subsystem and cannot be instantiated directly.\n *\n * You can find a list of all available `Output` objects in the\n * [WebMidi.outputs]{@link WebMidi#outputs} array.\n *\n * The `Output` class extends the\n * [EventEmitter](https://djipco.github.io/djipevents/EventEmitter.html) class from the\n * [djipevents]{@link https://djipco.github.io/djipevents/index.html} module. This means\n * it also includes methods such as\n * [addListener()](https://djipco.github.io/djipevents/EventEmitter.html#addListener),\n * [removeListener()](https://djipco.github.io/djipevents/EventEmitter.html#removeListener),\n * [hasListener()](https://djipco.github.io/djipevents/EventEmitter.html#hasListener) and several\n * others.\n *\n * @param {MIDIOutput} midiOutput `MIDIOutput` object as provided by the MIDI subsystem\n *\n * @fires Output#opened\n * @fires Output#disconnected\n * @fires Output#closed\n */\nclass Output extends e {\n\n  constructor(midiOutput) {\n\n    super();\n\n    if (wm.validation) {\n\n      if (!midiOutput || midiOutput.type !== \"output\") {\n        throw new TypeError(\"The supplied MIDIOutput is invalid.\");\n      }\n\n    }\n\n    /**\n     * A reference to the `MIDIOutput` object\n     * @type {MIDIOutput}\n     * @private\n     */\n    this._midiOutput = midiOutput;\n\n    /**\n     * Array containing the 16 {@link OutputChannel} objects available for this `Output`. The\n     * channels are numbered 1 through 16.\n     *\n     * @type {OutputChannel[]}\n     */\n    this.channels = [];\n    for (let i = 1; i <= 16; i++) this.channels[i] = new OutputChannel(this, i);\n\n    this._midiOutput.onstatechange = this._onStateChange.bind(this);\n\n  }\n\n  /**\n   * Destroys the `Output`. All listeners are removed, all channels are destroyed and the MIDI\n   * subsystem is unlinked.\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    this.removeListener();\n    this.channels.forEach(ch => ch.destroy());\n    this.channels = [];\n    this._midiOutput.onstatechange = null;\n    await this.close();\n    this._midiOutput = null;\n  }\n\n  /**\n   * @private\n   */\n  _onStateChange(e) {\n\n    let event = {\n      timestamp: wm.time\n    };\n\n    if (e.port.connection === \"open\") {\n\n      /**\n       * Event emitted when the {@link Output} has been opened by calling the\n       * [open()]{@link Output#open} method.\n       *\n       * @event Output#opened\n       * @type {Object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"opened\"`\n       * @property {Output} target The object that triggered the event\n       */\n      event.type = \"opened\";\n      event.target = this;\n      this.emit(\"opened\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"connected\") {\n\n      /**\n       * Event emitted when the {@link Output} has been closed by calling the\n       * [close()]{@link Output#close} method.\n       *\n       * @event Output#closed\n       * @type {Object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"closed\"`\n       * @property {Output} target The object that triggered the event\n       */\n      event.type = \"closed\";\n      event.target = this;\n      this.emit(\"closed\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"disconnected\") {\n\n      /**\n       * Event emitted when the {@link Output} becomes unavailable. This event is typically fired\n       * when the MIDI device is unplugged.\n       *\n       * @event Output#disconnected\n       * @type {Object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp0 when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"disconnected\"`\n       * @property {Object} target Object with properties describing the {@link Output} that\n       * triggered the event. This is not the actual `Output` as it is no longer available.\n       * @property {string} target.connection `\"closed\"`\n       * @property {string} target.id ID of the input\n       * @property {string} target.manufacturer Manufacturer of the device that provided the input\n       * @property {string} target.name Name of the device that provided the input\n       * @property {string} target.state `\"disconnected\"`\n       * @property {string} target.type `\"output\"`\n       */\n      event.type = \"disconnected\";\n      event.target = {\n        connection: e.port.connection,\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n      this.emit(\"disconnected\", event);\n\n    } else if (e.port.connection === \"pending\" && e.port.state === \"disconnected\") ; else {\n      console.warn(\"This statechange event was not caught:\", e.port.connection, e.port.state);\n    }\n\n  }\n\n  /**\n   * Opens the output for usage.\n   *\n   * @returns {Promise<Output>} The promise is fulfilled with the `Output`\n   */\n  async open() {\n\n    // Explicitly opens the port for usage. This is not mandatory. When the port is not explicitly\n    // opened, it is implicitly opened (asynchronously) when calling `send()` on the `MIDIOutput`.\n    // We do it explicitly so that 'connected' events are dispatched immediately and we are ready to\n    // send.\n    try {\n      await this._midiOutput.open();\n      return Promise.resolve(this);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n  }\n\n  /**\n   * Closes the output connection. When an output is closed, it cannot be used to send MIDI messages\n   * until the output is opened again by calling [Output.open()]{@link Output#open}. You can check\n   * the connection status by looking at the [connection]{@link Output#connection} property.\n   *\n   * @returns {Promise<void>}\n   */\n  async close() {\n\n    // We close the port. This triggers a 'statechange' event which we listen to to re-trigger the\n    // 'closed' event.\n    if (this._midiOutput) {\n      await this._midiOutput.close();\n    } else {\n      await Promise.resolve();\n    }\n\n  }\n\n  /**\n   * Sends a MIDI message on the MIDI output port, at the scheduled timestamp. It is usually not\n   * necessary to use this method directly since it is often simpler to use one of the helper\n   * methods such as `playNote()`, `stopNote()`, `sendControlChange()`, etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param status {Number} The MIDI status byte of the message (integer between 128-255).\n   *\n   * @param [data=[]] {number[]} An array of unsigned integers for the message. The number of data\n   * bytes varies depending on the status byte. It is perfectly legal to send no data for some\n   * message types (use `undefined` or an empty array in this case). Each byte must be between 0 and\n   * 255.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 0 is greater\n   * than 0xFF.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 2 is greater\n   * than 0xFF.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Running status is not allowed at\n   * index 2.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Message is incomplete.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Reserved status is not allowed at\n   * index 0.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': System exclusive message is not\n   * allowed at index 0.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Unexpected end of system\n   * exclusive message at index 0.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Unexpected status byte at index\n   * 1.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': Unexpected status byte at index\n   * 2.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  send(status, data = [], options= {}) {\n\n    if (!Array.isArray(data)) data = [data];\n\n    if (wm.validation) {\n\n      if (!(parseInt(status) >= 128 && parseInt(status) <= 255)) {\n        throw new RangeError(\"The status must be an integer between 128 and 255.\");\n      }\n\n      data.forEach(value => {\n        value = parseInt(value);\n        if (isNaN(value)) throw new TypeError(\"Data bytes must be integers.\");\n        if (!(parseInt(value) >= 0 && parseInt(value) <= 255)) {\n          throw new RangeError(\"The data bytes must be integers between 0 and 255.\");\n        }\n      });\n\n      // Legacy-compatibility\n      if (typeof options === \"number\") options = {time: options};\n\n    }\n\n    // Actually send the message\n    this._midiOutput.send([status].concat(data), wm.convertToTimestamp(options.time));\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI [system exclusive]{@link\n    * https://www.midi.org/specifications-old/item/table-4-universal-system-exclusive-messages}\n   * (*sysex*) message. The generated message will automatically be prepended with the *sysex byte*\n   * (0xF0) and terminated with the *end of sysex byte* (0xF7).\n   *\n   * To use the `sendSysex()` method, system exclusive message support must have been enabled. To\n   * do so, you must set the `sysex` option to `true` when calling `WebMidi.enable()`:\n   *\n   * ```js\n   * WebMidi.enable({sysex: true})\n   *   .then(() => console.log(\"System exclusive messages are enabled\");\n   * ```\n   *\n   * Note that, depending on browser, version and platform, it is generally necessary to serve the\n   * page over HTTPS to enable sysex support.\n   *\n   * ##### Examples\n   *\n   * If you want to send a sysex message to a Korg device connected to the first output, you would\n   * use the following code:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(0x42, [0x1, 0x2, 0x3, 0x4, 0x5]);\n   * ```\n   *\n   * The parameters can be specified using any number notation (decimal, hex, binary, etc.).\n   * Therefore, the code below is equivalent to the code above:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(66, [1, 2, 3, 4, 5]);\n   * ```\n   *\n   * The above code sends the byte values 1, 2, 3, 4 and 5 to Korg devices (hex 42 is the same as\n   * decimal 66).\n   *\n   * Some manufacturers are identified using 3 bytes. In this case, you would use a 3-position array\n   * as the first parameter. For example, to send the same sysex message to a\n   * *Native Instruments* device:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex([0x00, 0x21, 0x09], [0x1, 0x2, 0x3, 0x4, 0x5]);\n   * ```\n   * There is no limit for the length of the data array. However, it is generally suggested to keep\n   * system exclusive messages to 64Kb or less.\n   *\n   * @param manufacturer {number|number[]} An unsigned integer or an array of three unsigned\n   * integers between 0 and 127 that identify the targeted manufacturer. The *MIDI Manufacturers\n   * Association* maintains a full list of\n   * [Manufacturer ID Numbers](https://www.midi.org/specifications-old/item/manufacturer-id-numbers)\n   * .\n   *\n   * @param [data=number[]] {Array} An array of unsigned integers between 0 and 127. This is the\n   * data you wish to transfer.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {DOMException} Failed to execute 'send' on 'MIDIOutput': System exclusive message is\n   * not allowed.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index x is greater\n   * than 0xFF.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendSysex(manufacturer, data, options = {}) {\n\n    manufacturer = [].concat(manufacturer);\n\n    data = manufacturer.concat(data, wm.MIDI_SYSTEM_MESSAGES.sysexend);\n    this.send(wm.MIDI_SYSTEM_MESSAGES.sysex, data, {time: options.time});\n\n    return this;\n\n  };\n\n  /**\n   * Clears all messages that have been queued but not yet delivered.\n   *\n   * Warning: this method has been defined in the specification but has not been implemented yet. As\n   * soon as browsers implement it, it will work.\n   *\n   * You can check out the current status of this feature for Chromium (Chrome) here:\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=471798\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  clear() {\n\n    if (this._midiOutput.clear) {\n\n      this._midiOutput.clear();\n\n    } else {\n\n      if (wm.validation) {\n        console.warn(\n          \"The 'clear()' method has not yet been implemented in your environment.\"\n        );\n      }\n\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **timecode quarter frame** message. Please note that no processing is being done\n   * on the data. It is up to the developer to format the data according to the\n   * [MIDI Timecode](https://en.wikipedia.org/wiki/MIDI_timecode) format.\n   *\n   * @param value {number} The quarter frame message content (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendTimecodeQuarterFrame(value, options = {}) {\n\n    if (wm.validation) {\n      value = parseInt(value);\n      if (isNaN(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The value must be an integer between 0 and 127.\");\n      }\n    }\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.timecode,\n      value,\n      {time: options.time}\n    );\n\n    return this;\n\n  };\n\n  /**\n   * Sends a **ong position** MIDI message. The value is expressed in MIDI beats (between 0 and\n   * 16383) which are 16th note. Position 0 is always the start of the song.\n   *\n   * @param [value=0] {number} The MIDI beat to cue to (integer between 0 and 16383).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setSongPosition(value, options = {}) {\n\n    value = Math.floor(value) || 0;\n\n    var msb = (value >> 7) & 0x7F;\n    var lsb = value & 0x7F;\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.songposition,\n      [msb, lsb],\n      {time: options.time}\n    );\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendSongPosition(value, options = {}) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The sendSongPosition() method has been deprecated. Use setSongPosition() instead.\"\n      );\n    }\n\n    return this.setSongPosition(value, options);\n\n  }\n\n  /**\n   * Sends a **song select** MIDI message.\n   *\n   * **Note**: since version 3.0, the song number is an integer between 1 and 128. In versions 1.0\n   * and 2.0, the number was between 0 and 127. This change aligns WebMidi.js with most devices that\n   * use a numbering scheme starting at 1.\n   *\n   * @param value {number} The number of the song to select (integer between 1 and 128).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws The song number must be between 1 and 128.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setSong(value, options = {}) {\n\n    if (wm.validation) {\n\n      value = parseInt(value);\n\n      if (isNaN(value) || !(value >= 1 && value <= 128)) {\n        throw new RangeError(\"The program value must be between 1 and 128\");\n      }\n\n    }\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.songselect,\n      [value],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendSongSelect(value, options = {}) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The sendSongSelect() method has been deprecated. Use setSong() instead.\"\n      );\n    }\n\n    return this.setSong(value, options);\n\n  }\n\n  /**\n   * Sends a MIDI **tune request** real-time message.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuneRequest(options = {}) {\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.tunerequest,\n      undefined,\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **clock* real-time message. According to the standard, there are 24 MIDI Clocks\n   * for every quarter note.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendClock(options = {}) {\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.clock,\n      undefined,\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **start** real-time message. A MIDI Start message starts the playback of the current\n   * song at beat 0. To start playback elsewhere in the song, use the\n   * [sendContinue()]{@link Output#sendContinue} method.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendStart(options = {}) {\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.start,\n      undefined,\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **continue** real-time message. This resumes song playback where it was previously\n   * stopped or where it was last cued with a song position message. To start playback from the\n   * start, use the [sendStart()]{@link Output#sendStart}` method.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {WebMidi} Returns the `WebMidi` object so methods can be chained.\n   */\n  sendContinue(options = {}) {\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.continue,\n      undefined,\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **stop** real-time message. This tells the device connected to this output to stop\n   * playback immediately (or at the scheduled time).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendStop(options = {}) {\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.stop,\n      undefined,\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **active sensing** real-time message. This tells the device connected to this port\n   * that the connection is still good. Active sensing messages should be sent every 300 ms if there\n   * was no other activity on the MIDI port.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendActiveSensing(options = {}) {\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.activesensing,\n      [],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **reset** real-time message. This tells the device connected to this output that it\n   * should reset itself to a default state.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendReset(options = {}) {\n\n    this.send(\n      wm.MIDI_SYSTEM_MESSAGES.reset,\n      undefined,\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendTuningRequest(options = {}) {\n\n\n    if (wm.validation) {\n      console.warn(\n        \"The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead.\"\n      );\n    }\n\n    return this.sendTuneRequest(options);\n\n  }\n\n  /**\n   * Sends a MIDI **key aftertouch** message to the specified channel(s) at the scheduled time. This\n   * is a key-specific aftertouch. For a channel-wide aftertouch message, use\n   * [setChannelAftertouch()]{@link Output#setChannelAftertouch}.\n   *\n   * @param note {number|string|Array}  The note for which you are sending an aftertouch value. The\n   * notes can be specified in one of two ways. The first way is by using the MIDI note number (an\n   * integer between 0 and 127). The second way is by using the note name followed by the octave\n   * (C3, G#4, F-1, Db7). The octave range should be between -1 and 9. The lowest note is C-1 (MIDI\n   * note number 0) and the highest note is G9 (MIDI note number 127). It is also possible to use\n   * an array of note names and/or numbers.\n   *\n   * @param [pressure=0.5] {number} The pressure level (between 0 and 1). An invalid pressure value\n   * will silently trigger the default behaviour. If the `rawValue` option is set to `true`, the\n   * pressure can be defined by using an integer between 0 and 127.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between 0 and 1.0 (default) or a raw integer between 0 and 127.\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setKeyAftertouch(note, pressure, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(pressure) || Number.isInteger(pressure) || pressure === \"all\") {\n        let channels = pressure;\n        pressure = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setKeyAftertouch(note, pressure, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendKeyAftertouch(note, channel, pressure, options = {}) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The sendKeyAftertouch() method has been deprecated. Use setKeyAftertouch() instead.\"\n      );\n    }\n\n    options.channels = channel;\n    return this.setKeyAftertouch(note, pressure, options);\n\n  }\n\n  /**\n   * Sends a MIDI **control change** message to the specified channel(s) at the scheduled time. The\n   * control change message to send can be specified numerically or by using one of the following\n   * common names:\n   *\n   *  * `bankselectcoarse` (#0)\n   *  * `modulationwheelcoarse` (#1)\n   *  * `breathcontrollercoarse` (#2)\n   *  * `footcontrollercoarse` (#4)\n   *  * `portamentotimecoarse` (#5)\n   *  * `dataentrycoarse` (#6)\n   *  * `volumecoarse` (#7)\n   *  * `balancecoarse` (#8)\n   *  * `pancoarse` (#10)\n   *  * `expressioncoarse` (#11)\n   *  * `effectcontrol1coarse` (#12)\n   *  * `effectcontrol2coarse` (#13)\n   *  * `generalpurposeslider1` (#16)\n   *  * `generalpurposeslider2` (#17)\n   *  * `generalpurposeslider3` (#18)\n   *  * `generalpurposeslider4` (#19)\n   *  * `bankselectfine` (#32)\n   *  * `modulationwheelfine` (#33)\n   *  * `breathcontrollerfine` (#34)\n   *  * `footcontrollerfine` (#36)\n   *  * `portamentotimefine` (#37)\n   *  * `dataentryfine` (#38)\n   *  * `volumefine` (#39)\n   *  * `balancefine` (#40)\n   *  * `panfine` (#42)\n   *  * `expressionfine` (#43)\n   *  * `effectcontrol1fine` (#44)\n   *  * `effectcontrol2fine` (#45)\n   *  * `holdpedal` (#64)\n   *  * `portamento` (#65)\n   *  * `sustenutopedal` (#66)\n   *  * `softpedal` (#67)\n   *  * `legatopedal` (#68)\n   *  * `hold2pedal` (#69)\n   *  * `soundvariation` (#70)\n   *  * `resonance` (#71)\n   *  * `soundreleasetime` (#72)\n   *  * `soundattacktime` (#73)\n   *  * `brightness` (#74)\n   *  * `soundcontrol6` (#75)\n   *  * `soundcontrol7` (#76)\n   *  * `soundcontrol8` (#77)\n   *  * `soundcontrol9` (#78)\n   *  * `soundcontrol10` (#79)\n   *  * `generalpurposebutton1` (#80)\n   *  * `generalpurposebutton2` (#81)\n   *  * `generalpurposebutton3` (#82)\n   *  * `generalpurposebutton4` (#83)\n   *  * `reverblevel` (#91)\n   *  * `tremololevel` (#92)\n   *  * `choruslevel` (#93)\n   *  * `celestelevel` (#94)\n   *  * `phaserlevel` (#95)\n   *  * `databuttonincrement` (#96)\n   *  * `databuttondecrement` (#97)\n   *  * `nonregisteredparametercoarse` (#98)\n   *  * `nonregisteredparameterfine` (#99)\n   *  * `registeredparametercoarse` (#100)\n   *  * `registeredparameterfine` (#101)\n   *\n   * Note: as you can see above, not all control change message have a matching common name. This\n   * does not mean you cannot use the others. It simply means you will need to use their number\n   * instead of their name.\n   *\n   * To view a list of all available `control change` messages, please consult \"Table 3 - Control\n   * Change Messages\" from the [MIDI Messages](\n   * https://www.midi.org/specifications/item/table-3-control-change-messages-data-bytes-2)\n   * specification.\n   *\n   * @param controller {number|string} The MIDI controller name or number (0-119).\n   *\n   * @param [value=0] {number} The value to send (0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 119.\n   * @throws {RangeError} Invalid controller name.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendControlChange(controller, value, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendControlChange(controller, value, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a pitch bend range message to the specified channel(s) at the scheduled time so that they\n   * adjust the range used by their pitch bend lever. The range is specified by using the\n   * `semitones` and `cents` parameters. For example, setting the `semitones` parameter to `12`\n   * means that the pitch bend range will be 12 semitones above and below the nominal pitch.\n   *\n   * @param semitones {number} The desired adjustment value in semitones (between 0 and 127). While\n   * nothing imposes that in the specification, it is very common for manufacturers to limit the\n   * range to 2 octaves (-12 semitones to 12 semitones).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127.\n   * @throws {RangeError} The lsb value must be between 0 and 127.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setPitchBendRange(semitones, cents, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setPitchBendRange(semitones, cents, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets the specified MIDI registered parameter to the desired value. The value is defined with\n   * up to two bytes of data (msb, lsb) that each can go from 0 to 127.\n   *\n   * MIDI\n   * [registered parameters]\n   * (https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * extend the original list of control change messages. The MIDI 1.0 specification lists only a\n   * limited number of them. Here are the original registered parameters with the identifier that\n   * can be used as the first parameter of this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *\n   * Note that the **Tuning Program** and **Tuning Bank** parameters are part of the *MIDI Tuning\n   * Standard*, which is not widely implemented.\n   *\n   * Another set of extra parameters have been later added for 3D sound controllers. They are:\n   *\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {string|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (e.g. `[0x65, 0x64]`) that identify the\n   * registered parameter.\n   *\n   * @param [data=[]] {number|number[]} A single integer or an array of integers with a maximum\n   * length of 2 specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  setRegisteredParameter(parameter, data, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setRegisteredParameter(parameter, data, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel aftertouch** message to the specified channel(s). For key-specific\n   * aftertouch, you should instead use [setKeyAftertouch()]{@link Output#setKeyAftertouch}.\n   *\n   * @param [pressure=0.5] {number} The pressure level (between 0 and 1). An invalid pressure value\n   * will silently trigger the default behaviour. If the `rawValue` option is set to `true`, the\n   * pressure can be defined by using an integer between 0 and 127.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between 0 and 1.0 (default) or a raw integer between 0 and 127.\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   * @since 3.0.0\n   */\n  setChannelAftertouch(pressure, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setChannelAftertouch(pressure, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendChannelAftertouch(pressure, channel, options = {}) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The sendChannelAftertouch() method has been deprecated. Use setChannelAftertouch().\"\n      );\n    }\n\n    options.channels = channel;\n    return this.setChannelAftertouch(pressure, options);\n\n  }\n\n  /**\n   * Sends a MIDI **pitch bend** message to the specified channel(s) at the scheduled time.\n   *\n   * @param {number|number[]} value The intensity of the bend (between -1.0 and 1.0). A value of\n   * zero means no bend. The resulting bend is relative to the pitch bend range that has been\n   * defined. The range can be set with [setPitchBendRange()]{@link OutputChannel#setPitchBendRange}\n   * . So, for example, if the pitch bend range has been set to 12 semitones, using a bend value of\n   * -1 will bend the note 1 octave below its nominal value.\n   *\n   * If an invalid value is specified, the nearest valid value will be used instead.\n   *\n   * If the `rawValue` option is set to `true`, the intensity of the bend can be defined by either\n   * using a single integer between 0 and 127 (MSB) or an array of two integers between 0 and 127\n   * representing, respectively, the MSB (most significant byte) and the LSB (least significant\n   * byte). The MSB is expressed in semitones with `64` meaning no bend. A value lower than `64`\n   * bends downwards while a value higher than `64` bends upwards. The LSB is expressed in cents\n   * (1/100 of a semitone). An LSB of `64` also means no bend.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered as a float between -1.0 and 1.0 (default) or as raw integer between 0 and 127 (or\n   * an array of 2 integers if using both MSB and LSB).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setPitchBend(value, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setPitchBend(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendPitchBend(bend, channel, options = {}) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The sendPitchBend() method has been deprecated. Use setPitchBend() instead.\"\n      );\n    }\n\n    options.channels = channel;\n    return this.setPitchBend(bend, options);\n\n  }\n\n  /**\n   * Sends a MIDI **program change** message to the specified channel(s) at the scheduled time.\n   *\n   * **Note**: since version 3.0, the program number is an integer between 1 and 128. In versions\n   * 1.0 and 2.0, the number was between 0 and 127. This change aligns WebMidi.js with most devices\n   * that use a numbering scheme starting at 1.\n   *\n   * @param [program=1] {number} The MIDI patch (program) number (1-128)\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 1 is greater\n   * than 0xFF.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setProgram(program, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setProgram(program, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendProgramChange(program, channel, options = {}) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The sendProgramChange() method has been deprecated. Use setProgram() instead.\"\n      );\n    }\n\n    options.channels = channel;\n    return this.setProgram(program, options);\n\n  }\n\n  /**\n   * Sends a **modulation depth range** message to the specified channel(s) so that they adjust the\n   * depth of their modulation wheel's range. The range can be specified with the `semitones`\n   * parameter, the `cents` parameter or by specifying both parameters at the same time.\n   *\n   * @param [semitones=0] {number} The desired adjustment value in semitones (integer between\n   * 0 and 127).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127\n   * @throws {RangeError} The lsb value must be between 0 and 127\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setModulationRange(semitones, cents, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setModulationRange(semitones, cents, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a master tuning message to the specified channel(s). The value is decimal and must be\n   * larger than -65 semitones and smaller than 64 semitones.\n   *\n   * Because of the way the MIDI specification works, the decimal portion of the value will be\n   * encoded with a resolution of 14bit. The integer portion must be between -64 and 63\n   * inclusively. This function actually generates two MIDI messages: a **Master Coarse Tuning** and\n   * a **Master Fine Tuning** RPN messages.\n   *\n   * @param [value=0.0] {number} The desired decimal adjustment value in semitones (-65 < x < 64)\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The value must be a decimal number between larger than -65 and smaller\n   * than 64.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setMasterTuning(value, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setMasterTuning(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning program to use. Note that the **Tuning Program** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * **Note**: since version 3.0, the program number is an integer between 1 and 128. In versions\n   * 1.0 and 2.0, the number was between 0 and 127. This change aligns WebMidi.js with most devices\n   * that use a numbering scheme starting at 1.\n   *\n   * @param value {number} The desired tuning program (1-128).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The program value must be between 1 and 128.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setTuningProgram(value, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setTuningProgram(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning bank to use. Note that the **Tuning Bank** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * **Note**: since version 3.0, the bank number is an integer between 1 and 128. In versions\n   * 1.0 and 2.0, the number was between 0 and 127. This change aligns WebMidi.js with most devices\n   * that use a numbering scheme starting at 1.\n   *\n   * @param value {number} The desired tuning bank (1-128).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The bank value must be between 1 and 128.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setTuningBank(value, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setTuningBank(value, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a MIDI **channel mode** message to the specified channel(s). The channel mode message to\n   * send can be specified numerically or by using one of the following common names:\n   *\n   *   * `\"allsoundoff\"` (#120)\n   *   * `\"resetallcontrollers\"` (#121)\n   *   * `\"localcontrol\"` (#122)\n   *   * `\"allnotesoff\"` (#123)\n   *   * `\"omnimodeoff\"` (#124)\n   *   * `\"omnimodeon\"` (#125)\n   *   * `\"monomodeon\"` (#126)\n   *   * `\"polymodeon\"` (#127)\n   *\n   * It should be noted that, per the MIDI specification, only `localcontrol` and `monomodeon` may\n   * require a value that's not zero. For that reason, the `value` parameter is optional and\n   * defaults to 0.\n   *\n   * To make it easier, all channel mode messages have a matching helper method:\n   *\n   *   - [turnSoundOff()]{@link OutputChannel#turnSoundOff}\n   *   - [resetAllControllers()]{@link OutputChannel#resetAllControllers}\n   *   - [setLocalControl()]{@link OutputChannel#turnSoundOff}\n   *   - [turnNotesOff()]{@link OutputChannel#turnNotesOff}\n   *   - [setOmniMode()]{@link OutputChannel#setOmniMode}\n   *   - [setPolyphonicMode()]{@link OutputChannel#setPolyphonicMode}\n   *\n   * @param command {number|string} The numerical identifier of the channel mode message (integer\n   * between 120-127) or its name as a string.\n   *\n   * @param [value] {number} The value to send (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   */\n  sendChannelMode(command, value, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendChannelMode(command, value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **all sound off** channel mode message. This will silence all sounds playing on that\n   * channel but will not prevent new sounds from being triggered.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   *\n   * @since 3.0.0\n   */\n  turnSoundOff(options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].turnSoundOff(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **all note soff** channel mode message. This will turn all currently playing notes\n   * off. However, this does not prevent new notes from being played.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   *\n   * @since 3.0.0\n   */\n  turnNotesOff(options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].turnNotesOff(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **reset all controllers** channel mode message. This resets all controllers, such as\n   * the pitch bend, to their default value.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   */\n  resetAllControllers(options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].resetAllControllers(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets the polyphonic mode. In `\"poly\"` mode (usually the default), multiple notes can be played\n   * and heard at the same time. In `\"mono\"` mode, only one note will be heard at once even if\n   * multiple notes are being played.\n   *\n   * @param mode {string} The mode to use: `\"mono\"` or `\"poly\"`.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setPolyphonicMode(mode, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setPolyphonicMode(mode, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Turns local control on or off. Local control is usually enabled by default. If you disable it,\n   * the instrument will no longer trigger its own sounds. It will only send the MIDI messages to\n   * its out port.\n   *\n   * @param [state=false] {boolean} Whether to activate local control (`true`) or disable it\n   * (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setLocalControl(state, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setLocalControl(state, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets OMNI mode to `\"on\"` or `\"off\"` for the specified channel(s). MIDI's OMNI mode causes the\n   * instrument to respond to messages from all channels.\n   *\n   * It should be noted that support for OMNI mode is not as common as it used to be.\n   *\n   * @param [state] {boolean} Whether to activate OMNI mode (`true`) or not (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  setOmniMode(state, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setOmniMode(state, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets a non-registered parameter to the specified value. The NRPN is selected by passing in a\n   * two-position array specifying the values of the two control bytes. The value is specified by\n   * passing in a single integer (most cases) or an array of two integers.\n   *\n   * NRPNs are not standardized in any way. Each manufacturer is free to implement them any way\n   * they see fit. For example, according to the Roland GS specification, you can control the\n   * **vibrato rate** using NRPN (1, 8). Therefore, to set the **vibrato rate** value to **123** you\n   * would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].setNonRegisteredParameter([1, 8], 123);\n   * ```\n   *\n   * Obviously, you should select a channel so the message is not sent to all channels. For\n   * instance, to send to channel 1 of the first output port, you would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].setNonRegisteredParameter([1, 8], 123, 1);\n   * ```\n   *\n   * In some rarer cases, you need to send two values with your NRPN messages. In such cases, you\n   * would use a 2-position array. For example, for its **ClockBPM** parameter (2, 63), Novation\n   * uses a 14-bit value that combines an MSB and an LSB (7-bit values). So, for example, if the\n   * value to send was 10, you could use:\n   *\n   * ```js\n   * WebMidi.outputs[0].setNonRegisteredParameter([2, 63], [0, 10], [1]);\n   * ```\n   *\n   * For further implementation details, refer to the manufacturer\"s documentation.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes (0x63,\n   * 0x62) that identify the non-registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An integer or an array of integers with a length of 1 or 2\n   * specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The control value must be between 0 and 127.\n   * @throws {RangeError} The msb value must be between 0 and 127\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  setNonRegisteredParameter(parameter, data, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].setNonRegisteredParameter(parameter, data, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Increments the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this method:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  incrementRegisteredParameter(parameter, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].incrementRegisteredParameter(parameter, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Decrements the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this method:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter\"s name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified parameter is not available.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  decrementRegisteredParameter(parameter, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].decrementRegisteredParameter(parameter, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified notes on the specified channel(s). The first\n   * parameter is the note. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A {@link Note} object\n   *\n   *  The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using {@link Note} objects, the release velocity defined in the {@link Note} objects has\n   * precedence over the one specified via the method's `options` parameter.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (0-127), a note name (e.g. C3, G#4, F-1, Db7), a\n   * {@link Note} object or an array of the previous types. When using a note name, octave range\n   * must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {boolean} [options.rawValue=false] Controls whether the release velocity is set using\n   * integers between `0` and `127` (`true`) or a decimal number between `0` and `1` (`false`,\n   * default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawValue` option is `true`, the value should be specified as an integer\n   * between `0` and `127`. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNoteOff(note, options= {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNoteOff(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * This is an alias to the [sendNoteOff()]{@link Output#sendNoteOff} method.\n   *\n   * @see {@link Output#sendNoteOff}\n   *\n   * @param note\n   * @param options\n   * @returns {Output}\n   */\n  stopNote(note, options) {\n    return this.sendNoteOff(note, options);\n  }\n\n  /**\n   * Plays a note or an array of notes on one or more channels of this output. The first parameter\n   * is the note to play. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A {@link Note} object\n   *\n   * The `playNote()` method sends a **note on** MIDI message for all specified notes on all\n   * specified channels. If no channels are specified, it will send to all channels. If a `duration`\n   * is set in the `options` parameter or in the {@link Note} object's\n   * [duration]{@link Note#duration} property, it will also schedule a **note off** message to end\n   * the note after said duration. If no `duration` is set, the note will simply play until a\n   * matching **note off** message is sent with [stopNote()]{@link Output#stopNote} or\n   * [sendNoteOff()]{@link Output#sendNoteOff}.\n   *\n   * The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using {@link Note} objects, the durations and velocities defined in the {@link Note}\n   * objects have precedence over the ones specified via the method's `options` parameter.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note name (e.g. C3, G#4, F-1, Db7), a\n   * {@link Note} object or an array of the previous types. When using a note name, octave range\n   * must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to play the note on. The special value `\"all\"` can\n   * also be used to use all channels (default).\n   *\n   * @param {number} [options.duration=undefined] The number of milliseconds (integer) after which a\n   * **note off** message will be scheduled. If left undefined, only a **note on** message is sent.\n   *\n   * @param {boolean} [options.rawValue=false] Controls whether the attack and release velocities\n   * are set using integers between `0` and `127` (`true`) or a decimal number between `0` and `1`\n   * (`false`, default).\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawValue` option is `true`, the value should be specified as an integer\n   * between `0` and `127`. An invalid velocity value will silently trigger the default of `0.5`.\n   * This is only used with the **note off** event triggered when `options.duration` is set.\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.attack=0.5] The attack velocity to use when playing the note (between\n   * `0` and `1`). If the `rawValue` option is `true`, the value should be specified as an integer\n   * between `0` and `127`. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  playNote(note, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy-compatibility warnings\n      if (options.rawVelocity) {\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' instead.\");\n      }\n\n      if (options.velocity) {\n        console.warn(\"The 'velocity' option is deprecated. Use 'velocity' instead.\");\n      }\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].playNote(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note on** message for the specified notes on the specified channel(s). The first\n   * parameter is the note. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A {@link Note} object\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using {@link Note} objects, the attack velocity defined in the {@link Note} objects has\n   * precedence over the one specified via the method's `options` parameter. Also, the `duration` is\n   * ignored. If you want to also send a **note off** message, use the\n   * [playNote()]{@link Output#playNote} method instead.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note name (e.g. C3, G#4, F-1, Db7), a\n   * {@link Note} object or an array of the previous types. When using a note name, octave range\n   * must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]|\"all\"} [options.channels=\"all\"] The MIDI channel number (between `1`\n   * and `16`) or an array of channel numbers to use. The special value `\"all\"` can also be used to\n   * use all channels (default).\n   *\n   * @param {boolean} [options.rawValue=false] Controls whether the attack velocity is set using\n   * integers between `0` and `127` (`true`) or a decimal number between `0` and `1` (`false`,\n   * default).\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number\n   * (DOMHighResTimeStamp), the operation will be scheduled for that time. If `time` is omitted, or\n   * in the past, the operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`). If the `rawValue` option is `true`, the value should be specified as an integer\n   * between `0` and `127`. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNoteOn(note, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        let channels = options;\n        options = legacy;\n        options.channels = channels;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = \"all\";\n\n    wm.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNoteOn(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Name of the MIDI output\n   *\n   * @type {string}\n   * @readonly\n   */\n  get name() {\n    return this._midiOutput.name;\n  }\n\n  /**\n   * ID string of the MIDI output. The ID is host-specific. Do not expect the same ID on different\n   * platforms. For example, Google Chrome and the Jazz-Plugin report completely different IDs for\n   * the same port.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._midiOutput.id;\n  }\n\n  /**\n   * Output port's connection state: `\"pending\"`, `\"open\"` or `\"closed\"`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get connection() {\n    return this._midiOutput.connection;\n  }\n\n  /**\n   * Name of the manufacturer of the device that makes this output port available.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get manufacturer() {\n    return this._midiOutput.manufacturer;\n  }\n\n  /**\n   * State of the output port: `\"connected\"` or `\"disconnected\"`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get state() {\n    return this._midiOutput.state;\n  }\n\n  /**\n   * Type of the output port (`\"output\"`)\n   *\n   * @type {string}\n   * @readonly\n   */\n  get type() {\n    return this._midiOutput.type;\n  }\n\n}\n\n/**\n * The `Note` class represents a single note to be played. The `Note` can be played on a single\n * channel by using [OutputChannel.playNote()]{@link OutputChannel#playNote} or on multiple\n * channels at once by using [Output.playNote()]{@link Output#playNote}.\n *\n * If the note's `duration` property is set, the note will be stopped at the end of the duration. If\n * no duration is set, it will play until it is explicitly stopped using\n * [OutputChannel.stopNote()]{@link OutputChannel#stopNote} or\n * [Output.stopNote()]{@link Output#stopNote}.\n *\n * @param value {string|number} The name or note number of the note to create. If a number is used,\n * it must be an integer between 0 and 127. If a string is used, it must be the note name followed\n * by the octave (`\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`, etc.). The octave range must be between -1 and\n * 9. The lowest note is C-1 (MIDI note number 0) and the highest note is G9 (MIDI note number 127).\n *\n * @param {Object} [options={}]\n *\n * @param {number} [options.duration=Infinity] The number of milliseconds before the note should be\n * explicitly stopped.\n *\n * @param {number} [options.attack=0.5] The note's attack velocity as a decimal number between 0 and\n * 1.\n *\n * @param {number} [options.release=0.5] The note's release velocity as a decimal number between 0\n * and 1.\n *\n * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n * 127.\n *\n * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n * 127.\n *\n * @throws {Error} Invalid note name.\n * @throws {Error} Invalid note number.\n * @throws {RangeError} Invalid duration.\n * @throws {RangeError} Invalid attack value.\n * @throws {RangeError} Invalid rawAttack value.\n * @throws {RangeError} Invalid release value.\n * @throws {RangeError} Invalid rawRelease value.\n *\n * @since 3.0.0\n */\nclass Note {\n\n  constructor(value, options = {}) {\n\n    if (Number.isInteger(value)) {\n      this.number = value;\n    } else {\n      this.name = value;\n    }\n\n    this.duration = (options.duration == undefined) ? Infinity : options.duration;\n    this.attack = (options.attack == undefined) ? 0.5 : options.attack;\n    this.release = (options.release == undefined) ? 0.5 : options.release;\n    if (options.rawAttack != undefined) this.rawAttack = options.rawAttack;\n    if (options.rawRelease != undefined) this.rawRelease = options.rawRelease;\n\n  }\n\n  /**\n   * The name of the note with the octave number (`\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`, etc.)\n   *\n   * @type {string}\n   */\n  get name() {\n    return wm.NOTES[this._number % 12] + wm.getOctave(this.number);\n  }\n  set name(value) {\n\n    if (wm.validation) {\n      if (wm.guessNoteNumber(value) === false) throw new Error(\"Invalid note name.\");\n    }\n\n    this._number = wm.guessNoteNumber(value);\n\n  }\n\n  /**\n   * The MIDI note number as an integer between 0 and 127\n   * @type {number}\n   */\n  get number() {\n    return this._number;\n  }\n  set number(value) {\n\n    if (wm.validation) {\n      if (wm.guessNoteNumber(value) === false) throw new Error(\"Invalid note number.\");\n    }\n\n    this._number = wm.guessNoteNumber(value);\n\n  }\n\n  /**\n   * The duration of the note as a positive decimal number representing the number of milliseconds\n   * that the note should play for.\n   *\n   * @type {number}\n   */\n  get duration() {\n    return this._duration;\n  }\n  set duration(value) {\n\n    if (wm.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || value === null || value < 0) throw new RangeError(\"Invalid duration.\");\n    }\n\n    this._duration = value;\n\n  }\n\n  /**\n   * The attack velocity of the note as a decimal number between 0 and 1.\n   * @type {number}\n   */\n  get attack() {\n    return this._rawAttack / 127;\n  }\n  set attack(value) {\n\n    if (wm.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || value === null || !(value >= 0 && value <= 1)) {\n        throw new RangeError(\"Invalid attack value.\");\n      }\n    }\n\n    this._rawAttack = Math.round(value * 127);\n\n  }\n\n  /**\n   * The raw attack velocity of the note as an integer between 0 and 127.\n   * @type {number}\n   */\n  get rawAttack() {\n    return this._rawAttack;\n  }\n  set rawAttack(value) {\n\n    if (wm.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || value === null || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"Invalid rawAttack value.\");\n      }\n    }\n\n    this._rawAttack = value;\n\n  }\n\n  /**\n   * The release velocity of the note as a decimal number between 0 and 1.\n   * @type {number}\n   */\n  get release() {\n    return this._rawRelease / 127;\n  }\n  set release(value) {\n\n    if (wm.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || value === null || !(value >= 0 && value <= 1)) {\n        throw new RangeError(\"Invalid release value.\");\n      }\n    }\n\n    this._rawRelease = Math.round(value * 127);\n\n  }\n\n  /**\n   * The raw release velocity of the note as an integer between 0 and 127.\n   * @type {number}\n   */\n  get rawRelease() {\n    return this._rawRelease;\n  }\n  set rawRelease(value) {\n\n    if (wm.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || value === null || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"Invalid rawRelease value.\");\n      }\n    }\n\n    this._rawRelease = value;\n\n  }\n\n  /**\n   * The octave of the note as an integer between -1 and 9.\n   * @type {number}\n   */\n  get octave() {\n    return Math.floor(Math.floor(this._number) / 12 - 1);\n  }\n\n}\n\n/**\n * The `WebMidi` object makes it easier to work with the Web MIDI API. Basically, it simplifies\n * sending outgoing MIDI messages and reacting to incoming MIDI messages.\n *\n * When using the WebMidi.js library, the `WebMidi` class has already been instantiated for you.\n * If you use the **IIFE** version, you should simply use the global object called `WebMidi`. If you\n * use the **CJS** (CommonJS) or **ESM** (ES6 module) version, you get an already-instantiated\n * object. This means there is no need to instantiate a new `WebMidi` object directly.\n *\n * The `WebMidi` object extends the\n * [EventEmitter](https://djipco.github.io/djipevents/EventEmitter.html) class from the\n * [djipevents]{@link https://djipco.github.io/djipevents/index.html} module. This means\n * it also includes methods such as\n * [addListener()](https://djipco.github.io/djipevents/EventEmitter.html#addListener),\n * [removeListener()](https://djipco.github.io/djipevents/EventEmitter.html#removeListener),\n * [hasListener()](https://djipco.github.io/djipevents/EventEmitter.html#hasListener) and several\n * others.\n *\n * @fires WebMidi#connected\n * @fires WebMidi#disconnected\n * @fires WebMidi#enabled\n * @fires WebMidi#disabled\n *\n * @extends EventEmitter\n */\nclass WebMidi extends e {\n\n  constructor() {\n\n    super();\n\n    /**\n     * The `MIDIAccess` instance used to talk to the Web MIDI API. This should not be used directly\n     * unless you know what you are doing.\n     *\n     * @type {?MIDIAccess}\n     * @readonly\n     */\n    this.interface = null;\n\n    /**\n     * Indicates whether argument validation and backwards-compatibility checks are performed\n     * throughout the WebMidi.js library for object methods and property setters.\n     *\n     * This is an advanced setting that should be used carefully. Setting `validation` to `false`\n     * improves performance but should only be done once the project has been thoroughly tested with\n     * validation turned on.\n     *\n     * @type {boolean}\n     */\n    this.validation = true;\n\n    /**\n     * Array of all {@link Input} objects\n     * @type {Input[]}\n     * @private\n     */\n    this._inputs = [];\n\n    /**\n     * Array of all {@link Output} objects\n     * @type {Output[]}\n     * @private\n     */\n    this._outputs = [];\n\n    /**\n     * Array of statechange events to process. These events must be parsed synchronously so they do\n     * not override each other.\n     *\n     * @type {string[]}\n     * @private\n     */\n    this._stateChangeQueue = [];\n\n    this._octaveOffset = 0;\n\n    // If we are inside Node.js, polyfill navigator.requestMIDIAccess() and import performance.now()\n    if (this.isNode) {\n\n      // Important: performance must be imported before jzz because jzz checks for its existence at\n      // startup and falls back to something less precise if absent.\n      global.performance = require(\"perf_hooks\").performance;\n      global.navigator = require(\"jzz\");\n\n    }\n\n  }\n\n  /**\n   * Checks if the Web MIDI API is available in the current environment and then tries to connect to\n   * the host's MIDI subsystem. This is an asynchronous operation and it causes a security prompt to\n   * be displayed to the user.\n   *\n   * To enable the use of MIDI system exclusive messages, the `sysex` option should be set to\n   * `true`. However, under some environments (e.g. Jazz-Plugin), the `sysex` option is ignored\n   * and system exclusive messages are always enabled. You can check the\n   * [sysexEnabled]{@link WebMidi#sysexEnabled} property to confirm.\n   *\n   * To enable access to software synthesizers available on the host, you would set the `software`\n   * option to `true`. However, this option is only there to future-proof the library as support for\n   * software synths has not yet been implemented in any browser (as of April 2020).\n   *\n   * There are 3 ways to execute code after `WebMidi` has been enabled:\n   *\n   * - Pass a callback function in the options\n   * - Listen to the `enabled` event\n   * - Wait for the promise to resolve\n   *\n   * In order, this is what happens towards the end of the enabling process:\n   *\n   * 1. callback is executed\n   * 2. `enabled` event is triggered\n   * 3. `connected` events from available inputs and outputs are triggered\n   * 4. promise is resolved\n   *\n   * The promise is fulfilled with an object containing two properties (`inputs` and `outputs`) that\n   * contain arrays of available inputs and outputs, respectively.\n   *\n   * **Important note**: starting with Chrome v77, a page using Web MIDI API must be hosted on a\n   * secure origin (`https://`, `localhost` or `file:///`) and the user will always be prompted to\n   * authorize the operation (no matter if the `sysex` option is `true` or not).\n   *\n   * ##### Examples\n   * ```js\n   * // Enabling WebMidi and using the promise\n   * WebMidi.enable().then(ports => {\n   *   console.log(\"WebMidi.js has been enabled!\");\n   *   console.log(\"Inputs: \", ports.inputs);\n   *   console.log(\"Outputs: \", ports.outputs);\n   * })\n   * ```\n   *\n   * ```js\n   * // Enabling WebMidi and listening to 'enabled' event\n   * WebMidi.addListener(\"enabled\", e => {\n   *   console.log(\"WebMidi.js has been enabled!\");\n   * });\n   * WebMidi.enable();\n   * ```\n   *\n   * ```js\n   * // Enabling WebMidi and using callback function\n   * WebMidi.enable({callback: e => {\n   *   console.log(\"WebMidi.js has been enabled!\");\n   * });\n   * ```\n   *\n   * @param [options] {Object}\n   *\n   * @param [options.callback] {function} A function to execute once the operation completes. This\n   * function will receive an `Error` object if enabling the Web MIDI API failed.\n   *\n   * @param [options.sysex=false] {boolean} Whether to enable MIDI system exclusive messages or not.\n   *\n   * @param [options.validation=true] {boolean} Whether to enable library-wide validation of method\n   * arguments and setter values. This is an advanced setting that should be used carefully. Setting\n   * `validation` to `false` improves performance but should only be done once the project has been\n   * thoroughly tested with validation turned on.\n   *\n   * @param [options.software=false] {boolean} Whether to request access to software synthesizers on\n   * the host system. This is part of the spec but has not yet been implemented by most browsers as\n   * of April 2020.\n   *\n   * @async\n   *\n   * @returns {Promise<Object>} The promise is fulfilled with an object containing two properties\n   * (`inputs` and `outputs`) that contain arrays of available inputs and outputs, respectively.\n   *\n   * @throws Error The Web MIDI API is not supported in your environment.\n   * @throws Error Jazz-Plugin must be installed to use WebMIDIAPIShim.\n   */\n  async enable(options = {}, sysex = false) {\n\n    if (this.enabled) return Promise.resolve();\n\n    this.validation = (options.validation !== false);\n\n    if (this.validation) {\n      // Backwards-compatibility. Previous syntax was: enable(callback, sysex)\n      if (typeof options === \"function\") options = {callback: options, sysex: sysex};\n      if (sysex) options.sysex = true;\n    }\n\n    // The Jazz-Plugin takes a while to be available (even after the Window's 'load' event has been\n    // fired). Therefore, we wait a little while to give it time to load.\n    if (!this.supported) {\n\n      await new Promise((resolve, reject) => {\n\n        const start = this.time;\n\n        const intervalID = setInterval(() => {\n\n          if (this.supported) {\n            clearInterval(intervalID);\n            resolve();\n          } else {\n            if (this.time > start + 1500) {\n              clearInterval(intervalID);\n              let error = new Error(\"Web MIDI API support is not available in your environment.\");\n              if (typeof options.callback === \"function\") options.callback(error);\n              reject(error);\n            }\n          }\n\n        }, 25);\n\n      });\n\n    }\n\n    // Request MIDI access\n    try {\n      this.interface = await navigator.requestMIDIAccess(\n        {sysex: options.sysex, software: options.software}\n      );\n    } catch(err) {\n      if (typeof options.callback === \"function\") options.callback(err);\n      return Promise.reject(err);\n    }\n\n    /**\n     * Event emitted once `WebMidi` has been successfully enabled.\n     *\n     * @event WebMidi#enabled\n     * @type {Object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `enabled`\n     */\n    let event = {\n      timestamp: this.time,\n      target: this,\n      type: \"enabled\"\n    };\n\n    // Trigger the 'enabled' event. We do it before emitting the 'connected' events so that they can\n    // be listened to in callbacks tied to the 'enabled' event.\n    this.emit(\"enabled\", event);\n    if (typeof options.callback === \"function\") options.callback();\n\n    // We setup the statechange listener before creating the ports so that if properly catches the\n    // the ports' `connected` events\n    this.interface.onstatechange = this._onInterfaceStateChange.bind(this);\n\n    // Update inputs and outputs (this is where `Input` and `Output` objects are created). If\n    // successful, we return a promise fulfilled with all the input/output ports that were found.\n    try {\n      let ports = await this._updateInputsAndOutputs();\n      return Promise.resolve({\n        inputs: ports[0],\n        outputs: ports[1]\n      });\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n  }\n\n  /**\n   * Completely disables `WebMidi.js` by unlinking the MIDI subsystem's interface and closing all\n   * {@link Input} and {@link Output} objects that may be available. This also means that listeners\n   * added to {@link Input} objects, {@link Output} objects or to `WebMidi` itself are also\n   * destroyed.\n   *\n   * @async\n   * @returns {Promise<void>}\n   *\n   * @throws Error The Web MIDI API is not supported by your environment.\n   *\n   * @since 2.0.0\n   */\n  async disable() {\n\n    if (!this.supported) throw new Error(\"The Web MIDI API is not supported by your environment.\");\n\n    return this._destroyInputsAndOutputs().then(() => {\n\n      if (this.isNode) navigator.close();\n\n      if (this.interface) this.interface.onstatechange = undefined;\n      this.interface = null; // also resets enabled, sysexEnabled\n\n      /**\n       * Event emitted once `WebMidi` has been successfully disabled.\n       *\n       * @event WebMidi#disabled\n       * @type {Object}\n       * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {WebMidi} target The object that triggered the event\n       * @property {string} type `disabled`\n       */\n      let event = {\n        timestamp: this.time,\n        target: this,\n        type: \"disabled\"\n      };\n\n      // Finally, trigger the 'disabled' event and remove all listeners\n      this.emit(\"disabled\", event);\n      this.removeListener();\n\n    });\n\n  };\n\n  /**\n   * Returns the {@link Input} object that matches the specified ID string or `false` if no matching\n   * input is found. As per the Web MIDI API specification, IDs are strings (not integers).\n   *\n   * Please note that IDs change from one host to another. For example, Chrome does not use the same\n   * kind of IDs as Jazz-Plugin.\n   *\n   * @param id {string} The ID string of the input. IDs can be viewed by looking at the\n   * [inputs]{@link WebMidi#inputs} array. Even though they sometimes look like integers, IDs are\n   * strings.\n   *\n   * @returns {Input|false} An {@link Input} object matching the specified ID string. If no matching\n   * input can be found, the method returns `false`.\n   *\n   * @throws Error WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getInputById(id) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!id) return false;\n    }\n\n    for (let i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].id === id.toString()) return this.inputs[i];\n    }\n\n    return false;\n\n  };\n\n  /**\n   * Returns the first {@link Input} object whose name **contains** the specified string. Note that\n   * the port names change from one environment to another. For example, Chrome does not report\n   * input names in the same way as the Jazz-Plugin does.\n   *\n   * @param name {string} The non-empty string to look for within the name of MIDI inputs (such as\n   * those visible in the [inputs]{@link WebMidi#inputs} array).\n   *\n   * @returns {Input|false} The {@link Input} that was found or `false` if no input contained the\n   * specified name.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getInputByName(name) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!name) return false;\n      name = name.toString();\n    }\n\n    for (let i = 0; i < this.inputs.length; i++) {\n      if (~this.inputs[i].name.indexOf(name)) return this.inputs[i];\n    }\n\n    return false;\n\n  };\n\n  /**\n   * Returns the first {@link Output} object whose name **contains** the specified string. Note that\n   * the port names change from one environment to another. For example, Chrome does not report\n   * input names in the same way as the Jazz-Plugin does.\n   *\n   * @param name {string} The non-empty string to look for within the name of MIDI inputs (such as\n   * those visible in the [outputs]{@link WebMidi#outputs} array).\n   *\n   * @returns {Output|false} The {@link Output} that was found or `false` if no output matched the\n   * specified name.\n   *\n   * @throws Error WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getOutputByName(name) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!name) return false;\n      name = name.toString();\n    }\n\n    for (let i = 0; i < this.outputs.length; i++) {\n      if (~this.outputs[i].name.indexOf(name)) return this.outputs[i];\n    }\n\n    return false;\n\n  };\n\n  /**\n   * Returns the {@link Output} object that matches the specified ID string or `false` if no\n   * matching output is found. As per the Web MIDI API specification, IDs are strings (not\n   * integers).\n   *\n   * Please note that IDs change from one host to another. For example, Chrome does not use the same\n   * kind of IDs as Jazz-Plugin.\n   *\n   * @param id {string} The ID string of the port. IDs can be viewed by looking at the\n   * [outputs]{@link WebMidi#outputs} array.\n   *\n   * @returns {Output|false} An {@link Output} object matching the specified ID string. If no\n   * matching output can be found, the method returns `false`.\n   *\n   * @throws Error WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getOutputById(id) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!id) return false;\n    }\n\n    for (let i = 0; i < this.outputs.length; i++) {\n      if (this.outputs[i].id === id.toString()) return this.outputs[i];\n    }\n\n    return false;\n\n  };\n\n  /**\n   * Returns a MIDI note number matching the note name passed in the form of a string parameter. The\n   * note name must include the octave number. The name can also optionally include a sharp (#),\n   * a double sharp (##), a flat (b) or a double flat (bb) symbol. For example, these are all valid\n   * names: C5, G4, D#-1, F0, Gb7, Eb-1, Abb4, B##6, etc.\n   *\n   * When converting note names to numbers, C4 is considered to be middle C (MIDI note number 60) as\n   * per the scientific pitch notation standard.\n   *\n   * The resulting note number is offset by the [octaveOffset]{@link WebMidi#octaveOffset} value (if\n   * not zero). For example, if you pass in \"C4\" and the [octaveOffset]{@link WebMidi#octaveOffset}\n   * value is 2, the resulting MIDI note number will be 36.\n   *\n   * **Note**: since v3.x, this function returns `false` instead of throwing an error when it cannot\n   * parse the name to a number.\n   *\n   * @param name {string} The name of the note in the form of a letter, followed by an optional \"#\",\n   * \"##\", \"b\" or \"bb\" followed by the octave number.\n   *\n   * @returns {number|false} The MIDI note number (an integer between 0 and 127) or `false` if the\n   * name could not successfully be parsed to a number.\n   */\n  getNoteNumberByName(name) {\n\n    if (this.validation) {\n      if (typeof name !== \"string\") name = \"\";\n    }\n\n    let matches = name.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)/i);\n    if(!matches) return false;\n\n    let semitones = {C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 };\n    let semitone = semitones[matches[1].toUpperCase()];\n    let octave = parseInt(matches[3]);\n    let result = ((octave + 1 - Math.floor(this.octaveOffset)) * 12) + semitone;\n\n    if (matches[2].toLowerCase().indexOf(\"b\") > -1) {\n      result -= matches[2].length;\n    } else if (matches[2].toLowerCase().indexOf(\"#\") > -1) {\n      result += matches[2].length;\n    }\n\n    if (result < 0 || result > 127) return false;\n\n    return result;\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0. Use getNoteNumberByName() instead.\n   */\n  noteNameToNumber(name) {\n    console.warn(\n      \"The noteNameToNumber() method has been deprecated. Use getNoteNumberByName() instead.\"\n    );\n    return this.getNoteNumberByName(name);\n  }\n\n  /**\n   * Returns the octave number for the specified MIDI note number (0-127). By default, the value is\n   * based on middle C (note number 60) being placed on the 4th octave (C4). However, by using the\n   * [octaveOffset]{@link WebMidi#octaveOffset} property, you can offset the result as desired.\n   *\n   * **Note**: since v3.x, this method returns `false` instead of `undefined` when the value cannot\n   * be parsed to a valid octave.\n   *\n   * @param number {number} An integer representing a valid MIDI note number (between 0 and 127).\n   *\n   * @returns {number|false} The octave (as a signed integer) or `false` if the value could not be\n   * parsed to a valid octave.\n   *\n   * @since 2.0.0-rc.6\n   */\n  getOctave(number) {\n\n    if (this.validation) {\n      number = parseInt(number);\n    }\n\n    if (!isNaN(number) && number >= 0 && number <= 127) {\n      return Math.floor(number / 12 - 1) + this.octaveOffset;\n    } else {\n      return false;\n    }\n\n  }\n\n  /**\n   * Returns a sanitized array of valid MIDI channel numbers (1-16). The parameter should be a\n   * single integer or an array of integers.\n   *\n   * For backwards-compatibility, passing `undefined` as a parameter to this method results in all\n   * channels being returned (1-16). Otherwise, parameters that cannot successfully be parsed to\n   * integers between 1 and 16 are silently ignored.\n   *\n   * @param [channel] {number|number[]} An integer or an array of integers to parse as channel\n   * numbers.\n   *\n   * @returns {Array} An array of 0 or more valid MIDI channel numbers.\n   */\n  sanitizeChannels(channel) {\n\n    let channels;\n\n    if (this.validation) {\n\n      if (channel === \"all\") { // backwards-compatibility\n        channels = [\"all\"];\n      } else if (channel === \"none\") { // backwards-compatibility\n        return [];\n      }\n\n    }\n\n    if (!Array.isArray(channel)) {\n      channels = [channel];\n    } else {\n      channels = channel;\n    }\n\n    // In order to preserve backwards-compatibility, we let this assignment as it is.\n    if (channels.indexOf(\"all\") > -1) {\n      channels = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n    }\n\n    return channels\n      .map(function(ch) {\n        return parseInt(ch);\n      })\n      .filter(function(ch) {\n        return (ch >= 1 && ch <= 16);\n      });\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0. Use sanitizeChannels() instead.\n   */\n  toMIDIChannels(channel) {\n\n    if (this.validation) {\n      console.warn(\n        \"The toMIDIChannels() method has been deprecated. Use sanitizeChannels() instead.\"\n      );\n    }\n\n    return this.sanitizeChannels(channel);\n\n  }\n\n  /**\n   * Returns a valid MIDI note number (0-127) given the specified input. The parameter usually is a\n   * string containing a note name (`\"C3\"`, `\"F#4\"`, `\"D-2\"`, `\"G8\"`, etc.). If an integer between 0\n   * and 127 is passed, it will simply be returned as is (for convenience). Other strings will be\n   * parsed for integer, if possible.\n   *\n   * **Note**: since v3.x, this method returns `false` instead of throwing an error when the input\n   * is invalid.\n   *\n   * @param input {string|number} A string to extract the note number from. An integer can also be\n   * used, in this case it will simply be returned as is (if between 0 and 127).\n   *\n   * @returns {number|false} A valid MIDI note number (0-127) or `false` if the input could not\n   * successfully be parsed to a note number.\n   */\n  guessNoteNumber(input) {\n\n    let output = false;\n\n    if (Number.isInteger(input) && input >= 0 && input <= 127) {        // uint\n      output = parseInt(input);\n    } else if (parseInt(input) >= 0 && parseInt(input) <= 127) {        // float or uint as string\n      output = parseInt(input);\n    } else if (typeof input === \"string\" || input instanceof String) {  // string\n      output = this.getNoteNumberByName(input);\n    }\n\n    if (output === false) return false;\n    return output;\n\n  }\n\n  /**\n   * Converts an input value, which can be an unsigned integer (0-127), a note name, a {@link Note}\n   * object or an array of the previous types, to an array of {@link Note} objects.\n   *\n   * {@link Note} objects are returned as is. For note numbers and names, a {@link Note} object is\n   * created with the options specified. An error will be thrown when encountering invalid input.\n   *\n   * @param [notes] {number|string|Note|number[]|string[]|Note[]}\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should\n   * be explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a decimal number between 0\n   * and 1.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a decimal number between 0\n   * and 1.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127.\n   *\n   * @returns {Note[]}\n   *\n   * @throws TypeError An element could not be parsed as a note.\n   */\n  getValidNoteArray(notes, options = {}) {\n\n    let result = [];\n    if (!Array.isArray(notes)) notes = [notes];\n\n    notes.forEach(note => {\n      result.push(this.getNoteObject(note, options));\n    });\n\n    return result;\n\n  }\n\n  /**\n   * Converts the `note` parameter to a valid {@link Note} object. The input usually is an unsigned\n   * integer (0-127) or a note name (`\"C4\"`, `\"G#5\"`, etc.). If the input is a {@link Note} object,\n   * it will be returned as is.\n   *\n   * If the input is a note number or name, it is possible to specify options by providing the\n   * optional `options` parameter.\n   *\n   * An error is thrown for invalid input.\n   *\n   * @param [notes] {number|string|Note}\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should\n   * be explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a decimal number between 0\n   * and 1.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a decimal number between 0\n   * and 1.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127.\n   *\n   * @returns {Note}\n   *\n   * @throws TypeError The input could not be parsed as a note\n   */\n  getNoteObject(note, options) {\n\n    if (note instanceof Note) {\n      return note;\n    } else {\n      let number = this.guessNoteNumber(note);\n      if (number !== false) {\n        return new Note(number, options);\n      } else {\n        throw new TypeError(`The input could not be parsed as a note (${note})`);\n      }\n    }\n\n  }\n\n  /**\n   * Returns a valid timestamp, relative to the navigation start of the document, derived from the\n   * `time` parameter. If the parameter is a string starting with the \"+\" sign and followed by a\n   * number, the resulting timestamp will be the sum of the current timestamp plus that number. If\n   * the parameter is a positive number, it will be returned as is. Otherwise, false will be\n   * returned.\n   *\n   * @param [time] {number|string} The time string (e.g. `\"+2000\"`) or number to parse\n   * @return {number} A positive number\n   */\n  convertToTimestamp(time) {\n\n    let value = false;\n    let parsed = parseFloat(time);\n    if (isNaN(parsed)) return false;\n\n    if (typeof time === \"string\" && time.substring(0, 1) === \"+\") {\n      if (parsed >= 0) value = this.time + parsed;\n    } else {\n      if (parsed >= 0) value = parsed;\n    }\n\n    return value;\n\n  };\n\n  /**\n   *\n   * @return {Promise<void>}\n   * @private\n   */\n  async _destroyInputsAndOutputs() {\n\n    let promises = [];\n\n    this.inputs.forEach(input => promises.push(input.destroy()));\n    this.outputs.forEach(output => promises.push(output.destroy()));\n\n    return Promise.all(promises).then(() => {\n      this._inputs = [];\n      this._outputs = [];\n    });\n\n  }\n\n  /**\n   * @private\n   */\n  _onInterfaceStateChange(e) {\n\n    this._updateInputsAndOutputs();\n\n    /**\n     * Event emitted when an {@link Input} or {@link Output} becomes available. This event is\n     * typically fired whenever a MIDI device is plugged in. Please note that it may fire several\n     * times if a device possesses multiple inputs and/or outputs (which is often the case).\n     *\n     * @event WebMidi#connected\n     * @type {Object}\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred\n     * (in milliseconds since the navigation start of the document).\n     * @property {string} type `connected`\n     * @property {Input|Output} target The {@link Input} or {@link Output} object that triggered the\n     * event.\n     */\n\n    /**\n     * Event emitted when an {@link Input} or {@link Output} becomes unavailable. This event is\n     * typically fired whenever a MIDI device is unplugged. Please note that it may fire several\n     * times if a device possesses multiple inputs and/or outputs (which is often the case).\n     *\n     * @event WebMidi#disconnected\n     * @type {Object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {string} type `disconnected`\n     * @property {Object} target Object with properties describing the {@link Input} or {@Output}\n     * that triggered the event.\n     * @property {string} target.connection `\"closed\"`\n     * @property {string} target.id ID of the input\n     * @property {string} target.manufacturer Manufacturer of the device that provided the input\n     * @property {string} target.name Name of the device that provided the input\n     * @property {string} target.state `disconnected`\n     * @property {string} target.type `input` or `output`\n     */\n    let event = {\n      timestamp: e.timeStamp,\n      type: e.port.state\n    };\n\n    if (this.interface && e.port.state === \"connected\") {\n\n      if (e.port.type === \"output\") {\n        event.port = this.getOutputById(e.port.id); // legacy\n        event.target = event.port;\n      } else if (e.port.type === \"input\") {\n        event.port = this.getInputById(e.port.id); // legacy\n        event.target = event.port;\n      }\n\n    } else {\n\n      // It feels more logical to include a `target` property instead of a `port` property. This is\n      // the terminology used everywhere in the library.\n      event.port = {\n        connection: \"closed\",\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n\n      event.target = event.port;\n\n    }\n\n    this.emit(e.port.state, event);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateInputsAndOutputs() {\n\n    return Promise.all([\n      this._updateInputs(),\n      this._updateOutputs()\n    ]);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateInputs() {\n\n    let promises = [];\n\n    // Check for items to remove from the existing array (because they are no longer being reported\n    // by the MIDI back-end).\n    for (let i = 0; i < this._inputs.length; i++) {\n\n      let remove = true;\n\n      let updated = this.interface.inputs.values();\n\n      for (let input = updated.next(); input && !input.done; input = updated.next()) {\n        if (this._inputs[i]._midiInput === input.value) {\n          remove = false;\n          break;\n        }\n      }\n\n      if (remove) this._inputs.splice(i, 1);\n\n    }\n\n    // Check for items to add in the existing inputs array because they just appeared in the MIDI\n    // back-end inputs list. We must check for the existence of this.interface because it might\n    // have been closed via WebMidi.disable().\n    this.interface && this.interface.inputs.forEach(nInput => {\n\n      let add = true;\n\n      for (let j = 0; j < this._inputs.length; j++) {\n        if (this._inputs[j]._midiInput === nInput) {\n          add = false;\n        }\n      }\n\n      if (add) {\n        let input = new Input(nInput);\n        this._inputs.push(input);\n        promises.push(input.open());\n      }\n\n    });\n\n    return Promise.all(promises);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateOutputs() {\n\n    let promises = [];\n\n    // Check for items to remove from the existing array (because they are no longer being reported\n    // by the MIDI back-end).\n    for (let i = 0; i < this._outputs.length; i++) {\n\n      let remove = true;\n\n      let updated = this.interface.outputs.values();\n\n      for (let output = updated.next(); output && !output.done; output = updated.next()) {\n        if (this._outputs[i]._midiOutput === output.value) {\n          remove = false;\n          break;\n        }\n      }\n\n      if (remove) {\n        this._outputs[i].close();\n        this._outputs.splice(i, 1);\n      }\n\n    }\n\n    // Check for items to add in the existing inputs array because they just appeared in the MIDI\n    // back-end outputs list. We must check for the existence of this.interface because it might\n    // have been closed via WebMidi.disable().\n    this.interface && this.interface.outputs.forEach(nOutput => {\n\n      let add = true;\n\n      for (let j = 0; j < this._outputs.length; j++) {\n        if (this._outputs[j]._midiOutput === nOutput) {\n          add = false;\n        }\n      }\n\n      if (add) {\n        let output = new Output(nOutput);\n        this._outputs.push(output);\n        promises.push(output.open());\n      }\n\n    });\n\n    return Promise.all(promises);\n\n  };\n\n  // injectPluginMarkup(parent) {\n  //\n  //   // Silently ignore on Node.js\n  //   if (this.isNode) return;\n  //\n  //   // Default to <body> if no parent is specified\n  //   if (!(parent instanceof Element) && !(parent instanceof HTMLDocument)) {\n  //     parent = document.body;\n  //   }\n  //\n  //   // IE10 needs this:\n  //   // <meta http-equiv=\"X-UA-Compatible\" content=\"requiresActiveX=true\"/>\n  //\n  //   // Create markup and add to parent\n  //   const obj = document.createElement(\"object\");\n  //   obj.classid = \"CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90\"; // IE\n  //   if (!obj.isJazz) obj.type = \"audio/x-jazz\";                 // Standards-compliant\n  //   obj.style.visibility = \"hidden\";\n  //   obj.style.width = obj.style.height = \"0px\";\n  //   parent.appendChild(obj);\n  //\n  // }\n\n  /**\n   * Indicates whether access to the host's MIDI subsystem is active or not.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  get enabled() {\n    return this.interface !== null;\n  }\n\n  /**\n   * An array of all currently available MIDI inputs.\n   *\n   * @readonly\n   * @type {Array}\n   */\n  get inputs() {\n    return this._inputs;\n  }\n\n  /**\n   * Indicates whether the current environment is Node.js or not\n   * @type {boolean}\n   */\n  get isNode() {\n\n    return (Object.prototype.toString.call(\n      typeof process !== \"undefined\" ? process : 0\n    ) === \"[object process]\");\n\n  }\n\n  /**\n   * An integer to offset the octave both in inbound and outbound messages. By default, middle C\n   * (MIDI note number 60) is placed on the 4th octave (C4).\n   *\n   * If, for example, `octaveOffset` is set to 2, MIDI note number 60 will be reported as C6. If\n   * `octaveOffset` is set to -1, MIDI note number 60 will be reported as C3.\n   *\n   * @type {number}\n   *\n   * @since 2.1\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be a valid number.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * An array of all currently available MIDI outputs.\n   *\n   * @readonly\n   * @type {Array}\n   */\n  get outputs() {\n    return this._outputs;\n  }\n\n  /**\n   * Indicates whether the environment provides support for the Web MIDI API or not.\n   *\n   * **Note**: in environments that do not offer built-in MIDI support, this will report `true` if\n   * the `navigator.requestMIDIAccess` function is available. For example, if you have installed\n   * WebMIDIAPIShim.js but no plugin, this property will be `true` even though actual support might\n   * not be there.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  get supported() {\n    return (navigator && navigator.requestMIDIAccess) ? true : false;\n  }\n\n  /**\n   * Indicates whether MIDI system exclusive messages have been activated when WebMidi.js was\n   * enabled via the `enable()` method.\n   *\n   * @readonly\n   * @type Boolean\n   */\n  get sysexEnabled() {\n    return !!(this.interface && this.interface.sysexEnabled);\n  }\n\n  /**\n   * The elapsed time, in milliseconds, since the time\n   * [origin](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp#The_time_origin).\n   * Said simply, it is the number of milliseconds that passed since the page was loaded. Being a\n   * floating-point number, it has sub-millisecond accuracy. According to the\n   * [documentation](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp), the\n   * time should be accurate to 5 µs (microseconds). However, due to various constraints, the\n   * browser might only be accurate to one millisecond.\n   *\n   * @type {DOMHighResTimeStamp}\n   * @readonly\n   */\n  get time() {\n    return performance.now();\n  }\n\n  /**\n   * Enum of all MIDI channel voice messages and their associated numerical value:\n   *\n   * - `noteoff`: 0x8 (8)\n   * - `noteon`: 0x9 (9)\n   * - `keyaftertouch`: 0xA (10)\n   * - `controlchange`: 0xB (11)\n   * - `channelmode`: 0xB (11)\n   * - `nrpn`: 0xB (11)\n   * - `programchange`: 0xC (12)\n   * - `channelaftertouch`: 0xD (13)\n   * - `pitchbend`: 0xE (14)\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   *\n   * @since 3.0.0\n   */\n  get MIDI_CHANNEL_VOICE_MESSAGES() {\n\n    return {\n      noteoff: 0x8,           // 8\n      noteon: 0x9,            // 9\n      keyaftertouch: 0xA,     // 10\n      controlchange: 0xB,     // 11\n      channelmode: 0xB,       // 11\n      nrpn: 0xB,              // 11\n      programchange: 0xC,     // 12\n      channelaftertouch: 0xD, // 13\n      pitchbend: 0xE          // 14\n    };\n\n  }\n\n  /**\n   * Enum of all MIDI channel voice messages and their associated numerical value. Note that it\n   * has been deprecated since v3.0. You should now use\n   * [MIDI_CHANNEL_VOICE_MESSAGES]{@link WebMidi.MIDI_CHANNEL_VOICE_MESSAGES}.\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @deprecated since version 3.0 (will be dropped in version 4.0)\n   *\n   * @since 2.0.0\n   */\n  get MIDI_CHANNEL_MESSAGES() {\n    console.warn(\n      \"MIDI_CHANNEL_MESSAGES has been deprecated. Use MIDI_CHANNEL_VOICE_MESSAGES instead.\"\n    );\n    return this.MIDI_CHANNEL_VOICE_MESSAGES;\n  }\n\n  /**\n   * Enum of all channel mode messages and their associated numerical value:\n   *\n   * - `allsoundoff`: 120\n   * - `resetallcontrollers`: 121\n   * - `localcontrol`: 122\n   * - `allnotesoff`: 123\n   * - `omnimodeoff`: 124\n   * - `omnimodeon`: 125\n   * - `monomodeon`: 126\n   * - `polymodeon`: 127\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   *\n   * @since 2.0.0\n   */\n  get MIDI_CHANNEL_MODE_MESSAGES() {\n\n    return {\n      allsoundoff: 120,\n      resetallcontrollers: 121,\n      localcontrol: 122,\n      allnotesoff: 123,\n      omnimodeoff: 124,\n      omnimodeon: 125,\n      monomodeon: 126,\n      polymodeon: 127\n    };\n\n  }\n\n  /**\n   * Enum of all control change messages and their associated numerical value:\n   *\n   * - `bankselectcoarse`: 0\n   * - `modulationwheelcoarse`: 1\n   * - `breathcontrollercoarse`: 2\n   * - `footcontrollercoarse`: 4\n   * - `portamentotimecoarse`: 5\n   * - `dataentrycoarse`: 6\n   * - `volumecoarse`: 7\n   * - `balancecoarse`: 8\n   * - `pancoarse`: 10\n   * - `expressioncoarse`: 11\n   * - `effectcontrol1coarse`: 12\n   * - `effectcontrol2coarse`: 13\n   * - `generalpurposeslider1`: 16\n   * - `generalpurposeslider2`: 17\n   * - `generalpurposeslider3`: 18\n   * - `generalpurposeslider4`: 19\n   * - `bankselectfine`: 32\n   * - `modulationwheelfine`: 33\n   * - `breathcontrollerfine`: 34\n   * - `footcontrollerfine`: 36\n   * - `portamentotimefine`: 37\n   * - `dataentryfine`: 38\n   * - `volumefine`: 39\n   * - `balancefine`: 40\n   * - `panfine`: 42\n   * - `expressionfine`: 43\n   * - `effectcontrol1fine`: 44\n   * - `effectcontrol2fine`: 45\n   * - `holdpedal`: 64\n   * - `portamento`: 65\n   * - `sustenutopedal`: 66\n   * - `softpedal`: 67\n   * - `legatopedal`: 68\n   * - `hold2pedal`: 69\n   * - `soundvariation`: 70\n   * - `resonance`: 71\n   * - `soundreleasetime`: 72\n   * - `soundattacktime`: 73\n   * - `brightness`: 74\n   * - `soundcontrol6`: 75\n   * - `soundcontrol7`: 76\n   * - `soundcontrol8`:`77\n   * - `soundcontrol9`: 78\n   * - `soundcontrol10`: 79\n   * - `generalpurposebutton1`: 80\n   * - `generalpurposebutton2`: 81\n   * - `generalpurposebutton3`: 82\n   * - `generalpurposebutton4`: 83\n   * - `reverblevel`: 91\n   * - `tremololevel`: 92\n   * - `choruslevel`: 93\n   * - `celestelevel`: 94\n   * - `phaserlevel`: 95\n   * - `databuttonincrement`: 96\n   * - `databuttondecrement`: 97\n   * - `nonregisteredparametercoarse`: 98\n   * - `nonregisteredparameterfine`: 99\n   * - `registeredparametercoarse`: 100\n   * - `registeredparameterfine`: 101\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   *\n   * @since 2.0.0\n   */\n  get MIDI_CONTROL_CHANGE_MESSAGES() {\n\n    return {\n      bankselectcoarse: 0,\n      modulationwheelcoarse: 1,\n      breathcontrollercoarse: 2,\n      footcontrollercoarse: 4,\n      portamentotimecoarse: 5,\n      dataentrycoarse: 6,\n      volumecoarse: 7,\n      balancecoarse: 8,\n      pancoarse: 10,\n      expressioncoarse: 11,\n      effectcontrol1coarse: 12,\n      effectcontrol2coarse: 13,\n      generalpurposeslider1: 16,\n      generalpurposeslider2: 17,\n      generalpurposeslider3: 18,\n      generalpurposeslider4: 19,\n      bankselectfine: 32,\n      modulationwheelfine: 33,\n      breathcontrollerfine: 34,\n      footcontrollerfine: 36,\n      portamentotimefine: 37,\n      dataentryfine: 38,\n      volumefine: 39,\n      balancefine: 40,\n      panfine: 42,\n      expressionfine: 43,\n      effectcontrol1fine: 44,\n      effectcontrol2fine: 45,\n      holdpedal: 64,\n      portamento: 65,\n      sustenutopedal: 66,\n      softpedal: 67,\n      legatopedal: 68,\n      hold2pedal: 69,\n      soundvariation: 70,\n      resonance: 71,\n      soundreleasetime: 72,\n      soundattacktime: 73,\n      brightness: 74,\n      soundcontrol6: 75,\n      soundcontrol7: 76,\n      soundcontrol8: 77,\n      soundcontrol9: 78,\n      soundcontrol10: 79,\n      generalpurposebutton1: 80,\n      generalpurposebutton2: 81,\n      generalpurposebutton3: 82,\n      generalpurposebutton4: 83,\n      reverblevel: 91,\n      tremololevel: 92,\n      choruslevel: 93,\n      celestelevel: 94,\n      phaserlevel: 95,\n      databuttonincrement: 96,\n      databuttondecrement: 97,\n      nonregisteredparametercoarse: 98,\n      nonregisteredparameterfine: 99,\n      registeredparametercoarse: 100,\n      registeredparameterfine: 101\n    };\n\n  }\n\n  /**\n   * Array of valid events triggered at the interface level.\n   *\n   * @type {string[]}\n   * @readonly\n   */\n  get MIDI_INTERFACE_EVENTS() {\n    return [\"connected\", \"disconnected\"];\n  }\n\n  /**\n   * Enum of all control change messages that are used to create NRPN messages and their associated\n   * numerical value:\n   *\n   * - `entrymsb`: 6\n   * - `entrylsb`: 38\n   * - `increment`: 96\n   * - `decrement`: 97\n   * - `paramlsb`: 98\n   * - `parammsb`: 99\n   * - `nullactiveparameter`: 127\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   *\n   * @since 2.0.0\n   */\n  get MIDI_NRPN_MESSAGES() {\n\n    return {\n      entrymsb: 6,\n      entrylsb: 38,\n      increment: 96,\n      decrement: 97,\n      paramlsb: 98,\n      parammsb: 99,\n      nullactiveparameter: 127\n    };\n\n  }\n\n  /**\n   * Enum of all registered parameters and their associated pair of numerical values. MIDI\n   * registered parameters extend the original list of control change messages. Currently, there are\n   * only a limited number of them:\n   *\n   * - `pitchbendrange`: [0x00, 0x00]\n   * - `channelfinetuning`: [0x00, 0x01]\n   * - `channelcoarsetuning`: [0x00, 0x02]\n   * - `tuningprogram`: [0x00, 0x03]\n   * - `tuningbank`: [0x00, 0x04]\n   * - `modulationrange`: [0x00, 0x05]\n   * - `azimuthangle`: [0x3D, 0x00]\n   * - `elevationangle`: [0x3D, 0x01]\n   * - `gain`: [0x3D, 0x02]\n   * - `distanceratio`: [0x3D, 0x03]\n   * - `maximumdistance`: [0x3D, 0x04]\n   * - `maximumdistancegain`: [0x3D, 0x05]\n   * - `referencedistanceratio`: [0x3D, 0x06]\n   * - `panspreadangle`: [0x3D, 0x07]\n   * - `rollangle`: [0x3D, 0x08]\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   *\n   * @since 2.0.0\n   */\n  get MIDI_REGISTERED_PARAMETER() {\n\n    return {\n      pitchbendrange: [0x00, 0x00],\n      channelfinetuning: [0x00, 0x01],\n      channelcoarsetuning: [0x00, 0x02],\n      tuningprogram: [0x00, 0x03],\n      tuningbank: [0x00, 0x04],\n      modulationrange: [0x00, 0x05],\n      azimuthangle: [0x3D, 0x00],\n      elevationangle: [0x3D, 0x01],\n      gain: [0x3D, 0x02],\n      distanceratio: [0x3D, 0x03],\n      maximumdistance: [0x3D, 0x04],\n      maximumdistancegain: [0x3D, 0x05],\n      referencedistanceratio: [0x3D, 0x06],\n      panspreadangle: [0x3D, 0x07],\n      rollangle: [0x3D, 0x08]\n    };\n\n  }\n\n  /**\n   * Enum of all valid MIDI system messages and matching numerical values. WebMidi.js also uses\n   * two custom messages.\n   *\n   * **System common messages**\n   * - `sysex`: 0xF0 (240)\n   * - `timecode`: 0xF1 (241)\n   * - `songposition`: 0xF2 (242)\n   * - `songselect`: 0xF3 (243)\n   * - `tunerequest`: 0xF6 (246)\n   * - `sysexend`: 0xF7 (247)\n   *\n   * The `sysexend` message is never actually received. It simply ends a sysex stream.\n   *\n   * **System real-time messages**\n   *\n   * - `clock`: 0xF8 (248)\n   * - `start`: 0xFA (250)\n   * - `continue`: 0xFB (251)\n   * - `stop`: 0xFC (252)\n   * - `activesensing`: 0xFE (254)\n   * - `reset`: 0xFF (255)\n   *\n   * Values 249 and 253 are actually relayed by the Web MIDI API but they do not serve a specific\n   * purpose. The\n   * [MIDI 1.0 spec](https://www.midi.org/specifications/item/table-1-summary-of-midi-message)\n   * simply states that they are undefined/reserved.\n   *\n   * **Custom WebMidi.js messages**\n   *\n   * - `midimessage`: 0\n   * - `unknownsystemmessage`: -1\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   *\n   * @since 2.0.0\n   */\n  get MIDI_SYSTEM_MESSAGES() {\n\n    return {\n\n      // System common messages\n      sysex: 0xF0,            // 240\n      timecode: 0xF1,         // 241\n      songposition: 0xF2,     // 242\n      songselect: 0xF3,       // 243\n      tunerequest: 0xF6,      // 246\n      tuningrequest: 0xF6,    // for backwards-compatibility (deprecated in version 3.0)\n      sysexend: 0xF7,         // 247 (never actually received - simply ends a sysex)\n\n      // System real-time messages\n      clock: 0xF8,            // 248\n      start: 0xFA,            // 250\n      continue: 0xFB,         // 251\n      stop: 0xFC,             // 252\n      activesensing: 0xFE,    // 254\n      reset: 0xFF,            // 255\n\n      // Custom WebMidi.js messages\n      midimessage: 0,\n      unknownsystemmessage: -1\n\n    };\n\n  }\n\n  /**\n   * Array of standard note names\n   *\n   * @type {string[]}\n   * @readonly\n   */\n  get NOTES() {\n    return [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n  }\n\n}\n\n// Export singleton instance of WebMidi class. The 'constructor' is nulled so that it cannot be used\n// to instantiate a new WebMidi object or extend it. However, it is not freezed so it remains\n// extensible (properties can be added at will).\nconst wm = new WebMidi();\nwm.constructor = null;\n\nexport { Note, wm as WebMidi };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function(global, factory) {\r\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\r\n    module.exports = factory();\r\n  }\r\n  else if (typeof define === 'function' && define.amd) {\r\n    define('JZZ', [], factory);\r\n  }\r\n  else {\r\n    if (!global) global = window;\r\n    if (global.JZZ && global.JZZ.MIDI) return;\r\n    global.JZZ = factory();\r\n  }\r\n})(this, function() {\r\n\r\n  var _scope = typeof window === 'undefined' ? global : window;\r\n  var _version = '1.1.7';\r\n  var i, j, k, m, n;\r\n\r\n  var _time = Date.now || function () { return new Date().getTime(); };\r\n  var _startTime = _time();\r\n  var _now = typeof performance != 'undefined' && performance.now ?\r\n    function() { return performance.now(); } : function() { return _time() - _startTime; };\r\n  var _schedule = function(f) {\r\n    setTimeout(f, 0);\r\n  };\r\n\r\n  // _R: common root for all async objects\r\n  function _R() {\r\n    this._orig = this;\r\n    this._ready = false;\r\n    this._queue = [];\r\n    this._log = [];\r\n  }\r\n  _R.prototype._exec = function() {\r\n    while (this._ready && this._queue.length) {\r\n      var x = this._queue.shift();\r\n      x[0].apply(this, x[1]);\r\n    }\r\n  };\r\n  _R.prototype._push = function(func, arg) { this._queue.push([func, arg]); _R.prototype._exec.apply(this); };\r\n  _R.prototype._slip = function(func, arg) { this._queue.unshift([func, arg]); };\r\n  _R.prototype._pause = function() { this._ready = false; };\r\n  _R.prototype._resume = function() { this._ready = true; _R.prototype._exec.apply(this); };\r\n  _R.prototype._break = function(err) { this._orig._bad = true; this._orig._log.push(err || 'Unknown JZZ error'); };\r\n  _R.prototype._repair = function() { this._orig._bad = false; };\r\n  _R.prototype._crash = function(err) { this._break(err); this._resume(); };\r\n  _R.prototype._err = function() { return this._log[this._log.length - 1]; };\r\n  _R.prototype.log = function() { return _clone(this._log); };\r\n  _R.prototype._image = function() {\r\n    var F = function() {}; F.prototype = this._orig;\r\n    var ret = new F();\r\n    ret._ready = false;\r\n    ret._queue = [];\r\n    return ret;\r\n  };\r\n  _R.prototype._thenable = function() {\r\n    var self = this;\r\n    var F = function() {}; F.prototype = self;\r\n    var ret = new F();\r\n    ret.then = function(good, bad) { self._push(_then, [good, bad]); return this; };      \r\n    return ret;\r\n  };\r\n  function _then(good, bad) {\r\n    if (this._bad) {\r\n      if (bad instanceof Function) bad.apply(this, [new Error(this._err())]);\r\n    }\r\n    else {\r\n      if (good instanceof Function) good.apply(this, [this]);\r\n    }\r\n  }\r\n  function _wait(obj, delay) {\r\n    if (this._bad) obj._crash(this._err());\r\n    else setTimeout(function() { obj._resume(); }, delay);\r\n  }\r\n  _R.prototype.wait = function(delay) {\r\n    if (!delay) return this;\r\n    var ret = this._image();\r\n    this._push(_wait, [ret, delay]);\r\n    return ret._thenable();\r\n  };\r\n  function _kick(obj) { if (this._bad) obj._break(this._err()); obj._resume(); }\r\n  function _rechain(self, obj, name) {\r\n    self[name] = function() {\r\n      var arg = arguments;\r\n      var ret = obj._image();\r\n      this._push(_kick, [ret]);\r\n      return ret[name].apply(ret, arg);\r\n    };\r\n  }\r\n  function _and(q) {\r\n    if (!this._bad) {\r\n      if (q instanceof Function) q.apply(this); else console.log(q);\r\n    }\r\n  }\r\n  _R.prototype.and = function(func) { this._push(_and, [func]); return this._thenable(); };\r\n  function _or(q) {\r\n    if (this._bad) {\r\n      if (q instanceof Function) q.apply(this); else console.log(q);\r\n    }\r\n  }\r\n  _R.prototype.or = function(func) { this._push(_or, [func]); return this._thenable(); };\r\n\r\n  _R.prototype._info = {};\r\n  _R.prototype.info = function() {\r\n    var info = _clone(this._orig._info);\r\n    if (typeof info.engine == 'undefined') info.engine = 'none';\r\n    if (typeof info.sysex == 'undefined') info.sysex = true;\r\n    return info;\r\n  };\r\n  _R.prototype.name = function() { return this.info().name; };\r\n\r\n  function _close(obj) {\r\n    if (this._bad) obj._crash(this._err());\r\n    else {\r\n      this._break('Closed');\r\n      obj._resume();\r\n    }\r\n  }\r\n  _R.prototype.close = function() {\r\n    var ret = new _R();\r\n    if (this._close) this._push(this._close, []);\r\n    this._push(_close, [ret]);\r\n    return ret._thenable();\r\n  };\r\n\r\n  function _tryAny(arr) {\r\n    if (!arr.length) {\r\n      this._break();\r\n      return;\r\n    }\r\n    var func = arr.shift();\r\n    if (arr.length) {\r\n      var self = this;\r\n      this._slip(_or, [ function() { _tryAny.apply(self, [arr]); } ]);\r\n    }\r\n    try {\r\n      this._repair();\r\n      func.apply(this);\r\n    }\r\n    catch (err) {\r\n      this._break(err.toString());\r\n    }\r\n  }\r\n\r\n  function _push(arr, obj) {\r\n    for (var i = 0; i < arr.length; i++) if (arr[i] === obj) return;\r\n    arr.push(obj);\r\n  }\r\n  function _pop(arr, obj) {\r\n    for (var i = 0; i < arr.length; i++) if (arr[i] === obj) {\r\n      arr.splice(i, 1);\r\n      return;\r\n    }\r\n  }\r\n\r\n  // _J: JZZ object\r\n  function _J() {\r\n    _R.apply(this);\r\n  }\r\n  _J.prototype = new _R();\r\n\r\n  function _clone(obj, key, val) {\r\n    if (typeof key == 'undefined') return _clone(obj, [], []);\r\n    if (obj instanceof Object) {\r\n      for (var i = 0; i < key.length; i++) if (key[i] === obj) return val[i];\r\n      var ret;\r\n      if (obj instanceof Array) ret = []; else ret = {};\r\n      key.push(obj); val.push(ret);\r\n      for(var k in obj) if (obj.hasOwnProperty(k)) ret[k] = _clone(obj[k], key, val);\r\n      return ret;\r\n    }\r\n    return obj;\r\n  }\r\n  _J.prototype._info = { name: 'JZZ.js', ver: _version, version: _version, inputs: [], outputs: [] };\r\n\r\n  var _outs = [];\r\n  var _ins = [];\r\n  var _outsW = [];\r\n  var _insW = [];\r\n\r\n  function _postRefresh() {\r\n    _jzz._info.engine = _engine._type;\r\n    _jzz._info.version = _engine._version;\r\n    _jzz._info.sysex = _engine._sysex;\r\n    _jzz._info.inputs = [];\r\n    _jzz._info.outputs = [];\r\n    _outs = [];\r\n    _ins = [];\r\n    _engine._allOuts = {};\r\n    _engine._allIns = {};\r\n    var i, x;\r\n    for (i = 0; i < _engine._outs.length; i++) {\r\n      x = _engine._outs[i];\r\n      x.engine = _engine;\r\n      _engine._allOuts[x.name] = x;\r\n      _jzz._info.outputs.push({\r\n        id: x.name,\r\n        name: x.name,\r\n        manufacturer: x.manufacturer,\r\n        version: x.version,\r\n        engine: _engine._type\r\n      });\r\n      _outs.push(x);\r\n    }\r\n    for (i = 0; i < _virtual._outs.length; i++) {\r\n      x = _virtual._outs[i];\r\n      _jzz._info.outputs.push({\r\n        id: x.name,\r\n        name: x.name,\r\n        manufacturer: x.manufacturer,\r\n        version: x.version,\r\n        engine: x.type\r\n      });\r\n      _outs.push(x);\r\n    }\r\n    for (i = 0; i < _engine._ins.length; i++) {\r\n      x = _engine._ins[i];\r\n      x.engine = _engine;\r\n      _engine._allIns[x.name] = x;\r\n      _jzz._info.inputs.push({\r\n        id: x.name,\r\n        name: x.name,\r\n        manufacturer: x.manufacturer,\r\n        version: x.version,\r\n        engine: _engine._type\r\n      });\r\n      _ins.push(x);\r\n    }\r\n    for (i = 0; i < _virtual._ins.length; i++) {\r\n      x = _virtual._ins[i];\r\n      _jzz._info.inputs.push({\r\n        id: x.name,\r\n        name: x.name,\r\n        manufacturer: x.manufacturer,\r\n        version: x.version,\r\n        engine: x.type\r\n      });\r\n      _ins.push(x);\r\n    }\r\n    if (_jzz._watcher && _jzz._watcher._handles.length) {\r\n      var diff = _diff(_insW, _outsW, _jzz._info.inputs, _jzz._info.outputs);\r\n       if (diff) {\r\n        for (j = 0; j < diff.inputs.removed.length; j++) {\r\n          x = _engine._inMap[diff.inputs.removed[j].name];\r\n          if (x) x._closeAll();\r\n        }\r\n        for (j = 0; j < diff.outputs.removed.length; j++) {\r\n          x = _engine._outMap[diff.outputs.removed[j].name];\r\n          if (x) x._closeAll();\r\n        }\r\n        _fireW(diff);\r\n      }\r\n    }\r\n    _insW = _jzz._info.inputs;\r\n    _outsW = _jzz._info.outputs;\r\n  }\r\n  function _refresh() {\r\n    if (!this._bad) _engine._refresh(this);\r\n  }\r\n  _J.prototype.refresh = function() {\r\n    this._push(_refresh, []);\r\n    return this._thenable();\r\n  };\r\n\r\n  function _filterList(q, arr) {\r\n    var i, n;\r\n    if (q instanceof Function) q = q(arr);\r\n    if (!(q instanceof Array)) q = [q];\r\n    var before = [];\r\n    var after = [];\r\n    var etc = arr.slice();\r\n    var a = before;\r\n    for (i = 0; i < q.length; i++) {\r\n      if (typeof q[i] == 'undefined') a = after;\r\n      else if (q[i] instanceof RegExp) for (n = 0; n < etc.length; n++) {\r\n        if (q[i].test(etc[n].name)) {\r\n          a.push(etc[n]);\r\n          etc.splice(n, 1);\r\n          n--;\r\n        }\r\n      }\r\n      else {\r\n        for (n = 0; n < etc.length; n++) if (q[i] + '' === n + '' || q[i] === etc[n].name || (q[i] instanceof Object && q[i].name === etc[n].name)) {\r\n          a.push(etc[n]);\r\n          etc.splice(n, 1);\r\n          n--;\r\n        }\r\n      }\r\n    }\r\n    return a == before ? before : before.concat(etc).concat(after);\r\n  }\r\n\r\n  function _notFound(port, q) {\r\n    var msg;\r\n    if (q instanceof RegExp) msg = 'Port matching ' + q + ' not found';\r\n    else if (q instanceof Object || typeof q == 'undefined') msg = 'Port not found';\r\n    else msg = 'Port \"' + q + '\" not found';\r\n    port._crash(msg);\r\n  }\r\n  function _openMidiOut(port, arg) {\r\n    if (this._bad) port._crash(this._err());\r\n    else {\r\n      var arr = _filterList(arg, _outs);\r\n      if (!arr.length) { _notFound(port, arg); return; }\r\n      var pack = function(x) { return function() { x.engine._openOut(this, x.name); }; };\r\n      for (var i = 0; i < arr.length; i++) arr[i] = pack(arr[i]);\r\n      port._slip(_tryAny, [arr]);\r\n      port._resume();\r\n    }\r\n  }\r\n  _J.prototype.openMidiOut = function(arg) {\r\n    var port = new _M();\r\n    this._push(_refresh, []);\r\n    this._push(_openMidiOut, [port, arg]);\r\n    return port._thenable();\r\n  };\r\n  _J.prototype._openMidiOutNR = function(arg) {\r\n    var port = new _M();\r\n    this._push(_openMidiOut, [port, arg]);\r\n    return port._thenable();\r\n  };\r\n\r\n  function _openMidiIn(port, arg) {\r\n    if (this._bad) port._crash(this._err());\r\n    else {\r\n      var arr = _filterList(arg, _ins);\r\n      if (!arr.length) { _notFound(port, arg); return; }\r\n      var pack = function(x) { return function() { x.engine._openIn(this, x.name); }; };\r\n      for (var i = 0; i < arr.length; i++) arr[i] = pack(arr[i]);\r\n      port._slip(_tryAny, [arr]);\r\n      port._resume();\r\n    }\r\n  }\r\n  _J.prototype.openMidiIn = function(arg) {\r\n    var port = new _M();\r\n    this._push(_refresh, []);\r\n    this._push(_openMidiIn, [port, arg]);\r\n    return port._thenable();\r\n  };\r\n  _J.prototype._openMidiInNR = function(arg) {\r\n    var port = new _M();\r\n    this._push(_openMidiIn, [port, arg]);\r\n    return port._thenable();\r\n  };\r\n\r\n  function _onChange(watcher, arg) {\r\n    if (this._bad) watcher._crash();\r\n    else {\r\n      watcher._slip(_connectW, [arg]);\r\n      watcher._resume();\r\n    }\r\n  }\r\n  _J.prototype.onChange = function(arg) {\r\n    if (!this._orig._watcher) this._orig._watcher = new _W();\r\n    var watcher = this._orig._watcher._image();\r\n    this._push(_onChange, [watcher, arg]);\r\n    return watcher._thenable();\r\n  };\r\n\r\n  _J.prototype._close = function() {\r\n    _engine._close();\r\n  };\r\n\r\n  // _M: MIDI-In/Out object\r\n  function _M() {\r\n    _R.apply(this);\r\n    this._handles = [];\r\n    this._outs = [];\r\n  }\r\n  _M.prototype = new _R();\r\n  _M.prototype._filter = function(msg) {\r\n    if (this._orig._mpe) {\r\n      var out;\r\n      var outs = 0;\r\n      if (this._handles && this._handles.length) {\r\n        outs = this._handles.length;\r\n        out = this._handles[0];\r\n      }\r\n      if (this._outs && this._outs.length) {\r\n        outs = this._outs.length;\r\n        out = this._outs[0];\r\n      }\r\n      if (outs == 1 && !out._mpe) {\r\n        msg = this._orig._mpe.filter(msg);\r\n      }\r\n    }\r\n    return msg;\r\n  };\r\n  _M.prototype._receive = function(msg) { this._emit(this._filter(msg)); };\r\n  function _receive(msg) { if (!this._bad) this._receive(msg); }\r\n  _M.prototype.send = function() {\r\n    this._push(_receive, [MIDI.apply(null, arguments)]);\r\n    return this._thenable();\r\n  };\r\n  _M.prototype.note = function(c, n, v, t) {\r\n    this.noteOn(c, n, v);\r\n    if (t > 0) this.wait(t).noteOff(c, n);\r\n    return this._thenable();\r\n  };\r\n  _M.prototype._emit = function(msg) {\r\n    var i;\r\n    for (i = 0; i < this._handles.length; i++) this._handles[i].apply(this, [MIDI(msg)._stamp(this)]);\r\n    for (i = 0; i < this._outs.length; i++) {\r\n      var m = MIDI(msg);\r\n      if (!m._stamped(this._outs[i])) this._outs[i].send(m._stamp(this));\r\n    }\r\n  };\r\n  function _emit(msg) { this._emit(msg); }\r\n  _M.prototype.emit = function(msg) {\r\n    this._push(_emit, [msg]);\r\n    return this._thenable();\r\n  };\r\n  function _connect(arg) {\r\n    if (arg instanceof Function) _push(this._orig._handles, arg);\r\n    else _push(this._orig._outs, arg);\r\n  }\r\n  function _disconnect(arg) {\r\n    if (typeof arg == 'undefined') {\r\n      this._orig._handles = [];\r\n      this._orig._outs = [];\r\n    }\r\n    else if (arg instanceof Function) _pop(this._orig._handles, arg);\r\n    else _pop(this._orig._outs, arg);\r\n  }\r\n  _M.prototype.connect = function(arg) {\r\n    this._push(_connect, [arg]);\r\n    return this._thenable();\r\n  };\r\n  _M.prototype.disconnect = function(arg) {\r\n    this._push(_disconnect, [arg]);\r\n    return this._thenable();\r\n  };\r\n  _M.prototype.connected = function() {\r\n    return this._orig._handles.length + this._orig._outs.length;\r\n  };\r\n  _M.prototype.ch = function(n) {\r\n    if (typeof n == 'undefined') return this;\r\n    _validateChannel(n);\r\n    var chan = new _C(this, n);\r\n    this._push(_kick, [chan]);\r\n    return chan._thenable();\r\n  };\r\n  function _mpe(m, n) {\r\n    if (!this._orig._mpe) this._orig._mpe = new MPE();\r\n    this._orig._mpe.setup(m, n);\r\n  }\r\n  _M.prototype.mpe = function(m, n) {\r\n    if (typeof m == 'undefined' && typeof n == 'undefined') return this;\r\n    MPE.validate(m, n);\r\n    var chan = n ? new _E(this, m, n) : new _C(this, m);\r\n    this._push(_mpe, [m, n]);\r\n    this._push(_kick, [chan]);\r\n    return chan._thenable();\r\n  };\r\n  function _validateChannel(c) {\r\n    if (c != parseInt(c) || c < 0 || c > 15)\r\n      throw RangeError('Bad channel value (must not be less than 0 or more than 15): ' + c);\r\n  }\r\n\r\n  // _C: MIDI Channel object\r\n  function _C(port, chan) {\r\n    _M.apply(this);\r\n    this._port = port._orig;\r\n    this._chan = chan;\r\n    _rechain(this, this._port, 'ch');\r\n    _rechain(this, this._port, 'mpe');\r\n    _rechain(this, this._port, 'connect');\r\n    _rechain(this, this._port, 'disconnect');\r\n    _rechain(this, this._port, 'close');\r\n  }\r\n  _C.prototype = new _M();\r\n  _C.prototype.channel = function() { return this._chan; };\r\n  _C.prototype._receive = function(msg) { this._port._receive(msg); };\r\n  _C.prototype.note = function(n, v, t) {\r\n    this.noteOn(n, v);\r\n    if (t) this.wait(t).noteOff(n);\r\n    return this._thenable();\r\n  };\r\n\r\n  // _E: MPE Channel object\r\n  function _E(port, m, n) {\r\n    _M.apply(this);\r\n    this._port = port._orig;\r\n    this._master = m;\r\n    this._band = n;\r\n    _rechain(this, this._port, 'ch');\r\n    _rechain(this, this._port, 'mpe');\r\n    _rechain(this, this._port, 'connect');\r\n    _rechain(this, this._port, 'disconnect');\r\n    _rechain(this, this._port, 'close');\r\n  }\r\n  _E.prototype = new _M();\r\n  _E.prototype.channel = function() { return this._master; };\r\n  _E.prototype._receive = function(msg) { this._port._receive(msg); };\r\n  _E.prototype.note = function(n, v, t) {\r\n    this.noteOn(n, v);\r\n    if (t) this.wait(t).noteOff(n);\r\n    return this._thenable();\r\n  };\r\n\r\n  // _W: Watcher object ~ MIDIAccess.onstatechange\r\n  function _W() {\r\n    _R.apply(this);\r\n    this._handles = [];\r\n    _rechain(this, _jzz, 'refresh');\r\n    _rechain(this, _jzz, 'openMidiOut');\r\n    _rechain(this, _jzz, 'openMidiIn');\r\n    _rechain(this, _jzz, 'onChange');\r\n    _rechain(this, _jzz, 'close');\r\n  }\r\n  _W.prototype = new _R();\r\n  function _connectW(arg) {\r\n    if (arg instanceof Function) {\r\n      if (!this._orig._handles.length) _engine._watch();\r\n      _push(this._orig._handles, arg);\r\n    }\r\n  }\r\n  function _disconnectW(arg) {\r\n    if (typeof arg == 'undefined') this._orig._handles = [];\r\n    else _pop(this._orig._handles, arg);\r\n    if (!this._orig._handles.length) _engine._unwatch();\r\n  }\r\n  _W.prototype.connect = function(arg) {\r\n    this._push(_connectW, [arg]);\r\n    return this._thenable();\r\n  };\r\n  _W.prototype.disconnect = function(arg) {\r\n    this._push(_disconnectW, [arg]);\r\n    return this._thenable();\r\n  };\r\n  function _changed(x0, y0, x1, y1) {\r\n    var i;\r\n    if (x0.length != x1.length || y0.length != y1.length) return true;\r\n    for (i = 0; i < x0.length; i++) if (x0[i].name != x1[i].name) return true;\r\n    for (i = 0; i < y0.length; i++) if (y0[i].name != y1[i].name) return true;\r\n    return false;\r\n  }\r\n  function _diff(x0, y0, x1, y1) {\r\n    if (!_changed(x0, y0, x1, y1)) return;\r\n    var ax = []; // added\r\n    var ay = [];\r\n    var rx = []; // removed\r\n    var ry = [];\r\n    var i;\r\n    var h = {};\r\n    for (i = 0; i < x0.length; i++) h[x0[i].name] = true;\r\n    for (i = 0; i < x1.length; i++) if (!h[x1[i].name]) ax.push(x1[i]);\r\n    h = {};\r\n    for (i = 0; i < x1.length; i++) h[x1[i].name] = true;\r\n    for (i = 0; i < x0.length; i++) if (!h[x0[i].name]) rx.push(x0[i]);\r\n    h = {};\r\n    for (i = 0; i < y0.length; i++) h[y0[i].name] = true;\r\n    for (i = 0; i < y1.length; i++) if (!h[y1[i].name]) ay.push(y1[i]);\r\n    h = {};\r\n    for (i = 0; i < y1.length; i++) h[y1[i].name] = true;\r\n    for (i = 0; i < y0.length; i++) if (!h[y0[i].name]) ry.push(y0[i]);\r\n    return { inputs: { added: ax, removed: rx }, outputs: { added: ay, removed: ry } };\r\n  }\r\n  function _fireW(arg) {\r\n    for (i = 0; i < _jzz._watcher._handles.length; i++) _jzz._watcher._handles[i].apply(_jzz, [arg]);\r\n  }\r\n\r\n  var _jzz;\r\n  var _engine = { _outs: [], _ins: [] };\r\n  var _virtual = { _outs: [], _ins: [] };\r\n\r\n  // Node.js\r\n  function _tryNODE() {\r\n    if (typeof module != 'undefined' && module.exports) {\r\n      _initNode(require('jazz-midi'));\r\n      return;\r\n    }\r\n    this._break();\r\n  }\r\n  // Jazz-Plugin\r\n  function _tryJazzPlugin() {\r\n    var div = document.createElement('div');\r\n    div.style.visibility = 'hidden';\r\n    document.body.appendChild(div);\r\n    var obj = document.createElement('object');\r\n    obj.style.visibility = 'hidden';\r\n    obj.style.width = '0px'; obj.style.height = '0px';\r\n    obj.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';\r\n    obj.type = 'audio/x-jazz';\r\n    document.body.appendChild(obj);\r\n    if (obj.isJazz) {\r\n      _initJazzPlugin(obj);\r\n      return;\r\n    }\r\n    this._break();\r\n  }\r\n\r\n  // Web MIDI API\r\n  var _navigator;\r\n  var _requestMIDIAccess;\r\n  if (typeof navigator !== 'undefined' && navigator.requestMIDIAccess) {\r\n    _navigator = navigator;\r\n    _requestMIDIAccess = navigator.requestMIDIAccess;\r\n    try {\r\n      if (_requestMIDIAccess.toString().indexOf('JZZ(') != -1) _requestMIDIAccess = undefined;\r\n    }\r\n    catch (err) {}\r\n  }\r\n  function _tryWebMIDI() {\r\n    if (_requestMIDIAccess) {\r\n      var self = this;\r\n      var onGood = function(midi) {\r\n        _initWebMIDI(midi);\r\n        self._resume();\r\n      };\r\n      var onBad = function(msg) {\r\n        self._crash(msg);\r\n      };\r\n      var opt = {};\r\n      _requestMIDIAccess.call(_navigator, opt).then(onGood, onBad);\r\n      this._pause();\r\n      return;\r\n    }\r\n    this._break();\r\n  }\r\n  function _tryWebMIDIsysex() {\r\n    if (_requestMIDIAccess) {\r\n      var self = this;\r\n      var onGood = function(midi) {\r\n        _initWebMIDI(midi, true);\r\n        self._resume();\r\n      };\r\n      var onBad = function(msg) {\r\n        self._crash(msg);\r\n      };\r\n      var opt = {sysex:true};\r\n      _requestMIDIAccess.call(_navigator, opt).then(onGood, onBad);\r\n      this._pause();\r\n      return;\r\n    }\r\n    this._break();\r\n  }\r\n  // Web-extension\r\n  function _tryCRX() {\r\n    var self = this;\r\n    var inst;\r\n    var msg;\r\n    function eventHandle() {\r\n      inst = true;\r\n      if (!msg) msg = document.getElementById('jazz-midi-msg');\r\n      if (!msg) return;\r\n      var a = [];\r\n      try { a = JSON.parse(msg.innerText); } catch (err) {}\r\n      msg.innerText = '';\r\n      document.removeEventListener('jazz-midi-msg', eventHandle);\r\n      if (a[0] === 'version') {\r\n        _initCRX(msg, a[2]);\r\n        self._resume();\r\n      }\r\n      else {\r\n        self._crash();\r\n      }\r\n    }\r\n    this._pause();\r\n    document.addEventListener('jazz-midi-msg', eventHandle);\r\n    try { document.dispatchEvent(new Event('jazz-midi')); } catch (err) {}\r\n    _schedule(function() { if (!inst) self._crash(); });\r\n  }\r\n\r\n  function _zeroBreak() {\r\n    this._pause();\r\n    var self = this;\r\n    _schedule(function() { self._crash(); });\r\n  }\r\n\r\n  function _filterEngines(opt) {\r\n    var ret = [];\r\n    var arr = _filterEngineNames(opt);\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i] == 'webmidi') {\r\n        if (opt && opt.sysex === true) ret.push(_tryWebMIDIsysex);\r\n        if (!opt || opt.sysex !== true || opt.degrade === true) ret.push(_tryWebMIDI);\r\n      }\r\n      else if (arr[i] == 'node') { ret.push(_tryNODE); ret.push(_zeroBreak); }\r\n      else if (arr[i] == 'extension') ret.push(_tryCRX);\r\n      else if (arr[i] == 'plugin') ret.push(_tryJazzPlugin);\r\n    }\r\n    ret.push(_initNONE);\r\n    return ret;\r\n  }\r\n\r\n  function _filterEngineNames(opt) {\r\n    var web = ['node', 'extension', 'plugin', 'webmidi'];\r\n    if (!opt || !opt.engine) return web;\r\n    var arr = opt.engine instanceof Array ? opt.engine : [opt.engine];\r\n    var dup = {};\r\n    var none;\r\n    var etc;\r\n    var head = [];\r\n    var tail = [];\r\n    var i;\r\n    for (i = 0; i < arr.length; i++) {\r\n      var name = arr[i].toString().toLowerCase();\r\n      if (dup[name]) continue;\r\n      dup[name] = true;\r\n      if (name === 'none') none = true;\r\n      if (name === 'etc' || typeof name == 'undefined') etc = true;\r\n      if (etc) tail.push(name); else head.push(name);\r\n      _pop(web, name);\r\n    }\r\n    if (etc || head.length || tail.length) none = false;\r\n    return none ? [] : head.concat(etc ? web : tail);\r\n  }\r\n\r\n  function _initJZZ(opt) {\r\n    _initAudioContext();\r\n    _jzz = new _J();\r\n    _jzz._options = opt;\r\n    _jzz._push(_tryAny, [_filterEngines(opt)]);\r\n    _jzz.refresh();\r\n    _jzz._resume();\r\n  }\r\n\r\n  function _initNONE() {\r\n    _engine._type = 'none';\r\n    _engine._version = _version;\r\n    _engine._sysex = true;\r\n    _engine._outs = [];\r\n    _engine._ins = [];\r\n    _engine._refresh = function() { _postRefresh(); };\r\n    _engine._watch = function() {};\r\n    _engine._unwatch = function() {};\r\n    _engine._close = function() {};\r\n  }\r\n  // common initialization for Jazz-Plugin and jazz-midi\r\n  function _initEngineJP() {\r\n    _engine._inArr = [];\r\n    _engine._outArr = [];\r\n    _engine._inMap = {};\r\n    _engine._outMap = {};\r\n    _engine._outsW = [];\r\n    _engine._insW = [];\r\n    _engine._version = _engine._main.version;\r\n    _engine._sysex = true;\r\n    var watcher;\r\n    function _closeAll() {\r\n      for (var i = 0; i < this.clients.length; i++) this._close(this.clients[i]);\r\n    }\r\n    _engine._refresh = function() {\r\n      _engine._outs = [];\r\n      _engine._ins = [];\r\n      var i, x;\r\n      for (i = 0; (x = _engine._main.MidiOutInfo(i)).length; i++) {\r\n        _engine._outs.push({ type: _engine._type, name: x[0], manufacturer: x[1], version: x[2] });\r\n      }\r\n      for (i = 0; (x = _engine._main.MidiInInfo(i)).length; i++) {\r\n        _engine._ins.push({ type: _engine._type, name: x[0], manufacturer: x[1], version: x[2] });\r\n      }\r\n      _postRefresh();\r\n    };\r\n    _engine._openOut = function(port, name) {\r\n      var impl = _engine._outMap[name];\r\n      if (!impl) {\r\n        if (_engine._pool.length <= _engine._outArr.length) _engine._pool.push(_engine._newPlugin());\r\n        impl = {\r\n          name: name,\r\n          clients: [],\r\n          info: {\r\n            name: name,\r\n            manufacturer: _engine._allOuts[name].manufacturer,\r\n            version: _engine._allOuts[name].version,\r\n            type: 'MIDI-out',\r\n            sysex: _engine._sysex,\r\n            engine: _engine._type\r\n          },\r\n          _close: function(port) { _engine._closeOut(port); },\r\n          _closeAll: _closeAll,\r\n          _receive: function(a) { if (a.length) this.plugin.MidiOutRaw(a.slice()); }\r\n        };\r\n        var plugin = _engine._pool[_engine._outArr.length];\r\n        impl.plugin = plugin;\r\n        _engine._outArr.push(impl);\r\n        _engine._outMap[name] = impl;\r\n      }\r\n      if (!impl.open) {\r\n        var s = impl.plugin.MidiOutOpen(name);\r\n        if (s !== name) {\r\n          if (s) impl.plugin.MidiOutClose();\r\n          port._break(); return;\r\n        }\r\n        impl.open = true;\r\n      }\r\n      port._orig._impl = impl;\r\n      _push(impl.clients, port._orig);\r\n      port._info = impl.info;\r\n      port._receive = function(arg) { impl._receive(arg); };\r\n      port._close = function() { impl._close(this); };\r\n    };\r\n    _engine._openIn = function(port, name) {\r\n      var impl = _engine._inMap[name];\r\n      if (!impl) {\r\n        if (_engine._pool.length <= _engine._inArr.length) _engine._pool.push(_engine._newPlugin());\r\n        impl = {\r\n          name: name,\r\n          clients: [],\r\n          info: {\r\n            name: name,\r\n            manufacturer: _engine._allIns[name].manufacturer,\r\n            version: _engine._allIns[name].version,\r\n            type: 'MIDI-in',\r\n            sysex: _engine._sysex,\r\n            engine: _engine._type\r\n          },\r\n          _close: function(port) { _engine._closeIn(port); },\r\n          _closeAll: _closeAll,\r\n          handle: function(t, a) {\r\n            for (var i = 0; i < this.clients.length; i++) {\r\n              var msg = MIDI(a);\r\n              this.clients[i]._emit(msg);\r\n            }\r\n          }\r\n        };\r\n        var makeHandle = function(x) { return function(t, a) { x.handle(t, a); }; };\r\n        impl.onmidi = makeHandle(impl);\r\n        var plugin = _engine._pool[_engine._inArr.length];\r\n        impl.plugin = plugin;\r\n        _engine._inArr.push(impl);\r\n        _engine._inMap[name] = impl;\r\n      }\r\n      if (!impl.open) {\r\n        var s = impl.plugin.MidiInOpen(name, impl.onmidi);\r\n        if (s !== name) {\r\n          if (s) impl.plugin.MidiInClose();\r\n          port._break(); return;\r\n        }\r\n        impl.open = true;\r\n      }\r\n      port._orig._impl = impl;\r\n      _push(impl.clients, port._orig);\r\n      port._info = impl.info;\r\n      port._close = function() { impl._close(this); };\r\n    };\r\n    _engine._closeOut = function(port) {\r\n      var impl = port._impl;\r\n      _pop(impl.clients, port._orig);\r\n      if (!impl.clients.length && impl.open) {\r\n        impl.open = false;\r\n        impl.plugin.MidiOutClose();\r\n      }\r\n    };\r\n    _engine._closeIn = function(port) {\r\n      var impl = port._impl;\r\n      _pop(impl.clients, port._orig);\r\n      if (!impl.clients.length && impl.open) {\r\n        impl.open = false;\r\n        impl.plugin.MidiInClose();\r\n      }\r\n    };\r\n    _engine._close = function() {\r\n      for (var i = 0; i < _engine._inArr.length; i++) if (_engine._inArr[i].open) _engine._inArr[i].plugin.MidiInClose();\r\n      _engine._unwatch();\r\n    };\r\n    _engine._watch = function() {\r\n      if (!watcher) watcher = setInterval(function() { _engine._refresh(); }, 250);\r\n    };\r\n    _engine._unwatch = function() {\r\n      if (watcher) clearInterval(watcher);\r\n      watcher = undefined;\r\n    };\r\n  }\r\n\r\n  function _initNode(obj) {\r\n    _engine._type = 'node';\r\n    _engine._main = obj;\r\n    _engine._pool = [];\r\n    _engine._newPlugin = function() { return new obj.MIDI(); };\r\n    _initEngineJP();\r\n  }\r\n  function _initJazzPlugin(obj) {\r\n    _engine._type = 'plugin';\r\n    _engine._main = obj;\r\n    _engine._pool = [obj];\r\n    _engine._newPlugin = function() {\r\n      var plg = document.createElement('object');\r\n      plg.style.visibility = 'hidden';\r\n      plg.style.width = '0px'; obj.style.height = '0px';\r\n      plg.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';\r\n      plg.type = 'audio/x-jazz';\r\n      document.body.appendChild(plg);\r\n      return plg.isJazz ? plg : undefined;\r\n    };\r\n    _initEngineJP();\r\n  }\r\n  function _initWebMIDI(access, sysex) {\r\n    _engine._type = 'webmidi';\r\n    _engine._version = 43;\r\n    _engine._sysex = !!sysex;\r\n    _engine._access = access;\r\n    _engine._inMap = {};\r\n    _engine._outMap = {};\r\n    _engine._outsW = [];\r\n    _engine._insW = [];\r\n    var watcher;\r\n    function _closeAll() {\r\n      for (var i = 0; i < this.clients.length; i++) this._close(this.clients[i]);\r\n    }\r\n    _engine._refresh = function() {\r\n      _engine._outs = [];\r\n      _engine._ins = [];\r\n      _engine._access.outputs.forEach(function(port) {\r\n        _engine._outs.push({type: _engine._type, name: port.name, manufacturer: port.manufacturer, version: port.version});\r\n      });\r\n      _engine._access.inputs.forEach(function(port) {\r\n        _engine._ins.push({type: _engine._type, name: port.name, manufacturer: port.manufacturer, version: port.version});\r\n      });\r\n      _postRefresh();\r\n    };\r\n    _engine._openOut = function(port, name) {\r\n      var impl = _engine._outMap[name];\r\n      if (!impl) {\r\n        impl = {\r\n          name: name,\r\n          clients: [],\r\n          info: {\r\n            name: name,\r\n            manufacturer: _engine._allOuts[name].manufacturer,\r\n            version: _engine._allOuts[name].version,\r\n            type: 'MIDI-out',\r\n            sysex: _engine._sysex,\r\n            engine: _engine._type\r\n          },\r\n          _close: function(port) { _engine._closeOut(port); },\r\n          _closeAll: _closeAll,\r\n          _receive: function(a) { if (impl.dev && a.length) this.dev.send(a.slice()); }\r\n        };\r\n      }\r\n      var found;\r\n      _engine._access.outputs.forEach(function(dev) {\r\n        if (dev.name === name) found = dev;\r\n      });\r\n      if (found) {\r\n        impl.dev = found;\r\n        _engine._outMap[name] = impl;\r\n        port._orig._impl = impl;\r\n        _push(impl.clients, port._orig);\r\n        port._info = impl.info;\r\n        port._receive = function(arg) { impl._receive(arg); };\r\n        port._close = function() { impl._close(this); };\r\n        if (impl.dev.open) {\r\n          port._pause();\r\n          impl.dev.open().then(function() {\r\n            port._resume();\r\n          }, function() {\r\n            port._crash();\r\n          });\r\n        }\r\n      }\r\n      else port._break();\r\n    };\r\n    _engine._openIn = function(port, name) {\r\n      var impl = _engine._inMap[name];\r\n      if (!impl) {\r\n        impl = {\r\n          name: name,\r\n          clients: [],\r\n          info: {\r\n            name: name,\r\n            manufacturer: _engine._allIns[name].manufacturer,\r\n            version: _engine._allIns[name].version,\r\n            type: 'MIDI-in',\r\n            sysex: _engine._sysex,\r\n            engine: _engine._type\r\n          },\r\n          _close: function(port) { _engine._closeIn(port); },\r\n          _closeAll: _closeAll,\r\n          handle: function(evt) {\r\n            for (var i = 0; i < this.clients.length; i++) {\r\n              var msg = MIDI([].slice.call(evt.data));\r\n              this.clients[i]._emit(msg);\r\n            }\r\n          }\r\n        };\r\n      }\r\n      var found;\r\n      _engine._access.inputs.forEach(function(dev) {\r\n        if (dev.name === name) found = dev;\r\n      });\r\n      if (found) {\r\n        impl.dev = found;\r\n        var makeHandle = function(x) { return function(evt) { x.handle(evt); }; };\r\n        impl.dev.onmidimessage = makeHandle(impl);\r\n        _engine._inMap[name] = impl;\r\n        port._orig._impl = impl;\r\n        _push(impl.clients, port._orig);\r\n        port._info = impl.info;\r\n        port._close = function() { impl._close(this); };\r\n        if (impl.dev.open) {\r\n          port._pause();\r\n          impl.dev.open().then(function() {\r\n            port._resume();\r\n          }, function() {\r\n            port._crash();\r\n          });\r\n        }\r\n      }\r\n      else port._break();\r\n    };\r\n    _engine._closeOut = function(port) {\r\n      var impl = port._impl;\r\n      _pop(impl.clients, port._orig);\r\n      if (!impl.clients.length) {\r\n        if (impl.dev && impl.dev.close) impl.dev.close();\r\n        impl.dev = undefined;\r\n      }\r\n    };\r\n    _engine._closeIn = function(port) {\r\n      var impl = port._impl;\r\n      _pop(impl.clients, port._orig);\r\n      if (!impl.clients.length) {\r\n        if (impl.dev) {\r\n          impl.dev.onmidimessage = null;\r\n          if (impl.dev.close) impl.dev.close();\r\n        }\r\n        impl.dev = undefined;\r\n      }\r\n    };\r\n    _engine._close = function() {\r\n      _engine._unwatch();\r\n    };\r\n    _engine._watch = function() {\r\n      _engine._access.onstatechange = function() {\r\n        watcher = true;\r\n        _schedule(function() {\r\n          if (watcher) {\r\n            _engine._refresh();\r\n            watcher = false;\r\n          }\r\n        });\r\n      };\r\n    };\r\n    _engine._unwatch = function() {\r\n      _engine._access.onstatechange = undefined;\r\n    };\r\n  }\r\n  function _initCRX(msg, ver) {\r\n    _engine._type = 'extension';\r\n    _engine._version = ver;\r\n    _engine._sysex = true;\r\n    _engine._pool = [];\r\n    _engine._outs = [];\r\n    _engine._ins = [];\r\n    _engine._inArr = [];\r\n    _engine._outArr = [];\r\n    _engine._inMap = {};\r\n    _engine._outMap = {};\r\n    _engine._outsW = [];\r\n    _engine._insW = [];\r\n    _engine.refreshClients = [];\r\n    _engine._msg = msg;\r\n    _engine._newPlugin = function() {\r\n      var plugin = { id: _engine._pool.length };\r\n      _engine._pool.push(plugin);\r\n      if (!plugin.id) plugin.ready = true;\r\n      else document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['new'] }));\r\n    };\r\n    _engine._newPlugin();\r\n    _engine._refresh = function(client) {\r\n      _engine.refreshClients.push(client);\r\n      client._pause();\r\n      _schedule(function() {\r\n        document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['refresh'] }));\r\n      });\r\n    };\r\n    function _closeAll() {\r\n      for (var i = 0; i < this.clients.length; i++) this._close(this.clients[i]);\r\n    }\r\n    _engine._openOut = function(port, name) {\r\n      var impl = _engine._outMap[name];\r\n      if (!impl) {\r\n        if (_engine._pool.length <= _engine._outArr.length) _engine._newPlugin();\r\n        var plugin = _engine._pool[_engine._outArr.length];\r\n        impl = {\r\n          name: name,\r\n          clients: [],\r\n          info: {\r\n            name: name,\r\n            manufacturer: _engine._allOuts[name].manufacturer,\r\n            version: _engine._allOuts[name].version,\r\n            type: 'MIDI-out',\r\n            sysex: _engine._sysex,\r\n            engine: _engine._type\r\n          },\r\n          _start: function() { document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['openout', plugin.id, name] })); },\r\n          _close: function(port) { _engine._closeOut(port); },\r\n          _closeAll: _closeAll,\r\n          _receive: function(a) { if (a.length) { var v = a.slice(); v.splice(0, 0, 'play', plugin.id); document.dispatchEvent(new CustomEvent('jazz-midi', {detail: v})); } }\r\n        };\r\n        impl.plugin = plugin;\r\n        plugin.output = impl;\r\n        _engine._outArr.push(impl);\r\n        _engine._outMap[name] = impl;\r\n      }\r\n      port._orig._impl = impl;\r\n      _push(impl.clients, port._orig);\r\n      port._info = impl.info;\r\n      port._receive = function(arg) { impl._receive(arg); };\r\n      port._close = function() { impl._close(this); };\r\n      if (!impl.open) {\r\n        port._pause();\r\n        if (impl.plugin.ready) impl._start();\r\n      }\r\n    };\r\n    _engine._openIn = function(port, name) {\r\n      var impl = _engine._inMap[name];\r\n      if (!impl) {\r\n        if (_engine._pool.length <= _engine._inArr.length) _engine._newPlugin();\r\n        var plugin = _engine._pool[_engine._inArr.length];\r\n        impl = {\r\n          name: name,\r\n          clients: [],\r\n          info: {\r\n            name: name,\r\n            manufacturer: _engine._allIns[name].manufacturer,\r\n            version: _engine._allIns[name].version,\r\n            type: 'MIDI-in',\r\n            sysex: _engine._sysex,\r\n            engine: _engine._type\r\n          },\r\n          _start: function() { document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['openin', plugin.id, name] })); },\r\n          _close: function(port) { _engine._closeIn(port); },\r\n          _closeAll: _closeAll\r\n        };\r\n        impl.plugin = plugin;\r\n        plugin.input = impl;\r\n        _engine._inArr.push(impl);\r\n        _engine._inMap[name] = impl;\r\n      }\r\n      port._orig._impl = impl;\r\n      _push(impl.clients, port._orig);\r\n      port._info = impl.info;\r\n      port._close = function() { impl._close(this); };\r\n      if (!impl.open) {\r\n        port._pause();\r\n        if (impl.plugin.ready) impl._start();\r\n      }\r\n    };\r\n    _engine._closeOut = function(port) {\r\n      var impl = port._impl;\r\n      _pop(impl.clients, port._orig);\r\n      if (!impl.clients.length && impl.open) {\r\n        impl.open = false;\r\n        document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['closeout', impl.plugin.id] }));\r\n      }\r\n    };\r\n    _engine._closeIn = function(port) {\r\n      var impl = port._impl;\r\n      _pop(impl.clients, port._orig);\r\n      if (!impl.clients.length && impl.open) {\r\n        impl.open = false;\r\n        document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['closein', impl.plugin.id] }));\r\n      }\r\n    };\r\n    _engine._close = function() {\r\n      _engine._unwatch();\r\n    };\r\n    var watcher;\r\n    _engine._watch = function() {\r\n      _engine._insW = _engine._ins;\r\n      _engine._outsW = _engine._outs;\r\n      watcher = setInterval(function() {\r\n        document.dispatchEvent(new CustomEvent('jazz-midi', {detail:['refresh']}));\r\n      }, 250);\r\n    };\r\n    _engine._unwatch = function() {\r\n      clearInterval(watcher);\r\n      watcher = undefined;\r\n    };\r\n    document.addEventListener('jazz-midi-msg', function() {\r\n      var v = _engine._msg.innerText.split('\\n');\r\n      var impl, i, j;\r\n      _engine._msg.innerText = '';\r\n      for (i = 0; i < v.length; i++) {\r\n        var a = [];\r\n        try { a = JSON.parse(v[i]); } catch (err) {}\r\n        if (!a.length) continue;\r\n        if (a[0] === 'refresh') {\r\n          if (a[1].ins) {\r\n            for (j = 0; j < a[1].ins.length; j++) a[1].ins[j].type = _engine._type;\r\n            _engine._ins = a[1].ins;\r\n          }\r\n          if (a[1].outs) {\r\n            for (j = 0; j < a[1].outs.length; j++) a[1].outs[j].type = _engine._type;\r\n            _engine._outs = a[1].outs;\r\n          }\r\n          _postRefresh();\r\n          for (j = 0; j < _engine.refreshClients.length; j++) _engine.refreshClients[j]._resume();\r\n          _engine.refreshClients = [];\r\n        }\r\n        else if (a[0] === 'version') {\r\n          var plugin = _engine._pool[a[1]];\r\n          if (plugin) {\r\n            plugin.ready = true;\r\n            if (plugin.input) plugin.input._start();\r\n            if (plugin.output) plugin.output._start();\r\n          }\r\n        }\r\n        else if (a[0] === 'openout') {\r\n          impl = _engine._pool[a[1]].output;\r\n          if (impl) {\r\n            if (a[2] == impl.name) {\r\n              impl.open = true;\r\n              if (impl.clients) for (j = 0; j < impl.clients.length; j++) impl.clients[j]._resume();\r\n            }\r\n            else if (impl.clients) for (j = 0; j < impl.clients.length; j++) impl.clients[j]._crash();\r\n          }\r\n        }\r\n        else if (a[0] === 'openin') {\r\n          impl = _engine._pool[a[1]].input;\r\n          if (impl) {\r\n            if (a[2] == impl.name) {\r\n              impl.open = true;\r\n              if (impl.clients) for (j = 0; j < impl.clients.length; j++) impl.clients[j]._resume();\r\n            }\r\n            else if (impl.clients) for (j = 0; j < impl.clients.length; j++) impl.clients[j]._crash();\r\n          }\r\n        }\r\n        else if (a[0] === 'midi') {\r\n          impl = _engine._pool[a[1]].input;\r\n          if (impl && impl.clients) {\r\n            for (j = 0; j < impl.clients.length; j++) {\r\n              var msg = MIDI(a.slice(3));\r\n              impl.clients[j]._emit(msg);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  var JZZ = function(opt) {\r\n    if (!_jzz) _initJZZ(opt);\r\n    return _jzz._thenable();\r\n  };\r\n  JZZ.JZZ = JZZ;\r\n  JZZ.version = _version;\r\n  JZZ.info = function() { return _J.prototype.info(); };\r\n  JZZ.Widget = function(arg) {\r\n    var obj = new _M();\r\n    if (arg instanceof Object) for (var k in arg) if (arg.hasOwnProperty(k)) obj[k] = arg[k];\r\n    obj._resume();\r\n    return obj;\r\n  };\r\n  _J.prototype.Widget = JZZ.Widget;\r\n  JZZ.addMidiIn = function(name, widget) {\r\n    var info = _clone(widget._info || {});\r\n    info.name = name;\r\n    info.type = info.type || 'javascript';\r\n    info.manufacturer = info.manufacturer || 'virtual';\r\n    info.version = info.version || '0.0';\r\n    var engine = {\r\n      _info: function() { return info; },\r\n      _openIn: function(port) {\r\n        port._pause();\r\n        port._info = _clone(info);\r\n        port._close = function() { widget.disconnect(port); };\r\n        widget.connect(port);\r\n        port._resume();\r\n      }\r\n    };\r\n    return JZZ.lib.registerMidiIn(name, engine);\r\n  };\r\n  JZZ.addMidiOut = function(name, widget) {\r\n    var info = _clone(widget._info || {});\r\n    info.name = name;\r\n    info.type = info.type || 'javascript';\r\n    info.manufacturer = info.manufacturer || 'virtual';\r\n    info.version = info.version || '0.0';\r\n    var engine = {\r\n      _info: function() { return info; },\r\n      _openOut: function(port) {\r\n        port._pause();\r\n        port._info = _clone(info);\r\n        port._close = function() { port.disconnect(); };\r\n        _connect.apply(port, [widget]);\r\n        port._resume();\r\n      }\r\n    };\r\n    return JZZ.lib.registerMidiOut(name, engine);\r\n  };\r\n\r\n  // JZZ.SMPTE\r\n\r\n  function SMPTE() {\r\n    var self = this instanceof SMPTE ? this : self = new SMPTE();\r\n    SMPTE.prototype.reset.apply(self, arguments);\r\n    return self;\r\n  }\r\n  SMPTE.prototype.reset = function(arg) {\r\n    if (arg instanceof SMPTE) {\r\n      this.setType(arg.getType());\r\n      this.setHour(arg.getHour());\r\n      this.setMinute(arg.getMinute());\r\n      this.setSecond(arg.getSecond());\r\n      this.setFrame(arg.getFrame());\r\n      this.setQuarter(arg.getQuarter());\r\n      return this;\r\n    }\r\n    var arr = arg instanceof Array ? arg : arguments;\r\n    this.setType(arr[0]);\r\n    this.setHour(arr[1]);\r\n    this.setMinute(arr[2]);\r\n    this.setSecond(arr[3]);\r\n    this.setFrame(arr[4]);\r\n    this.setQuarter(arr[5]);\r\n    return this;\r\n  };\r\n  function _fixDropFrame() { if (this.type == 29.97 && !this.second && this.frame < 2 && this.minute % 10) this.frame = 2; }\r\n  SMPTE.prototype.isFullFrame = function() { return this.quarter == 0 || this.quarter == 4; };\r\n  SMPTE.prototype.getType = function() { return this.type; };\r\n  SMPTE.prototype.getHour = function() { return this.hour; };\r\n  SMPTE.prototype.getMinute = function() { return this.minute; };\r\n  SMPTE.prototype.getSecond = function() { return this.second; };\r\n  SMPTE.prototype.getFrame = function() { return this.frame; };\r\n  SMPTE.prototype.getQuarter = function() { return this.quarter; };\r\n  SMPTE.prototype.setType = function(x) {\r\n    if (typeof x == 'undefined' || x == 24) this.type = 24;\r\n    else if (x == 25) this.type = 25;\r\n    else if (x == 29.97) { this.type = 29.97; _fixDropFrame.apply(this); }\r\n    else if (x == 30) this.type = 30;\r\n    else throw RangeError('Bad SMPTE frame rate: ' + x);\r\n    if (this.frame >= this.type) this.frame = this.type - 1; // could not be more than 29\r\n    return this;\r\n  };\r\n  SMPTE.prototype.setHour = function(x) {\r\n    if (typeof x == 'undefined') x = 0;\r\n    if (x != parseInt(x) || x < 0 || x >= 24) throw RangeError('Bad SMPTE hours value: ' + x);\r\n    this.hour = x;\r\n    return this;\r\n  };\r\n  SMPTE.prototype.setMinute = function(x) {\r\n    if (typeof x == 'undefined') x = 0;\r\n    if (x != parseInt(x) || x < 0 || x >= 60) throw RangeError('Bad SMPTE minutes value: ' + x);\r\n    this.minute = x;\r\n    _fixDropFrame.apply(this);\r\n    return this;\r\n  };\r\n  SMPTE.prototype.setSecond = function(x) {\r\n    if (typeof x == 'undefined') x = 0;\r\n    if (x != parseInt(x) || x < 0 || x >= 60) throw RangeError('Bad SMPTE seconds value: ' + x);\r\n    this.second = x;\r\n    _fixDropFrame.apply(this);\r\n    return this;\r\n  };\r\n  SMPTE.prototype.setFrame = function(x) {\r\n    if (typeof x == 'undefined') x = 0;\r\n    if (x != parseInt(x) || x < 0 || x >= this.type) throw RangeError('Bad SMPTE frame number: ' + x);\r\n    this.frame = x;\r\n    _fixDropFrame.apply(this);\r\n    return this;\r\n  };\r\n  SMPTE.prototype.setQuarter = function(x) {\r\n    if (typeof x == 'undefined') x = 0;\r\n    if (x != parseInt(x) || x < 0 || x >= 8) throw RangeError('Bad SMPTE quarter frame: ' + x);\r\n    this.quarter = x;\r\n    return this;\r\n  };\r\n  SMPTE.prototype.incrFrame = function() {\r\n    this.frame++;\r\n    if (this.frame >= this.type) {\r\n      this.frame = 0;\r\n      this.second++;\r\n      if (this.second >= 60) {\r\n        this.second = 0;\r\n        this.minute++;\r\n        if (this.minute >= 60) {\r\n          this.minute = 0;\r\n          this.hour = this.hour >= 23 ? 0 : this.hour + 1;\r\n        }\r\n      }\r\n    }\r\n    _fixDropFrame.apply(this);\r\n    return this;\r\n  };\r\n  SMPTE.prototype.decrFrame = function() {\r\n    if (!this.second && this.frame == 2 && this.type == 29.97 && this.minute % 10) this.frame = 0; // drop-frame\r\n    this.frame--;\r\n    if (this.frame < 0) {\r\n      this.frame = this.type == 29.97 ? 29 : this.type - 1;\r\n      this.second--;\r\n      if (this.second < 0) {\r\n        this.second = 59;\r\n        this.minute--;\r\n        if (this.minute < 0) {\r\n          this.minute = 59;\r\n          this.hour = this.hour ? this.hour - 1 : 23;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n  SMPTE.prototype.incrQF = function() {\r\n    this.backwards = false;\r\n    this.quarter = (this.quarter + 1) & 7;\r\n    if (this.quarter == 0 || this.quarter == 4) this.incrFrame();\r\n    return this;\r\n  };\r\n  SMPTE.prototype.decrQF = function() {\r\n    this.backwards = true;\r\n    this.quarter = (this.quarter + 7) & 7;\r\n    if (this.quarter == 3 || this.quarter == 7) this.decrFrame();\r\n    return this;\r\n  };\r\n  function _825(a) { return [[24, 25, 29.97, 30][(a[7] >> 1) & 3], ((a[7] & 1) << 4) | a[6], (a[5] << 4) | a[4], (a[3] << 4) | a[2], (a[1] << 4) | a[0]]; }\r\n  SMPTE.prototype.read = function(m) {\r\n    if (!(m instanceof MIDI)) m = MIDI.apply(null, arguments);\r\n    if (m[0] == 0xf0 && m[1] == 0x7f && m[3] == 1 && m[4] == 1 && m[9] == 0xf7) {\r\n      this.type = [24, 25, 29.97, 30][(m[5] >> 5) & 3];\r\n      this.hour = m[5] & 31;\r\n      this.minute = m[6];\r\n      this.second = m[7];\r\n      this.frame = m[8];\r\n      this.quarter = 0;\r\n      this._ = undefined;\r\n      this._b = undefined;\r\n      this._f = undefined;\r\n      return true;\r\n    }\r\n    if (m[0] == 0xf1 && typeof m[1] != 'undefined') {\r\n      var q = m[1] >> 4;\r\n      var n = m[1] & 15;\r\n      if (q == 0) {\r\n        if (this._ == 7) {\r\n          if (this._f == 7) {\r\n            this.reset(_825(this._a));\r\n            this.incrFrame();\r\n          }\r\n          this.incrFrame();\r\n        }\r\n      }\r\n      else if (q == 3) {\r\n        if (this._ == 4) {\r\n          this.decrFrame();\r\n        }\r\n      }\r\n      else if (q == 4) {\r\n        if (this._ == 3) {\r\n          this.incrFrame();\r\n        }\r\n      }\r\n      else if (q == 7) {\r\n        if (this._ === 0) {\r\n          if (this._b === 0) {\r\n            this.reset(_825(this._a));\r\n            this.decrFrame();\r\n          }\r\n          this.decrFrame();\r\n        }\r\n      }\r\n      if (!this._a) this._a = [];\r\n      this._a[q] = n;\r\n      this._f = this._f === q - 1 || q == 0 ? q : undefined;\r\n      this._b = this._b === q + 1 || q == 7 ? q : undefined;\r\n      this._ = q;\r\n      this.quarter = q;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  function _mtc(t) {\r\n    if (!t.backwards && t.quarter >= 4) t.decrFrame(); // continue encoding previous frame\r\n    else if (t.backwards && t.quarter < 4) t.incrFrame();\r\n    var ret;\r\n    switch (t.quarter >> 1) {\r\n      case 0: ret = t.frame; break;\r\n      case 1: ret = t.second; break;\r\n      case 2: ret = t.minute; break;\r\n      default: ret = t.hour;\r\n    }\r\n    if (t.quarter & 1) ret >>= 4;\r\n    else ret &= 15;\r\n    if (t.quarter == 7) {\r\n      if (t.type == 25) ret |= 2;\r\n      else if (t.type == 29.97) ret |= 4;\r\n      else if (t.type == 30) ret |= 6;\r\n    }\r\n    // restore original t\r\n    if (!t.backwards && t.quarter >= 4) t.incrFrame();\r\n    else if (t.backwards && t.quarter < 4) t.decrFrame();\r\n    return ret | (t.quarter << 4);\r\n  }\r\n  function _hrtype(t) {\r\n    if (t.type == 25) return t.hour | 0x20;\r\n    if (t.type == 29.97) return t.hour | 0x40;\r\n    if (t.type == 30) return t.hour | 0x60;\r\n    return t.hour;\r\n  }\r\n  function _dec(x) { return x < 10 ? '0' + x : x; }\r\n  function _smptetxt(x) {\r\n    var arr = [];\r\n    for (var i = 0; i < x.length; i++) arr[i] = _dec(x[i]);\r\n    return arr.join(':');\r\n  }\r\n  SMPTE.prototype.toString = function() { return _smptetxt([this.hour, this.minute, this.second, this.frame]); };\r\n  JZZ.SMPTE = SMPTE;\r\n\r\n  // JZZ.MIDI\r\n\r\n  function MIDI(arg) {\r\n    var self = this instanceof MIDI ? this : self = new MIDI();\r\n    var i;\r\n    if (arg instanceof MIDI) {\r\n      self._from = arg._from.slice();\r\n      for (i in arg) if (arg.hasOwnProperty(i) && i != '_from') self[i] = arg[i];\r\n      return self;\r\n    }\r\n    else self._from = [];\r\n    if (typeof arg == 'undefined') return self;\r\n    var arr = arg instanceof Array ? arg : arguments;\r\n    for (i = 0; i < arr.length; i++) {\r\n      n = arr[i];\r\n      if (i == 1) {\r\n        if (self[0] >= 0x80 && self[0] <= 0xAF) n = MIDI.noteValue(n);\r\n        if (self[0] >= 0xC0 && self[0] <= 0xCF) n = MIDI.programValue(n);\r\n      }\r\n      if (n != parseInt(n) || n < 0 || n > 255) _throw(arr[i]);\r\n      self.push(n);\r\n    }\r\n    return self;\r\n  }\r\n  MIDI.prototype = [];\r\n  MIDI.prototype.constructor = MIDI;\r\n  var _noteNum = {};\r\n  MIDI.noteValue = function(x) { return typeof x == 'undefined' ? undefined : _noteNum[x.toString().toLowerCase()]; };\r\n  MIDI.programValue = function(x) { return x; };\r\n  MIDI.freq = function(n, a) {\r\n    if (typeof a == 'undefined') a = 440.0;\r\n    return (a * Math.pow(2, (_7b(MIDI.noteValue(n), n) - 69.0) / 12.0));\r\n  };\r\n  MIDI.shift = function(f, f0) {\r\n    if (typeof f0 == 'undefined') f0 = 440;\r\n    return Math.log2(f / f0) * 12;\r\n  };\r\n  MIDI.to14b = function(x) { return x <= 0 ? 0 : x >= 1 ? 0x3fff : Math.floor(x * 0x4000); };\r\n\r\n  var _noteMap = { c:0, d:2, e:4, f:5, g:7, a:9, b:11, h:11 };\r\n  for (k in _noteMap) {\r\n    if (!_noteMap.hasOwnProperty(k)) continue;\r\n    for (n = 0; n < 12; n++) {\r\n      m = _noteMap[k] + n * 12;\r\n      if (m > 127) break;\r\n      _noteNum[k+n] = m;\r\n      if (m > 0) { _noteNum[k + 'b' + n] = m - 1; _noteNum[k + 'bb' + n] = m - 2; }\r\n      if (m < 127) { _noteNum[k + '#' + n] = m + 1; _noteNum[k + '##' + n] = m + 2; }\r\n    }\r\n  }\r\n  for (n = 0; n < 128; n++) _noteNum[n] = n;\r\n  function _throw(x) { throw RangeError('Bad MIDI value: ' + x); }\r\n  function _ch(c) { _validateChannel(c); return parseInt(c); }\r\n  function _7b(n, m) { if (n != parseInt(n) || n < 0 || n > 0x7f) _throw(typeof m == 'undefined' ? n : m); return parseInt(n); }\r\n  function _8b(n, m) { if (n != parseInt(n) || n < 0 || n > 0xff) _throw(typeof m == 'undefined' ? n : m); return parseInt(n); }\r\n  function _lsb(n) { if (n != parseInt(n) || n < 0 || n > 0x3fff) _throw(n); return parseInt(n) & 0x7f; }\r\n  function _msb(n) { if (n != parseInt(n) || n < 0 || n > 0x3fff) _throw(n); return parseInt(n) >> 7; }\r\n  function _8bs(s) { s = '' + s; for (var i = 0; i < s.length; i++) if (s.charCodeAt(i) > 255) _throw(s[i]); return s; }\r\n  var _helperCH = {\r\n    noteOff: function(c, n, v) { if (typeof v == 'undefined') v = 64; return [0x80 + _ch(c), _7b(MIDI.noteValue(n), n), _7b(v)]; },\r\n    noteOn: function(c, n, v) { if (typeof v == 'undefined') v = 127; return [0x90 + _ch(c), _7b(MIDI.noteValue(n), n), _7b(v)]; },\r\n    aftertouch: function(c, n, v) { return [0xA0 + _ch(c), _7b(MIDI.noteValue(n), n), _7b(v)]; },\r\n    control: function(c, n, v) { return [0xB0 + _ch(c), _7b(n), _7b(v)]; },\r\n    program: function(c, n) { return [0xC0 + _ch(c), _7b(MIDI.programValue(n), n)]; },\r\n    pressure: function(c, n) { return [0xD0 + _ch(c), _7b(n)]; },\r\n    pitchBend: function(c, n, l) { return typeof l == 'undefined' ? [0xE0 + _ch(c), _lsb(n), _msb(n)] : [0xE0 + _ch(c), _7b(l), _7b(n)]; },\r\n    pitchBendF: function(c, x) { return _helperCH.pitchBend(c, MIDI.to14b((x + 1) / 2)); },\r\n    bankMSB: function(c, n) { return [0xB0 + _ch(c), 0x00, _7b(n)]; },\r\n    bankLSB: function(c, n) { return [0xB0 + _ch(c), 0x20, _7b(n)]; },\r\n    modMSB: function(c, n) { return [0xB0 + _ch(c), 0x01, _7b(n)]; },\r\n    modLSB: function(c, n) { return [0xB0 + _ch(c), 0x21, _7b(n)]; },\r\n    breathMSB: function(c, n) { return [0xB0 + _ch(c), 0x02, _7b(n)]; },\r\n    breathLSB: function(c, n) { return [0xB0 + _ch(c), 0x22, _7b(n)]; },\r\n    footMSB: function(c, n) { return [0xB0 + _ch(c), 0x04, _7b(n)]; },\r\n    footLSB: function(c, n) { return [0xB0 + _ch(c), 0x24, _7b(n)]; },\r\n    portamentoMSB: function(c, n) { return [0xB0 + _ch(c), 0x05, _7b(n)]; },\r\n    portamentoLSB: function(c, n) { return [0xB0 + _ch(c), 0x25, _7b(n)]; },\r\n    dataMSB: function(c, n) { return [0xB0 + _ch(c), 0x06, _7b(n)]; },\r\n    dataLSB: function(c, n) { return [0xB0 + _ch(c), 0x26, _7b(n)]; },\r\n    volumeMSB: function(c, n) { return [0xB0 + _ch(c), 0x07, _7b(n)]; },\r\n    volumeLSB: function(c, n) { return [0xB0 + _ch(c), 0x27, _7b(n)]; },\r\n    balanceMSB: function(c, n) { return [0xB0 + _ch(c), 0x08, _7b(n)]; },\r\n    balanceLSB: function(c, n) { return [0xB0 + _ch(c), 0x28, _7b(n)]; },\r\n    panMSB: function(c, n) { return [0xB0 + _ch(c), 0x0A, _7b(n)]; },\r\n    panLSB: function(c, n) { return [0xB0 + _ch(c), 0x2A, _7b(n)]; },\r\n    expressionMSB: function(c, n) { return [0xB0 + _ch(c), 0x0B, _7b(n)]; },\r\n    expressionLSB: function(c, n) { return [0xB0 + _ch(c), 0x2B, _7b(n)]; },\r\n    damper: function(c, b) { return [0xB0 + _ch(c), 0x40, b ? 127 : 0]; },\r\n    portamento: function(c, b) { return [0xB0 + _ch(c), 0x41, b ? 127 : 0]; },\r\n    sostenuto: function(c, b) { return [0xB0 + _ch(c), 0x42, b ? 127 : 0]; },\r\n    soft: function(c, b) { return [0xB0 + _ch(c), 0x43, b ? 127 : 0]; },\r\n    dataIncr: function(c) { return [0xB0 + _ch(c), 0x60, 0]; },\r\n    dataDecr: function(c) { return [0xB0 + _ch(c), 0x61, 0]; },\r\n    nrpnLSB: function(c, n) { return [0xB0 + _ch(c), 0x62, _7b(n)]; },\r\n    nrpnMSB: function(c, n) { return [0xB0 + _ch(c), 0x63, _7b(n)]; },\r\n    rpnLSB: function(c, n) { return [0xB0 + _ch(c), 0x64, _7b(n)]; },\r\n    rpnMSB: function(c, n) { return [0xB0 + _ch(c), 0x65, _7b(n)]; },\r\n    allSoundOff: function(c) { return [0xB0 + _ch(c), 0x78, 0]; },\r\n    allNotesOff: function(c) { return [0xB0 + _ch(c), 0x7b, 0]; },\r\n  };\r\n  var _helperNC = { // no channel\r\n    mtc: function(t) { return [0xF1, _mtc(t)]; },\r\n    songPosition: function(n, l) { return typeof l == 'undefined' ? [0xF2, _lsb(n), _msb(n)] : [0xF2, _7b(l), _7b(n)]; },\r\n    songSelect: function(n) { return [0xF3, _7b(n)]; },\r\n    tune: function() { return [0xF6]; },\r\n    clock: function() { return [0xF8]; },\r\n    start: function() { return [0xFA]; },\r\n    continue: function() { return [0xFB]; },\r\n    stop: function() { return [0xFC]; },\r\n    active: function() { return [0xFE]; },\r\n    sxIdRequest: function() { return [0xF0, 0x7E, 0x7F, 0x06, 0x01, 0xF7]; },\r\n    sxFullFrame: function(t) { return [0xF0, 0x7F, 0x7F, 0x01, 0x01, _hrtype(t), t.getMinute(), t.getSecond(), t.getFrame(), 0xF7]; },\r\n    sxMasterVolume: function(x) { x = MIDI.to14b(x); return [0xF0, 0x7F, 0x7F, 0x04, 0x01, _lsb(x), _msb(x), 0xF7]; },\r\n    sxMasterFineTuning: function(x) { x = MIDI.to14b((x % 1 + 1) / 2); return [0xF0, 0x7F, 0x7F, 0x04, 0x03, _lsb(x), _msb(x), 0xF7]; },\r\n    sxMasterCoarseTuning: function(x) { return [0xF0, 0x7F, 0x7F, 0x04, 0x04, 0x00, 0x40 + x - x % 1, 0xF7]; },\r\n    reset: function() { return [0xFF]; },\r\n  };\r\n  var _helperG = { // compound messages\r\n    bank: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.bankMSB(c, _msb(m)), _helperCH.bankLSB(c, _lsb(m))] : [_helperCH.bankMSB(c, m), _helperCH.bankLSB(c, l)]; },\r\n    modF: function(c, x) { return _helperG.mod(c, MIDI.to14b(x)); },\r\n    mod: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.modMSB(c, _msb(m)), _helperCH.modLSB(c, _lsb(m))] : [_helperCH.modMSB(c, m), _helperCH.modLSB(c, l)]; },\r\n    breathF: function(c, x) { return _helperG.breath(c, MIDI.to14b(x)); },\r\n    breath: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.breathMSB(c, _msb(m)), _helperCH.breathLSB(c, _lsb(m))] : [_helperCH.breathMSB(c, m), _helperCH.breathLSB(c, l)]; },\r\n    footF: function(c, x) { return _helperG.foot(c, MIDI.to14b(x)); },\r\n    foot: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.footMSB(c, _msb(m)), _helperCH.footLSB(c, _lsb(m))] : [_helperCH.footMSB(c, m), _helperCH.footLSB(c, l)]; },\r\n    portamentoTimeF: function(c, x) { return _helperG.portamentoTime(c, MIDI.to14b(x)); },\r\n    portamentoTime: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.portamentoMSB(c, _msb(m)), _helperCH.portamentoLSB(c, _lsb(m))] : [_helperCH.portamentoMSB(c, m), _helperCH.portamentoLSB(c, l)]; },\r\n    dataF: function(c, x) { return _helperG.data(c, MIDI.to14b(x)); },\r\n    data: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.dataMSB(c, _msb(m)), _helperCH.dataLSB(c, _lsb(m))] : [_helperCH.dataMSB(c, m), _helperCH.dataLSB(c, l)]; },\r\n    volumeF: function(c, x) { return _helperG.volume(c, MIDI.to14b(x)); },\r\n    volume: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.volumeMSB(c, _msb(m)), _helperCH.volumeLSB(c, _lsb(m))] : [_helperCH.volumeMSB(c, m), _helperCH.volumeLSB(c, l)]; },\r\n    balanceF: function(c, x) { return _helperG.balance(c, MIDI.to14b((x + 1) / 2)); },\r\n    balance: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.balanceMSB(c, _msb(m)), _helperCH.balanceLSB(c, _lsb(m))] : [_helperCH.balanceMSB(c, m), _helperCH.balanceLSB(c, l)]; },\r\n    panF: function(c, x) { return _helperG.pan(c, MIDI.to14b((x + 1) / 2)); },\r\n    pan: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.panMSB(c, _msb(m)), _helperCH.panLSB(c, _lsb(m))] : [_helperCH.panMSB(c, m), _helperCH.panLSB(c, l)]; },\r\n    expressionF: function(c, x) { return _helperG.expression(c, MIDI.to14b(x)); },\r\n    expression: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.expressionMSB(c, _msb(m)), _helperCH.expressionLSB(c, _lsb(m))] : [_helperCH.expressionMSB(c, m), _helperCH.expressionLSB(c, l)]; },\r\n    nrpn: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.nrpnMSB(c, _msb(m)), _helperCH.nrpnLSB(c, _lsb(m))] : [_helperCH.nrpnMSB(c, m), _helperCH.nrpnLSB(c, l)]; },\r\n    rpn: function(c, m, l) { return typeof l == 'undefined' ?\r\n      [_helperCH.rpnMSB(c, _msb(m)), _helperCH.rpnLSB(c, _lsb(m))] : [_helperCH.rpnMSB(c, m), _helperCH.rpnLSB(c, l)]; },\r\n    rpnPitchBendRange: function(c, x) { return _helperG.rpn(c, 0, 0).concat(_helperG.data(c, _7b(x - x % 1), Math.floor((x % 1) * 128))); },\r\n    rpnFineTuning: function(c, x) { return _helperG.rpn(c, 0, 1).concat(_helperG.dataF(c, (x % 1 + 1) / 2)); },\r\n    rpnCoarseTuning: function(c, x) { return _helperG.rpn(c, 0, 2).concat([_helperCH.dataMSB(c, 0x40 + x - x % 1)]); },\r\n    rpnTuning: function(c, x) { return _helperG.rpnCoarseTuning(c, x).concat(_helperG.rpnFineTuning(c, x)); },\r\n    rpnTuningA: function(c, a) { return _helperG.rpnTuning(c, MIDI.shift(a)); },\r\n  };\r\n  var _helperGNC = { // compound messages no channel\r\n    sxMasterTuning: function(x) { return [_helperNC.sxMasterCoarseTuning(x), _helperNC.sxMasterFineTuning(x)]; },\r\n    sxMasterTuningA: function(a) { return _helperGNC.sxMasterTuning(MIDI.shift(a)); },\r\n  };\r\n  function _smf(ff, dd) {\r\n    var midi = new MIDI();\r\n    midi.ff = _8b(ff);\r\n    midi.dd = typeof dd == 'undefined' ? '' : _8bs(dd);\r\n    return midi;\r\n  }\r\n  var _helperSMF = { // Standard MIDI File events\r\n    smf: function(arg) {\r\n      if (arg instanceof MIDI) return new MIDI(arg);\r\n      var arr = arg instanceof Array ? arg : arguments;\r\n      var ff = _8b(arr[0]);\r\n      var dd = '';\r\n      if (arr.length == 2) dd = _2s(arr[1]);\r\n      else if (arr.length > 2) dd = _2s(Array.prototype.slice.call(arr, 1));\r\n      return _smf(ff, dd);\r\n    },\r\n    smfSeqNumber: function(dd) {\r\n      if (dd == parseInt(dd)) {\r\n        if (dd < 0 || dd > 0xffff) throw RangeError('Sequence number out of range: ' + dd);\r\n        dd = String.fromCharCode(dd >> 8) + String.fromCharCode(dd & 0xff);\r\n      }\r\n      else {\r\n        dd = '' + dd;\r\n        if (dd.length == 0) dd = '\\x00\\x00';\r\n        else if (dd.length == 1) dd = '\\x00' + dd;\r\n        else if (dd.length > 2) throw RangeError('Sequence number out of range: ' + _smftxt(dd));\r\n      }\r\n      return _smf(0, dd);\r\n    },\r\n    smfText: function(dd) { return _smf(1, JZZ.lib.toUTF8(dd)); },\r\n    smfCopyright: function(dd) { return _smf(2, JZZ.lib.toUTF8(dd)); },\r\n    smfSeqName: function(dd) { return _smf(3, JZZ.lib.toUTF8(dd)); },\r\n    smfInstrName: function(dd) { return _smf(4, JZZ.lib.toUTF8(dd)); },\r\n    smfLyric: function(dd) { return _smf(5, JZZ.lib.toUTF8(dd)); },\r\n    smfMarker: function(dd) { return _smf(6, JZZ.lib.toUTF8(dd)); },\r\n    smfCuePoint: function(dd) { return _smf(7, JZZ.lib.toUTF8(dd)); },\r\n    smfProgName: function(dd) { return _smf(8, JZZ.lib.toUTF8(dd)); },\r\n    smfDevName: function(dd) { return _smf(9, JZZ.lib.toUTF8(dd)); },\r\n    smfChannelPrefix: function(dd) {\r\n      if (dd == parseInt(dd)) {\r\n        _validateChannel(dd);\r\n        dd = String.fromCharCode(dd);\r\n      }\r\n      else {\r\n        dd = '' + dd;\r\n        if (dd.length == 0) dd = '\\x00';\r\n        else if (dd.length > 1 || dd.charCodeAt(0) > 15) throw RangeError('Channel number out of range: ' + _smftxt(dd));\r\n      }\r\n      return _smf(32, dd);\r\n    },\r\n    smfMidiPort: function(dd) {\r\n      if (dd == parseInt(dd)) {\r\n        if (dd < 0 || dd > 127) throw RangeError('Port number out of range: ' + dd);\r\n        dd = String.fromCharCode(dd);\r\n      }\r\n      else {\r\n        dd = '' + dd;\r\n        if (dd.length == 0) dd = '\\x00';\r\n        else if (dd.length > 1 || dd.charCodeAt(0) > 127) throw RangeError('Port number out of range: ' + _smftxt(dd));\r\n      }\r\n      return _smf(33, dd);\r\n    },\r\n    smfEndOfTrack: function(dd) {\r\n      if (_2s(dd) != '') throw RangeError('Unexpected data: ' + _smftxt(_2s(dd)));\r\n      return _smf(47);\r\n    },\r\n    smfTempo: function(dd) { // microseconds per quarter note\r\n      if (('' + dd).length == 3) return _smf(81, dd);\r\n      if (dd == parseInt(dd) && dd > 0 && dd <= 0xffffff) {\r\n        return _smf(81, String.fromCharCode(dd >> 16) + String.fromCharCode((dd >> 8) & 0xff) + String.fromCharCode(dd & 0xff));\r\n      }\r\n      throw RangeError('Out of range: ' + _smftxt(_2s(dd)));\r\n    },\r\n    smfBPM: function(bpm) { return _helperSMF.smfTempo(Math.round(60000000.0 / bpm)); },\r\n    smfSMPTE: function(dd) {\r\n      if (dd instanceof SMPTE) return _smf(84, String.fromCharCode(dd.hour) + String.fromCharCode(dd.minute) + String.fromCharCode(dd.second) + String.fromCharCode(dd.frame) + String.fromCharCode((dd.quarter % 4) * 25));\r\n      var s = '' + dd;\r\n      if (s.length == 5) {\r\n        return _smf(84, dd);\r\n      }\r\n      var arr = dd instanceof Array ? dd : Array.prototype.slice.call(arguments);\r\n      arr.splice(0, 0, 30);\r\n      return _helperSMF.smfSMPTE(new SMPTE(arr));\r\n    },\r\n    smfTimeSignature: function(a, b, c, d) {\r\n      var nn, dd, cc, bb;\r\n      var m = ('' + a ).match(/^\\s*(\\d+)\\s*\\/\\s*(\\d+)\\s*$/);\r\n      if (m) {\r\n        nn = parseInt(m[1]);\r\n        dd = parseInt(m[2]);\r\n        if (nn > 0 && nn <= 0xff && dd && !(dd & (dd - 1))) {\r\n          cc = dd; dd = 0;\r\n          for (cc >>= 1; cc; cc >>= 1) dd++;\r\n          cc = b == parseInt(b) ? b : 24;\r\n          bb = c == parseInt(c) ? c : 8;\r\n          return _smf(88, String.fromCharCode(nn) + String.fromCharCode(dd) + String.fromCharCode(cc) + String.fromCharCode(bb));\r\n        }\r\n        else if (('' + a ).length == 4) return _smf(88, a);\r\n      }\r\n      else if (a == parseInt(a) && b == parseInt(b) && b && !(b & (b - 1))) {\r\n        nn = a;\r\n        dd = 0;\r\n        cc = b;\r\n        for (cc >>= 1; cc; cc >>= 1) dd++;\r\n        cc = c == parseInt(c) ? c : 24;\r\n        bb = d == parseInt(d) ? d : 8;\r\n        return _smf(88, String.fromCharCode(nn) + String.fromCharCode(dd) + String.fromCharCode(cc) + String.fromCharCode(bb));\r\n      }\r\n      else if (('' + a ).length == 4) return _smf(88, a);\r\n      throw RangeError('Wrong time signature: ' + _smftxt(_2s(a)));\r\n    },\r\n    smfKeySignature: function(dd) {\r\n      dd = '' + dd;\r\n      var m = dd.match(/^\\s*([A-H][b#]?)\\s*(|maj|major|dur|m|min|minor|moll)\\s*$/i);\r\n      if (m) {\r\n        var sf = {\r\n          CB: 0, GB: 1, DB: 2, AB: 3, EB: 4, BB: 5, F: 6, C: 7, G: 8, D: 9, A: 10,\r\n          E:11, B: 12, H: 12, 'F#': 13, 'C#': 14, 'G#': 15, 'D#': 16, 'A#': 17\r\n        }[m[1].toUpperCase()];\r\n        var mi = { '': 0, MAJ: 0, MAJOR: 0, DUR: 0, M: 1, MIN: 1, MINOR: 1, MOLL: 1}[m[2].toUpperCase()];\r\n        if (typeof sf != 'undefined' && typeof mi != 'undefined') {\r\n          if (mi) sf -= 3;\r\n          sf -= 7;\r\n          if (sf >= -7 && sf < 0) dd = String.fromCharCode(256 + sf) + String.fromCharCode(mi);\r\n          else if (sf >= 0 && sf <= 7) dd = String.fromCharCode(sf) + String.fromCharCode(mi);\r\n        }\r\n      }\r\n      if (dd.length == 2 && dd.charCodeAt(1) <= 1 && (dd.charCodeAt(0) <= 7 || dd.charCodeAt(0) <= 255 && dd.charCodeAt(0) >= 249)) return _smf(89, dd);\r\n      throw RangeError('Incorrect key signature: ' + _smftxt(dd));\r\n    },\r\n    smfSequencer: function(dd) { return _smf(127, _2s(dd)); }\r\n  };\r\n\r\n  function _copyPortHelper(M, name, func) {\r\n    M.prototype[name] = function() { return this.send(func.apply(0, arguments)); };\r\n  }\r\n  function _copyPortHelperG(M, name, func) {\r\n    M.prototype[name] = function() {\r\n      var a = func.apply(0, arguments);\r\n      var g = this;\r\n      for (var i = 0; i < a.length; i++) g = g.send(a[i]);\r\n      return g;\r\n    };\r\n  }\r\n  function _copyChannelHelper(C, name, func) {\r\n    C.prototype[name] = function() {\r\n      return this.send(func.apply(0, [this._chan].concat(Array.prototype.slice.call(arguments))));\r\n    };\r\n  }\r\n  function _copyChannelHelperG(C, name, func) {\r\n    C.prototype[name] = function() {\r\n      var a = func.apply(0, [this._chan].concat(Array.prototype.slice.call(arguments)));\r\n      var g = this;\r\n      for (var i = 0; i < a.length; i++) g = g.send(a[i]);\r\n      return g;\r\n    };\r\n  }\r\n  function _copyHelperNC(name, func) {\r\n    MIDI[name] = function() { return new MIDI(func.apply(0, arguments)); };\r\n  }\r\n  function _copyHelperSMF(name, func) {\r\n    MIDI[name] = function() { return func.apply(0, arguments); };\r\n  }\r\n  function _copyHelperG(name, func) {\r\n    MIDI[name] = function() {\r\n      var i;\r\n      var g = [];\r\n      var a = func.apply(0, arguments);\r\n      for (i = 0; i < a.length; i++) g.push(new MIDI(a[i]));\r\n      return g;\r\n    };\r\n  }\r\n  function _copyHelperCH(name, func) {\r\n    _copyHelperNC(name, func);\r\n    _E.prototype[name] = function() {\r\n      var chan;\r\n      var args = Array.prototype.slice.call(arguments);\r\n      if (args.length < func.length) args = [this._master].concat(args);\r\n      else {\r\n        chan = _7b(MIDI.noteValue(args[0], args[0]));\r\n        args[0] = this._master;\r\n      }\r\n      var msg = func.apply(0, args);\r\n      msg.mpe = chan;\r\n      this.send(msg);\r\n      return this;\r\n    };\r\n  }\r\n  for (k in _helperNC) if (_helperNC.hasOwnProperty(k)) _copyHelperNC(k, _helperNC[k]);\r\n  for (k in _helperSMF) if (_helperSMF.hasOwnProperty(k)) _copyHelperSMF(k, _helperSMF[k]);\r\n  for (k in _helperCH) if (_helperCH.hasOwnProperty(k)) _copyHelperCH(k, _helperCH[k]);\r\n  for (k in _helperG) if (_helperG.hasOwnProperty(k)) _copyHelperG(k, _helperG[k]);\r\n  for (k in _helperGNC) if (_helperGNC.hasOwnProperty(k)) _copyHelperG(k, _helperGNC[k]);\r\n  function _copyMidiHelpers(M, C) {\r\n    for (k in _helperNC) if (_helperNC.hasOwnProperty(k)) _copyPortHelper(M, k, _helperNC[k]);\r\n    for (k in _helperSMF) if (_helperSMF.hasOwnProperty(k)) _copyPortHelper(M, k, _helperSMF[k]);\r\n    for (k in _helperCH) if (_helperCH.hasOwnProperty(k)) _copyPortHelper(M, k, _helperCH[k]);\r\n    for (k in _helperG) if (_helperG.hasOwnProperty(k)) _copyPortHelperG(M, k, _helperG[k]);\r\n    for (k in _helperGNC) if (_helperGNC.hasOwnProperty(k)) _copyPortHelperG(M, k, _helperGNC[k]);\r\n    if (C) {\r\n      for (k in _helperCH) if (_helperCH.hasOwnProperty(k)) _copyChannelHelper(C, k, _helperCH[k]);\r\n      for (k in _helperG) if (_helperG.hasOwnProperty(k)) _copyChannelHelperG(C, k, _helperG[k]);\r\n    }\r\n  }\r\n  _copyMidiHelpers(_M, _C);\r\n\r\n  _E.prototype.noteOn = function(n, v) {\r\n    var msg = MIDI.noteOn(this._master, n, v);\r\n    msg._mpe = msg[1];\r\n    this.send(msg);\r\n    return this;\r\n  };\r\n  _E.prototype.noteOff = function(n, v) {\r\n    var msg = MIDI.noteOff(this._master, n, v);\r\n    msg._mpe = msg[1];\r\n    this.send(msg);\r\n    return this;\r\n  };\r\n  _E.prototype.aftertouch = function(n, v) {\r\n    var msg = MIDI.aftertouch(this._master, n, v);\r\n    msg._mpe = msg[1];\r\n    this.send(msg);\r\n    return this;\r\n  };\r\n\r\n  var _channelMap = { a:10, b:11, c:12, d:13, e:14, f:15, A:10, B:11, C:12, D:13, E:14, F:15 };\r\n  for (k = 0; k < 16; k++) _channelMap[k] = k;\r\n  MIDI.prototype.getChannel = function() {\r\n    if (this.ff == 0x20 && this.dd.length == 1 && this.dd.charCodeAt(0) < 16) return this.dd.charCodeAt(0);\r\n    var c = this[0];\r\n    if (typeof c == 'undefined' || c < 0x80 || c > 0xef) return;\r\n    return c & 15;\r\n  };\r\n  MIDI.prototype.setChannel = function(x) {\r\n    x = _channelMap[x];\r\n    if (typeof x == 'undefined') return this;\r\n    if (this.ff == 0x20) this.dd = String.fromCharCode(x);\r\n    else {\r\n      var c = this[0];\r\n      if (typeof c != 'undefined' && c >= 0x80 && c <= 0xef) this[0] = (c & 0xf0) | x;\r\n    }\r\n    return this;\r\n  };\r\n  MIDI.prototype.getNote = function() {\r\n    var c = this[0];\r\n    if (typeof c == 'undefined' || c < 0x80 || c > 0xaf) return;\r\n    return this[1];\r\n  };\r\n  MIDI.prototype.setNote = function(x) {\r\n    var c = this[0];\r\n    if (typeof c == 'undefined' || c < 0x80 || c > 0xaf) return this;\r\n    x = MIDI.noteValue(x);\r\n    if (typeof x != 'undefined') this[1] = x;\r\n    return this;\r\n  };\r\n  MIDI.prototype.getVelocity = function() {\r\n    var c = this[0];\r\n    if (typeof c == 'undefined' || c < 0x80 || c > 0x9f) return;\r\n    return this[2];\r\n  };\r\n  MIDI.prototype.setVelocity = function(x) {\r\n    var c = this[0];\r\n    if (typeof c == 'undefined' || c < 0x80 || c > 0x9f) return this;\r\n    x = parseInt(x);\r\n    if (x >= 0 && x < 128) this[2] = x;\r\n    return this;\r\n  };\r\n  MIDI.prototype.getSysExChannel = function() {\r\n    if (this[0] == 0xf0) return this[2];\r\n  };\r\n  MIDI.prototype.setSysExChannel = function(x) {\r\n    if (this[0] == 0xf0 && this.length > 2) {\r\n      x = parseInt(x);\r\n      if (x >= 0 && x < 128) this[2] = x;\r\n    }\r\n    return this;\r\n  };\r\n  MIDI.prototype.getData = function() {\r\n    if (typeof this.dd != 'undefined') return this.dd.toString();\r\n  };\r\n  MIDI.prototype.setData = function(dd) {\r\n    this.dd = _2s(dd);\r\n    return this;\r\n  };\r\n  MIDI.prototype.getText = function() {\r\n    if (typeof this.dd != 'undefined') return JZZ.lib.fromUTF8(this.dd);\r\n  };\r\n  MIDI.prototype.setText = function(dd) {\r\n    this.dd = JZZ.lib.toUTF8(dd);\r\n    return this;\r\n  };\r\n  MIDI.prototype.getTempo = function() {\r\n    if (this.ff == 0x51 && typeof this.dd != 'undefined') {\r\n      return this.dd.charCodeAt(0) * 65536 + this.dd.charCodeAt(1) * 256 + this.dd.charCodeAt(2);\r\n    }\r\n  };\r\n  MIDI.prototype.getBPM = function() {\r\n    var ms = this.getTempo();\r\n    if (ms) return 60000000 / ms;\r\n  };\r\n  MIDI.prototype.getTimeSignature = function() {\r\n    if (this.ff == 0x58 && typeof this.dd != 'undefined') {\r\n       return [this.dd.charCodeAt(0), 1 << this.dd.charCodeAt(1)];\r\n    }\r\n  };\r\n  MIDI.prototype.getKeySignature = function() {\r\n    if (this.ff == 0x59 && typeof this.dd != 'undefined') {\r\n      var sf = this.dd.charCodeAt(0);\r\n      var mi = this.dd.charCodeAt(1);\r\n      if (sf & 0x80) sf = sf - 0x100;\r\n      if (sf >= -7 && sf <= 7 && mi >= 0 && mi <= 1) {\r\n        return [sf,\r\n          ['Cb', 'Gb', 'Db', 'Ab', 'Eb', 'Bb', 'F', 'C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#', 'G#', 'D#', 'A#'][mi ? sf + 10 : sf + 7],\r\n          !!mi\r\n        ];\r\n      }\r\n    }\r\n  };\r\n\r\n  MIDI.prototype.isNoteOn = function() {\r\n    var c = this[0];\r\n    if (typeof c == 'undefined' || c < 0x90 || c > 0x9f) return false;\r\n    return this[2] > 0 ? true : false;\r\n  };\r\n  MIDI.prototype.isNoteOff = function() {\r\n    var c = this[0];\r\n    if (typeof c == 'undefined' || c < 0x80 || c > 0x9f) return false;\r\n    if (c < 0x90) return true;\r\n    return this[2] == 0 ? true : false;\r\n  };\r\n  MIDI.prototype.isSysEx = function() {\r\n    return this[0] == 0xf0;\r\n  };\r\n  MIDI.prototype.isFullSysEx = function() {\r\n    return this[0] == 0xf0 && this[this.length - 1] == 0xf7;\r\n  };\r\n  MIDI.prototype.isSMF = function() {\r\n    return this.ff >= 0 && this.ff <= 0x7f;\r\n  };\r\n  MIDI.prototype.isEOT = function() {\r\n    return this.ff == 0x2f;\r\n  };\r\n  MIDI.prototype.isTempo = function() {\r\n    return this.ff == 0x51;\r\n  };\r\n  MIDI.prototype.isTimeSignature = function() {\r\n    return this.ff == 0x58;\r\n  };\r\n  MIDI.prototype.isKeySignature = function() {\r\n    return this.ff == 0x59;\r\n  };\r\n\r\n  function _s2a(x) {\r\n    var a = [];\r\n    for (var i = 0; i < x.length; i++) {\r\n      a[i] = x.charCodeAt(i);\r\n    }\r\n    return a;\r\n  }\r\n  function _a2s(x) {\r\n    var a = '';\r\n    for (var i = 0; i < x.length; i++) {\r\n      a += String.fromCharCode(x[i]);\r\n    }\r\n    return a;\r\n  }\r\n  function _2s(x) {\r\n    return x instanceof Array ? _a2s(x) : typeof x == 'undefined' ? '' : '' + x;\r\n  }\r\n  function _s2n(x) {\r\n    var n = 0;\r\n    for (var i = 0; i < x.length; i++) n = (n << 8) + x.charCodeAt(i);\r\n    return n;\r\n  }\r\n\r\n  function __hex(x) { return (x < 16 ? '0' : '') + x.toString(16); }\r\n  function _hex(x) {\r\n    var a = [];\r\n    for (var i = 0; i < x.length; i++) {\r\n      a[i] = __hex(x[i]);\r\n    }\r\n    return a.join(' ');\r\n  }\r\n  function _toLine(s) {\r\n    var out = '';\r\n    for (var i = 0; i < s.length; i++) {\r\n      if (s[i] == '\\n') out += '\\\\n';\r\n      else if (s[i] == '\\r') out += '\\\\r';\r\n      else if (s[i] == '\\t') out += '\\\\t';\r\n      else if (s.charCodeAt(i) < 32) out += '\\\\x' + __hex(s.charCodeAt(i));\r\n      else out += s[i];\r\n    }\r\n    return out;\r\n  }\r\n  function _smfhex(dd) {\r\n    return dd.length ? ': ' + _hex(_s2a(dd)) : '';\r\n  }\r\n  function _smftxt(dd) {\r\n    return dd.length ? ': ' + _toLine(JZZ.lib.fromUTF8(dd)) : '';\r\n  }\r\n  MIDI.prototype.toString = function() {\r\n    var s;\r\n    var ss;\r\n    if (!this.length) {\r\n      if (typeof this.ff != 'undefined') {\r\n        s = 'ff' + __hex(this.ff) + ' -- ';\r\n        if (this.ff == 0) s += 'Sequence Number: ' + _s2n(this.dd);\r\n        else if (this.ff > 0 && this.ff < 10) s += ['', 'Text', 'Copyright', 'Sequence Name', 'Instrument Name', 'Lyric', 'Marker', 'Cue Point', 'Program Name', 'Device Name'][this.ff] + _smftxt(this.dd);\r\n        else if (this.ff == 32) s += 'Channel Prefix' + _smfhex(this.dd);\r\n        else if (this.ff == 33) s += 'MIDI Port' + _smfhex(this.dd);\r\n        else if (this.ff == 47) s += 'End of Track' + _smfhex(this.dd);\r\n        else if (this.ff == 81) {\r\n          var bpm = Math.round(this.getBPM() * 100) / 100;\r\n          s += 'Tempo: ' + bpm + ' bpm';\r\n        }\r\n        else if (this.ff == 84) s += 'SMPTE Offset: ' + _smptetxt(_s2a(this.dd));\r\n        else if (this.ff == 88) {\r\n          var d = 1 << this.dd.charCodeAt(1);\r\n          s += 'Time Signature: ' + this.dd.charCodeAt(0) + '/' + d;\r\n          s += ' ' + this.dd.charCodeAt(2) + ' ' + this.dd.charCodeAt(3);\r\n        }\r\n        else if (this.ff == 89) {\r\n          s += 'Key Signature: ';\r\n          var ks = this.getKeySignature();\r\n          if (ks) {\r\n            s += ks[1];\r\n            if (ks[2]) s += ' min';\r\n          }\r\n          else s+= 'invalid';\r\n        }\r\n        else if (this.ff == 127) s += 'Sequencer Specific' + _smfhex(this.dd);\r\n        else s += 'SMF' + _smfhex(this.dd);\r\n        return s;\r\n      }\r\n      return 'empty';\r\n    }\r\n    s = _hex(this);\r\n    if (this[0] < 0x80) return s;\r\n    ss = {\r\n      241: 'MIDI Time Code',\r\n      242: 'Song Position',\r\n      243: 'Song Select',\r\n      244: 'Undefined',\r\n      245: 'Undefined',\r\n      246: 'Tune request',\r\n      248: 'Timing clock',\r\n      249: 'Undefined',\r\n      250: 'Start',\r\n      251: 'Continue',\r\n      252: 'Stop',\r\n      253: 'Undefined',\r\n      254: 'Active Sensing',\r\n      255: 'Reset'\r\n    }[this[0]];\r\n    if (ss) return s + ' -- ' + ss;\r\n    var c = this[0] >> 4;\r\n    ss = {8: 'Note Off', 10: 'Aftertouch', 12: 'Program Change', 13: 'Channel Aftertouch', 14: 'Pitch Wheel'}[c];\r\n    if (ss) return s + ' -- ' + ss;\r\n    if (c == 9) return s + ' -- ' + (this[2] ? 'Note On' : 'Note Off');\r\n    if (c != 11) return s;\r\n    ss = {\r\n      0: 'Bank Select MSB',\r\n      1: 'Modulation Wheel MSB',\r\n      2: 'Breath Controller MSB',\r\n      4: 'Foot Controller MSB',\r\n      5: 'Portamento Time MSB',\r\n      6: 'Data Entry MSB',\r\n      7: 'Channel Volume MSB',\r\n      8: 'Balance MSB',\r\n      10: 'Pan MSB',\r\n      11: 'Expression Controller MSB',\r\n      12: 'Effect Control 1 MSB',\r\n      13: 'Effect Control 2 MSB',\r\n      16: 'General Purpose Controller 1 MSB',\r\n      17: 'General Purpose Controller 2 MSB',\r\n      18: 'General Purpose Controller 3 MSB',\r\n      19: 'General Purpose Controller 4 MSB',\r\n      32: 'Bank Select LSB',\r\n      33: 'Modulation Wheel LSB',\r\n      34: 'Breath Controller LSB',\r\n      36: 'Foot Controller LSB',\r\n      37: 'Portamento Time LSB',\r\n      38: 'Data Entry LSB',\r\n      39: 'Channel Volume LSB',\r\n      40: 'Balance LSB',\r\n      42: 'Pan LSB',\r\n      43: 'Expression Controller LSB',\r\n      44: 'Effect control 1 LSB',\r\n      45: 'Effect control 2 LSB',\r\n      48: 'General Purpose Controller 1 LSB',\r\n      49: 'General Purpose Controller 2 LSB',\r\n      50: 'General Purpose Controller 3 LSB',\r\n      51: 'General Purpose Controller 4 LSB',\r\n      64: 'Damper Pedal On/Off',\r\n      65: 'Portamento On/Off',\r\n      66: 'Sostenuto On/Off',\r\n      67: 'Soft Pedal On/Off',\r\n      68: 'Legato Footswitch',\r\n      69: 'Hold 2',\r\n      70: 'Sound Controller 1',\r\n      71: 'Sound Controller 2',\r\n      72: 'Sound Controller 3',\r\n      73: 'Sound Controller 4',\r\n      74: 'Sound Controller 5',\r\n      75: 'Sound Controller 6',\r\n      76: 'Sound Controller 7',\r\n      77: 'Sound Controller 8',\r\n      78: 'Sound Controller 9',\r\n      79: 'Sound Controller 10',\r\n      80: 'General Purpose Controller 5',\r\n      81: 'General Purpose Controller 6',\r\n      82: 'General Purpose Controller 7',\r\n      83: 'General Purpose Controller 8',\r\n      84: 'Portamento Control',\r\n      88: 'High Resolution Velocity Prefix',\r\n      91: 'Effects 1 Depth',\r\n      92: 'Effects 2 Depth',\r\n      93: 'Effects 3 Depth',\r\n      94: 'Effects 4 Depth',\r\n      95: 'Effects 5 Depth',\r\n      96: 'Data Increment',\r\n      97: 'Data Decrement',\r\n      98: 'Non-Registered Parameter Number LSB',\r\n      99: 'Non-Registered Parameter Number MSB',\r\n      100: 'Registered Parameter Number LSB',\r\n      101: 'Registered Parameter Number MSB',\r\n      120: 'All Sound Off',\r\n      121: 'Reset All Controllers',\r\n      122: 'Local Control On/Off',\r\n      123: 'All Notes Off',\r\n      124: 'Omni Mode Off',\r\n      125: 'Omni Mode On',\r\n      126: 'Mono Mode On',\r\n      127: 'Poly Mode On'\r\n    }[this[1]];\r\n    if (!ss) ss = 'Undefined';\r\n    return s + ' -- ' + ss;\r\n  };\r\n  MIDI.prototype._stamp = function(obj) { this._from.push(obj._orig ? obj._orig : obj); return this; };\r\n  MIDI.prototype._unstamp = function(obj) {\r\n    if (typeof obj == 'undefined') this._from = [];\r\n    else {\r\n      if (obj._orig) obj = obj._orig;\r\n      var i = this._from.indexOf(obj);\r\n      if (i > -1) this._from.splice(i, 1);\r\n    }\r\n    return this;\r\n  };\r\n  MIDI.prototype._stamped = function(obj) {\r\n    if (obj._orig) obj = obj._orig;\r\n    for (var i = 0; i < this._from.length; i++) if (this._from[i] == obj) return true;\r\n    return false;\r\n  };\r\n\r\n  JZZ.MIDI = MIDI;\r\n\r\n  function MPE() {\r\n    var self = this instanceof MPE ? this : self = new MPE();\r\n    self.reset();\r\n    if (arguments.length) MPE.prototype.setup.apply(self, arguments);\r\n    return self;\r\n  }\r\n  MPE.validate = function(arg) {\r\n    var a = arg instanceof Array ? arg : arguments;\r\n    if (a[0] != parseInt(a[0]) || a[0] < 0 || a[0] > 14) throw RangeError('Bad master channel value: ' + a[0]);\r\n    if (a[1] != parseInt(a[1]) || a[1] < 0 || a[0] + a[1] > 15) throw RangeError('Bad zone size value: ' + a[1]);\r\n  };\r\n  MPE.prototype.reset = function() { for (var n = 0; n < 16; n++) this[n] = { band: 0, master: n }; };\r\n  MPE.prototype.setup = function(m, n) {\r\n    MPE.validate(m, n);\r\n    var k;\r\n    var last = m + n;\r\n    if (this[m].master == m && this[m].band == n) return;\r\n    if (!n && !this[m].band) return;\r\n    if (this[m].band) {\r\n      k = m + this[m].band;\r\n      if (last < k) last = k;\r\n    }\r\n    else if (this[m].master == m - 1) {\r\n      k = m - 1;\r\n      k = k + this[k].band;\r\n      if (last < k) last = k;\r\n      this[m - 1] = { band: 0, master: m - 1 };\r\n    }\r\n    else if (this[m].master != m) {\r\n      k = this[m].master;\r\n      k = k + this[k].band;\r\n      if (last < k) last = k;\r\n      this[this[m].master].band = m - this[m].master - 1;\r\n    }\r\n    this[m].master = m;\r\n    this[m].band = n;\r\n    for (k = m + 1; k <= m + n; k++) {\r\n      if (this[k].band && last < k + this[k].band) last = k + this[k].band;\r\n      this[k] = { band: 0, master: m };\r\n    }\r\n    for (; k <= last; k++) this[k] = { band: 0, master: k };\r\n  };\r\n  MPE.prototype.filter = function(msg) {\r\n    var c = msg.getChannel();\r\n    if (!this[c] || !this[this[c].master].band) return msg;\r\n    var m = this[c].master;\r\n    var n = this[m].band;\r\n    var i, j, k;\r\n    if (typeof msg._mpe != 'undefined') {\r\n      k = 256;\r\n      for (i = m + 1; i <= m + n; i++) {\r\n        if (!this[i].notes) {\r\n          if (k > 0) { c = i; k = 0; }\r\n        }\r\n        else {\r\n          if (k > this[i].notes.length) { c = i; k = this[i].notes.length; }\r\n          for (j = 0; j < this[i].notes.length; j++) {\r\n            if (this[i].notes[j] == msg._mpe) { c = i; k = -1; break; }\r\n          }\r\n        }\r\n      }\r\n      msg.setChannel(c);\r\n      msg._mpe = undefined;\r\n    }\r\n    if (c == m) return msg; // bad mpe\r\n    if (msg.isNoteOn()) {\r\n      if (!this[c].notes) this[c].notes = [];\r\n      _push(this[c].notes, msg.getNote());\r\n    }\r\n    else if (msg.isNoteOff()) {\r\n      if (this[c].notes) _pop(this[c].notes, msg.getNote());\r\n    }\r\n    return msg;\r\n  };\r\n  JZZ.MPE = MPE;\r\n\r\n  JZZ.lib = {};\r\n  JZZ.lib.now = _now;\r\n  JZZ.lib.schedule = _schedule;\r\n  JZZ.lib.openMidiOut = function(name, engine) {\r\n    var port = new _M();\r\n    engine._openOut(port);\r\n    port._info = engine._info(name);\r\n    return port;\r\n  };\r\n  JZZ.lib.openMidiIn = function(name, engine) {\r\n    var port = new _M();\r\n    engine._openIn(port);\r\n    port._info = engine._info(name);\r\n    return port;\r\n  };\r\n  JZZ.lib.registerMidiOut = function(name, engine) {\r\n    var x = engine._info(name);\r\n    for (var i = 0; i < _virtual._outs.length; i++) if (_virtual._outs[i].name == x.name) return false;\r\n    x.engine = engine;\r\n    _virtual._outs.push(x);\r\n    if (_jzz) {\r\n      _postRefresh();\r\n      if (_jzz._bad) { _jzz._repair(); _jzz._resume(); }\r\n    }\r\n    return true;\r\n  };\r\n  JZZ.lib.registerMidiIn = function(name, engine) {\r\n    var x = engine._info(name);\r\n    for (var i = 0; i < _virtual._ins.length; i++) if (_virtual._ins[i].name == x.name) return false;\r\n    x.engine = engine;\r\n    _virtual._ins.push(x);\r\n    if (_jzz) {\r\n      _postRefresh();\r\n      if (_jzz._bad) { _jzz._repair(); _jzz._resume(); }\r\n    }\r\n    return true;\r\n  };\r\n  var _ac;\r\n  function _initAudioContext() {\r\n    if (!_ac && typeof window !== 'undefined') {\r\n      var AudioContext = window.AudioContext || window.webkitAudioContext;\r\n      if (AudioContext) {\r\n        _ac = new AudioContext();\r\n        if (_ac && !_ac.createGain) _ac.createGain = _ac.createGainNode;\r\n        var _activateAudioContext = function() {\r\n          if (_ac.state != 'running') {\r\n            _ac.resume();\r\n            var osc = _ac.createOscillator();\r\n            var gain = _ac.createGain();\r\n            try { gain.gain.value = 0; } catch (err) {}\r\n            gain.gain.setTargetAtTime(0, _ac.currentTime, 0.01);\r\n            osc.connect(gain);\r\n            gain.connect(_ac.destination);\r\n            if (!osc.start) osc.start = osc.noteOn;\r\n            if (!osc.stop) osc.stop = osc.noteOff;\r\n            osc.start(0.1); osc.stop(0.11);\r\n          }\r\n          else {\r\n            document.removeEventListener('touchstart', _activateAudioContext);\r\n            document.removeEventListener('touchend', _activateAudioContext);\r\n            document.removeEventListener('mousedown', _activateAudioContext);\r\n            document.removeEventListener('keydown', _activateAudioContext);\r\n          }\r\n        };\r\n        document.addEventListener('touchstart', _activateAudioContext);\r\n        document.addEventListener('touchend', _activateAudioContext);\r\n        document.addEventListener('mousedown', _activateAudioContext);\r\n        document.addEventListener('keydown', _activateAudioContext);\r\n        _activateAudioContext();\r\n      }\r\n    }\r\n  }\r\n  JZZ.lib.copyMidiHelpers = _copyMidiHelpers;\r\n  JZZ.lib.getAudioContext = function() { _initAudioContext(); return _ac; };\r\n  var _b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n  JZZ.lib.fromBase64 = function(input) {\r\n    var output = '';\r\n    var chr1, chr2, chr3;\r\n    var enc1, enc2, enc3, enc4;\r\n    var i = 0;\r\n    input = input.replace(/[^A-Za-z0-9+/=]/g, '');\r\n    while (i < input.length) {\r\n      enc1 = _b64.indexOf(input.charAt(i++));\r\n      enc2 = _b64.indexOf(input.charAt(i++));\r\n      enc3 = _b64.indexOf(input.charAt(i++));\r\n      enc4 = _b64.indexOf(input.charAt(i++));\r\n      chr1 = (enc1 << 2) | (enc2 >> 4);\r\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n      chr3 = ((enc3 & 3) << 6) | enc4;\r\n      output = output + String.fromCharCode(chr1);\r\n      if (enc3 != 64) {\r\n        output = output + String.fromCharCode(chr2);\r\n      }\r\n      if (enc4 != 64) {\r\n        output = output + String.fromCharCode(chr3);\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n  JZZ.lib.toBase64 = function(data) {\r\n    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', arr = [];\r\n    if (!data) return data;\r\n    do {\r\n      o1 = data.charCodeAt(i++);\r\n      o2 = data.charCodeAt(i++);\r\n      o3 = data.charCodeAt(i++);\r\n      bits = o1 << 16 | o2 << 8 | o3;\r\n      h1 = bits >> 18 & 0x3f;\r\n      h2 = bits >> 12 & 0x3f;\r\n      h3 = bits >> 6 & 0x3f;\r\n      h4 = bits & 0x3f;\r\n      arr[ac++] = _b64.charAt(h1) + _b64.charAt(h2) + _b64.charAt(h3) + _b64.charAt(h4);\r\n    } while(i < data.length);\r\n    enc = arr.join('');\r\n    var r = data.length % 3;\r\n    return (r ? enc.slice(0, r - 3) + '==='.slice(r) : enc);\r\n  };\r\n  JZZ.lib.fromUTF8 = function(data) {\r\n    data = typeof data == 'undefined' ? '' : '' + data;\r\n    var out = '';\r\n    var i, n, m;\r\n    for (i = 0; i < data.length; i++) {\r\n      n = data.charCodeAt(i);\r\n      if (n > 0xff) return data;\r\n      if (n < 0x80) out += data[i];\r\n      else if ((n & 0xe0) == 0xc0) {\r\n        n = (n & 0x1f) << 6;\r\n        i++; if (i >= data.length) return data;\r\n        m = data.charCodeAt(i);\r\n        if ((m & 0xc0) != 0x80) return data;\r\n        n += (m & 0x3f);\r\n        out += String.fromCharCode(n);\r\n      }\r\n      else if ((n & 0xf0) == 0xe0) {\r\n        n = (n & 0x0f) << 12;\r\n        i++; if (i >= data.length) return data;\r\n        m = data.charCodeAt(i);\r\n        if ((m & 0xc0) != 0x80) return data;\r\n        n += (m & 0x3f) << 6;\r\n        i++; if (i >= data.length) return data;\r\n        m = data.charCodeAt(i);\r\n        if ((m & 0xc0) != 0x80) return data;\r\n        n += (m & 0x3f);\r\n        out += String.fromCharCode(n);\r\n      }\r\n      else if ((n & 0xf8) == 0xf0) {\r\n        n = (n & 0x07) << 18;\r\n        i++; if (i >= data.length) return data;\r\n        m = data.charCodeAt(i);\r\n        if ((m & 0xc0) != 0x80) return data;\r\n        n += (m & 0x3f) << 12;\r\n        i++; if (i >= data.length) return data;\r\n        m = data.charCodeAt(i);\r\n        if ((m & 0xc0) != 0x80) return data;\r\n        n += (m & 0x3f) << 6;\r\n        i++; if (i >= data.length) return data;\r\n        m = data.charCodeAt(i);\r\n        if ((m & 0xc0) != 0x80) return data;\r\n        n += (m & 0x3f);\r\n        if (n > 0x10ffff) return data;\r\n        n -= 0x10000;\r\n        out += String.fromCharCode(0xd800 + (n >> 10));\r\n        out += String.fromCharCode(0xdc00 + (n & 0x3ff));\r\n      }\r\n    }\r\n    return out;\r\n  };\r\n  JZZ.lib.toUTF8 = function(data) {\r\n    data = typeof data == 'undefined' ? '' : '' + data;\r\n    var out = '';\r\n    var i, n;\r\n    for (i = 0; i < data.length; i++) {\r\n      n = data.charCodeAt(i);\r\n      if (n < 0x80) out += data[i];\r\n      else if (n < 0x800) {\r\n        out += String.fromCharCode(0xc0 + (n >> 6));\r\n        out += String.fromCharCode(0x80 + (n & 0x3f));\r\n      }\r\n      else if (n < 0x10000) {\r\n        out += String.fromCharCode(0xe0 + (n >> 12));\r\n        out += String.fromCharCode(0x80 + ((n >> 6) & 0x3f));\r\n        out += String.fromCharCode(0x80 + (n & 0x3f));\r\n      }\r\n      else {\r\n        out += String.fromCharCode(0xf0 + (n >> 18));\r\n        out += String.fromCharCode(0x80 + ((n >> 12) & 0x3f));\r\n        out += String.fromCharCode(0x80 + ((n >> 6) & 0x3f));\r\n        out += String.fromCharCode(0x80 + (n & 0x3f));\r\n      }\r\n    }\r\n    return out;\r\n  };\r\n\r\n  // Web MIDI API\r\n  var _wma = [];\r\n  var _outputMap = {};\r\n  var _inputMap = {};\r\n\r\n  var Promise = _scope.Promise;\r\n  if (typeof Promise !== 'function') {\r\n    Promise = function(executor) {\r\n      this.executor = executor;\r\n    };\r\n    Promise.prototype.then = function(resolve, reject) {\r\n      if (typeof resolve !== 'function') {\r\n        resolve = function() {};\r\n      }\r\n      if (typeof reject !== 'function') {\r\n        reject = function() {};\r\n      }\r\n      this.executor(resolve, reject);\r\n    };\r\n  }\r\n  function DOMException(name, message, code) {\r\n    this.name = name;\r\n    this.message = message;\r\n    this.code = code;\r\n  }\r\n\r\n  function MIDIConnectionEvent(port, target) {\r\n    this.bubbles = false;\r\n    this.cancelBubble = false;\r\n    this.cancelable = false;\r\n    this.currentTarget = target;\r\n    this.defaultPrevented = false;\r\n    this.eventPhase = 0;\r\n    this.path = [];\r\n    this.port = port;\r\n    this.returnValue = true;\r\n    this.srcElement = target;\r\n    this.target = target;\r\n    this.timeStamp = _now();\r\n    this.type = 'statechange';\r\n  }\r\n\r\n  function MIDIMessageEvent(port, data) {\r\n    this.bubbles = false;\r\n    this.cancelBubble = false;\r\n    this.cancelable = false;\r\n    this.currentTarget = port;\r\n    this.data = data;\r\n    this.defaultPrevented = false;\r\n    this.eventPhase = 0;\r\n    this.path = [];\r\n    this.receivedTime = _now();\r\n    this.returnValue = true;\r\n    this.srcElement = port;\r\n    this.target = port;\r\n    this.timeStamp = this.receivedTime;\r\n    this.type = 'midimessage';\r\n  }\r\n\r\n  function _statechange(p, a) {\r\n    if (p) {\r\n      if (p.onstatechange) p.onstatechange(new MIDIConnectionEvent(p, p));\r\n      if (a.onstatechange) a.onstatechange(new MIDIConnectionEvent(p, a));\r\n    }\r\n  }\r\n\r\n  function MIDIInput(a, p) {\r\n    var self = this;\r\n    var _open = false;\r\n    var _ochng = null;\r\n    var _onmsg = null;\r\n    this.type = 'input';\r\n    this.id = p.id;\r\n    this.name = p.name;\r\n    this.manufacturer = p.man;\r\n    this.version = p.ver;\r\n    Object.defineProperty(this, 'state', { get: function() { return p.connected ? 'connected' : 'disconnected'; }, enumerable: true });\r\n    Object.defineProperty(this, 'connection', { get: function() {\r\n      return _open ? p.proxy ? 'open' : 'pending' : 'closed';\r\n    }, enumerable: true });\r\n    Object.defineProperty(this, 'onmidimessage', {\r\n      get: function() { return _onmsg; },\r\n      set: function(value) {\r\n        if (value instanceof Function) {\r\n          _onmsg = value;\r\n          if (!_open) try { self.open(); } catch(e) {/**/}\r\n        }\r\n        else _onmsg = null;\r\n      },\r\n      enumerable: true\r\n    });\r\n    Object.defineProperty(this, 'onstatechange', {\r\n      get: function() { return _ochng; },\r\n      set: function(value) {\r\n        if (value instanceof Function) _ochng = value;\r\n        else _ochng = null;\r\n      },\r\n      enumerable: true\r\n    });\r\n    this.open = function() {\r\n      return new Promise(function(resolve, reject) {\r\n        if (_open) resolve(self);\r\n        else {\r\n          p.open().then(function() {\r\n            if (!_open) {\r\n              _open = true;\r\n              _statechange(self, a);\r\n            }\r\n            resolve(self);\r\n          }, function() {\r\n            reject(new DOMException('InvalidAccessError', 'Port is not available', 15));\r\n          });\r\n        }\r\n      });\r\n    };\r\n    this.close = function() {\r\n      return new Promise(function(resolve/*, reject*/) {\r\n        if (_open) {\r\n          _open = false;\r\n          p.close();\r\n          _statechange(self, a);\r\n        }\r\n        resolve(self);\r\n      });\r\n    };\r\n    Object.freeze(this);\r\n  }\r\n\r\n  function _split(q) {\r\n    var i, k;\r\n    while (q.length) {\r\n      for (i = 0; i < q.length; i++) if (q[i] == parseInt(q[i]) && q[i] >= 0x80 && q[i] <= 0xff && q[i] != 0xf7) break;\r\n      q.splice(0, i);\r\n      if (!q.length) return;\r\n      if (q[0] == 0xf0) {\r\n        for (i = 1; i < q.length; i++) if (q[i] == 0xf7) break;\r\n        if (i == q.length) return;\r\n        return q.splice(0, i + 1);\r\n      }\r\n      else {\r\n        k = _datalen(q[0]) + 1;\r\n        if (k > q.length) return;\r\n        for (i = 1; i < k; i++) if (q[i] != parseInt(q[i]) || q[i] < 0 || q[i] >= 0x80) break;\r\n        if (i == k) return q.splice(0, i);\r\n        else q.splice(0, i);\r\n      }\r\n    }\r\n  }\r\n\r\n  function _InputProxy(id, name, man, ver) {\r\n    var self = this;\r\n    this.id = id;\r\n    this.name = name;\r\n    this.man = man;\r\n    this.ver = ver;\r\n    this.connected = true;\r\n    this.ports = [];\r\n    this.pending = [];\r\n    this.proxy = undefined;\r\n    this.queue = [];\r\n    this.onmidi = function(msg) {\r\n      var m;\r\n      self.queue = self.queue.concat(msg.slice());\r\n      for (m = _split(self.queue); m; m = _split(self.queue)) {\r\n        for (i = 0; i < self.ports.length; i++) {\r\n          if (self.ports[i][0].onmidimessage && (m[0] != 0xf0 || self.ports[i][1])) {\r\n            self.ports[i][0].onmidimessage(new MIDIMessageEvent(self, new Uint8Array(m)));\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n  _InputProxy.prototype.open = function() {\r\n    var self = this;\r\n    return new Promise(function(resolve, reject) {\r\n      var i;\r\n      if (self.proxy || !self.connected) resolve();\r\n      else {\r\n        self.pending.push([resolve, reject]);\r\n        if (self.pending.length == 1) {\r\n          JZZ().openMidiIn(self.name).or(function() {\r\n            for (i = 0; i < self.pending.length; i++) self.pending[i][1]();\r\n            self.pending = [];\r\n          }).and(function() {\r\n            self.proxy = this;\r\n            self.proxy.connect(self.onmidi);\r\n            for (i = 0; i < self.pending.length; i++) self.pending[i][0]();\r\n            self.pending = [];\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  _InputProxy.prototype.close = function() {\r\n    var i;\r\n    if (this.proxy) {\r\n      for (i = 0; i < this.ports.length; i++) if (this.ports[i].connection == 'open') return;\r\n      this.proxy.close();\r\n      this.proxy = undefined;\r\n    }\r\n  };\r\n  _InputProxy.prototype.disconnect = function() {\r\n    this.connected = false;\r\n    if (this.proxy) {\r\n      this.proxy.close();\r\n      this.proxy = undefined;\r\n    }\r\n  };\r\n  _InputProxy.prototype.reconnect = function() {\r\n    var self = this;\r\n    var i, p;\r\n    var a = [];\r\n    this.connected = true;\r\n    for (i = 0; i < _wma.length; i++) {\r\n      p = _wma[i].inputs.get(this.id);\r\n      if (p.connection == 'closed') _statechange(p, _wma[i]);\r\n      else a.push([p, _wma[i]]);\r\n    }\r\n    if (a.length) {\r\n      JZZ()._openMidiInNR(self.name).or(function() {\r\n        for (i = 0; i < a.length; i++) a[i][0].close();\r\n      }).and(function() {\r\n        self.proxy = this;\r\n        self.proxy.connect(self.onmidi);\r\n        for (i = 0; i < a.length; i++) _statechange(a[i][0], a[i][1]);\r\n      });\r\n    }\r\n  };\r\n\r\n  function _datalen(x) {\r\n    if (x >= 0x80 && x <= 0xbf || x >= 0xe0 && x <= 0xef || x == 0xf2) return 2;\r\n    if (x >= 0xc0 && x <= 0xdf || x == 0xf1 || x == 0xf3) return 1;\r\n    return 0;\r\n  }\r\n\r\n  var _epr = \"Failed to execute 'send' on 'MIDIOutput': \";\r\n\r\n  function _validate(arr, sysex) {\r\n    var i, k;\r\n    var msg;\r\n    var data = [];\r\n    for (i = 0; i < arr.length; i++) {\r\n      if (arr[i] != parseInt(arr[i]) || arr[i] < 0 || arr[i] > 255) throw TypeError(_epr + arr[i] + ' is not a UInt8 value.');\r\n    }\r\n    k = 0;\r\n    for (i = 0; i < arr.length; i++) {\r\n      if (!k) {\r\n        if (arr[i] < 0x80) throw TypeError(_epr + 'Running status is not allowed at index ' + i + ' (' + arr[i] + ').');\r\n        if (arr[i] == 0xf7) throw TypeError(_epr + 'Unexpected end of system exclusive message at index ' + i + ' (' + arr[i] + ').');\r\n        msg = [arr[i]];\r\n        data.push(msg);\r\n        if (arr[i] == 0xf0) {\r\n          if (!sysex) throw new DOMException('InvalidAccessError', _epr + 'System exclusive messag is not allowed at index ' + i + ' (' + arr[i] + ').', 15);\r\n          k = -1;\r\n          for (; i < arr.length; i++) {\r\n            msg.push(arr[i]);\r\n            if (arr[i] == 0xf7) {\r\n              k = 0;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          k = _datalen(arr[i]);\r\n        }\r\n      }\r\n      else {\r\n        if (arr[i] > 0x7f) throw TypeError(_epr + 'Unexpected status byte at index ' + i + ' (' + arr[i] + ').');\r\n        msg.push(arr[i]);\r\n        k--;\r\n      }\r\n    }\r\n    if (k) throw TypeError(_epr + 'Message is incomplete');\r\n    return [data];\r\n  }\r\n\r\n  function MIDIOutput(a, p) {\r\n    var self = this;\r\n    var _open = false;\r\n    var _ochng = null;\r\n    this.type = 'output';\r\n    this.id = p.id;\r\n    this.name = p.name;\r\n    this.manufacturer = p.man;\r\n    this.version = p.ver;\r\n    Object.defineProperty(this, 'state', { get: function() { return p.connected ? 'connected' : 'disconnected'; }, enumerable: true });\r\n    Object.defineProperty(this, 'connection', { get: function() {\r\n      return _open ? p.proxy ? 'open' : 'pending' : 'closed';\r\n    }, enumerable: true });\r\n    Object.defineProperty(this, 'onstatechange', {\r\n      get: function() { return _ochng; },\r\n      set: function(value) {\r\n        if (value instanceof Function) _ochng = value;\r\n        else _ochng = null;\r\n      },\r\n      enumerable: true\r\n    });\r\n    this.open = function() {\r\n      return new Promise(function(resolve, reject) {\r\n        if (_open) resolve(self);\r\n        else {\r\n          p.open().then(function() {\r\n            if (!_open) {\r\n              _open = true;\r\n              _statechange(self, a);\r\n            }\r\n            resolve(self);\r\n          }, function() {\r\n            reject(new DOMException('InvalidAccessError', 'Port is not available', 15));\r\n          });\r\n        }\r\n      });\r\n    };\r\n    this.close = function() {\r\n      return new Promise(function(resolve/*, reject*/) {\r\n        if (_open) {\r\n          _open = false;\r\n          self.clear();\r\n          p.close();\r\n          _statechange(self, a);\r\n        }\r\n        resolve(self);\r\n      });\r\n    };\r\n    this.clear = function() {\r\n    };\r\n    this.send = function(data, timestamp) {\r\n      _validate(data, a.sysexEnabled);\r\n      if (!p.connected) throw new DOMException('InvalidStateError', 'Port is not connected', 11);\r\n      if (_open) {\r\n        var now = _now();\r\n        if (timestamp > now) setTimeout(function() { p.proxy.send(data); }, timestamp - now);\r\n        else p.proxy.send(data);\r\n      }\r\n      else this.open().then(function() { self.send(data, timestamp); });\r\n\r\n    };\r\n    Object.freeze(this);\r\n  }\r\n\r\n  function _OutputProxy(id, name, man, ver) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.man = man;\r\n    this.ver = ver;\r\n    this.connected = true;\r\n    this.ports = [];\r\n    this.pending = [];\r\n    this.proxy = undefined;\r\n  }\r\n  _OutputProxy.prototype.open = function() {\r\n    var self = this;\r\n    return new Promise(function(resolve, reject) {\r\n      var i;\r\n      if (self.proxy || !self.connected) resolve();\r\n      else {\r\n        self.pending.push([resolve, reject]);\r\n        if (self.pending.length == 1) {\r\n          JZZ().openMidiOut(self.name).or(function() {\r\n            for (i = 0; i < self.pending.length; i++) self.pending[i][1]();\r\n            self.pending = [];\r\n          }).and(function() {\r\n            self.proxy = this;\r\n            for (i = 0; i < self.pending.length; i++) self.pending[i][0]();\r\n            self.pending = [];\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  _OutputProxy.prototype.close = function() {\r\n    var i;\r\n    if (this.proxy) {\r\n      for (i = 0; i < this.ports.length; i++) if (this.ports[i].connection == 'open') return;\r\n      this.proxy.close();\r\n      this.proxy = undefined;\r\n    }\r\n  };\r\n  _OutputProxy.prototype.disconnect = function() {\r\n    this.connected = false;\r\n    if (this.proxy) {\r\n      this.proxy.close();\r\n      this.proxy = undefined;\r\n    }\r\n  };\r\n  _OutputProxy.prototype.reconnect = function() {\r\n    var self = this;\r\n    var i, p;\r\n    var a = [];\r\n    this.connected = true;\r\n    for (i = 0; i < _wma.length; i++) {\r\n      p = _wma[i].outputs.get(this.id);\r\n      if (p.connection == 'closed') _statechange(p, _wma[i]);\r\n      else a.push([p, _wma[i]]);\r\n    }\r\n    if (a.length) {\r\n      JZZ()._openMidiOutNR(self.name).or(function() {\r\n        for (i = 0; i < a.length; i++) a[i][0].close();\r\n      }).and(function() {\r\n        self.proxy = this;\r\n        for (i = 0; i < a.length; i++) _statechange(a[i][0], a[i][1]);\r\n      });\r\n    }\r\n  };\r\n\r\n  function _Maplike(data) {\r\n    this.has = function(id) {\r\n      return data.hasOwnProperty(id) && data[id].connected;\r\n    };\r\n    this.keys = function() {\r\n      try { // some old browsers may have no Map object\r\n        var m = new Map();\r\n        for (var id in data) if (this.has(id)) m.set(id, this.get(id));\r\n        return m.keys();\r\n      } catch (e) {}\r\n    };\r\n    this.values = function() {\r\n      try {\r\n        var m = new Map();\r\n        for (var id in data) if (this.has(id)) m.set(id, this.get(id));\r\n        return m.values();\r\n      } catch (e) {}\r\n    };\r\n    this.entries = function() {\r\n      try {\r\n        var m = new Map();\r\n        for (var id in data) if (this.has(id)) m.set(id, this.get(id));\r\n        return m.entries();\r\n      } catch (e) {}\r\n    };\r\n    this.forEach = function(fun, self) {\r\n      if (typeof self == 'undefined') self = this;\r\n      for (var id in data) if (this.has(id)) fun.call(self, this.get(id), id, this);\r\n    };\r\n    Object.defineProperty(this, 'size', {\r\n      get: function() {\r\n        var len = 0;\r\n        for (var id in data) if (this.has(id)) len++;\r\n        return len;\r\n      },\r\n      enumerable: true\r\n    });\r\n  }\r\n\r\n  function MIDIInputMap(_access, _inputs) {\r\n    this.get = function(id) {\r\n      if (_inputMap.hasOwnProperty(id) && _inputMap[id].connected) {\r\n        if (!_inputs[id]) {\r\n          _inputs[id] = new MIDIInput(_access, _inputMap[id]);\r\n          _inputMap[id].ports.push([_inputs[id], _access.sysexEnabled]);\r\n        }\r\n        return _inputs[id];\r\n      }\r\n    };\r\n    Object.freeze(this);\r\n  }\r\n  MIDIInputMap.prototype = new _Maplike(_inputMap);\r\n  MIDIInputMap.prototype.constructor = MIDIInputMap;\r\n\r\n  function MIDIOutputMap(_access, _outputs) {\r\n    this.get = function(id) {\r\n      if (_outputMap.hasOwnProperty(id) && _outputMap[id].connected) {\r\n        if (!_outputs[id]) {\r\n          _outputs[id] = new MIDIOutput(_access, _outputMap[id]);\r\n          _outputMap[id].ports.push([_outputs[id], _access.sysexEnabled]);\r\n        }\r\n        return _outputs[id];\r\n      }\r\n    };\r\n    Object.freeze(this);\r\n  }\r\n  MIDIOutputMap.prototype = new _Maplike(_outputMap);\r\n  MIDIOutputMap.prototype.constructor = MIDIOutputMap;\r\n\r\n  function _wm_watch(x) {\r\n    var i, k, p, a;\r\n    for (i = 0; i < x.inputs.added.length; i++) {\r\n      p = x.inputs.added[i];\r\n      if (!_inputMap.hasOwnProperty(p.id)) _inputMap[p.id] = new _InputProxy(p.id, p.name, p.manufacturer, p.version);\r\n      _inputMap[p.id].reconnect();\r\n    }\r\n    for (i = 0; i < x.outputs.added.length; i++) {\r\n      p = x.outputs.added[i];\r\n      if (!_outputMap.hasOwnProperty(p.id)) _outputMap[p.id] = new _OutputProxy(p.id, p.name, p.manufacturer, p.version);\r\n      _outputMap[p.id].reconnect();\r\n    }\r\n    for (i = 0; i < x.inputs.removed.length; i++) {\r\n      p = x.inputs.removed[i];\r\n      if (_inputMap.hasOwnProperty(p.id)) {\r\n        a = [];\r\n        for (k = 0; k < _wma.length; k++) a.push([_wma[k].inputs.get(p.id), _wma[k]]);\r\n        _inputMap[p.id].disconnect();\r\n        for (k = 0; k < a.length; k++) _statechange(a[k][0], a[k][1]);\r\n      }\r\n    }\r\n    for (i = 0; i < x.outputs.removed.length; i++) {\r\n      p = x.outputs.removed[i];\r\n      if (_outputMap.hasOwnProperty(p.id)) {\r\n        a = [];\r\n        for (k = 0; k < _wma.length; k++) a.push([_wma[k].outputs.get(p.id), _wma[k]]);\r\n        _outputMap[p.id].disconnect();\r\n        for (k = 0; k < a.length; k++) _statechange(a[k][0], a[k][1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function MIDIAccess(sysex) {\r\n    var _inputs = {};\r\n    var _outputs = {};\r\n    var _onstatechange = null;\r\n    var self = this;\r\n    this.sysexEnabled = sysex;\r\n    this.inputs = new MIDIInputMap(self, _inputs);\r\n    this.outputs = new MIDIOutputMap(self, _outputs);\r\n    Object.defineProperty(this, 'onstatechange', {\r\n      get: function() { return _onstatechange; },\r\n      set: function(f) { _onstatechange = f instanceof Function ? f : null; },\r\n      enumerable: true\r\n    });\r\n    Object.freeze(this);\r\n    var i;\r\n    var p;\r\n    var info = _jzz._info;\r\n    for (i = 0; i < info.inputs.length; i++) {\r\n      p = info.inputs[i];\r\n      if (!_inputMap.hasOwnProperty(p.id)) _inputMap[p.id] = new _InputProxy(p.id, p.name, p.manufacturer, p.version);\r\n    }\r\n    for (i = 0; i < info.outputs.length; i++) {\r\n      p = info.outputs[i];\r\n      if (!_outputMap.hasOwnProperty(p.id)) _outputMap[p.id] = new _OutputProxy(p.id, p.name, p.manufacturer, p.version);\r\n    }\r\n    if (!_wma.length) JZZ().onChange(_wm_watch);\r\n    _wma.push(this);\r\n  }\r\n\r\n  JZZ.requestMIDIAccess = function(opt) {\r\n    return new Promise(function(resolve, reject) {\r\n      JZZ.JZZ(opt).or(function() {\r\n      }).and(function() {\r\n        var sysex = !!(opt && opt.sysex);\r\n        if (sysex && !this.info().sysex) reject(new DOMException('SecurityError', 'Sysex is not allowed', 18));\r\n        else {\r\n          var wma = new MIDIAccess(sysex);\r\n          resolve(wma);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  if (typeof navigator !== 'undefined' && !navigator.requestMIDIAccess) navigator.requestMIDIAccess = JZZ.requestMIDIAccess;\r\n  JZZ.close = function() { if (_engine._close) _engine._close(); };\r\n\r\n  return JZZ;\r\n});\r\n","var path='./bin/';\r\nvar v=process.versions.node.split('.');\r\nif (v[0]<=10) path+='10_15/';\r\nelse if (v[0]<=11) path+='11_15/';\r\nif(process.platform==\"win32\"&&process.arch==\"ia32\") path+='win32/jazz';\r\nelse if(process.platform==\"win32\"&&process.arch==\"x64\") path+='win64/jazz';\r\nelse if(process.platform==\"darwin\"&&process.arch==\"x64\") path+='macos64/jazz';\r\nelse if(process.platform==\"linux\"&&process.arch==\"x64\") path+='linux64/jazz';\r\nelse if(process.platform==\"linux\"&&process.arch==\"arm\") path+='linuxa7/jazz';\r\nmodule.exports=require(path);\r\nmodule.exports.package=require(__dirname + '/package.json');\r\n","// const cam = (video) => {\r\n\r\n// \tvideo = video || document.createElement('video')\r\n\r\n// \tconst stream = await navigator.mediaDevices.getUserMedia({\r\n// \t  audio: false,\r\n// \t  video: {\r\n// \t\tfacingMode: 'user',\r\n// \t\twidth: 640,\r\n// \t\theight: 640\r\n// \t  }\r\n// \t})\r\n\r\n// \tvideo.srcObject = stream\r\n// }\r\n\r\n// export const hasCameraCapabilities = () => {\r\n\r\n// }\r\nexport const filterVideoCameras = (devices) => {\r\n\t\r\n\treturn devices.filter( device => {\r\n\t\t// console.log(\"filterVideoCameras\", device.kind, device.kind === \"videoinput\" , device)\r\n\t\treturn device.kind === \"videoinput\"\r\n\t\t\r\n\t})\r\n}\r\n\r\n// WARNING : Triggers an error if not from a user click!?\r\n// This returns a list of IDS that you can then feed into the setupCamera\r\n// if you want to select a specific camera\r\nexport const detectCameras = async () => {\r\n\treturn navigator.mediaDevices.enumerateDevices()\r\n}\r\n\r\nexport const setupCamera = async (video, deviceId ) => {\r\n\r\n\treturn new Promise( async (resolve,reject) => {\r\n\t\t\r\n\t\tlet stream\r\n\t\tvideo = video || document.createElement('video')\r\n\r\n\t\t// stop it if it is already running?\r\n\t\t//video.stop()\r\n\r\n\t\tvideo.onloadedmetadata = (event) => { \r\n\t\t\t\r\n\t\t\t// if not from a user document interaction, this\r\n\t\t\t// will throw some blah blah error so we must wrap and re-act\r\n\t\t\ttry{\r\n\t\t\t\tvideo.play()\r\n\t\t\t\tvideo.width = video.videoWidth\r\n\t\t\t\tvideo.height = video.videoHeight\r\n\t\t\t\tresolve(stream)\t\r\n\t\t\t}catch(error){\r\n\t\t\t\treject(stream)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tvideo.onerror = event => reject(stream)\r\n\t\t\r\n\t\tconst videoConstraints = {}\r\n\t\tif (deviceId) {\r\n\t\t  videoConstraints.deviceId = { exact: deviceId }\r\n\t\t} else {\r\n\t\t  videoConstraints.facingMode = 'user' // 'environment'\r\n\t\t}\r\n\r\n\t\tconst constraints = {\r\n\t\t  video: videoConstraints,\r\n\t\t  audio: false\r\n\t\t}\r\n\r\n\t\ttry{\r\n\t\t\t// hope and preay that this is the right camera...\r\n\t\t\tstream = await navigator.mediaDevices.getUserMedia( constraints )\r\n\t\t\t\r\n\t\tvideo.srcObject = stream\r\n\t\t\t\r\n\t\t}catch(error){\r\n// console.error(\"stream\",{constraints,stream,video})\r\n\t\r\n\t\t\treject(error)\r\n\t\t}\r\n\t})\r\n}\r\n","import { clamp, TAU} from \"./maths\"\r\nimport PALETTE, { DEFAULT_COLOURS } from \"./palette\"\r\n\r\nasync function loadImage(image) {\r\n\treturn new Promise( async (resolve,reject) => {\r\n\t\tconst setSize = ()=> {\r\n\t\t\timage.width = image.naturalWidth\r\n\t\t\timage.height = image.naturalHeight\r\n\t\t}\r\n\t\t// check to see if has already loaded...\r\n\t\tif (image.naturalWidth > 0)\r\n\t\t{\r\n\t\t\tsetSize()\r\n\t\t\tresolve(image) \r\n\t\t}else{\r\n\t\t\timage.onloaded = ()=>{ \r\n\t\t\t\tsetSize()\r\n\t\t\t\tresolve(image)\r\n\t\t\t}\r\n\t\t\timage.onerror = error => reject(error)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport const setupImage = async (image) => {\r\n\treturn loadImage(image) \r\n}\r\n\r\nexport const canvas = document.querySelector(\"canvas\")\r\nexport const canvasContext = canvas.getContext('2d')\r\n\r\nlet width = canvas.width\r\nlet height = canvas.height\r\n\r\nexport const getCanvasDimensions = () => { \r\n\treturn {\r\n\t\twidth, height\r\n\t}\r\n\t// width:canvas.width, \r\n\t// height:canvas.height \r\n}\r\n\r\nexport const updateCanvasSize = (w,h) => {\r\n\twidth = w || canvas.width\r\n\theight = h || canvas.height\r\n\t// console.error(\"Updated canvas size to\", {w,h}, canvas.width, canvas.height)\r\n}\r\n\r\nexport const drawElement = element => {\r\n\t\r\n\tcanvasContext.save()\r\n\tcanvasContext.translate(width, 0)\r\n\tcanvasContext.scale(-1, 1)\r\n\t// draw data frame to canvas but invert horizontally?\r\n\tcanvasContext.drawImage(element , 0, 0)\r\n\tcanvasContext.restore()\r\n}\r\n\r\nexport const clear = () => {\r\n\t// canvasContext.fillStyle = 'rgba(255,0,0,0)'\r\n\tcanvasContext.clearRect(0, 0, width, height)\r\n\t// canvasContext.fillRect(0, 0, width, height)\r\n\t// canvasContext.restore()\r\n}\r\n\r\n// funky effects!\t\r\nexport const overdraw = (x=0, y=-1) => {\r\n\t\r\n\tcanvasContext.save()\r\n\t\r\n\t//canvasContext.translate(0, -1)\r\n\tcanvasContext.drawImage(canvas,x,y)\r\n\t// for (var i = 0; i < numImages; i++) {\r\n\t// \tcanvasContext.drawImage(img, i * img.width, 0);\r\n\t// }\r\n\tcanvasContext.restore()\r\n}\r\n\r\nexport const drawPart = (part, radius=4, colour=\"red\", lines=true) => {\r\n\t\r\n\tcanvasContext.fillStyle  = colour\r\n\tcanvasContext.strokeStyle = colour\r\n\t\r\n\tcanvasContext.moveTo(part[0][0], part[0][1])\r\n\t\r\n\tcanvasContext.beginPath()\r\n\tfor (let i = 0,  l= part.length; i < l; i++) \r\n\t{\r\n\t\tconst x = part[i][0]\r\n\t\tconst y = part[i][1]\r\n\r\n\t\tcanvasContext.arc(x, y, radius, 0, TAU)\r\n\t\t\r\n\t\tif (lines){\r\n\t\t\tcanvasContext.lineTo(x, y)\r\n\t\t}\r\n\t}\t\r\n\tcanvasContext.fill()\r\n\r\n\tif (lines){\r\n\t\tcanvasContext.stroke()\r\n\t}\r\n}\r\n\r\nexport const drawEye = (eye, colour=\"blue\") => {\r\n\tcanvasContext.fillStyle  = colour\r\n\t\r\n\tconst iris = eye[0]\r\n\tconst inner = eye[1]\r\n\tconst up = eye[2]\r\n\tconst outer = eye[3]\r\n\tconst down = eye[4]\r\n\t\r\n\tcanvasContext.strokeWidth = 0\r\n\t\r\n\t// draw eye path\r\n\tconst arcLength = 6\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.fillStyle  = 'blue'\r\n\tcanvasContext.arcTo(up[0], up[1], inner[0], inner[1], arcLength)\r\n\tcanvasContext.arcTo(inner[0], inner[1], down[0], down[1], arcLength)\r\n\tcanvasContext.arcTo(down[0], down[1], outer[0], outer[1], arcLength)\r\n\tcanvasContext.arcTo(outer[0], outer[1], up[0], up[1], arcLength)\r\n\tcanvasContext.fill()\r\n\r\n\tlet radius = 2// 1 + clamp( (10+iris[2]) * 0.8, 5, 10 )\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.fillStyle  = 'black'\r\n\tcanvasContext.arc(iris[0], iris[1], radius, 0, TAU)\r\n\tcanvasContext.fill()\r\n\r\n\t/*\r\n\tradius = 4\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.fillStyle  = 'blue'\r\n\tcanvasContext.arc(up[0], up[1], radius, 0, TAU)\r\n\tcanvasContext.fill()\r\n\tcanvasContext.closePath()\r\n\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.fillStyle  = 'purple'\r\n\tcanvasContext.arc(outer[0], outer[1], radius, 0, TAU)\r\n\tcanvasContext.fill()\r\n\t\t\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.fillStyle  = 'green'\r\n\tcanvasContext.arc(down[0], down[1], radius, 0, TAU)\r\n\tcanvasContext.fill()\r\n\r\n\t\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.fillStyle  = 'yellow'\r\n\tcanvasContext.arc(inner[0], inner[1], radius, 0, TAU)\r\n\tcanvasContext.fill()\r\n\t*/\r\n\r\n\t\r\n\t\t/*\r\n\t// there are four outer balls\r\n\tfor (let i = 0  ; i < eye.length -1; i++ ) \r\n\t{\r\n\t\tconst x = eye[i][0]\r\n\t\tconst y = eye[i][1]\r\n\t\tconst z = eye[i][2]\r\n\r\n\t\t// const radius = 1 + clamp( (10+z) * 0.8, 5, 10 )\r\n\t\t// canvasContext.arc(x, y, radius, 0, TAU)\r\n\t\t// canvasContext.fill()\r\n\r\n\t\tif (i > 0)\r\n\t\t{\r\n\t\t\tconst arcLength = 7 ;//Math.abs( i%2 ? iris - x : iris - y )\r\n\t\t\tconst previous = eye[i-1]\r\n\t\t\tcanvasContext.arcTo(previous[0],previous[1], x,y,arcLength)\r\n\t\t}\r\n\t}*/\r\n\t// canvasContext.stroke()\r\n}\r\n\r\nexport const drawNode = (pointA, pointB, radius=5, fill=\"blue\", showText=false) => {\r\n\t\r\n\tcanvasContext.fillStyle  = fill\r\n\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.arc(pointB[0], pointB[1], radius, 0, TAU)\r\n\tcanvasContext.fill()\r\n\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.arc(pointA[0], pointA[1], radius, 0, TAU)\r\n\tcanvasContext.fill()\r\n\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.moveTo(pointA[0], pointA[1])\r\n\r\n\tcanvasContext.strokeStyle = \"orange\"\r\n\tcanvasContext.fillStyle = \"orange\"\r\n\tcanvasContext.lineTo(pointB[0], pointB[1])\r\n\r\n\t// add text\r\n\tif (showText)\r\n\t{\r\n\t\tcanvasContext.stroke( )\r\n\t\tcanvasContext.fillStyle = PALETTE.blue\r\n\t\tcanvasContext.font = \"12px Oxanium\"\r\n\t\tcanvasContext.textAlign = \"center\"\r\n\t\tcanvasContext.fillText(`${Math.floor(mouthRange)}px`, pointA[0], pointA[1] - 20 )\r\n\t}\r\n}\r\n\r\n\r\nexport const drawMouth = ( prediction, colour=\"yellow\", debug=true ) => {\r\n\t\r\n\tconst { annotations, mouthRange,mouthWidth, mouthOpen } = prediction\r\n\tconst {lipsUpperInner,lipsLowerInner} = annotations \r\n\tconst lips = [lipsUpperInner, lipsLowerInner]\r\n\t\r\n\t// central piece of the mouth\r\n\tconst lipUpperMiddle = lipsUpperInner[5]\r\n\tconst lipLowerMiddle = lipsLowerInner[5]\r\n\r\n\t// kermit style mouth with gradient!\r\n\t// const topGradient = ctx.createLinearGradient(0, 0, 0, lipVerticalOpening)\r\n\t// topGradient.addColorStop(0, \"black\")\r\n\t// topGradient.addColorStop(1, \"white\")\r\n\r\n\t// how can we work out height of the mouth???\r\n\tconst mouthGradient = canvasContext.createLinearGradient(0, 0, mouthWidth, mouthRange )\r\n\tmouthGradient.addColorStop(0, colour)\r\n\tmouthGradient.addColorStop(0.5, PALETTE.dark )\r\n\tmouthGradient.addColorStop(1, colour)\r\n\r\n\t// canvasContext.beginPath()\r\n\t// canvasContext.moveTo(lipsUpper[0][0], lipsUpper[0][1])\r\n\t// for (let i = 0, q=lip.length; i < q; i++) \r\n\t// {\r\n\t// \tconst x = lip[i][0]\r\n\t// \tconst y = lip[i][1]\r\n\r\n\t// \tcanvasContext.lineTo(x, y)\r\n\t// }\t\r\n\t// canvasContext.fill()\r\n\t\r\n\t\r\n\tcanvasContext.beginPath()\r\n\tcanvasContext.moveTo(lipsUpperInner[0][0], lipsUpperInner[0][1])\r\n\r\n\tcanvasContext.fillStyle  = mouthGradient\r\n\r\n\t// dual lips mode\r\n\tfor (let l = 0, t=lips.length; l < t; l++) {\r\n\r\n\t\tconst lip = lips[l]\r\n\t\t\r\n\t\tfor (let i = 0, q=lip.length; i < q; i++) \r\n\t\t{\r\n\t\t\tconst x = lip[i][0]\r\n\t\t\tconst y = lip[i][1]\r\n\t\r\n\t\t\tcanvasContext.lineTo(x, y)\r\n\t\t}\t\r\n\t}\r\n\tcanvasContext.fill()\r\n\r\n\tif (debug)\r\n\t{\r\n\t\tdrawNode(lipLowerMiddle, lipUpperMiddle, 5)\r\n\t}\r\n\t\r\n\treturn {lipUpperMiddle, lipLowerMiddle }\r\n}\r\n\r\n\r\nexport const drawText = (x, y, text='', size='10px', align=\"center\") => {\r\n\tconst f = false\r\n\tcanvasContext.font = `900 ${size} Oxanium`\r\n\tcanvasContext.textAlign = align\r\n\tcanvasContext.fillStyle = f ? PALETTE.dark :  PALETTE.white\r\n\tcanvasContext.strokeStyle  = f ? PALETTE.white : PALETTE.dark\r\n\tcanvasContext.strokeText(`${text}`, x,y )\r\n\tcanvasContext.fillText(`${text}`, x, y )\r\n}\r\n\r\n// multi line\r\nexport const drawParagraph = (x, y, paragraph=[], size='10px', lineHeight=20) => {\r\n\tlet textY = y\r\n\tfor (const p of paragraph)\r\n\t{\r\n\t\tdrawText( x, textY, p, size, \"left\" )\r\n\t\ttextY += lineHeight\r\n\t}\r\n}\r\n\r\nexport const drawInstrument = (boundingBox, instrumentName, extra='') => {\r\n\r\n\t// use prediction.boundingBox\r\n\tconst {bottomRight, topLeft} = boundingBox\r\n\tconst text = `${instrumentName.toUpperCase()} - ${extra}`\r\n\t// canvasContext.beginPath()\r\n\t// // these aren't scaled :(\r\n\t// canvasContext.fillStyle  = colour\r\n\t// // canvasContext.rect( topLeft[0], topLeft[1], bottomRight[0], bottomRight[1] )\r\n\t// canvasContext.strokeRect( topLeft[0], topLeft[1], bottomRight[0], bottomRight[1] )\r\n\t// canvasContext.fill()\r\n\tdrawText( topLeft[0], topLeft[1], text, \"24px\" )\r\n}\r\n\r\nexport const drawBoundingBox = (boundingBox, colour='red') => {\r\n\tconst {bottomRight, topLeft} = boundingBox\r\n\tcanvasContext.beginPath()\r\n\t// these aren't scaled :(\r\n\tcanvasContext.fillStyle  = colour\r\n\t// canvasContext.rect( topLeft[0], topLeft[1], bottomRight[0], bottomRight[1] )\r\n\tcanvasContext.strokeRect( topLeft[0], topLeft[1], bottomRight[0], bottomRight[1] )\r\n\tcanvasContext.fill()\r\n}\r\n\r\nimport {easeInQuad } from './maths'\r\nconst modifier = easeInQuad\r\n\r\n\r\nlet nodeCount = 0\r\n\r\nexport const setNodeCount = value => nodeCount += value\r\n\r\nlet cycleCounter = 0\r\n\r\n// Just draws lots of dots on an image on the canvas\r\nexport const drawPoints = (prediction, hue=60, size=3, colourCycle=false, showText=true) => {\r\n\r\n\tconst { scaledMesh } = prediction\r\n\tconst quantity = scaledMesh.length\r\n\t\r\n\t// draw face points at correct position on canvas\r\n\tfor (let i = 0; i < quantity; i++) \r\n\t{\r\n\t\tconst x = scaledMesh[i][0]\r\n\t\tconst y = scaledMesh[i][1]\r\n\t\tconst z = scaledMesh[i][2]\r\n\t\t// z index should not be considered as depth as we\r\n\t\t// start from the front and head back\r\n\t\t\r\n\t\t// const depth = size * ( z + 2) * 0.1\r\n\t\tconst depth =  (1 - ( ((z+45) / 45)) )//* 0.1\r\n\t\t\r\n\t\tconst radius = clamp(size * modifier(depth), 1, size)\r\n\t\tconst alpha = clamp( depth, 0.5, 1)\r\n\t\t// console.log({depth,radius,alpha})\r\n// const radius = size * Math.abs(10 - z) * 0.1\r\n\t\tcanvasContext.beginPath()\r\n\t\t\r\n\t\tif (showText && ( i === (nodeCount % quantity) ))\r\n\t\t{\r\n\t\t\tcanvasContext.stroke( )\r\n\t\t\tcanvasContext.font = \"22px Oxanium\"\r\n\t\t\tcanvasContext.textAlign = \"center\"\r\n\t\t\tcanvasContext.fillStyle = PALETTE.dark\r\n\t\t\tcanvasContext.fillText(`#${i}`, x + radius + 1, y  )\r\n\t\t\t\r\n\t\t\tcanvasContext.fillStyle = `hsla(0,90%,70%,1)`\r\n\t\t\tcanvasContext.arc(x, y, radius * 3, 0, TAU)\r\n\t\t}else{\r\n\r\n\t\t\tconst modifiedHue = colourCycle ? ((cycleCounter++)+hue+360*i/quantity)%360 : hue\r\n\t\t\tcanvasContext.fillStyle = `hsla(${modifiedHue},70%,50%,${alpha})`\r\n\t\t\r\n\t\t\tcanvasContext.arc(x, y, radius, 0, TAU)\r\n\t\t}\r\n\r\n\t\tcanvasContext.fill()\r\n\t}\r\n}\r\n\r\n// every frame this gets called with an array of points in a mesh face\r\n// we use certain deviations to determine direction and mouth size\r\nexport const drawFace = (prediction, options=DEFAULT_COLOURS, singing=false, mouthOpen=false, debug=false) => {\r\n\r\n\t// singing - the user has their mouth open beyond the threshold\r\n\t// mouthOpen - the user has their mouth closed\r\n\r\n\t// extract our data\r\n\t// const imageData = canvasContext.getImageData(0, 0, canvas.width, canvas.height)\r\n\t// const data = imageData.data\r\n\t// now change the colour of certain pixels in line with the points\r\n\t// for (var i = 0; i < data.length; i += 4) \r\n\t// {\r\n    //     data[i]     = 255 - data[i];     // red\r\n    //     data[i + 1] = 255 - data[i + 1]; // green\r\n    //     data[i + 2] = 255 - data[i + 2]; // blue\r\n    // }\r\n\t// canvasContext.putImageData(imageData, 0, 0)\r\n\tconst { scaledMesh, annotations} = prediction\r\n\t\r\n\t// MOUTH ==============================================\r\n\tconst {lipsUpperInner,lipsLowerInner } = annotations\r\n\t\r\n\t// top lips\r\n\tif (mouthOpen && singing)\r\n\t{\r\n\t\tdrawMouth(prediction, options.mouth, debug)\r\n\t\t\r\n\t}else{\r\n\t\t// mouth closedc or not singing\r\n\t\tdrawMouth(prediction, options.mouthClosed, debug)\r\n\t}\r\n\t// drawPart(lipsUpperInner, options.lipsUpperInner)\r\n\t// drawPart(lipsLowerInner, options.lipsLowerInner)\r\n\t\r\n\t// EYES ===========================================\r\n\tconst {leftEyeIris,rightEyeIris} = annotations\r\n\t\r\n\tdrawEye(leftEyeIris, options.leftEyeIris)\r\n\tdrawEye(rightEyeIris, options.rightEyeIris)\r\n\r\n\t// const {leftEyeLower0,rightEyeLower0, midwayBetweenEyes} = annotations\r\n\t\r\n\t// drawPart(midwayBetweenEyes, options.midwayBetweenEyes )\r\n\t\r\n\t// eye lids\r\n\t// drawPart(leftEyeLower0, options.leftEyeLower0 )\r\n\t// drawPart(rightEyeLower0, options.rightEyeLower0 )\r\n\r\n\t// these aren't scaled :(\r\n\t// canvasContext.fillStyle  = 'orange'\r\n\t// canvasContext.beginPath()\r\n\t// canvasContext.arc( midwayBetweenEyes[0], midwayBetweenEyes[1], 10, 0, TAU )\r\n\t// canvasContext.fill()\r\n}\r\n\r\nexport const drawQuantise = (active, bar=-1, extras=\"\") => {\r\n\t\r\n\tconst stroke = 30\r\n\r\n\t// text\r\n\t// canvasContext.strokeWidth = stroke//+\"px\"\r\n\t// canvasContext.font = \"24px Oxanium\"\r\n\t// canvasContext.textAlign = \"left\"\r\n\t// canvasContext.fillStyle = PALETTE.grey\r\n\t// canvasContext.strokeStyle = PALETTE.dark\r\n\t// canvasContext.fillText( (bar === -1 ? `-` : `${bar+1}`) + extras, stroke, stroke)\r\n\t\r\n\t// blobs\r\n\tfor (let i=0, l= bar+1; i<l; ++i)\r\n\t{\r\n\t\tcanvasContext.fillStyle = i === bar ? PALETTE.cream : PALETTE.orange\r\n\t\tcanvasContext.strokeStyle = i ===  bar ? PALETTE.orange : PALETTE.brown\r\n\t\tcanvasContext.lineWidth = 4\r\n\t\tcanvasContext.beginPath()\r\n\t\tcanvasContext.arc( i * 20 + 20, 20, 4, 0, TAU )\r\n\t\tcanvasContext.fill()\r\n\t\tcanvasContext.stroke()\r\n\t}\r\n\t\r\n\t\t\r\n\t// draw a frame around the whole qindow\r\n\t// canvasContext.fillStyle = \"hsla(90, 80%, \"+(active ? 90 : 10 )+\"%, 0.9)\"\r\n\t// canvasContext.strokeRect(0,0,width,height)\r\n\t// console.log(\"quantise enabled!\")\r\n}\r\n\r\nexport const drawWaves = (dataArray, bufferLength)=>{\r\n\r\n\tcanvasContext.lineWidth = 2\r\n\tcanvasContext.strokeStyle = 'rgb(0, 0, 0)'\r\n\r\n\tcanvasContext.beginPath()\r\n\r\n\tconst sliceWidth = width * 1.0 / bufferLength\r\n\tlet x = 0\r\n\r\n\tfor(let i = 0; i < bufferLength; i++) \r\n\t{\r\n\t  const v = dataArray[i] / 128\r\n\t  const y = v * height / 2\r\n\r\n\t  if(i === 0) \r\n\t  {\r\n\t\tcanvasContext.moveTo(x, y)\r\n\t  } else {\r\n\t\tcanvasContext.lineTo(x, y)\r\n\t  }\r\n\r\n\t  x += sliceWidth\r\n\t}\r\n\r\n\tcanvasContext.lineTo(width, height/2)\r\n\tcanvasContext.stroke()\r\n}\r\n\r\n// converts the canvas into a PNG / JPEG and adds returns as a blob?\r\nexport const takePhotograph = (type=\"image/png\") => {\r\n\r\n\t// reassemble canvas?\r\n\treturn canvas.toDataURL(type)\r\n}\r\n\r\nexport const drawBars = (dataArray, bufferLength)=>{\r\n\r\n\tconst barWidth = (width / bufferLength) * 2\t// number here is just cos we only care about a really narrow band\r\n\tlet barHeight\r\n\tlet x = 0\r\n\r\n\tfor(let i = 0; i < bufferLength; i++) \r\n\t{\r\n\t\tbarHeight = dataArray[i]\r\n\r\n\t\tcanvasContext.fillStyle = 'hsla(' + (barHeight/height*360) + ',50%,50%,0.3)'\r\n\t\tcanvasContext.fillRect(x, 0, barWidth, barHeight )\r\n// height-barHeight\r\n\t\tx += barWidth + 1\r\n\t}\r\n\r\n\t// console.log(\"draw bars\", dataArray, bufferLength)\r\n\t\r\n}","// AKA \"Sequences\"\r\n\r\n// Just a simple factory for creating random repetitive beats\r\n\r\n// \r\nexport const factory = (bars=16) => {\r\n\r\n\t// each bar has 4 sub divisions\r\n\tconst gaps = bars * 4\r\n\tconst sequence = []\r\n\tfor (let i=0; i<gaps; ++i)\r\n\t{\r\n\t\tconst playNote = false\r\n\t\tsequence.push(playNote)\r\n\t}\r\n\treturn sequence\r\n}\r\n\r\nexport const pattern = ( sequence, offset=0 )=>{\r\n\r\n\tlet index = offset\r\n\t\r\n\tconst length = sequence.length - 1\r\n\r\n\t// accessors\r\n\treturn {\r\n\t\treset:()=> {\r\n\t\t\tindex = 0\r\n\t\t\treturn sequence[index]\r\n\t\t},\r\n\t\tprevious:()=>{\r\n\t\t\tconst newIndex = index - 1\r\n\t\t\tindex = newIndex < 0 ? length : newIndex\r\n\t\t\treturn sequence[index]\r\n\t\t},\r\n\t\tnext:()=>{\r\n\t\t\tconst newIndex = index + 1\r\n\t\t\tindex = newIndex > length ? 0 : newIndex\r\n\t\t\treturn sequence[index]\r\n\t\t},\r\n\t\tposition: i => sequence[i],\r\n\t\tlength:sequence.length,\r\n\t\tcurrent:()=> sequence[index],\r\n\t\tset:s => sequence = s\r\n\t}\r\n}\r\n\r\nconst kickSequences = [\r\n\t[\r\n\t\t255,0,0,0,\r\n\t\t255,0,0,0,\r\n\t\t255,0,0,0,\r\n\t\t255,0,0,0\r\n\t]\r\n]\r\n\r\nconst snareSequences = [\r\n\t[\r\n\t\t0,0,255,0,\r\n\t\t0,0,255,0,\r\n\t\t0,0,255,0,\r\n\t\t0,0,255,0\r\n\t]\r\n]\r\n\r\nconst hatSequences = [\r\n\t[\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,0,\r\n\t\t255,0,255,0\r\n\t]\r\n]\r\n\r\nexport const kickSequence = pattern( kickSequences[0] )\r\nexport const snareSequence = pattern(snareSequences[0])\r\nexport const hatSequence = pattern(hatSequences[0])\r\n\r\n// should we add ways to randomise this???\r\nexport const kitSequence = () => {\r\n\treturn {\r\n\t\tkick:pattern( kickSequences[0] ),\r\n\t\that:pattern( hatSequences[0] ),\r\n\t\tsnare:pattern( snareSequences[0] )\r\n\t}\r\n}\r\n\r\nexport const combinePatternWithInstrument = (pattern, instrument )=> {\r\n\r\n}\r\n\r\nexport const playNextPart = (pattern, instrument, ...options )=> {\r\n\tconst velocity = pattern.next()\r\n\tif (velocity > 0)\r\n\t{\r\n\t\tinstrument(velocity, ...options)\t// velocity\r\n\t\treturn true\r\n\t}else{\r\n\t\t// no note but noteOff?\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\n// const kickVelocity = patterns.kick.next()\r\n// if (kickVelocity > 0)\r\n// {\r\n// \tkit.kick()\t// kickVelocity\r\n// }\r\n// const snareVelocity = patterns.snare.next()\r\n// if (snareVelocity > 0)\r\n// {\r\n// \tkit.snare() // snareVelocity\r\n// }\r\n\r\n// const hatVelocity = patterns.hats.next()\r\n// if (hatVelocity > 0)\r\n// {\r\n// \tkit.hat() // snareVelocity\r\n// }\r\n\r\n","export const QUICK_START = [\r\n\t`No faces found!`,\r\n\t`Look at me and open your mouth`,\r\n\t`Move your face close to the screen`,\r\n\t`Try and put it in the centre`,\r\n\t`Make sure you allowed the camera!`\r\n]\r\nexport const INSTRUCTIONS = [\r\n\t`Welcome to the <strong>interFACE</strong>`,\r\n\t`Smile at the screen to begin...`,\r\n\t`Tilt your head forwards and backwards to change octave`,\r\n\t`Roll your head left and right to change pitch`,\r\n\t`Then open you mouth to make it louder!`,\r\n\t`Change instruments by tapping your face on screen`,\r\n\t`or hold your finger down to see all instruments`,\r\n\t`Facing left plays the black keys`,\r\n\t`Facing right plays the white keys`,\r\n\t`Connect a MIDI instrument and click the MIDI button`,\r\n\t`Use your eyes to shape the sound`,\r\n\t`To play the MIDI instrument with your head`,\r\n\t`Change tempo and quantize using the secret keys`,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t`Arrow Up - add more bars`,\r\n\t`Arrow Down - remove a bar`,\r\n\t`Arrow Left - previous instrument`,\r\n\t`Arrow Right - next instrument`,\r\n\t`A - 808`,\r\n\t`S - Snare`,\r\n\t`D - Closed Hat`,\r\n\t`Q - Clack`,\r\n\t`W - Cowbell`,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t``,\r\n\t`OMG I can't believe you are still here!`,\r\n\t`Secret Keys are as follows`,\r\n\t`B - Play percussive accompanyment (alpha)`,\r\n\t`TAB - show more info on screen`,\r\n]\r\n\r\nexport const getHelp = index => QUICK_START[index%(QUICK_START.length-1)]\r\nexport const getInstruction = index => INSTRUCTIONS[index%(INSTRUCTIONS.length-1)]\r\n\r\n// let instructionCount = 0\r\n// export const getNextInstruction = () => INSTRUCTIONS[(instructionCount+1)%(INSTRUCTIONS.length-2)]\r\n\r\nlet instructionCount = 0\r\nexport const getNextInstruction = () => INSTRUCTIONS[(instructionCount+1)%(INSTRUCTIONS.length-1)]","// each person in the app has their own instrument and face\r\nimport {DEFAULT_COLOURS} from './palette'\r\nimport { \r\n\tactive, playing, \r\n\tloadInstrument, NOTE_NAMES, randomInstrument, \r\n\tplayTrack,\r\n\tsetShape, setFrequency, \r\n\tgetNoteName} from './audio'\r\n\r\nimport { clear,\r\n\t\tdrawFace, drawPoints, drawPart, drawEye, drawMouth, drawBoundingBox, \r\n\t\tdrawText,drawParagraph,\r\n\t\tdrawWaves, drawBars, drawInstrument} from './visual'\r\nimport { rescale, easeInSine, easeOutSine , easeInCubic, easeOutCubic, linear, easeOutQuad, lerp, clamp, TAU} from \"./maths\"\r\nimport {INSTRUMENT_FOLDERS, cleanTitle, MUSICAL_NOTES} from './instruments'\r\nimport { setupInstrumentForm} from './ui'\r\n// options easeInCubic // easeInSine\r\n// const ease = easeOutQuad\r\n\r\n// Maximum simultaneous tracks to play (will wait for slot)\r\nconst MAX_TRACKS = 18\r\n\r\nexport const NAMES = ['a','b','c'].map( m => `person-${m}` )\r\n\t\t\t\t\r\nexport const DEFAULT_OPTIONS = {\r\n\t...DEFAULT_COLOURS,\r\n\r\n\t// Passed to the delay node\r\n\tdelayTime: 0.14,\r\n\tdelayLength: 10,\r\n\r\n\t// mouse hold for\r\n\tmouseHoldDuration:0.6,\r\n\r\n\t// how much feedback to apply to the feedback node\r\n\tfeedback:0.1,\r\n\r\n\t// size of the mouth to signal activity\r\n\tmouthCutOff:0.2,\r\n\t// size of the mouth to signal silence\r\n\tmouthSilence:0.05,\r\n\r\n\t// volume smooth rate = smaller means faster fades?\r\n\tvolumeRate:0.7,\r\n\r\n\t// this is the amount of decimal places used to smooth the mouth\r\n\t// the higher the number the less smooth the output is\r\n\t// 1 or 2 should be more than enough\r\n\tprecision:3,\r\n\r\n\t// set this to one of the interpolation methods above\r\n\tease:linear //easeOutSine // easeInSine // linear\r\n}\r\n\r\nexport default class Person{\r\n\r\n\tconstructor(name, audioContext, destinationNode, options={} ) {\r\n\t\t\r\n\t\tthis.options = Object.assign({}, DEFAULT_OPTIONS, options)\r\n\t\tthis.name = name\r\n\t\tthis.counter = 0\r\n\t\tthis.instrumentLoading = false\r\n\t\tthis.data = null\r\n\t\tthis.audioContext = audioContext\r\n\t\tthis.active = false\r\n\t\tthis.tracks = 0\r\n\t\tthis.octave = 4\r\n\t\tthis.midiActive = false\r\n\t\tthis.midiChannel = \"all\"\r\n\t\tthis.hue = options.hue || Math.random() * 360\r\n\t\tthis.saturation = 40\r\n\t\tthis.precision = Math.pow(10, parseInt(this.options.precision) )\r\n\t\t\r\n\t\t// Head orientation\r\n\t\tthis.yaw = 0\r\n\t\tthis.pitch = 0\r\n\t\tthis.roll = 0\r\n\r\n\t\tthis.singing = false\r\n\t\tthis.isMouthOpen = false\r\n\t\tthis.mouseDownAt = -1\r\n\t\tthis.lastNoteName = \"A0\"\r\n\t\tthis.debug = options.debug || false\r\n\r\n\t\t// this.range = 1 / ( 1 - this.options.mouthCutOff )\r\n\t\tthis.mouthScale = rescale(this.options.mouthCutOff)\r\n\r\n\t\tthis.stereoNode = audioContext.createStereoPanner()\r\n\r\n\t\tconst delayNode = audioContext.createDelay( this.options.delayLength )\r\n\t\tconst feedbackNode = audioContext.createGain()\r\n\t\tdelayNode.delayTime.value = this.options.delayTime\r\n\t\tfeedbackNode.gain.value = this.options.feedback\r\n\r\n\t\tthis.gainNode = audioContext.createGain()\r\n\t\tthis.gainNode.gain.value = 0\r\n\r\n\t\tthis.stereoNode.connect(this.gainNode)\r\n\r\n\t\t// DELAY\r\n\t\t// this.stereoNode.connect(delayNode)\r\n\r\n\t\t// delayNode.connect(feedbackNode)\r\n\t\t// feedbackNode.connect(delayNode)\r\n\r\n\t\t// //delayNode.connect(destinationNode)\r\n\t\t// delayNode.connect(this.gainNode)\r\n\r\n\t\tthis.gainNode.connect(destinationNode)\r\n\r\n\t\t// fetch dom element\r\n\t\tthis.button = document.getElementById(name)\r\n\t\tthis.button.addEventListener( 'mousedown', event => {\r\n\r\n\t\t\tthis.mouseDownAt = audioContext.currentTime\r\n\t\t\t\r\n\t\t\t// test to see how long we are help down for?\r\n\t\t\tconst waitPatiently = () => {\r\n\r\n\t\t\t\tconst elapsed = this.mouseDownFor\r\n\t\t\t\tif ( elapsed < this.options.mouseHoldDuration )\r\n\t\t\t\t{\r\n\t\t\t\t\t// ignore?\r\n\t\t\t\t\t//console.log(\"mouseDownFor\", elapsed )\r\n\r\n\t\t\t\t\trequestAnimationFrame( waitPatiently )\r\n\t\t\t\t}else if (this.isMouseDown){\r\n\t\t\t\t\t// FIXME\r\n\t\t\t\t\tthis.mouseDownAt = -1\r\n\t\t\t\t\tthis.showForm()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twaitPatiently()\r\n\t\t\tevent.preventDefault()\r\n\t\t})\r\n\r\n\t\t// FACE has been pressed!\r\n\t\tthis.button.addEventListener( 'mouseup', event => {\r\n\t\t\t// should this trigger something else depending on time?\r\n\t\t\tconst elapsed = this.mouseDownFor\r\n\t\t\t//console.log(\"mouseDownFor\", elapsed )\r\n\r\n\t\t\tif (this.instrumentLoading)\r\n\t\t\t{\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.loadInstrument( randomInstrument() )\r\n\t\t\t}\r\n\r\n\t\t\t// and reset\r\n\t\t\tthis.mouseDownAt = -1\r\n\t\t\tevent.preventDefault()\r\n\t\t})\r\n\r\n\t\tthis.button.addEventListener( 'mouseover', event => {\r\n\t\t\tthis.isMouseOver = true\r\n\t\t})\r\n\t\tthis.button.addEventListener( 'mouseout', event => {\r\n\t\t\tthis.isMouseOver = false\r\n\t\t})\r\n\t\t// this.button.addEventListener( 'instrumentchange', event => {\r\n\t\t// \tconsole.log(\"External event for instrument\", event )\r\n\t\t// })\r\n\r\n\t\t\r\n\t\t//console.log(\"Created new person\", this, \"connecting to\", destinationNode )\r\n\t}\r\n\r\n\tget mouseDownFor(){\r\n\t\treturn this.audioContext.currentTime - this.mouseDownAt\r\n\t}\r\n\r\n\tget isMouseDown(){\r\n\t\treturn this.mouseDownAt > -1\r\n\t}\r\n\r\n\tget isMouseHeld(){\r\n\t\treturn this.options.mouseHoldDuration < this.mouseDownFor\r\n\t}\r\n\r\n\tget controlsID (){\r\n\t\treturn `${this.name}-controls`\r\n\t}\r\n\tget controls (){\r\n\t\treturn document.getElementById(this.controlsID)\r\n\t}\r\n\r\n\tget instrumentName(){\r\n\t\treturn this.instrument ? this.instrument.name : 'loading'\r\n\t}\r\n\t\r\n\tget instrumentTitle(){\r\n\t\treturn this.instrument ? this.instrument.title : 'loading'\r\n\t}\r\n\t\r\n\tget instrumentIndex(){\r\n\t\treturn INSTRUMENT_FOLDERS.indexOf(this.instrumentName)\r\n\t}\r\n\r\n\tget hasMIDI(){\r\n\t\treturn this.midi && this.midiChannel\r\n\t}\r\n\r\n\tupdate(prediction){\r\n\t\t\r\n\t\tthis.counter++\r\n\t\tthis.data = prediction\r\n\t}\r\n\r\n\tdraw(prediction, showText=true){\r\n\t\t\r\n\t\tif (!prediction && !this.prediction)\r\n\t\t{\r\n\t\t\t// nothing to refresh so exit here\r\n\t\t\treturn\r\n\r\n\t\t}else if (!prediction){\r\n\t\t\t// refresh\r\n\t\t\tprediction = this.prediction\r\n\t\t}\r\n\t\t\r\n\t\tlet hue = this.hue\r\n\r\n\t\tif (this.instrumentLoading )\r\n\t\t{\r\n\t\t\thue += 120\r\n\t\t}\r\n\r\n\t\tlet saturation = this.saturation\r\n\r\n\t\tconst options = this.options\r\n\r\n\t\t// update colours...\r\n\t\toptions.dots = hue\r\n\t\toptions.mouth = `hsla(${(hue+30)%360},${saturation}%,40%,0.8)`\r\n\t\toptions.mouthClosed = `hsla(${(hue+30)%360},${saturation}%,10%,0.99)`\r\n\t\toptions.lipsUpperInner = `hsla(${(hue+50)%360},${saturation}%,50%,1)`\r\n\t\toptions.lipsLowerInner = `hsla(${(hue+50)%360},${saturation}%,50%,1)`\r\n\t\toptions.midwayBetweenEyes = `hsla(${(hue+270)%360},${saturation}%,50%,1)`\r\n\t\toptions.leftEyeLower0 = `hsla(${(hue+300)%360},${saturation}%,50%,0.8)`\r\n\t\toptions.rightEyeLower0 = `hsla(${(hue+300)%360},${saturation}%,50%,0.8)`\r\n\t\toptions.leftEyeIris = `hsla(${(hue+90)%360},${saturation}%,50%,1)`\r\n\t\toptions.rightEyeIris = `hsla(${(hue+90)%360},${saturation}%,50%,1)`\r\n\r\n\t\t// NB. assumes screen has been previously cleared\t\r\n\t\t// drawBox( prediction )\r\n\t\tdrawPoints( prediction, options.dots, 3, this.instrumentLoading, this.debug )\r\n\r\n\t\tdrawFace( prediction, options, this.singing, this.isMouthOpen, this.debug )\r\n\t\t\r\n\t\t// drawBoundingBox( prediction.boundingBox )\r\n\r\n\t\t// use the eyes?\r\n\t\t\r\n\t\t// if this is mirrored using the option in the TF model...\r\n\t\tconst {bottomRight, topLeft} = prediction.boundingBox\r\n\t\tconst boxWidth = Math.abs(bottomRight[0] - topLeft[0])\r\n\t\tconst boxHeight = Math.abs(bottomRight[1] - topLeft[1])\r\n\t\t\t\r\n\t\t// we only want this every frame or so as this \r\n\t\t// is altering the DOM\r\n\t\tif (this.counter%12===0)\r\n\t\t{\r\n\t\t\t// this.button.style.setProperty('--person-a-x', `${topLeft[0]}` )\r\n\t\t\tthis.button.style.setProperty('--person-a-x', `${bottomRight[0]}` )\r\n\t\t\tthis.button.style.setProperty('--person-a-y', topLeft[1] )\r\n\t\t\tthis.button.style.setProperty('--person-a-w', boxWidth )\r\n\t\t\tthis.button.style.setProperty('--person-a-h', boxHeight )\t\t\t\r\n\t\t}\r\n\r\n\t\t// everything here is for displaying the text\r\n\t\tif (!showText)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// draw silhoette if the user is \r\n\t\t// if you want it to flicker...\r\n\t\t// interacting&& this.counter%2 === 0)\r\n\t\tconst {silhouette} = prediction.annotations\r\n\t\t\t\r\n\t\t if ( this.isMouseOver || this.instrumentLoading ){\r\n\r\n\t\t\t// draw silhoette directly on the canvas or\r\n\t\t\t// SVG shape in the button for hitarea?\r\n\t\t\t// user is interacting...\r\n\t\t\tif (this.isMouseDown && !this.instrumentLoading)\r\n\t\t\t{\r\n\t\t\t\t// user is holding mouse down on user...\r\n\t\t\t\tconst remaining = 1 - this.mouseDownFor / this.options.mouseHoldDuration\r\n\t\t\t\tconst percentageRemaining = 100 - Math.ceil(remaining*100)\r\n\t\t\t\t\r\n\t\t\t\tif (this.isMouseHeld)\r\n\t\t\t\t{\r\n\t\t\t\t\t// user is holding mouse down on user...\r\n\t\t\t\t\tdrawInstrument(prediction.boundingBox, this.instrumentTitle, 'Select')\t\t\t\r\n\t\t\t\t\tdrawPart( silhouette, 4, `hsla(${hue},50%,${percentageRemaining}%,0.3)`, true)\r\n\t\t\t\t\tdrawParagraph(prediction.boundingBox.topLeft[0], prediction.boundingBox.topLeft[1] + 40, [`Press me`], '14px' )\r\n\t\t\t\t}else{\r\n\t\t\t\t\t\r\n\t\t\t\t\tdrawInstrument(prediction.boundingBox, this.instrumentTitle, `${100-percentageRemaining}`)\t\t\t\r\n\t\t\t\t\tdrawPart( silhouette, 4, `hsla(${hue},50%,${percentageRemaining}%,0.5)`, true)\r\n\t\t\t\t\tdrawParagraph(prediction.boundingBox.topLeft[0], prediction.boundingBox.topLeft[1] + 40, [`Hold me to see all instruments`], '14px' )\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\t// No mouse held\r\n\t\t\t\tdrawInstrument(prediction.boundingBox, this.instrumentTitle, '')\r\n\t\t\t\tdrawPart( silhouette, 4, 'hsla('+hue+',50%,50%,0.3)', true)\r\n\t\t\t\t/*\t\r\n\t\t\t\tconst offsetX = topLeft[0]\r\n\t\t\t\tconst offsetY = topLeft[1]\r\n\t\t\t\tconst svgCoord = coord => `${boxWidth - (coord[0] - offsetX)} ${(coord[1] - offsetY)}`\r\n\t\t\t\tconst svgPaths = silhouette.map( part => `L${svgCoord(part)}`)\r\n\t\t\t\tconst circles = silhouette.map( part =>{\r\n\t\t\t\t\tconst c = svgCoord(part)\r\n\t\t\t\t\treturn `<circle cx=\"${c[0] - offsetX}\" cy=\"${c[1]}\" r=\"20\" />`\r\n\t\t\t\t})\r\n\t\t\t\t// for outline...+ ` Z`\r\n\t\t\t\tconst svgPath = `M${svgCoord(silhouette[0])} ` + svgPaths.join(\" \")\r\n\t\t\t\t//  height=\"210\" width=\"400\"\r\n\t\t\t\tconst silhoetteShape = \r\n\t\t\t\t`<svg width=\"${boxWidth}\" height=\"${boxHeight}\" viewBox=\"0 0 ${boxWidth} ${boxHeight}\">\r\n\t\t\t\t\t<path d=\"${svgPath}\" />\r\n\t\t\t\t\t${circles.join('')}\r\n\t\t\t\t</svg>`\r\n\t\t\t\t//console.log(\"SVG\",silhouette, silhoetteShape)\r\n\t\t\t\tthis.button.innerHTML = silhoetteShape\t\r\n\t\t\t\t*/\r\n\r\n\t\t\t}\r\n\t\t\r\n\t\t}else if (this.instrumentLoading){\r\n\r\n\t\t\tdrawInstrument(prediction.boundingBox, this.instrumentTitle, 'loading...')\r\n\r\n\t\t}else{\r\n\r\n\t\t\t// Main flow \r\n\t\t\tconst extra = this.debug ? ` ${this.lastNoteName}`  : ` ${this.lastNoteName}`\r\n\r\n\t\t\t// eye:${prediction.eyeDirection}\r\n\t\t\tdrawInstrument(prediction.boundingBox, this.instrumentTitle, extra + (this.singing ? MUSICAL_NOTES[this.counter%(MUSICAL_NOTES.length-1)] : this.isMouthOpen ? '~' : '' )  )\r\n\t\t\tif (this.debug )\r\n\t\t\t{\r\n\t\t\t\tconst paragraphs = [\r\n\t\t\t\t\t`gain:${(this.gainNode.gain.value).toFixed(2)}`, \r\n\t\t\t\t\t`happiness:${(prediction.happiness).toFixed(3)}`, \r\n\t\t\t\t\t`mouthRange:${(prediction.mouthRange).toFixed(3)}`, \r\n\t\t\t\t\t`mouthRatio:${(prediction.mouthRatio).toFixed(3)}`, \r\n\t\t\t\t\t`mouthWidth:${(prediction.mouthWidth).toFixed(3)}`, \r\n\t\t\t\t\t`pitch:${(prediction.pitch).toFixed(3)}`, \r\n\t\t\t\t\t`roll:${(prediction.roll).toFixed(3)}`, \r\n\t\t\t\t\t`yaw:${(prediction.yaw).toFixed(3)}`,\r\n\t\t\t\t\t`eyes:${(prediction.eyeDirection).toFixed(3)}`,\r\n\t\t\t\t\t`mouth:${(prediction.mouthOpen).toFixed(3)}`,\r\n\t\t\t\t\t`dims:${(prediction.mouthWidth).toFixed(2)}x${(prediction.mouthRange).toFixed(2)}`,\r\n\t\t\t\t\t'facing'+prediction.lookingRight ? 'left' : 'right'\r\n\t\t\t\t]\r\n\t\t\t\tdrawParagraph(prediction.boundingBox.topLeft[0], prediction.boundingBox.topLeft[1] + 40, paragraphs, '14px' )\r\n\t\t\t\t// drawText(prediction.boundingBox.topLeft[0], prediction.boundingBox.topLeft[1], extra )\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Sing some songs\r\n\tsing(){\r\n\r\n\t\tif (!this.data || this.tracks > MAX_TRACKS)\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tyaw:0, pitch:0, \r\n\t\t\t\tlipPercentage:0,\r\n\t\t\t\teyeDirection:0\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// only change the note if not active?\r\n\t\tif (active)\r\n\t\t{\r\n\t\t\t// return\r\n\t\t}\r\n\r\n\t\tconst prediction = this.data\r\n\t\tconst options = this.options\r\n\r\n\t\t// do some checks on data to see if an event\r\n\t\t// should be triggered such as eye left / right\r\n\r\n\t\t// we want to ignore the 0-5px range too as inconclusive!\r\n\t\tconst lipPercentage = prediction.mouthOpen\r\n\t\t\r\n\t\t// Controls minor / major\r\n\t\tconst yaw = prediction.yaw\r\n\t\t\r\n\t\t// Octave control by up and down head\r\n\t\tconst pitch = clamp(0.5 * (prediction.pitch + 1), 0,1)\r\n\t\t// const pitch = (prediction.pitch + 1 ) / 2\r\n\t\t\r\n\t\t// -1 => +1 -> convert to \r\n\t\t// ignore < -0.5 and > 0.5\r\n\t\tconst roll = clamp((prediction.roll + 0.5) , 0, 1)\r\n\t\t\r\n\t\t// Controls stereo pan\r\n\t\tconst eyeDirection = clamp(prediction.eyeDirection , -1, 1 )  // (prediction.eyeDirection + 1)/ 2\r\n\r\n\t\t// volume is an log of this\r\n\t\tconst amp = clamp(lipPercentage, 0, 1 ) //- 0.1\r\n\t\tconst logAmp = options.ease(amp)\r\n\t\tconst newOctave = Math.round(pitch * 7)\r\n\r\n\t\t// octave needs to be up or down from existing?\r\n\t\tthis.octave = newOctave\r\n\r\n\t\t// FIXME: if we don't want the happy notes...\r\n\t\t// we can flip this on somehow?\r\n\t\tconst isMinor = prediction.lookingRight\r\n\r\n\t\tconst noteName = getNoteName(roll, this.octave, isMinor)\r\n\r\n\t\tthis.lastNoteName = noteName\r\n\t\tthis.hue = roll * 360\r\n\t\tthis.saturation = 100 * lipPercentage\r\n\r\n\r\n\t\t\r\n\t\t// console.log(\"Person\", prediction.yaw , yaw)\r\n\t\t// // console.log(\"Person\", {lipPercentage, yaw, pitch, amp, logAmp})\r\n\r\n\t\tthis.stereoNode.pan.value = eyeDirection\r\n\t\t//this.stereoNode.pan.setValueAtTime(panControl.value, this.audioContext.currentTime);\r\n\t\t\r\n\t\t// you want the scale to be from 0-1 but from 03-1\r\n\t\tlet newVolume\r\n\r\n\t\t// !active && active is updated by playback state\r\n\t\tif ( this.instrument && amp >= options.mouthCutOff )\r\n\t\t{\r\n\t\t\t// here is where we need to do our majic\r\n\t\t\t// play a note from the collectionlogAmp\r\n\t\t\tconst note = this.instrument[ noteName ]\r\n\r\n\t\t\tif (!note){\r\n\t\t\t\tconsole.log(\"note not found!\", {noteName, roll, octave:this.octave, isMinor})\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// TODO: add velocity logAmp\r\n\t\t\tthis.tracks++\r\n\t\t\tconst track = playTrack( note, 0, this.stereoNode ).then( ()=>{\r\n\t\t\t\tthis.active = false\r\n\t\t\t\tthis.tracks--\r\n\t\t\t\t//console.log(\"Sample completed playback... request tock\", this.tracks )\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t// rescale for 0.3->1\r\n\t\t\tnewVolume = this.mouthScale( amp )\r\n\t\t\t// curve\r\n\t\t\tnewVolume = options.ease(newVolume)\r\n\t\t\t// smooth\r\n\t\t\tnewVolume = Math.round( newVolume * this.precision ) / this.precision \r\n\t\t\t\r\n\t\t\t// newVolume = Math.round( newVolume * options.precision * 10 ) / (options.precision * 10) \r\n\t\t\t// newVolume = parseFloat( newVolume.toFixed( options.precision)) \r\n\t\t\t\r\n\t\t\t// send out some MIDI yum yum noteName && \r\n\t\t\tif (this.hasMIDI)\r\n\t\t\t// if (this.hasMIDI && !this.active)\r\n\t\t\t{\r\n\t\t\t\t// duration: 2000,\r\n\t\t\t\t// https://github.com/djipco/webmidi/blob/develop/src/Output.js\r\n\t\t\t\t//console.log(\"MIDI\",amp, noteNumber, INSTRUMENT_NAMES.length, noteName, this.midiChannel)\r\n\t\t\t\tconst midiOptions = { \r\n\t\t\t\t\tchannels:this.midiChannel,\r\n\t\t\t\t\tattack:amp\r\n\t\t\t\t}\r\n\t\t\t\tthis.midi.playNote( noteName, midiOptions )\r\n\t\t\t\tthis.midiActive = true\r\n\t\t\t\t\r\n\t\t\t\t// /console.log(\"MIDI noteOn\", noteName, \"Channel:\"+this.midiChannel, {midiOptions, channel:this.midiChannel, hasMIDI:this.hasMIDI} )\r\n\r\n\t\t\t}else{\r\n\t\t\t\t// add connect midi device note?\r\n\t\t\t}\r\n\r\n\t\t\tthis.singing = true\r\n\t\t\tthis.isMouthOpen = true\r\n\t\t\tthis.active = true\r\n\t\t\t\r\n\t\t}else if ( amp > options.mouthSilence && amp < options.mouthCutOff ){\r\n\r\n\t\t\t// this.gainNode.gain.value = 0\r\n\t\t\t//const destinationVolume  = 0 // logAmp\r\n\t\t\t\r\n\t\t\t// newVolume = this.gainNode.gain.value + (destinationVolume - this.gainNode.gain.value) * options.volumeRate\r\n\t\t\tnewVolume = 0\r\n\t\t\tthis.singing = false\r\n\t\t\tthis.isMouthOpen = true\r\n\r\n\t\t}else{\r\n\r\n\t\t\t// no instrument available or mouth totally closed\r\n\t\t\tnewVolume = 0\r\n\t\t\tthis.singing = false\r\n\t\t\tthis.isMouthOpen = false\r\n\t\t\t// no instruments in memory yet... play silence?\r\n\t\t\tif (this.hasMIDI)\r\n\t\t\t{\r\n\t\t\t\tthis.midi.stopNote(noteName)\r\n\t\t\t\tthis.midiActive = false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Midi pitch bending with eyes!\r\n\t\tif (this.hasMIDI && eyeDirection !== 0)\r\n\t\t{\r\n\t\t\tthis.midi.setPitchBend( eyeDirection )\r\n\t\t}\r\n\r\n\r\n// WebMidi.outputs[0].channels[1].stopNote(\"C3\", {time: \"+2500\"});\r\n\r\n// // Set polyphonic aftertouch : Send polyphonic aftertouch message to channel 8\r\n\r\n// WebMidi.outputs[0].channels[8].setKeyAftertouch(\"B#3\", 0.25);\r\n\r\n// // Set pitch bend value : The value is between -1 and 1 (a value of 0 means no bend).\r\n\r\n// WebMidi.outputs[0].channels[8].setPitchBend(-0.25);\r\n\r\n\t\t// try and smooth the volume if it is fading out...\r\n\t\t// if ( this.gainNode.gain.value > newVolume)\r\n\t\t// {\r\n\t\t// \t// volume decrease fades\r\n\t\t\tthis.gainNode.gain.value = this.gainNode.gain.value + (newVolume - this.gainNode.gain.value) * options.volumeRate\r\n\t\t\r\n\t\t// }else{\r\n\r\n\t\t// \tthis.gainNode.gain.value = this.gainNode.gain.value + (newVolume - this.gainNode.gain.value) * 0.9\r\n\t\t// \t// volume in direct\r\n\t\t// \t// this.gainNode.gain.value = newVolume\r\n\t\t// }\r\n\t\t// this.gainNode.gain.value = newVolume\r\n\t\t//console.log(\"Gain\", this.gainNode.gain.value, \"newVolume\", newVolume, \"Precision\", this.precision )\r\n\t\t\r\n\t\tthis.yaw = yaw\r\n\t\tthis.pitch = pitch\r\n\t\tthis.roll = roll\r\n\r\n\t\treturn {\r\n\t\t\tyaw, pitch, roll,\r\n\t\t\tlipPercentage,\r\n\t\t\teyeDirection\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadRandomInstrument(callback){\r\n\t\treturn await this.loadInstrument( randomInstrument(), callback )\r\n\t}\r\n\r\n\tasync loadPreviousInstrument(callback){\r\n\t\tconst index = this.index\r\n\t\tconst newIndex = index-1 < 0 ? 0 : index-1\r\n\t\treturn await this.loadInstrument( INSTRUMENT_FOLDERS[newIndex], callback )\r\n\t}\r\n\r\n\tasync loadNextInstrument(callback){\r\n\t\tconst index = this.index\r\n\t\tconst newIndex = index+1 >= INSTRUMENT_FOLDERS.length ? 0 : index+1\r\n\t\treturn await this.loadInstrument( INSTRUMENT_FOLDERS[newIndex], callback )\r\n\t}\r\n\r\n\t// we need loadiing events?\r\n\tasync loadInstrument(instrumentName, callback){\r\n\t\tthis.instrumentLoading = true\r\n\t\tthis.instrument = await loadInstrument( instrumentName )\r\n\t\tthis.instrumentLoading = false\r\n\t\tcallback && callback( instrumentName )\r\n\t\t\r\n\t\t// you have to dispatch the event from an element!\r\n\t\tthis.button.dispatchEvent(new CustomEvent(\"instrumentchange\", {\r\n\t\t\tdetail: { instrument:this.instrument, instrumentName }\r\n\t\t}))\r\n\r\n\t\treturn instrumentName\r\n\t}\r\n\r\n\tsetMIDI(midi, channel=\"all\"){\r\n\t\tthis.midiChannel = channel\r\n\t\tthis.midi = midi\r\n\t\tconsole.log(\"MIDI set for person\", this, \"Channel:\"+this.midiChannel, {midi,channel, hasMIDI:this.hasMIDI } )\r\n\t}\r\n\r\n\t// Instrument selected from the DOM UI face click\r\n\tonInstrumentInput(event) {\r\n\t\tconst id = event.target.id\r\n\t\t//console.error(id, \"on inputted\", event)\r\n\t\tthis.hideForm()\r\n\t\tthis.loadInstrument(id)\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n\tshowForm(){\r\n\r\n\t\t//console.log(\"showForm\", this.controlsID, this.controls)\r\n\r\n\t\tthis.controls.innerHTML = setupInstrumentForm( ()=> {})\r\n\t\tconst inputs = this.controls.querySelectorAll('input')\r\n\t\tinputs.forEach( input => input.addEventListener('change', event => this.onInstrumentInput(event) ), false)\r\n\t\t\r\n\t\t// find active input field and focus\r\n\t\tconst active = document.getElementById(this.instrumentName)\r\n\t\tif (active)\r\n\t\t{\r\n\t\t\tactive.focus()\r\n\t\t}else{\r\n\t\t\t// send focus to form\r\n\t\t\tthis.controls.focus()\r\n\t\t}\r\n\t\t// this.controls.classList.toggle(\"showing\",true)\r\n\t}\r\n\r\n\thideForm(){\r\n\t\t//const inputs = this.controls.querySelectorAll('input')\r\n\t\t//inputs.forEach( input => input.removeEventListener('change',  this.onInstrumentInput))\r\n\t\tthis.controls.innerHTML = ''\r\n\t}\r\n}","import Analytics from 'analytics'\r\nimport googleAnalytics from '@analytics/google-analytics'\r\n \r\n\r\nlet analytics\r\n\r\nexport const setupReporting = (name=\"Interface\", id=\"G-1XT0GV0L6J\") => {\r\n\tanalytics = Analytics({\r\n\t\tapp: name,\r\n\t\tplugins: [\r\n\t\t\tgoogleAnalytics({\r\n\t\t\t\ttrackingId:id\r\n\t\t\t})\r\n\t\t]\r\n\t})\r\n\t\r\n\t// Track a page view \r\n\tanalytics.page()\r\n\t\r\n\treturn analytics\r\n\t\r\n\r\n\t// // Track a custom event \r\n\t// analytics.track('playedVideo', {\r\n\t// \tcategory: 'Videos',\r\n\t// \tlabel: 'Fall Campaign',\r\n\t// \tvalue: 42\r\n\t// })\r\n\t\r\n\t// // Identify a visitor\r\n\t// analytics.identify('user-id-xyz', {\r\n\t// \tfirstName: 'bill',\r\n\t// \tlastName: 'murray'\r\n\t// })\t\r\n}\r\n\r\nexport const track = (name, data) => {\r\n\tif (analytics)\r\n\t{\r\n\t\tanalytics.track(name, data)\t\t\r\n\t}\r\n}\r\nexport const trackExit = () => {\r\n\t\r\n\t// // Track a custom event \r\n\t// analytics.track('playedVideo', {\r\n\t// \tcategory: 'Videos',\r\n\t// \tlabel: 'Fall Campaign',\r\n\t// \tvalue: 42\r\n\t// })\r\n}\r\n\r\nexport const trackError = (error, code=42, category=\"Fails\") =>{ \r\n\tif (analytics)\r\n\t{\r\n\t\tanalytics.track('Error', {\r\n\t\t\tcategory:category,\r\n\t\t\tlabel:error,\r\n\t\t\tvalue:code\r\n\t\t})\t\t\r\n\t}\r\n}","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar analytics = require('@analytics/core');\nvar analytics__default = _interopDefault(analytics);\nvar storage = _interopDefault(require('@analytics/storage-utils'));\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defineProperty = _defineProperty;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar objectSpread2 = _objectSpread2;\n\nfunction analyticsLib() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultSettings = {\n    storage: storage\n  };\n  return analytics__default(objectSpread2(objectSpread2({}, defaultSettings), opts));\n}\n\nexports.EVENTS = analytics.EVENTS;\nexports.CONSTANTS = analytics.CONSTANTS;\nexports.default = analyticsLib;\nexports.init = analyticsLib;\nexports.Analytics = analyticsLib;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar analyticsUtils = require('analytics-utils');\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar arrayWithoutHoles = _arrayWithoutHoles;\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nvar iterableToArray = _iterableToArray;\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar nonIterableSpread = _nonIterableSpread;\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nvar toConsumableArray = _toConsumableArray;\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _typeof_1 = createCommonjsModule(function (module) {\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\n});\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defineProperty = _defineProperty;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar objectSpread2 = _objectSpread2;\n\nvar FUNC = 'function';\nvar UNDEF = 'undefined';\nvar REDUCER = 'reducer';\nvar base = '@@redux/';\nvar ACTION_INIT = base + 'INIT';\nvar ACTION_TEST = base + Math.random().toString(36);\n\nvar $$observable =\n/* #__PURE__ */\nfunction () {\n  return (typeof Symbol === \"undefined\" ? \"undefined\" : _typeof_1(Symbol)) === FUNC && Symbol.observable || '@@observable';\n}();\n/*\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\n\nvar msg = ' != ' + FUNC;\nfunction createStore(reducer, preloadedState, enhancer) {\n  if (_typeof_1(preloadedState) === FUNC && _typeof_1(enhancer) === UNDEF) {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (_typeof_1(enhancer) !== UNDEF) {\n    if (_typeof_1(enhancer) !== FUNC) {\n      throw new Error('enhancer' + msg);\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (_typeof_1(reducer) !== FUNC) {\n    throw new Error(REDUCER + msg);\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /*\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    return currentState;\n  }\n  /*\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (_typeof_1(listener) !== FUNC) {\n      throw new Error('Listener' + msg);\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!analyticsUtils.isObject(action)) {\n      throw new Error('Act != obj');\n    }\n\n    if (_typeof_1(action.type) === UNDEF) {\n      throw new Error('ActType ' + UNDEF);\n    }\n\n    if (isDispatching) {\n      throw new Error('Dispatch in ' + REDUCER);\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (_typeof_1(nextReducer) !== FUNC) {\n      throw new Error('next ' + REDUCER + msg);\n    }\n\n    currentReducer = nextReducer;\n    dispatch({\n      type: ACTION_INIT\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var outerSubscribe = subscribe;\n    return defineProperty({\n      /*\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (_typeof_1(observer) !== 'object') {\n          throw new TypeError('Observer != obj');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, $$observable, function () {\n      return this;\n    });\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ACTION_INIT\n  });\n  return defineProperty({\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, $$observable, observable);\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && actionType.toString() || '?';\n  return 'action ' + actionName + REDUCER + ' ' + key + ' returns ' + UNDEF;\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ACTION_INIT\n    });\n\n    if (_typeof_1(initialState) === UNDEF || _typeof_1(reducer(undefined, {\n      type: ACTION_TEST\n    })) === UNDEF) {\n      throw new Error(REDUCER + ' ' + key + ' ' + UNDEF);\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (_typeof_1(reducers[key]) === FUNC) {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (_typeof_1(nextStateForKey) === UNDEF) {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, toConsumableArray(chain))(store.dispatch);\n      return objectSpread2(objectSpread2({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nvar coreEvents = [\n/**\n * `bootstrap` - Fires when analytics library starts up.\n * This is the first event fired. '.on/once' listeners are not allowed on bootstrap\n * Plugins can attach logic to this event\n */\n'bootstrap',\n/**\n * `params` - Fires when analytics parses URL parameters\n */\n'params',\n/**\n * `campaign` - Fires if params contain \"utm\" parameters\n */\n'campaign',\n/**\n * `initializeStart` - Fires before 'initialize', allows for plugins to cancel loading of other plugins\n */\n'initializeStart',\n/**\n * `initialize` - Fires when analytics loads plugins\n */\n'initialize',\n/**\n * `initializeEnd` - Fires after initialize, allows for plugins to run logic after initialization methods run\n */\n'initializeEnd',\n/**\n * `ready` - Fires when all analytic providers are fully loaded. This waits for 'initialize' and 'loaded' to return true\n */\n'ready',\n/**\n * `resetStart` - Fires if analytic.reset() is called.\n * Use this event to cancel reset based on a specific condition\n */\n'resetStart',\n/**\n * `reset` - Fires if analytic.reset() is called.\n * Use this event to run custom cleanup logic (if needed)\n */\n'reset',\n/**\n * `resetEnd` - Fires after analytic.reset() is called.\n * Use this event to run a callback after user data is reset\n */\n'resetEnd',\n/******************\n * Page Events\n ******************/\n\n/**\n * `pageStart` - Fires before 'page' events fire.\n *  This allows for dynamic page view cancellation based on current state of user or options passed in.\n */\n'pageStart',\n/**\n * `page` - Core analytics hook for page views.\n *  If your plugin or integration tracks page views, this is the event to fire on.\n */\n'page',\n/**\n * `pageEnd` - Fires after all registered 'page' methods fire.\n */\n'pageEnd',\n/**\n * `pageAborted` - Fires if 'page' call is cancelled by a plugin\n */\n'pageAborted',\n/****************\n * Track Events\n ***************/\n\n/**\n * `trackStart` - Called before the 'track' events fires.\n *  This allows for dynamic page view cancellation based on current state of user or options passed in.\n */\n'trackStart',\n/**\n * `track` - Core analytics hook for event tracking.\n *  If your plugin or integration tracks custom events, this is the event to fire on.\n */\n'track',\n/**\n * `trackEnd` - Fires after all registered 'track' events fire from plugins.\n */\n'trackEnd',\n/**\n * `trackAborted` - Fires if 'track' call is cancelled by a plugin\n */\n'trackAborted',\n/******************\n * Identify Events\n ******************/\n\n/**\n * `identifyStart` - Called before the 'identify' events fires.\n * This allows for dynamic page view cancellation based on current state of user or options passed in.\n */\n'identifyStart',\n/**\n * `identify` - Core analytics hook for user identification.\n *  If your plugin or integration identifies users or user traits, this is the event to fire on.\n */\n'identify',\n/**\n * `identifyEnd` - Fires after all registered 'identify' events fire from plugins.\n */\n'identifyEnd',\n/**\n * `identifyAborted` - Fires if 'track' call is cancelled by a plugin\n */\n'identifyAborted',\n/**\n * `userIdChanged` - Fires when a user id is updated\n */\n'userIdChanged',\n/******************\n * Plugin Events\n ******************/\n\n/**\n * `registerPlugins` - Fires when analytics is registering plugins\n */\n'registerPlugins',\n/**\n * `enablePlugin` - Fires when 'analytics.plugins.enable()' is called\n */\n'enablePlugin',\n/**\n * `disablePlugin` - Fires when 'analytics.plugins.disable()' is called\n */\n'disablePlugin',\n/*\n * `loadPlugin` - Fires when 'analytics.loadPlugin()' is called\n */\n// 'loadPlugin',\n\n/******************\n * Browser activity events\n ******************/\n\n/**\n * `online` - Fires when browser network goes online.\n * This fires only when coming back online from an offline state.\n */\n'online',\n/**\n * `offline` - Fires when browser network goes offline.\n */\n'offline',\n/******************\n * Storage events\n ******************/\n\n/**\n * `setItemStart` - Fires when analytics.storage.setItem is initialized.\n * This event gives plugins the ability to intercept keys & values and alter them before they are persisted.\n */\n'setItemStart',\n/**\n * `setItem` - Fires when analytics.storage.setItem is called.\n * This event gives plugins the ability to intercept keys & values and alter them before they are persisted.\n */\n'setItem',\n/**\n * `setItemEnd` - Fires when setItem storage is complete.\n */\n'setItemEnd',\n/**\n * `setItemAborted` - Fires when setItem storage is cancelled by a plugin.\n */\n'setItemAborted',\n/**\n * `removeItemStart` - Fires when analytics.storage.removeItem is initialized.\n * This event gives plugins the ability to intercept removeItem calls and abort / alter them.\n */\n'removeItemStart',\n/**\n * `removeItem` - Fires when analytics.storage.removeItem is called.\n * This event gives plugins the ability to intercept removeItem calls and abort / alter them.\n */\n'removeItem',\n/**\n * `removeItemEnd` - Fires when removeItem storage is complete.\n */\n'removeItemEnd',\n/**\n * `removeItemAborted` - Fires when removeItem storage is cancelled by a plugin.\n */\n'removeItemAborted'];\n/* Keys on a plugin that are not considered events */\n\nvar nonEvents = ['name', 'EVENTS', 'config', 'loaded'];\nvar pluginEvents = {\n  registerPluginType: function registerPluginType(name) {\n    return \"registerPlugin:\".concat(name);\n  },\n  pluginReadyType: function pluginReadyType(name) {\n    return \"ready:\".concat(name);\n  }\n};\nvar EVENTS = coreEvents.reduce(function (acc, curr) {\n  acc[curr] = curr;\n  return acc;\n}, pluginEvents);\nfunction isReservedAction(type) {\n  return coreEvents.includes(type);\n}\n\n/**\n * Anonymous visitor Id localstorage key\n * @typedef {String} ANON_ID\n */\nvar ANON_ID = '__anon_id';\n/**\n * Visitor Id localstorage key\n * @typedef {String} USER_ID\n */\n\nvar USER_ID = '__user_id';\n/**\n * Visitor traits localstorage key\n * @typedef {String} USER_TRAITS\n */\n\nvar USER_TRAITS = '__user_traits';\n\nvar constants = /*#__PURE__*/Object.freeze({\n  ANON_ID: ANON_ID,\n  USER_ID: USER_ID,\n  USER_TRAITS: USER_TRAITS\n});\n\nvar utmRegex = /^utm_/;\nvar propRegex = /^an_prop_/;\nvar traitRegex = /^an_trait_/; // Middleware runs during EVENTS.initialize\n\nfunction initializeMiddleware(instance) {\n  var _instance$storage = instance.storage,\n      setItem = _instance$storage.setItem,\n      getItem = _instance$storage.getItem;\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        /* Handle bootstrap event */\n        if (action.type === EVENTS.bootstrap) {\n          var params = action.params,\n              user = action.user;\n          /* 1. Set anonymous ID. TODO move UUID generation to main function. To fix race conditions */\n\n          if (!getItem(ANON_ID)) {\n            setItem(ANON_ID, user.anonymousId);\n          }\n          /* 2. Parse url params */\n\n\n          var paramsArray = Object.keys(action.params);\n\n          if (paramsArray.length) {\n            var an_uid = params.an_uid,\n                an_event = params.an_event;\n            var groupedParams = paramsArray.reduce(function (acc, key) {\n              // match utm params & dclid (display) & gclid (cpc)\n              if (key.match(utmRegex) || key.match(/^(d|g)clid/)) {\n                var cleanName = key.replace(utmRegex, '');\n                var keyName = cleanName === 'campaign' ? 'name' : cleanName;\n                acc.campaign[keyName] = params[key];\n              }\n\n              if (key.match(propRegex)) {\n                acc.props[key.replace(propRegex, '')] = params[key];\n              }\n\n              if (key.match(traitRegex)) {\n                acc.traits[key.replace(traitRegex, '')] = params[key];\n              }\n\n              return acc;\n            }, {\n              campaign: {},\n              props: {},\n              traits: {}\n            });\n            store.dispatch(objectSpread2(objectSpread2({\n              type: EVENTS.params,\n              raw: params\n            }, groupedParams), an_uid ? {\n              userId: an_uid\n            } : {}));\n            /* If userId set, call identify */\n\n            if (an_uid) {\n              // timeout to debounce and make sure integration is registered. Todo refactor\n              setTimeout(function () {\n                return instance.identify(an_uid, groupedParams.traits);\n              }, 0);\n            }\n            /* If tracking event set, call track */\n\n\n            if (an_event) {\n              // timeout to debounce and make sure integration is registered. Todo refactor\n              setTimeout(function () {\n                return instance.track(an_event, groupedParams.props);\n              }, 0);\n            } // if url has utm params\n\n\n            if (Object.keys(groupedParams.campaign).length) {\n              store.dispatch({\n                type: EVENTS.campaign,\n                campaign: groupedParams.campaign\n              });\n            }\n          }\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar LIBRARY_NAME = 'analytics';\nvar ID = 'userId';\nvar ANONID = 'anonymousId';\nvar ERROR_URL = 'https://lytics.dev/errors/';\n\n/* user reducer */\n\nfunction userReducer(storage) {\n  return function user() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (action.type === EVENTS.setItemEnd) {\n      // Set anonymousId if changed by storage.setItem\n      if (action.key === ANON_ID) {\n        return objectSpread2(objectSpread2({}, state), {\n          anonymousId: action.value\n        });\n      } // Set userId if changed by storage.setItem\n\n\n      if (action.key === USER_ID) {\n        return objectSpread2(objectSpread2({}, state), {\n          userId: action.value\n        });\n      }\n    }\n\n    switch (action.type) {\n      case EVENTS.identify:\n        return Object.assign({}, state, {\n          userId: action.userId,\n          traits: objectSpread2(objectSpread2({}, state.traits), action.traits)\n        });\n\n      case EVENTS.reset:\n        // Side effect to fix race condition in Node. TODO refactor\n        [ID, ANONID, 'traits'].forEach(function (key) {\n          analyticsUtils.globalContext[tempKey(key)] = null;\n        });\n        [USER_ID, ANON_ID, USER_TRAITS].forEach(function (key) {\n          storage.removeItem(key);\n        });\n        return Object.assign({}, state, {\n          userId: null,\n          // TODO reset anon id automatically?\n          anonymousId: null,\n          traits: {}\n        });\n\n      default:\n        return state;\n    }\n  };\n}\nfunction getPersistedUserData(params, storage) {\n  return {\n    userId: storage.getItem(USER_ID) || params.an_uid,\n    anonymousId: storage.getItem(ANON_ID) || params.an_aid || analyticsUtils.uuid(),\n    traits: storage.getItem(USER_TRAITS) || {}\n  };\n}\nvar tempKey = function tempKey(key) {\n  return '__TEMP__' + key;\n};\nfunction getUserPropFunc(storage) {\n  return function getUserProp(key, instance, payload) {\n    /* 1. Try current state */\n    var currentId = instance.getState('user')[key];\n\n    if (currentId) {\n      // console.log('from state', currentId)\n      return currentId;\n    }\n    /* 2. Try event payload */\n\n\n    if (payload && analyticsUtils.isObject(payload) && payload[key]) {\n      // console.log('from payload', payload[key])\n      return payload[key];\n    }\n    /* 3. Try persisted data */\n\n\n    var persistedInfo = getPersistedUserData({}, storage)[key];\n\n    if (persistedInfo) {\n      // console.log('from persistedInfo', persistedInfo)\n      return persistedInfo;\n    }\n    /* 4. Else, try to get in memory placeholder. TODO watch this for future issues */\n\n\n    if (analyticsUtils.globalContext[tempKey(key)]) {\n      // console.log('from global', globalContext[tempKey(key)])\n      return analyticsUtils.globalContext[tempKey(key)];\n    } // return null instead of undefined for consistency\n\n\n    return null;\n  };\n}\n\nfunction identifyMiddleware(instance) {\n  var _instance$storage = instance.storage,\n      setItem = _instance$storage.setItem,\n      removeItem = _instance$storage.removeItem,\n      getItem = _instance$storage.getItem;\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var userId = action.userId,\n            traits = action.traits,\n            options = action.options,\n            callback = action.callback;\n        /* Reset user id and traits */\n\n        if (action.type === EVENTS.reset) {\n          // Remove stored data\n          [USER_ID, USER_TRAITS, ANON_ID].forEach(function (key) {\n            return removeItem(key);\n          });\n          [ID, ANONID, 'traits'].forEach(function (key) {\n            analyticsUtils.globalContext[tempKey(key)] = undefined;\n          });\n\n          if (analyticsUtils.isFunction(callback)) {\n            callback();\n          }\n        }\n\n        if (action.type === EVENTS.identify) {\n          /* If no anon id. Set it! */\n          if (!getItem(ANON_ID)) {\n            setItem(ANON_ID, analyticsUtils.uuid());\n          }\n\n          var currentId = getItem(USER_ID);\n          var currentTraits = getItem(USER_TRAITS) || {};\n\n          if (currentId && currentId !== userId) {\n            store.dispatch({\n              type: EVENTS.userIdChanged,\n              old: {\n                userId: currentId,\n                traits: currentTraits\n              },\n              \"new\": {\n                userId: userId,\n                traits: traits\n              },\n              options: options\n            });\n          }\n          /* Save user id */\n\n\n          if (userId) {\n            setItem(USER_ID, userId);\n          }\n          /* Save user traits */\n\n\n          if (traits) {\n            setItem(USER_TRAITS, objectSpread2(objectSpread2({}, currentTraits), traits));\n          }\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n});\n\nvar regenerator = runtime_1;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar asyncToGenerator = _asyncToGenerator;\n\nvar stack = {};\n\nfunction runCallback(id, payload) {\n  if (stack[id] && analyticsUtils.isFunction(stack[id])) {\n    stack[id](payload);\n    delete stack[id];\n  }\n}\n\nfunction waitForReady(data, predicate, timeout) {\n  return new Promise(function (resolve, reject) {\n    if (predicate()) {\n      return resolve(data);\n    } // Timeout. Add to queue\n\n\n    if (timeout < 1) {\n      return reject(objectSpread2(objectSpread2({}, data), {}, {\n        queue: true\n      })); // eslint-disable-line\n    } // Else recursive retry\n\n\n    return pause(10).then(function (_) {\n      return waitForReady(data, predicate, timeout - 10).then(resolve, reject);\n    });\n  });\n}\n\nfunction pause(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n\nfunction processQueue(store, getPlugins, instance) {\n  var pluginMethods = getPlugins();\n\n  var _store$getState = store.getState(),\n      plugins = _store$getState.plugins,\n      context = _store$getState.context,\n      queue = _store$getState.queue,\n      user = _store$getState.user;\n\n  var isOnline = !context.offline;\n  /* If network connection found and there is items in queue, process them all */\n\n  if (isOnline && queue && queue.actions && queue.actions.length) {\n    var pipeline = queue.actions.reduce(function (acc, item, index) {\n      var isLoaded = plugins[item.plugin].loaded;\n\n      if (isLoaded) {\n        acc.process.push(item);\n        acc.processIndex.push(index);\n      } else {\n        acc.requeue.push(item);\n        acc.requeueIndex.push(index);\n      }\n\n      return acc;\n    }, {\n      processIndex: [],\n      process: [],\n      requeue: [],\n      requeueIndex: []\n    });\n\n    if (pipeline.processIndex && pipeline.processIndex.length) {\n      pipeline.processIndex.forEach(function (i) {\n        var processAction = queue.actions[i]; // console.log('RePROCESS THIS>', processAction)\n        // Call methods directly right now\n\n        var currentPlugin = processAction.plugin;\n        var currentMethod = processAction.payload.type;\n        var method = pluginMethods[currentPlugin][currentMethod];\n\n        if (method && analyticsUtils.isFunction(method)) {\n          /* enrich queued payload with userId / anon id if missing */\n\n          /* TODO hoist enrich into where action queued? */\n          var enrichedPayload = enrich(processAction.payload, user);\n          method({\n            payload: enrichedPayload,\n            config: plugins[currentPlugin].config,\n            instance: instance\n          });\n          /* Then redispatch for .on listeners / other middleware */\n\n          var pluginEvent = \"\".concat(currentMethod, \":\").concat(currentPlugin);\n          store.dispatch(objectSpread2(objectSpread2({}, enrichedPayload), {}, {\n            type: pluginEvent,\n\n            /* Internal data for analytics engine */\n            _: {\n              called: pluginEvent,\n              from: 'queueDrain'\n            }\n          }));\n        }\n      });\n      /* Removed processed actions */\n\n      var reQueueActions = queue.actions.filter(function (value, index) {\n        // !~ === return pipeline.processIndex.indexOf(index) === -1\n        return !~pipeline.processIndex.indexOf(index);\n      });\n      /* Set queue actions. TODO refactor to non mutatable or move out of redux */\n\n      queue.actions = reQueueActions;\n    }\n  }\n}\n/* Heartbeat retries queued events */\n\nfunction heartBeat(store, getPlugins, instance) {\n  return setInterval(function () {\n    return processQueue(store, getPlugins, instance);\n  }, 3e3);\n}\n\nfunction fixEmptyValues(obj, objTwo, key) {\n  if (obj.hasOwnProperty(key) && !obj[key] && objTwo[key]) {\n    // console.log('enrich', key)\n    return Object.assign({}, obj, defineProperty({}, \"\".concat(key), objTwo[key]));\n  }\n\n  return obj;\n} // Assign userId && anonymousId values if present in payload but null\n\n\nfunction enrich(payload) {\n  var user = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return [ID, ANONID].reduce(function (acc, key) {\n    return fixEmptyValues(acc, user, key);\n  }, payload);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar arrayWithHoles = _arrayWithHoles;\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nvar iterableToArrayLimit = _iterableToArrayLimit;\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar nonIterableRest = _nonIterableRest;\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nvar slicedToArray = _slicedToArray;\n\nfunction fitlerDisabledPlugins(allPlugins) {\n  var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return Object.keys(allPlugins).filter(function (name) {\n    var fromCallOptions = options.plugins || {}; // If enabled/disabled by options. Override settings\n\n    if (analyticsUtils.isBoolean(fromCallOptions[name])) {\n      return fromCallOptions[name];\n    } // If all: false disable everything unless true explicitly set\n\n\n    if (fromCallOptions.all === false) {\n      return false;\n    } // else use state.plugin settings\n\n\n    if (settings[name] && settings[name].enabled === false) {\n      return false;\n    }\n\n    return true;\n  }).map(function (name) {\n    return allPlugins[name];\n  });\n}\n\nvar endsWithStartRegex = /Start$/;\nvar bootstrapRegex = /^bootstrap/;\nvar readyRegex = /^ready/;\nfunction runPlugins (_x, _x2, _x3, _x4, _x5) {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = asyncToGenerator(\n  /*#__PURE__*/\n  regenerator.mark(function _callee(action, getPlugins, instance, store, eventsInfo) {\n    var pluginObject, originalType, updatedType, state, activePlugins, allActivePluginKeys, allMatches, actionBefore, actionDuring, afterName, actionAfter, cb;\n    return regenerator.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pluginObject = analyticsUtils.isFunction(getPlugins) ? getPlugins() : getPlugins;\n            originalType = action.type;\n            updatedType = originalType.replace(endsWithStartRegex, '');\n            /* If action already dispatched exit early. This makes it so plugin methods are not fired twice. */\n\n            if (!(action._ && action._.called)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", action);\n\n          case 5:\n            state = instance.getState();\n            /* Remove plugins that are disabled by options or by settings */\n\n            activePlugins = fitlerDisabledPlugins(pluginObject, state.plugins, action.options);\n            /* If analytics.plugin.enable calls do special behavior */\n\n            if (originalType === EVENTS.initializeStart && action.fromEnable) {\n              // Return list of all enabled plugins that have NOT been initialized yet\n              activePlugins = Object.keys(state.plugins).filter(function (name) {\n                var info = state.plugins[name];\n                return action.plugins.includes(name) && !info.initialized;\n              }).map(function (name) {\n                return pluginObject[name];\n              });\n            } // console.log(`engine activePlugins ${action.type}`, activePlugins)\n\n\n            allActivePluginKeys = activePlugins.map(function (p) {\n              return p.name;\n            }); // console.log('allActivePluginKeys', allActivePluginKeys)\n\n            allMatches = getAllMatchingCalls(originalType, activePlugins, pluginObject); // console.log('allMatches', allMatches)\n\n            /* @TODO cache matches and purge on enable/disable/add plugin */\n\n            /**\n             * Process all 'actionBefore' hooks\n             * Example:\n             *  This is processes 'pageStart' methods from plugins and update the event to send through the chain\n             */\n\n            _context.next = 12;\n            return processEvent({\n              action: action,\n              data: {\n                exact: allMatches.before,\n                namespaced: allMatches.beforeNS\n              },\n              state: state,\n              allPlugins: pluginObject,\n              allMatches: allMatches,\n              instance: instance,\n              store: store,\n              EVENTS: eventsInfo\n            });\n\n          case 12:\n            actionBefore = _context.sent;\n\n            if (!shouldAbortAll(actionBefore, allActivePluginKeys.length)) {\n              _context.next = 15;\n              break;\n            }\n\n            return _context.abrupt(\"return\", actionBefore);\n\n          case 15:\n            if (!(originalType === updatedType)) {\n              _context.next = 19;\n              break;\n            }\n\n            /* If type the same don't double process */\n            actionDuring = actionBefore;\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.next = 21;\n            return processEvent({\n              action: objectSpread2(objectSpread2({}, actionBefore), {}, {\n                type: updatedType\n              }),\n              data: {\n                exact: allMatches.during,\n                namespaced: allMatches.duringNS\n              },\n              state: state,\n              allPlugins: pluginObject,\n              allMatches: allMatches,\n              instance: instance,\n              store: store,\n              EVENTS: eventsInfo\n            });\n\n          case 21:\n            actionDuring = _context.sent;\n\n          case 22:\n            if (!originalType.match(endsWithStartRegex)) {\n              _context.next = 29;\n              break;\n            }\n\n            afterName = \"\".concat(updatedType, \"End\");\n            _context.next = 26;\n            return processEvent({\n              action: objectSpread2(objectSpread2({}, actionDuring), {}, {\n                type: afterName\n              }),\n              data: {\n                exact: allMatches.after,\n                namespaced: allMatches.afterNS\n              },\n              state: state,\n              allPlugins: pluginObject,\n              allMatches: allMatches,\n              instance: instance,\n              store: store,\n              EVENTS: eventsInfo\n            });\n\n          case 26:\n            actionAfter = _context.sent;\n            // console.log('____ actionAfter', actionAfter)\n\n            /* Fire callback if supplied */\n            cb = getCallback(actionAfter); // console.log(`cb ${updatedType}`, cb)\n\n            if (cb) {\n              /** @TODO figure out exact args calls and .on will get */\n              // TODO make err, payload so promisfy utilities will work\n              cb({\n                payload: actionAfter\n              }); // eslint-disable-line\n            }\n\n          case 29:\n            return _context.abrupt(\"return\", actionBefore);\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref.apply(this, arguments);\n}\n\nfunction getCallback(action) {\n  if (!action.meta) return false;\n  return Object.keys(action.meta).reduce(function (acc, key) {\n    var thing = action.meta[key];\n    if (analyticsUtils.isFunction(thing)) return thing;\n    return acc;\n  }, false);\n}\n/**\n * Async reduce over matched plugin methods\n * Fires plugin functions\n */\n\n\nfunction processEvent(_x6) {\n  return _processEvent.apply(this, arguments);\n}\n\nfunction _processEvent() {\n  _processEvent = asyncToGenerator(\n  /*#__PURE__*/\n  regenerator.mark(function _callee5(_ref2) {\n    var data, action, instance, state, allPlugins, allMatches, store, EVENTS$$1, plugins, context, method, isStartEvent, abortable, makeArgs, queueData, payloads, resolvedAction, endAction;\n    return regenerator.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            data = _ref2.data, action = _ref2.action, instance = _ref2.instance, state = _ref2.state, allPlugins = _ref2.allPlugins, allMatches = _ref2.allMatches, store = _ref2.store, EVENTS$$1 = _ref2.EVENTS;\n            plugins = state.plugins, context = state.context;\n            method = action.type;\n            isStartEvent = method.match(endsWithStartRegex); // console.log(`data ${method}`, data)\n            // console.log(`data allMatches ${method}`, allMatches)\n\n            abortable = data.exact.map(function (x) {\n              return x.pluginName;\n            });\n            /* If abort is called from xyzStart */\n\n            if (isStartEvent) {\n              abortable = allMatches.during.map(function (x) {\n                return x.pluginName;\n              });\n            }\n            /* make args for functions to concume */\n\n\n            makeArgs = argumentFactory(instance, abortable); // console.log('makeArgs', makeArgs)\n\n            /* Check if plugin loaded, if not mark action for queue */\n\n            queueData = data.exact.reduce(function (acc, thing) {\n              var pluginName = thing.pluginName,\n                  methodName = thing.methodName;\n              var addToQueue = false; // Queue actions if plugin not loaded except for initialize and reset\n\n              if (!methodName.match(/^initialize/) && !methodName.match(/^reset/)) {\n                addToQueue = !plugins[pluginName].loaded;\n              }\n              /* If offline and its a core method. Add to queue */\n\n\n              if (context.offline && methodName.match(/^(page|track|identify)/)) {\n                addToQueue = true;\n              }\n\n              acc[\"\".concat(pluginName)] = addToQueue;\n              return acc;\n            }, {});\n            /* generate plugin specific payloads */\n\n            _context5.next = 10;\n            return data.exact.reduce(\n            /*#__PURE__*/\n            function () {\n              var _ref6 = asyncToGenerator(\n              /*#__PURE__*/\n              regenerator.mark(function _callee3(scoped, curr, i) {\n                var pluginName, curScope, scopedPayload;\n                return regenerator.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        pluginName = curr.pluginName;\n                        _context3.next = 3;\n                        return scoped;\n\n                      case 3:\n                        curScope = _context3.sent;\n\n                        if (!(data.namespaced && data.namespaced[pluginName])) {\n                          _context3.next = 11;\n                          break;\n                        }\n\n                        _context3.next = 7;\n                        return data.namespaced[pluginName].reduce(\n                        /*#__PURE__*/\n                        function () {\n                          var _ref7 = asyncToGenerator(\n                          /*#__PURE__*/\n                          regenerator.mark(function _callee2(acc, p, count) {\n                            var curScopeData, genAbort, val, returnValue;\n                            return regenerator.wrap(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    genAbort = function _ref8(currentAct, pname, otherPlug) {\n                                      return function (reason, plugins) {\n                                        var callsite = otherPlug || pname; // console.log(`__abort msg: ${reason}`)\n                                        // console.log(`__abort ${pname}`)\n                                        // console.log(`__abort xxx: ${plugins}`)\n                                        // console.log(`__abort otherPlug`, otherPlug)\n\n                                        return objectSpread2(objectSpread2({}, currentAct), {}, {\n                                          abort: {\n                                            reason: reason,\n                                            plugins: plugins || [pname],\n                                            caller: method,\n                                            from: callsite\n                                          }\n                                        });\n                                      };\n                                    };\n\n                                    _context2.next = 3;\n                                    return acc;\n\n                                  case 3:\n                                    curScopeData = _context2.sent;\n\n                                    if (!(!p.method || !analyticsUtils.isFunction(p.method))) {\n                                      _context2.next = 6;\n                                      break;\n                                    }\n\n                                    return _context2.abrupt(\"return\", curScopeData);\n\n                                  case 6:\n                                    /* Make sure plugins don’t call themselves */\n                                    validateMethod(p.methodName, p.pluginName);\n                                    _context2.next = 9;\n                                    return p.method({\n                                      payload: curScopeData,\n                                      instance: instance,\n                                      abort: genAbort(curScopeData, pluginName, p.pluginName),\n                                      config: getConfig(p.pluginName, plugins, allPlugins),\n                                      plugins: plugins\n                                    });\n\n                                  case 9:\n                                    val = _context2.sent;\n                                    returnValue = analyticsUtils.isObject(val) ? val : {};\n                                    return _context2.abrupt(\"return\", Promise.resolve(objectSpread2(objectSpread2({}, curScopeData), returnValue)));\n\n                                  case 12:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _callee2);\n                          }));\n\n                          return function (_x10, _x11, _x12) {\n                            return _ref7.apply(this, arguments);\n                          };\n                        }(), Promise.resolve(action));\n\n                      case 7:\n                        scopedPayload = _context3.sent;\n\n                        /* Set scoped payload */\n                        curScope[pluginName] = scopedPayload;\n                        _context3.next = 12;\n                        break;\n\n                      case 11:\n                        /* Set payload as default action */\n                        curScope[pluginName] = action;\n\n                      case 12:\n                        return _context3.abrupt(\"return\", Promise.resolve(curScope));\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x7, _x8, _x9) {\n                return _ref6.apply(this, arguments);\n              };\n            }(), Promise.resolve({}));\n\n          case 10:\n            payloads = _context5.sent;\n            _context5.next = 13;\n            return data.exact.reduce(\n            /*#__PURE__*/\n            function () {\n              var _ref9 = asyncToGenerator(\n              /*#__PURE__*/\n              regenerator.mark(function _callee4(promise, curr, i) {\n                var lastLoop, pluginName, currentPlugin, currentActionValue, payloadValue, funcArgs, val, returnValue, merged, scopedPayload, nameSpaceEvent, actionDepth, updatedPayload;\n                return regenerator.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        lastLoop = data.exact.length === i + 1;\n                        pluginName = curr.pluginName;\n                        currentPlugin = allPlugins[pluginName];\n                        _context4.next = 5;\n                        return promise;\n\n                      case 5:\n                        currentActionValue = _context4.sent;\n                        payloadValue = payloads[pluginName] ? payloads[pluginName] : {};\n                        /* If eventStart, allow for value merging */\n\n                        if (isStartEvent) {\n                          payloadValue = currentActionValue;\n                        }\n\n                        if (!shouldAbort(payloadValue, pluginName)) {\n                          _context4.next = 11;\n                          break;\n                        }\n\n                        // console.log(`> Abort from payload specific \"${pluginName}\" abort value`, payloadValue)\n                        abortDispatch({\n                          data: payloadValue,\n                          method: method,\n                          instance: instance,\n                          pluginName: pluginName,\n                          store: store\n                        });\n                        return _context4.abrupt(\"return\", Promise.resolve(currentActionValue));\n\n                      case 11:\n                        if (!shouldAbort(currentActionValue, pluginName)) {\n                          _context4.next = 14;\n                          break;\n                        }\n\n                        // console.log(`> Abort from ${method} abort value`, currentActionValue)\n                        if (lastLoop) {\n                          abortDispatch({\n                            data: currentActionValue,\n                            method: method,\n                            instance: instance,\n                            // pluginName,\n                            store: store\n                          });\n                        }\n\n                        return _context4.abrupt(\"return\", Promise.resolve(currentActionValue));\n\n                      case 14:\n                        if (!(queueData.hasOwnProperty(pluginName) && queueData[pluginName] === true)) {\n                          _context4.next = 17;\n                          break;\n                        }\n\n                        // console.log('Queue this instead', pluginName)\n                        store.dispatch({\n                          type: \"queue\",\n                          plugin: pluginName,\n                          payload: payloadValue,\n\n                          /* Internal data for analytics engine */\n                          _: {\n                            called: \"queue\",\n                            from: 'queueMechanism' // for debugging\n\n                          }\n                        });\n                        return _context4.abrupt(\"return\", Promise.resolve(currentActionValue));\n\n                      case 17:\n                        /*\n                        const checkForLoaded = () => {\n                          const p = instance.getState('plugins')\n                          return p[currentPlugin.name].loaded\n                        }\n                        // const p = instance.getState('plugins')\n                        console.log(`loaded \"${currentPlugin.name}\" > ${method}:`, p[currentPlugin.name].loaded)\n                        // await waitForReady(currentPlugin, checkForLoaded, 10000).then((d) => {\n                        //   console.log(`Loaded ${method}`, currentPlugin.name)\n                        // }).catch((e) => {\n                        //   console.log(`Error ${method} ${currentPlugin.name}`, e)\n                        //   // TODO dispatch failure\n                        // })\n                        */\n                        // @TODO figure out if we want queuing semantics\n                        funcArgs = makeArgs(payloads[pluginName], allPlugins[pluginName]); // console.log(`funcArgs ${method} ${pluginName}`, funcArgs)\n\n                        /* Run the plugin function */\n\n                        _context4.next = 20;\n                        return currentPlugin[method]({\n                          // currentPlugin: pluginName,\n                          abort: funcArgs.abort,\n                          // Send in original action value or scope payload\n                          payload: payloadValue,\n                          instance: instance,\n                          config: getConfig(pluginName, plugins, allPlugins),\n                          plugins: plugins\n                        });\n\n                      case 20:\n                        val = _context4.sent;\n                        returnValue = analyticsUtils.isObject(val) ? val : {};\n                        merged = objectSpread2(objectSpread2({}, currentActionValue), returnValue);\n                        scopedPayload = payloads[pluginName]; // || currentActionValue\n\n                        if (shouldAbort(scopedPayload, pluginName)) {\n                          // console.log(`>> HANDLE abort ${method} ${pluginName}`)\n                          abortDispatch({\n                            data: scopedPayload,\n                            method: method,\n                            instance: instance,\n                            pluginName: pluginName,\n                            store: store\n                          });\n                        } else {\n                          nameSpaceEvent = \"\".concat(method, \":\").concat(pluginName);\n                          actionDepth = (nameSpaceEvent.match(/:/g) || []).length;\n\n                          if (actionDepth < 2 && !method.match(bootstrapRegex) && !method.match(readyRegex)) {\n                            updatedPayload = isStartEvent ? merged : payloadValue; // Dispatched for `.on('xyz') listeners.\n\n                            instance.dispatch(objectSpread2(objectSpread2({}, updatedPayload), {}, {\n                              type: nameSpaceEvent,\n                              _: {\n                                called: nameSpaceEvent,\n                                from: 'submethod'\n                              }\n                            }));\n                          }\n                        } // console.log('merged', merged)\n\n\n                        return _context4.abrupt(\"return\", Promise.resolve(merged));\n\n                      case 26:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x13, _x14, _x15) {\n                return _ref9.apply(this, arguments);\n              };\n            }(), Promise.resolve(action));\n\n          case 13:\n            resolvedAction = _context5.sent;\n\n            if (!(!method.match(endsWithStartRegex) && !method.match(/^registerPlugin/) && // !method.match(/^disablePlugin/) &&\n            // !method.match(/^enablePlugin/) &&\n            !method.match(readyRegex) && !method.match(bootstrapRegex) && !method.match(/^params/) && !method.match(/^userIdChanged/))) {\n              _context5.next = 21;\n              break;\n            }\n\n            if (EVENTS$$1.plugins.includes(method)) ; // console.log(`Dont dispatch for ${method}`, resolvedAction)\n            // return resolvedAction\n\n            /*\n              Verify this original action setup.\n              It's intended to keep actions from double dispatching themselves\n            */\n\n\n            if (!(resolvedAction._ && resolvedAction._.originalAction === method)) {\n              _context5.next = 18;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", resolvedAction);\n\n          case 18:\n            endAction = objectSpread2(objectSpread2({}, resolvedAction), {\n              _: {\n                originalAction: resolvedAction.type,\n                called: resolvedAction.type,\n                from: 'engineEnd'\n              }\n            });\n            /* If all plugins are aborted, dispatch xAborted */\n\n            if (shouldAbortAll(resolvedAction, data.exact.length) && !method.match(/End$/)) {\n              endAction = objectSpread2(objectSpread2({}, endAction), {\n                type: resolvedAction.type + 'Aborted'\n              });\n            }\n\n            store.dispatch(endAction);\n\n          case 21:\n            return _context5.abrupt(\"return\", resolvedAction);\n\n          case 22:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _processEvent.apply(this, arguments);\n}\n\nfunction abortDispatch(_ref3) {\n  var data = _ref3.data,\n      method = _ref3.method,\n      instance = _ref3.instance,\n      pluginName = _ref3.pluginName,\n      store = _ref3.store;\n  var postFix = pluginName ? ':' + pluginName : '';\n  var abortEvent = method + 'Aborted' + postFix;\n  store.dispatch(objectSpread2(objectSpread2({}, data), {}, {\n    type: abortEvent,\n    _: {\n      called: abortEvent,\n      from: 'abort'\n    }\n  }));\n}\n\nfunction getConfig(name, pluginState, allPlugins) {\n  var pluginData = pluginState[name] || allPlugins[name];\n\n  if (pluginData && pluginData.config) {\n    return pluginData.config;\n  }\n\n  return {};\n}\n\nfunction getPluginFunctions(methodName, plugins) {\n  return plugins.reduce(function (arr, plugin) {\n    return !plugin[methodName] ? arr : arr.concat({\n      methodName: methodName,\n      pluginName: plugin.name,\n      method: plugin[methodName]\n    });\n  }, []);\n}\n\nfunction formatMethod(type) {\n  return type.replace(endsWithStartRegex, '');\n}\n/**\n * Return array of event names\n * @param  {String} eventType - original event type\n * @param  {String} namespace - optional namespace postfix\n * @return {array} - type, method, end\n */\n\n\nfunction getEventNames(eventType, namespace) {\n  var method = formatMethod(eventType);\n  var postFix = namespace ? \":\".concat(namespace) : ''; // `typeStart:pluginName`\n\n  var type = \"\".concat(eventType).concat(postFix); // `type:pluginName`\n\n  var methodName = \"\".concat(method).concat(postFix); // `typeEnd:pluginName`\n\n  var end = \"\".concat(method, \"End\").concat(postFix);\n  return [type, methodName, end];\n}\n/* Collect all calls for a given event in the system */\n\n\nfunction getAllMatchingCalls(eventType, activePlugins, allPlugins) {\n  var eventNames = getEventNames(eventType); // console.log('eventNames', eventNames)\n  // 'eventStart', 'event', & `eventEnd`\n\n  var core = eventNames.map(function (word) {\n    return getPluginFunctions(word, activePlugins);\n  }); // Gather nameSpaced Events\n\n  return activePlugins.reduce(function (acc, plugin) {\n    var name = plugin.name;\n    var nameSpacedEvents = getEventNames(eventType, name); // console.log('eventNames namespaced', nameSpacedEvents)\n\n    var _nameSpacedEvents$map = nameSpacedEvents.map(function (word) {\n      return getPluginFunctions(word, activePlugins);\n    }),\n        _nameSpacedEvents$map2 = slicedToArray(_nameSpacedEvents$map, 3),\n        beforeFuncs = _nameSpacedEvents$map2[0],\n        duringFuncs = _nameSpacedEvents$map2[1],\n        afterFuncs = _nameSpacedEvents$map2[2];\n\n    if (beforeFuncs.length) {\n      acc.beforeNS[name] = beforeFuncs;\n    }\n\n    if (duringFuncs.length) {\n      acc.duringNS[name] = duringFuncs;\n    }\n\n    if (afterFuncs.length) {\n      acc.afterNS[name] = afterFuncs;\n    }\n\n    return acc;\n  }, {\n    before: core[0],\n    beforeNS: {},\n    during: core[1],\n    duringNS: {},\n    after: core[2],\n    afterNS: {}\n  });\n}\n\nfunction shouldAbort(_ref4, pluginName) {\n  var abort = _ref4.abort;\n  if (!abort) return false;\n  if (abort === true) return true;\n  return includes(abort, pluginName) || abort && includes(abort.plugins, pluginName);\n}\n\nfunction shouldAbortAll(_ref5, pluginsCount) {\n  var abort = _ref5.abort;\n  if (!abort) return false;\n  if (abort === true || analyticsUtils.isString(abort)) return true;\n  var plugins = abort.plugins;\n  return isArray(abort) && abort.length === pluginsCount || isArray(plugins) && plugins.length === pluginsCount;\n}\n\nfunction isArray(arr) {\n  return Array.isArray(arr);\n}\n\nfunction includes(arr, name) {\n  if (!arr || !isArray(arr)) return false;\n  return arr.includes(name);\n}\n/**\n * Generate arguments to pass to plugin methods\n * @param  {Object} instance - analytics instance\n * @param  {array} abortablePlugins - plugins that can be cancelled by caller\n * @return {*} function to inject plugin params\n */\n\n\nfunction argumentFactory(instance, abortablePlugins) {\n  // console.log('abortablePlugins', abortablePlugins)\n  return function (action, plugin, otherPlugin) {\n    var config = plugin.config,\n        name = plugin.name;\n    var method = \"\".concat(name, \".\").concat(action.type);\n\n    if (otherPlugin) {\n      method = otherPlugin.event;\n    }\n\n    var abortF = action.type.match(endsWithStartRegex) ? abortFunction(name, method, abortablePlugins, otherPlugin, action) : notAbortableError(action, method);\n    return {\n      /* self: plugin, for future maybe */\n      // clone objects to avoid reassign\n      payload: formatPayload(action),\n      instance: instance,\n      config: config || {},\n      abort: abortF\n    };\n  };\n}\n\nfunction abortFunction(pluginName, method, abortablePlugins, otherPlugin, action) {\n  return function (reason, plugins) {\n    var caller = otherPlugin ? otherPlugin.name : pluginName;\n    var pluginsToAbort = plugins && isArray(plugins) ? plugins : abortablePlugins;\n\n    if (otherPlugin) {\n      pluginsToAbort = plugins && isArray(plugins) ? plugins : [pluginName];\n\n      if (!pluginsToAbort.includes(pluginName) || pluginsToAbort.length !== 1) {\n        throw new Error(\"Method \".concat(method, \" can only abort \").concat(pluginName, \" plugin. \").concat(JSON.stringify(pluginsToAbort), \" input valid\"));\n      }\n    }\n\n    return objectSpread2(objectSpread2({}, action), {}, {\n      // 🔥 todo verify this merge is ok\n      abort: {\n        reason: reason,\n        plugins: pluginsToAbort,\n        caller: method,\n        _: caller\n      }\n    });\n  };\n}\n\nfunction notAbortableError(action, method) {\n  return function () {\n    throw new Error(action.type + ' action not cancellable. Remove abort in ' + method);\n  };\n}\n/**\n * Verify plugin is not calling itself with whatever:myPluginName self refs\n */\n\n\nfunction validateMethod(actionName, pluginName) {\n  var text = getNameSpacedAction(actionName);\n  var methodCallMatchesPluginNamespace = text && text.name === pluginName;\n\n  if (methodCallMatchesPluginNamespace) {\n    var sub = getNameSpacedAction(text.method);\n    var subText = sub ? 'or ' + sub.method : '';\n    throw new Error([pluginName + ' plugin is calling method ' + actionName, 'Plugins cant call self', \"Use \".concat(text.method, \" \").concat(subText, \" in \").concat(pluginName, \" plugin insteadof \").concat(actionName)].join('\\n'));\n  }\n}\n\nfunction getNameSpacedAction(event) {\n  var split = event.match(/(.*):(.*)/);\n\n  if (!split) {\n    return false;\n  }\n\n  return {\n    method: split[1],\n    name: split[2]\n  };\n}\n\nfunction formatPayload(action) {\n  return Object.keys(action).reduce(function (acc, key) {\n    // redact type from { payload }\n    if (key === 'type') {\n      return acc;\n    }\n\n    if (analyticsUtils.isObject(action[key])) {\n      acc[key] = Object.assign({}, action[key]);\n    } else {\n      acc[key] = action[key];\n    }\n\n    return acc;\n  }, {});\n}\n/*\nfunction getMatchingMethods(eventType, activePlugins) {\n  const exact = getPluginFunctions(eventType, activePlugins)\n  // console.log('exact', exact)\n  // Gather nameSpaced Events\n  return activePlugins.reduce((acc, plugin) => {\n    const { name } = plugin\n    const clean = getPluginFunctions(`${eventType}:${name}`, activePlugins)\n    if (clean.length) {\n      acc.namespaced[name] = clean\n    }\n    return acc\n  }, {\n    exact: exact,\n    namespaced: {}\n  })\n}\n*/\n\nfunction pluginMiddleware(instance, getPlugins, systemEvents) {\n  var isReady = {};\n  return function (store) {\n    return function (next) {\n      return (\n        /*#__PURE__*/\n        function () {\n          var _ref = asyncToGenerator(\n          /*#__PURE__*/\n          regenerator.mark(function _callee(action) {\n            var type, abort, plugins, updatedAction, allPlugins, pluginsArray, allRegisteredPlugins, completed, failed, disabled, waitForPluginsToLoad, updated;\n            return regenerator.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    type = action.type, abort = action.abort, plugins = action.plugins;\n                    updatedAction = action;\n\n                    if (!abort) {\n                      _context.next = 4;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", next(action));\n\n                  case 4:\n                    /* Analytics.plugins.enable called, we need to init the plugins */\n                    if (type === EVENTS.enablePlugin) {\n                      store.dispatch({\n                        type: EVENTS.initializeStart,\n                        plugins: plugins,\n                        disabled: [],\n                        fromEnable: true,\n                        ts: action.ts\n                      });\n                    }\n\n                    if (type === EVENTS.disablePlugin) {\n                      // debounced to fix race condition\n                      setTimeout(function () {\n                        // If cached called, resolve promise/run callback\n                        runCallback(action.ts);\n                      }, 0);\n                    }\n                    /* @TODO implement\n                    if (type === EVENTS.loadPlugin) {\n                      // Rerun initialize calls in plugins\n                      const allPlugins = getPlugins()\n                      const pluginsToLoad = Object.keys(allPlugins).filter((name) => {\n                        return plugins.includes(name)\n                      }).reduce((acc, curr) => {\n                        acc[curr] = allPlugins[curr]\n                        return acc\n                      }, {})\n                      const initializeAction = {\n                        type: EVENTS.initializeStart,\n                        plugins: plugins\n                      }\n                      const updated = await runPlugins(initializeAction, pluginsToLoad, instance, store, systemEvents)\n                      return next(updated)\n                    }\n                    */\n                    //*  || type.match(/^initializeAbort:/)\n\n\n                    if (type === EVENTS.initializeEnd) {\n                      allPlugins = getPlugins();\n                      pluginsArray = Object.keys(allPlugins);\n                      allRegisteredPlugins = pluginsArray.filter(function (name) {\n                        return plugins.includes(name);\n                      }).map(function (name) {\n                        return allPlugins[name];\n                      });\n                      completed = [];\n                      failed = [];\n                      disabled = action.disabled; // console.log('allRegisteredPlugins', allRegisteredPlugins)\n\n                      waitForPluginsToLoad = allRegisteredPlugins.map(function (plugin) {\n                        var loaded = plugin.loaded,\n                            name = plugin.name;\n                        /* Plugins will abort trying to load after 10 seconds. 1e4 === 10000 MS */\n\n                        return waitForReady(plugin, loaded, 1e4).then(function (d) {\n                          if (!isReady[name]) {\n                            // only dispatch namespaced rdy once\n                            store.dispatch({\n                              type: EVENTS.pluginReadyType(name),\n                              // `ready:${name}`\n                              name: name,\n                              events: Object.keys(plugin).filter(function (name) {\n                                return !nonEvents.includes(name);\n                              })\n                            });\n                            isReady[name] = true;\n                          }\n\n                          completed = completed.concat(name);\n                          return plugin; // It's loaded! run the command\n                        })[\"catch\"](function (e) {\n                          // Timeout Add to queue\n                          // console.log('Error generic waitForReady. Push this to queue', e)\n                          if (e instanceof Error) {\n                            throw new Error(e);\n                          }\n\n                          failed = failed.concat(e.name); // Failed to fire, add to queue\n\n                          return e;\n                        });\n                      });\n                      Promise.all(waitForPluginsToLoad).then(function (calls) {\n                        // setTimeout to ensure runs after 'page'\n                        var payload = {\n                          plugins: completed,\n                          failed: failed,\n                          disabled: disabled\n                        };\n                        setTimeout(function () {\n                          if (pluginsArray.length === waitForPluginsToLoad.length + disabled.length) {\n                            store.dispatch(objectSpread2(objectSpread2({}, {\n                              type: EVENTS.ready\n                            }), payload));\n                          } // If cached called, resolve promise/run callback\n\n\n                          runCallback(action.ts, payload);\n                        }, 0);\n                      });\n                    }\n                    /* New plugin system */\n\n\n                    if (!(type !== EVENTS.bootstrap)) {\n                      _context.next = 13;\n                      break;\n                    }\n\n                    if (/^ready:([^:]*)$/.test(type)) {\n                      // Immediately flush queue\n                      setTimeout(function () {\n                        return processQueue(store, getPlugins, instance);\n                      }, 0);\n                    }\n\n                    _context.next = 11;\n                    return runPlugins(action, getPlugins, instance, store, systemEvents);\n\n                  case 11:\n                    updated = _context.sent;\n                    return _context.abrupt(\"return\", next(updated));\n\n                  case 13:\n                    return _context.abrupt(\"return\", next(updatedAction));\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()\n      );\n    };\n  };\n}\n\nfunction timeStamp() {\n  return new Date().getTime();\n}\n\nfunction storageMiddleware(storage) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var type = action.type,\n            key = action.key,\n            value = action.value,\n            options = action.options;\n\n        if (type === EVENTS.setItem || type === EVENTS.removeItem) {\n          if (action.abort) {\n            return next(action);\n          } // Run storage set or remove\n\n\n          if (type === EVENTS.setItem) {\n            storage.setItem(key, value, options);\n          } else {\n            storage.removeItem(key, options);\n          }\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\nvar setItem = function setItem(key, value, opts) {\n  return {\n    type: EVENTS.setItemStart,\n    timestamp: timeStamp(),\n    key: key,\n    value: value,\n    options: opts\n  };\n};\nvar removeItem = function removeItem(key, opts) {\n  return {\n    type: EVENTS.removeItemStart,\n    timestamp: timeStamp(),\n    key: key,\n    options: opts\n  };\n};\n/*\n  Todo: emit events for keys we care about\n  window.addEventListener('storage', (event) => console.log(event));\n*/\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar classCallCheck = _classCallCheck;\n\n/* Class to fix dynamic middlewares from conflicting with each other\nif more than one analytic instance is active */\n\nvar DynamicMiddleware = function DynamicMiddleware() {\n  var _this = this;\n\n  classCallCheck(this, DynamicMiddleware);\n\n  defineProperty(this, \"before\", []);\n\n  defineProperty(this, \"after\", []);\n\n  defineProperty(this, \"addMiddleware\", function (middlewares, position) {\n    _this[position] = _this[position].concat(middlewares);\n  });\n\n  defineProperty(this, \"removeMiddleware\", function (middleware, position) {\n    var index = _this[position].findIndex(function (d) {\n      return d === middleware;\n    });\n\n    if (index === -1) return;\n    _this[position] = [].concat(toConsumableArray(_this[position].slice(0, index)), toConsumableArray(_this[position].slice(index + 1)));\n  });\n\n  defineProperty(this, \"dynamicMiddlewares\", function (position) {\n    return function (store) {\n      return function (next) {\n        return function (action) {\n          var middlewareAPI = {\n            getState: store.getState,\n            dispatch: function dispatch(act) {\n              return store.dispatch(act);\n            }\n          };\n\n          var chain = _this[position].map(function (middleware) {\n            return middleware(middlewareAPI);\n          });\n\n          return compose.apply(void 0, toConsumableArray(chain))(next)(action);\n        };\n      };\n    };\n  });\n};\n\nfunction createReducer(getPlugins) {\n  return function plugins() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    var newState = {};\n\n    if (action.type === 'initialize:aborted') {\n      return state;\n    }\n\n    if (/^registerPlugin:([^:]*)$/.test(action.type)) {\n      var name = getNameFromEventType(action.type, 'registerPlugin');\n      var plugin = getPlugins()[name];\n\n      if (!plugin || !name) {\n        return state;\n      }\n\n      var isEnabled = action.enabled;\n      newState[name] = {\n        enabled: isEnabled,\n\n        /* if no initialization method. Set initialized true */\n        initialized: isEnabled ? Boolean(!plugin.initialize) : false,\n\n        /* If plugin enabled === false, set loaded to false, else check plugin.loaded function */\n        loaded: isEnabled ? Boolean(plugin.loaded()) : false,\n        config: plugin.config || {}\n      };\n      return objectSpread2(objectSpread2({}, state), newState);\n    }\n\n    if (/^initialize:([^:]*)$/.test(action.type)) {\n      var _name = getNameFromEventType(action.type, EVENTS.initialize);\n\n      var _plugin = getPlugins()[_name];\n\n      if (!_plugin || !_name) {\n        return state;\n      }\n\n      newState[_name] = objectSpread2(objectSpread2({}, state[_name]), {\n        initialized: true,\n\n        /* check plugin.loaded function */\n        loaded: Boolean(_plugin.loaded())\n      });\n      return objectSpread2(objectSpread2({}, state), newState);\n    }\n\n    if (/^ready:([^:]*)$/.test(action.type)) {\n      // const name = getNameFromEventType(action.type, 'ready')\n      newState[action.name] = objectSpread2(objectSpread2({}, state[action.name]), {\n        loaded: true\n      });\n      return objectSpread2(objectSpread2({}, state), newState);\n    }\n\n    switch (action.type) {\n      /* case EVENTS.pluginFailed:\n        // console.log('PLUGIN_FAILED', action.name)\n        newState[action.name] = {\n          ...state[action.name],\n          ...{ loaded: false }\n        }\n        return { ...state, ...newState }\n      */\n\n      /* When analytics.plugins.disable called */\n      case EVENTS.disablePlugin:\n        return objectSpread2(objectSpread2({}, state), togglePluginStatus(action.plugins, false, state));\n\n      /* When analytics.plugins.enable called */\n\n      case EVENTS.enablePlugin:\n        return objectSpread2(objectSpread2({}, state), togglePluginStatus(action.plugins, true, state));\n\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getNameFromEventType(type, baseName) {\n  return type.substring(baseName.length + 1, type.length);\n}\n\nfunction togglePluginStatus(plugins, status, currentState) {\n  return plugins.reduce(function (acc, pluginKey) {\n    acc[pluginKey] = objectSpread2(objectSpread2({}, currentState[pluginKey]), {\n      enabled: status\n    });\n    return acc;\n  }, currentState);\n}\n\n// TODO fix os. os getting stripped out for node build\n\nfunction getBrowserOS() {\n  if (!analyticsUtils.inBrowser) return false;\n  var os = navigator.appVersion; // ~os bitwise operator to check if in navigator\n\n  if (~os.indexOf('Win')) return 'Windows';\n  if (~os.indexOf('Mac')) return 'MacOS';\n  if (~os.indexOf('X11')) return 'UNIX';\n  if (~os.indexOf('Linux')) return 'Linux'; // default\n\n  return 'Unknown OS';\n}\n\nvar osName;\nvar referrer;\nvar locale;\nvar timeZone;\n\n{\n  osName = getBrowserOS();\n  referrer = analyticsUtils.inBrowser ? document.referrer : null;\n  locale = analyticsUtils.getBrowserLocale();\n  timeZone = analyticsUtils.getTimeZone();\n}\n\nvar initialState = {\n  initialized: false,\n  sessionId: analyticsUtils.uuid(),\n  app: null,\n  version: null,\n  debug: false,\n  offline: analyticsUtils.inBrowser ? !navigator.onLine : false,\n  // use node network is-online\n  os: {\n    name: osName\n  },\n  userAgent: analyticsUtils.inBrowser ? navigator.userAgent : 'node',\n  // https://github.com/bestiejs/platform.js\n  library: {\n    name: LIBRARY_NAME,\n    // TODO fix version number. npm run publish:patch has wrong version\n    version: \"0.9.2\"\n  },\n  timezone: timeZone,\n  locale: locale,\n  campaign: {},\n  referrer: referrer // context reducer\n\n};\nfunction context() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var initialized = state.initialized;\n  var type = action.type,\n      campaign = action.campaign;\n\n  switch (type) {\n    case EVENTS.campaign:\n      return objectSpread2(objectSpread2({}, state), {\n        campaign: campaign\n      });\n\n    case EVENTS.offline:\n      return objectSpread2(objectSpread2({}, state), {\n        offline: true\n      });\n\n    case EVENTS.online:\n      return objectSpread2(objectSpread2({}, state), {\n        offline: false\n      });\n\n    default:\n      if (!initialized) {\n        return objectSpread2(objectSpread2(objectSpread2({}, initialState), state), {\n          initialized: true\n        });\n      }\n\n      return state;\n  }\n}\nvar excludeItems = ['plugins', 'reducers', 'storage']; // Pull plugins and reducers off intital config\n\nfunction makeContext(config) {\n  return Object.keys(config).reduce(function (acc, current) {\n    if (excludeItems.includes(current)) {\n      return acc;\n    }\n\n    acc[current] = config[current];\n    return acc;\n  }, {});\n}\n\nfunction serialize(obj) {\n  var s = obj;\n\n  try {\n    s = JSON.parse(JSON.stringify(obj));\n  } catch (err) {}\n\n  return s;\n}\n\nvar hashRegex = /#.*$/;\n\nfunction canonicalUrl() {\n  if (!analyticsUtils.inBrowser) return;\n  var tags = document.getElementsByTagName('link');\n\n  for (var i = 0, tag; tag = tags[i]; i++) {\n    if (tag.getAttribute('rel') === 'canonical') {\n      return tag.getAttribute('href');\n    }\n  }\n}\n\nfunction urlPath(url) {\n  var regex = /(http[s]?:\\/\\/)?([^\\/\\s]+\\/)(.*)/g;\n  var matches = regex.exec(url);\n  var pathMatch = matches && matches[3] ? matches[3].split('?')[0].replace(hashRegex, '') : '';\n  return '/' + pathMatch;\n}\n/**\n * Return the canonical URL and rmove the hash.\n * @param  {string} search - search param\n * @return {string} return current canonical URL\n */\n\n\nfunction currentUrl(search) {\n  var canonical = canonicalUrl();\n  if (!canonical) return window.location.href.replace(hashRegex, '');\n  return canonical.match(/\\?/) ? canonical : canonical + search;\n}\n/**\n * Page data for overides\n * @typedef {object} PageData\n * @property {string} [title] - Page title\n * @property {string} [url] - Page url\n * @property {string} [path] - Page path\n * @property {string} [search] - Page search\n * @property {string} [width] - Page width\n * @property {string} [height] - Page height\n*/\n\n/**\n * Get information about current page\n * @typedef {Function} getPageData\n * @param  {PageData} [pageData = {}] - Page data overides\n * @return {PageData} resolved page data\n */\n\n\nvar getPageData = function getPageData() {\n  var pageData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (!analyticsUtils.inBrowser) return pageData;\n  var _document = document,\n      title = _document.title,\n      referrer = _document.referrer;\n  var _window = window,\n      location = _window.location,\n      innerWidth = _window.innerWidth,\n      innerHeight = _window.innerHeight;\n  var hash = location.hash,\n      search = location.search;\n  var url = currentUrl(search);\n  var page = {\n    title: title,\n    url: url,\n    path: urlPath(url),\n    hash: hash,\n    search: search,\n    width: innerWidth,\n    height: innerHeight\n  };\n\n  if (referrer && referrer !== '') {\n    page.referrer = referrer;\n  }\n\n  return objectSpread2(objectSpread2({}, page), pageData);\n};\nvar initialState$1 = {\n  last: {},\n  history: [] // page reducer\n\n};\nfunction page() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState$1;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var properties = action.properties,\n      options = action.options,\n      meta = action.meta;\n\n  switch (action.type) {\n    case EVENTS.page:\n      var viewData = serialize(objectSpread2({\n        properties: properties,\n        meta: meta\n      }, Object.keys(options).length && {\n        options: options\n      }));\n      return objectSpread2(objectSpread2({}, state), {\n        last: viewData,\n        // Todo prevent LARGE arrays https://bit.ly/2MnBwPT\n        history: state.history.concat(viewData)\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar initialState$2 = {\n  last: {},\n  history: [] // track reducer\n\n};\nfunction trackReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState$2;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      meta = action.meta,\n      options = action.options,\n      event = action.event,\n      properties = action.properties;\n\n  switch (type) {\n    case EVENTS.track:\n      var trackEvent = serialize(objectSpread2(objectSpread2({\n        event: event,\n        properties: properties\n      }, Object.keys(options).length && {\n        options: options\n      }), {}, {\n        meta: meta\n      }));\n      return objectSpread2(objectSpread2({}, state), {\n        last: trackEvent,\n        // Todo prevent LARGE arrays https://bit.ly/2MnBwPT\n        history: state.history.concat(trackEvent)\n      });\n    // todo push events to history\n\n    default:\n      return state;\n  }\n}\n\n/*\nTODO figure out if this should live in state...\nQueue could be in mermory as well.\nBut also needs to be persisted to storage\n*/\n\nvar initialState$3 = {\n  actions: []\n};\nfunction queueReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState$3;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case 'queue':\n      var actionChain;\n      /* prioritize identify in event queue */\n\n      if (payload && payload.type && payload.type === EVENTS.identify) {\n        actionChain = [action].concat(state.actions);\n      } else {\n        actionChain = state.actions.concat(action);\n      }\n\n      return objectSpread2(objectSpread2({}, state), {}, {\n        actions: actionChain\n      });\n\n    case 'dequeue':\n      return [];\n    // todo push events to history\n\n    default:\n      return state;\n  }\n}\n\nfunction listen(events, func, toAdd) {\n  if (!analyticsUtils.inBrowser) return false;\n  var fn = window[(toAdd ? 'add' : 'remove') + 'EventListener'];\n  events.split(' ').forEach(function (ev) {\n    fn(ev, func);\n  });\n}\n\nfunction check() {\n  return Promise.resolve(!navigator.onLine);\n}\nfunction watch(cb) {\n  var fn = function fn(_) {\n    return check().then(cb);\n  };\n\n  var listener = listen.bind(null, 'online offline', fn);\n  listener(true); // return unsubscribe\n\n  return function (_) {\n    return listener(false);\n  };\n}\n\nfunction getCallbackFromArgs() {\n  return Array.prototype.slice.call(arguments).reduce(function (acc, arg) {\n    if (acc) return acc;\n\n    if (analyticsUtils.isFunction(arg)) {\n      return arg;\n    }\n\n    return acc;\n  }, false);\n}\n\nfunction Debug() {\n  // initialize global history\n\n  var prePostFix = '__'; // __analytics__\n\n  var globalVariable = prePostFix + LIBRARY_NAME + prePostFix;\n  analyticsUtils.globalContext[globalVariable] = [];\n  return function (createStore$$1) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore$$1(reducer, preloadedState, enhancer);\n      var origDispatch = store.dispatch;\n\n      var dispatch = function dispatch(action) {\n        var a = action.action || action;\n        analyticsUtils.globalContext[globalVariable].push(a);\n        return origDispatch(action);\n      };\n\n      return Object.assign(store, {\n        dispatch: dispatch\n      });\n    };\n  };\n}\nfunction composeWithDebug(config) {\n  return function () {\n    return compose(compose.apply(null, arguments), Debug(config));\n  };\n}\n\nfunction ensureArray(strOrArr) {\n  if (!strOrArr) return [];\n  return analyticsUtils.isString(strOrArr) ? [strOrArr] : strOrArr;\n}\n\nvar _setItem = setItem,\n    _removeItem = removeItem;\n/**\n * Analytics library configuration\n *\n * After the library is initialized with config, the core API is exposed & ready for use in the application.\n *\n * @param {object} config - analytics core config\n * @param {string} [config.app] - Name of site / app\n * @param {string} [config.version] - Version of your app\n * @param {boolean} [config.debug] - Should analytics run in debug mode\n * @param {Array.<AnalyticsPlugin>}  [config.plugins] - Array of analytics plugins\n * @return {AnalyticsInstance} Analytics Instance\n * @example\n *\n * import Analytics from 'analytics'\n * import pluginABC from 'analytics-plugin-abc'\n * import pluginXYZ from 'analytics-plugin-xyz'\n *\n * // initialize analytics\n * const analytics = Analytics({\n *   app: 'my-awesome-app',\n *   plugins: [\n *     pluginABC,\n *     pluginXYZ\n *   ]\n * })\n *\n */\n\nfunction analytics() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var customReducers = config.reducers || {};\n  /* Parse plugins array */\n\n  var parsedOptions = (config.plugins || []).reduce(function (acc, plugin) {\n    if (analyticsUtils.isFunction(plugin)) {\n      /* Custom redux middleware */\n      acc.middlewares = acc.middlewares.concat(plugin);\n      return acc;\n    } // Legacy plugin with name\n\n\n    if (plugin.NAMESPACE) plugin.name = plugin.NAMESPACE;\n\n    if (!plugin.name) {\n      /* Plugins must supply a \"name\" property. See error url for more details */\n      throw new Error(ERROR_URL + '1');\n    } // if plugin exposes EVENTS capture available events\n\n\n    var definedEvents = plugin.EVENTS ? Object.keys(plugin.EVENTS).map(function (k) {\n      return plugin.EVENTS[k];\n    }) : [];\n    var enabledFromMerge = !(plugin.enabled === false);\n    var enabledFromPluginConfig = !(plugin.config && plugin.config.enabled === false); // top level { enabled: false } takes presidence over { config: enabled: false }\n\n    acc.pluginEnabled[plugin.name] = enabledFromMerge && enabledFromPluginConfig;\n    delete plugin.enabled;\n\n    if (plugin.methods) {\n      acc.methods[plugin.name] = Object.keys(plugin.methods).reduce(function (a, c) {\n        // enrich methods with analytics instance\n        a[c] = appendArguments(plugin.methods[c]);\n        return a;\n      }, {}); // Remove additional methods from plugins\n\n      delete plugin.methods;\n    } // Convert available methods into events\n\n\n    var methodsToEvents = Object.keys(plugin); // Combine events\n\n    var allEvents = methodsToEvents.concat(definedEvents); // Dedupe events list\n\n    var allEventsUnique = new Set(acc.events.concat(allEvents));\n    acc.events = Array.from(allEventsUnique);\n    acc.pluginsArray = acc.pluginsArray.concat(plugin);\n\n    if (acc.plugins[plugin.name]) {\n      throw new Error(plugin.name + ' already loaded');\n    }\n\n    acc.plugins[plugin.name] = plugin;\n\n    if (!acc.plugins[plugin.name].loaded) {\n      // set default loaded func\n      acc.plugins[plugin.name].loaded = function () {\n        return true;\n      };\n    }\n\n    return acc;\n  }, {\n    plugins: {},\n    pluginEnabled: {},\n    methods: {},\n    pluginsArray: [],\n    middlewares: [],\n    events: []\n  });\n  /* Storage by default is set to global & is not persisted */\n\n  var storage = config.storage ? config.storage : {\n    getItem: function getItem(key) {\n      return analyticsUtils.globalContext[key];\n    },\n    setItem: function setItem$$1(key, value) {\n      return analyticsUtils.globalContext[key] = value;\n    },\n    removeItem: function removeItem$$1(key) {\n      return analyticsUtils.globalContext[key] = undefined;\n    }\n  };\n  var getUserProp = getUserPropFunc(storage); // mutable intregrations object for dynamic loading\n\n  var customPlugins = parsedOptions.plugins;\n  /* Grab all registered events from plugins loaded */\n\n  var pluginEvents = parsedOptions.events.filter(function (name) {\n    return !nonEvents.includes(name);\n  });\n  var uniqueEvents = new Set(pluginEvents.concat(coreEvents).filter(function (name) {\n    return !nonEvents.includes(name);\n  }));\n  var allSystemEvents = Array.from(uniqueEvents).sort();\n  var allPluginEvents = pluginEvents.sort();\n  /* plugin methods(functions) must be kept out of state. thus they live here */\n\n  var getPlugins = function getPlugins() {\n    return customPlugins;\n  };\n\n  var _ref = new DynamicMiddleware(),\n      addMiddleware = _ref.addMiddleware,\n      removeMiddleware = _ref.removeMiddleware,\n      dynamicMiddlewares = _ref.dynamicMiddlewares;\n\n  var nonAbortable = function nonAbortable() {\n    // throw new Error(`${ERROR_URL}3`)\n    throw new Error('Abort disabled in listener');\n  }; // Async promise resolver\n\n\n  var resolvePromise = function resolvePromise(resolver, cb) {\n    return function (payload) {\n      if (cb) cb(payload);\n      resolver(payload);\n    };\n  }; // Parse URL parameters\n\n\n  var params = analyticsUtils.paramsParse(); // Initialize visitor information\n\n  var initialUser = getPersistedUserData(params, storage);\n  /**\n   * Async Management methods for plugins. \n   * \n   * This is also where [custom methods](https://bit.ly/329vFXy) are loaded into the instance.\n   * @typedef {Object} Plugins\n   * @property {EnablePlugin} enable - Set storage value\n   * @property {DisablePlugin} disable - Remove storage value\n   * @example\n   *\n   * // Enable a plugin by namespace\n   * analytics.plugins.enable('keenio')\n   *\n   * // Disable a plugin by namespace\n   * analytics.plugins.disable('google-analytics')\n   */\n\n  var plugins = objectSpread2({\n    /**\n     * Enable analytics plugin\n     * @typedef {Function} EnablePlugin\n     * @param  {String|Array} plugins - name of plugins(s) to disable\n     * @param  {Function} [callback] - callback after enable runs\n     * @returns {Promise}\n     * @example\n     *\n     * analytics.plugins.enable('google-analytics').then(() => {\n     *   console.log('do stuff')\n     * })\n     *\n     * // Enable multiple plugins at once\n     * analytics.plugins.enable(['google-analytics', 'segment']).then(() => {\n     *   console.log('do stuff')\n     * })\n     */\n    enable: function enable(plugins, callback) {\n      var time = analyticsUtils.uuid();\n      return new Promise(function (resolve) {\n        stack[time] = resolvePromise(resolve, callback);\n        store.dispatch({\n          type: EVENTS.enablePlugin,\n          plugins: ensureArray(plugins),\n          ts: time,\n          _: {\n            originalAction: EVENTS.enablePlugin\n          }\n        });\n      });\n    },\n\n    /**\n     * Disable analytics plugin\n     * @typedef {Function} DisablePlugin\n     * @param  {String|Array} plugins - name of integration(s) to disable\n     * @param  {Function} callback - callback after disable runs\n     * @returns {Promise}\n     * @example\n     *\n     * analytics.plugins.disable('google').then(() => {\n     *   console.log('do stuff')\n     * })\n     *\n     * analytics.plugins.disable(['google', 'segment']).then(() => {\n     *   console.log('do stuff')\n     * })\n     */\n    disable: function disable(plugins, callback) {\n      var time = analyticsUtils.uuid();\n      return new Promise(function (resolve) {\n        stack[time] = resolvePromise(resolve, callback);\n        store.dispatch({\n          type: EVENTS.disablePlugin,\n          plugins: ensureArray(plugins),\n          ts: time,\n          _: {\n            originalAction: EVENTS.disablePlugin\n          }\n        });\n      });\n    }\n  }, parsedOptions.methods);\n  /**\n   * Analytic instance returned from initialization\n   * @typedef {Object} AnalyticsInstance\n   * @property {Identify} identify - Identify a user\n   * @property {Track} track - Track an analytics event\n   * @property {Page} page - Trigger page view\n   * @property {User} user - Get user data\n   * @property {Reset} reset - Clear information about user & reset analytics\n   * @property {Ready} ready - Fire callback on analytics ready event\n   * @property {On} on - Fire callback on analytics lifecycle events.\n   * @property {Once} once - Fire callback on analytics lifecycle events once.\n   * @property {GetState} getState - Get data about user, activity, or context.\n   * @property {Storage} storage - storage methods\n   * @property {Plugins} plugins - plugin methods\n   */\n\n\n  var instance = {\n    /**\n    * Identify a user. This will trigger `identify` calls in any installed plugins and will set user data in localStorage\n    * @typedef {Function} Identify\n    * @param  {String}   userId  - Unique ID of user\n    * @param  {Object}   [traits]  - Object of user traits\n    * @param  {Object}   [options] - Options to pass to identify call\n    * @param  {Function} [callback] - Callback function after identify completes\n    * @returns {Promise}\n    * @api public\n    *\n    * @example\n    *\n    * // Basic user id identify\n    * analytics.identify('xyz-123')\n    *\n    * // Identify with additional traits\n    * analytics.identify('xyz-123', {\n    *   name: 'steve',\n    *   company: 'hello-clicky'\n    * })\n    *\n    * // Fire callback with 2nd or 3rd argument\n    * analytics.identify('xyz-123', () => {\n    *   console.log('do this after identify')\n    * })\n    *\n    * // Disable sending user data to specific analytic tools\n    * analytics.identify('xyz-123', {}, {\n    *   plugins: {\n    *     // disable sending this identify call to segment\n    *     segment: false\n    *   }\n    * })\n    *\n    * // Send user data to only to specific analytic tools\n    * analytics.identify('xyz-123', {}, {\n    *   plugins: {\n    *     // disable this specific identify in all plugins except customerio\n    *     all: false,\n    *     customerio: true\n    *   }\n    * })\n    */\n    identify: function identify(userId, traits, options, callback) {\n      var id = analyticsUtils.isString(userId) ? userId : null;\n      var data = analyticsUtils.isObject(userId) ? userId : traits;\n      var opts = options || {};\n      var user = instance.user();\n      /* sets temporary in memory id. Not to be relied on */\n\n      analyticsUtils.globalContext[tempKey(ID)] = id;\n      var resolvedId = id || data.userId || getUserProp(ID, instance, data);\n      return new Promise(function (resolve, reject) {\n        store.dispatch(objectSpread2(objectSpread2({\n          type: EVENTS.identifyStart,\n          userId: resolvedId,\n          traits: data || {},\n          options: opts,\n          anonymousId: user.anonymousId\n        }, user.id && user.id !== id && {\n          previousId: user.id\n        }), {}, {\n          meta: {\n            timestamp: timeStamp(),\n            callback: resolvePromise(resolve, getCallbackFromArgs(traits, options, callback))\n          }\n        }));\n      });\n    },\n\n    /**\n     * Track an analytics event. This will trigger `track` calls in any installed plugins\n     * @typedef {Function} Track\n     * @param  {String}   eventName - Event name\n     * @param  {Object}   [payload]   - Event payload\n     * @param  {Object}   [options]   - Event options\n     * @param  {Function} [callback]  - Callback to fire after tracking completes\n     * @returns {Promise}\n     * @api public\n     *\n     * @example\n     *\n     * // Basic event tracking\n     * analytics.track('buttonClicked')\n     *\n     * // Event tracking with payload\n     * analytics.track('itemPurchased', {\n     *   price: 11,\n     *   sku: '1234'\n     * })\n     *\n     * // Fire callback with 2nd or 3rd argument\n     * analytics.track('newsletterSubscribed', () => {\n     *   console.log('do this after track')\n     * })\n     *\n     * // Disable sending this event to specific analytic tools\n     * analytics.track('cartAbandoned', {\n     *   items: ['xyz', 'abc']\n     * }, {\n     *   plugins: {\n     *     // disable track event for segment\n     *     segment: false\n     *   }\n     * })\n     *\n     * // Send event to only to specific analytic tools\n     * analytics.track('customerIoOnlyEventExample', {\n     *   price: 11,\n     *   sku: '1234'\n     * }, {\n     *   plugins: {\n     *     // disable this specific track call all plugins except customerio\n     *     all: false,\n     *     customerio: true\n     *   }\n     * })\n     */\n    track: function track(eventName, payload, options, callback) {\n      var name = analyticsUtils.isObject(eventName) ? eventName.event : eventName;\n\n      if (!name || !analyticsUtils.isString(name)) {\n        throw new Error('Event missing');\n      }\n\n      var data = analyticsUtils.isObject(eventName) ? eventName : payload || {};\n      var opts = analyticsUtils.isObject(options) ? options : {};\n      return new Promise(function (resolve, reject) {\n        store.dispatch({\n          type: EVENTS.trackStart,\n          event: name,\n          properties: data,\n          options: opts,\n          userId: getUserProp(ID, instance, payload),\n          anonymousId: getUserProp(ANONID, instance, payload),\n          meta: {\n            timestamp: timeStamp(),\n            callback: resolvePromise(resolve, getCallbackFromArgs(payload, options, callback))\n          }\n        });\n      });\n    },\n\n    /**\n     * Trigger page view. This will trigger `page` calls in any installed plugins\n     * @typedef {Function} Page\n     * @param  {PageData} [data] - Page data overrides.\n     * @param  {Object}   [options] - Page tracking options\n     * @param  {Function} [callback] - Callback to fire after page view call completes\n     * @returns {Promise}\n     * @api public\n     *\n     * @example\n     *\n     * // Basic page tracking\n     * analytics.page()\n     *\n     * // Page tracking with page data overrides\n     * analytics.page({\n     *   url: 'https://google.com'\n     * })\n     *\n     * // Fire callback with 1st, 2nd or 3rd argument\n     * analytics.page(() => {\n     *   console.log('do this after page')\n     * })\n     *\n     * // Disable sending this pageview to specific analytic tools\n     * analytics.page({}, {\n     *   plugins: {\n     *     // disable page tracking event for segment\n     *     segment: false\n     *   }\n     * })\n     *\n     * // Send pageview to only to specific analytic tools\n     * analytics.page({}, {\n     *   plugins: {\n     *     // disable this specific page in all plugins except customerio\n     *     all: false,\n     *     customerio: true\n     *   }\n     * })\n     */\n    page: function page$$1(data, options, callback) {\n      var d = analyticsUtils.isObject(data) ? data : {};\n      var opts = analyticsUtils.isObject(options) ? options : {};\n      return new Promise(function (resolve, reject) {\n        store.dispatch({\n          type: EVENTS.pageStart,\n          properties: getPageData(d),\n          options: opts,\n          userId: getUserProp(ID, instance, d),\n          anonymousId: getUserProp(ANONID, instance, d),\n          meta: {\n            timestamp: timeStamp(),\n            callback: resolvePromise(resolve, getCallbackFromArgs(data, options, callback))\n          }\n        });\n      });\n    },\n\n    /**\n     * Get user data\n     * @typedef {Function} User\n     * @param {string} [key] - dot.prop.path of user data. Example: 'traits.company.name'\n     * @returns {string|object} value of user data or null\n     *\n     * @example\n     *\n     * // Get all user data\n     * const userData = analytics.user()\n     *\n     * // Get user id\n     * const userId = analytics.user('userId')\n     *\n     * // Get user company name\n     * const companyName = analytics.user('traits.company.name')\n     */\n    user: function user(key) {\n      if (key === ID || key === 'id') {\n        var findId = getUserProp(ID, instance);\n        return findId;\n      }\n\n      var user = instance.getState('user');\n      if (!key) return user;\n      return analyticsUtils.dotProp(user, key);\n    },\n\n    /**\n     * Clear all information about the visitor & reset analytic state.\n     * @typedef {Function} Reset\n     * @param {Function} [callback] - Handler to run after reset\n     * @returns {Promise}\n     * @example\n     *\n     * // Reset current visitor\n     * analytics.reset()\n     */\n    reset: function reset(callback) {\n      return new Promise(function (resolve, reject) {\n        store.dispatch({\n          type: EVENTS.resetStart,\n          timestamp: timeStamp(),\n          callback: resolvePromise(resolve, callback)\n        });\n      });\n    },\n\n    /**\n     * Fire callback on analytics ready event\n     * @typedef {Function} Ready\n     * @param  {Function} callback - function to trigger when all providers have loaded\n     * @returns {DetachListeners} - Function to detach listener\n     *\n     * @example\n     *\n     * analytics.ready() => {\n     *   console.log('all plugins have loaded or were skipped', payload)\n     * })\n     */\n    ready: function ready(callback) {\n      return instance.on(EVENTS.ready, callback);\n    },\n\n    /**\n     * Attach an event handler function for analytics lifecycle events.\n     * @typedef {Function} On\n     * @param  {String}   name - Name of event to listen to\n     * @param  {Function} callback - function to fire on event\n     * @return {DetachListeners} - Function to detach listener\n     *\n     * @example\n     *\n     * // Fire function when 'track' calls happen\n     * analytics.on('track', ({ payload }) => {\n     *   console.log('track call just happened. Do stuff')\n     * })\n     *\n     * // Remove listener before it is called\n     * const removeListener = analytics.on('track', ({ payload }) => {\n     *   console.log('This will never get called')\n     * })\n     *\n     * // cleanup .on listener\n     * removeListener()\n     */\n    on: function on(name, callback) {\n      if (!name || !analyticsUtils.isFunction(callback)) {\n        return false;\n      }\n\n      if (name === EVENTS.bootstrap) {\n        throw new Error('.on disabled for ' + name);\n      }\n\n      var startRegex = /Start$|Start:/;\n\n      if (name === '*') {\n        var beforeHandler = function beforeHandler(store) {\n          return function (next) {\n            return function (action) {\n              if (action.type.match(startRegex)) {\n                callback({\n                  // eslint-disable-line\n                  payload: action,\n                  instance: instance,\n                  plugins: customPlugins\n                });\n              }\n\n              return next(action);\n            };\n          };\n        };\n\n        var afterHandler = function afterHandler(store) {\n          return function (next) {\n            return function (action) {\n              if (!action.type.match(startRegex)) {\n                callback({\n                  // eslint-disable-line\n                  payload: action,\n                  instance: instance,\n                  plugins: customPlugins\n                });\n              }\n\n              return next(action);\n            };\n          };\n        };\n\n        addMiddleware(beforeHandler, before);\n        addMiddleware(afterHandler, after);\n        /**\n         * Detach listeners\n         * @typedef {Function} DetachListeners\n         */\n\n        return function () {\n          removeMiddleware(beforeHandler, before);\n          removeMiddleware(afterHandler, after);\n        };\n      }\n\n      var position = name.match(startRegex) ? before : after; // eslint-disable-line\n\n      var handler = function handler(store) {\n        return function (next) {\n          return function (action) {\n            // Subscribe to EVERYTHING\n            if (action.type === name) {\n              callback({\n                // eslint-disable-line\n                payload: action,\n                instance: instance,\n                plugins: customPlugins,\n                abort: nonAbortable\n              });\n            }\n            /* For future matching of event subpaths `track:*` etc\n            } else if (name.match(/\\*$/)) {\n              const match = (name === '*') ? '.' : name\n              const regex = new RegExp(`${match}`, 'g')\n            } */\n\n\n            return next(action);\n          };\n        };\n      };\n\n      addMiddleware(handler, position);\n      return function () {\n        return removeMiddleware(handler, position);\n      };\n    },\n\n    /**\n     * Attach a handler function to an event and only trigger it only once.\n     * @typedef {Function} Once\n     * @param  {String} name - Name of event to listen to\n     * @param  {Function} callback - function to fire on event\n     * @return {DetachListeners} - Function to detach listener\n     *\n     * @example\n     *\n     * // Fire function only once 'track'\n     * analytics.once('track', ({ payload }) => {\n     *   console.log('This will only triggered once when analytics.track() fires')\n     * })\n     *\n     * // Remove listener before it is called\n     * const listener = analytics.once('track', ({ payload }) => {\n     *   console.log('This will never get called b/c listener() is called')\n     * })\n     *\n     * // cleanup .once listener before it fires\n     * listener()\n     */\n    once: function once(name, callback) {\n      if (!name || !analyticsUtils.isFunction(callback)) {\n        return false;\n      }\n\n      if (name === EVENTS.bootstrap) {\n        throw new Error('.once disabled for ' + name);\n      }\n\n      var listener = instance.on(name, function (_ref2) {\n        var payload = _ref2.payload;\n        callback({\n          // eslint-disable-line\n          payload: payload,\n          instance: instance,\n          plugins: customPlugins,\n          abort: nonAbortable\n        }); // detach listener after its called once\n\n        listener();\n      });\n      return listener;\n    },\n\n    /**\n     * Get data about user, activity, or context. Access sub-keys of state with `dot.prop` syntax.\n     * @typedef {Function} GetState\n     * @param  {string} [key] - dot.prop.path value of state\n     * @return {any}\n     *\n     * @example\n     *\n     * // Get the current state of analytics\n     * analytics.getState()\n     *\n     * // Get a subpath of state\n     * analytics.getState('context.offline')\n     */\n    getState: function getState(key) {\n      var state = store.getState();\n      if (key) return analyticsUtils.dotProp(state, key);\n      return Object.assign({}, state);\n    },\n\n    /*\n     * Emit events for other plugins or middleware to react to.\n     * @param  {Object} action - event to dispatch\n     */\n    dispatch: function dispatch(action) {\n      var actionData = analyticsUtils.isString(action) ? {\n        type: action\n      } : action;\n\n      if (isReservedAction(actionData.type)) {\n        throw new Error('reserved action ' + actionData.type);\n      }\n\n      var meta = actionData.meta || {};\n\n      var _private = action._ || {}; // Dispatch actionStart\n      // const autoPrefixType = `${theAction.type.replace(/Start$/, '')}Start`\n\n\n      var dispatchData = objectSpread2(objectSpread2({}, actionData), {}, {\n        meta: objectSpread2({\n          timestamp: timeStamp()\n        }, meta),\n        _: objectSpread2({\n          originalAction: actionData.type\n        }, _private) // type: `${autoPrefixType}`\n\n      });\n\n      store.dispatch(dispatchData);\n    },\n    // Do not use. Will be removed. Here for Backwards compatiblity.\n    // Moved to analytics.plugins.enable\n    enablePlugin: plugins.enable,\n    /// Do not use. Will be removed. Here for Backwards compatiblity.\n    /// Moved to analytics.plugins.disable\n    disablePlugin: plugins.disable,\n    // Do not use. Will be removed. Here for Backwards compatiblity.\n    // Moved to analytics.plugins.load\n    // loadPlugin: plugins.load,\n    // New plugins api\n    plugins: plugins,\n\n    /**\n     * Storage utilities for persisting data.\n     * These methods will allow you to save data in localStorage, cookies, or to the window.\n     * @typedef {Object} Storage\n     * @property {GetItem} getItem - Get value from storage\n     * @property {SetItem} setItem - Set storage value\n     * @property {RemoveItem} removeItem - Remove storage value\n     *\n     * @example\n     *\n     * // Pull storage off analytics instance\n     * const { storage } = analytics\n     *\n     * // Get value\n     * storage.getItem('storage_key')\n     *\n     * // Set value\n     * storage.setItem('storage_key', 'value')\n     *\n     * // Remove value\n     * storage.removeItem('storage_key')\n     */\n    storage: {\n      /**\n       * Get value from storage\n       * @typedef {Function} GetItem\n       * @param {String} key - storage key\n       * @param {Object} [options] - storage options\n       * @return {Any}\n       *\n       * @example\n       *\n       * analytics.storage.getItem('storage_key')\n       */\n      getItem: storage.getItem,\n\n      /**\n       * Set storage value\n       * @typedef {Function} SetItem\n       * @param {String} key - storage key\n       * @param {any} value - storage value\n       * @param {Object} [options] - storage options\n       *\n       * @example\n       *\n       * analytics.storage.setItem('storage_key', 'value')\n       */\n      setItem: function setItem$$1(key, value, options) {\n        store.dispatch(_setItem(key, value, options));\n      },\n\n      /**\n       * Remove storage value\n       * @typedef {Function} RemoveItem\n       * @param {String} key - storage key\n       * @param {Object} [options] - storage options\n       *\n       * @example\n       *\n       * analytics.storage.removeItem('storage_key')\n       */\n      removeItem: function removeItem$$1(key, options) {\n        store.dispatch(_removeItem(key, options));\n      }\n    },\n\n    /*\n     * Set the anonymous ID of the visitor\n     * @param {String} anonymousId - anonymous Id to set\n     * @param {Object} [options] - storage options\n     *\n     * @example\n     *\n     * // Set anonymous ID\n     * analytics.setAnonymousId('1234567')\n     */\n    setAnonymousId: function setAnonymousId(anonymousId, options) {\n      instance.storage.setItem(ANON_ID, anonymousId, options);\n    },\n\n    /*\n     * Events exposed by core analytics library and all loaded plugins\n     * @type {Array}\n     */\n    events: {\n      all: allSystemEvents,\n      core: coreEvents,\n      plugins: allPluginEvents // byType: (type) => {} @Todo grab logic from engine and give inspectable events\n\n    }\n  };\n  var middlewares = parsedOptions.middlewares.concat([\n  /* Core analytics middleware */\n  dynamicMiddlewares(before), // Before dynamic middleware <-- fixed pageStart .on listener\n\n  /* Plugin engine */\n  pluginMiddleware(instance, getPlugins, {\n    all: allSystemEvents,\n    plugins: allPluginEvents\n  }), storageMiddleware(storage), initializeMiddleware(instance), identifyMiddleware(instance),\n  /* after dynamic middleware */\n  dynamicMiddlewares(after)]);\n  /* Initial analytics state keys */\n\n  var coreReducers = {\n    context: context,\n    user: userReducer(storage),\n    page: page,\n    track: trackReducer,\n    plugins: createReducer(getPlugins),\n    queue: queueReducer\n  };\n  var composeEnhancers = compose;\n  var composeWithGlobalDebug = compose;\n\n  if (analyticsUtils.inBrowser && config.debug) {\n    var devTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n    if (devTools) {\n      composeEnhancers = devTools({\n        trace: true,\n        traceLimit: 25\n      });\n    }\n\n    composeWithGlobalDebug = function composeWithGlobalDebug() {\n      if (arguments.length === 0) return Debug();\n      if (analyticsUtils.isObject(_typeof_1(arguments[0]))) return composeWithDebug(arguments[0]);\n      return composeWithDebug().apply(null, arguments);\n    };\n  }\n\n  var initialConfig = makeContext(config);\n  var intialPluginState = parsedOptions.pluginsArray.reduce(function (acc, plugin) {\n    var name = plugin.name,\n        config = plugin.config,\n        loaded = plugin.loaded;\n    var isEnabled = parsedOptions.pluginEnabled[name];\n    acc[name] = {\n      enabled: isEnabled,\n      // If plugin enabled & has no initialize method, set initialized to true, else false\n      initialized: isEnabled ? Boolean(!plugin.initialize) : false,\n      loaded: Boolean(loaded()),\n      config: config || {}\n    };\n    return acc;\n  }, {});\n  var initialState = {\n    context: initialConfig,\n    user: initialUser,\n    plugins: intialPluginState // Todo allow for more userland defined initial state?\n\n    /* Create analytics store! */\n\n  };\n  var store = createStore( // register reducers\n  combineReducers(objectSpread2(objectSpread2({}, coreReducers), customReducers)), // set user defined initial state\n  initialState, // register middleware & plugins used\n  composeWithGlobalDebug(composeEnhancers(applyMiddleware.apply(void 0, toConsumableArray(middlewares)))));\n  /* Synchronously call bootstrap & register Plugin methods */\n\n  var pluginKeys = Object.keys(customPlugins);\n  /* Bootstrap analytic plugins */\n\n  store.dispatch({\n    type: EVENTS.bootstrap,\n    plugins: pluginKeys,\n    config: initialConfig,\n    params: params,\n    user: initialUser\n  });\n  var enabledPlugins = pluginKeys.filter(function (name) {\n    return parsedOptions.pluginEnabled[name];\n  });\n  var disabledPlugins = pluginKeys.filter(function (name) {\n    return !parsedOptions.pluginEnabled[name];\n  });\n  /* Register analytic plugins */\n\n  store.dispatch({\n    type: EVENTS.registerPlugins,\n    plugins: pluginKeys,\n    enabled: parsedOptions.pluginEnabled\n  });\n  /* dispatch register for individual plugins */\n\n  parsedOptions.pluginsArray.map(function (plugin, i) {\n    var bootstrap = plugin.bootstrap,\n        config = plugin.config,\n        name = plugin.name;\n\n    if (bootstrap && analyticsUtils.isFunction(bootstrap)) {\n      bootstrap({\n        instance: instance,\n        config: config,\n        payload: plugin\n      });\n    }\n    /* Register plugins */\n\n\n    store.dispatch({\n      type: EVENTS.registerPluginType(name),\n      name: name,\n      enabled: parsedOptions.pluginEnabled[name],\n      plugin: plugin\n    });\n    /* All plugins registered initialize, is last loop */\n\n    if (parsedOptions.pluginsArray.length === i + 1) {\n      store.dispatch({\n        type: EVENTS.initializeStart,\n        plugins: enabledPlugins,\n        disabled: disabledPlugins\n      });\n    }\n  });\n\n  {\n    /* Watch for network events */\n    watch(function (offline) {\n      store.dispatch({\n        type: offline ? EVENTS.offline : EVENTS.online\n      });\n    });\n    /* Tick heartbeat for queued events */\n\n    heartBeat(store, getPlugins, instance);\n  }\n\n  function appendArguments(fn) {\n    return function () {\n      var originalArgs = Array.prototype.slice.call(arguments); // Pass analytics instance as last arg for arrow functions\n\n      var argsToPass = Array.apply(null, Array(fn.length)).map(function () {}).map(function (x, i) {\n        if (originalArgs[i] || originalArgs[i] === false || originalArgs[i] === null) {\n          return originalArgs[i];\n        }\n      }) // Add instance to args\n      .concat(instance); // Set instance on extended methods\n\n      return fn.apply({\n        instance: instance\n      }, argsToPass);\n    };\n  }\n  /* Return analytics instance */\n\n\n  return instance;\n} // Duplicated strings\n\n\nvar before = 'before';\nvar after = 'after'; // const uId = 'userId'\n\nexports.default = analytics;\nexports.init = analytics;\nexports.Analytics = analytics;\nexports.EVENTS = EVENTS;\nexports.CONSTANTS = constants;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar dlv = _interopDefault(require('dlv'));\nvar storageUtils = require('@analytics/storage-utils');\nvar storageUtils__default = _interopDefault(storageUtils);\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\nfunction isString(x) {\n  return typeof x === 'string';\n}\nfunction isUndefined(x) {\n  return typeof x === 'undefined';\n}\nfunction isBoolean(x) {\n  return typeof x === 'boolean';\n}\nfunction isArray(x) {\n  return Array.isArray(x);\n}\nfunction isObject(obj) {\n  if (_typeof(obj) !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\nfunction decode(s) {\n  try {\n    return decodeURIComponent(s.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\nvar inBrowser = typeof document !== 'undefined';\n\nfunction getBrowserLocale() {\n  if (!inBrowser) return;\n  var _navigator = navigator,\n      language = _navigator.language,\n      languages = _navigator.languages,\n      userLanguage = _navigator.userLanguage;\n  if (userLanguage) return userLanguage; // IE only\n\n  return languages && languages.length ? languages[0] : language;\n}\n\nfunction getTimeZone() {\n  try {\n    return Intl.DateTimeFormat().resolvedOptions().timeZone;\n  } catch (error) {}\n}\n\nfunction isExternalReferrer(ref) {\n  if (!inBrowser) return false;\n  var referrer = ref || document.referrer;\n\n  if (referrer) {\n    var port = window.document.location.port;\n    var _ref = referrer.split('/')[2];\n\n    if (port) {\n      _ref = _ref.replace(\":\".concat(port), '');\n    }\n\n    return _ref !== window.location.hostname;\n  }\n\n  return false;\n}\n\n/**\n * Check if a script is loaded\n * @param  {String|RegExp} script - Script src as string or regex\n * @return {Boolean} is script loaded\n */\n\nfunction isScriptLoaded(script) {\n  if (!inBrowser) return true;\n  var scripts = document.getElementsByTagName('script');\n  return !!Object.keys(scripts).filter(function (key) {\n    var src = scripts[key].src;\n\n    if (typeof script === 'string') {\n      return src.indexOf(script) !== -1;\n    } else if (script instanceof RegExp) {\n      return src.match(script);\n    }\n\n    return false;\n  }).length;\n}\n\nfunction noOp() {}\n\nfunction paramsClean(url, param) {\n  var search = (url.split('?') || [,])[1]; // eslint-disable-line\n\n  if (!search || search.indexOf(param) === -1) {\n    return url;\n  } // remove all utm params from URL search\n\n\n  var regex = new RegExp(\"(\\\\&|\\\\?)\".concat(param, \"([_A-Za-z0-9\\\"+=.\\\\/\\\\-@%]+)\"), 'g');\n  var cleanSearch = \"?\".concat(search).replace(regex, '').replace(/^&/, '?'); // replace search params with clean params\n\n  var cleanURL = url.replace(\"?\".concat(search), cleanSearch); // use browser history API to clean the params\n\n  return cleanURL;\n}\n\n/**\n * Get a given query parameter value\n * @param  {string} param - Key of parameter to find\n * @param  {string} url - url to search\n * @return {string} match\n */\n\nfunction getValueParamValue(param, url) {\n  return decode((RegExp(\"\".concat(param, \"=(.+?)(&|$)\")).exec(url) || [, ''])[1]);\n}\n\n/**\n * Get search string from given url\n * @param  {string} [url] - optional url string. If no url, window.location.search will be used\n * @return {string} url search string\n */\n\nfunction getSearchString(url) {\n  if (url) {\n    var p = url.match(/\\?(.*)/);\n    return p && p[1] ? p[1].split('#')[0] : '';\n  }\n\n  return inBrowser && window.location.search.substring(1);\n}\n/**\n * Parse url parameters into javascript object\n * @param  {string} [url] - URI to parse. If no url supplied window.location will be used\n * @return {object} parsed url parameters\n */\n\n\nfunction paramsParse(url) {\n  return getParamsAsObject(getSearchString(url));\n}\n/*\n?first=abc&a[]=123&a[]=false&b[]=str&c[]=3.5&a[]=last\nhttps://random.url.com?Target=Report&Method=getStats&fields%5B%5D=Offer.name&fields%5B%5D=Advertiser.company&fields%5B%5D=Stat.clicks&fields%5B%5D=Stat.conversions&fields%5B%5D=Stat.cpa&fields%5B%5D=Stat.payout&fields%5B%5D=Stat.date&fields%5B%5D=Stat.offer_id&fields%5B%5D=Affiliate.company&groups%5B%5D=Stat.offer_id&groups%5B%5D=Stat.date&filters%5BStat.affiliate_id%5D%5Bconditional%5D=EQUAL_TO&filters%5BStat.affiliate_id%5D%5Bvalues%5D=1831&limit=9999\nhttps://random.url.com?Target=Offer&Method=findAll&filters%5Bhas_goals_enabled%5D%5BTRUE%5D=1&filters%5Bstatus%5D=active&fields%5B%5D=id&fields%5B%5D=name&fields%5B%5D=default_goal_name\nhttp://localhost:3000/?Target=Offer&Method=findAll&filters[has_goals_enabled][TRUE]=1&filters[status]=active&filters[wow]arr[]=yaz&filters[wow]arr[]=naz&fields[]=id&fields[]=name&fields[]=default_goal_name */\n\nfunction getParamsAsObject(query) {\n  var params = {};\n  var temp;\n  var re = /([^&=]+)=?([^&]*)/g;\n\n  while (temp = re.exec(query)) {\n    var k = decode(temp[1]);\n    var v = decode(temp[2]);\n\n    if (k.substring(k.length - 2) === '[]') {\n      k = k.substring(0, k.length - 2);\n      (params[k] || (params[k] = [])).push(v);\n    } else {\n      params[k] = v === '' ? true : v;\n    }\n  }\n\n  for (var prop in params) {\n    var arr = prop.split('[');\n\n    if (arr.length > 1) {\n      assign(params, arr.map(function (x) {\n        return x.replace(/[?[\\]\\\\ ]/g, '');\n      }), params[prop]);\n      delete params[prop];\n    }\n  }\n\n  return params;\n}\n\nfunction assign(obj, keyPath, value) {\n  var lastKeyIndex = keyPath.length - 1;\n\n  for (var i = 0; i < lastKeyIndex; ++i) {\n    var key = keyPath[i];\n\n    if (!(key in obj)) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  obj[keyPath[lastKeyIndex]] = value;\n}\n/*\nhttps://github.com/choojs/nanoquery/blob/791cbdfe49cc380f0b2f93477572128946171b46/browser.js\nvar reg = /([^?=&]+)(=([^&]*))?/g\n\nfunction qs (url) {\n  var obj = {}\n  url.replace(/^.*\\?/, '').replace(reg, function (a0, a1, a2, a3) {\n    var value = decodeURIComponent(a3)\n    var key = decodeURIComponent(a1)\n    if (obj.hasOwnProperty(key)) {\n      if (Array.isArray(obj[key])) obj[key].push(value)\n      else obj[key] = [obj[key], value]\n    } else {\n      obj[key] = value\n    }\n  })\n  return obj\n}\n*/\n\n/**\n * Removes params from url in browser\n * @param  {string}   param       - param key to remove from current URL\n * @param  {function} [callback]  - callback function to run. Only runs in browser\n * @return {promise}\n */\n\nfunction paramsRemove(param, callback) {\n  if (!inBrowser) return Promise.resolve();\n  return new Promise(function (resolve, reject) {\n    if (window.history && window.history.replaceState) {\n      var url = window.location.href;\n      var cleanUrl = paramsClean(url, param);\n\n      if (url !== cleanUrl) {\n        /* replace URL with history API */\n        // eslint-disable-next-line no-restricted-globals\n        history.replaceState({}, '', cleanUrl);\n      }\n    }\n\n    if (callback) callback();\n    return resolve();\n  });\n}\n\n/**\n * Get host domain of url\n * @param  {String} url - href of page\n * @return {String} hostname of page\n *\n * @example\n *  getDomainHost('https://subdomain.my-site.com/')\n *  > subdomain.my-site.com\n */\n\nfunction getDomainHost(url) {\n  if (!inBrowser) return null;\n  var a = document.createElement('a');\n  a.setAttribute('href', url);\n  return a.hostname;\n}\n/**\n * Get host domain of url\n * @param  {String} url - href of page\n * @return {String} base hostname of page\n *\n * @example\n *  getDomainBase('https://subdomain.my-site.com/')\n *  > my-site.com\n */\n\nfunction getDomainBase(url) {\n  var host = getDomainHost(url) || '';\n  return host.split('.').slice(-2).join('.');\n}\n/**\n * Remove TLD from domain string\n * @param  {String} baseDomain - host name of site\n * @return {String}\n * @example\n *  trimTld('google.com')\n *  > google\n */\n\nfunction trimTld(baseDomain) {\n  var arr = baseDomain.split('.');\n  return arr.length > 1 ? arr.slice(0, -1).join('.') : baseDomain;\n}\nvar url = {\n  trimTld: trimTld,\n  getDomainBase: getDomainBase,\n  getDomainHost: getDomainHost\n};\n\nvar googleKey = 'google';\n/**\n * Checks a given url and parses referrer data\n * @param  {String} [referrer] - (optional) referring URL\n * @param  {String} [currentUrl] - (optional) the current url\n * @return {Object}     [description]\n */\n\nfunction parseReferrer(referrer, currentUrl) {\n  if (!inBrowser) return false; // default referral data\n\n  var refData = {\n    'source': '(direct)',\n    'medium': '(none)',\n    'campaign': '(not set)' // Add raw ref url if external\n\n  };\n\n  if (referrer && isExternalReferrer(referrer)) {\n    refData.referrer = referrer;\n  }\n\n  var domainInfo = parseDomain(referrer); // Read referrer URI and infer source\n\n  if (domainInfo && Object.keys(domainInfo).length) {\n    refData = Object.assign({}, refData, domainInfo);\n  } // Read URI params and use set utm params\n\n\n  var params = paramsParse(currentUrl);\n  var paramKeys = Object.keys(params);\n\n  if (!paramKeys.length) {\n    return refData;\n  } // set campaign params off GA matches\n\n\n  var gaParams = paramKeys.reduce(function (acc, key) {\n    // match utm params & dclid (display) & gclid (cpc)\n    if (key.match(/^utm_/)) {\n      acc[\"\".concat(key.replace(/^utm_/, ''))] = params[key];\n    } // https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters\n    // dclid - cpc Cost-Per-Thousand Impressions\n    // gclid - cpc Cost per Click\n\n\n    if (key.match(/^(d|g)clid/)) {\n      acc['source'] = googleKey;\n      acc['medium'] = params.gclid ? 'cpc' : 'cpm';\n      acc[key] = params[key];\n    }\n\n    return acc;\n  }, {});\n  return Object.assign({}, refData, gaParams);\n}\n/**\n * Client side domain parser for determining marketing data.\n * @param  {String} referrer - ref url\n * @return {Object}\n */\n\nfunction parseDomain(referrer) {\n  if (!referrer || !inBrowser) return false;\n  var referringDomain = getDomainBase(referrer);\n  var a = document.createElement('a');\n  a.href = referrer; // Shim for the billion google search engines\n\n  if (a.hostname.indexOf(googleKey) > -1) {\n    referringDomain = googleKey;\n  } // If is search engine\n\n\n  if (searchEngines[referringDomain]) {\n    var searchEngine = searchEngines[referringDomain];\n    var queryParam = typeof searchEngine === 'string' ? searchEngine : searchEngine.p;\n    var termRegex = new RegExp(queryParam + '=.*?([^&#]*|$)', 'gi');\n    var term = a.search.match(termRegex);\n    return {\n      source: searchEngine.n || trimTld(referringDomain),\n      medium: 'organic',\n      term: (term ? term[0].split('=')[1] : '') || '(not provided)'\n    };\n  } // Default\n\n\n  var medium = !isExternalReferrer(referrer) ? 'internal' : 'referral';\n  return {\n    source: a.hostname,\n    medium: medium\n  };\n}\n/**\n * Search engine query string data\n * @type {Object}\n */\n\n\nvar Q = 'q';\nvar QUERY = 'query';\nvar searchEngines = {\n  'daum.net': Q,\n  'eniro.se': 'search_word',\n  'naver.com': QUERY,\n  'yahoo.com': 'p',\n  'msn.com': Q,\n  'aol.com': Q,\n  'ask.com': Q,\n  'baidu.com': 'wd',\n  'yandex.com': 'text',\n  'rambler.ru': 'words',\n  'google': Q,\n  'bing.com': {\n    'p': Q,\n    'n': 'live'\n  }\n};\n\nfunction uuid() {\n  var u = '',\n      m = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx',\n      i = 0,\n      rb = Math.random() * 0xffffffff | 0;\n\n  while (i++ < 36) {\n    var c = m[i - 1],\n        r = rb & 0xf,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    u += c == '-' || c == '4' ? c : v.toString(16);\n    rb = i % 8 == 0 ? Math.random() * 0xffffffff | 0 : rb >> 4;\n  }\n\n  return u;\n}\n\nfunction throttle(func, wait) {\n  var context, args, result;\n  var timeout = null;\n  var previous = 0;\n\n  var later = function later() {\n    previous = new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  };\n\n  return function () {\n    var now = new Date();\n\n    if (!previous) {\n      previous = now;\n    }\n\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\nexports.dotProp = dlv;\nexports.storage = storageUtils__default;\nexports.getCookie = storageUtils.getCookie;\nexports.setCookie = storageUtils.setCookie;\nexports.globalContext = storageUtils.globalContext;\nexports.removeCookie = storageUtils.removeCookie;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isArray = isArray;\nexports.isObject = isObject;\nexports.isUndefined = isUndefined;\nexports.isBoolean = isBoolean;\nexports.decodeUri = decode;\nexports.getBrowserLocale = getBrowserLocale;\nexports.getTimeZone = getTimeZone;\nexports.inBrowser = inBrowser;\nexports.isExternalReferrer = isExternalReferrer;\nexports.isScriptLoaded = isScriptLoaded;\nexports.noOp = noOp;\nexports.paramsClean = paramsClean;\nexports.paramsGet = getValueParamValue;\nexports.paramsParse = paramsParse;\nexports.paramsRemove = paramsRemove;\nexports.parseReferrer = parseReferrer;\nexports.url = url;\nexports.uuid = uuid;\nexports.throttle = throttle;\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}:\"function\"==typeof define&&define.amd?define(function(){return function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}}):t.dlv=function(t,n,e,i,o){for(n=n.split?n.split(\".\"):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}}(this);\n//# sourceMappingURL=dlv.umd.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cookieUtils = require('@analytics/cookie-utils');\n\nfunction hasLocalStorage() {\n\n  try {\n    if (typeof localStorage === 'undefined' || typeof JSON === 'undefined') {\n      return false;\n    } // test for safari private\n\n\n    localStorage.setItem('_t_', '1');\n    localStorage.removeItem('_t_');\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction parse(input) {\n  var value;\n\n  try {\n    value = JSON.parse(input);\n\n    if (typeof value === 'undefined') {\n      value = input;\n    }\n\n    if (value === 'true') {\n      value = true;\n    }\n\n    if (value === 'false') {\n      value = false;\n    }\n\n    if (parseFloat(value) === value && _typeof(value) !== 'object') {\n      value = parseFloat(value);\n    }\n  } catch (e) {\n    value = input;\n  }\n\n  return value;\n}\n\nvar globalContext = (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self.self === self && self || (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) === 'object' && global.global === global && global || undefined;\n\nvar LOCAL_STORAGE = 'localStorage';\nvar COOKIE = 'cookie';\nvar GLOBAL = 'global'; // Verify support\n\nvar hasStorage = hasLocalStorage();\nvar hasCookies = cookieUtils.hasCookieSupport();\n/**\n * Get storage item from localStorage, cookie, or window\n * @param  {string} key - key of item to get\n * @param  {object|string} [options] - storage options. If string location of where to get storage\n * @param  {string} [options.storage] - Define type of storage to pull from.\n * @return {Any}  the value of key\n */\n\nfunction getItem(key) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!key) return null;\n  var storageType = getStorageType(options); // Get value from all locations\n\n  if (storageType === 'all') return getAll(key);\n  /* 1. Try localStorage */\n\n  if (useLocal(storageType)) {\n    var value = localStorage.getItem(key);\n    if (value || storageType === LOCAL_STORAGE) return parse(value);\n  }\n  /* 2. Fallback to cookie */\n\n\n  if (useCookie(storageType)) {\n    var _value = cookieUtils.getCookie(key);\n\n    if (_value || storageType === COOKIE) return parse(_value);\n  }\n  /* 3. Fallback to window/global. */\n\n\n  return globalContext[key] || null;\n}\n\nfunction getAll(key) {\n  return {\n    cookie: parse(cookieUtils.getCookie(key)),\n    localStorage: parse(localStorage.getItem(key)),\n    global: globalContext[key] || null\n  };\n}\n/**\n * Store values in localStorage, cookie, or window\n * @param {string} key - key of item to set\n * @param {*} value - value of item to set\n * @param {object|string} [options] - storage options. If string location of where to get storage\n * @param {string} [options.storage] - Define type of storage to pull from.\n * @returns {object} returns old value, new values, & location of storage\n */\n\n\nfunction setItem(key, value) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!key || !value) return false;\n  var storageType = getStorageType(options);\n  var saveValue = JSON.stringify(value);\n  /* 1. Try localStorage */\n\n  if (useLocal(storageType)) {\n    // console.log('SET as localstorage', saveValue)\n    var _oldValue = parse(localStorage.getItem(key));\n\n    localStorage.setItem(key, saveValue);\n    return {\n      value: value,\n      oldValue: _oldValue,\n      location: LOCAL_STORAGE\n    };\n  }\n  /* 2. Fallback to cookie */\n\n\n  if (useCookie(storageType)) {\n    // console.log('SET as cookie', saveValue)\n    var _oldValue2 = parse(cookieUtils.getCookie(key));\n\n    cookieUtils.setCookie(key, saveValue);\n    return {\n      value: value,\n      oldValue: _oldValue2,\n      location: COOKIE\n    };\n  }\n  /* 3. Fallback to window/global */\n\n\n  var oldValue = globalContext[key];\n  globalContext[key] = value;\n  return {\n    value: value,\n    oldValue: oldValue,\n    location: GLOBAL\n  };\n}\n/**\n * Remove values from localStorage, cookie, or window\n * @param {string} key - key of item to set\n * @param {object|string} [options] - storage options. If string location of where to get storage\n * @param {string} [options.storage] - Define type of storage to pull from.\n */\n\nfunction removeItem(key) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!key) return false;\n  var storageType = getStorageType(options);\n\n  if (useLocal(storageType)) {\n    /* 1. Try localStorage */\n    localStorage.removeItem(key);\n    return LOCAL_STORAGE;\n  } else if (useCookie(storageType)) {\n    /* 2. Fallback to cookie */\n    cookieUtils.removeCookie(key);\n    return COOKIE;\n  }\n  /* 3. Fallback to window/global */\n\n\n  globalContext[key] = undefined;\n  return GLOBAL;\n}\n\nfunction getStorageType(options) {\n  return typeof options === 'string' ? options : options.storage;\n}\n\nfunction useLocal(storage) {\n  return hasStorage && (!storage || storage === LOCAL_STORAGE);\n}\n\nfunction useCookie(storage) {\n  return hasCookies && (!storage || storage === COOKIE);\n}\nvar index = {\n  getItem: getItem,\n  setItem: setItem,\n  removeItem: removeItem\n};\n\nexports.getCookie = cookieUtils.getCookie;\nexports.setCookie = cookieUtils.setCookie;\nexports.removeCookie = cookieUtils.removeCookie;\nexports.hasCookieSupport = cookieUtils.hasCookieSupport;\nexports.getItem = getItem;\nexports.setItem = setItem;\nexports.removeItem = removeItem;\nexports.globalContext = globalContext;\nexports.hasLocalStorageSupport = hasLocalStorage;\nexports.default = index;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*\n// set\ncookie('test', 'a')\n\n// complex set - cookie(name, value, ttl, path, domain, secure)\ncookie('test', 'a', 60*60*24, '/api', '*.example.com', true)\n\n// get\ncookie('test')\n\n// destroy\ncookie('test', '', -1)\n*/\nfunction cookie(name, value, ttl, path, domain, secure) {\n  if (typeof window === 'undefined') return;\n  /* Set values */\n\n  if (arguments.length > 1) {\n    // eslint-disable-next-line no-return-assign\n    return document.cookie = name + '=' + encodeURIComponent(value) + ( // eslint-disable-next-line operator-linebreak\n    !ttl ? '' : // Has TTL set expiration on cookie\n    '; expires=' + new Date(+new Date() + ttl * 1000).toUTCString() + ( // If path set path\n    !path ? '' : '; path=' + path) + ( // If domain set domain\n    !domain ? '' : '; domain=' + domain) + ( // If secure set secure\n    !secure ? '' : '; secure'));\n  }\n\n  return decodeURIComponent((('; ' + document.cookie).split('; ' + name + '=')[1] || '').split(';')[0]);\n}\n\nfunction hasCookieSupport() {\n  try {\n    var key = '_c_'; // Try to set cookie\n\n    cookie(key, '1');\n    var valueSet = document.cookie.indexOf(key) !== -1; // Cleanup cookie\n\n    cookie(key, '', -1);\n    return valueSet;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Get a cookie value\n * @param  {string} name - key of cookie\n * @return {string} value of cookie\n */\n\nvar getCookie = cookie;\n/**\n * Set a cookie value\n * @param {string} name  - key of cookie\n * @param {string} value - value of cookie\n * @param {string} days  - days to keep cookie\n */\n\nvar setCookie = cookie;\n/**\n * Remove a cookie value.\n * @param {string} name  - key of cookie\n */\n\nfunction removeCookie(name) {\n  return cookie(name, '', -1);\n}\n\nexports.hasCookieSupport = hasCookieSupport;\nexports.setCookie = setCookie;\nexports.getCookie = getCookie;\nexports.removeCookie = removeCookie;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// googleAnalytics events from a node server environment.\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\n/* global ga */\nvar defaultConfig = {\n  /* See description below */\n  trackingId: null,\n\n  /* See description below */\n  debug: false,\n\n  /* See description below */\n  anonymizeIp: false,\n\n  /* See description below */\n  customDimensions: {},\n\n  /* See description below */\n  resetCustomDimensionsOnPage: [],\n\n  /* See description below */\n  setCustomDimensionsToPage: true\n  /* Custom metrics https://bit.ly/3c5de88 */\n  // TODO customMetrics: { key: 'metric1' }\n\n  /* Content groupings https://bit.ly/39Zt3Me */\n  // TODO contentGroupings: { key: 'contentGroup1' }\n\n};\nvar loadedInstances = {};\n/**\n * Google analytics plugin\n * @link https://getanalytics.io/plugins/google-analytics/\n * @link https://analytics.google.com/analytics/web/\n * @link https://developers.google.com/analytics/devguides/collection/analyticsjs\n * @param {object}  pluginConfig - Plugin settings\n * @param {string}  pluginConfig.trackingId - Google Analytics site tracking Id\n * @param {boolean} [pluginConfig.debug] - Enable Google Analytics debug mode\n * @param {boolean} [pluginConfig.anonymizeIp] - Enable [Anonymizing IP addresses](https://bit.ly/3c660Rd) sent to Google Analytics. [See details below](#anonymize-visitor-ips)\n * @param {object}  [pluginConfig.customDimensions] - Map [Custom dimensions](https://bit.ly/3c5de88) to send extra information to Google Analytics. [See details below](#using-ga-custom-dimensions)\n * @param {object}  [pluginConfig.resetCustomDimensionsOnPage] - Reset custom dimensions by key on analytics.page() calls. Useful for single page apps.\n * @param {boolean} [pluginConfig.setCustomDimensionsToPage] - Mapped dimensions will be set to the page & sent as properties of all subsequent events on that page. If false, analytics will only pass custom dimensions as part of individual events\n * @param {string}  [pluginConfig.instanceName] - Custom tracker name for google analytics. Use this if you need multiple googleAnalytics scripts loaded\n * @param {string}  [pluginConfig.customScriptSrc] - Custom URL for google analytics script, if proxying calls\n * @param {object}  [pluginConfig.cookieConfig] - Additional cookie properties for configuring the [ga cookie](https://developers.google.com/analytics/devguides/collection/analyticsjs/cookies-user-id#configuring_cookie_field_settings)\n * @param {object}  [pluginConfig.tasks] - [Set custom google analytic tasks](https://developers.google.com/analytics/devguides/collection/analyticsjs/tasks)\n * @return {*}\n * @example\n *\n * googleAnalytics({\n *   trackingId: 'UA-1234567'\n * })\n */\n\nfunction googleAnalytics$1() {\n  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var pageCalledOnce = false; // Allow for multiple google analytics instances\n\n  var _getInstanceDetails = getInstanceDetails(pluginConfig),\n      instanceName = _getInstanceDetails.instanceName,\n      instancePrefix = _getInstanceDetails.instancePrefix;\n\n  return {\n    name: 'google-analytics',\n    config: _objectSpread({}, defaultConfig, pluginConfig),\n    // Load google analytics\n    initialize: function initialize(pluginApi) {\n      var config = pluginApi.config,\n          instance = pluginApi.instance;\n      if (!config.trackingId) throw new Error('No GA trackingId defined'); // var to hoist\n\n      var scriptSrc = config.customScriptSrc || 'https://www.google-analytics.com/analytics.js'; // Load google analytics script to page\n\n      if (gaNotLoaded(scriptSrc)) {\n        /* eslint-disable */\n        (function (i, s, o, g, r, a, m) {\n          i['GoogleAnalyticsObject'] = r;\n          i[r] = i[r] || function () {\n            (i[r].q = i[r].q || []).push(arguments);\n          }, i[r].l = 1 * new Date();\n          a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n          a.async = 1;\n          a.src = g;\n          m.parentNode.insertBefore(a, m);\n        })(window, document, 'script', scriptSrc, 'ga');\n        /* eslint-enable */\n\n      } // Initialize tracker instance on page\n\n\n      if (!loadedInstances[instanceName]) {\n        var gaConfig = _objectSpread({\n          cookieDomain: config.domain || 'auto',\n          siteSpeedSampleRate: config.siteSpeedSampleRate || 1,\n          sampleRate: config.sampleRate || 100,\n          allowLinker: true\n        }, config.cookieConfig);\n\n        if (instanceName) {\n          gaConfig.name = instanceName;\n        }\n\n        ga('create', config.trackingId, gaConfig);\n\n        if (config.debug) {\n          // Disable sends to GA http://bit.ly/2Ro0vTR\n          ga(\"\".concat(instancePrefix, \"set\"), 'sendHitTask', null);\n          window.ga_debug = {\n            trace: true\n          };\n        }\n\n        if (config.anonymizeIp) {\n          ga(\"\".concat(instancePrefix, \"set\"), 'anonymizeIp', true);\n        }\n\n        if (config.tasks) {\n          var taskList = ['customTask', 'previewTask', 'checkProtocolTask', 'validationTask', 'checkStorageTask', 'historyImportTask', 'samplerTask', 'buildHitTask', 'sendHitTask', 'timingTask', 'displayFeaturesTask'];\n          taskList.forEach(function (taskName) {\n            if (config.tasks.hasOwnProperty(taskName)) {\n              var task = config.tasks[taskName];\n\n              if (typeof task === 'function') {\n                ga(config.tasks[taskName]);\n              } else if (task === null) {\n                ga(\"\".concat(instancePrefix, \"set\"), taskName, task);\n              }\n            }\n          });\n        }\n        /* set custom dimensions from user traits */\n\n\n        var user = instance.user() || {};\n        var traits = user.traits || {};\n\n        if (Object.keys(traits).length) {\n          var customDimensions = formatObjectIntoDimensions$1(traits, config);\n          ga(\"\".concat(instancePrefix, \"set\"), customDimensions);\n        }\n\n        loadedInstances[instanceName] = true;\n      }\n    },\n    // Google Analytics page view\n    page: function page(_ref) {\n      var payload = _ref.payload,\n          config = _ref.config,\n          instance = _ref.instance;\n      var properties = payload.properties;\n      var resetCustomDimensionsOnPage = config.resetCustomDimensionsOnPage,\n          customDimensions = config.customDimensions;\n      var campaign = instance.getState('context.campaign');\n      if (gaNotLoaded()) return;\n      /* If dimensions are specifiied to reset, clear them before page view */\n\n      if (resetCustomDimensionsOnPage && resetCustomDimensionsOnPage.length) {\n        var resetDimensions = resetCustomDimensionsOnPage.reduce(function (acc, key) {\n          if (customDimensions[key]) {\n            acc[customDimensions[key]] = null; // { dimension1: null } etc\n          }\n\n          return acc;\n        }, {});\n\n        if (Object.keys(resetDimensions).length) {\n          // Reset custom dimensions\n          ga(\"\".concat(instancePrefix, \"set\"), resetDimensions);\n        }\n      }\n\n      var path = properties.path || document.location.pathname;\n      var pageView = {\n        page: path,\n        title: properties.title,\n        location: properties.url\n      };\n      var pageData = {\n        page: path,\n        title: properties.title // allow referrer override if referrer was manually set\n\n      };\n\n      if (properties.referrer !== document.referrer) {\n        pageData.referrer = properties.referrer;\n      }\n\n      var campaignData = addCampaignData(campaign);\n      var dimensions = setCustomDimensions(properties, config, instancePrefix);\n      /* Dimensions will only be included in the event if config.setCustomDimensionsToPage is false */\n\n      var finalPayload = _objectSpread({}, pageView, campaignData, dimensions);\n\n      ga(\"\".concat(instancePrefix, \"set\"), pageData); // Remove location for SPA tracking after initial page view\n\n      if (pageCalledOnce) {\n        delete finalPayload.location;\n      }\n      /* send page view to GA */\n\n\n      ga(\"\".concat(instancePrefix, \"send\"), 'pageview', finalPayload); // Set after initial page view\n\n      pageCalledOnce = true;\n    },\n\n    /**\n     * Google Analytics track event\n     * @example\n     *\n     * analytics.track('playedVideo', {\n     *   category: 'Videos',\n     *   label: 'Fall Campaign',\n     *   value: 42\n     * })\n     */\n    track: function track(_ref2) {\n      var payload = _ref2.payload,\n          config = _ref2.config,\n          instance = _ref2.instance;\n      var properties = payload.properties,\n          event = payload.event;\n      var label = properties.label,\n          value = properties.value,\n          category = properties.category,\n          nonInteraction = properties.nonInteraction;\n      var campaign = instance.getState('context.campaign'); // TODO inline this trackEvent\n\n      trackEvent$1({\n        hitType: 'event',\n        event: event,\n        label: label,\n        category: category || 'All',\n        value: value,\n        nonInteraction: nonInteraction,\n        campaign: campaign\n      }, config, payload);\n    },\n    identify: function identify(_ref3) {\n      var payload = _ref3.payload,\n          config = _ref3.config;\n      identifyVisitor$1(payload.userId, payload.traits, config);\n    },\n    loaded: function loaded() {\n      return !!window.gaplugins;\n    }\n  };\n}\n\nfunction gaNotLoaded(scriptSrc) {\n  if (scriptSrc) {\n    return !scriptLoaded(scriptSrc);\n  }\n\n  return typeof ga === 'undefined';\n}\n\nfunction getInstanceDetails(pluginConfig) {\n  var instanceName = pluginConfig.instanceName;\n  return {\n    instancePrefix: instanceName ? \"\".concat(instanceName, \".\") : '',\n    instanceName: instanceName\n  };\n}\n/**\n * Send event tracking to Google Analytics\n * @param  {object} eventData - GA event payload\n * @param  {string} [eventData.hitType = 'event'] - hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n * @param  {string} [eventData.event] - event Action https://bit.ly/2CUzeoz\n * @param  {string} [eventData.label] - event Label http://bit.ly/2oo8eb3\n * @param  {string} [eventData.category] - event Category http://bit.ly/2EAy9UP\n * @param  {string} [eventData.nonInteraction = false] - nonInteraction https://bit.ly/2CUzeoz\n * @return {object} sent data\n */\n\n\nfunction trackEvent$1(eventData) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var payload = arguments.length > 2 ? arguments[2] : undefined;\n  if (gaNotLoaded()) return;\n\n  var _getInstanceDetails2 = getInstanceDetails(opts),\n      instancePrefix = _getInstanceDetails2.instancePrefix;\n\n  var data = {\n    // hitType https://bit.ly/2Jab9L1 one of 'pageview', 'screenview', 'event', 'transaction', 'item', 'social', 'exception', 'timing'\n    hitType: eventData.hitType || 'event',\n    // eventAction https://bit.ly/2CUzeoz\n    eventAction: eventData.event,\n    // eventLabel http://bit.ly/2oo8eb3\n    eventLabel: eventData.label,\n    // eventCategory http://bit.ly/2EAy9UP\n    eventCategory: eventData.category || 'All',\n    // nonInteraction https://bit.ly/2CUzeoz\n    nonInteraction: eventData.nonInteraction !== undefined ? !!eventData.nonInteraction : false\n  };\n\n  if (eventData.value) {\n    // how much is this action worth?\n    data.eventValue = format(eventData.value);\n  }\n  /* Attach campaign data */\n\n\n  var campaignData = addCampaignData(eventData);\n  /* Set Dimensions or return them for payload is config.setCustomDimensionsToPage is false */\n\n  var dimensions = setCustomDimensions(payload.properties, opts, instancePrefix);\n\n  var finalPayload = _objectSpread({}, data, campaignData, dimensions);\n  /* Send data to Google Analytics */\n\n\n  ga(\"\".concat(instancePrefix, \"send\"), 'event', finalPayload);\n  return finalPayload;\n}\n/**\n * Add campaign data to GA payload https://bit.ly/34qFCPn\n * @param {Object} [campaignData={}] [description]\n * @param {String} [campaignData.campaignName] - Name of campaign\n * @param {String} [campaignData.campaignSource] - Source of campaign\n * @param {String} [campaignData.campaignMedium] - Medium of campaign\n * @param {String} [campaignData.campaignContent] - Content of campaign\n * @param {String} [campaignData.campaignKeyword] - Keyword of campaign\n */\n\nfunction addCampaignData() {\n  var campaignData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var campaign = {};\n  var name = campaignData.name,\n      source = campaignData.source,\n      medium = campaignData.medium,\n      content = campaignData.content,\n      keyword = campaignData.keyword;\n  if (name) campaign.campaignName = name;\n  if (source) campaign.campaignSource = source;\n  if (medium) campaign.campaignMedium = medium;\n  if (content) campaign.campaignContent = content;\n  if (keyword) campaign.campaignKeyword = keyword;\n  return campaign;\n}\n/* Todo add includeSearch options ¯\\_(ツ)_/¯\nfunction getPagePath(props, opts = {}) {\n  if (!props) return\n  if (opts.includeSearch && props.search) {\n    return `${props.path}${props.search}`\n  }\n  return props.path\n}\n*/\n// properties, data=opts\n\n\nfunction formatObjectIntoDimensions$1(properties) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var customDimensions = opts.customDimensions; // TODO map opts.customMetrics; Object.keys(customMetrics) { key: 'metric1' }\n  // TODO map opts.contentGroupings; Object.keys(contentGroupings) { key: 'contentGroup1' }\n\n  /* Map values from payload to any defined custom dimensions */\n\n  return Object.keys(customDimensions).reduce(function (acc, key) {\n    var dimensionKey = customDimensions[key];\n    var value = get$1(properties, key) || properties[key];\n\n    if (typeof value === 'boolean') {\n      value = value.toString();\n    }\n\n    if (value || value === 0) {\n      acc[dimensionKey] = value;\n      return acc;\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction get$1(obj, key, def, p, undef) {\n  key = key.split ? key.split('.') : key;\n\n  for (p = 0; p < key.length; p++) {\n    obj = obj ? obj[key[p]] : undef;\n  }\n\n  return obj === undef ? def : obj;\n}\n\nfunction setCustomDimensions() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var opts = arguments.length > 1 ? arguments[1] : undefined;\n  var instancePrefix = arguments.length > 2 ? arguments[2] : undefined;\n  var customDimensions = formatObjectIntoDimensions$1(props, opts);\n\n  if (!Object.keys(customDimensions).length) {\n    return {};\n  } // If setCustomDimensionsToPage false, don't save custom dimensions from event to page\n\n\n  if (!opts.setCustomDimensionsToPage) {\n    return customDimensions;\n  } // Set custom dimensions\n\n\n  ga(\"\".concat(instancePrefix, \"set\"), customDimensions);\n  return {};\n}\n/**\n * Identify a visitor by Id\n * @param  {string} id - unique visitor ID\n */\n\n\nfunction identifyVisitor$1(id) {\n  var traits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var conf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (gaNotLoaded()) return;\n\n  var _getInstanceDetails3 = getInstanceDetails(conf),\n      instancePrefix = _getInstanceDetails3.instancePrefix;\n\n  if (id) ga(\"\".concat(instancePrefix, \"set\"), 'userId', id);\n\n  if (Object.keys(traits).length) {\n    var custom = formatObjectIntoDimensions$1(traits, conf);\n    ga(\"\".concat(instancePrefix, \"set\"), custom);\n  }\n}\n\nfunction scriptLoaded(scriptSrc) {\n  var scripts = document.querySelectorAll('script[src]');\n  return !!Object.keys(scripts).filter(function (key) {\n    return (scripts[key].src || '') === scriptSrc;\n  }).length;\n}\n\nfunction format(value) {\n  if (!value || value < 0) return 0;\n  return Math.round(value);\n}\n\nvar browser = /*#__PURE__*/Object.freeze({\n  default: googleAnalytics$1,\n  trackEvent: trackEvent$1,\n  identifyVisitor: identifyVisitor$1\n});\n\n/* This module will shake out unused code + work in browser and node 🎉 */\n\nvar index = googleAnalytics$1;\n/* init for CDN usage. globalName.init() */\n\nvar init = googleAnalytics$1;\n/* Standalone API */\n\nvar initialize$1 = undefined;\nvar page = undefined;\nvar track = trackEvent$1;\nvar identify = identifyVisitor$1;\n\nexports.default = index;\nexports.init = init;\nexports.identify = identify;\nexports.track = track;\nexports.page = page;\nexports.initialize = initialize$1;\n","const cacheLoader = require('../../cacheLoader');\n\nmodule.exports = cacheLoader(function loadJSBundle(bundle) {\n  return new Promise(function(resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function(e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function() {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n});\n","\"use strict\";\n\nlet cachedBundles = {};\n\nmodule.exports = function (loader) {\n  return function (bundle) {\n    if (cachedBundles[bundle]) {\n      return cachedBundles[bundle];\n    }\n\n    return cachedBundles[bundle] = loader(bundle).catch(function (e) {\n      delete cachedBundles[bundle];\n      throw e;\n    });\n  };\n};"],"names":["require","register","JSON","parse","mapping","module","exports","pairs","keys","Object","i","length","id","resolved","Error","_install","_store","_speech","_audio","_timing","_ui","_locationHandler","_synthesizers","_midi","_camera","_visual","_patterns","_instructions","_person","_interopRequireWildcard","_reporting","_version","body","document","documentElement","main","querySelector","image","isRecording","startRecording","stopRecording","record","store","createStore","people","camera","photo","audio","midi","midiButton","reporter","kit","patterns","recorder","inputElement","video","isLoading","ultimateFailure","midiAvailable","cameraLoading","noFacesFound","counter","cameraPan","x","y","classList","toggle","ui","getLocationSettings","metronome","backingTrack","clear","transparent","synch","debug","muted","duet","quantise","text","spectrogram","speak","SETTINGS","maxFaces","shouldLoadIrisModel","location","protocol","setToast","setTimeout","replace","href","substring","toSay","hasSpeech","say","loadInstruments","async","method","callback","map","instrument","person","name","console","log","loadRandomInstrument","getPerson","index","undefined","options","dots","leftEyeIris","rightEyeIris","hue","Math","random","NAMES","savedOptions","has","getItem","Person","audioContext","randomInstrument","button","addEventListener","event","detail","cache","setItem","instrumentName","loadInstrument","outputs","setMIDI","push","enableMIDIForPerson","personIndex","portIndex","showMIDI","setupMIDIButton","setupMIDI","setFeedback","addListener","e","forEach","setText","add","error","enableMIDI","loadCamera","deviceId","newCamera","setupCamera","track","category","label","value","trackError","setupReporting","installation","loadMeter","loadingLoop","requestAnimationFrame","showReloadButton","destination","getElementById","needsInstall","VERSION","style","display","needsUpdate","onLoaded","assign","settings","progressCallback","loadIndex","loadModel","setupInterface","setToggle","status","addToHistory","toggleVideoVisiblity","isVideoVisible","setButton","unique","ceil","now","dimensions","getCanvasDimensions","img","Image","src","takePhotograph","alt","Date","toString","width","height","anchor","createElement","innerHTML","download","appendChild","scrollIntoView","load","progress","progressBar","setAttribute","then","showPlayerSelector","update","setupImage","videoCameraDevices","filterVideoCameras","detectCameras","removeItem","setupCameraForm","selected","setProperty","updateCanvasSize","errorMessage","String","setupAudio","createDrumkit","kitSequence","canvas","nodeName","toLowerCase","addToolTips","volume","parseFloat","setVolume","predictions","tickerTape","drawElement","t","overdraw","sin","cos","drawQuantise","getBar","updateByteFrequencyData","drawBars","dataArray","bufferLength","l","prediction","faceInViewConfidence","getHelp","floor","draw","stuff","sing","eyeDirection","pitch","roll","yaw","mouthRange","DEFAULT_OPTIONS","LIPS_RANGE","getInstruction","start","bar","bars","barsElapsed","timePassed","elapsed","expected","drift","level","intervals","lag","metronomeLength","clack","kick","playNextPart","snare","hat","playing","timePerBar","setup","catch","installer","updateApp","updater","updateAvailable","showUpdateButton","pwa","window","onbeforeunload","trackExit","oncontextmenu","key","innerText","previousInstrument","nextInstrument","b","getBars","setBars","setTimeBetween","getBPM","ub","ubars","ut","setNodeCount","cowbell","recording","mp3","encodeRecording","audioSrc","URL","createObjectURL","visibility","_manifest","isSupportingBrowser","hasOwnProperty","deferredPrompt","installed","hasPrompt","openModal","defer","manifestData","relatedApps","isIOS","navigator","userAgent","includes","maxTouchPoints","cancelInstall","Promise","resolve","reject","getManifestData","response","fetch","manifestPath","data","json","manifestToCheck","icons","description","err","begin","showInstaller","standalone","getInstalledRelatedApps","firstUpdated","matchMedia","matches","short_name","replaceAll","DATE","getDate","addTooltip","success","prompt","userChoice","outcome","install","preventDefault","once","_instruments","_utils","_fullScreen","doc","buttonInstrument","buttonRecord","buttonQuantise","buttonMIDI","buttonVideo","controls","bindTextElement","element","rate","clearAfter","split","cachedMessage","interval","clearInterval","currentMessage","db","debounce","message","responseRate","join","clearTimeout","after","currentlyVisible","fragment","cameras","select","optionElements","selection","selectedIndex","INSTRUMENT_FOLDERS","folder","INSTRUMENT_NAMES","midiEnabled","test","toolTip","target","getAttribute","buttonName","toggleName","parentNode","action","query","querySelectorAll","panel","solo","trio","advanced","advancedMode","complete","result","remove","focus","buttonShare","shareElement","url","getShareLink","canFullscreen","buttonFullscreen","fullscreen","toggleFullScreen","releaseDate","versionElement","currentVersion","formattedDate","getMonth","getFullYear","toLocaleTimeString","hour12","hour","minute","cleanTitle","instrumentCache","wait","timerId","args","fullscreenEnabled","mozFullScreenEnabled","webkitRequestFullScreen","exitFullscreen","goFullscreen","requestFullscreen","fullscreenElement","guessType","lower","Array","isArray","indexOf","convertIntegerArrayToBooleans","isNaN","defaultOptions","locationOptions","urlParams","URLSearchParams","search","reload","toQuery","title","option","searchParams","set","history","pushState","mouth","mouthClosed","lipsUpperInner","lipsLowerInner","midwayBetweenEyes","leftEyeLower0","rightEyeLower0","white","dark","grey","cream","brown","blue","green","yellow","orange","red","getBundleURL","bundleURL","getBaseURL","stack","match","dirname","_filePath","filePath","slice","slashIndex","lastIndexOf","relative","from","to","fromParts","shift","divergeIndex","toParts","parts","apply","fromId","toId","_dirname","storage","localStorage","save","updates","encoded","stringify","getVoices","voices","startTime","waitForVoices","speechSynthesis","interupt","lang","filtered","filter","voice","getSpecificVoice","speech","SpeechSynthesisUtterance","voiceURI","onend","onerror","cancel","talk","pending","_maths","BANKS","NOTES_BLACK","NOTES_WHITE","mediaRecorder","gainNode","delayNode","feedbackNode","analyser","compressor","reverb","destinationVolume","active","BUFFER_SIZE","INPUT_CHANNELS","OUTPUT_CHANNELS","AudioContext","webkitAudioContext","createGain","gain","createDynamicsCompressor","threshold","knee","ratio","attack","release","createConvolver","createDelay","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","frequencyBinCount","Uint8Array","connect","createScriptProcessor","getByteFrequencyData","getByteTimeDomainData","monitor","state","resume","shape","oscillator","type","frequency","clamp","fadeVolume","newVolume","setValueAtTime","currentTime","amplitude","audioBuffer","offset","loop","trackSource","createBufferSource","buffer","onended","disconnect","createInstrumentBanks","fileTye","dot","bank","NOTE_NAMES","NOTE_NAMES_FRIENDLY","note","percent","octave","isMinor","noteNumber","noteName","loadInstrumentParts","path","instrumentPath","part","arrayBuffer","decodeAudioData","loadAudio","output","all","stream","isAvailable","MediaRecorder","isTypeSupported","Blob","downloadRecording","blob","recordedChunks","a","click","revokeObjectURL","ondataavailable","ev","onwarning","onstop","stop","PI","t1","pow","scaledTime","scaledTime1","sqrt","magnitude","scaledTime2","s","p","asin","easeInBounce","easeOutBounce","TAU","smallest","largest","range","end","amt","val","min","max","timingWorker","Worker","currentInterval","isRunning","time","postMessage","command","timeBetween","onmessage","accurateTiming","createQueue","factorymethod","quantity","instruments","createKick","osc","createOscillator","osc2","gainOsc","gainOsc2","inputDryNode","velocity","duration","cancelScheduledValues","exponentialRampToValueAtTime","createSnare","osc3","gainOsc3","filterGain","noise","createBuffer","sampleRate","createBiquadFilter","getChannelData","linearRampToValueAtTime","createHihat","gainOsc4","bandpass","highpass","oscillators","osc4","createClack","cowbellGainNode","Q","ratios","ocatave","createCowbell","createKicks","createSnares","createHihats","_webmidiEsm","WebMidi","enable","ports","constructor","this","eventMap","eventsSuspended","n","r","ANY_EVENT","TypeError","prepend","unshift","addOneTimeListener","remaining","Symbol","for","hasListener","entries","some","eventNames","getListeners","suspendEvent","suspended","unsuspendEvent","getListenerCount","emit","concat","arguments","context","count","removeListener","[object Object]","parseInt","eventCount","ReferenceError","InputChannel","input","number","super","destroy","_parseEvent","dataBytes","wm","MIDI_SYSTEM_MESSAGES","sysex","midiMessageEvent","rawData","statusByte","timestamp","timeStamp","_parseEventForStandardMessages","getStructuredMidiMessage","data1","data2","MIDI_CHANNEL_VOICE_MESSAGES","noteoff","noteon","Note","rawRelease","rawAttack","keyaftertouch","rawValue","controlchange","controller","getCcNameByNumber","channelmode","getChannelModeByNumber","_parseChannelModeMessage","programchange","channelaftertouch","pitchbend","validation","cm","MIDI_CHANNEL_MODE_MESSAGES","RangeError","cc","MIDI_CONTROL_CHANGE_MESSAGES","Input","midiInput","_midiInput","channels","onstatechange","_onStateChange","bind","onmidimessage","_onMidiMessage","ch","close","port","connection","manufacturer","warn","channel","timecode","songposition","songselect","song","tunerequest","clock","continue","activesensing","reset","open","listener","listeners","sanitizeChannels","on","every","nrpnEventsEnabled","OutputChannel","send","setKeyAftertouch","pressure","useRawValue","Number","isInteger","round","getValidNoteArray","convertToTimestamp","sendControlChange","_selectNonRegisteredParameter","parameter","_deselectRegisteredParameter","_deselectNonRegisteredParameter","_selectRegisteredParameter","_setCurrentParameter","decrementRegisteredParameter","MIDI_REGISTERED_PARAMETER","valid","getOwnPropertyNames","incrementRegisteredParameter","playNote","sendNoteOn","isFinite","trim","NaN","noteOffOptions","sendNoteOff","rawVelocity","nVelocity","o","stopNote","sendChannelMode","setOmniMode","setChannelAftertouch","setMasterTuning","coarse","fine","msb","lsb","setRegisteredParameter","setModulationRange","semitones","cents","setNonRegisteredParameter","nrpn","setPitchBend","nLevel","setPitchBendRange","setProgram","program","rpn","setTuningBank","setTuningProgram","setLocalControl","turnNotesOff","turnSoundOff","resetAllControllers","setPolyphonicMode","mode","Output","midiOutput","_midiOutput","sendSysex","sysexend","sendTimecodeQuarterFrame","setSongPosition","sendSongPosition","setSong","sendSongSelect","sendTuneRequest","sendClock","sendStart","sendContinue","sendStop","sendActiveSensing","sendReset","sendTuningRequest","legacy","sendKeyAftertouch","sendChannelAftertouch","sendPitchBend","bend","sendProgramChange","Infinity","NOTES","_number","getOctave","guessNoteNumber","_duration","_rawAttack","_rawRelease","interface","_inputs","_outputs","_stateChangeQueue","_octaveOffset","isNode","global","performance","enabled","supported","intervalID","setInterval","requestMIDIAccess","software","_onInterfaceStateChange","_updateInputsAndOutputs","inputs","_destroyInputsAndOutputs","getInputById","getInputByName","getOutputByName","getOutputById","getNoteNumberByName","semitone","C","D","E","F","G","A","B","toUpperCase","octaveOffset","noteNameToNumber","toMIDIChannels","notes","getNoteObject","parsed","promises","_updateInputs","_updateOutputs","updated","values","next","done","splice","nInput","j","nOutput","prototype","call","process","sysexEnabled","MIDI_CHANNEL_MESSAGES","allsoundoff","resetallcontrollers","localcontrol","allnotesoff","omnimodeoff","omnimodeon","monomodeon","polymodeon","bankselectcoarse","modulationwheelcoarse","breathcontrollercoarse","footcontrollercoarse","portamentotimecoarse","dataentrycoarse","volumecoarse","balancecoarse","pancoarse","expressioncoarse","effectcontrol1coarse","effectcontrol2coarse","generalpurposeslider1","generalpurposeslider2","generalpurposeslider3","generalpurposeslider4","bankselectfine","modulationwheelfine","breathcontrollerfine","footcontrollerfine","portamentotimefine","dataentryfine","volumefine","balancefine","panfine","expressionfine","effectcontrol1fine","effectcontrol2fine","holdpedal","portamento","sustenutopedal","softpedal","legatopedal","hold2pedal","soundvariation","resonance","soundreleasetime","soundattacktime","brightness","soundcontrol6","soundcontrol7","soundcontrol8","soundcontrol9","soundcontrol10","generalpurposebutton1","generalpurposebutton2","generalpurposebutton3","generalpurposebutton4","reverblevel","tremololevel","choruslevel","celestelevel","phaserlevel","databuttonincrement","databuttondecrement","nonregisteredparametercoarse","nonregisteredparameterfine","registeredparametercoarse","registeredparameterfine","MIDI_INTERFACE_EVENTS","MIDI_NRPN_MESSAGES","entrymsb","entrylsb","increment","decrement","paramlsb","parammsb","nullactiveparameter","pitchbendrange","channelfinetuning","channelcoarsetuning","tuningprogram","tuningbank","modulationrange","azimuthangle","elevationangle","distanceratio","maximumdistance","maximumdistancegain","referencedistanceratio","panspreadangle","rollangle","tuningrequest","midimessage","unknownsystemmessage","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","browser","env","argv","version","versions","off","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","factory","define","amd","JZZ","MIDI","k","m","_scope","_time","getTime","_startTime","_now","_schedule","f","_R","_orig","_ready","_queue","_log","_then","good","bad","_bad","Function","_err","_wait","obj","delay","_crash","_resume","_kick","_break","_rechain","self","arg","ret","_image","_push","_and","q","_or","_close","_tryAny","arr","func","_slip","_repair","_pop","_J","_clone","_exec","_pause","_thenable","and","or","_info","info","engine","ver","_jzz","_outs","_ins","_outsW","_insW","_postRefresh","_engine","_type","_sysex","_allOuts","_allIns","_virtual","_watcher","_handles","diff","x0","y0","x1","y1","_changed","ax","ay","rx","ry","h","added","removed","_diff","_inMap","_closeAll","_outMap","_fireW","_refresh","_filterList","before","etc","RegExp","_notFound","msg","_openMidiOut","pack","_openOut","_openMidiIn","_openIn","_onChange","watcher","_connectW","_M","_receive","_emit","_connect","_disconnect","_mpe","MPE","_validateChannel","c","_C","chan","_port","_chan","_E","_master","_band","_W","_watch","_disconnectW","_unwatch","refresh","openMidiOut","_openMidiOutNR","openMidiIn","_openMidiInNR","onChange","_filter","out","outs","v","noteOn","noteOff","_stamp","_stamped","connected","mpe","validate","_navigator","_requestMIDIAccess","_tryNODE","_main","_pool","_newPlugin","_initEngineJP","_tryJazzPlugin","div","classid","isJazz","plg","_initJazzPlugin","_tryWebMIDI","_initWebMIDI","_tryWebMIDIsysex","_tryCRX","inst","eventHandle","removeEventListener","clients","_inArr","_outArr","refreshClients","_msg","plugin","dispatchEvent","CustomEvent","ready","client","impl","_start","_closeOut","_impl","_closeIn","ins","_initCRX","Event","_zeroBreak","_filterEngines","opt","web","none","dup","head","tail","_filterEngineNames","degrade","_initNONE","MidiOutInfo","MidiInInfo","MidiOutRaw","MidiOutOpen","MidiOutClose","handle","onmidi","MidiInOpen","MidiInClose","access","_access","found","dev","evt","_initAudioContext","_options","_initJZZ","SMPTE","_fixDropFrame","second","frame","_825","_mtc","backwards","quarter","decrFrame","incrFrame","_hrtype","_dec","_smptetxt","_from","noteValue","programValue","_throw","Widget","addMidiIn","widget","lib","registerMidiIn","addMidiOut","registerMidiOut","setType","getType","setHour","getHour","setMinute","getMinute","setSecond","getSecond","setFrame","getFrame","setQuarter","getQuarter","isFullFrame","incrQF","decrQF","read","_","_b","_f","_a","_noteNum","freq","_7b","f0","log2","to14b","_noteMap","d","g","_ch","_8b","_lsb","_msb","_helperCH","aftertouch","control","pitchBend","pitchBendF","bankMSB","bankLSB","modMSB","modLSB","breathMSB","breathLSB","footMSB","footLSB","portamentoMSB","portamentoLSB","dataMSB","dataLSB","volumeMSB","volumeLSB","balanceMSB","balanceLSB","panMSB","panLSB","expressionMSB","expressionLSB","damper","sostenuto","soft","dataIncr","dataDecr","nrpnLSB","nrpnMSB","rpnLSB","rpnMSB","allSoundOff","allNotesOff","_helperNC","mtc","songPosition","songSelect","tune","sxIdRequest","sxFullFrame","sxMasterVolume","sxMasterFineTuning","sxMasterCoarseTuning","_helperG","modF","mod","breathF","breath","footF","foot","portamentoTimeF","portamentoTime","dataF","volumeF","balanceF","balance","panF","pan","expressionF","expression","rpnPitchBendRange","rpnFineTuning","rpnCoarseTuning","rpnTuning","rpnTuningA","_helperGNC","sxMasterTuning","sxMasterTuningA","_smf","ff","dd","charCodeAt","_8bs","_helperSMF","smf","_2s","smfSeqNumber","fromCharCode","_smftxt","smfText","toUTF8","smfCopyright","smfSeqName","smfInstrName","smfLyric","smfMarker","smfCuePoint","smfProgName","smfDevName","smfChannelPrefix","smfMidiPort","smfEndOfTrack","smfTempo","smfBPM","bpm","smfSMPTE","smfTimeSignature","nn","bb","smfKeySignature","sf","CB","GB","DB","AB","EB","BB","H","F#","C#","G#","D#","A#","mi","","MAJ","MAJOR","DUR","M","MIN","MINOR","MOLL","smfSequencer","_copyPortHelper","_copyPortHelperG","_copyChannelHelper","_copyChannelHelperG","_copyHelperNC","_copyHelperSMF","_copyHelperG","_copyHelperCH","_copyMidiHelpers","_ac","_channelMap","_s2a","_a2s","__hex","_hex","_smfhex","_toLine","fromUTF8","createGainNode","_activateAudioContext","setTargetAtTime","getChannel","setChannel","getNote","setNote","getVelocity","setVelocity","getSysExChannel","setSysExChannel","getData","setData","getText","getTempo","ms","getTimeSignature","getKeySignature","isNoteOn","isNoteOff","isSysEx","isFullSysEx","isSMF","isEOT","isTempo","isTimeSignature","isKeySignature","ss","_s2n","ks","241","242","243","244","245","246","248","249","250","251","252","253","254","255","8","10","12","13","14","0","1","2","4","5","6","7","11","16","17","18","19","32","33","34","36","37","38","39","40","42","43","44","45","48","49","50","51","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","88","91","92","93","94","95","96","97","98","99","100","101","120","121","122","123","124","125","126","127","_unstamp","band","master","last","schedule","copyMidiHelpers","getAudioContext","_b64","fromBase64","chr1","chr2","chr3","enc2","enc3","enc4","charAt","toBase64","h1","h2","h3","h4","bits","ac","enc","_wma","_outputMap","_inputMap","DOMException","code","MIDIConnectionEvent","bubbles","cancelBubble","cancelable","currentTarget","defaultPrevented","eventPhase","returnValue","srcElement","MIDIMessageEvent","receivedTime","_statechange","MIDIInput","_open","_ochng","_onmsg","man","defineProperty","get","enumerable","proxy","freeze","_split","_datalen","_InputProxy","executor","reconnect","_epr","MIDIOutput","_validate","_OutputProxy","_Maplike","Map","MIDIInputMap","MIDIOutputMap","_wm_watch","MIDIAccess","_onstatechange","wma","node","platform","arch","package","__dirname","devices","device","kind","mediaDevices","enumerateDevices","onloadedmetadata","play","videoWidth","videoHeight","videoConstraints","exact","facingMode","constraints","getUserMedia","srcObject","_palette","setSize","naturalWidth","naturalHeight","onloaded","loadImage","canvasContext","getContext","w","translate","scale","drawImage","restore","clearRect","radius","colour","lines","fillStyle","strokeStyle","moveTo","beginPath","arc","lineTo","fill","stroke","drawEye","eye","iris","inner","up","outer","down","strokeWidth","arcTo","drawNode","pointA","pointB","showText","PALETTE","font","textAlign","fillText","drawMouth","annotations","mouthWidth","mouthOpen","lips","lipUpperMiddle","lipLowerMiddle","mouthGradient","createLinearGradient","addColorStop","lip","drawText","size","align","strokeText","paragraph","lineHeight","textY","boundingBox","extra","bottomRight","topLeft","strokeRect","modifier","easeInQuad","nodeCount","cycleCounter","colourCycle","scaledMesh","depth","alpha","modifiedHue","DEFAULT_COLOURS","singing","extras","lineWidth","sliceWidth","toDataURL","barWidth","barHeight","fillRect","gaps","sequence","pattern","previous","newIndex","position","current","kickSequences","snareSequences","hatSequences","kickSequence","snareSequence","hatSequence","QUICK_START","INSTRUCTIONS","delayTime","delayLength","mouseHoldDuration","feedback","mouthCutOff","mouthSilence","volumeRate","precision","ease","linear","destinationNode","instrumentLoading","tracks","midiActive","midiChannel","saturation","isMouthOpen","mouseDownAt","lastNoteName","mouthScale","rescale","stereoNode","createStereoPanner","waitPatiently","mouseDownFor","isMouseDown","showForm","isMouseOver","isMouseHeld","controlsID","instrumentTitle","instrumentIndex","hasMIDI","drawPoints","drawFace","boxWidth","abs","boxHeight","silhouette","percentageRemaining","drawInstrument","drawPart","drawParagraph","MUSICAL_NOTES","paragraphs","toFixed","happiness","mouthRatio","lookingRight","lipPercentage","amp","newOctave","getNoteName","playTrack","midiOptions","onInstrumentInput","hideForm","setupInstrumentForm","_analytics","_interopRequireDefault","_googleAnalytics","analytics","default","app","plugins","trackingId","page","_interopDefault","ex","analytics__default","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","objectSpread2","source","getOwnPropertyDescriptors","defineProperties","analyticsLib","opts","defaultSettings","EVENTS","CONSTANTS","init","Analytics","analyticsUtils","arrayWithoutHoles","arr2","iterableToArray","iter","iterator","nonIterableSpread","toConsumableArray","createCommonjsModule","fn","_typeof_1","_typeof2","_typeof","FUNC","UNDEF","ACTION_TEST","$$observable","observable","reducer","preloadedState","enhancer","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","isSubscribed","dispatch","isObject","base","replaceReducer","nextReducer","outerSubscribe","observer","observeState","unsubscribe","getUndefinedStateErrorMessage","actionType","combineReducers","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","initialState","REDUCER","assertReducerShape","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","compose","_len","funcs","reduce","applyMiddleware","middlewares","chain","_dispatch","middlewareAPI","middleware","coreEvents","nonEvents","acc","curr","registerPluginType","pluginReadyType","isReservedAction","ANON_ID","USER_ID","USER_TRAITS","constants","utmRegex","propRegex","traitRegex","initializeMiddleware","instance","_instance$storage","bootstrap","params","user","anonymousId","paramsArray","an_uid","an_event","groupedParams","cleanName","keyName","campaign","props","traits","raw","userId","identify","ID","ANONID","userReducer","setItemEnd","globalContext","tempKey","getPersistedUserData","an_aid","uuid","getUserPropFunc","payload","currentId","persistedInfo","identifyMiddleware","isFunction","currentTraits","userIdChanged","old","new","regenerator","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","reverse","pop","skipTempReset","prev","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","asyncGeneratorStep","gen","_next","asyncToGenerator","runCallback","waitForReady","predicate","processQueue","getPlugins","pluginMethods","_store$getState","offline","actions","pipeline","item","loaded","processIndex","requeue","requeueIndex","processAction","currentPlugin","currentMethod","enrichedPayload","fixEmptyValues","enrich","config","pluginEvent","called","reQueueActions","heartBeat","objTwo","arrayWithHoles","iterableToArrayLimit","_arr","_n","_d","_e","_s","nonIterableRest","slicedToArray","fitlerDisabledPlugins","allPlugins","fromCallOptions","isBoolean","endsWithStartRegex","bootstrapRegex","readyRegex","runPlugins","_x","_x2","_x3","_x4","_x5","_ref","_callee","eventsInfo","pluginObject","originalType","updatedType","activePlugins","allActivePluginKeys","allMatches","actionBefore","actionDuring","afterName","actionAfter","cb","_context","initializeStart","fromEnable","initialized","getAllMatchingCalls","processEvent","namespaced","beforeNS","shouldAbortAll","during","duringNS","afterNS","getCallback","meta","thing","_x6","_processEvent","_callee5","_ref2","EVENTS$$1","isStartEvent","abortable","makeArgs","queueData","payloads","resolvedAction","endAction","_context5","pluginName","argumentFactory","methodName","addToQueue","_ref6","_callee3","scoped","curScope","scopedPayload","_context3","_ref7","_callee2","curScopeData","genAbort","_context2","currentAct","pname","otherPlug","reason","callsite","abort","caller","validateMethod","getConfig","_x10","_x11","_x12","_x7","_x8","_x9","_ref9","_callee4","promise","lastLoop","currentActionValue","payloadValue","funcArgs","merged","nameSpaceEvent","updatedPayload","_context4","shouldAbort","abortDispatch","_x13","_x14","_x15","originalAction","_ref3","abortEvent","pluginState","pluginData","getPluginFunctions","getEventNames","eventType","namespace","formatMethod","postFix","core","word","_nameSpacedEvents$map","_nameSpacedEvents$map2","beforeFuncs","duringFuncs","afterFuncs","_ref4","_ref5","pluginsCount","isString","abortablePlugins","otherPlugin","abortF","pluginsToAbort","abortFunction","notAbortableError","formatPayload","actionName","getNameSpacedAction","sub","subText","pluginMiddleware","systemEvents","isReady","updatedAction","pluginsArray","allRegisteredPlugins","completed","failed","disabled","waitForPluginsToLoad","enablePlugin","ts","disablePlugin","initializeEnd","events","calls","storageMiddleware","osName","referrer","locale","timeZone","classCallCheck","Constructor","DynamicMiddleware","_this","findIndex","act","createReducer","newState","getNameFromEventType","isEnabled","Boolean","initialize","_name","_plugin","togglePluginStatus","baseName","pluginKey","inBrowser","os","appVersion","getBrowserOS","getBrowserLocale","getTimeZone","sessionId","onLine","library","timezone","online","excludeItems","makeContext","serialize","hashRegex","urlPath","exec","currentUrl","canonical","tag","tags","getElementsByTagName","canonicalUrl","getPageData","pageData","_document","_window","innerWidth","innerHeight","hash","initialState$1","properties","viewData","initialState$2","trackReducer","trackEvent","initialState$3","queueReducer","actionChain","listen","toAdd","watch","getCallbackFromArgs","Debug","createStore$$1","origDispatch","composeWithDebug","ensureArray","strOrArr","_setItem","setItemStart","_removeItem","removeItemStart","customReducers","parsedOptions","NAMESPACE","ERROR_URL","definedEvents","enabledFromMerge","enabledFromPluginConfig","pluginEnabled","methods","appendArguments","allEvents","allEventsUnique","Set","getUserProp","customPlugins","pluginEvents","uniqueEvents","allSystemEvents","sort","allPluginEvents","addMiddleware","removeMiddleware","dynamicMiddlewares","nonAbortable","resolvePromise","resolver","paramsParse","initialUser","disable","resolvedId","identifyStart","previousId","eventName","trackStart","pageStart","dotProp","resetStart","startRegex","beforeHandler","afterHandler","handler","actionData","_private","dispatchData","setAnonymousId","coreReducers","composeEnhancers","composeWithGlobalDebug","devTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","initialConfig","intialPluginState","pluginKeys","enabledPlugins","disabledPlugins","originalArgs","argsToPass","registerPlugins","dlv","storageUtils","storageUtils__default","decode","decodeURIComponent","isExternalReferrer","ref","hostname","paramsClean","param","regex","cleanSearch","temp","re","prop","getParamsAsObject","getSearchString","keyPath","lastKeyIndex","getDomainHost","getDomainBase","trimTld","baseDomain","searchEngines","daum.net","eniro.se","naver.com","yahoo.com","msn.com","aol.com","ask.com","baidu.com","yandex.com","rambler.ru","google","bing.com","getCookie","setCookie","removeCookie","proto","isUndefined","decodeUri","language","languages","userLanguage","Intl","DateTimeFormat","resolvedOptions","isScriptLoaded","script","scripts","noOp","paramsGet","paramsRemove","replaceState","cleanUrl","parseReferrer","refData","medium","domainInfo","referringDomain","searchEngine","queryParam","termRegex","term","parseDomain","paramKeys","gaParams","gclid","u","rb","throttle","later","cookieUtils","hasLocalStorage","LOCAL_STORAGE","COOKIE","GLOBAL","hasStorage","hasCookies","hasCookieSupport","storageType","getStorageType","getAll","useLocal","useCookie","_value","cookie","saveValue","_oldValue","oldValue","_oldValue2","hasLocalStorageSupport","ttl","domain","secure","encodeURIComponent","toUTCString","valueSet","_defineProperty","_objectSpread","defaultConfig","anonymizeIp","customDimensions","resetCustomDimensionsOnPage","setCustomDimensionsToPage","loadedInstances","googleAnalytics$1","pluginConfig","pageCalledOnce","_getInstanceDetails","getInstanceDetails","instanceName","instancePrefix","pluginApi","scriptSrc","customScriptSrc","gaNotLoaded","insertBefore","gaConfig","cookieDomain","siteSpeedSampleRate","allowLinker","cookieConfig","ga","ga_debug","tasks","taskName","task","formatObjectIntoDimensions$1","resetDimensions","pathname","pageView","finalPayload","addCampaignData","setCustomDimensions","trackEvent$1","hitType","nonInteraction","identifyVisitor$1","gaplugins","scriptLoaded","eventData","_getInstanceDetails2","eventAction","eventLabel","eventCategory","eventValue","format","campaignData","content","keyword","campaignName","campaignSource","campaignMedium","campaignContent","campaignKeyword","dimensionKey","get$1","def","undef","conf","_getInstanceDetails3","custom","parcelRequire","cacheLoader","bundle","charset","onload","cachedBundles","loader"],"version":3,"file":"source.b227d25d.js.map"}