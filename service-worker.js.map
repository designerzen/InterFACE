{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-f4446129c2b491f2.js","source/service-worker.js","source/version.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/workbox-routing/index.mjs","node_modules/workbox-routing/index.js","node_modules/workbox-routing/NavigationRoute.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/Router.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/setCatchHandler.js","node_modules/workbox-routing/setDefaultHandler.js","node_modules/workbox-strategies/index.mjs","node_modules/workbox-strategies/index.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/CacheOnly.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/NetworkOnly.js","node_modules/workbox-strategies/StaleWhileRevalidate.js","node_modules/workbox-core/index.mjs","node_modules/workbox-core/index.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/workbox-core/_private.js","node_modules/workbox-core/_private/canConstructReadableStream.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/_private/resultingClientExists.js","node_modules/workbox-core/_private/waitUntil.js","node_modules/workbox-core/cacheNames.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/setCacheNameDetails.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/types.js","node_modules/workbox-recipes/index.mjs","node_modules/workbox-recipes/index.js","node_modules/workbox-recipes/googleFontsCache.js","node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","node_modules/workbox-cacheable-response/CacheableResponse.js","node_modules/workbox-cacheable-response/_version.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/idb/build/index.js","node_modules/idb/build/wrap-idb-value.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-recipes/_version.js","node_modules/workbox-recipes/imageCache.js","node_modules/workbox-recipes/warmStrategyCache.js","node_modules/workbox-recipes/staticResourceCache.js","node_modules/workbox-recipes/pageCache.js","node_modules/workbox-recipes/offlineFallback.js","node_modules/workbox-precaching/matchPrecache.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheStrategy.js","node_modules/workbox-google-analytics/index.mjs","node_modules/workbox-google-analytics/index.js","node_modules/workbox-google-analytics/initialize.js","node_modules/workbox-background-sync/BackgroundSyncPlugin.js","node_modules/workbox-background-sync/Queue.js","node_modules/workbox-background-sync/lib/QueueStore.js","node_modules/workbox-background-sync/lib/QueueDb.js","node_modules/workbox-background-sync/_version.js","node_modules/workbox-background-sync/lib/StorableRequest.js","node_modules/workbox-google-analytics/utils/constants.js","node_modules/workbox-google-analytics/_version.js","node_modules/workbox-cacheable-response/index.mjs","node_modules/workbox-cacheable-response/index.js","node_modules/workbox-expiration/index.mjs","node_modules/workbox-expiration/index.js","node_modules/workbox-range-requests/index.mjs","node_modules/workbox-range-requests/index.js","node_modules/workbox-range-requests/createPartialResponse.js","node_modules/workbox-range-requests/utils/calculateEffectiveBoundaries.js","node_modules/workbox-range-requests/_version.js","node_modules/workbox-range-requests/utils/parseRangeHeader.js","node_modules/workbox-range-requests/RangeRequestsPlugin.js","node_modules/workbox-precaching/index.mjs","node_modules/workbox-precaching/index.js","node_modules/workbox-precaching/addPlugins.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/PrecacheRoute.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/createHandlerBoundToURL.js","node_modules/workbox-precaching/getCacheKeyForURL.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/PrecacheFallbackPlugin.js","node_modules/workbox-precaching/_types.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"767298212a9fba37\";module.bundle.HMR_BUNDLE_ID = \"b7fd83933b57f760\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { VERSION } from './version'\r\n\r\n// is there a way to save and cache this locally?\r\n// When offline it freaks out and tries to connec tot the internet?\r\n// importScripts(`https://storage.googleapis.com/workbox-cdn/releases/${WORKBOX_VERSION}/workbox-sw.js`);\r\nimport { registerRoute } from 'workbox-routing'\r\nimport {\r\n  NetworkFirst,\r\n  StaleWhileRevalidate,\r\n  CacheFirst,\r\n} from 'workbox-strategies'\r\n\r\nimport {\r\n\tsetConfig,\r\n\tsetCacheNameDetails\r\n} from 'workbox-core'\r\n\r\nimport{\r\n  pageCache,\r\n  imageCache,\r\n  staticResourceCache,\r\n//   googleFontsCache,\r\n  offlineFallback\r\n} from 'workbox-recipes'\r\n\r\nimport * as googleAnalytics from 'workbox-google-analytics'\r\n// Used for filtering matches based on status code, header, or both\r\nimport { CacheableResponse, CacheableResponsePlugin } from 'workbox-cacheable-response'\r\n// Used to limit entries in cache, remove entries after a certain period of time\r\nimport { ExpirationPlugin } from 'workbox-expiration'\r\nimport { RangeRequestsPlugin } from 'workbox-range-requests'\r\nimport { precacheAndRoute } from 'workbox-precaching'\r\n\r\n// Not compiled so best add the ; to the es5\r\nconst ONE_DAY = 60 * 60 * 24\r\nconst REVISION = VERSION\r\nconst BUILD_MMR = VERSION\r\nconst WORKBOX_DEBUG_LOGGING = process.env.NODE_ENV === \"development\"\r\n// Workbox version - update manually when there are new releases.\r\nconst WORKBOX_VERSION = '6.1.5'\r\n// Cache naming and versioning.\r\nconst APP_CACHE_PREFIX = 'mct'\r\nconst APP_CACHE_SUFFIX = `v${BUILD_MMR}`\r\n\r\n// checks for localhost anyways\r\n// setConfig({debug: WORKBOX_DEBUG_LOGGING})\r\nself.__WB_DISABLE_DEV_LOGS = !WORKBOX_DEBUG_LOGGING\r\n\r\n// https://love2dev.com/blog/how-to-uninstall-a-service-worker/\r\nconst uninstall = () => {\r\n\tnavigator.serviceWorker.getRegistrations()\r\n\t\t.then( registrations => { \r\n\t\t\tfor(let registration of registrations) \r\n\t\t\t{ \r\n\t\t\t\tregistration.unregister()\r\n\t\t\t\t.then(()=>self.clients.matchAll())\r\n\t\t\t\t.then(clients => { \r\n\t\t\t\t\tclients.forEach(client => { \r\n\t\t\t\t\t\tif (client.url && \"navigate\" in client){ \r\n\t\t\t\t\t\t\tclient.navigate(client.url)\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\nsetCacheNameDetails({\r\n    prefix: APP_CACHE_PREFIX,\r\n    suffix: APP_CACHE_SUFFIX,\r\n    precache: 'installtime',\r\n    runtime: 'runtime',\r\n})\r\n\r\n// console.log(`>>> Workbox`,REVISION, {WORKBOX_DEBUG_LOGGING});\r\n\r\nself.addEventListener('message', (event) => {\r\n  if (event.data && event.data.message) {\r\n     console.log(`>>> Message received from client: `, event.data)\r\n      if (event.data.message === 'SKIP_WAITING') {\r\n          self.skipWaiting()\r\n      } else if (event.data.message === 'CLIENTS_CLAIM') {\r\n          self.clients.claim()\r\n      } else {\r\n          debug.warning('>>>> No idea what to do with that message!')\r\n      }\r\n  } else {\r\n      throw new Error(`Message event handler: event.data=[${event.data}], event.data.message=[${event.data.message}]`)\r\n  }\r\n})\r\n\r\n// Uninstall if b0rked\r\n// self.addEventListener(\"activate\", event => {\r\n// \tuninstall()\r\n// })\r\n\r\n\r\n// Load caching routines\r\n\r\n// CacheFirst - an implementation of a cache-first request strategy.\r\n// A cache first strategy is useful for assets that have been revisioned, such as URLs like /styles/example.a8f5f1.css, since they can be cached for long periods of time.\r\n// If the network request fails, and there is no cache match, this will throw a WorkboxError exception.\r\n\r\n// Include offline.html in the manifest__WB_MANIFEST\r\n// precacheAndRoute(self.origin);\r\nprecacheAndRoute([ {url: 'index.html', revision:REVISION }])\r\n\r\npageCache()\r\n\r\nstaticResourceCache()\r\n\r\n// so this aint working...\r\nimageCache()\r\n\r\n// allow for this to work offline too\r\nofflineFallback()\r\n\r\n// intercept offline analytics and cache for later salvaging\r\n// googleAnalytics.initialize()\r\n\r\n// Add Music files!\r\nconst CACHE_MEDIA = 'static-media'\r\nconst catchMedia = (match) =>{\r\n  const { request } = match\r\n  const isMedia = \r\n  request.destination === 'mp3' || \r\n  request.destination === 'wav' || \r\n  request.destination === 'media' ||\r\n  request.destination === 'audio' || \r\n  request.url.indexOf(\".mp3\") === request.url.length - 4\r\n  request.url.indexOf(\".wav\") === request.url.length - 4\r\n  \r\n  // console.error(isMedia, \"matchCallback\", {match, request, pos:request.url.indexOf(\".mp3\") })\r\n  \r\n  return isMedia\r\n}\r\n\r\nregisterRoute(\r\n  catchMedia,\r\n  new CacheFirst({\r\n    cacheName: CACHE_MEDIA,\r\n    plugins: [\r\n      new CacheableResponsePlugin({\r\n        statuses: [0, 200],\r\n      }),\r\n      new RangeRequestsPlugin()\r\n    ],\r\n  }),\r\n)\r\n\r\n// workbox.loadModule('workbox-range-requests');\r\n// RangeRequestsPlugin\r\n// registerRoute(\r\n//   catchMedia,\r\n//   new StaleWhileRevalidate({\r\n//     cacheName: CACHE_MEDIA,\r\n//     plugins: [\r\n//       new CacheableResponsePlugin({\r\n//         statuses: [0, 200],\r\n//       }),\r\n//     ],\r\n//   }),\r\n// );\r\n\r\n\r\n// TF json\r\n// https://storage.googleapis.com/tfhub-tfjs-modules/mediapipe/tfjs-model/facemesh/1/default/1/model.json\r\n\r\n// Now the TF models...\r\n// https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2/model.json?tfjs-format=file\r\n// https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1/model.json?tfjs-format=file\r\n\r\n\r\n// Cache the cloud hosted TF models as they are heavy and not local!\r\nregisterRoute(\r\n  /^https:\\/\\/storage\\.googleapis\\.com\\/tfhub-tfjs-modules/,\r\n  new NetworkFirst({\r\n    cacheName: 'tf-models-googleapi',\r\n    plugins: [\r\n      new CacheableResponsePlugin({\r\n        statuses: [0, 200],\r\n      }),\r\n      new ExpirationPlugin({\r\n        // one month should be good\r\n        maxAgeSeconds: ONE_DAY * 30,\r\n      }),\r\n    ],\r\n  }),\r\n)\r\n\r\n// https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2/model.json?tfjs-format=file\r\nregisterRoute(\r\n  /^https:\\/\\/tfhub\\.dev\\/mediapipe\\/tfjs-model/,\r\n  new NetworkFirst({\r\n    cacheName: 'tf-models-tfhub-mediapipe',\r\n    plugins: [\r\n      new CacheableResponsePlugin({\r\n        statuses: [0, 200],\r\n      }),\r\n      new ExpirationPlugin({\r\n        // one month should be good\r\n        maxAgeSeconds: ONE_DAY * 30,\r\n      }),\r\n    ],\r\n  }),\r\n)\r\n\r\n// // https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1/model.json?tfjs-format=file\r\n// registerRoute(\r\n//   /^https:\\/\\/tfhub\\.dev\\/tensorflow\\/tfjs-model/,\r\n//   new NetworkFirst({\r\n//     cacheName: 'tf-models-tfhub-tensorflow',\r\n//     plugins: [\r\n//       new CacheableResponsePlugin({\r\n//         statuses: [0, 200],\r\n//       }),\r\n//       new ExpirationPlugin({\r\n//         // one month should be good\r\n//         maxAgeSeconds: ONE_DAY * 30,\r\n//       }),\r\n//     ],\r\n//   }),\r\n// )","export const VERSION=\"0.17.0\";\rexport const DATE=1690388694005;","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { NavigationRoute, } from './NavigationRoute.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { registerRoute } from './registerRoute.js';\nimport { Route } from './Route.js';\nimport { Router } from './Router.js';\nimport { setCatchHandler } from './setCatchHandler.js';\nimport { setDefaultHandler } from './setDefaultHandler.js';\nimport './_version.js';\n/**\n * @module workbox-routing\n */\nexport { NavigationRoute, RegExpRoute, registerRoute, Route, Router, setCatchHandler, setDefaultHandler, };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * {@link workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * *Note*: These RegExps may be evaluated against every destination URL during\n     * a navigation. Avoid using\n     * [complex RegExps](https://github.com/GoogleChrome/workbox/issues/3077),\n     * or else your users may see delays when navigating your site.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp.toString()}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:7.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in globalThis)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:7.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\nexport { setCatchHandler };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Define a default `handler` that's called when no routes explicitly\n * match the incoming request.\n *\n * Without a default handler, unmatched requests will go against the\n * network as if there were no service worker present.\n *\n * @param {workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof workbox-routing\n */\nfunction setDefaultHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setDefaultHandler(handler);\n}\nexport { setDefaultHandler };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheFirst } from './CacheFirst.js';\nimport { CacheOnly } from './CacheOnly.js';\nimport { NetworkFirst } from './NetworkFirst.js';\nimport { NetworkOnly } from './NetworkOnly.js';\nimport { StaleWhileRevalidate } from './StaleWhileRevalidate.js';\nimport { Strategy } from './Strategy.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * There are common caching strategies that most service workers will need\n * and use. This module provides simple implementations of these strategies.\n *\n * @module workbox-strategies\n */\nexport { CacheFirst, CacheOnly, NetworkFirst, NetworkOnly, StaleWhileRevalidate, Strategy, StrategyHandler, };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-first-falling-back-to-network)\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error = undefined;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:7.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheOnly extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await handler.cacheMatch(request);\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this.cacheName}' ` + `cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this.cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-first-falling-back-to-cache)\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({\n            timeoutId,\n            request,\n            logs,\n            handler,\n        });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return ((await handler.waitUntil(Promise.race(promises))) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                (await networkPromise));\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler, }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler, }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            if (fetchError instanceof Error) {\n                error = fetchError;\n            }\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` + ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [\n                handler.fetch(request),\n            ];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#stale-while-revalidate)\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler.fetchAndCachePut(request).catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        void handler.waitUntil(fetchAndCachePromise);\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = (await fetchAndCachePromise);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerQuotaErrorCallback } from './registerQuotaErrorCallback.js';\nimport * as _private from './_private.js';\nimport { cacheNames } from './cacheNames.js';\nimport { copyResponse } from './copyResponse.js';\nimport { clientsClaim } from './clientsClaim.js';\nimport { setCacheNameDetails } from './setCacheNameDetails.js';\nimport { skipWaiting } from './skipWaiting.js';\nimport './_version.js';\n/**\n * All of the Workbox service worker libraries use workbox-core for shared\n * code as well as setting default values that need to be shared (like cache\n * names).\n *\n * @module workbox-core\n */\nexport { _private, cacheNames, clientsClaim, copyResponse, registerQuotaErrorCallback, setCacheNameDetails, skipWaiting, };\nexport * from './types.js';\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n// We either expose defaults or we expose every named export.\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { cacheMatchIgnoreParams } from './_private/cacheMatchIgnoreParams.js';\nimport { canConstructReadableStream } from './_private/canConstructReadableStream.js';\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { dontWaitFor } from './_private/dontWaitFor.js';\nimport { Deferred } from './_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from './_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './_private/getFriendlyURL.js';\nimport { logger } from './_private/logger.js';\nimport { resultingClientExists } from './_private/resultingClientExists.js';\nimport { timeout } from './_private/timeout.js';\nimport { waitUntil } from './_private/waitUntil.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\nexport { assert, cacheMatchIgnoreParams, cacheNames, canConstructReadableStream, canConstructResponseFromBodyStream, dontWaitFor, Deferred, executeQuotaErrorCallbacks, getFriendlyURL, logger, resultingClientExists, timeout, waitUntil, WorkboxError, };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * object.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `ReadableStream`, `false` otherwise.\n *\n * @private\n */\nfunction canConstructReadableStream() {\n    if (supportStatus === undefined) {\n        // See https://github.com/GoogleChrome/workbox/issues/1473\n        try {\n            new ReadableStream({ start() { } });\n            supportStatus = true;\n        }\n        catch (error) {\n            supportStatus = false;\n        }\n    }\n    return supportStatus;\n}\nexport { canConstructReadableStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { timeout } from './timeout.js';\nimport '../_version.js';\nconst MAX_RETRY_TIME = 2000;\n/**\n * Returns a promise that resolves to a window client matching the passed\n * `resultingClientId`. For browsers that don't support `resultingClientId`\n * or if waiting for the resulting client to apper takes too long, resolve to\n * `undefined`.\n *\n * @param {string} [resultingClientId]\n * @return {Promise<Client|undefined>}\n * @private\n */\nexport async function resultingClientExists(resultingClientId) {\n    if (!resultingClientId) {\n        return;\n    }\n    let existingWindows = await self.clients.matchAll({ type: 'window' });\n    const existingWindowIds = new Set(existingWindows.map((w) => w.id));\n    let resultingWindow;\n    const startTime = performance.now();\n    // Only wait up to `MAX_RETRY_TIME` to find a matching client.\n    while (performance.now() - startTime < MAX_RETRY_TIME) {\n        existingWindows = await self.clients.matchAll({ type: 'window' });\n        resultingWindow = existingWindows.find((w) => {\n            if (resultingClientId) {\n                // If we have a `resultingClientId`, we can match on that.\n                return w.id === resultingClientId;\n            }\n            else {\n                // Otherwise match on finding a window not in `existingWindowIds`.\n                return !existingWindowIds.has(w.id);\n            }\n        });\n        if (resultingWindow) {\n            break;\n        }\n        // Sleep for 100ms and retry.\n        await timeout(100);\n    }\n    return resultingWindow;\n}\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames as _cacheNames } from './_private/cacheNames.js';\nimport './_version.js';\n/**\n * Get the current cache names and prefix/suffix used by Workbox.\n *\n * `cacheNames.precache` is used for precached assets,\n * `cacheNames.googleAnalytics` is used by `workbox-google-analytics` to\n * store `analytics.js`, and `cacheNames.runtime` is used for everything else.\n *\n * `cacheNames.prefix` can be used to retrieve just the current prefix value.\n * `cacheNames.suffix` can be used to retrieve just the current suffix value.\n *\n * @return {Object} An object with `precache`, `runtime`, `prefix`, and\n *     `googleAnalytics` properties.\n *\n * @memberof workbox-core\n */\nconst cacheNames = {\n    get googleAnalytics() {\n        return _cacheNames.getGoogleAnalyticsName();\n    },\n    get precache() {\n        return _cacheNames.getPrecacheName();\n    },\n    get prefix() {\n        return _cacheNames.getPrefix();\n    },\n    get runtime() {\n        return _cacheNames.getRuntimeName();\n    },\n    get suffix() {\n        return _cacheNames.getSuffix();\n    },\n};\nexport { cacheNames };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details &&\n            details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport './_version.js';\n/**\n * This method is deprecated, and will be removed in Workbox v7.\n *\n * Calling self.skipWaiting() is equivalent, and should be used instead.\n *\n * @memberof workbox-core\n */\nfunction skipWaiting() {\n    // Just call self.skipWaiting() directly.\n    // See https://github.com/GoogleChrome/workbox/issues/2525\n    if (process.env.NODE_ENV !== 'production') {\n        logger.warn(`skipWaiting() from workbox-core is no longer recommended ` +\n            `and will be removed in Workbox v7. Using self.skipWaiting() instead ` +\n            `is equivalent.`);\n    }\n    void self.skipWaiting();\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n","export * from './index.js';","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { googleFontsCache } from './googleFontsCache';\nimport { imageCache } from './imageCache';\nimport { staticResourceCache, } from './staticResourceCache';\nimport { pageCache } from './pageCache';\nimport { offlineFallback } from './offlineFallback';\nimport { warmStrategyCache } from './warmStrategyCache';\nimport './_version.js';\n/**\n * @module workbox-recipes\n */\nexport { googleFontsCache, imageCache, offlineFallback, pageCache, staticResourceCache, warmStrategyCache, };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [Google fonts]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#google_fonts} caching recipe\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cachePrefix] Cache prefix for caching stylesheets and webfonts. Defaults to google-fonts\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 1 year\n * @param {number} [options.maxEntries] Maximum number of fonts that will be cached. Defaults to 30\n */\nfunction googleFontsCache(options = {}) {\n    const sheetCacheName = `${options.cachePrefix || 'google-fonts'}-stylesheets`;\n    const fontCacheName = `${options.cachePrefix || 'google-fonts'}-webfonts`;\n    const maxAgeSeconds = options.maxAgeSeconds || 60 * 60 * 24 * 365;\n    const maxEntries = options.maxEntries || 30;\n    // Cache the Google Fonts stylesheets with a stale-while-revalidate strategy.\n    registerRoute(({ url }) => url.origin === 'https://fonts.googleapis.com', new StaleWhileRevalidate({\n        cacheName: sheetCacheName,\n    }));\n    // Cache the underlying font files with a cache-first strategy for 1 year.\n    registerRoute(({ url }) => url.origin === 'https://fonts.gstatic.com', new CacheFirst({\n        cacheName: fontCacheName,\n        plugins: [\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n            new ExpirationPlugin({\n                maxAgeSeconds,\n                maxEntries,\n            }),\n        ],\n    }));\n}\nexport { googleFontsCache };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse, } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` + JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` + JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ${response.status}`);\n                logger.log(`Response headers: ` + JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:7.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached response is used or updated, this plugin will look\n * at the associated cache and remove any old or extra responses.\n *\n * When using `maxAgeSeconds`, responses may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached response has been used. If the response has a \"Date\" header, then\n * a light weight expiration check is performed and the response will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse, }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request, }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - this._maxAgeSeconds * 1000;\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds\n            ? Date.now() - this._maxAgeSeconds * 1000\n            : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ? 'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - this._maxAgeSeconds * 1000;\n            return timestamp !== undefined ? timestamp < expireOlderThan : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db\n            .transaction(CACHE_OBJECT_STORE)\n            .store.index('timestamp')\n            .openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:7.0.0'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:recipes:7.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [image caching recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#caching_images}\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to images\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'image';\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 30 days\n * @param {number} [options.maxEntries] Maximum number of images that will be cached. Defaults to 60\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction imageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'image';\n    const cacheName = options.cacheName || 'images';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const maxAgeSeconds = options.maxAgeSeconds || 30 * 24 * 60 * 60;\n    const maxEntries = options.maxEntries || 60;\n    const plugins = options.plugins || [];\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    plugins.push(new ExpirationPlugin({\n        maxEntries,\n        maxAgeSeconds,\n    }));\n    const strategy = new CacheFirst({\n        cacheName,\n        plugins,\n    });\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { imageCache };\n","import './_version.js';\n/**\n * @memberof workbox-recipes\n \n * @param {Object} options\n * @param {string[]} options.urls Paths to warm the strategy's cache with\n * @param {Strategy} options.strategy Strategy to use\n */\nfunction warmStrategyCache(options) {\n    self.addEventListener('install', (event) => {\n        const done = options.urls.map((path) => options.strategy.handleAll({\n            event,\n            request: new Request(path),\n        })[1]);\n        event.waitUntil(Promise.all(done));\n    });\n}\nexport { warmStrategyCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [CSS and JavaScript files recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#cache_css_and_javascript_files}\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to static-resources\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction staticResourceCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'style' ||\n        request.destination === 'script' ||\n        request.destination === 'worker';\n    const cacheName = options.cacheName || 'static-resources';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const plugins = options.plugins || [];\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    const strategy = new StaleWhileRevalidate({\n        cacheName,\n        plugins,\n    });\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { staticResourceCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { NetworkFirst } from 'workbox-strategies/NetworkFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a page caching recipe with a network timeout\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to pages\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.mode === 'navigate';\n * @param {number} [options.networkTimoutSeconds] Maximum amount of time, in seconds, to wait on the network before falling back to cache. Defaults to 3\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction pageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.mode === 'navigate';\n    const cacheName = options.cacheName || 'pages';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const networkTimeoutSeconds = options.networkTimeoutSeconds || 3;\n    const plugins = options.plugins || [];\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    const strategy = new NetworkFirst({\n        networkTimeoutSeconds,\n        cacheName,\n        plugins,\n    });\n    // Registers the route\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { pageCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { setCatchHandler } from 'workbox-routing/setCatchHandler.js';\nimport { matchPrecache } from 'workbox-precaching/matchPrecache.js';\nimport './_version.js';\n/**\n * An implementation of the [comprehensive fallbacks recipe]{@link https://developers.google.com/web/tools/workbox/guides/advanced-recipes#comprehensive_fallbacks}. Be sure to include the fallbacks in your precache injection\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.pageFallback] Precache name to match for pag fallbacks. Defaults to offline.html\n * @param {string} [options.imageFallback] Precache name to match for image fallbacks.\n * @param {string} [options.fontFallback] Precache name to match for font fallbacks.\n */\nfunction offlineFallback(options = {}) {\n    const pageFallback = options.pageFallback || 'offline.html';\n    const imageFallback = options.imageFallback || false;\n    const fontFallback = options.fontFallback || false;\n    self.addEventListener('install', (event) => {\n        const files = [pageFallback];\n        if (imageFallback) {\n            files.push(imageFallback);\n        }\n        if (fontFallback) {\n            files.push(fontFallback);\n        }\n        event.waitUntil(self.caches\n            .open('workbox-offline-fallbacks')\n            .then((cache) => cache.addAll(files)));\n    });\n    const handler = async (options) => {\n        const dest = options.request.destination;\n        const cache = await self.caches.open('workbox-offline-fallbacks');\n        if (dest === 'document') {\n            const match = (await matchPrecache(pageFallback)) ||\n                (await cache.match(pageFallback));\n            return match || Response.error();\n        }\n        if (dest === 'image' && imageFallback !== false) {\n            const match = (await matchPrecache(imageFallback)) ||\n                (await cache.match(imageFallback));\n            return match || Response.error();\n        }\n        if (dest === 'font' && fontFallback !== false) {\n            const match = (await matchPrecache(fontFallback)) ||\n                (await cache.match(fontFallback));\n            return match || Response.error();\n        }\n        return Response.error();\n    };\n    setCatchHandler(handler);\n}\nexport { offlineFallback };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:7.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message +=\n                ` ${alreadyPrecachedCount} ` +\n                    `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            // Do not add integrity if the original request is no-cors\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            response = await handler.fetch(new Request(request, {\n                integrity: request.mode !== 'no-cors'\n                    ? integrityInRequest || integrityInManifest\n                    : undefined,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            // Also if the original request users no-cors we don't use integrity.\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            if (integrityInManifest &&\n                noIntegrityConflict &&\n                request.mode !== 'no-cors') {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { initialize } from './initialize.js';\nimport './_version.js';\n/**\n * @module workbox-google-analytics\n */\nexport { initialize };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { BackgroundSyncPlugin } from 'workbox-background-sync/BackgroundSyncPlugin.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { Router } from 'workbox-routing/Router.js';\nimport { NetworkFirst } from 'workbox-strategies/NetworkFirst.js';\nimport { NetworkOnly } from 'workbox-strategies/NetworkOnly.js';\nimport { QUEUE_NAME, MAX_RETENTION_TIME, GOOGLE_ANALYTICS_HOST, GTM_HOST, ANALYTICS_JS_PATH, GTAG_JS_PATH, GTM_JS_PATH, COLLECT_PATHS_REGEX, } from './utils/constants.js';\nimport './_version.js';\n/**\n * Creates the requestWillDequeue callback to be used with the background\n * sync plugin. The callback takes the failed request and adds the\n * `qt` param based on the current time, as well as applies any other\n * user-defined hit modifications.\n *\n * @param {Object} config See {@link workbox-google-analytics.initialize}.\n * @return {Function} The requestWillDequeue callback function.\n *\n * @private\n */\nconst createOnSyncCallback = (config) => {\n    return async ({ queue }) => {\n        let entry;\n        while ((entry = await queue.shiftRequest())) {\n            const { request, timestamp } = entry;\n            const url = new URL(request.url);\n            try {\n                // Measurement protocol requests can set their payload parameters in\n                // either the URL query string (for GET requests) or the POST body.\n                const params = request.method === 'POST'\n                    ? new URLSearchParams(await request.clone().text())\n                    : url.searchParams;\n                // Calculate the qt param, accounting for the fact that an existing\n                // qt param may be present and should be updated rather than replaced.\n                const originalHitTime = timestamp - (Number(params.get('qt')) || 0);\n                const queueTime = Date.now() - originalHitTime;\n                // Set the qt param prior to applying hitFilter or parameterOverrides.\n                params.set('qt', String(queueTime));\n                // Apply `parameterOverrides`, if set.\n                if (config.parameterOverrides) {\n                    for (const param of Object.keys(config.parameterOverrides)) {\n                        const value = config.parameterOverrides[param];\n                        params.set(param, value);\n                    }\n                }\n                // Apply `hitFilter`, if set.\n                if (typeof config.hitFilter === 'function') {\n                    config.hitFilter.call(null, params);\n                }\n                // Retry the fetch. Ignore URL search params from the URL as they're\n                // now in the post body.\n                await fetch(new Request(url.origin + url.pathname, {\n                    body: params.toString(),\n                    method: 'POST',\n                    mode: 'cors',\n                    credentials: 'omit',\n                    headers: { 'Content-Type': 'text/plain' },\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Request for '${getFriendlyURL(url.href)}' ` + `has been replayed`);\n                }\n            }\n            catch (err) {\n                await queue.unshiftRequest(entry);\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Request for '${getFriendlyURL(url.href)}' ` +\n                        `failed to replay, putting it back in the queue.`);\n                }\n                throw err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`All Google Analytics request successfully replayed; ` +\n                `the queue is now empty!`);\n        }\n    };\n};\n/**\n * Creates GET and POST routes to catch failed Measurement Protocol hits.\n *\n * @param {BackgroundSyncPlugin} bgSyncPlugin\n * @return {Array<Route>} The created routes.\n *\n * @private\n */\nconst createCollectRoutes = (bgSyncPlugin) => {\n    const match = ({ url }) => url.hostname === GOOGLE_ANALYTICS_HOST &&\n        COLLECT_PATHS_REGEX.test(url.pathname);\n    const handler = new NetworkOnly({\n        plugins: [bgSyncPlugin],\n    });\n    return [new Route(match, handler, 'GET'), new Route(match, handler, 'POST')];\n};\n/**\n * Creates a route with a network first strategy for the analytics.js script.\n *\n * @param {string} cacheName\n * @return {Route} The created route.\n *\n * @private\n */\nconst createAnalyticsJsRoute = (cacheName) => {\n    const match = ({ url }) => url.hostname === GOOGLE_ANALYTICS_HOST &&\n        url.pathname === ANALYTICS_JS_PATH;\n    const handler = new NetworkFirst({ cacheName });\n    return new Route(match, handler, 'GET');\n};\n/**\n * Creates a route with a network first strategy for the gtag.js script.\n *\n * @param {string} cacheName\n * @return {Route} The created route.\n *\n * @private\n */\nconst createGtagJsRoute = (cacheName) => {\n    const match = ({ url }) => url.hostname === GTM_HOST && url.pathname === GTAG_JS_PATH;\n    const handler = new NetworkFirst({ cacheName });\n    return new Route(match, handler, 'GET');\n};\n/**\n * Creates a route with a network first strategy for the gtm.js script.\n *\n * @param {string} cacheName\n * @return {Route} The created route.\n *\n * @private\n */\nconst createGtmJsRoute = (cacheName) => {\n    const match = ({ url }) => url.hostname === GTM_HOST && url.pathname === GTM_JS_PATH;\n    const handler = new NetworkFirst({ cacheName });\n    return new Route(match, handler, 'GET');\n};\n/**\n * @param {Object=} [options]\n * @param {Object} [options.cacheName] The cache name to store and retrieve\n *     analytics.js. Defaults to the cache names provided by `workbox-core`.\n * @param {Object} [options.parameterOverrides]\n *     [Measurement Protocol parameters](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters),\n *     expressed as key/value pairs, to be added to replayed Google Analytics\n *     requests. This can be used to, e.g., set a custom dimension indicating\n *     that the request was replayed.\n * @param {Function} [options.hitFilter] A function that allows you to modify\n *     the hit parameters prior to replaying\n *     the hit. The function is invoked with the original hit's URLSearchParams\n *     object as its only argument.\n *\n * @memberof workbox-google-analytics\n */\nconst initialize = (options = {}) => {\n    const cacheName = cacheNames.getGoogleAnalyticsName(options.cacheName);\n    const bgSyncPlugin = new BackgroundSyncPlugin(QUEUE_NAME, {\n        maxRetentionTime: MAX_RETENTION_TIME,\n        onSync: createOnSyncCallback(options),\n    });\n    const routes = [\n        createGtmJsRoute(cacheName),\n        createAnalyticsJsRoute(cacheName),\n        createGtagJsRoute(cacheName),\n        ...createCollectRoutes(bgSyncPlugin),\n    ];\n    const router = new Router();\n    for (const route of routes) {\n        router.registerRoute(route);\n    }\n    router.addFetchListener();\n};\nexport { initialize };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Queue } from './Queue.js';\nimport './_version.js';\n/**\n * A class implementing the `fetchDidFail` lifecycle callback. This makes it\n * easier to add failed requests to a background sync Queue.\n *\n * @memberof workbox-background-sync\n */\nclass BackgroundSyncPlugin {\n    /**\n     * @param {string} name See the {@link workbox-background-sync.Queue}\n     *     documentation for parameter details.\n     * @param {Object} [options] See the\n     *     {@link workbox-background-sync.Queue} documentation for\n     *     parameter details.\n     */\n    constructor(name, options) {\n        /**\n         * @param {Object} options\n         * @param {Request} options.request\n         * @private\n         */\n        this.fetchDidFail = async ({ request }) => {\n            await this._queue.pushRequest({ request });\n        };\n        this._queue = new Queue(name, options);\n    }\n}\nexport { BackgroundSyncPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { QueueStore } from './lib/QueueStore.js';\nimport { StorableRequest } from './lib/StorableRequest.js';\nimport './_version.js';\nconst TAG_PREFIX = 'workbox-background-sync';\nconst MAX_RETENTION_TIME = 60 * 24 * 7; // 7 days in minutes\nconst queueNames = new Set();\n/**\n * Converts a QueueStore entry into the format exposed by Queue. This entails\n * converting the request data into a real request and omitting the `id` and\n * `queueName` properties.\n *\n * @param {UnidentifiedQueueStoreEntry} queueStoreEntry\n * @return {Queue}\n * @private\n */\nconst convertEntry = (queueStoreEntry) => {\n    const queueEntry = {\n        request: new StorableRequest(queueStoreEntry.requestData).toRequest(),\n        timestamp: queueStoreEntry.timestamp,\n    };\n    if (queueStoreEntry.metadata) {\n        queueEntry.metadata = queueStoreEntry.metadata;\n    }\n    return queueEntry;\n};\n/**\n * A class to manage storing failed requests in IndexedDB and retrying them\n * later. All parts of the storing and replaying process are observable via\n * callbacks.\n *\n * @memberof workbox-background-sync\n */\nclass Queue {\n    /**\n     * Creates an instance of Queue with the given options\n     *\n     * @param {string} name The unique name for this queue. This name must be\n     *     unique as it's used to register sync events and store requests\n     *     in IndexedDB specific to this instance. An error will be thrown if\n     *     a duplicate name is detected.\n     * @param {Object} [options]\n     * @param {Function} [options.onSync] A function that gets invoked whenever\n     *     the 'sync' event fires. The function is invoked with an object\n     *     containing the `queue` property (referencing this instance), and you\n     *     can use the callback to customize the replay behavior of the queue.\n     *     When not set the `replayRequests()` method is called.\n     *     Note: if the replay fails after a sync event, make sure you throw an\n     *     error, so the browser knows to retry the sync event later.\n     * @param {number} [options.maxRetentionTime=7 days] The amount of time (in\n     *     minutes) a request may be retried. After this amount of time has\n     *     passed, the request will be deleted from the queue.\n     * @param {boolean} [options.forceSyncFallback=false] If `true`, instead\n     *     of attempting to use background sync events, always attempt to replay\n     *     queued request at service worker startup. Most folks will not need\n     *     this, unless you explicitly target a runtime like Electron that\n     *     exposes the interfaces for background sync, but does not have a working\n     *     implementation.\n     */\n    constructor(name, { forceSyncFallback, onSync, maxRetentionTime } = {}) {\n        this._syncInProgress = false;\n        this._requestsAddedDuringSync = false;\n        // Ensure the store name is not already being used\n        if (queueNames.has(name)) {\n            throw new WorkboxError('duplicate-queue-name', { name });\n        }\n        else {\n            queueNames.add(name);\n        }\n        this._name = name;\n        this._onSync = onSync || this.replayRequests;\n        this._maxRetentionTime = maxRetentionTime || MAX_RETENTION_TIME;\n        this._forceSyncFallback = Boolean(forceSyncFallback);\n        this._queueStore = new QueueStore(this._name);\n        this._addSyncListener();\n    }\n    /**\n     * @return {string}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Stores the passed request in IndexedDB (with its timestamp and any\n     * metadata) at the end of the queue.\n     *\n     * @param {QueueEntry} entry\n     * @param {Request} entry.request The request to store in the queue.\n     * @param {Object} [entry.metadata] Any metadata you want associated with the\n     *     stored request. When requests are replayed you'll have access to this\n     *     metadata object in case you need to modify the request beforehand.\n     * @param {number} [entry.timestamp] The timestamp (Epoch time in\n     *     milliseconds) when the request was first added to the queue. This is\n     *     used along with `maxRetentionTime` to remove outdated requests. In\n     *     general you don't need to set this value, as it's automatically set\n     *     for you (defaulting to `Date.now()`), but you can update it if you\n     *     don't want particular requests to expire.\n     */\n    async pushRequest(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'pushRequest',\n                paramName: 'entry',\n            });\n            assert.isInstance(entry.request, Request, {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'pushRequest',\n                paramName: 'entry.request',\n            });\n        }\n        await this._addRequest(entry, 'push');\n    }\n    /**\n     * Stores the passed request in IndexedDB (with its timestamp and any\n     * metadata) at the beginning of the queue.\n     *\n     * @param {QueueEntry} entry\n     * @param {Request} entry.request The request to store in the queue.\n     * @param {Object} [entry.metadata] Any metadata you want associated with the\n     *     stored request. When requests are replayed you'll have access to this\n     *     metadata object in case you need to modify the request beforehand.\n     * @param {number} [entry.timestamp] The timestamp (Epoch time in\n     *     milliseconds) when the request was first added to the queue. This is\n     *     used along with `maxRetentionTime` to remove outdated requests. In\n     *     general you don't need to set this value, as it's automatically set\n     *     for you (defaulting to `Date.now()`), but you can update it if you\n     *     don't want particular requests to expire.\n     */\n    async unshiftRequest(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'unshiftRequest',\n                paramName: 'entry',\n            });\n            assert.isInstance(entry.request, Request, {\n                moduleName: 'workbox-background-sync',\n                className: 'Queue',\n                funcName: 'unshiftRequest',\n                paramName: 'entry.request',\n            });\n        }\n        await this._addRequest(entry, 'unshift');\n    }\n    /**\n     * Removes and returns the last request in the queue (along with its\n     * timestamp and any metadata). The returned object takes the form:\n     * `{request, timestamp, metadata}`.\n     *\n     * @return {Promise<QueueEntry | undefined>}\n     */\n    async popRequest() {\n        return this._removeRequest('pop');\n    }\n    /**\n     * Removes and returns the first request in the queue (along with its\n     * timestamp and any metadata). The returned object takes the form:\n     * `{request, timestamp, metadata}`.\n     *\n     * @return {Promise<QueueEntry | undefined>}\n     */\n    async shiftRequest() {\n        return this._removeRequest('shift');\n    }\n    /**\n     * Returns all the entries that have not expired (per `maxRetentionTime`).\n     * Any expired entries are removed from the queue.\n     *\n     * @return {Promise<Array<QueueEntry>>}\n     */\n    async getAll() {\n        const allEntries = await this._queueStore.getAll();\n        const now = Date.now();\n        const unexpiredEntries = [];\n        for (const entry of allEntries) {\n            // Ignore requests older than maxRetentionTime. Call this function\n            // recursively until an unexpired request is found.\n            const maxRetentionTimeInMs = this._maxRetentionTime * 60 * 1000;\n            if (now - entry.timestamp > maxRetentionTimeInMs) {\n                await this._queueStore.deleteEntry(entry.id);\n            }\n            else {\n                unexpiredEntries.push(convertEntry(entry));\n            }\n        }\n        return unexpiredEntries;\n    }\n    /**\n     * Returns the number of entries present in the queue.\n     * Note that expired entries (per `maxRetentionTime`) are also included in this count.\n     *\n     * @return {Promise<number>}\n     */\n    async size() {\n        return await this._queueStore.size();\n    }\n    /**\n     * Adds the entry to the QueueStore and registers for a sync event.\n     *\n     * @param {Object} entry\n     * @param {Request} entry.request\n     * @param {Object} [entry.metadata]\n     * @param {number} [entry.timestamp=Date.now()]\n     * @param {string} operation ('push' or 'unshift')\n     * @private\n     */\n    async _addRequest({ request, metadata, timestamp = Date.now() }, operation) {\n        const storableRequest = await StorableRequest.fromRequest(request.clone());\n        const entry = {\n            requestData: storableRequest.toObject(),\n            timestamp,\n        };\n        // Only include metadata if it's present.\n        if (metadata) {\n            entry.metadata = metadata;\n        }\n        switch (operation) {\n            case 'push':\n                await this._queueStore.pushEntry(entry);\n                break;\n            case 'unshift':\n                await this._queueStore.unshiftEntry(entry);\n                break;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`Request for '${getFriendlyURL(request.url)}' has ` +\n                `been added to background sync queue '${this._name}'.`);\n        }\n        // Don't register for a sync if we're in the middle of a sync. Instead,\n        // we wait until the sync is complete and call register if\n        // `this._requestsAddedDuringSync` is true.\n        if (this._syncInProgress) {\n            this._requestsAddedDuringSync = true;\n        }\n        else {\n            await this.registerSync();\n        }\n    }\n    /**\n     * Removes and returns the first or last (depending on `operation`) entry\n     * from the QueueStore that's not older than the `maxRetentionTime`.\n     *\n     * @param {string} operation ('pop' or 'shift')\n     * @return {Object|undefined}\n     * @private\n     */\n    async _removeRequest(operation) {\n        const now = Date.now();\n        let entry;\n        switch (operation) {\n            case 'pop':\n                entry = await this._queueStore.popEntry();\n                break;\n            case 'shift':\n                entry = await this._queueStore.shiftEntry();\n                break;\n        }\n        if (entry) {\n            // Ignore requests older than maxRetentionTime. Call this function\n            // recursively until an unexpired request is found.\n            const maxRetentionTimeInMs = this._maxRetentionTime * 60 * 1000;\n            if (now - entry.timestamp > maxRetentionTimeInMs) {\n                return this._removeRequest(operation);\n            }\n            return convertEntry(entry);\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Loops through each request in the queue and attempts to re-fetch it.\n     * If any request fails to re-fetch, it's put back in the same position in\n     * the queue (which registers a retry for the next sync event).\n     */\n    async replayRequests() {\n        let entry;\n        while ((entry = await this.shiftRequest())) {\n            try {\n                await fetch(entry.request.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Request for '${getFriendlyURL(entry.request.url)}' ` +\n                        `has been replayed in queue '${this._name}'`);\n                }\n            }\n            catch (error) {\n                await this.unshiftRequest(entry);\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Request for '${getFriendlyURL(entry.request.url)}' ` +\n                        `failed to replay, putting it back in queue '${this._name}'`);\n                }\n                throw new WorkboxError('queue-replay-failed', { name: this._name });\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`All requests in queue '${this.name}' have successfully ` +\n                `replayed; the queue is now empty!`);\n        }\n    }\n    /**\n     * Registers a sync event with a tag unique to this instance.\n     */\n    async registerSync() {\n        // See https://github.com/GoogleChrome/workbox/issues/2393\n        if ('sync' in self.registration && !this._forceSyncFallback) {\n            try {\n                await self.registration.sync.register(`${TAG_PREFIX}:${this._name}`);\n            }\n            catch (err) {\n                // This means the registration failed for some reason, possibly due to\n                // the user disabling it.\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to register sync event for '${this._name}'.`, err);\n                }\n            }\n        }\n    }\n    /**\n     * In sync-supporting browsers, this adds a listener for the sync event.\n     * In non-sync-supporting browsers, or if _forceSyncFallback is true, this\n     * will retry the queue on service worker startup.\n     *\n     * @private\n     */\n    _addSyncListener() {\n        // See https://github.com/GoogleChrome/workbox/issues/2393\n        if ('sync' in self.registration && !this._forceSyncFallback) {\n            self.addEventListener('sync', (event) => {\n                if (event.tag === `${TAG_PREFIX}:${this._name}`) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.log(`Background sync for tag '${event.tag}' ` + `has been received`);\n                    }\n                    const syncComplete = async () => {\n                        this._syncInProgress = true;\n                        let syncError;\n                        try {\n                            await this._onSync({ queue: this });\n                        }\n                        catch (error) {\n                            if (error instanceof Error) {\n                                syncError = error;\n                                // Rethrow the error. Note: the logic in the finally clause\n                                // will run before this gets rethrown.\n                                throw syncError;\n                            }\n                        }\n                        finally {\n                            // New items may have been added to the queue during the sync,\n                            // so we need to register for a new sync if that's happened...\n                            // Unless there was an error during the sync, in which\n                            // case the browser will automatically retry later, as long\n                            // as `event.lastChance` is not true.\n                            if (this._requestsAddedDuringSync &&\n                                !(syncError && !event.lastChance)) {\n                                await this.registerSync();\n                            }\n                            this._syncInProgress = false;\n                            this._requestsAddedDuringSync = false;\n                        }\n                    };\n                    event.waitUntil(syncComplete());\n                }\n            });\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Background sync replaying without background sync event`);\n            }\n            // If the browser doesn't support background sync, or the developer has\n            // opted-in to not using it, retry every time the service worker starts up\n            // as a fallback.\n            void this._onSync({ queue: this });\n        }\n    }\n    /**\n     * Returns the set of queue names. This is primarily used to reset the list\n     * of queue names in tests.\n     *\n     * @return {Set<string>}\n     *\n     * @private\n     */\n    static get _queueNames() {\n        return queueNames;\n    }\n}\nexport { Queue };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { QueueDb, } from './QueueDb.js';\nimport '../_version.js';\n/**\n * A class to manage storing requests from a Queue in IndexedDB,\n * indexed by their queue name for easier access.\n *\n * Most developers will not need to access this class directly;\n * it is exposed for advanced use cases.\n */\nexport class QueueStore {\n    /**\n     * Associates this instance with a Queue instance, so entries added can be\n     * identified by their queue name.\n     *\n     * @param {string} queueName\n     */\n    constructor(queueName) {\n        this._queueName = queueName;\n        this._queueDb = new QueueDb();\n    }\n    /**\n     * Append an entry last in the queue.\n     *\n     * @param {Object} entry\n     * @param {Object} entry.requestData\n     * @param {number} [entry.timestamp]\n     * @param {Object} [entry.metadata]\n     */\n    async pushEntry(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'pushEntry',\n                paramName: 'entry',\n            });\n            assert.isType(entry.requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'pushEntry',\n                paramName: 'entry.requestData',\n            });\n        }\n        // Don't specify an ID since one is automatically generated.\n        delete entry.id;\n        entry.queueName = this._queueName;\n        await this._queueDb.addEntry(entry);\n    }\n    /**\n     * Prepend an entry first in the queue.\n     *\n     * @param {Object} entry\n     * @param {Object} entry.requestData\n     * @param {number} [entry.timestamp]\n     * @param {Object} [entry.metadata]\n     */\n    async unshiftEntry(entry) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(entry, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'unshiftEntry',\n                paramName: 'entry',\n            });\n            assert.isType(entry.requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'QueueStore',\n                funcName: 'unshiftEntry',\n                paramName: 'entry.requestData',\n            });\n        }\n        const firstId = await this._queueDb.getFirstEntryId();\n        if (firstId) {\n            // Pick an ID one less than the lowest ID in the object store.\n            entry.id = firstId - 1;\n        }\n        else {\n            // Otherwise let the auto-incrementor assign the ID.\n            delete entry.id;\n        }\n        entry.queueName = this._queueName;\n        await this._queueDb.addEntry(entry);\n    }\n    /**\n     * Removes and returns the last entry in the queue matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     */\n    async popEntry() {\n        return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName));\n    }\n    /**\n     * Removes and returns the first entry in the queue matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     */\n    async shiftEntry() {\n        return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName));\n    }\n    /**\n     * Returns all entries in the store matching the `queueName`.\n     *\n     * @param {Object} options See {@link workbox-background-sync.Queue~getAll}\n     * @return {Promise<Array<Object>>}\n     */\n    async getAll() {\n        return await this._queueDb.getAllEntriesByQueueName(this._queueName);\n    }\n    /**\n     * Returns the number of entries in the store matching the `queueName`.\n     *\n     * @param {Object} options See {@link workbox-background-sync.Queue~size}\n     * @return {Promise<number>}\n     */\n    async size() {\n        return await this._queueDb.getEntryCountByQueueName(this._queueName);\n    }\n    /**\n     * Deletes the entry for the given ID.\n     *\n     * WARNING: this method does not ensure the deleted entry belongs to this\n     * queue (i.e. matches the `queueName`). But this limitation is acceptable\n     * as this class is not publicly exposed. An additional check would make\n     * this method slower than it needs to be.\n     *\n     * @param {number} id\n     */\n    async deleteEntry(id) {\n        await this._queueDb.deleteEntry(id);\n    }\n    /**\n     * Removes and returns the first or last entry in the queue (based on the\n     * `direction` argument) matching the `queueName`.\n     *\n     * @return {Promise<QueueStoreEntry|undefined>}\n     * @private\n     */\n    async _removeEntry(entry) {\n        if (entry) {\n            await this.deleteEntry(entry.id);\n        }\n        return entry;\n    }\n}\n","/*\n  Copyright 2021 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB } from 'idb';\nimport '../_version.js';\nconst DB_VERSION = 3;\nconst DB_NAME = 'workbox-background-sync';\nconst REQUEST_OBJECT_STORE_NAME = 'requests';\nconst QUEUE_NAME_INDEX = 'queueName';\n/**\n * A class to interact directly an IndexedDB created specifically to save and\n * retrieve QueueStoreEntries. This class encapsulates all the schema details\n * to store the representation of a Queue.\n *\n * @private\n */\nexport class QueueDb {\n    constructor() {\n        this._db = null;\n    }\n    /**\n     * Add QueueStoreEntry to underlying db.\n     *\n     * @param {UnidentifiedQueueStoreEntry} entry\n     */\n    async addEntry(entry) {\n        const db = await this.getDb();\n        const tx = db.transaction(REQUEST_OBJECT_STORE_NAME, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.add(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the first entry id in the ObjectStore.\n     *\n     * @return {number | undefined}\n     */\n    async getFirstEntryId() {\n        const db = await this.getDb();\n        const cursor = await db\n            .transaction(REQUEST_OBJECT_STORE_NAME)\n            .store.openCursor();\n        return cursor === null || cursor === void 0 ? void 0 : cursor.value.id;\n    }\n    /**\n     * Get all the entries filtered by index\n     *\n     * @param queueName\n     * @return {Promise<QueueStoreEntry[]>}\n     */\n    async getAllEntriesByQueueName(queueName) {\n        const db = await this.getDb();\n        const results = await db.getAllFromIndex(REQUEST_OBJECT_STORE_NAME, QUEUE_NAME_INDEX, IDBKeyRange.only(queueName));\n        return results ? results : new Array();\n    }\n    /**\n     * Returns the number of entries filtered by index\n     *\n     * @param queueName\n     * @return {Promise<number>}\n     */\n    async getEntryCountByQueueName(queueName) {\n        const db = await this.getDb();\n        return db.countFromIndex(REQUEST_OBJECT_STORE_NAME, QUEUE_NAME_INDEX, IDBKeyRange.only(queueName));\n    }\n    /**\n     * Deletes a single entry by id.\n     *\n     * @param {number} id the id of the entry to be deleted\n     */\n    async deleteEntry(id) {\n        const db = await this.getDb();\n        await db.delete(REQUEST_OBJECT_STORE_NAME, id);\n    }\n    /**\n     *\n     * @param queueName\n     * @returns {Promise<QueueStoreEntry | undefined>}\n     */\n    async getFirstEntryByQueueName(queueName) {\n        return await this.getEndEntryFromIndex(IDBKeyRange.only(queueName), 'next');\n    }\n    /**\n     *\n     * @param queueName\n     * @returns {Promise<QueueStoreEntry | undefined>}\n     */\n    async getLastEntryByQueueName(queueName) {\n        return await this.getEndEntryFromIndex(IDBKeyRange.only(queueName), 'prev');\n    }\n    /**\n     * Returns either the first or the last entries, depending on direction.\n     * Filtered by index.\n     *\n     * @param {IDBCursorDirection} direction\n     * @param {IDBKeyRange} query\n     * @return {Promise<QueueStoreEntry | undefined>}\n     * @private\n     */\n    async getEndEntryFromIndex(query, direction) {\n        const db = await this.getDb();\n        const cursor = await db\n            .transaction(REQUEST_OBJECT_STORE_NAME)\n            .store.index(QUEUE_NAME_INDEX)\n            .openCursor(query, direction);\n        return cursor === null || cursor === void 0 ? void 0 : cursor.value;\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, DB_VERSION, {\n                upgrade: this._upgradeDb,\n            });\n        }\n        return this._db;\n    }\n    /**\n     * Upgrades QueueDB\n     *\n     * @param {IDBPDatabase<QueueDBSchema>} db\n     * @param {number} oldVersion\n     * @private\n     */\n    _upgradeDb(db, oldVersion) {\n        if (oldVersion > 0 && oldVersion < DB_VERSION) {\n            if (db.objectStoreNames.contains(REQUEST_OBJECT_STORE_NAME)) {\n                db.deleteObjectStore(REQUEST_OBJECT_STORE_NAME);\n            }\n        }\n        const objStore = db.createObjectStore(REQUEST_OBJECT_STORE_NAME, {\n            autoIncrement: true,\n            keyPath: 'id',\n        });\n        objStore.createIndex(QUEUE_NAME_INDEX, QUEUE_NAME_INDEX, { unique: false });\n    }\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:background-sync:7.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\nconst serializableProperties = [\n    'method',\n    'referrer',\n    'referrerPolicy',\n    'mode',\n    'credentials',\n    'cache',\n    'redirect',\n    'integrity',\n    'keepalive',\n];\n/**\n * A class to make it easier to serialize and de-serialize requests so they\n * can be stored in IndexedDB.\n *\n * Most developers will not need to access this class directly;\n * it is exposed for advanced use cases.\n */\nclass StorableRequest {\n    /**\n     * Converts a Request object to a plain object that can be structured\n     * cloned or JSON-stringified.\n     *\n     * @param {Request} request\n     * @return {Promise<StorableRequest>}\n     */\n    static async fromRequest(request) {\n        const requestData = {\n            url: request.url,\n            headers: {},\n        };\n        // Set the body if present.\n        if (request.method !== 'GET') {\n            // Use ArrayBuffer to support non-text request bodies.\n            // NOTE: we can't use Blobs becuse Safari doesn't support storing\n            // Blobs in IndexedDB in some cases:\n            // https://github.com/dfahlander/Dexie.js/issues/618#issuecomment-398348457\n            requestData.body = await request.clone().arrayBuffer();\n        }\n        // Convert the headers from an iterable to an object.\n        for (const [key, value] of request.headers.entries()) {\n            requestData.headers[key] = value;\n        }\n        // Add all other serializable request properties\n        for (const prop of serializableProperties) {\n            if (request[prop] !== undefined) {\n                requestData[prop] = request[prop];\n            }\n        }\n        return new StorableRequest(requestData);\n    }\n    /**\n     * Accepts an object of request data that can be used to construct a\n     * `Request` but can also be stored in IndexedDB.\n     *\n     * @param {Object} requestData An object of request data that includes the\n     *     `url` plus any relevant properties of\n     *     [requestInit]{@link https://fetch.spec.whatwg.org/#requestinit}.\n     */\n    constructor(requestData) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(requestData, 'object', {\n                moduleName: 'workbox-background-sync',\n                className: 'StorableRequest',\n                funcName: 'constructor',\n                paramName: 'requestData',\n            });\n            assert.isType(requestData.url, 'string', {\n                moduleName: 'workbox-background-sync',\n                className: 'StorableRequest',\n                funcName: 'constructor',\n                paramName: 'requestData.url',\n            });\n        }\n        // If the request's mode is `navigate`, convert it to `same-origin` since\n        // navigation requests can't be constructed via script.\n        if (requestData['mode'] === 'navigate') {\n            requestData['mode'] = 'same-origin';\n        }\n        this._requestData = requestData;\n    }\n    /**\n     * Returns a deep clone of the instances `_requestData` object.\n     *\n     * @return {Object}\n     */\n    toObject() {\n        const requestData = Object.assign({}, this._requestData);\n        requestData.headers = Object.assign({}, this._requestData.headers);\n        if (requestData.body) {\n            requestData.body = requestData.body.slice(0);\n        }\n        return requestData;\n    }\n    /**\n     * Converts this instance to a Request.\n     *\n     * @return {Request}\n     */\n    toRequest() {\n        return new Request(this._requestData.url, this._requestData);\n    }\n    /**\n     * Creates and returns a deep clone of the instance.\n     *\n     * @return {StorableRequest}\n     */\n    clone() {\n        return new StorableRequest(this.toObject());\n    }\n}\nexport { StorableRequest };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const QUEUE_NAME = 'workbox-google-analytics';\nexport const MAX_RETENTION_TIME = 60 * 48; // Two days in minutes\nexport const GOOGLE_ANALYTICS_HOST = 'www.google-analytics.com';\nexport const GTM_HOST = 'www.googletagmanager.com';\nexport const ANALYTICS_JS_PATH = '/analytics.js';\nexport const GTAG_JS_PATH = '/gtag/js';\nexport const GTM_JS_PATH = '/gtm.js';\nexport const COLLECT_DEFAULT_PATH = '/collect';\n// This RegExp matches all known Measurement Protocol single-hit collect\n// endpoints. Most of the time the default path (/collect) is used, but\n// occasionally an experimental endpoint is used when testing new features,\n// (e.g. /r/collect or /j/collect)\nexport const COLLECT_PATHS_REGEX = /^\\/(\\w+\\/)?collect/;\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:google-analytics:7.0.0'] && _();\n}\ncatch (e) { }\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse, } from './CacheableResponse.js';\nimport { CacheableResponsePlugin } from './CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * @module workbox-cacheable-response\n */\nexport { CacheableResponse, CacheableResponsePlugin };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheExpiration } from './CacheExpiration.js';\nimport { ExpirationPlugin } from './ExpirationPlugin.js';\nimport './_version.js';\n/**\n * @module workbox-expiration\n */\nexport { CacheExpiration, ExpirationPlugin };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { createPartialResponse } from './createPartialResponse.js';\nimport { RangeRequestsPlugin } from './RangeRequestsPlugin.js';\nimport './_version.js';\n/**\n * @module workbox-range-requests\n */\nexport { createPartialResponse, RangeRequestsPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { calculateEffectiveBoundaries } from './utils/calculateEffectiveBoundaries.js';\nimport { parseRangeHeader } from './utils/parseRangeHeader.js';\nimport './_version.js';\n/**\n * Given a `Request` and `Response` objects as input, this will return a\n * promise for a new `Response`.\n *\n * If the original `Response` already contains partial content (i.e. it has\n * a status of 206), then this assumes it already fulfills the `Range:`\n * requirements, and will return it as-is.\n *\n * @param {Request} request A request, which should contain a Range:\n * header.\n * @param {Response} originalResponse A response.\n * @return {Promise<Response>} Either a `206 Partial Content` response, with\n * the response body set to the slice of content specified by the request's\n * `Range:` header, or a `416 Range Not Satisfiable` response if the\n * conditions of the `Range:` header can't be met.\n *\n * @memberof workbox-range-requests\n */\nasync function createPartialResponse(request, originalResponse) {\n    try {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-range-requests',\n                funcName: 'createPartialResponse',\n                paramName: 'request',\n            });\n            assert.isInstance(originalResponse, Response, {\n                moduleName: 'workbox-range-requests',\n                funcName: 'createPartialResponse',\n                paramName: 'originalResponse',\n            });\n        }\n        if (originalResponse.status === 206) {\n            // If we already have a 206, then just pass it through as-is;\n            // see https://github.com/GoogleChrome/workbox/issues/1720\n            return originalResponse;\n        }\n        const rangeHeader = request.headers.get('range');\n        if (!rangeHeader) {\n            throw new WorkboxError('no-range-header');\n        }\n        const boundaries = parseRangeHeader(rangeHeader);\n        const originalBlob = await originalResponse.blob();\n        const effectiveBoundaries = calculateEffectiveBoundaries(originalBlob, boundaries.start, boundaries.end);\n        const slicedBlob = originalBlob.slice(effectiveBoundaries.start, effectiveBoundaries.end);\n        const slicedBlobSize = slicedBlob.size;\n        const slicedResponse = new Response(slicedBlob, {\n            // Status code 206 is for a Partial Content response.\n            // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/206\n            status: 206,\n            statusText: 'Partial Content',\n            headers: originalResponse.headers,\n        });\n        slicedResponse.headers.set('Content-Length', String(slicedBlobSize));\n        slicedResponse.headers.set('Content-Range', `bytes ${effectiveBoundaries.start}-${effectiveBoundaries.end - 1}/` +\n            `${originalBlob.size}`);\n        return slicedResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.warn(`Unable to construct a partial response; returning a ` +\n                `416 Range Not Satisfiable response instead.`);\n            logger.groupCollapsed(`View details here.`);\n            logger.log(error);\n            logger.log(request);\n            logger.log(originalResponse);\n            logger.groupEnd();\n        }\n        return new Response('', {\n            status: 416,\n            statusText: 'Range Not Satisfiable',\n        });\n    }\n}\nexport { createPartialResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {Blob} blob A source blob.\n * @param {number} [start] The offset to use as the start of the\n * slice.\n * @param {number} [end] The offset to use as the end of the slice.\n * @return {Object} An object with `start` and `end` properties, reflecting\n * the effective boundaries to use given the size of the blob.\n *\n * @private\n */\nfunction calculateEffectiveBoundaries(blob, start, end) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(blob, Blob, {\n            moduleName: 'workbox-range-requests',\n            funcName: 'calculateEffectiveBoundaries',\n            paramName: 'blob',\n        });\n    }\n    const blobSize = blob.size;\n    if ((end && end > blobSize) || (start && start < 0)) {\n        throw new WorkboxError('range-not-satisfiable', {\n            size: blobSize,\n            end,\n            start,\n        });\n    }\n    let effectiveStart;\n    let effectiveEnd;\n    if (start !== undefined && end !== undefined) {\n        effectiveStart = start;\n        // Range values are inclusive, so add 1 to the value.\n        effectiveEnd = end + 1;\n    }\n    else if (start !== undefined && end === undefined) {\n        effectiveStart = start;\n        effectiveEnd = blobSize;\n    }\n    else if (end !== undefined && start === undefined) {\n        effectiveStart = blobSize - end;\n        effectiveEnd = blobSize;\n    }\n    return {\n        start: effectiveStart,\n        end: effectiveEnd,\n    };\n}\nexport { calculateEffectiveBoundaries };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:range-requests:7.0.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {string} rangeHeader A Range: header value.\n * @return {Object} An object with `start` and `end` properties, reflecting\n * the parsed value of the Range: header. If either the `start` or `end` are\n * omitted, then `null` will be returned.\n *\n * @private\n */\nfunction parseRangeHeader(rangeHeader) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(rangeHeader, 'string', {\n            moduleName: 'workbox-range-requests',\n            funcName: 'parseRangeHeader',\n            paramName: 'rangeHeader',\n        });\n    }\n    const normalizedRangeHeader = rangeHeader.trim().toLowerCase();\n    if (!normalizedRangeHeader.startsWith('bytes=')) {\n        throw new WorkboxError('unit-must-be-bytes', { normalizedRangeHeader });\n    }\n    // Specifying multiple ranges separate by commas is valid syntax, but this\n    // library only attempts to handle a single, contiguous sequence of bytes.\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range#Syntax\n    if (normalizedRangeHeader.includes(',')) {\n        throw new WorkboxError('single-range-only', { normalizedRangeHeader });\n    }\n    const rangeParts = /(\\d*)-(\\d*)/.exec(normalizedRangeHeader);\n    // We need either at least one of the start or end values.\n    if (!rangeParts || !(rangeParts[1] || rangeParts[2])) {\n        throw new WorkboxError('invalid-range-values', { normalizedRangeHeader });\n    }\n    return {\n        start: rangeParts[1] === '' ? undefined : Number(rangeParts[1]),\n        end: rangeParts[2] === '' ? undefined : Number(rangeParts[2]),\n    };\n}\nexport { parseRangeHeader };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { createPartialResponse } from './createPartialResponse.js';\nimport './_version.js';\n/**\n * The range request plugin makes it easy for a request with a 'Range' header to\n * be fulfilled by a cached response.\n *\n * It does this by intercepting the `cachedResponseWillBeUsed` plugin callback\n * and returning the appropriate subset of the cached response body.\n *\n * @memberof workbox-range-requests\n */\nclass RangeRequestsPlugin {\n    constructor() {\n        /**\n         * @param {Object} options\n         * @param {Request} options.request The original request, which may or may not\n         * contain a Range: header.\n         * @param {Response} options.cachedResponse The complete cached response.\n         * @return {Promise<Response>} If request contains a 'Range' header, then a\n         * new response with status 206 whose body is a subset of `cachedResponse` is\n         * returned. Otherwise, `cachedResponse` is returned as-is.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ request, cachedResponse, }) => {\n            // Only return a sliced response if there's something valid in the cache,\n            // and there's a Range: header in the request.\n            if (cachedResponse && request.headers.has('range')) {\n                return await createPartialResponse(request, cachedResponse);\n            }\n            // If there was no Range: header, or if cachedResponse wasn't valid, just\n            // pass it through as-is.\n            return cachedResponse;\n        };\n    }\n}\nexport { RangeRequestsPlugin };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addPlugins } from './addPlugins.js';\nimport { addRoute } from './addRoute.js';\nimport { cleanupOutdatedCaches } from './cleanupOutdatedCaches.js';\nimport { createHandlerBoundToURL } from './createHandlerBoundToURL.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport { matchPrecache } from './matchPrecache.js';\nimport { precache } from './precache.js';\nimport { precacheAndRoute } from './precacheAndRoute.js';\nimport { PrecacheController } from './PrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport { PrecacheFallbackPlugin } from './PrecacheFallbackPlugin.js';\nimport './_version.js';\n/**\n * Most consumers of this module will want to use the\n * {@link workbox-precaching.precacheAndRoute}\n * method to add assets to the cache and respond to network requests with these\n * cached assets.\n *\n * If you require more control over caching and routing, you can use the\n * {@link workbox-precaching.PrecacheController}\n * interface.\n *\n * @module workbox-precaching\n */\nexport { addPlugins, addRoute, cleanupOutdatedCaches, createHandlerBoundToURL, getCacheKeyForURL, matchPrecache, precache, precacheAndRoute, PrecacheController, PrecacheRoute, PrecacheStrategy, PrecacheFallbackPlugin, };\nexport * from './_types.js';\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds plugins to the precaching strategy.\n *\n * @param {Array<Object>} plugins\n *\n * @memberof workbox-precaching\n */\nfunction addPlugins(plugins) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.strategy.plugins.push(...plugins);\n}\nexport { addPlugins };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return (cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName);\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {workbox-routing~handlerCallback}\n *\n * @memberof workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Takes in a URL, and returns the corresponding URL that could be used to\n * lookup the entry in the precache.\n *\n * If a relative URL is provided, the location of the service worker file will\n * be used as the base.\n *\n * For precached entries without revision information, the cache key will be the\n * same as the original URL.\n *\n * For precached entries with revision information, the cache key will be the\n * original URL with the addition of a query parameter used for keeping track of\n * the revision info.\n *\n * @param {string} url The URL whose cache key to look up.\n * @return {string} The cache key that corresponds to that URL.\n *\n * @memberof workbox-precaching\n */\nfunction getCacheKeyForURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.getCacheKeyForURL(url);\n}\nexport { getCacheKeyForURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * `PrecacheFallbackPlugin` allows you to specify an \"offline fallback\"\n * response to be used when a given strategy is unable to generate a response.\n *\n * It does this by intercepting the `handlerDidError` plugin callback\n * and returning a precached response, taking the expected revision parameter\n * into account automatically.\n *\n * Unless you explicitly pass in a `PrecacheController` instance to the\n * constructor, the default instance will be used. Generally speaking, most\n * developers will end up using the default.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheFallbackPlugin {\n    /**\n     * Constructs a new PrecacheFallbackPlugin with the associated fallbackURL.\n     *\n     * @param {Object} config\n     * @param {string} config.fallbackURL A precached URL to use as the fallback\n     *     if the associated strategy can't generate a response.\n     * @param {PrecacheController} [config.precacheController] An optional\n     *     PrecacheController instance. If not provided, the default\n     *     PrecacheController will be used.\n     */\n    constructor({ fallbackURL, precacheController, }) {\n        /**\n         * @return {Promise<Response>} The precache response for the fallback URL.\n         *\n         * @private\n         */\n        this.handlerDidError = () => this._precacheController.matchPrecache(this._fallbackURL);\n        this._fallbackURL = fallbackURL;\n        this._precacheController =\n            precacheController || getOrCreatePrecacheController();\n    }\n}\nexport { PrecacheFallbackPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n// * * * IMPORTANT! * * *\n// ------------------------------------------------------------------------- //\n// jdsoc type definitions cannot be declared above TypeScript definitions or\n// they'll be stripped from the built `.js` files, and they'll only be in the\n// `d.ts` files, which aren't read by the jsdoc generator. As a result we\n// have to put declare them below.\n/**\n * @typedef {Object} InstallResult\n * @property {Array<string>} updatedURLs List of URLs that were updated during\n * installation.\n * @property {Array<string>} notUpdatedURLs List of URLs that were already up to\n * date.\n *\n * @memberof workbox-precaching\n */\n/**\n * @typedef {Object} CleanupResult\n * @property {Array<string>} deletedCacheRequests List of URLs that were deleted\n * while cleaning up the cache.\n *\n * @memberof workbox-precaching\n */\n/**\n * @typedef {Object} PrecacheEntry\n * @property {string} url URL to precache.\n * @property {string} [revision] Revision information for the URL.\n * @property {string} [integrity] Integrity metadata that will be used when\n * making the network request for the URL.\n *\n * @memberof workbox-precaching\n */\n/**\n * The \"urlManipulation\" callback can be used to determine if there are any\n * additional permutations of a URL that should be used to check against\n * the available precached files.\n *\n * For example, Workbox supports checking for '/index.html' when the URL\n * '/' is provided. This callback allows additional, custom checks.\n *\n * @callback ~urlManipulation\n * @param {Object} context\n * @param {URL} context.url The request's URL.\n * @return {Array<URL>} To add additional urls to test, return an Array of\n * URLs. Please note that these **should not be strings**, but URL objects.\n *\n * @memberof workbox-precaching\n */\n"],"names":[],"version":3,"file":"service-worker.js.map","sourceRoot":"/__parcel_source_root/"}