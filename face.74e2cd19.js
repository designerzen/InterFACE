var Br=(e,E)=>()=>(E||e((E={exports:{}}).exports,E),E.exports);var Hr=Br((ws,ms)=>{(function(e,E,s,t,r){var d=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{},m=typeof d[t]=="function"&&d[t],f=m.cache||{},i=typeof ms!="undefined"&&typeof ms.require=="function"&&ms.require.bind(ms);function o(l,u){if(!f[l]){if(!e[l]){var p=typeof d[t]=="function"&&d[t];if(!u&&p)return p(l,!0);if(m)return m(l,!0);if(i&&typeof l=="string")return i(l);var h=new Error("Cannot find module '"+l+"'");throw h.code="MODULE_NOT_FOUND",h}v.resolve=_,v.cache={};var g=f[l]=new o.Module(l);e[l][0].call(g.exports,v,g,g.exports,this)}return f[l].exports;function v(k){var y=v.resolve(k);return y===!1?{}:o(y)}function _(k){var y=e[l][1][k];return y??k}}function n(l){this.id=l,this.bundle=o,this.exports={}}o.isParcelRequire=!0,o.Module=n,o.modules=e,o.cache=f,o.parent=m,o.register=function(l,u){e[l]=[function(p,h){h.exports=u},{}]},Object.defineProperty(o,"root",{get:function(){return d[t]}}),d[t]=o;for(var c=0;c<E.length;c++)o(E[c]);if(s){var a=o(s);typeof ws=="object"&&typeof ms!="undefined"?ms.exports=a:typeof define=="function"&&define.amd?define(function(){return a}):r&&(this[r]=a)}})({foAaF:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"data",()=>o),t.export(s,"version",()=>l);var r=e("@tensorflow/tfjs-core"),d=e("@tensorflow/tfjs-core/dist/register_all_gradients"),m=e("@tensorflow/tfjs-core/dist/public/chained_ops/register_all_chained_ops");t.exportAll(r,s);var f=e("@tensorflow/tfjs-layers");t.exportAll(f,s);var i=e("@tensorflow/tfjs-converter");t.exportAll(i,s);var o=e("@tensorflow/tfjs-data"),n=e("@tensorflow/tfjs-backend-cpu");t.exportAll(n,s);var c=e("@tensorflow/tfjs-backend-webgl");t.exportAll(c,s);var a=e("./version");const l={"tfjs-core":r.version_core,"tfjs-backend-cpu":n.version_cpu,"tfjs-backend-webgl":c.version_webgl,"tfjs-data":o.version_data,"tfjs-layers":f.version_layers,"tfjs-converter":i.version_converter,tfjs:a.version}},{"@tensorflow/tfjs-core":"fqGP4","@tensorflow/tfjs-core/dist/register_all_gradients":"6n8PF","@tensorflow/tfjs-core/dist/public/chained_ops/register_all_chained_ops":"hRxg5","@tensorflow/tfjs-layers":"c6k9G","@tensorflow/tfjs-converter":"l98bQ","@tensorflow/tfjs-data":"dHH63","@tensorflow/tfjs-backend-cpu":"5aFgU","@tensorflow/tfjs-backend-webgl":"evSKx","./version":"iQWKC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fqGP4:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s);var r=e("./base_side_effects"),d=e("./optimizers/register_optimizers"),m=e("./base");t.exportAll(m,s),(0,d.registerOptimizers)()},{"./base_side_effects":"eV8jP","./optimizers/register_optimizers":"1k8ar","./base":"apsUi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eV8jP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("./engine"),r=e("./flags"),d=e("./platforms/platform_browser"),m=e("./platforms/platform_node"),f=e("./ops/buffer"),i=e("./ops/cast"),o=e("./ops/clone"),n=e("./ops/print"),c=e("./tensor");(0,t.getOrMakeEngine)();const a={buffer:f.buffer,cast:i.cast,clone:o.clone,print:n.print};(0,c.setOpHandler)(a)},{"./engine":"eID09","./flags":"1dH0L","./platforms/platform_browser":"41qxM","./platforms/platform_node":"5dRIy","./ops/buffer":"clw49","./ops/cast":"eaOhx","./ops/clone":"lnPTw","./ops/print":"hfayS","./tensor":"hRGZH"}],eID09:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Engine",()=>g),t.export(s,"getOrMakeEngine",()=>_),t.export(s,"ENGINE",()=>k),t.export(s,"add",()=>y);var r=e("./backends/backend"),d=e("./environment"),m=e("./global_util"),f=e("./kernel_names"),i=e("./kernel_registry"),o=e("./log"),n=e("./profiler"),c=e("./tape"),a=e("./tensor"),l=e("./tensor_util"),u=e("./util");function p(x){return x.kernelName!=null}class h{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(b=>b.name)))}}}dispose(){for(const b in this.registeredVariables)this.registeredVariables[b].dispose()}}class g{constructor(b){this.ENV=b,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new h}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const b=this.getSortedBackends();for(let C=0;C<b.length;C++){const w=b[C];if(await this.initializeBackend(w).success){await this.setBackend(w);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:b,asyncInit:C}=this.initializeBackendsAndReturnBest();if(C)throw new Error(`The highest priority backend '${b}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(b)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(b){if(!(b in this.registry))if(b in this.registryFactory){const{asyncInit:C}=this.initializeBackend(b);if(C)return null}else return null;return this.registry[b]}findBackendFactory(b){return b in this.registryFactory?this.registryFactory[b].factory:null}registerBackend(b,C,w=1){return b in this.registryFactory?(o.warn(`${b} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[b]={factory:C,priority:w},!0)}async setBackend(b){if(this.registryFactory[b]==null)throw new Error(`Backend name '${b}' not found in registry`);if(this.backendName=b,this.registry[b]==null){this.backendInstance=null;const{success:C,asyncInit:w}=this.initializeBackend(b);if(!(w?await C:C))return!1}return this.backendInstance=this.registry[b],this.setupRegisteredKernels(),this.profiler=new n.Profiler(this.backendInstance),!0}setupRegisteredKernels(){(0,i.getKernelsForBackend)(this.backendName).forEach(C=>{C.setupFunc!=null&&C.setupFunc(this.backendInstance)})}disposeRegisteredKernels(b){(0,i.getKernelsForBackend)(b).forEach(w=>{w.disposeFunc!=null&&w.disposeFunc(this.registry[b])})}initializeBackend(b){const C=this.registryFactory[b];if(C==null)throw new Error(`Cannot initialize backend ${b}, no registration found.`);try{const w=C.factory();if(w&&!(w instanceof r.KernelBackend)&&typeof w.then=="function"){const N=++this.pendingBackendInitId,T=w.then(F=>N<this.pendingBackendInitId?!1:(this.registry[b]=F,this.pendingBackendInit=null,!0)).catch(F=>(N<this.pendingBackendInitId||(this.pendingBackendInit=null,o.warn(`Initialization of backend ${b} failed`),o.warn(F.stack||F.message)),!1));return this.pendingBackendInit=T,{success:T,asyncInit:!0}}else return this.registry[b]=w,{success:!0,asyncInit:!1}}catch(w){return o.warn(`Initialization of backend ${b} failed`),o.warn(w.stack||w.message),{success:!1,asyncInit:!1}}}removeBackend(b){if(!(b in this.registryFactory))throw new Error(`${b} backend not found in registry`);this.backendName===b&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,b in this.registry&&(this.disposeRegisteredKernels(b),this.registry[b].dispose(),delete this.registry[b]),delete this.registryFactory[b],this.backendName===b&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((b,C)=>this.registryFactory[C].priority-this.registryFactory[b].priority)}initializeBackendsAndReturnBest(){const b=this.getSortedBackends();for(let C=0;C<b.length;C++){const w=b[C],{success:N,asyncInit:T}=this.initializeBackend(w);if(T||N)return{name:w,asyncInit:T}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(b,C){const w=this.state.tensorInfo.get(C),N=w.backend,T=this.readSync(C),F=N.refCount(C);N.disposeData(C,!0),w.backend=b,b.move(C,T,w.shape,w.dtype,F),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(b,C){let w=null;if(C==null){if(typeof b!="function")throw new Error("Please provide a function to tidy()");C=b}else{if(typeof b!="string"&&!(b instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof C!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");w=b}let N;return this.scopedRun(()=>this.startScope(w),()=>this.endScope(N),()=>(N=C(),N instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),N))}scopedRun(b,C,w){b();try{const N=w();return C(),N}catch(N){throw C(),N}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(b){const C=k.runKernel(f.Identity,{x:b}),w={x:b},N=F=>({x:()=>{const S="float32",I={x:F},j={dtype:S};return k.runKernel(f.Cast,I,j)}}),T=[];return this.addTapeNode(this.state.activeScope.name,w,[C],N,T,{}),C}runKernel(b,C,w){if(this.backendName==null&&this.backend,!((0,i.getKernel)(b,this.backendName)!=null))throw new Error(`Kernel '${b}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:b,inputs:C,attrs:w})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(b,C,w){const N=this.backend.numDataIds();let T=0;w.forEach(I=>{T+=I.dtype==="complex64"?3:1});const F=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],S=N-C-T-F;if(S>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${S} data ids) after running '${b}'`)}runKernelFunc(b){let C,w=[];const N=this.isTapeOn(),T=this.state.numBytes,F=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let S;this.backendName==null&&this.backend;let I;const j=p(b)?b.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(p(b)){const{kernelName:R,inputs:A,attrs:z}=b;this.backendName==null&&this.backend;const G=(0,i.getKernel)(R,this.backendName);u.assert(G!=null,()=>`Cannot find registered kernel '${R}' for backend '${this.backendName}'`),S=()=>{const L=this.backend.numDataIds();I=G.kernelFunc({inputs:A,attrs:z,backend:this.backend});const M=Array.isArray(I)?I:[I];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(R,L,M);const V=M.map(K=>K.rank!=null?K:this.makeTensorFromTensorInfo(K));if(N){const K=this.getTensorsForGradient(R,A,V);w=this.saveTensorsForBackwardMode(K)}return V}}else{const{forwardFunc:R}=b,A=z=>{!N||(w=z.map(G=>this.keep(this.clone(G))))};S=()=>{const z=this.backend.numDataIds();I=this.tidy(()=>R(this.backend,A));const G=Array.isArray(I)?I:[I];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(j,z,G),G}}const{inputs:D,attrs:O}=b,$=p(b)?null:b.backwardsFunc;let P;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?C=S():(P=this.profiler.profileKernel(j,D,()=>S()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(P),C=P.outputs)}),N&&this.addTapeNode(j,D,C,$,w,O),this.state.profiling&&this.state.activeProfile.kernels.push({name:j,bytesAdded:this.state.numBytes-T,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-F,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(D).map(R=>D[R]!=null?D[R].shape:null),outputShapes:C.map(R=>R.shape),kernelTimeMs:P.timeMs,extraInfo:P.extraInfo}),Array.isArray(I)?C:C[0]}saveTensorsForBackwardMode(b){return b.map(w=>this.keep(this.clone(w)))}getTensorsForGradient(b,C,w){const N=(0,i.getGradient)(b);if(N!=null){const T=N.inputsToSave||[],F=N.outputsToSave||[];let S;N.saveAllInputs?(u.assert(Array.isArray(C),()=>"saveAllInputs is true, expected inputs to be an array."),S=Object.keys(C).map(j=>C[j])):S=T.map(j=>C[j]);const I=w.filter((j,D)=>F[D]);return S.concat(I)}return[]}makeTensor(b,C,w,N){if(b==null)throw new Error("Values passed to engine.makeTensor() are null");w=w||"float32",N=N||this.backend;let T=b;w==="string"&&u.isString(b[0])&&(T=b.map(I=>u.encodeString(I)));const F=N.write(T,C,w),S=new a.Tensor(C,w,F,this.nextTensorId());if(this.trackTensor(S,N),w==="string"){const I=this.state.tensorInfo.get(F),j=(0,u.bytesFromStringArray)(T);this.state.numBytes+=j-I.bytes,I.bytes=j}return S}makeTensorFromDataId(b,C,w,N){w=w||"float32";const T={dataId:b,shape:C,dtype:w};return this.makeTensorFromTensorInfo(T,N)}makeTensorFromTensorInfo(b,C){const{dataId:w,shape:N,dtype:T}=b,F=new a.Tensor(N,T,w,this.nextTensorId());return this.trackTensor(F,C),F}makeVariable(b,C=!0,w,N){w=w||this.nextVariableId().toString(),N!=null&&N!==b.dtype&&(b=b.cast(N));const T=new a.Variable(b,C,w,this.nextTensorId());if(this.state.registeredVariables[T.name]!=null)throw new Error(`Variable with name ${T.name} was already registered`);return this.state.registeredVariables[T.name]=T,this.incRef(T,this.backend),T}trackTensor(b,C){this.state.numTensors++,b.dtype==="string"&&this.state.numStringTensors++;let w=0;b.dtype!=="complex64"&&b.dtype!=="string"&&(w=b.size*u.bytesPerElement(b.dtype)),this.state.numBytes+=w,this.state.tensorInfo.has(b.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(b.dataId,{backend:C||this.backend,dtype:b.dtype,shape:b.shape,bytes:w})),b instanceof a.Variable||this.track(b)}incRef(b,C){this.trackTensor(b,C),this.backend.incRef(b.dataId)}removeDataId(b,C){this.state.tensorInfo.has(b)&&this.state.tensorInfo.get(b).backend===C&&(this.state.tensorInfo.delete(b),this.state.numDataBuffers--)}disposeTensor(b){if(!this.state.tensorInfo.has(b.dataId))return;const C=this.state.tensorInfo.get(b.dataId);if(this.state.numTensors--,b.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=C.bytes),b.dtype!=="complex64"&&b.dtype!=="string"){const w=b.size*u.bytesPerElement(b.dtype);this.state.numBytes-=w}C.backend.disposeData(b.dataId)&&this.removeDataId(b.dataId,C.backend)}disposeVariables(){for(const b in this.state.registeredVariables){const C=this.state.registeredVariables[b];this.disposeVariable(C)}}disposeVariable(b){this.disposeTensor(b),this.state.registeredVariables[b.name]!=null&&delete this.state.registeredVariables[b.name]}memory(){const b=this.backend.memory();return b.numTensors=this.state.numTensors,b.numDataBuffers=this.state.numDataBuffers,b.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(b.unreliable=!0,b.reasons==null&&(b.reasons=[]),b.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),b}async profile(b){this.state.profiling=!0;const C=this.state.numBytes,w=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await b(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(N=>N.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-C,this.state.activeProfile.newTensors=this.state.numTensors-w;for(const N of this.state.activeProfile.kernels)N.kernelTimeMs=await N.kernelTimeMs,N.extraInfo=await N.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(b,C,w,N,T,F){const S={id:this.state.nextTapeNodeId++,kernelName:b,inputs:C,outputs:w,saved:T},I=(0,i.getGradient)(b);I!=null&&(N=I.gradFunc),N!=null&&(S.gradient=j=>(j=j.map((D,O)=>{if(D==null){const $=w[O],P=u.makeZerosTypedArray($.size,$.dtype);return this.makeTensor(P,$.shape,$.dtype)}return D}),N(j.length>1?j:j[0],T,F))),this.state.activeTape.push(S)}keep(b){return b.kept=!0,b}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(b){const C={track:[],name:"unnamed scope",id:this.state.nextScopeId++};b&&(C.name=b),this.state.scopeStack.push(C),this.state.activeScope=C}endScope(b){const C=(0,l.getTensorsInContainer)(b),w=new Set(C.map(T=>T.id));for(let T=0;T<this.state.activeScope.track.length;T++){const F=this.state.activeScope.track[T];!F.kept&&!w.has(F.id)&&F.dispose()}const N=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],C.forEach(T=>{!T.kept&&T.scopeId===N.id&&this.track(T)})}gradients(b,C,w,N=!1){if(u.assert(C.length>0,()=>"gradients() received an empty list of xs."),w!=null&&w.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${w.dtype}'`);const T=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",b));u.assert(T instanceof a.Tensor,()=>"The result y returned by f() must be a tensor.");const F=(0,c.getFilteredNodesXToY)(this.state.activeTape,C,T);if(!N&&F.length===0&&C.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const S={};S[T.id]=w??v(T.shape),(0,c.backpropagateGradients)(S,F,j=>this.tidy(j),y);const I=C.map(j=>S[j.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(j=>{for(const D of j.saved)D.dispose()}),this.state.activeTape=null),{value:T,grads:I}})}customGrad(b){return u.assert(u.isFunction(b),()=>"The f passed in customGrad(f) must be a function."),(...C)=>{u.assert(C.every(S=>S instanceof a.Tensor),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let w;const N={};C.forEach((S,I)=>{N[I]=S});const T=(S,I)=>(w=b(...C,I),u.assert(w.value instanceof a.Tensor,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),u.assert(u.isFunction(w.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),w.value),F=(S,I)=>{const j=w.gradFunc(S,I),D=Array.isArray(j)?j:[j];u.assert(D.length===C.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),u.assert(D.every($=>$ instanceof a.Tensor),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const O={};return D.forEach(($,P)=>{O[P]=()=>$}),O};return this.runKernelFunc({forwardFunc:T,backwardsFunc:F,inputs:N})}}readSync(b){return this.state.tensorInfo.get(b).backend.readSync(b)}read(b){return this.state.tensorInfo.get(b).backend.read(b)}readToGPU(b,C){return this.state.tensorInfo.get(b).backend.readToGPU(b,C)}async time(b){const C=(0,u.now)(),w=await this.backend.time(b);return w.wallMs=(0,u.now)()-C,w}track(b){return this.state.activeScope!=null&&(b.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(b)),b}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new h;for(const b in this.registry)this.disposeRegisteredKernels(b),this.registry[b].dispose(),delete this.registry[b];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}g.nextTensorId=0,g.nextVariableId=0;function v(x){const b=(0,u.makeOnesTypedArray)((0,u.sizeFromShape)(x),"float32");return k.makeTensor(b,x,"float32")}function _(){const x=(0,m.getGlobalNamespace)();if(x._tfengine==null){const b=new d.Environment(x);x._tfengine=new g(b)}return(0,d.setEnvironmentGlobal)(x._tfengine.ENV),(0,a.setTensorTracker)(()=>x._tfengine),x._tfengine}const k=_();function y(x,b){const C={a:x,b};return k.runKernel(f.Add,C)}},{"./backends/backend":"gVYLh","./environment":"7s0uC","./global_util":"gLHUz","./kernel_names":"kYUMv","./kernel_registry":"9w40T","./log":"6Wzwt","./profiler":"hUotE","./tape":"fafaw","./tensor":"hRGZH","./tensor_util":"gj10y","./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gVYLh:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"EPSILON_FLOAT32",()=>r),t.export(s,"EPSILON_FLOAT16",()=>d),t.export(s,"DataStorage",()=>m),t.export(s,"KernelBackend",()=>f);const r=1e-7,d=1e-4;class m{constructor(n,c){this.backend=n,this.dataMover=c,this.data=new WeakMap,this.dataIdsCount=0}get(n){return this.data.has(n)||this.dataMover.moveData(this.backend,n),this.data.get(n)}set(n,c){this.dataIdsCount++,this.data.set(n,c)}has(n){return this.data.has(n)}delete(n){return this.dataIdsCount--,this.data.delete(n)}numDataIds(){return this.dataIdsCount}}class f{refCount(n){return i("refCount")}incRef(n){return i("incRef")}timerAvailable(){return!0}time(n){return i("time")}read(n){return i("read")}readSync(n){return i("readSync")}readToGPU(n,c){return i("readToGPU")}numDataIds(){return i("numDataIds")}disposeData(n,c){return i("disposeData")}write(n,c,a){return i("write")}move(n,c,a,l,u){return i("move")}createTensorFromGPUData(n,c,a){return i("createTensorFromGPUData")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return this.floatPrecision()===32?r:d}dispose(){return i("dispose")}}function i(o){throw new Error(`'${o}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7s0uC":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Environment",()=>f),t.export(s,"getQueryParams",()=>i),t.export(s,"env",()=>c),t.export(s,"ENV",()=>a),t.export(s,"setEnvironmentGlobal",()=>l);var r=e("./util_base"),d=arguments[3];const m="tfjsflags";class f{constructor(p){this.global=d,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(p,h){this.platform!=null&&(c().getBool("IS_TEST")||c().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${p}.`)),this.platformName=p,this.platform=h}registerFlag(p,h,g){if(this.flagRegistry[p]={evaluationFn:h,setHook:g},this.urlFlags[p]!=null){const v=this.urlFlags[p];c().getBool("IS_TEST")||c().getBool("PROD")||console.warn(`Setting feature override from URL ${p}: ${v}.`),this.set(p,v)}}async getAsync(p){return p in this.flags?this.flags[p]:(this.flags[p]=await this.evaluateFlag(p),this.flags[p])}get(p){if(p in this.flags)return this.flags[p];const h=this.evaluateFlag(p);if((0,r.isPromise)(h))throw new Error(`Flag ${p} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[p]=h,this.flags[p]}getNumber(p){return this.get(p)}getBool(p){return this.get(p)}getString(p){return this.get(p)}getFlags(){return this.flags}get features(){return this.flags}set(p,h){if(this.flagRegistry[p]==null)throw new Error(`Cannot set flag ${p} as it has not been registered.`);this.flags[p]=h,this.flagRegistry[p].setHook!=null&&this.flagRegistry[p].setHook(h)}evaluateFlag(p){if(this.flagRegistry[p]==null)throw new Error(`Cannot evaluate flag '${p}': no evaluation function found.`);return this.flagRegistry[p].evaluationFn()}setFlags(p){this.flags=Object.assign({},p)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;const p=this.getQueryParams(this.global.location.search);m in p&&p[m].split(",").forEach(g=>{const[v,_]=g.split(":");this.urlFlags[v]=n(v,_)})}}function i(u){const p={};return u.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(h,...g)=>(o(p,g[0],g[1]),g.join("="))),p}function o(u,p,h){u[decodeURIComponent(p)]=decodeURIComponent(h||"")}function n(u,p){const h=p.toLowerCase();return h==="true"||h==="false"?h==="true":`${+h}`===h?+h:p}function c(){return a}let a=null;function l(u){a=u}},{"./util_base":"7Tgdr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7Tgdr":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"shuffle",()=>r),t.export(s,"shuffleCombo",()=>d),t.export(s,"clamp",()=>m),t.export(s,"nearestLargerEven",()=>f),t.export(s,"swap",()=>i),t.export(s,"sum",()=>o),t.export(s,"randUniform",()=>n),t.export(s,"distSquared",()=>c),t.export(s,"assert",()=>a),t.export(s,"assertShapesMatch",()=>l),t.export(s,"assertNonNull",()=>u),t.export(s,"sizeFromShape",()=>p),t.export(s,"isScalarShape",()=>h),t.export(s,"arraysEqualWithNull",()=>g),t.export(s,"arraysEqual",()=>v),t.export(s,"isInt",()=>_),t.export(s,"tanh",()=>k),t.export(s,"sizeToSquarishShape",()=>y),t.export(s,"createShuffledIndices",()=>x),t.export(s,"rightPad",()=>b),t.export(s,"repeatedTry",()=>C),t.export(s,"inferFromImplicitShape",()=>w),t.export(s,"parseAxisParam",()=>N),t.export(s,"squeezeShape",()=>T),t.export(s,"getTypedArrayFromDType",()=>F),t.export(s,"getArrayFromDType",()=>S),t.export(s,"checkConversionForErrors",()=>I),t.export(s,"isValidDtype",()=>j),t.export(s,"hasEncodingLoss",()=>D),t.export(s,"bytesPerElement",()=>O),t.export(s,"bytesFromStringArray",()=>$),t.export(s,"isString",()=>P),t.export(s,"isBoolean",()=>R),t.export(s,"isNumber",()=>A),t.export(s,"inferDtype",()=>z),t.export(s,"isFunction",()=>G),t.export(s,"nearestDivisor",()=>L),t.export(s,"computeStrides",()=>M),t.export(s,"toNestedArray",()=>K),t.export(s,"convertBackendValuesAndArrayBuffer",()=>W),t.export(s,"makeOnesTypedArray",()=>H),t.export(s,"makeZerosTypedArray",()=>Z),t.export(s,"makeZerosNestedTypedArray",()=>Q),t.export(s,"assertNonNegativeIntegerDimensions",()=>te),t.export(s,"locToIndex",()=>ee),t.export(s,"indexToLoc",()=>ne),t.export(s,"isPromise",()=>se);function r(X){let U=X.length,Y=0;for(;U>0;)Y=Math.random()*U|0,U--,i(X,U,Y)}function d(X,U){if(X.length!==U.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${X.length}Second array length was ${U.length}`);let Y=X.length,J=0;for(;Y>0;)J=Math.random()*Y|0,Y--,i(X,Y,J),i(U,Y,J)}function m(X,U,Y){return Math.max(X,Math.min(U,Y))}function f(X){return X%2==0?X:X+1}function i(X,U,Y){const J=X[U];X[U]=X[Y],X[Y]=J}function o(X){let U=0;for(let Y=0;Y<X.length;Y++)U+=X[Y];return U}function n(X,U){const Y=Math.random();return U*Y+(1-Y)*X}function c(X,U){let Y=0;for(let J=0;J<X.length;J++){const q=Number(X[J])-Number(U[J]);Y+=q*q}return Y}function a(X,U){if(!X)throw new Error(typeof U=="string"?U:U())}function l(X,U,Y=""){a(v(X,U),()=>Y+` Shapes ${X} and ${U} must match`)}function u(X){a(X!=null,()=>"The input to the tensor constructor must be a non-null value.")}function p(X){if(X.length===0)return 1;let U=X[0];for(let Y=1;Y<X.length;Y++)U*=X[Y];return U}function h(X){return X.length===0}function g(X,U){if(X===U)return!0;if(X==null||U==null||X.length!==U.length)return!1;for(let Y=0;Y<X.length;Y++)if(X[Y]!==null&&U[Y]!==null&&X[Y]!==U[Y])return!1;return!0}function v(X,U){if(X===U)return!0;if(X==null||U==null||X.length!==U.length)return!1;for(let Y=0;Y<X.length;Y++)if(X[Y]!==U[Y])return!1;return!0}function _(X){return X%1==0}function k(X){if(Math.tanh!=null)return Math.tanh(X);if(X===1/0)return 1;if(X===-1/0)return-1;{const U=Math.exp(2*X);return(U-1)/(U+1)}}function y(X){const U=Math.ceil(Math.sqrt(X));return[U,Math.ceil(X/U)]}function x(X){const U=new Uint32Array(X);for(let Y=0;Y<X;++Y)U[Y]=Y;return r(U),U}function b(X,U){return U<=X.length?X:X+" ".repeat(U-X.length)}function C(X,U=q=>0,Y,J){return new Promise((q,ae)=>{let ie=0;const le=()=>{if(X()){q();return}ie++;const ue=U(ie);if(Y!=null&&ie>=Y){ae();return}J!=null?J(le,ue):setTimeout(le,ue)};le()})}function w(X,U){let Y=1,J=-1;for(let ae=0;ae<X.length;++ae)if(X[ae]>=0)Y*=X[ae];else if(X[ae]===-1){if(J!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${J} and dim ${ae}`);J=ae}else if(X[ae]<0)throw Error(`Shapes can not be < 0. Found ${X[ae]} at dim ${ae}`);if(J===-1){if(U>0&&U!==Y)throw Error(`Size(${U}) must match the product of shape ${X}`);return X}if(Y===0)throw Error(`Cannot infer the missing size in [${X}] when there are 0 elements`);if(U%Y!=0)throw Error(`The implicit shape can't be a fractional number. Got ${U} / ${Y}`);const q=X.slice();return q[J]=U/Y,q}function N(X,U){const Y=U.length;return X=X==null?U.map((J,q)=>q):[].concat(X),a(X.every(J=>J>=-Y&&J<Y),()=>`All values in axis param must be in range [-${Y}, ${Y}) but got axis ${X}`),a(X.every(J=>_(J)),()=>`All values in axis param must be integers but got axis ${X}`),X.map(J=>J<0?Y+J:J)}function T(X,U){const Y=[],J=[],q=U!=null&&Array.isArray(U)&&U.length===0,ae=U==null||q?null:N(U,X).sort();let ie=0;for(let le=0;le<X.length;++le){if(ae!=null){if(ae[ie]===le&&X[le]!==1)throw new Error(`Can't squeeze axis ${le} since its dim '${X[le]}' is not 1`);(ae[ie]==null||ae[ie]>le)&&X[le]===1&&(Y.push(X[le]),J.push(le)),ae[ie]<=le&&ie++}X[le]!==1&&(Y.push(X[le]),J.push(le))}return{newShape:Y,keptDims:J}}function F(X,U){return S(X,U)}function S(X,U){let Y=null;if(X==null||X==="float32")Y=new Float32Array(U);else if(X==="int32")Y=new Int32Array(U);else if(X==="bool")Y=new Uint8Array(U);else if(X==="string")Y=new Array(U);else throw new Error(`Unknown data type ${X}`);return Y}function I(X,U){for(let Y=0;Y<X.length;Y++){const J=X[Y];if(isNaN(J)||!isFinite(J))throw Error(`A tensor of type ${U} being uploaded contains ${J}.`)}}function j(X){return X==="bool"||X==="complex64"||X==="float32"||X==="int32"||X==="string"}function D(X,U){return!(U==="complex64"||U==="float32"&&X!=="complex64"||U==="int32"&&X!=="float32"&&X!=="complex64"||U==="bool"&&X==="bool")}function O(X){if(X==="float32"||X==="int32")return 4;if(X==="complex64")return 8;if(X==="bool")return 1;throw new Error(`Unknown dtype ${X}`)}function $(X){if(X==null)return 0;let U=0;return X.forEach(Y=>U+=Y.length),U}function P(X){return typeof X=="string"||X instanceof String}function R(X){return typeof X=="boolean"}function A(X){return typeof X=="number"}function z(X){return Array.isArray(X)?z(X[0]):X instanceof Float32Array?"float32":X instanceof Int32Array||X instanceof Uint8Array||X instanceof Uint8ClampedArray?"int32":A(X)?"float32":P(X)?"string":R(X)?"bool":"float32"}function G(X){return!!(X&&X.constructor&&X.call&&X.apply)}function L(X,U){for(let Y=U;Y<X;++Y)if(X%Y==0)return Y;return X}function M(X){const U=X.length;if(U<2)return[];const Y=new Array(U-1);Y[U-2]=X[U-1];for(let J=U-3;J>=0;--J)Y[J]=Y[J+1]*X[J+1];return Y}function V(X,U,Y,J=!1){const q=new Array;if(U.length===1){const ae=U[0]*(J?2:1);for(let ie=0;ie<ae;ie++)q[ie]=Y[X+ie]}else{const ae=U[0],ie=U.slice(1),le=ie.reduce((ue,B)=>ue*B)*(J?2:1);for(let ue=0;ue<ae;ue++)q[ue]=V(X+ue*le,ie,Y,J)}return q}function K(X,U,Y=!1){if(X.length===0)return U[0];const J=X.reduce((q,ae)=>q*ae)*(Y?2:1);if(J===0)return[];if(J!==U.length)throw new Error(`[${X}] does not match the input size ${U.length}${Y?" for a complex tensor":""}.`);return V(0,X,U,Y)}function W(X,U){if(Array.isArray(X))return X;if(U==="float32")return X instanceof Float32Array?X:new Float32Array(X);if(U==="int32")return X instanceof Int32Array?X:new Int32Array(X);if(U==="bool"||U==="string")return Uint8Array.from(new Int32Array(X));throw new Error(`Unknown dtype ${U}`)}function H(X,U){const Y=Z(X,U);for(let J=0;J<Y.length;J++)Y[J]=1;return Y}function Z(X,U){if(U==null||U==="float32"||U==="complex64")return new Float32Array(X);if(U==="int32")return new Int32Array(X);if(U==="bool")return new Uint8Array(X);throw new Error(`Unknown data type ${U}`)}function Q(X,U){const Y=X.reduce((J,q)=>J*q,1);if(U==null||U==="float32")return K(X,new Float32Array(Y));if(U==="int32")return K(X,new Int32Array(Y));if(U==="bool")return K(X,new Uint8Array(Y));throw new Error(`Unknown data type ${U}`)}function te(X){X.forEach(U=>{a(Number.isInteger(U)&&U>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${X}].`)})}function ee(X,U,Y){if(U===0)return 0;if(U===1)return X[0];let J=X[X.length-1];for(let q=0;q<X.length-1;++q)J+=Y[q]*X[q];return J}function ne(X,U,Y){if(U===0)return[];if(U===1)return[X];const J=new Array(U);for(let q=0;q<J.length-1;++q)J[q]=Math.floor(X/Y[q]),X-=J[q]*Y[q];return J[J.length-1]=X,J}function se(X){return X&&X.then&&typeof X.then=="function"}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gLHUz:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getGlobalNamespace",()=>f),t.export(s,"getGlobal",()=>o);var r=arguments[3],d=e("585141946453e563");let m;function f(){if(m==null){let n;if(typeof window!="undefined")n=window;else if(typeof r!="undefined")n=r;else if(typeof d!="undefined")n=d;else if(typeof self!="undefined")n=self;else throw new Error("Could not find a global object");m=n}return m}function i(){const n=f();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function o(n,c){const a=i();if(a.has(n))return a.get(n);{const l=c();return a.set(n,l),a.get(n)}}},{"585141946453e563":"5xM3z","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kYUMv:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Abs",()=>r),t.export(s,"Acos",()=>d),t.export(s,"Acosh",()=>m),t.export(s,"Add",()=>f),t.export(s,"AddN",()=>i),t.export(s,"All",()=>o),t.export(s,"Any",()=>n),t.export(s,"ArgMax",()=>c),t.export(s,"ArgMin",()=>a),t.export(s,"Asin",()=>l),t.export(s,"Asinh",()=>u),t.export(s,"Atan",()=>p),t.export(s,"Atanh",()=>h),t.export(s,"Atan2",()=>g),t.export(s,"AvgPool",()=>v),t.export(s,"AvgPoolGrad",()=>_),t.export(s,"AvgPool3D",()=>k),t.export(s,"AvgPool3DGrad",()=>y),t.export(s,"BatchMatMul",()=>x),t.export(s,"BatchToSpaceND",()=>b),t.export(s,"Bincount",()=>C),t.export(s,"BitwiseAnd",()=>w),t.export(s,"BroadcastTo",()=>N),t.export(s,"BroadcastArgs",()=>T),t.export(s,"Cast",()=>F),t.export(s,"Ceil",()=>S),t.export(s,"ClipByValue",()=>I),t.export(s,"Complex",()=>j),t.export(s,"ComplexAbs",()=>D),t.export(s,"Concat",()=>O),t.export(s,"Conv2D",()=>$),t.export(s,"Conv2DBackpropFilter",()=>P),t.export(s,"Conv2DBackpropInput",()=>R),t.export(s,"Conv3D",()=>A),t.export(s,"Conv3DBackpropFilterV2",()=>z),t.export(s,"Conv3DBackpropInputV2",()=>G),t.export(s,"Cos",()=>L),t.export(s,"Cosh",()=>M),t.export(s,"Cumprod",()=>V),t.export(s,"Cumsum",()=>K),t.export(s,"CropAndResize",()=>W),t.export(s,"DenseBincount",()=>H),t.export(s,"DepthToSpace",()=>Z),t.export(s,"DepthwiseConv2dNative",()=>Q),t.export(s,"DepthwiseConv2dNativeBackpropFilter",()=>te),t.export(s,"DepthwiseConv2dNativeBackpropInput",()=>ee),t.export(s,"Diag",()=>ne),t.export(s,"Dilation2D",()=>se),t.export(s,"Dilation2DBackpropInput",()=>X),t.export(s,"Dilation2DBackpropFilter",()=>U),t.export(s,"Draw",()=>Y),t.export(s,"RealDiv",()=>J),t.export(s,"Einsum",()=>q),t.export(s,"Elu",()=>ae),t.export(s,"EluGrad",()=>ie),t.export(s,"Erf",()=>le),t.export(s,"Equal",()=>ue),t.export(s,"Exp",()=>B),t.export(s,"ExpandDims",()=>re),t.export(s,"Expm1",()=>oe),t.export(s,"FFT",()=>de),t.export(s,"Fill",()=>fe),t.export(s,"FlipLeftRight",()=>pe),t.export(s,"Floor",()=>me),t.export(s,"FloorDiv",()=>he),t.export(s,"FusedBatchNorm",()=>ge),t.export(s,"GatherV2",()=>ve),t.export(s,"GatherNd",()=>ke),t.export(s,"Greater",()=>_e),t.export(s,"GreaterEqual",()=>ye),t.export(s,"Identity",()=>be),t.export(s,"IFFT",()=>Ce),t.export(s,"Imag",()=>we),t.export(s,"IsFinite",()=>xe),t.export(s,"IsInf",()=>Ne),t.export(s,"IsNan",()=>Ie),t.export(s,"LeakyRelu",()=>Te),t.export(s,"Less",()=>Ee),t.export(s,"LessEqual",()=>Fe),t.export(s,"LinSpace",()=>De),t.export(s,"Log",()=>Ae),t.export(s,"Log1p",()=>Pe),t.export(s,"LogicalAnd",()=>Re),t.export(s,"LogicalNot",()=>$e),t.export(s,"LogicalOr",()=>Oe),t.export(s,"LogicalXor",()=>Se),t.export(s,"LogSoftmax",()=>je),t.export(s,"LowerBound",()=>ze),t.export(s,"LRN",()=>Ge),t.export(s,"LRNGrad",()=>Le),t.export(s,"MatrixBandPart",()=>Me),t.export(s,"Max",()=>Ve),t.export(s,"Maximum",()=>Ue),t.export(s,"MaxPool",()=>Be),t.export(s,"MaxPoolGrad",()=>He),t.export(s,"MaxPool3D",()=>We),t.export(s,"MaxPool3DGrad",()=>Ke),t.export(s,"MaxPoolWithArgmax",()=>ce),t.export(s,"Mean",()=>Ye),t.export(s,"Min",()=>Xe),t.export(s,"Minimum",()=>Ze),t.export(s,"MirrorPad",()=>Qe),t.export(s,"Mod",()=>Je),t.export(s,"Multinomial",()=>qe),t.export(s,"Multiply",()=>et),t.export(s,"Neg",()=>tt),t.export(s,"NotEqual",()=>st),t.export(s,"NonMaxSuppressionV3",()=>rt),t.export(s,"NonMaxSuppressionV4",()=>nt),t.export(s,"NonMaxSuppressionV5",()=>at),t.export(s,"OnesLike",()=>ot),t.export(s,"OneHot",()=>lt),t.export(s,"Pack",()=>it),t.export(s,"PadV2",()=>ct),t.export(s,"Pool",()=>ut),t.export(s,"Pow",()=>pt),t.export(s,"Prelu",()=>dt),t.export(s,"Prod",()=>ft),t.export(s,"RaggedGather",()=>mt),t.export(s,"RaggedRange",()=>ht),t.export(s,"RaggedTensorToTensor",()=>gt),t.export(s,"Range",()=>vt),t.export(s,"Real",()=>_t),t.export(s,"Reciprocal",()=>kt),t.export(s,"Relu",()=>yt),t.export(s,"Reshape",()=>bt),t.export(s,"ResizeNearestNeighbor",()=>xt),t.export(s,"ResizeNearestNeighborGrad",()=>Ct),t.export(s,"ResizeBilinear",()=>wt),t.export(s,"ResizeBilinearGrad",()=>Nt),t.export(s,"Relu6",()=>It),t.export(s,"Reverse",()=>St),t.export(s,"Round",()=>jt),t.export(s,"Rsqrt",()=>Tt),t.export(s,"ScatterNd",()=>Et),t.export(s,"TensorScatterUpdate",()=>Ft),t.export(s,"SearchSorted",()=>$t),t.export(s,"Select",()=>Ot),t.export(s,"Selu",()=>zt),t.export(s,"Slice",()=>Gt),t.export(s,"Sin",()=>Lt),t.export(s,"Sinh",()=>Mt),t.export(s,"Sign",()=>Vt),t.export(s,"Sigmoid",()=>Ut),t.export(s,"Softplus",()=>Bt),t.export(s,"Sqrt",()=>Ht),t.export(s,"Sum",()=>Wt),t.export(s,"SpaceToBatchND",()=>Kt),t.export(s,"SplitV",()=>Yt),t.export(s,"Softmax",()=>Xt),t.export(s,"SparseFillEmptyRows",()=>Zt),t.export(s,"SparseReshape",()=>Qt),t.export(s,"SparseSegmentMean",()=>Jt),t.export(s,"SparseSegmentSum",()=>qt),t.export(s,"SparseToDense",()=>es),t.export(s,"SquaredDifference",()=>ts),t.export(s,"Square",()=>ss),t.export(s,"StaticRegexReplace",()=>rs),t.export(s,"StridedSlice",()=>ns),t.export(s,"StringNGrams",()=>Dt),t.export(s,"StringSplit",()=>At),t.export(s,"StringToHashBucketFast",()=>Pt),t.export(s,"Sub",()=>Rt),t.export(s,"Tan",()=>as),t.export(s,"Tanh",()=>os),t.export(s,"Tile",()=>ls),t.export(s,"TopK",()=>is),t.export(s,"Transform",()=>cs),t.export(s,"Transpose",()=>us),t.export(s,"Unique",()=>ps),t.export(s,"Unpack",()=>ds),t.export(s,"UnsortedSegmentSum",()=>fs),t.export(s,"UpperBound",()=>hs),t.export(s,"ZerosLike",()=>gs),t.export(s,"Step",()=>vs),t.export(s,"FromPixels",()=>_s),t.export(s,"RotateWithOffset",()=>ks),t.export(s,"_FusedMatMul",()=>ys),t.export(s,"FusedConv2D",()=>bs),t.export(s,"FusedDepthwiseConv2D",()=>xs);const r="Abs",d="Acos",m="Acosh",f="Add",i="AddN",o="All",n="Any",c="ArgMax",a="ArgMin",l="Asin",u="Asinh",p="Atan",h="Atanh",g="Atan2",v="AvgPool",_="AvgPoolGrad",k="AvgPool3D",y="AvgPool3DGrad",x="BatchMatMul",b="BatchToSpaceND",C="Bincount",w="BitwiseAnd",N="BroadcastTo",T="BroadcastArgs",F="Cast",S="Ceil",I="ClipByValue",j="Complex",D="ComplexAbs",O="Concat",$="Conv2D",P="Conv2DBackpropFilter",R="Conv2DBackpropInput",A="Conv3D",z="Conv3DBackpropFilterV2",G="Conv3DBackpropInputV2",L="Cos",M="Cosh",V="Cumprod",K="Cumsum",W="CropAndResize",H="DenseBincount",Z="DepthToSpace",Q="DepthwiseConv2dNative",te="DepthwiseConv2dNativeBackpropFilter",ee="DepthwiseConv2dNativeBackpropInput",ne="Diag",se="Dilation2D",X="Dilation2DBackpropInput",U="Dilation2DBackpropFilter",Y="Draw",J="RealDiv",q="Einsum",ae="Elu",ie="EluGrad",le="Erf",ue="Equal",B="Exp",re="ExpandDims",oe="Expm1",de="FFT",fe="Fill",pe="FlipLeftRight",me="Floor",he="FloorDiv",ge="FusedBatchNorm",ve="GatherV2",ke="GatherNd",_e="Greater",ye="GreaterEqual",be="Identity",Ce="IFFT",we="Imag",xe="IsFinite",Ne="IsInf",Ie="IsNan",Te="LeakyRelu",Ee="Less",Fe="LessEqual",De="LinSpace",Ae="Log",Pe="Log1p",Re="LogicalAnd",$e="LogicalNot",Oe="LogicalOr",Se="LogicalXor",je="LogSoftmax",ze="LowerBound",Ge="LRN",Le="LRNGrad",Me="MatrixBandPart",Ve="Max",Ue="Maximum",Be="MaxPool",He="MaxPoolGrad",We="MaxPool3D",Ke="MaxPool3DGrad",ce="MaxPoolWithArgmax",Ye="Mean",Xe="Min",Ze="Minimum",Qe="MirrorPad",Je="Mod",qe="Multinomial",et="Multiply",tt="Neg",st="NotEqual",rt="NonMaxSuppressionV3",nt="NonMaxSuppressionV4",at="NonMaxSuppressionV5",ot="OnesLike",lt="OneHot",it="Pack",ct="PadV2",ut="Pool",pt="Pow",dt="Prelu",ft="Prod",mt="RaggedGather",ht="RaggedRange",gt="RaggedTensorToTensor",vt="Range",_t="Real",kt="Reciprocal",yt="Relu",bt="Reshape",xt="ResizeNearestNeighbor",Ct="ResizeNearestNeighborGrad",wt="ResizeBilinear",Nt="ResizeBilinearGrad",It="Relu6",St="Reverse",jt="Round",Tt="Rsqrt",Et="ScatterNd",Ft="TensorScatterUpdate",$t="SearchSorted",Ot="Select",zt="Selu",Gt="Slice",Lt="Sin",Mt="Sinh",Vt="Sign",Ut="Sigmoid",Bt="Softplus",Ht="Sqrt",Wt="Sum",Kt="SpaceToBatchND",Yt="SplitV",Xt="Softmax",Zt="SparseFillEmptyRows",Qt="SparseReshape",Jt="SparseSegmentMean",qt="SparseSegmentSum",es="SparseToDense",ts="SquaredDifference",ss="Square",rs="StaticRegexReplace",ns="StridedSlice",Dt="StringNGrams",At="StringSplit",Pt="StringToHashBucketFast",Rt="Sub",as="Tan",os="Tanh",ls="Tile",is="TopK",cs="Transform",us="Transpose",ps="Unique",ds="Unpack",fs="UnsortedSegmentSum",hs="UpperBound",gs="ZerosLike",vs="Step",_s="FromPixels",ks="RotateWithOffset",ys="_FusedMatMul",bs="FusedConv2D",xs="FusedDepthwiseConv2D"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9w40T":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getKernel",()=>o),t.export(s,"getGradient",()=>n),t.export(s,"getKernelsForBackend",()=>c),t.export(s,"registerKernel",()=>a),t.export(s,"registerGradient",()=>l),t.export(s,"unregisterKernel",()=>u),t.export(s,"unregisterGradient",()=>p),t.export(s,"copyRegisteredKernels",()=>h);var r=e("./environment"),d=e("./global_util"),m=e("./log");const f=(0,d.getGlobal)("kernelRegistry",()=>new Map),i=(0,d.getGlobal)("gradRegistry",()=>new Map);function o(v,_){const k=g(v,_);return f.get(k)}function n(v){return i.get(v)}function c(v){const _=f.entries(),k=[];for(;;){const{done:y,value:x}=_.next();if(y)break;const[b,C]=x,[w]=b.split("_");w===v&&k.push(C)}return k}function a(v){const{kernelName:_,backendName:k}=v,y=g(_,k);f.has(y)&&m.warn(`The kernel '${_}' for backend '${k}' is already registered`),f.set(y,v)}function l(v){const{kernelName:_}=v;i.has(_)&&(0,r.env)().getBool("DEBUG")&&m.warn(`Overriding the gradient for '${_}'`),i.set(_,v)}function u(v,_){const k=g(v,_);if(!f.has(k))throw new Error(`The kernel '${v}' for backend '${_}' is not registered`);f.delete(k)}function p(v){if(!i.has(v))throw new Error(`The gradient '${v}' for backend is not registered`);i.delete(v)}function h(v,_){c(v).forEach(y=>{const x=Object.assign({},y,{backendName:_});a(x)})}function g(v,_){return`${_}_${v}`}},{"./environment":"7s0uC","./global_util":"gLHUz","./log":"6Wzwt","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6Wzwt":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"warn",()=>d),t.export(s,"log",()=>m);var r=e("./environment");function d(...f){(0,r.env)().getBool("IS_TEST")||(0,r.env)().getBool("PROD")||console.warn(...f)}function m(...f){(0,r.env)().getBool("IS_TEST")||(0,r.env)().getBool("PROD")||console.log(...f)}},{"./environment":"7s0uC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hUotE:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Profiler",()=>m),t.export(s,"checkComputationForErrors",()=>f),t.export(s,"Logger",()=>i);var r=e("./environment"),d=e("./util");class m{constructor(n,c){this.backendTimer=n,this.logger=c,c==null&&(this.logger=new i)}profileKernel(n,c,a){let l;const u=()=>{l=a()};let p;const h=d.now();if(this.backendTimer.timerAvailable())p=this.backendTimer.time(u);else{u();for(const v of l)v.dataSync();p=Promise.resolve({kernelMs:d.now()-h})}if((0,r.env)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let v=0;v<l.length;v++){const _=l[v];_.data().then(k=>{f(k,_.dtype,n)})}return{kernelName:n,outputs:l,inputs:c,timeMs:p.then(v=>v.kernelMs),extraInfo:p.then(v=>v.getExtraProfileInfo!=null?v.getExtraProfileInfo():"")}}logKernelProfile(n){const{kernelName:c,outputs:a,timeMs:l,inputs:u,extraInfo:p}=n;a.forEach(h=>{Promise.all([h.data(),l,p]).then(g=>{this.logger.logKernelProfile(c,h,g[0],g[1],u,g[2])})})}}function f(o,n,c){if(n!=="float32")return!1;for(let a=0;a<o.length;a++){const l=o[a];if(isNaN(l)||!isFinite(l))return console.warn(`Found ${l} in the result of '${c}'`),!0}return!1}class i{logKernelProfile(n,c,a,l,u,p){const h=typeof l=="number"?d.rightPad(`${l}ms`,9):l.error,g=d.rightPad(n,25),v=c.rank,_=c.size,k=d.rightPad(c.shape.toString(),14);let y="";for(const x in u){const b=u[x];if(b!=null){const C=b.shape||c.shape,w=C.length;y+=`${x}: ${w}D ${w>0?C:""} `}}console.log(`%c${g}	%c${h}	%c${v}D ${k}	%c${_}	%c${y}	%c${p}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}},{"./environment":"7s0uC","./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hQeVi:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"createScalarValue",()=>i),t.export(s,"toTypedArray",()=>n),t.export(s,"now",()=>c),t.export(s,"fetch",()=>a),t.export(s,"encodeString",()=>l),t.export(s,"decodeString",()=>u),t.export(s,"isTypedArray",()=>p),t.export(s,"flatten",()=>h);var r=e("./environment"),d=e("./platforms/is_typed_array_browser"),m=e("./util_base");t.exportAll(m,s);var f=e("./hash_util");t.exportAll(f,s);function i(g,v){return v==="string"?l(g):n([g],v)}function o(g,v){return g instanceof Float32Array&&v==="float32"||g instanceof Int32Array&&v==="int32"||g instanceof Uint8Array&&v==="bool"}function n(g,v){if(v==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(g)&&(g=h(g)),(0,r.env)().getBool("DEBUG")&&m.checkConversionForErrors(g,v),o(g,v))return g;if(v==null||v==="float32"||v==="complex64")return new Float32Array(g);if(v==="int32")return new Int32Array(g);if(v==="bool"){const _=new Uint8Array(g.length);for(let k=0;k<_.length;++k)Math.round(g[k])!==0&&(_[k]=1);return _}else throw new Error(`Unknown data type ${v}`)}function c(){return(0,r.env)().platform.now()}function a(g,v){return(0,r.env)().platform.fetch(g,v)}function l(g,v="utf-8"){return v=v||"utf-8",(0,r.env)().platform.encode(g,v)}function u(g,v="utf-8"){return v=v||"utf-8",(0,r.env)().platform.decode(g,v)}function p(g){return(0,r.env)().platform.isTypedArray!=null?(0,r.env)().platform.isTypedArray(g):(0,d.isTypedArrayBrowser)(g)}function h(g,v=[],_=!1){if(v==null&&(v=[]),typeof g=="boolean"||typeof g=="number"||typeof g=="string"||m.isPromise(g)||g==null||p(g)&&_)v.push(g);else if(Array.isArray(g)||p(g))for(let k=0;k<g.length;++k)h(g[k],v,_);else{let k=-1;for(const y of Object.keys(g))/^([1-9]+[0-9]*|0)$/.test(y)&&(k=Math.max(k,Number(y)));for(let y=0;y<=k;y++)h(g[y],v,_)}return v}},{"./environment":"7s0uC","./platforms/is_typed_array_browser":"847Qj","./util_base":"7Tgdr","./hash_util":"2Ysct","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"847Qj":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isTypedArrayBrowser",()=>r);function r(d){return d instanceof Float32Array||d instanceof Int32Array||d instanceof Uint8Array||d instanceof Uint8ClampedArray}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2Ysct":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"hexToLong",()=>m),t.export(s,"fingerPrint64",()=>y);var r=e("long");const d=r.default||r;function m(x){return d.fromString(x,!0,16)}const f=m("c3a5c85c97cb3127"),i=m("b492b66fbe98f273"),o=m("9ae16a3b2f90404f");function n(x){return x.xor(x.shru(47))}function c(x,b,C){const w=x.slice(b,b+C);return d.fromBytes(Array.from(w),!0,!0)}function a(x,b){return c(x,b,8)}function l(x,b){return c(x,b,4)}function u(x,b){return b===0?x:x.shru(b).or(x.shl(64-b))}function p(x,b,C=m("9ddfea08eb382d69")){let w=x.xor(b).mul(C);w=w.xor(w.shru(47));let N=b.xor(w).mul(C);return N=N.xor(N.shru(47)),N=N.mul(C),N}function h(x,b,C,w,N,T){N=N.add(x),T=u(T.add(N).add(w),21);const F=N;return N=N.add(b),N=N.add(C),T=T.add(u(N,44)),[N.add(w),T.add(F)]}function g(x,b,C,w){return h(a(x,b),a(x,b+8),a(x,b+16),a(x,b+24),C,w)}function v(x,b=x.length){if(b>=8){const C=o.add(b*2),w=a(x,0).add(o),N=a(x,b-8),T=u(N,37).mul(C).add(w),F=u(w,25).add(N).mul(C);return p(T,F,C)}if(b>=4){const C=o.add(b*2),w=l(x,0);return p(w.shl(3).add(b),l(x,b-4),C)}if(b>0){const C=x[0],w=x[b>>1],N=x[b-1],T=C+(w<<8),F=b+(N<<2);return n(o.mul(T).xor(f.mul(F))).mul(o)}return o}function _(x,b=x.length){const C=o.add(b*2),w=a(x,0).mul(i),N=a(x,8),T=a(x,b-8).mul(C),F=a(x,b-16).mul(o);return p(u(w.add(N),43).add(u(T,30)).add(F),w.add(u(N.add(o),18)).add(T),C)}function k(x,b=x.length){const C=o.add(b*2),w=a(x,0).mul(o),N=a(x,8),T=a(x,b-8).mul(C),F=a(x,b-16).mul(o),S=u(w.add(N),43).add(u(T,30)).add(F),I=p(S,w.add(u(N.add(o),18)).add(T),C),j=a(x,16).mul(C),D=a(x,24),O=S.add(a(x,b-32)).mul(C),$=I.add(a(x,b-24)).mul(C);return p(u(j.add(D),43).add(u(O,30)).add($),j.add(u(D.add(w),18)).add(O),C)}function y(x,b=x.length){const C=d.fromNumber(81,!0);if(b<=32)return b<=16?v(x,b):_(x,b);if(b<=64)return k(x,b);let w=C,N=C.mul(i).add(113),T=n(N.mul(o).add(113)).mul(o),F=[d.UZERO,d.UZERO],S=[d.UZERO,d.UZERO];w=w.mul(o).add(a(x,0));let I=0;const j=(b-1>>6)*64,D=j+(b-1&63)-63;do w=u(w.add(N).add(F[0]).add(a(x,I+8)),37).mul(i),N=u(N.add(F[1]).add(a(x,I+48)),42).mul(i),w=w.xor(S[1]),N=N.add(F[0]).add(a(x,I+40)),T=u(T.add(S[0]),33).mul(i),F=g(x,I,F[1].mul(i),w.add(S[0])),S=g(x,I+32,T.add(S[1]),N.add(a(x,I+16))),[T,w]=[w,T],I+=64;while(I!==j);const O=i.add(T.and(255).shl(1));return I=D,S[0]=S[0].add(b-1&63),F[0]=F[0].add(S[0]),S[0]=S[0].add(F[0]),w=u(w.add(N).add(F[0]).add(a(x,I+8)),37).mul(O),N=u(N.add(F[1]).add(a(x,I+48)),42).mul(O),w=w.xor(S[1].mul(9)),N=N.add(F[0].mul(9).add(a(x,I+40))),T=u(T.add(S[0]),33).mul(O),F=g(x,I,F[1].mul(O),w.add(S[0])),S=g(x,I+32,T.add(S[1]),N.add(a(x,I+16))),[T,w]=[w,T],p(p(F[0],S[0],O).add(n(N).mul(f)).add(T),p(F[1],S[1],O).add(w),O)}},{long:"5Y0Dt","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5Y0Dt":[function(e,E,s){E.exports=r;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(S,I,j){this.low=S|0,this.high=I|0,this.unsigned=!!j}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function d(S){return(S&&S.__isLong__)===!0}r.isLong=d;var m={},f={};function i(S,I){var j,D,O;return I?(S>>>=0,(O=0<=S&&S<256)&&(D=f[S],D)?D:(j=n(S,(S|0)<0?-1:0,!0),O&&(f[S]=j),j)):(S|=0,(O=-128<=S&&S<128)&&(D=m[S],D)?D:(j=n(S,S<0?-1:0,!1),O&&(m[S]=j),j))}r.fromInt=i;function o(S,I){if(isNaN(S))return I?y:k;if(I){if(S<0)return y;if(S>=g)return N}else{if(S<=-v)return T;if(S+1>=v)return w}return S<0?o(-S,I).neg():n(S%h|0,S/h|0,I)}r.fromNumber=o;function n(S,I,j){return new r(S,I,j)}r.fromBits=n;var c=Math.pow;function a(S,I,j){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return k;if(typeof I=="number"?(j=I,I=!1):I=!!I,j=j||10,j<2||36<j)throw RangeError("radix");var D;if((D=S.indexOf("-"))>0)throw Error("interior hyphen");if(D===0)return a(S.substring(1),I,j).neg();for(var O=o(c(j,8)),$=k,P=0;P<S.length;P+=8){var R=Math.min(8,S.length-P),A=parseInt(S.substring(P,P+R),j);if(R<8){var z=o(c(j,R));$=$.mul(z).add(o(A))}else $=$.mul(O),$=$.add(o(A))}return $.unsigned=I,$}r.fromString=a;function l(S,I){return typeof S=="number"?o(S,I):typeof S=="string"?a(S,I):n(S.low,S.high,typeof I=="boolean"?I:S.unsigned)}r.fromValue=l;var u=65536,p=16777216,h=u*u,g=h*h,v=g/2,_=i(p),k=i(0);r.ZERO=k;var y=i(0,!0);r.UZERO=y;var x=i(1);r.ONE=x;var b=i(1,!0);r.UONE=b;var C=i(-1);r.NEG_ONE=C;var w=n(-1,2147483647,!1);r.MAX_VALUE=w;var N=n(-1,-1,!0);r.MAX_UNSIGNED_VALUE=N;var T=n(0,-2147483648,!1);r.MIN_VALUE=T;var F=r.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},F.toString=function(I){if(I=I||10,I<2||36<I)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(T)){var j=o(I),D=this.div(j),O=D.mul(j).sub(this);return D.toString(I)+O.toInt().toString(I)}else return"-"+this.neg().toString(I);for(var $=o(c(I,6),this.unsigned),P=this,R="";;){var A=P.div($),z=P.sub(A.mul($)).toInt()>>>0,G=z.toString(I);if(P=A,P.isZero())return G+R;for(;G.length<6;)G="0"+G;R=""+G+R}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var I=this.high!=0?this.high:this.low,j=31;j>0&&(I&1<<j)==0;j--);return this.high!=0?j+33:j+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)==1},F.isEven=function(){return(this.low&1)==0},F.equals=function(I){return d(I)||(I=l(I)),this.unsigned!==I.unsigned&&this.high>>>31==1&&I.high>>>31==1?!1:this.high===I.high&&this.low===I.low},F.eq=F.equals,F.notEquals=function(I){return!this.eq(I)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(I){return this.comp(I)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(I){return this.comp(I)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(I){return this.comp(I)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(I){return this.comp(I)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(I){if(d(I)||(I=l(I)),this.eq(I))return 0;var j=this.isNegative(),D=I.isNegative();return j&&!D?-1:!j&&D?1:this.unsigned?I.high>>>0>this.high>>>0||I.high===this.high&&I.low>>>0>this.low>>>0?-1:1:this.sub(I).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(x)},F.neg=F.negate,F.add=function(I){d(I)||(I=l(I));var j=this.high>>>16,D=this.high&65535,O=this.low>>>16,$=this.low&65535,P=I.high>>>16,R=I.high&65535,A=I.low>>>16,z=I.low&65535,G=0,L=0,M=0,V=0;return V+=$+z,M+=V>>>16,V&=65535,M+=O+A,L+=M>>>16,M&=65535,L+=D+R,G+=L>>>16,L&=65535,G+=j+P,G&=65535,n(M<<16|V,G<<16|L,this.unsigned)},F.subtract=function(I){return d(I)||(I=l(I)),this.add(I.neg())},F.sub=F.subtract,F.multiply=function(I){if(this.isZero())return k;if(d(I)||(I=l(I)),t){var j=t.mul(this.low,this.high,I.low,I.high);return n(j,t.get_high(),this.unsigned)}if(I.isZero())return k;if(this.eq(T))return I.isOdd()?T:k;if(I.eq(T))return this.isOdd()?T:k;if(this.isNegative())return I.isNegative()?this.neg().mul(I.neg()):this.neg().mul(I).neg();if(I.isNegative())return this.mul(I.neg()).neg();if(this.lt(_)&&I.lt(_))return o(this.toNumber()*I.toNumber(),this.unsigned);var D=this.high>>>16,O=this.high&65535,$=this.low>>>16,P=this.low&65535,R=I.high>>>16,A=I.high&65535,z=I.low>>>16,G=I.low&65535,L=0,M=0,V=0,K=0;return K+=P*G,V+=K>>>16,K&=65535,V+=$*G,M+=V>>>16,V&=65535,V+=P*z,M+=V>>>16,V&=65535,M+=O*G,L+=M>>>16,M&=65535,M+=$*z,L+=M>>>16,M&=65535,M+=P*A,L+=M>>>16,M&=65535,L+=D*G+O*z+$*A+P*R,L&=65535,n(V<<16|K,L<<16|M,this.unsigned)},F.mul=F.multiply,F.divide=function(I){if(d(I)||(I=l(I)),I.isZero())throw Error("division by zero");if(t){if(!this.unsigned&&this.high===-2147483648&&I.low===-1&&I.high===-1)return this;var j=(this.unsigned?t.div_u:t.div_s)(this.low,this.high,I.low,I.high);return n(j,t.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?y:k;var D,O,$;if(this.unsigned){if(I.unsigned||(I=I.toUnsigned()),I.gt(this))return y;if(I.gt(this.shru(1)))return b;$=y}else{if(this.eq(T)){if(I.eq(x)||I.eq(C))return T;if(I.eq(T))return x;var P=this.shr(1);return D=P.div(I).shl(1),D.eq(k)?I.isNegative()?x:C:(O=this.sub(I.mul(D)),$=D.add(O.div(I)),$)}else if(I.eq(T))return this.unsigned?y:k;if(this.isNegative())return I.isNegative()?this.neg().div(I.neg()):this.neg().div(I).neg();if(I.isNegative())return this.div(I.neg()).neg();$=k}for(O=this;O.gte(I);){D=Math.max(1,Math.floor(O.toNumber()/I.toNumber()));for(var R=Math.ceil(Math.log(D)/Math.LN2),A=R<=48?1:c(2,R-48),z=o(D),G=z.mul(I);G.isNegative()||G.gt(O);)D-=A,z=o(D,this.unsigned),G=z.mul(I);z.isZero()&&(z=x),$=$.add(z),O=O.sub(G)}return $},F.div=F.divide,F.modulo=function(I){if(d(I)||(I=l(I)),t){var j=(this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,I.low,I.high);return n(j,t.get_high(),this.unsigned)}return this.sub(this.div(I).mul(I))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return n(~this.low,~this.high,this.unsigned)},F.and=function(I){return d(I)||(I=l(I)),n(this.low&I.low,this.high&I.high,this.unsigned)},F.or=function(I){return d(I)||(I=l(I)),n(this.low|I.low,this.high|I.high,this.unsigned)},F.xor=function(I){return d(I)||(I=l(I)),n(this.low^I.low,this.high^I.high,this.unsigned)},F.shiftLeft=function(I){return d(I)&&(I=I.toInt()),(I&=63)==0?this:I<32?n(this.low<<I,this.high<<I|this.low>>>32-I,this.unsigned):n(0,this.low<<I-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(I){return d(I)&&(I=I.toInt()),(I&=63)==0?this:I<32?n(this.low>>>I|this.high<<32-I,this.high>>I,this.unsigned):n(this.high>>I-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(I){if(d(I)&&(I=I.toInt()),I&=63,I===0)return this;var j=this.high;if(I<32){var D=this.low;return n(D>>>I|j<<32-I,j>>>I,this.unsigned)}else return I===32?n(j,0,this.unsigned):n(j>>>I-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?n(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:n(this.low,this.high,!0)},F.toBytes=function(I){return I?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var I=this.high,j=this.low;return[j&255,j>>>8&255,j>>>16&255,j>>>24,I&255,I>>>8&255,I>>>16&255,I>>>24]},F.toBytesBE=function(){var I=this.high,j=this.low;return[I>>>24,I>>>16&255,I>>>8&255,I&255,j>>>24,j>>>16&255,j>>>8&255,j&255]},r.fromBytes=function(I,j,D){return D?r.fromBytesLE(I,j):r.fromBytesBE(I,j)},r.fromBytesLE=function(I,j){return new r(I[0]|I[1]<<8|I[2]<<16|I[3]<<24,I[4]|I[5]<<8|I[6]<<16|I[7]<<24,j)},r.fromBytesBE=function(I,j){return new r(I[4]<<24|I[5]<<16|I[6]<<8|I[7],I[0]<<24|I[1]<<16|I[2]<<8|I[3],j)}},{}],fafaw:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getFilteredNodesXToY",()=>d),t.export(s,"backpropagateGradients",()=>m);var r=e("./util");function d(f,i,o){const n={},c={};for(let p=0;p<i.length;p++)n[i[p].id]=!0;for(let p=0;p<f.length;p++){const h=f[p],g=h.inputs;for(const v in g){const _=g[v];let k=!1;for(let y=0;y<i.length;y++)if(n[_.id]){h.outputs.forEach(x=>n[x.id]=!0),k=!0,c[h.id]=!0;break}if(k)break}}const a={};a[o.id]=!0;const l={};for(let p=f.length-1;p>=0;p--){const h=f[p],g=h.inputs;for(let v=0;v<h.outputs.length;v++)if(a[h.outputs[v].id]){for(const _ in g)a[g[_].id]=!0,l[h.id]=!0;break}}const u=[];for(let p=0;p<f.length;p++){const h=f[p];if(c[h.id]&&l[h.id]){const g={};for(const _ in h.inputs){const k=h.inputs[_];n[k.id]&&(g[_]=k)}const v=Object.assign({},h);v.inputs=g,v.outputs=h.outputs,u.push(v)}}return u}function m(f,i,o,n){for(let c=i.length-1;c>=0;c--){const a=i[c],l=[];if(a.outputs.forEach(p=>{const h=f[p.id];h!=null?l.push(h):l.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const u=a.gradient(l);for(const p in a.inputs){if(!(p in u))throw new Error(`Cannot backprop through input ${p}. Available gradients found: ${Object.keys(u)}.`);const h=o(()=>u[p]());if(h.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${p} must have 'float32' dtype, but has '${h.dtype}'`);const g=a.inputs[p];if(!r.arraysEqual(h.shape,g.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${p}' has shape '${h.shape}', which does not match the shape of the input '${g.shape}'`);if(f[g.id]==null)f[g.id]=h;else{const v=f[g.id];f[g.id]=n(v,h),v.dispose()}}}}},{"./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hRGZH:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TensorBuffer",()=>f),t.export(s,"setTensorTracker",()=>c),t.export(s,"setOpHandler",()=>a),t.export(s,"setDeprecationWarningFn",()=>l),t.export(s,"Tensor",()=>u),t.export(s,"getGlobalTensorClass",()=>p),t.export(s,"Variable",()=>h);var r=e("./global_util"),d=e("./tensor_format"),m=e("./util");class f{constructor(v,_,k){if(this.dtype=_,this.shape=v.slice(),this.size=m.sizeFromShape(v),k!=null){const y=k.length;m.assert(y===this.size,()=>`Length of values '${y}' does not match the size inferred by the shape '${this.size}'.`)}if(_==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=k||m.getArrayFromDType(_,this.size),this.strides=(0,m.computeStrides)(v)}set(v,..._){_.length===0&&(_=[0]),m.assert(_.length===this.rank,()=>`The number of provided coordinates (${_.length}) must match the rank (${this.rank})`);const k=this.locToIndex(_);this.values[k]=v}get(...v){v.length===0&&(v=[0]);let _=0;for(const y of v){if(y<0||y>=this.shape[_]){const x=`Requested out of range element at ${v}.   Buffer shape=${this.shape}`;throw new Error(x)}_++}let k=v[v.length-1];for(let y=0;y<v.length-1;++y)k+=this.strides[y]*v[y];return this.values[k]}locToIndex(v){if(this.rank===0)return 0;if(this.rank===1)return v[0];let _=v[v.length-1];for(let k=0;k<v.length-1;++k)_+=this.strides[k]*v[k];return _}indexToLoc(v){if(this.rank===0)return[];if(this.rank===1)return[v];const _=new Array(this.shape.length);for(let k=0;k<_.length-1;++k)_[k]=Math.floor(v/this.strides[k]),v-=_[k]*this.strides[k];return _[_.length-1]=v,_}get rank(){return this.shape.length}toTensor(){return i().makeTensor(this.values,this.shape,this.dtype)}}let i=null,o=null,n=null;function c(g){i=g}function a(g){o=g}function l(g){n=g}class u{constructor(v,_,k,y){this.kept=!1,this.isDisposedInternal=!1,this.shape=v.slice(),this.dtype=_||"float32",this.size=m.sizeFromShape(v),this.strides=(0,m.computeStrides)(v),this.dataId=k,this.id=y,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const v=await this.data();return o.buffer(this.shape,this.dtype,v)}bufferSync(){return o.buffer(this.shape,this.dtype,this.dataSync())}async array(){const v=await this.data();return(0,m.toNestedArray)(this.shape,v,this.dtype==="complex64")}arraySync(){return(0,m.toNestedArray)(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const v=i().read(this.dataId);if(this.dtype==="string"){const _=await v;try{return _.map(k=>m.decodeString(k))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return v}dataToGPU(v){return this.throwIfDisposed(),i().readToGPU(this.dataId,v)}dataSync(){this.throwIfDisposed();const v=i().readSync(this.dataId);if(this.dtype==="string")try{return v.map(_=>m.decodeString(_))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return v}async bytes(){this.throwIfDisposed();const v=await i().read(this.dataId);return this.dtype==="string"?v:new Uint8Array(v.buffer)}dispose(){this.isDisposed||(i().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(v=!1){return o.print(this,v)}clone(){return this.throwIfDisposed(),o.clone(this)}toString(v=!1){const _=this.dataSync();return(0,d.tensorToString)(_,this.shape,this.dtype,v)}cast(v){return this.throwIfDisposed(),o.cast(this,v)}variable(v=!0,_,k){return this.throwIfDisposed(),i().makeVariable(this,v,_,k)}}Object.defineProperty(u,Symbol.hasInstance,{value:g=>!!g&&g.data!=null&&g.dataSync!=null&&g.throwIfDisposed!=null});function p(){return(0,r.getGlobal)("Tensor",()=>u)}p();class h extends u{constructor(v,_,k,y){super(v.shape,v.dtype,v.dataId,y);this.trainable=_,this.name=k}assign(v){if(v.dtype!==this.dtype)throw new Error(`dtype of the new value (${v.dtype}) and previous value (${this.dtype}) must match`);if(!m.arraysEqual(v.shape,this.shape))throw new Error(`shape of the new value (${v.shape}) and previous value (${this.shape}) must match`);i().disposeTensor(this),this.dataId=v.dataId,i().incRef(this,null)}dispose(){i().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(h,Symbol.hasInstance,{value:g=>g instanceof u&&g.assign!=null&&g.assign instanceof Function})},{"./global_util":"gLHUz","./tensor_format":"lEsIB","./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lEsIB:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensorToString",()=>i);var r=e("./util");const d=20,m=3,f=7;function i(u,p,h,g){const v=(0,r.computeStrides)(p),_=o(u,p,h,v),k=p.length,y=a(u,p,h,v,_),x=["Tensor"];return g&&(x.push(`  dtype: ${h}`),x.push(`  rank: ${k}`),x.push(`  shape: [${p}]`),x.push("  values:")),x.push(y.map(b=>"    "+b).join(`
`)),x.join(`
`)}function o(u,p,h,g){const v=(0,r.sizeFromShape)(p),_=g[g.length-1],k=new Array(_).fill(0),y=p.length,x=h==="complex64"?l(u):u;if(y>1)for(let b=0;b<v/_;b++){const C=b*_;for(let w=0;w<_;w++)k[w]=Math.max(k[w],n(x[C+w],0,h).length)}return k}function n(u,p,h){let g;return Array.isArray(u)?g=`${parseFloat(u[0].toFixed(f))} + ${parseFloat(u[1].toFixed(f))}j`:(0,r.isString)(u)?g=`'${u}'`:h==="bool"?g=c(u):g=parseFloat(u.toFixed(f)).toString(),(0,r.rightPad)(g,p)}function c(u){return u===0?"false":"true"}function a(u,p,h,g,v,_=!0){const k=h==="complex64"?2:1,y=p[0],x=p.length;if(x===0){if(h==="complex64"){const S=l(u);return[n(S[0],0,h)]}return h==="bool"?[c(u[0])]:[u[0].toString()]}if(x===1){if(y>d){const I=m*k;let j=Array.from(u.slice(0,I)),D=Array.from(u.slice((y-m)*k,y*k));return h==="complex64"&&(j=l(j),D=l(D)),["["+j.map((O,$)=>n(O,v[$],h)).join(", ")+", ..., "+D.map((O,$)=>n(O,v[y-m+$],h)).join(", ")+"]"]}const S=h==="complex64"?l(u):Array.from(u);return["["+S.map((I,j)=>n(I,v[j],h)).join(", ")+"]"]}const b=p.slice(1),C=g.slice(1),w=g[0]*k,N=[];if(y>d){for(let S=0;S<m;S++){const I=S*w,j=I+w;N.push(...a(u.slice(I,j),b,h,C,v,!1))}N.push("...");for(let S=y-m;S<y;S++){const I=S*w,j=I+w;N.push(...a(u.slice(I,j),b,h,C,v,S===y-1))}}else for(let S=0;S<y;S++){const I=S*w,j=I+w;N.push(...a(u.slice(I,j),b,h,C,v,S===y-1))}const T=x===2?",":"";N[0]="["+(y>0?N[0]+T:"");for(let S=1;S<N.length-1;S++)N[S]=" "+N[S]+T;let F=`,
`;for(let S=2;S<x;S++)F+=`
`;return N[N.length-1]=" "+N[N.length-1]+"]"+(_?"":F),N}function l(u){const p=[];for(let h=0;h<u.length;h+=2)p.push([u[h],u[h+1]]);return p}},{"./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gj10y:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"makeTypesMatch",()=>f),t.export(s,"assertTypesMatch",()=>i),t.export(s,"isTensorInList",()=>o),t.export(s,"getTensorsInContainer",()=>n);var r=e("./tensor"),d=e("./types"),m=e("./util");function f(l,u){if(l.dtype===u.dtype)return[l,u];const p=(0,d.upcastType)(l.dtype,u.dtype);return[l.cast(p),u.cast(p)]}function i(l,u){(0,m.assert)(l.dtype===u.dtype,()=>`The dtypes of the first(${l.dtype}) and second(${u.dtype}) input must match`)}function o(l,u){return u.some(p=>p.id===l.id)}function n(l){const u=[],p=new Set;return c(l,u,p),u}function c(l,u,p){if(l==null)return;if(l instanceof r.Tensor){u.push(l);return}if(!a(l))return;const h=l;for(const g in h){const v=h[g];p.has(v)||(p.add(v),c(v,u,p))}}function a(l){return Array.isArray(l)||typeof l=="object"}},{"./tensor":"hRGZH","./types":"cjn0s","./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cjn0s:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Rank",()=>r),t.export(s,"upcastType",()=>n),t.export(s,"sumOutType",()=>c),t.export(s,"isWebGLData",()=>a),t.export(s,"isWebGPUData",()=>l);var r;(function(u){u.R0="R0",u.R1="R1",u.R2="R2",u.R3="R3",u.R4="R4",u.R5="R5",u.R6="R6"})(r||(r={}));var d;(function(u){u.float32="float32",u.int32="int32",u.bool="int32",u.complex64="complex64"})(d||(d={}));var m;(function(u){u.float32="float32",u.int32="int32",u.bool="bool",u.complex64="complex64"})(m||(m={}));var f;(function(u){u.float32="float32",u.int32="float32",u.bool="float32",u.complex64="complex64"})(f||(f={}));var i;(function(u){u.float32="complex64",u.int32="complex64",u.bool="complex64",u.complex64="complex64"})(i||(i={}));const o={float32:f,int32:d,bool:m,complex64:i};function n(u,p){if(u==="string"||p==="string"){if(u==="string"&&p==="string")return"string";throw new Error(`Can not upcast ${u} with ${p}`)}return o[u][p]}function c(u){return n(u,"int32")}function a(u){return u!=null&&typeof u=="object"&&"texture"in u&&u.texture instanceof WebGLTexture}function l(u){return typeof GPUBuffer!="undefined"&&u!=null&&typeof u=="object"&&"buffer"in u&&u.buffer instanceof GPUBuffer}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1dH0L":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("./engine"),r=e("./device_util"),d=e("./environment"),m=e("329ebbdb86789035");const f=(0,d.env)();f.registerFlag("DEBUG",()=>!1,i=>{i&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),f.registerFlag("IS_BROWSER",()=>r.isBrowser()),f.registerFlag("IS_NODE",()=>typeof m!="undefined"&&typeof m.versions!="undefined"&&typeof m.versions.node!="undefined"),f.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),f.registerFlag("IS_SAFARI",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),f.registerFlag("PROD",()=>!1),f.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>f.getBool("DEBUG")),f.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),f.registerFlag("IS_TEST",()=>!1),f.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>f.getBool("DEBUG")),f.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),f.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),f.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1)},{"329ebbdb86789035":"5xM3z","./engine":"eID09","./device_util":"gJmrq","./environment":"7s0uC"}],gJmrq:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mockIsMobile",()=>m),t.export(s,"isMobile",()=>f),t.export(s,"isBrowser",()=>i);function r(){return typeof navigator!="undefined"&&navigator!=null}let d;function m(o){d=o}function f(o){if(d!==void 0)return d;if(o||r()){if(o||(o=navigator),o.product==="ReactNative")return!0;const n=o.userAgent||o.vendor||(typeof window!="undefined"?window.opera:"");if(!n){const c=o;return c.userAgentData&&c.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))}return!1}function i(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"41qxM":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"PlatformBrowser",()=>n);var r=e("../flags"),d=e("../environment"),m=e("../io/indexed_db"),f=e("../io/local_storage"),i=e("../io/model_management"),o=e("./is_typed_array_browser");class n{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(a,l){return fetch(a,l)}now(){return performance.now()}encode(a,l){if(l!=="utf-8"&&l!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${l}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(a)}decode(a,l){return new TextDecoder(l).decode(a)}setTimeoutCustom(a,l){if(typeof window=="undefined"||!(0,d.env)().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(a,l);return}this.functionRefs.push(a),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},l),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",u=>{u.source===window&&u.data.name===this.messageName&&(u.stopPropagation(),this.functionRefs[u.data.index](),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(a){return(0,o.isTypedArrayBrowser)(a)}}if((0,d.env)().get("IS_BROWSER")){(0,d.env)().setPlatform("browser",new n);try{i.ModelStoreManagerRegistry.registerManager(f.BrowserLocalStorage.URL_SCHEME,new f.BrowserLocalStorageManager)}catch{}try{i.ModelStoreManagerRegistry.registerManager(m.BrowserIndexedDB.URL_SCHEME,new m.BrowserIndexedDBManager)}catch{}}},{"../flags":"1dH0L","../environment":"7s0uC","../io/indexed_db":"c5i6C","../io/local_storage":"b3sM1","../io/model_management":"5516O","./is_typed_array_browser":"847Qj","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],c5i6C:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"deleteDatabase",()=>l),t.export(s,"BrowserIndexedDB",()=>h),t.export(s,"indexedDBRouter",()=>g),t.export(s,"browserIndexedDB",()=>v),t.export(s,"BrowserIndexedDBManager",()=>k);var r=e("../flags"),d=e("../environment"),m=e("./io_utils"),f=e("./router_registry"),i=e("./composite_array_buffer");const o="tensorflowjs",n=1,c="models_store",a="model_info_store";async function l(){const y=u();return new Promise((x,b)=>{const C=y.deleteDatabase(o);C.onsuccess=()=>x(),C.onerror=w=>b(w)})}function u(){if(!(0,d.env)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const y=typeof window=="undefined"?self:window,x=y.indexedDB||y.mozIndexedDB||y.webkitIndexedDB||y.msIndexedDB||y.shimIndexedDB;if(x==null)throw new Error("The current browser does not appear to support IndexedDB.");return x}function p(y){const x=y.result;x.createObjectStore(c,{keyPath:"modelPath"}),x.createObjectStore(a,{keyPath:"modelPath"})}class h{constructor(x){if(this.indexedDB=u(),x==null||!x)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=x}async save(x){if(x.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,x)}async load(){return this.databaseAction(this.modelPath)}databaseAction(x,b){return new Promise((C,w)=>{const N=this.indexedDB.open(o,n);N.onupgradeneeded=()=>p(N),N.onsuccess=()=>{const T=N.result;if(b==null){const F=T.transaction(c,"readonly"),I=F.objectStore(c).get(this.modelPath);I.onsuccess=()=>{if(I.result==null)return T.close(),w(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));C(I.result.modelArtifacts)},I.onerror=j=>(T.close(),w(I.error)),F.oncomplete=()=>T.close()}else{b.weightData=i.CompositeArrayBuffer.join(b.weightData);const F=(0,m.getModelArtifactsInfoForJSON)(b),S=T.transaction(a,"readwrite");let I=S.objectStore(a),j;try{j=I.put({modelPath:this.modelPath,modelArtifactsInfo:F})}catch(O){return w(O)}let D;j.onsuccess=()=>{D=T.transaction(c,"readwrite");const O=D.objectStore(c);let $;try{$=O.put({modelPath:this.modelPath,modelArtifacts:b,modelArtifactsInfo:F})}catch(P){return w(P)}$.onsuccess=()=>C({modelArtifactsInfo:F}),$.onerror=P=>{I=S.objectStore(a);const R=I.delete(this.modelPath);R.onsuccess=()=>(T.close(),w($.error)),R.onerror=A=>(T.close(),w($.error))}},j.onerror=O=>(T.close(),w(j.error)),S.oncomplete=()=>{D==null?T.close():D.oncomplete=()=>T.close()}}},N.onerror=T=>w(N.error)})}}h.URL_SCHEME="indexeddb://";const g=y=>(0,d.env)().getBool("IS_BROWSER")&&!Array.isArray(y)&&y.startsWith(h.URL_SCHEME)?v(y.slice(h.URL_SCHEME.length)):null;f.IORouterRegistry.registerSaveRouter(g),f.IORouterRegistry.registerLoadRouter(g);function v(y){return new h(y)}function _(y){return y.startsWith(h.URL_SCHEME)?y.slice(h.URL_SCHEME.length):y}class k{constructor(){this.indexedDB=u()}async listModels(){return new Promise((x,b)=>{const C=this.indexedDB.open(o,n);C.onupgradeneeded=()=>p(C),C.onsuccess=()=>{const w=C.result,N=w.transaction(a,"readonly"),F=N.objectStore(a).getAll();F.onsuccess=()=>{const S={};for(const I of F.result)S[I.modelPath]=I.modelArtifactsInfo;x(S)},F.onerror=S=>(w.close(),b(F.error)),N.oncomplete=()=>w.close()},C.onerror=w=>b(C.error)})}async removeModel(x){return x=_(x),new Promise((b,C)=>{const w=this.indexedDB.open(o,n);w.onupgradeneeded=()=>p(w),w.onsuccess=()=>{const N=w.result,T=N.transaction(a,"readwrite"),F=T.objectStore(a),S=F.get(x);let I;S.onsuccess=()=>{if(S.result==null)return N.close(),C(new Error(`Cannot find model with path '${x}' in IndexedDB.`));{const j=F.delete(x),D=()=>{I=N.transaction(c,"readwrite");const $=I.objectStore(c).delete(x);$.onsuccess=()=>b(S.result.modelArtifactsInfo),$.onerror=P=>C(S.error)};j.onsuccess=D,j.onerror=O=>(D(),N.close(),C(S.error))}},S.onerror=j=>(N.close(),C(S.error)),T.oncomplete=()=>{I==null?N.close():I.oncomplete=()=>N.close()}},w.onerror=N=>C(w.error)})}}},{"../flags":"1dH0L","../environment":"7s0uC","./io_utils":"7CjsN","./router_registry":"84W52","./composite_array_buffer":"6z3FM","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7CjsN":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"encodeWeights",()=>c),t.export(s,"decodeWeights",()=>a),t.export(s,"concatenateTypedArrays",()=>l),t.export(s,"stringByteLength",()=>p),t.export(s,"arrayBufferToBase64String",()=>h),t.export(s,"base64StringToArrayBuffer",()=>g),t.export(s,"concatenateArrayBuffers",()=>v),t.export(s,"basename",()=>_),t.export(s,"getModelJSONForModelArtifacts",()=>k),t.export(s,"getModelArtifactsForJSONSync",()=>y),t.export(s,"getModelArtifactsForJSON",()=>x),t.export(s,"getModelArtifactsInfoForJSON",()=>b),t.export(s,"getWeightSpecs",()=>C),t.export(s,"getFloat16Decoder",()=>F);var r=e("../ops/complex"),d=e("../ops/tensor"),m=e("../util"),f=e("./types"),i=e("./composite_array_buffer"),o=e("cc5f092a6233570f").Buffer;const n=4;async function c(S,I){const j=[],D=[],O=Array.isArray(S)?S.map(P=>P.name):Object.keys(S);for(let P=0;P<O.length;++P){const R=O[P],A=Array.isArray(S)?S[P].tensor:S[R];if(A.dtype!=="float32"&&A.dtype!=="int32"&&A.dtype!=="bool"&&A.dtype!=="string"&&A.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${R}': ${A.dtype}`);const z={name:R,shape:A.shape,dtype:A.dtype};if(A.dtype==="string"){const G=new Promise(async L=>{const M=await A.bytes(),V=M.reduce((H,Z)=>H+Z.length,0)+n*M.length,K=new Uint8Array(V);let W=0;for(let H=0;H<M.length;H++){const Z=M[H],Q=new Uint8Array(new Uint32Array([Z.length]).buffer);K.set(Q,W),W+=n,K.set(Z,W),W+=Z.length}L(K)});D.push(G)}else D.push(A.data());I!=null&&(z.group=I),j.push(z)}const $=await Promise.all(D);return{data:l($),specs:j}}function a(S,I){const j=new i.CompositeArrayBuffer(S),D={};let O,$=0;for(const P of I){const R=P.name,A=P.dtype,z=P.shape,G=(0,m.sizeFromShape)(z);let L;if("quantization"in P){const M=P.quantization;if(M.dtype==="uint8"||M.dtype==="uint16"){if(!("min"in M&&"scale"in M))throw new Error(`Weight ${P.name} with quantization ${M.dtype} doesn't have corresponding metadata min and scale.`)}else if(M.dtype==="float16"){if(A!=="float32")throw new Error(`Weight ${P.name} is quantized with ${M.dtype} which only supports weights of type float32 not ${A}.`)}else throw new Error(`Weight ${P.name} has unknown quantization dtype ${M.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const V=f.DTYPE_VALUE_SIZE_MAP[M.dtype],K=j.slice($,$+G*V),W=M.dtype==="uint8"?new Uint8Array(K):new Uint16Array(K);if(A==="float32")if(M.dtype==="uint8"||M.dtype==="uint16"){L=new Float32Array(W.length);for(let H=0;H<W.length;H++){const Z=W[H];L[H]=Z*M.scale+M.min}}else if(M.dtype==="float16")O===void 0&&(O=F()),L=O(W);else throw new Error(`Unsupported quantization type ${M.dtype} for weight type float32.`);else if(A==="int32"){if(M.dtype!=="uint8"&&M.dtype!=="uint16")throw new Error(`Unsupported quantization type ${M.dtype} for weight type int32.`);L=new Int32Array(W.length);for(let H=0;H<W.length;H++){const Z=W[H];L[H]=Math.round(Z*M.scale+M.min)}}else throw new Error(`Unsupported dtype in weight '${R}': ${A}`);$+=G*V}else if(A==="string"){const M=(0,m.sizeFromShape)(P.shape);L=[];for(let V=0;V<M;V++){const K=new Uint32Array(j.slice($,$+n))[0];$+=n;const W=new Uint8Array(j.slice($,$+K));L.push(W),$+=K}}else{const M=f.DTYPE_VALUE_SIZE_MAP[A],V=j.slice($,$+G*M);if(A==="float32")L=new Float32Array(V);else if(A==="int32")L=new Int32Array(V);else if(A==="bool")L=new Uint8Array(V);else if(A==="complex64"){L=new Float32Array(V);const K=new Float32Array(L.length/2),W=new Float32Array(L.length/2);for(let Q=0;Q<K.length;Q++)K[Q]=L[Q*2],W[Q]=L[Q*2+1];const H=(0,d.tensor)(K,z,"float32"),Z=(0,d.tensor)(W,z,"float32");D[R]=(0,r.complex)(H,Z),H.dispose(),Z.dispose()}else throw new Error(`Unsupported dtype in weight '${R}': ${A}`);$+=G*M}A!=="complex64"&&(D[R]=(0,d.tensor)(L,z,A))}return D}function l(S){if(S===null)throw new Error(`Invalid input value: ${JSON.stringify(S)}`);let I=0;const j=[];S.forEach($=>{if(I+=$.byteLength,j.push($.byteLength===$.buffer.byteLength?$:new $.constructor($)),!($ instanceof Float32Array||$ instanceof Int32Array||$ instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${$.constructor.name}`)});const D=new Uint8Array(I);let O=0;return j.forEach($=>{D.set(new Uint8Array($.buffer),O),O+=$.byteLength}),D.buffer}const u=typeof o!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function p(S){return u?o.byteLength(S,"utf8"):new Blob([S]).size}function h(S){if(u)return o.from(S).toString("base64");const I=new Uint8Array(S);let j="";for(let D=0,O=I.length;D<O;D++)j+=String.fromCharCode(I[D]);return btoa(j)}function g(S){if(u){const D=o.from(S,"base64");return D.buffer.slice(D.byteOffset,D.byteOffset+D.byteLength)}const I=atob(S),j=new Uint8Array(I.length);for(let D=0;D<I.length;++D)j.set([I.charCodeAt(D)],D);return j.buffer}function v(S){return i.CompositeArrayBuffer.join(S)}function _(S){const I="/";for(S=S.trim();S.endsWith(I);)S=S.slice(0,S.length-1);const j=S.split(I);return j[j.length-1]}function k(S,I){const j={modelTopology:S.modelTopology,format:S.format,generatedBy:S.generatedBy,convertedBy:S.convertedBy,weightsManifest:I};return S.signature!=null&&(j.signature=S.signature),S.userDefinedMetadata!=null&&(j.userDefinedMetadata=S.userDefinedMetadata),S.modelInitializer!=null&&(j.modelInitializer=S.modelInitializer),S.initializerSignature!=null&&(j.initializerSignature=S.initializerSignature),S.trainingConfig!=null&&(j.trainingConfig=S.trainingConfig),j}function y(S,I,j){const D={modelTopology:S.modelTopology,format:S.format,generatedBy:S.generatedBy,convertedBy:S.convertedBy};if(S.trainingConfig!=null&&(D.trainingConfig=S.trainingConfig),S.weightsManifest!=null){if(!I)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!j)throw new Error("modelJSON has weightsManifest but weightData is null");D.weightSpecs=I,D.weightData=j}return S.signature!=null&&(D.signature=S.signature),S.userDefinedMetadata!=null&&(D.userDefinedMetadata=S.userDefinedMetadata),S.modelInitializer!=null&&(D.modelInitializer=S.modelInitializer),S.initializerSignature!=null&&(D.initializerSignature=S.initializerSignature),D}async function x(S,I){let j,D;return S.weightsManifest!=null&&([j,D]=await I(S.weightsManifest)),y(S,j,D)}function b(S){if(S.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:S.modelTopology==null?0:p(JSON.stringify(S.modelTopology)),weightSpecsBytes:S.weightSpecs==null?0:p(JSON.stringify(S.weightSpecs)),weightDataBytes:S.weightData==null?0:new i.CompositeArrayBuffer(S.weightData).byteLength}}function C(S){const I=[];for(const j of S)I.push(...j.weights);return I}function w(){const S=j=>{let D=j<<13,O=0;for(;(D&8388608)==0;)O-=8388608,D<<=1;return D&=-8388609,O+=947912704,D|O},I=new Uint32Array(2048);I[0]=0;for(let j=1;j<1024;j++)I[j]=S(j);for(let j=1024;j<2048;j++)I[j]=939524096+(j-1024<<13);return I}function N(){const S=new Uint32Array(64);S[0]=0,S[31]=1199570944,S[32]=2147483648,S[63]=3347054592;for(let I=1;I<31;I++)S[I]=I<<23;for(let I=33;I<63;I++)S[I]=2147483648+(I-32<<23);return S}function T(){const S=new Uint32Array(64);for(let I=0;I<64;I++)S[I]=1024;return S[0]=S[32]=0,S}function F(){const S=w(),I=N(),j=T();return D=>{const O=new ArrayBuffer(4*D.length),$=new Uint32Array(O);for(let P=0;P<D.length;P++){const R=D[P],A=S[j[R>>10]+(R&1023)]+I[R>>10];$[P]=A}return new Float32Array(O)}}},{cc5f092a6233570f:"cPU1M","../ops/complex":"gJKVw","../ops/tensor":"cbWW7","../util":"hQeVi","./types":"cefnM","./composite_array_buffer":"6z3FM","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gJKVw:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"complex",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a){const l=(0,m.convertToTensor)(c,"real","complex"),u=(0,m.convertToTensor)(a,"imag","complex");f.assertShapesMatch(l.shape,u.shape,`real and imag shapes, ${l.shape} and ${u.shape}, must match in call to tf.complex().`);const p={real:l,imag:u};return r.ENGINE.runKernel(d.Complex,p)}const n=(0,i.op)({complex_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1FegS":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"inferShape",()=>n),t.export(s,"convertToTensor",()=>l),t.export(s,"convertToTensorArray",()=>u);var r=e("./engine"),d=e("./environment"),m=e("./tensor"),f=e("./types"),i=e("./util"),o=e("./util_base");function n(p,h){let g=p;if((0,i.isTypedArray)(p))return h==="string"?[]:[p.length];if((0,f.isWebGLData)(p)){const _=p.channels||"RGBA";return[p.height,p.width*_.length]}else if((0,f.isWebGPUData)(p))return[p.buffer.size/(h==null?4:(0,o.bytesPerElement)(h))];if(!Array.isArray(p))return[];const v=[];for(;Array.isArray(g)||(0,i.isTypedArray)(g)&&h!=="string";)v.push(g.length),g=g[0];return Array.isArray(p)&&(0,d.env)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(p,v,[]),v}function c(p,h,g){if(g=g||[],!Array.isArray(p)&&!(0,i.isTypedArray)(p)){(0,i.assert)(h.length===0,()=>`Element arr[${g.join("][")}] is a primitive, but should be an array/TypedArray of ${h[0]} elements`);return}(0,i.assert)(h.length>0,()=>`Element arr[${g.join("][")}] should be a primitive, but is an array of ${p.length} elements`),(0,i.assert)(p.length===h[0],()=>`Element arr[${g.join("][")}] should have ${h[0]} elements, but has ${p.length} elements`);const v=h.slice(1);for(let _=0;_<p.length;++_)c(p[_],v,g.concat(_))}function a(p,h,g,v){if(p!=="string_or_numeric"){if(p==null)throw new Error("Expected dtype cannot be null.");if(p!=="numeric"&&p!==h||p==="numeric"&&h==="string")throw new Error(`Argument '${g}' passed to '${v}' must be ${p} tensor, but got ${h} tensor`)}}function l(p,h,g,v="numeric"){if(p instanceof m.Tensor)return a(v,p.dtype,h,g),p;let _=(0,i.inferDtype)(p);if(_!=="string"&&["bool","int32","float32"].indexOf(v)>=0&&(_=v),a(v,_,h,g),p==null||!(0,i.isTypedArray)(p)&&!Array.isArray(p)&&typeof p!="number"&&typeof p!="boolean"&&typeof p!="string"){const b=p==null?"null":p.constructor.name;throw new Error(`Argument '${h}' passed to '${g}' must be a Tensor or TensorLike, but got '${b}'`)}const k=n(p,_);!(0,i.isTypedArray)(p)&&!Array.isArray(p)&&(p=[p]);const y=!0,x=_!=="string"?(0,i.toTypedArray)(p,_):(0,i.flatten)(p,[],y);return r.ENGINE.makeTensor(x,k,_)}function u(p,h,g,v="numeric"){if(!Array.isArray(p))throw new Error(`Argument ${h} passed to ${g} must be a \`Tensor[]\` or \`TensorLike[]\``);return p.map((k,y)=>l(k,`${h}[${y}]`,g,v))}},{"./engine":"eID09","./environment":"7s0uC","./tensor":"hRGZH","./types":"cjn0s","./util":"hQeVi","./util_base":"7Tgdr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5CKbF":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"OP_SCOPE_SUFFIX",()=>m),t.export(s,"op",()=>f);var r=e("../engine"),d=e("../util");const m="__op";function f(i){const o=Object.keys(i);if(o.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${o.length} keys.`);let n=o[0];const c=i[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+m;const a=(...l)=>{r.ENGINE.startScope(n);try{const u=c(...l);return(0,d.isPromise)(u)&&console.error("Cannot return a Promise inside of tidy."),r.ENGINE.endScope(u),u}catch(u){throw r.ENGINE.endScope(null),u}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}},{"../engine":"eID09","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cbWW7:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensor",()=>m);var r=e("../tensor_util_env"),d=e("./tensor_ops_util");function m(f,i,o){const n=(0,r.inferShape)(f,o);return(0,d.makeTensor)(f,i,n,o)}},{"../tensor_util_env":"1FegS","./tensor_ops_util":"XeZUq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],XeZUq:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"makeTensor",()=>f);var r=e("../engine"),d=e("../types"),m=e("../util");function f(i,o,n,c){if(c==null)c=(0,m.inferDtype)(i);else if(c==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,d.isWebGPUData)(i)||(0,d.isWebGLData)(i)){if(c!=="float32"&&c!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${c}.`);return r.ENGINE.backend.createTensorFromGPUData(i,o||n,c)}if(!(0,m.isTypedArray)(i)&&!Array.isArray(i)&&typeof i!="number"&&typeof i!="boolean"&&typeof i!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(o!=null){(0,m.assertNonNegativeIntegerDimensions)(o);const a=(0,m.sizeFromShape)(o),l=(0,m.sizeFromShape)(n);(0,m.assert)(a===l,()=>`Based on the provided shape, [${o}], the tensor should have ${a} values but has ${l}`);for(let u=0;u<n.length;++u){const p=n[u],h=u===n.length-1?p!==(0,m.sizeFromShape)(o.slice(u)):!0;(0,m.assert)(n[u]===o[u]||!h,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${o}). `)}}return!(0,m.isTypedArray)(i)&&!Array.isArray(i)&&(i=[i]),o=o||n,i=c!=="string"?(0,m.toTypedArray)(i,c):(0,m.flatten)(i,[],!0),r.ENGINE.makeTensor(i,o,c)}},{"../engine":"eID09","../types":"cjn0s","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cefnM:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DTYPE_VALUE_SIZE_MAP",()=>r);const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6z3FM":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CompositeArrayBuffer",()=>d),t.export(s,"search",()=>m);var r=e("../util");class d{static join(i){return new d(i).slice()}constructor(i){if(this.shards=[],this.previousShardIndex=0,i==null||(i instanceof Array||(i=[i]),i=i.map(n=>r.isTypedArray(n)?n.buffer:n),i.length===0))return;this.bufferUniformSize=i[0].byteLength;let o=0;for(let n=0;n<i.length;n++){const c=i[n];n!==i.length-1&&c.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=o+c.byteLength;this.shards.push({buffer:c,start:o,end:a}),o=a}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(i=0,o=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(i=isNaN(Number(i))?0:i,o=isNaN(Number(o))?0:o,i=Math.max(0,i),o=Math.min(this.byteLength,o),o<=i)return new ArrayBuffer(0);const n=this.findShardForByte(i);if(n===-1)throw new Error(`Could not find start shard for byte ${i}`);const c=o-i,a=new ArrayBuffer(c),l=new Uint8Array(a);let u=0;for(let p=n;p<this.shards.length;p++){const h=this.shards[p],v=i+u-h.start,_=u,y=Math.min(o,h.end)-h.start,x=new Uint8Array(h.buffer,v,y-v);if(l.set(x,_),u+=x.length,o<h.end)break}return a}findShardForByte(i){if(this.shards.length===0||i<0||i>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(i/this.bufferUniformSize),this.previousShardIndex;function o(c){return i<c.start?-1:i>=c.end?1:0}if(o(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const n=m(this.shards,o);return n===-1?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function m(f,i){let o=0,n=f.length;for(;o<=n;){const c=Math.floor((n-o)/2)+o,a=i(f[c]);if(a===0)return c;a<0?n=c:o=c+1}return-1}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"84W52":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"IORouterRegistry",()=>r),t.export(s,"registerSaveRouter",()=>d),t.export(s,"registerLoadRouter",()=>m),t.export(s,"getSaveHandlers",()=>f),t.export(s,"getLoadHandlers",()=>i);class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(n){r.getInstance().saveRouters.push(n)}static registerLoadRouter(n){r.getInstance().loadRouters.push(n)}static getSaveHandlers(n){return r.getHandlers(n,"save")}static getLoadHandlers(n,c){return r.getHandlers(n,"load",c)}static getHandlers(n,c,a){const l=[];return(c==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(p=>{const h=p(n,a);h!==null&&l.push(h)}),l}}const d=o=>r.registerSaveRouter(o),m=o=>r.registerLoadRouter(o),f=o=>r.getSaveHandlers(o),i=(o,n)=>r.getLoadHandlers(o,n)},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b3sM1:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"purgeLocalStorageArtifacts",()=>g),t.export(s,"BrowserLocalStorage",()=>x),t.export(s,"localStorageRouter",()=>b),t.export(s,"browserLocalStorage",()=>C),t.export(s,"BrowserLocalStorageManager",()=>w);var r=e("../flags"),d=e("../environment"),m=e("../util"),f=e("./io_utils"),i=e("./composite_array_buffer"),o=e("./router_registry");const n="/",c="tensorflowjs_models",a="info",l="model_topology",u="weight_specs",p="weight_data",h="model_metadata";function g(){if(!(0,d.env)().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("purgeLocalStorageModels() cannot proceed because local storage is unavailable in the current environment.");const N=window.localStorage,T=[];for(let F=0;F<N.length;++F){const S=N.key(F),I=c+n;if(S.startsWith(I)&&S.length>I.length){N.removeItem(S);const j=k(S);T.indexOf(j)===-1&&T.push(j)}}return T}function v(N){return{info:[c,N,a].join(n),topology:[c,N,l].join(n),weightSpecs:[c,N,u].join(n),weightData:[c,N,p].join(n),modelMetadata:[c,N,h].join(n)}}function _(N){for(const T of Object.values(N))window.localStorage.removeItem(T)}function k(N){const T=N.split(n);if(T.length<3)throw new Error(`Invalid key format: ${N}`);return T.slice(1,T.length-1).join(n)}function y(N){return N.startsWith(x.URL_SCHEME)?N.slice(x.URL_SCHEME.length):N}class x{constructor(T){if(!(0,d.env)().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,T==null||!T)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=T,this.keys=v(this.modelPath)}async save(T){if(T.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const F=JSON.stringify(T.modelTopology),S=JSON.stringify(T.weightSpecs),I=(0,f.getModelArtifactsInfoForJSON)(T),j=i.CompositeArrayBuffer.join(T.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(I)),this.LS.setItem(this.keys.topology,F),this.LS.setItem(this.keys.weightSpecs,S),this.LS.setItem(this.keys.weightData,(0,f.arrayBufferToBase64String)(j));const D={format:T.format,generatedBy:T.generatedBy,convertedBy:T.convertedBy,signature:T.signature!=null?T.signature:void 0,userDefinedMetadata:T.userDefinedMetadata!=null?T.userDefinedMetadata:void 0,modelInitializer:T.modelInitializer!=null?T.modelInitializer:void 0,initializerSignature:T.initializerSignature!=null?T.initializerSignature:void 0,trainingConfig:T.trainingConfig!=null?T.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(D)),{modelArtifactsInfo:I}}catch{throw _(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${I.modelTopologyBytes}, weightSpecsBytes=${I.weightSpecsBytes}, weightDataBytes=${I.weightDataBytes}.`)}}}async load(){const T=JSON.parse(this.LS.getItem(this.keys.info));if(T==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(T.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const F={},S=JSON.parse(this.LS.getItem(this.keys.topology));if(S==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);F.modelTopology=S;const I=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(I==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);F.weightSpecs=I;const j=this.LS.getItem(this.keys.modelMetadata);if(j!=null){const O=JSON.parse(j);F.format=O.format,F.generatedBy=O.generatedBy,F.convertedBy=O.convertedBy,O.signature!=null&&(F.signature=O.signature),O.userDefinedMetadata!=null&&(F.userDefinedMetadata=O.userDefinedMetadata),O.modelInitializer!=null&&(F.modelInitializer=O.modelInitializer),O.initializerSignature!=null&&(F.initializerSignature=O.initializerSignature),O.trainingConfig!=null&&(F.trainingConfig=O.trainingConfig)}const D=this.LS.getItem(this.keys.weightData);if(D==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return F.weightData=(0,f.base64StringToArrayBuffer)(D),F}}x.URL_SCHEME="localstorage://";const b=N=>(0,d.env)().getBool("IS_BROWSER")&&!Array.isArray(N)&&N.startsWith(x.URL_SCHEME)?C(N.slice(x.URL_SCHEME.length)):null;o.IORouterRegistry.registerSaveRouter(b),o.IORouterRegistry.registerLoadRouter(b);function C(N){return new x(N)}class w{constructor(){(0,m.assert)((0,d.env)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,m.assert)(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const T={},F=c+n,S=n+a;for(let I=0;I<this.LS.length;++I){const j=this.LS.key(I);if(j.startsWith(F)&&j.endsWith(S)){const D=k(j);T[D]=JSON.parse(this.LS.getItem(j))}}return T}async removeModel(T){T=y(T);const F=v(T);if(this.LS.getItem(F.info)==null)throw new Error(`Cannot find model at path '${T}'`);const S=JSON.parse(this.LS.getItem(F.info));return _(F),S}}},{"../flags":"1dH0L","../environment":"7s0uC","../util":"hQeVi","./io_utils":"7CjsN","./composite_array_buffer":"6z3FM","./router_registry":"84W52","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5516O":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ModelStoreManagerRegistry",()=>f),t.export(s,"moveModel",()=>l),t.export(s,"copyModel",()=>a),t.export(s,"removeModel",()=>c),t.export(s,"listModels",()=>n);var r=e("../util"),d=e("./router_registry");const m="://";class f{constructor(){this.managers={}}static getInstance(){return f.instance==null&&(f.instance=new f),f.instance}static registerManager(p,h){(0,r.assert)(p!=null,()=>"scheme must not be undefined or null."),p.endsWith(m)&&(p=p.slice(0,p.indexOf(m))),(0,r.assert)(p.length>0,()=>"scheme must not be an empty string.");const g=f.getInstance();(0,r.assert)(g.managers[p]==null,()=>`A model store manager is already registered for scheme '${p}'.`),g.managers[p]=h}static getManager(p){const h=f.getInstance().managers[p];if(h==null)throw new Error(`Cannot find model manager for scheme '${p}'`);return h}static getSchemes(){return Object.keys(f.getInstance().managers)}}function i(u){if(u.indexOf(m)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${f.getSchemes().join(",")}`);return{scheme:u.split(m)[0],path:u.split(m)[1]}}async function o(u,p,h=!1){(0,r.assert)(u!==p,()=>`Old path and new path are the same: '${u}'`);const g=d.IORouterRegistry.getLoadHandlers(u);(0,r.assert)(g.length>0,()=>`Copying failed because no load handler is found for source URL ${u}.`),(0,r.assert)(g.length<2,()=>`Copying failed because more than one (${g.length}) load handlers for source URL ${u}.`);const v=g[0],_=d.IORouterRegistry.getSaveHandlers(p);(0,r.assert)(_.length>0,()=>`Copying failed because no save handler is found for destination URL ${p}.`),(0,r.assert)(_.length<2,()=>`Copying failed because more than one (${g.length}) save handlers for destination URL ${p}.`);const k=_[0],y=i(u).scheme,x=i(u).path,b=y===i(u).scheme,C=await v.load();h&&b&&await f.getManager(y).removeModel(x);const w=await k.save(C);return h&&!b&&await f.getManager(y).removeModel(x),w.modelArtifactsInfo}async function n(){const u=f.getSchemes(),p={};for(const h of u){const g=await f.getManager(h).listModels();for(const v in g){const _=h+m+v;p[_]=g[v]}}return p}async function c(u){const p=i(u);return f.getManager(p.scheme).removeModel(p.path)}async function a(u,p){return o(u,p,!1)}async function l(u,p){return o(u,p,!0)}},{"../util":"hQeVi","./router_registry":"84W52","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5dRIy":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getNodeFetch",()=>m),t.export(s,"resetSystemFetch",()=>i),t.export(s,"setSystemFetch",()=>o),t.export(s,"getSystemFetch",()=>n),t.export(s,"PlatformNode",()=>c);var r=e("../environment"),d=e("9eae209353a3d608");const m={importFetch:()=>e("dfcdb939bb56fbb8")};let f;function i(){f=null}function o(a){f=a}function n(){return f}class c{constructor(){this.util=e("3818a9dc927c4605"),this.textEncoder=new this.util.TextEncoder}fetch(l,u){return(0,r.env)().global.fetch!=null?(0,r.env)().global.fetch(l,u):(f==null&&(f=m.importFetch()),f(l,u))}now(){const l=d.hrtime();return l[0]*1e3+l[1]/1e6}encode(l,u){if(u!=="utf-8"&&u!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${u}`);return this.textEncoder.encode(l)}decode(l,u){return l.length===0?"":new this.util.TextDecoder(u).decode(l)}isTypedArray(l){return this.util.types.isFloat32Array(l)||this.util.types.isInt32Array(l)||this.util.types.isUint8Array(l)||this.util.types.isUint8ClampedArray(l)}}(0,r.env)().get("IS_NODE")&&!(0,r.env)().get("IS_BROWSER")&&(0,r.env)().setPlatform("node",new c)},{"9eae209353a3d608":"5xM3z","../environment":"7s0uC",dfcdb939bb56fbb8:"34v0S","3818a9dc927c4605":"34v0S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"34v0S":[function(e,E,s){"use strict"},{}],clw49:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"buffer",()=>m);var r=e("../tensor"),d=e("../util");function m(f,i="float32",o){return i=i||"float32",d.assertNonNegativeIntegerDimensions(f),new r.TensorBuffer(f,i,o)}},{"../tensor":"hRGZH","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eaOhx:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cast",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a){const l=(0,m.convertToTensor)(c,"x","cast");if(!f.isValidDtype(a))throw new Error(`Failed to cast to unknown dtype ${a}`);if(a==="string"&&l.dtype!=="string"||a!=="string"&&l.dtype==="string")throw new Error("Only strings can be casted to strings");const u={x:l},p={dtype:a};return r.ENGINE.runKernel(d.Cast,u,p)}const n=(0,i.op)({cast_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lnPTw:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"clone",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","clone","string_or_numeric")};return r.ENGINE.runKernel(d.Identity,a)}const o=(0,f.op)({clone_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hfayS:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"print",()=>r);function r(d,m=!1){console.log(d.toString(m))}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1k8ar":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"registerOptimizers",()=>l);var r=e("./adadelta_optimizer"),d=e("./adagrad_optimizer"),m=e("./adam_optimizer"),f=e("./adamax_optimizer"),i=e("./momentum_optimizer"),o=e("./rmsprop_optimizer"),n=e("./sgd_optimizer"),c=e("../serialization");const a=[r.AdadeltaOptimizer,d.AdagradOptimizer,m.AdamOptimizer,f.AdamaxOptimizer,i.MomentumOptimizer,o.RMSPropOptimizer,n.SGDOptimizer];function l(){for(const u of a)(0,c.registerClass)(u)}},{"./adadelta_optimizer":"jueNe","./adagrad_optimizer":"knoCw","./adam_optimizer":"iEGnS","./adamax_optimizer":"dFQur","./momentum_optimizer":"PTiwT","./rmsprop_optimizer":"eCBOJ","./sgd_optimizer":"2g2Lt","../serialization":"6K9Ec","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jueNe:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AdadeltaOptimizer",()=>l);var r=e("../engine"),d=e("../globals"),m=e("../ops/add"),f=e("../ops/div"),i=e("../ops/mul"),o=e("../ops/ops"),n=e("../ops/square"),c=e("../ops/zeros_like"),a=e("./optimizer");class l extends a.Optimizer{static get className(){return"Adadelta"}constructor(p,h,g=null){super();this.learningRate=p,this.rho=h,this.epsilon=g,this.accumulatedGrads=[],this.accumulatedUpdates=[],g==null&&(this.epsilon=r.ENGINE.backend.epsilon())}applyGradients(p){(Array.isArray(p)?p.map(g=>g.name):Object.keys(p)).forEach((g,v)=>{const _=r.ENGINE.registeredVariables[g],k=!1;this.accumulatedGrads[v]==null&&(this.accumulatedGrads[v]={originalName:`${g}/accum_grad`,variable:(0,d.tidy)(()=>(0,c.zerosLike)(_).variable(k))}),this.accumulatedUpdates[v]==null&&(this.accumulatedUpdates[v]={originalName:`${g}/accum_var`,variable:(0,d.tidy)(()=>(0,c.zerosLike)(_).variable(k))});const y=Array.isArray(p)?p[v].tensor:p[g];if(y==null)return;const x=this.accumulatedGrads[v].variable,b=this.accumulatedUpdates[v].variable;(0,d.tidy)(()=>{const C=(0,m.add)((0,i.mul)(x,this.rho),(0,i.mul)((0,n.square)(y),1-this.rho)),w=(0,i.mul)((0,f.div)((0,o.sqrt)((0,m.add)(b,this.epsilon)),(0,o.sqrt)((0,m.add)(x,this.epsilon))),y),N=(0,m.add)((0,i.mul)(b,this.rho),(0,i.mul)((0,n.square)(w),1-this.rho));x.assign(C),b.assign(N);const T=(0,m.add)((0,i.mul)(w,-this.learningRate),_);_.assign(T)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&((0,d.dispose)(this.accumulatedGrads.map(p=>p.variable)),(0,d.dispose)(this.accumulatedUpdates.map(p=>p.variable)))}async getWeights(){const p=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(p.map(h=>({name:h.originalName,tensor:h.variable})))}async setWeights(p){p=await this.extractIterations(p);const h=p.length/2,g=!1;this.accumulatedGrads=p.slice(0,h).map(v=>({originalName:v.name,variable:v.tensor.variable(g)})),this.accumulatedUpdates=p.slice(h,h*2).map(v=>({originalName:v.name,variable:v.tensor.variable(g)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(p,h){return new p(h.learningRate,h.rho,h.epsilon)}}},{"../engine":"eID09","../globals":"3oVUX","../ops/add":"2ocTD","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/ops":"iu1Y6","../ops/square":"6AZak","../ops/zeros_like":"0HiLr","./optimizer":"ar0Uz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3oVUX":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"enableProdMode",()=>i),t.export(s,"enableDebugMode",()=>o),t.export(s,"disableDeprecationWarnings",()=>n),t.export(s,"deprecationWarn",()=>c),t.export(s,"disposeVariables",()=>a),t.export(s,"engine",()=>l),t.export(s,"memory",()=>u),t.export(s,"profile",()=>p),t.export(s,"tidy",()=>h),t.export(s,"dispose",()=>g),t.export(s,"keep",()=>v),t.export(s,"time",()=>_),t.export(s,"setBackend",()=>k),t.export(s,"ready",()=>y),t.export(s,"getBackend",()=>x),t.export(s,"removeBackend",()=>b),t.export(s,"findBackend",()=>C),t.export(s,"findBackendFactory",()=>w),t.export(s,"registerBackend",()=>N),t.export(s,"backend",()=>T),t.export(s,"setPlatform",()=>F);var r=e("./engine"),d=e("./environment"),m=e("./tensor"),f=e("./tensor_util");function i(){(0,d.env)().set("PROD",!0)}function o(){(0,d.env)().set("DEBUG",!0)}function n(){(0,d.env)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(S){(0,d.env)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(S+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}(0,m.setDeprecationWarningFn)(c);function a(){r.ENGINE.disposeVariables()}function l(){return r.ENGINE}function u(){return r.ENGINE.memory()}function p(S){return r.ENGINE.profile(S)}function h(S,I){return r.ENGINE.tidy(S,I)}function g(S){(0,f.getTensorsInContainer)(S).forEach(j=>j.dispose())}function v(S){return r.ENGINE.keep(S)}function _(S){return r.ENGINE.time(S)}function k(S){return r.ENGINE.setBackend(S)}function y(){return r.ENGINE.ready()}function x(){return r.ENGINE.backendName}function b(S){r.ENGINE.removeBackend(S)}function C(S){return r.ENGINE.findBackend(S)}function w(S){return r.ENGINE.findBackendFactory(S)}function N(S,I,j=1){return r.ENGINE.registerBackend(S,I,j)}function T(){return r.ENGINE.backend}function F(S,I){(0,d.env)().setPlatform(S,I)}},{"./engine":"eID09","./environment":"7s0uC","./tensor":"hRGZH","./tensor_util":"gj10y","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2ocTD":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"add",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./operation");function o(c,a){let l=(0,f.convertToTensor)(c,"a","add"),u=(0,f.convertToTensor)(a,"b","add");[l,u]=(0,m.makeTypesMatch)(l,u);const p={a:l,b:u};return r.ENGINE.runKernel(d.Add,p)}const n=(0,i.op)({add_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4BOnP":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"div",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./floorDiv"),o=e("./operation");function n(a,l){let u=(0,f.convertToTensor)(a,"a","div"),p=(0,f.convertToTensor)(l,"b","div");if([u,p]=(0,m.makeTypesMatch)(u,p),u.dtype==="int32"&&p.dtype==="int32")return(0,i.floorDiv)(u,p);const h={a:u,b:p},g={};return r.ENGINE.runKernel(d.RealDiv,h,g)}const c=(0,o.op)({div_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./floorDiv":"k05AJ","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k05AJ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"floorDiv",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./operation");function o(c,a){let l=(0,f.convertToTensor)(c,"a","floorDiv"),u=(0,f.convertToTensor)(a,"b","floorDiv");[l,u]=(0,m.makeTypesMatch)(l,u);const p={a:l,b:u};return r.ENGINE.runKernel(d.FloorDiv,p)}const n=(0,i.op)({floorDiv_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kfDrf:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mul",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./operation");function o(c,a){let l=(0,f.convertToTensor)(c,"a","mul"),u=(0,f.convertToTensor)(a,"b","mul");[l,u]=(0,m.makeTypesMatch)(l,u);const p={a:l,b:u};return r.ENGINE.runKernel(d.Multiply,p)}const n=(0,i.op)({mul_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iu1Y6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"abs",()=>r.abs),t.export(s,"acos",()=>d.acos),t.export(s,"acosh",()=>m.acosh),t.export(s,"add",()=>f.add),t.export(s,"addN",()=>i.addN),t.export(s,"all",()=>o.all),t.export(s,"any",()=>n.any),t.export(s,"argMax",()=>c.argMax),t.export(s,"argMin",()=>a.argMin),t.export(s,"asin",()=>l.asin),t.export(s,"asinh",()=>u.asinh),t.export(s,"atan",()=>p.atan),t.export(s,"atan2",()=>h.atan2),t.export(s,"atanh",()=>g.atanh),t.export(s,"avgPool",()=>v.avgPool),t.export(s,"avgPool3d",()=>_.avgPool3d),t.export(s,"basicLSTMCell",()=>k.basicLSTMCell),t.export(s,"batchToSpaceND",()=>y.batchToSpaceND),t.export(s,"batchNorm",()=>x.batchNorm),t.export(s,"batchNorm2d",()=>b.batchNorm2d),t.export(s,"batchNorm3d",()=>C.batchNorm3d),t.export(s,"batchNorm4d",()=>w.batchNorm4d),t.export(s,"bincount",()=>N.bincount),t.export(s,"bitwiseAnd",()=>T.bitwiseAnd),t.export(s,"broadcastArgs",()=>F.broadcastArgs),t.export(s,"broadcastTo",()=>S.broadcastTo),t.export(s,"buffer",()=>I.buffer),t.export(s,"cast",()=>j.cast),t.export(s,"ceil",()=>D.ceil),t.export(s,"clipByValue",()=>O.clipByValue),t.export(s,"clone",()=>$.clone),t.export(s,"complex",()=>P.complex),t.export(s,"concat",()=>R.concat),t.export(s,"concat1d",()=>A.concat1d),t.export(s,"concat2d",()=>z.concat2d),t.export(s,"concat3d",()=>G.concat3d),t.export(s,"concat4d",()=>L.concat4d),t.export(s,"conv1d",()=>M.conv1d),t.export(s,"conv2d",()=>V.conv2d),t.export(s,"conv2dTranspose",()=>K.conv2dTranspose),t.export(s,"conv3d",()=>W.conv3d),t.export(s,"conv3dTranspose",()=>H.conv3dTranspose),t.export(s,"cos",()=>Z.cos),t.export(s,"cosh",()=>Q.cosh),t.export(s,"cumprod",()=>te.cumprod),t.export(s,"cumsum",()=>ee.cumsum),t.export(s,"denseBincount",()=>ne.denseBincount),t.export(s,"depthToSpace",()=>se.depthToSpace),t.export(s,"depthwiseConv2d",()=>X.depthwiseConv2d),t.export(s,"diag",()=>U.diag),t.export(s,"dilation2d",()=>Y.dilation2d),t.export(s,"div",()=>J.div),t.export(s,"divNoNan",()=>q.divNoNan),t.export(s,"dot",()=>ae.dot),t.export(s,"einsum",()=>ie.einsum),t.export(s,"elu",()=>le.elu),t.export(s,"ensureShape",()=>ue.ensureShape),t.export(s,"equal",()=>B.equal),t.export(s,"erf",()=>re.erf),t.export(s,"euclideanNorm",()=>oe.euclideanNorm),t.export(s,"exp",()=>de.exp),t.export(s,"expandDims",()=>fe.expandDims),t.export(s,"expm1",()=>pe.expm1),t.export(s,"eye",()=>me.eye),t.export(s,"fill",()=>he.fill),t.export(s,"floor",()=>ge.floor),t.export(s,"floorDiv",()=>ve.floorDiv),t.export(s,"gather",()=>ke.gather),t.export(s,"greater",()=>_e.greater),t.export(s,"greaterEqual",()=>ye.greaterEqual),t.export(s,"imag",()=>be.imag),t.export(s,"isFinite",()=>Ce.isFinite),t.export(s,"isInf",()=>we.isInf),t.export(s,"isNaN",()=>xe.isNaN),t.export(s,"leakyRelu",()=>Ne.leakyRelu),t.export(s,"less",()=>Ie.less),t.export(s,"lessEqual",()=>Te.lessEqual),t.export(s,"linspace",()=>Ee.linspace),t.export(s,"localResponseNormalization",()=>Fe.localResponseNormalization),t.export(s,"log",()=>De.log),t.export(s,"log1p",()=>Ae.log1p),t.export(s,"logSigmoid",()=>Pe.logSigmoid),t.export(s,"logSoftmax",()=>Re.logSoftmax),t.export(s,"logSumExp",()=>$e.logSumExp),t.export(s,"logicalAnd",()=>Oe.logicalAnd),t.export(s,"logicalNot",()=>Se.logicalNot),t.export(s,"logicalOr",()=>je.logicalOr),t.export(s,"logicalXor",()=>ze.logicalXor),t.export(s,"lowerBound",()=>Ge.lowerBound),t.export(s,"matMul",()=>Le.matMul),t.export(s,"max",()=>Me.max),t.export(s,"maxPool",()=>Ve.maxPool),t.export(s,"maxPool3d",()=>Ue.maxPool3d),t.export(s,"maxPoolWithArgmax",()=>Be.maxPoolWithArgmax),t.export(s,"maximum",()=>He.maximum),t.export(s,"mean",()=>We.mean),t.export(s,"meshgrid",()=>Ke.meshgrid),t.export(s,"min",()=>ce.min),t.export(s,"minimum",()=>Ye.minimum),t.export(s,"mirrorPad",()=>Xe.mirrorPad),t.export(s,"mod",()=>Ze.mod),t.export(s,"moments",()=>Qe.moments),t.export(s,"mul",()=>Je.mul),t.export(s,"multiRNNCell",()=>qe.multiRNNCell),t.export(s,"multinomial",()=>et.multinomial),t.export(s,"neg",()=>tt.neg),t.export(s,"notEqual",()=>st.notEqual),t.export(s,"oneHot",()=>rt.oneHot),t.export(s,"ones",()=>nt.ones),t.export(s,"onesLike",()=>at.onesLike),t.export(s,"outerProduct",()=>ot.outerProduct),t.export(s,"pad",()=>lt.pad),t.export(s,"pad1d",()=>it.pad1d),t.export(s,"pad2d",()=>ct.pad2d),t.export(s,"pad3d",()=>ut.pad3d),t.export(s,"pad4d",()=>pt.pad4d),t.export(s,"pool",()=>dt.pool),t.export(s,"pow",()=>ft.pow),t.export(s,"prelu",()=>mt.prelu),t.export(s,"print",()=>ht.print),t.export(s,"prod",()=>gt.prod),t.export(s,"raggedGather",()=>vt.raggedGather),t.export(s,"raggedRange",()=>_t.raggedRange),t.export(s,"raggedTensorToTensor",()=>kt.raggedTensorToTensor),t.export(s,"rand",()=>yt.rand),t.export(s,"randomGamma",()=>bt.randomGamma),t.export(s,"randomNormal",()=>xt.randomNormal),t.export(s,"randomStandardNormal",()=>Ct.randomStandardNormal),t.export(s,"randomUniform",()=>wt.randomUniform),t.export(s,"randomUniformInt",()=>Nt.randomUniformInt),t.export(s,"range",()=>It.range),t.export(s,"real",()=>St.real),t.export(s,"reciprocal",()=>jt.reciprocal),t.export(s,"relu",()=>Tt.relu),t.export(s,"relu6",()=>Et.relu6),t.export(s,"reshape",()=>Ft.reshape),t.export(s,"reverse",()=>$t.reverse),t.export(s,"reverse1d",()=>Ot.reverse1d),t.export(s,"reverse2d",()=>zt.reverse2d),t.export(s,"reverse3d",()=>Gt.reverse3d),t.export(s,"reverse4d",()=>Lt.reverse4d),t.export(s,"round",()=>Mt.round),t.export(s,"rsqrt",()=>Vt.rsqrt),t.export(s,"scalar",()=>Ut.scalar),t.export(s,"selu",()=>Bt.selu),t.export(s,"separableConv2d",()=>Ht.separableConv2d),t.export(s,"setdiff1dAsync",()=>Wt.setdiff1dAsync),t.export(s,"sigmoid",()=>Kt.sigmoid),t.export(s,"sign",()=>Yt.sign),t.export(s,"sin",()=>Xt.sin),t.export(s,"sinh",()=>Zt.sinh),t.export(s,"slice",()=>Qt.slice),t.export(s,"slice1d",()=>Jt.slice1d),t.export(s,"slice2d",()=>qt.slice2d),t.export(s,"slice3d",()=>es.slice3d),t.export(s,"slice4d",()=>ts.slice4d),t.export(s,"softmax",()=>ss.softmax),t.export(s,"softplus",()=>rs.softplus),t.export(s,"spaceToBatchND",()=>ns.spaceToBatchND),t.export(s,"fft",()=>Dt.fft),t.export(s,"ifft",()=>At.ifft),t.export(s,"irfft",()=>Pt.irfft),t.export(s,"rfft",()=>Rt.rfft),t.export(s,"split",()=>as.split),t.export(s,"sqrt",()=>os.sqrt),t.export(s,"square",()=>ls.square),t.export(s,"squaredDifference",()=>is.squaredDifference),t.export(s,"squeeze",()=>cs.squeeze),t.export(s,"stack",()=>us.stack),t.export(s,"step",()=>ps.step),t.export(s,"stridedSlice",()=>ds.stridedSlice),t.export(s,"sub",()=>fs.sub),t.export(s,"sum",()=>hs.sum),t.export(s,"tan",()=>gs.tan),t.export(s,"tanh",()=>vs.tanh),t.export(s,"tensor",()=>_s.tensor),t.export(s,"tensor1d",()=>ks.tensor1d),t.export(s,"tensor2d",()=>ys.tensor2d),t.export(s,"tensor3d",()=>bs.tensor3d),t.export(s,"tensor4d",()=>xs.tensor4d),t.export(s,"tensor5d",()=>Ns.tensor5d),t.export(s,"tensor6d",()=>Is.tensor6d),t.export(s,"tensorScatterUpdate",()=>Ss.tensorScatterUpdate),t.export(s,"tile",()=>js.tile),t.export(s,"topk",()=>Ts.topk),t.export(s,"truncatedNormal",()=>Es.truncatedNormal),t.export(s,"unique",()=>Fs.unique),t.export(s,"unsortedSegmentSum",()=>Ds.unsortedSegmentSum),t.export(s,"unstack",()=>As.unstack),t.export(s,"upperBound",()=>Ps.upperBound),t.export(s,"variable",()=>Rs.variable),t.export(s,"where",()=>$s.where),t.export(s,"whereAsync",()=>Os.whereAsync),t.export(s,"zeros",()=>zs.zeros),t.export(s,"zerosLike",()=>Gs.zerosLike),t.export(s,"op",()=>Cs.op),t.export(s,"OP_SCOPE_SUFFIX",()=>Cs.OP_SCOPE_SUFFIX),t.export(s,"image",()=>Gr),t.export(s,"linalg",()=>Lr),t.export(s,"losses",()=>Mr),t.export(s,"spectral",()=>Or),t.export(s,"fused",()=>Qs),t.export(s,"signal",()=>zr),t.export(s,"sparse",()=>Vr),t.export(s,"string",()=>Ur);var r=e("./abs"),d=e("./acos"),m=e("./acosh"),f=e("./add"),i=e("./add_n"),o=e("./all"),n=e("./any"),c=e("./arg_max"),a=e("./arg_min"),l=e("./asin"),u=e("./asinh"),p=e("./atan"),h=e("./atan2"),g=e("./atanh"),v=e("./avg_pool"),_=e("./avg_pool_3d"),k=e("./basic_lstm_cell"),y=e("./batch_to_space_nd"),x=e("./batchnorm"),b=e("./batchnorm2d"),C=e("./batchnorm3d"),w=e("./batchnorm4d"),N=e("./bincount"),T=e("./bitwise_and"),F=e("./broadcast_args"),S=e("./broadcast_to"),I=e("./buffer"),j=e("./cast"),D=e("./ceil"),O=e("./clip_by_value"),$=e("./clone"),P=e("./complex"),R=e("./concat"),A=e("./concat_1d"),z=e("./concat_2d"),G=e("./concat_3d"),L=e("./concat_4d"),M=e("./conv1d"),V=e("./conv2d"),K=e("./conv2d_transpose"),W=e("./conv3d"),H=e("./conv3d_transpose"),Z=e("./cos"),Q=e("./cosh"),te=e("./cumprod"),ee=e("./cumsum"),ne=e("./dense_bincount"),se=e("./depth_to_space"),X=e("./depthwise_conv2d"),U=e("./diag"),Y=e("./dilation2d"),J=e("./div"),q=e("./div_no_nan"),ae=e("./dot"),ie=e("./einsum"),le=e("./elu"),ue=e("./ensure_shape"),B=e("./equal"),re=e("./erf"),oe=e("./euclidean_norm"),de=e("./exp"),fe=e("./expand_dims"),pe=e("./expm1"),me=e("./eye"),he=e("./fill"),ge=e("./floor"),ve=e("./floorDiv"),ke=e("./gather"),_e=e("./greater"),ye=e("./greater_equal"),be=e("./imag"),Ce=e("./is_finite"),we=e("./is_inf"),xe=e("./is_nan"),Ne=e("./leaky_relu"),Ie=e("./less"),Te=e("./less_equal"),Ee=e("./linspace"),Fe=e("./local_response_normalization"),De=e("./log"),Ae=e("./log1p"),Pe=e("./log_sigmoid"),Re=e("./log_softmax"),$e=e("./log_sum_exp"),Oe=e("./logical_and"),Se=e("./logical_not"),je=e("./logical_or"),ze=e("./logical_xor"),Ge=e("./lower_bound"),Le=e("./mat_mul"),Me=e("./max"),Ve=e("./max_pool"),Ue=e("./max_pool_3d"),Be=e("./max_pool_with_argmax"),He=e("./maximum"),We=e("./mean"),Ke=e("./meshgrid"),ce=e("./min"),Ye=e("./minimum"),Xe=e("./mirror_pad"),Ze=e("./mod"),Qe=e("./moments"),Je=e("./mul"),qe=e("./multi_rnn_cell"),et=e("./multinomial"),tt=e("./neg"),st=e("./not_equal"),rt=e("./one_hot"),nt=e("./ones"),at=e("./ones_like"),ot=e("./outer_product"),lt=e("./pad"),it=e("./pad1d"),ct=e("./pad2d"),ut=e("./pad3d"),pt=e("./pad4d"),dt=e("./pool"),ft=e("./pow"),mt=e("./prelu"),ht=e("./print"),gt=e("./prod"),vt=e("./ragged_gather"),_t=e("./ragged_range"),kt=e("./ragged_tensor_to_tensor"),yt=e("./rand"),bt=e("./random_gamma"),xt=e("./random_normal"),Ct=e("./random_standard_normal"),wt=e("./random_uniform"),Nt=e("./random_uniform_int"),It=e("./range"),St=e("./real"),jt=e("./reciprocal"),Tt=e("./relu"),Et=e("./relu6"),Ft=e("./reshape"),$t=e("./reverse"),Ot=e("./reverse_1d"),zt=e("./reverse_2d"),Gt=e("./reverse_3d"),Lt=e("./reverse_4d"),Mt=e("./round"),Vt=e("./rsqrt"),Ut=e("./scalar"),Bt=e("./selu"),Ht=e("./separable_conv2d"),Wt=e("./setdiff1d_async"),Kt=e("./sigmoid"),Yt=e("./sign"),Xt=e("./sin"),Zt=e("./sinh"),Qt=e("./slice"),Jt=e("./slice1d"),qt=e("./slice2d"),es=e("./slice3d"),ts=e("./slice4d"),ss=e("./softmax"),rs=e("./softplus"),ns=e("./space_to_batch_nd"),Dt=e("./spectral/fft"),At=e("./spectral/ifft"),Pt=e("./spectral/irfft"),Rt=e("./spectral/rfft"),as=e("./split"),os=e("./sqrt"),ls=e("./square"),is=e("./squared_difference"),cs=e("./squeeze"),us=e("./stack"),ps=e("./step"),ds=e("./strided_slice"),fs=e("./sub"),hs=e("./sum"),gs=e("./tan"),vs=e("./tanh"),_s=e("./tensor"),ks=e("./tensor1d"),ys=e("./tensor2d"),bs=e("./tensor3d"),xs=e("./tensor4d"),Ns=e("./tensor5d"),Is=e("./tensor6d"),Ss=e("./tensor_scatter_update"),js=e("./tile"),Ts=e("./topk"),Es=e("./truncated_normal"),Fs=e("./unique"),Ds=e("./unsorted_segment_sum"),As=e("./unstack"),Ps=e("./upper_bound"),Rs=e("./variable"),$s=e("./where"),Os=e("./where_async"),zs=e("./zeros"),Gs=e("./zeros_like"),Ls=e("./boolean_mask");t.exportAll(Ls,s);var Ms=e("./transpose");t.exportAll(Ms,s);var Vs=e("./norm");t.exportAll(Vs,s);var Us=e("./moving_average");t.exportAll(Us,s);var Bs=e("./scatter_nd");t.exportAll(Bs,s);var Hs=e("./search_sorted");t.exportAll(Hs,s);var Ws=e("./sparse_to_dense");t.exportAll(Ws,s);var Ks=e("./gather_nd");t.exportAll(Ks,s);var Ys=e("./dropout");t.exportAll(Ys,s);var Xs=e("./signal_ops_util");t.exportAll(Xs,s);var Zs=e("./in_top_k");t.exportAll(Zs,s);var Cs=e("./operation"),Qs=e("./fused_ops"),Js=e("./signal/hamming_window"),qs=e("./signal/hann_window"),er=e("./signal/frame"),tr=e("./signal/stft"),sr=e("./image/crop_and_resize"),rr=e("./image/flip_left_right"),nr=e("./image/grayscale_to_rgb"),ar=e("./image/rgb_to_grayscale"),or=e("./image/rotate_with_offset"),lr=e("./image/non_max_suppression"),ir=e("./image/non_max_suppression_async"),cr=e("./image/non_max_suppression_with_score"),ur=e("./image/non_max_suppression_with_score_async"),pr=e("./image/non_max_suppression_padded"),dr=e("./image/non_max_suppression_padded_async"),fr=e("./image/resize_bilinear"),mr=e("./image/resize_nearest_neighbor"),hr=e("./image/threshold"),gr=e("./image/transform"),vr=e("./linalg/band_part"),_r=e("./linalg/gram_schmidt"),kr=e("./linalg/qr"),yr=e("./losses/absolute_difference"),br=e("./losses/compute_weighted_loss"),xr=e("./losses/cosine_distance"),Cr=e("./losses/hinge_loss"),wr=e("./losses/huber_loss"),Nr=e("./losses/log_loss"),Ir=e("./losses/mean_squared_error"),Sr=e("./losses/sigmoid_cross_entropy"),jr=e("./losses/softmax_cross_entropy"),Tr=e("./sparse/sparse_fill_empty_rows"),Er=e("./sparse/sparse_reshape"),Fr=e("./sparse/sparse_segment_mean"),Dr=e("./sparse/sparse_segment_sum"),Ar=e("./string/string_n_grams"),Pr=e("./string/string_split"),Rr=e("./string/string_to_hash_bucket_fast"),$r=e("./string/static_regex_replace");const Or={fft:Dt.fft,ifft:At.ifft,rfft:Rt.rfft,irfft:Pt.irfft},zr={hammingWindow:Js.hammingWindow,hannWindow:qs.hannWindow,frame:er.frame,stft:tr.stft},Gr={flipLeftRight:rr.flipLeftRight,grayscaleToRGB:nr.grayscaleToRGB,resizeNearestNeighbor:mr.resizeNearestNeighbor,resizeBilinear:fr.resizeBilinear,rgbToGrayscale:ar.rgbToGrayscale,rotateWithOffset:or.rotateWithOffset,cropAndResize:sr.cropAndResize,nonMaxSuppression:lr.nonMaxSuppression,nonMaxSuppressionAsync:ir.nonMaxSuppressionAsync,nonMaxSuppressionWithScore:cr.nonMaxSuppressionWithScore,nonMaxSuppressionWithScoreAsync:ur.nonMaxSuppressionWithScoreAsync,nonMaxSuppressionPadded:pr.nonMaxSuppressionPadded,nonMaxSuppressionPaddedAsync:dr.nonMaxSuppressionPaddedAsync,threshold:hr.threshold,transform:gr.transform},Lr={bandPart:vr.bandPart,gramSchmidt:_r.gramSchmidt,qr:kr.qr},Mr={absoluteDifference:yr.absoluteDifference,computeWeightedLoss:br.computeWeightedLoss,cosineDistance:xr.cosineDistance,hingeLoss:Cr.hingeLoss,huberLoss:wr.huberLoss,logLoss:Nr.logLoss,meanSquaredError:Ir.meanSquaredError,sigmoidCrossEntropy:Sr.sigmoidCrossEntropy,softmaxCrossEntropy:jr.softmaxCrossEntropy},Vr={sparseFillEmptyRows:Tr.sparseFillEmptyRows,sparseReshape:Er.sparseReshape,sparseSegmentMean:Fr.sparseSegmentMean,sparseSegmentSum:Dr.sparseSegmentSum},Ur={stringNGrams:Ar.stringNGrams,stringSplit:Pr.stringSplit,stringToHashBucketFast:Rr.stringToHashBucketFast,staticRegexReplace:$r.staticRegexReplace}},{"./abs":"2yA8M","./acos":"lohqD","./acosh":"40YxL","./add":"2ocTD","./add_n":"7YN19","./all":"igf6q","./any":"eq1Te","./arg_max":"j4fPS","./arg_min":"a5NPa","./asin":"78xy0","./asinh":"drhJd","./atan":"1PK5c","./atan2":"hC9rc","./atanh":"5xLWg","./avg_pool":"iJDL3","./avg_pool_3d":"4WfF9","./basic_lstm_cell":"7pcc1","./batch_to_space_nd":"8SWXq","./batchnorm":"5kwLS","./batchnorm2d":"7J34Z","./batchnorm3d":"zrGMD","./batchnorm4d":"erPQt","./bincount":"fV2lv","./bitwise_and":"4Ji2c","./broadcast_args":"dkSnl","./broadcast_to":"de7ms","./buffer":"clw49","./cast":"eaOhx","./ceil":"6CAL1","./clip_by_value":"5hqIx","./clone":"lnPTw","./complex":"gJKVw","./concat":"bZcSO","./concat_1d":"kOtzv","./concat_2d":"b28eZ","./concat_3d":"h5hqR","./concat_4d":"jI8Bl","./conv1d":"2oG4M","./conv2d":"yMZmx","./conv2d_transpose":"kwS67","./conv3d":"aYLQJ","./conv3d_transpose":"cLVGh","./cos":"5CQ2v","./cosh":"7OBbg","./cumprod":"1DIHN","./cumsum":"3lap7","./dense_bincount":"beNZW","./depth_to_space":"aW2Gu","./depthwise_conv2d":"2Aya7","./diag":"8KSwm","./dilation2d":"4VWbu","./div":"4BOnP","./div_no_nan":"ajkzf","./dot":"jeGwo","./einsum":"4Lsi1","./elu":"IJvcE","./ensure_shape":"3yaoj","./equal":"9t9zd","./erf":"euJBE","./euclidean_norm":"017e3","./exp":"8j9Nl","./expand_dims":"7to7x","./expm1":"gFGhf","./eye":"lE6Vo","./fill":"ckpag","./floor":"290Z3","./floorDiv":"k05AJ","./gather":"fCVf8","./greater":"kEWCa","./greater_equal":"lCE2c","./imag":"jEnsh","./is_finite":"fLUcH","./is_inf":"GPtSK","./is_nan":"JCWEy","./leaky_relu":"g5HtG","./less":"gvtbk","./less_equal":"fNUcT","./linspace":"dtjoK","./local_response_normalization":"6orK2","./log":"2y0F2","./log1p":"2jl3l","./log_sigmoid":"dUvNi","./log_softmax":"7eev5","./log_sum_exp":"aioCW","./logical_and":"eqe0O","./logical_not":"hZuGz","./logical_or":"h8nMl","./logical_xor":"lO4Lx","./lower_bound":"dkdbt","./mat_mul":"2iQjP","./max":"khzzn","./max_pool":"17lyl","./max_pool_3d":"7JZyQ","./max_pool_with_argmax":"ijZue","./maximum":"fTDK0","./mean":"3OoGB","./meshgrid":"6dHzi","./min":"ifMr4","./minimum":"2YOa4","./mirror_pad":"hAxX2","./mod":"04Yeo","./moments":"8IKxg","./mul":"kfDrf","./multi_rnn_cell":"52uga","./multinomial":"d7gAE","./neg":"gXSYm","./not_equal":"cCGqV","./one_hot":"bHJCu","./ones":"cjU7J","./ones_like":"4nFZK","./outer_product":"63orM","./pad":"30COC","./pad1d":"gIIvf","./pad2d":"lUGmv","./pad3d":"4HHGF","./pad4d":"iwL6g","./pool":"c1BYj","./pow":"hg0HR","./prelu":"lFobp","./print":"hfayS","./prod":"bw3dp","./ragged_gather":"11qs0","./ragged_range":"nsPQk","./ragged_tensor_to_tensor":"cd0hx","./rand":"5Q4PR","./random_gamma":"8Mnr8","./random_normal":"2SdXP","./random_standard_normal":"gv3SM","./random_uniform":"bgoTO","./random_uniform_int":"6Ahef","./range":"jWxCz","./real":"e8Ty6","./reciprocal":"40LSU","./relu":"ksZVD","./relu6":"9hEUU","./reshape":"5iOnm","./reverse":"aNxZz","./reverse_1d":"9K1Kp","./reverse_2d":"kaeNM","./reverse_3d":"2tj4i","./reverse_4d":"9uxQ1","./round":"2FEmu","./rsqrt":"h2SJp","./scalar":"1SA7b","./selu":"1S9no","./separable_conv2d":"janaT","./setdiff1d_async":"jfk69","./sigmoid":"atwNP","./sign":"gEPy4","./sin":"6zeDO","./sinh":"emuxO","./slice":"9qYv4","./slice1d":"iLkhL","./slice2d":"1CZzj","./slice3d":"gNnXx","./slice4d":"esmJ6","./softmax":"25xmz","./softplus":"eudDV","./space_to_batch_nd":"hawyX","./spectral/fft":"9hd3o","./spectral/ifft":"3yVNF","./spectral/irfft":"7gwdt","./spectral/rfft":"dhjoM","./split":"d81fP","./sqrt":"VUCvx","./square":"6AZak","./squared_difference":"cWGon","./squeeze":"3LX0Y","./stack":"bf1WU","./step":"89RLy","./strided_slice":"1FUj8","./sub":"ihs7S","./sum":"8K3V0","./tan":"0vb9d","./tanh":"lJGuU","./tensor":"cbWW7","./tensor1d":"7Loyb","./tensor2d":"6pkh7","./tensor3d":"95xiR","./tensor4d":"7JEcJ","./tensor5d":"kdKLv","./tensor6d":"fMQgD","./tensor_scatter_update":"fjQXJ","./tile":"j34EP","./topk":"37Jzb","./truncated_normal":"eXBbS","./unique":"au9MH","./unsorted_segment_sum":"f19re","./unstack":"eKCnA","./upper_bound":"dDeJ8","./variable":"b64O0","./where":"c2TLR","./where_async":"drCKR","./zeros":"lWQu4","./zeros_like":"0HiLr","./boolean_mask":"auJXH","./transpose":"iN8Um","./norm":"a7G0a","./moving_average":"o0Juc","./scatter_nd":"agVbG","./search_sorted":"eUGeQ","./sparse_to_dense":"d0a3m","./gather_nd":"7l4RC","./dropout":"6JCZT","./signal_ops_util":"iJyYE","./in_top_k":"9qO0a","./operation":"5CKbF","./fused_ops":"bnIvI","./signal/hamming_window":"eE18k","./signal/hann_window":"1Ro11","./signal/frame":"hggYY","./signal/stft":"11SkP","./image/crop_and_resize":"gn8cZ","./image/flip_left_right":"dzaMc","./image/grayscale_to_rgb":"kxoz5","./image/rgb_to_grayscale":"1CsPB","./image/rotate_with_offset":"akMuG","./image/non_max_suppression":"irWaD","./image/non_max_suppression_async":"16l36","./image/non_max_suppression_with_score":"3vK71","./image/non_max_suppression_with_score_async":"e5YaP","./image/non_max_suppression_padded":"7uLk5","./image/non_max_suppression_padded_async":"fstwv","./image/resize_bilinear":"3Sz6B","./image/resize_nearest_neighbor":"iB9E5","./image/threshold":"E6UxQ","./image/transform":"1ZVax","./linalg/band_part":"gDWqX","./linalg/gram_schmidt":"fvIMn","./linalg/qr":"cDvml","./losses/absolute_difference":"2JQrT","./losses/compute_weighted_loss":"3pu2G","./losses/cosine_distance":"ktMLc","./losses/hinge_loss":"jUfH7","./losses/huber_loss":"kNBnV","./losses/log_loss":"b5mul","./losses/mean_squared_error":"fhwN0","./losses/sigmoid_cross_entropy":"jlgk9","./losses/softmax_cross_entropy":"g4oKU","./sparse/sparse_fill_empty_rows":"z5ZLN","./sparse/sparse_reshape":"4YrN6","./sparse/sparse_segment_mean":"aGdXZ","./sparse/sparse_segment_sum":"R1JHI","./string/string_n_grams":"PZM1g","./string/string_split":"2ncXM","./string/string_to_hash_bucket_fast":"30QBZ","./string/static_regex_replace":"cfIpH","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2yA8M":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"abs",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const c=(0,m.convertToTensor)(n,"x","abs");if(c.dtype==="complex64"){const a={x:c};return r.ENGINE.runKernel(d.ComplexAbs,a)}else{const a={x:c};return r.ENGINE.runKernel(d.Abs,a)}}const o=(0,f.op)({abs_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lohqD:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"acos",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","acos")};return r.ENGINE.runKernel(d.Acos,a)}const o=(0,f.op)({acos_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"40YxL":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"acosh",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","acosh")};return r.ENGINE.runKernel(d.Acosh,a)}const o=(0,f.op)({acosh_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7YN19":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"addN",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c){f.assert(Array.isArray(c),()=>"The argument passed to tf.addN() must be a list of tensors"),f.assert(c.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${c.length}`);const a=c.map((p,h)=>(0,m.convertToTensor)(p,`tensors${h}`,"addN")),l=a[0];a.forEach(p=>{if(p.dtype!==l.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),a.forEach(p=>{if(!f.arraysEqual(p.shape,l.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const u=a;return r.ENGINE.runKernel(d.AddN,u)}const n=(0,i.op)({addN_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],igf6q:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"all",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=null,a=!1){const u={x:(0,m.convertToTensor)(n,"x","all","bool")},p={axis:c,keepDims:a};return r.ENGINE.runKernel(d.All,u,p)}const o=(0,f.op)({all_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eq1Te:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"any",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=null,a=!1){const u={x:(0,m.convertToTensor)(n,"x","any","bool")},p={axis:c,keepDims:a};return r.ENGINE.runKernel(d.Any,u,p)}const o=(0,f.op)({any_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],j4fPS:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMax",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=0){const l={x:(0,m.convertToTensor)(n,"x","argMax")},u={axis:c};return r.ENGINE.runKernel(d.ArgMax,l,u)}const o=(0,f.op)({argMax_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],a5NPa:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMin",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=0){const l={x:(0,m.convertToTensor)(n,"x","argMin")},u={axis:c};return r.ENGINE.runKernel(d.ArgMin,l,u)}const o=(0,f.op)({argMin_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"78xy0":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"asin",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","asin")};return r.ENGINE.runKernel(d.Asin,a)}const o=(0,f.op)({asin_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],drhJd:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"asinh",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","asinh")};return r.ENGINE.runKernel(d.Asinh,a)}const o=(0,f.op)({asinh_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1PK5c":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atan",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","atan")};return r.ENGINE.runKernel(d.Atan,a)}const o=(0,f.op)({atan_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hC9rc:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atan2",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./operation");function o(c,a){let l=(0,f.convertToTensor)(c,"a","atan2"),u=(0,f.convertToTensor)(a,"b","atan2");[l,u]=(0,m.makeTypesMatch)(l,u);const p={a:l,b:u};return r.ENGINE.runKernel(d.Atan2,p)}const n=(0,i.op)({atan2_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5xLWg":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atanh",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","atanh")};return r.ENGINE.runKernel(d.Atanh,a)}const o=(0,f.op)({atanh_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iJDL3:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool",()=>l);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./cast"),o=e("./conv_util"),n=e("./operation"),c=e("./reshape");function a(u,p,h,g,v){const _=(0,m.convertToTensor)(u,"x","avgPool","float32"),k=1;f.assert(o.eitherStridesOrDilationsAreOne(h,k),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${k}'`);let y=_,x=!1;_.rank===3&&(x=!0,y=(0,c.reshape)(_,[1,_.shape[0],_.shape[1],_.shape[2]])),f.assert(y.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${y.rank}.`),o.checkPadOnDimRoundingMode("avgPool",g,v);const b={x:y},C={filterSize:p,strides:h,pad:g,dimRoundingMode:v};let w=r.ENGINE.runKernel(d.AvgPool,b,C);return w=(0,i.cast)(w,_.dtype),x?(0,c.reshape)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const l=(0,n.op)({avgPool_:a})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./cast":"eaOhx","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3jOAS":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"computeDilation2DInfo",()=>d),t.export(s,"computePool2DInfo",()=>m),t.export(s,"computePool3DInfo",()=>f),t.export(s,"computeConv2DInfo",()=>i),t.export(s,"computeConv3DInfo",()=>o),t.export(s,"computeDefaultPad",()=>a),t.export(s,"tupleValuesAreOne",()=>_),t.export(s,"eitherStridesOrDilationsAreOne",()=>k),t.export(s,"stridesOrDilationsArePositive",()=>y),t.export(s,"convertConv2DDataFormat",()=>x),t.export(s,"checkPadOnDimRoundingMode",()=>b);var r=e("../util");function d(C,w,N,T,F="NHWC",S){const I=C[3],j=[...w,I],D=x(F);return i(C,j,N,S,T,null,null,D)}function m(C,w,N,T,F,S,I="channelsLast"){const[j,D]=l(w);let O;if(I==="channelsLast")O=[j,D,C[3],C[3]];else if(I==="channelsFirst")O=[j,D,C[1],C[1]];else throw new Error(`Unknown dataFormat ${I}`);return i(C,O,N,T,F,S,!1,I)}function f(C,w,N,T,F,S,I="NDHWC"){const[j,D,O]=u(w);let $,P;if(I==="NDHWC")P="channelsLast",$=[j,D,O,C[4],C[4]];else if(I==="NCDHW")P="channelsFirst",$=[j,D,O,C[1],C[1]];else throw new Error(`Unknown dataFormat ${I}`);return o(C,$,N,T,F,!1,P,S)}function i(C,w,N,T,F,S,I=!1,j="channelsLast"){let[D,O,$,P]=[-1,-1,-1,-1];if(j==="channelsLast")[D,O,$,P]=C;else if(j==="channelsFirst")[D,P,O,$]=C;else throw new Error(`Unknown dataFormat ${j}`);const[R,A,,z]=w,[G,L]=l(N),[M,V]=l(T),K=p(R,M),W=p(A,V),{padInfo:H,outHeight:Z,outWidth:Q}=h(F,O,$,G,L,K,W,S,j),te=I?z*P:z;let ee;return j==="channelsFirst"?ee=[D,te,Z,Q]:j==="channelsLast"&&(ee=[D,Z,Q,te]),{batchSize:D,dataFormat:j,inHeight:O,inWidth:$,inChannels:P,outHeight:Z,outWidth:Q,outChannels:te,padInfo:H,strideHeight:G,strideWidth:L,filterHeight:R,filterWidth:A,effectiveFilterHeight:K,effectiveFilterWidth:W,dilationHeight:M,dilationWidth:V,inShape:C,outShape:ee,filterShape:w}}function o(C,w,N,T,F,S=!1,I="channelsLast",j){let[D,O,$,P,R]=[-1,-1,-1,-1,-1];if(I==="channelsLast")[D,O,$,P,R]=C;else if(I==="channelsFirst")[D,R,O,$,P]=C;else throw new Error(`Unknown dataFormat ${I}`);const[A,z,G,,L]=w,[M,V,K]=u(N),[W,H,Z]=u(T),Q=p(A,W),te=p(z,H),ee=p(G,Z),{padInfo:ne,outDepth:se,outHeight:X,outWidth:U}=g(F,O,$,P,M,V,K,Q,te,ee,j),Y=S?L*R:L;let J;return I==="channelsFirst"?J=[D,Y,se,X,U]:I==="channelsLast"&&(J=[D,se,X,U,Y]),{batchSize:D,dataFormat:I,inDepth:O,inHeight:$,inWidth:P,inChannels:R,outDepth:se,outHeight:X,outWidth:U,outChannels:Y,padInfo:ne,strideDepth:M,strideHeight:V,strideWidth:K,filterDepth:A,filterHeight:z,filterWidth:G,effectiveFilterDepth:Q,effectiveFilterHeight:te,effectiveFilterWidth:ee,dilationDepth:W,dilationHeight:H,dilationWidth:Z,inShape:C,outShape:J,filterShape:w}}function n(C,w,N,T,F){T==null&&(T=a(C,w,N));const S=C[0],I=C[1],j=v((S-w+2*T)/N+1,F),D=v((I-w+2*T)/N+1,F);return[j,D]}function c(C,w,N,T,F,S){F==null&&(F=a(C,w[0],T[0]));const I=[0,0,0,N];for(let j=0;j<3;j++)C[j]+2*F>=w[j]&&(I[j]=v((C[j]-w[j]+2*F)/T[j]+1,S));return I}function a(C,w,N,T=1){const F=p(w,T);return Math.floor((C[0]*(N-1)-N+F)/2)}function l(C){return typeof C=="number"?[C,C,C]:C.length===2?[C[0],C[1],1]:C}function u(C){return typeof C=="number"?[C,C,C]:C}function p(C,w){return w<=1?C:C+(C-1)*(w-1)}function h(C,w,N,T,F,S,I,j,D){let O,$,P;if(typeof C=="number"){O={top:C,bottom:C,left:C,right:C,type:C===0?"VALID":"NUMBER"};const A=n([w,N],S,T,C,j);$=A[0],P=A[1]}else if(C==="same"){$=Math.ceil(w/T),P=Math.ceil(N/F);const R=Math.max(0,($-1)*T+S-w),A=Math.max(0,(P-1)*F+I-N),z=Math.floor(R/2),G=R-z,L=Math.floor(A/2),M=A-L;O={top:z,bottom:G,left:L,right:M,type:"SAME"}}else if(C==="valid")O={top:0,bottom:0,left:0,right:0,type:"VALID"},$=Math.ceil((w-S+1)/T),P=Math.ceil((N-I+1)/F);else if(typeof C=="object"){const R=D==="channelsLast"?C[1][0]:C[2][0],A=D==="channelsLast"?C[1][1]:C[2][1],z=D==="channelsLast"?C[2][0]:C[3][0],G=D==="channelsLast"?C[2][1]:C[3][1];O={top:R,bottom:A,left:z,right:G,type:R===0&&A===0&&z===0&&G===0?"VALID":"EXPLICIT"},$=v((w-S+R+A)/T+1,j),P=v((N-I+z+G)/F+1,j)}else throw Error(`Unknown padding parameter: ${C}`);return{padInfo:O,outHeight:$,outWidth:P}}function g(C,w,N,T,F,S,I,j,D,O,$){let P,R,A,z;if(C==="valid"&&(C=0),typeof C=="number"){P={top:C,bottom:C,left:C,right:C,front:C,back:C,type:C===0?"VALID":"NUMBER"};const L=c([w,N,T,1],[j,D,O],1,[F,S,I],C,$);R=L[0],A=L[1],z=L[2]}else if(C==="same"){R=Math.ceil(w/F),A=Math.ceil(N/S),z=Math.ceil(T/I);const G=(R-1)*F+j-w,L=(A-1)*S+D-N,M=(z-1)*I+O-T,V=Math.floor(G/2),K=G-V,W=Math.floor(L/2),H=L-W,Z=Math.floor(M/2),Q=M-Z;P={top:W,bottom:H,left:Z,right:Q,front:V,back:K,type:"SAME"}}else throw Error(`Unknown padding parameter: ${C}`);return{padInfo:P,outDepth:R,outHeight:A,outWidth:z}}function v(C,w){if(!w)return Math.trunc(C);switch(w){case"round":return Math.round(C);case"ceil":return Math.ceil(C);case"floor":return Math.floor(C);default:throw new Error(`Unknown roundingMode ${w}`)}}function _(C){const[w,N,T]=l(C);return w===1&&N===1&&T===1}function k(C,w){return _(C)||_(w)}function y(C){return l(C).every(w=>w>0)}function x(C){if(C==="NHWC")return"channelsLast";if(C==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${C}`)}function b(C,w,N){if(N!=null){if(typeof w=="string")throw Error(`Error in ${C}: pad must be an integer when using dimRoundingMode ${N} but got pad ${w}.`);if(typeof w=="number")r.assert(r.isInt(w),()=>`Error in ${C}: pad must be an integer when using dimRoundingMode ${N} but got pad ${w}.`);else if(typeof w=="object")w.forEach(T=>{T.forEach(F=>{r.assert(r.isInt(F),()=>`Error in ${C}: pad must be an integer when using dimRoundingMode ${N} but got pad ${F}.`)})});else throw Error(`Error in ${C}: Unknown padding parameter: ${w}`)}}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5iOnm":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reshape",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c){const l={x:(0,m.convertToTensor)(n,"x","reshape","string_or_numeric")},u={shape:c};return r.ENGINE.runKernel(d.Reshape,l,u)}const o=(0,f.op)({reshape_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4WfF9":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool3d",()=>l);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./cast"),o=e("./conv_util"),n=e("./operation"),c=e("./reshape");function a(u,p,h,g,v,_="NDHWC"){const k=(0,m.convertToTensor)(u,"x","avgPool3d","float32");let y=k,x=!1;k.rank===4&&(x=!0,y=(0,c.reshape)(k,[1,k.shape[0],k.shape[1],k.shape[2],k.shape[3]])),f.assert(y.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${y.rank}.`),f.assert(_==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${_}`),f.assert(typeof h=="number"&&h>0||Array.isArray(h)&&h[0]>0&&h[1]>0&&h[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${h}'`),(0,o.checkPadOnDimRoundingMode)("avgPool3d",g,v);const b={x:y},C={filterSize:p,strides:h,pad:g,dimRoundingMode:v,dataFormat:_};let w=r.ENGINE.runKernel(d.AvgPool3D,b,C);return w=(0,i.cast)(w,y.dtype),x?(0,c.reshape)(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}const l=(0,n.op)({avgPool3d_:a})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./cast":"eaOhx","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7pcc1":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"basicLSTMCell",()=>u);var r=e("../tensor_util_env"),d=e("./add"),m=e("./concat"),f=e("./mat_mul"),i=e("./mul"),o=e("./operation"),n=e("./sigmoid"),c=e("./slice"),a=e("./tanh");function l(p,h,g,v,_,k){const y=(0,r.convertToTensor)(p,"forgetBias","basicLSTMCell"),x=(0,r.convertToTensor)(h,"lstmKernel","basicLSTMCell"),b=(0,r.convertToTensor)(g,"lstmBias","basicLSTMCell"),C=(0,r.convertToTensor)(v,"data","basicLSTMCell"),w=(0,r.convertToTensor)(_,"c","basicLSTMCell"),N=(0,r.convertToTensor)(k,"h","basicLSTMCell"),T=(0,m.concat)([C,N],1),F=(0,f.matMul)(T,x),S=(0,d.add)(F,b),I=S.shape[0],j=S.shape[1]/4,D=[I,j],O=(0,c.slice)(S,[0,0],D),$=(0,c.slice)(S,[0,j],D),P=(0,c.slice)(S,[0,j*2],D),R=(0,c.slice)(S,[0,j*3],D),A=(0,d.add)((0,i.mul)((0,n.sigmoid)(O),(0,a.tanh)($)),(0,i.mul)(w,(0,n.sigmoid)((0,d.add)(y,P)))),z=(0,i.mul)((0,a.tanh)(A),(0,n.sigmoid)(R));return[A,z]}const u=(0,o.op)({basicLSTMCell_:l})},{"../tensor_util_env":"1FegS","./add":"2ocTD","./concat":"bZcSO","./mat_mul":"2iQjP","./mul":"kfDrf","./operation":"5CKbF","./sigmoid":"atwNP","./slice":"9qYv4","./tanh":"lJGuU","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bZcSO:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concat",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./clone"),o=e("./operation");function n(a,l=0){(0,f.assert)(a.length>=1,()=>"Pass at least one tensor to concat");const u=(0,m.convertToTensorArray)(a,"tensors","concat","string_or_numeric");if(u[0].dtype==="complex64"&&u.forEach(g=>{if(g.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${g.dtype}. `)}),u.length===1)return(0,i.clone)(u[0]);const p=u,h={axis:l};return r.ENGINE.runKernel(d.Concat,p,h)}const c=(0,o.op)({concat_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./clone":"lnPTw","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2iQjP":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"matMul",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./operation");function o(c,a,l=!1,u=!1){let p=(0,f.convertToTensor)(c,"a","matMul"),h=(0,f.convertToTensor)(a,"b","matMul");[p,h]=(0,m.makeTypesMatch)(p,h);const g={a:p,b:h},v={transposeA:l,transposeB:u};return r.ENGINE.runKernel(d.BatchMatMul,g,v)}const n=(0,i.op)({matMul_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],atwNP:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sigmoid",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","sigmoid","float32")};return r.ENGINE.runKernel(d.Sigmoid,a)}const o=(0,f.op)({sigmoid_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9qYv4":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"slice",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a){const l=(0,m.convertToTensor)(n,"x","slice","string_or_numeric");if(l.rank===0)throw new Error("Slicing scalar is not possible");const u={x:l},p={begin:c,size:a};return r.ENGINE.runKernel(d.Slice,u,p)}const o=(0,f.op)({slice_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lJGuU:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tanh",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","tanh","float32")};return r.ENGINE.runKernel(d.Tanh,a)}const o=(0,f.op)({tanh_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8SWXq":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchToSpaceND",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a,l){const u=(0,m.convertToTensor)(c,"x","batchToSpaceND"),p=a.reduce((v,_)=>v*_);f.assert(u.rank>=1+a.length,()=>`input rank is ${u.rank} but should be > than blockShape.length ${a.length}`),f.assert(l.length===a.length,()=>`crops.length is ${l.length} but should be equal to blockShape.length  ${a.length}`),f.assert(u.shape[0]%p==0,()=>`input tensor batch is ${u.shape[0]} but is not divisible by the product of the elements of blockShape ${a.join(" * ")} === ${p}`);const h={x:u},g={blockShape:a,crops:l};return r.ENGINE.runKernel(d.BatchToSpaceND,h,g)}const n=(0,i.op)({batchToSpaceND_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5kwLS":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchNorm",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./batchnorm_util"),o=e("./operation"),n=e("./reshape");function c(l,u,p,h,g,v){v==null&&(v=.001);const _=(0,m.convertToTensor)(l,"x","batchNorm"),k=(0,m.convertToTensor)(u,"mean","batchNorm"),y=(0,m.convertToTensor)(p,"variance","batchNorm");let x;g!=null&&(x=(0,m.convertToTensor)(g,"scale","batchNorm"));let b;h!=null&&(b=(0,m.convertToTensor)(h,"offset","batchNorm")),f.assert(k.rank===y.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),f.assert(b==null||k.rank===b.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),f.assert(x==null||k.rank===x.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const w={x:(0,i.xAs4D)(_),scale:x,offset:b,mean:k,variance:y},N={varianceEpsilon:v},T=r.ENGINE.runKernel(d.FusedBatchNorm,w,N);return(0,n.reshape)(T,_.shape)}const a=(0,o.op)({batchNorm_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./batchnorm_util":"3nDtG","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3nDtG":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"xAs4D",()=>d);var r=e("./reshape");function d(m){let f;return m.rank===0||m.rank===1?f=(0,r.reshape)(m,[1,1,1,m.size]):m.rank===2?f=(0,r.reshape)(m,[1,1,m.shape[0],m.shape[1]]):m.rank===3?f=(0,r.reshape)(m,[1,m.shape[0],m.shape[1],m.shape[2]]):f=m,f}},{"./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7J34Z":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchNorm2d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./batchnorm"),f=e("./operation");function i(n,c,a,l,u,p){const h=(0,r.convertToTensor)(n,"x","batchNorm"),g=(0,r.convertToTensor)(c,"mean","batchNorm"),v=(0,r.convertToTensor)(a,"variance","batchNorm");let _;u!=null&&(_=(0,r.convertToTensor)(u,"scale","batchNorm"));let k;return l!=null&&(k=(0,r.convertToTensor)(l,"offset","batchNorm")),d.assert(h.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${h.rank}.`),d.assert(g.rank===2||g.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${g.rank}.`),d.assert(v.rank===2||v.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${v.rank}.`),_!=null&&d.assert(_.rank===2||_.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${_.rank}.`),k!=null&&d.assert(k.rank===2||k.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${k.rank}.`),(0,m.batchNorm)(h,g,v,k,_,p)}const o=(0,f.op)({batchNorm2d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./batchnorm":"5kwLS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],zrGMD:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchNorm3d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./batchnorm"),f=e("./operation");function i(n,c,a,l,u,p){const h=(0,r.convertToTensor)(n,"x","batchNorm"),g=(0,r.convertToTensor)(c,"mean","batchNorm"),v=(0,r.convertToTensor)(a,"variance","batchNorm");let _;u!=null&&(_=(0,r.convertToTensor)(u,"scale","batchNorm"));let k;return l!=null&&(k=(0,r.convertToTensor)(l,"offset","batchNorm")),d.assert(h.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${h.rank}.`),d.assert(g.rank===3||g.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${g.rank}.`),d.assert(v.rank===3||v.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${v.rank}.`),_!=null&&d.assert(_.rank===3||_.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${_.rank}.`),k!=null&&d.assert(k.rank===3||k.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${k.rank}.`),(0,m.batchNorm)(h,g,v,k,_,p)}const o=(0,f.op)({batchNorm3d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./batchnorm":"5kwLS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],erPQt:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchNorm4d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./batchnorm"),f=e("./operation");function i(n,c,a,l,u,p){const h=(0,r.convertToTensor)(n,"x","batchNorm"),g=(0,r.convertToTensor)(c,"mean","batchNorm"),v=(0,r.convertToTensor)(a,"variance","batchNorm");let _;u!=null&&(_=(0,r.convertToTensor)(u,"scale","batchNorm"));let k;return l!=null&&(k=(0,r.convertToTensor)(l,"offset","batchNorm")),d.assert(h.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${h.rank}.`),d.assert(g.rank===4||g.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${g.rank}.`),d.assert(v.rank===4||v.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${v.rank}.`),_!=null&&d.assert(_.rank===4||_.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${_.rank}.`),k!=null&&d.assert(k.rank===4||k.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${k.rank}.`),(0,m.batchNorm)(h,g,v,k,_,p)}const o=(0,f.op)({batchNorm4d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./batchnorm":"5kwLS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fV2lv:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"bincount",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a,l){const u=(0,m.convertToTensor)(c,"x","bincount"),p=(0,m.convertToTensor)(a,"weights","bincount");f.assert(u.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${u.dtype}`),f.assert(l>=0,()=>`size must be non-negative, but got ${l}.`),f.assert(p.size===u.size||p.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${u.shape}, weights shape: ${p.shape}.`);const h={x:u,weights:p},g={size:l};return r.ENGINE.runKernel(d.Bincount,h,g)}const n=(0,i.op)({bincount_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4Ji2c":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"bitwiseAnd",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util_base"),i=e("./operation");function o(c,a){const l=(0,m.convertToTensor)(c,"x","bitwiseAnd"),u=(0,m.convertToTensor)(a,"y","bitwiseAnd");if(!(0,f.arraysEqual)(l.shape,u.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${l.shape}, y: ${u.shape}`);if(l.dtype!=="int32"||u.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${l.dtype} and type of y: ${u.dtype}`);const p={a:l,b:u};return r.ENGINE.runKernel(d.BitwiseAnd,p)}const n=(0,i.op)({bitwiseAnd_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util_base":"7Tgdr","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dkSnl:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"broadcastArgs",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c){const a=(0,m.convertToTensor)(n,"s0","broadcastArgs","int32"),l=(0,m.convertToTensor)(c,"s1","broadcastArgs","int32");if(a.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${a.rank}`);if(l.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${l.rank}`);const u={s0:a,s1:l};return r.ENGINE.runKernel(d.BroadcastArgs,u)}const o=(0,f.op)({broadcastArgs_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],de7ms:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"broadcastTo",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util_base"),i=e("./clone"),o=e("./operation"),n=e("./reshape");function c(l,u){let p=(0,m.convertToTensor)(l,"broadcastTo","x");const h=p.shape;if((0,f.assertNonNegativeIntegerDimensions)(u),u.length<p.rank)throw new Error(`broadcastTo(): shape.length=${u.length} < input.rank=${p.rank}.`);if(u.length>p.rank){const x=p.shape.slice();for(;x.length<u.length;)x.unshift(1);p=(0,n.reshape)(p,x)}const g=p.shape,v=Array.from(u);for(let x=u.length-1;x>=0;x--)if(g[x]===u[x])v[x]=1;else if(p.shape[x]!==1)throw new Error(`broadcastTo(): [${h}] cannot be broadcast to [${u}].`);if(v.map((x,b)=>x>1?b:-1).filter(x=>x>=0).length===0)return(0,i.clone)(p);const k={x:p},y={reps:v};return r.ENGINE.runKernel(d.Tile,k,y)}const a=(0,o.op)({broadcastTo_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util_base":"7Tgdr","./clone":"lnPTw","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6CAL1":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ceil",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","ceil","float32")};return r.ENGINE.runKernel(d.Ceil,a)}const o=(0,f.op)({ceil_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5hqIx":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"clipByValue",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./fill"),o=e("./operation");function n(a,l,u){const p=(0,m.convertToTensor)(a,"x","clipByValue");if(f.assert(l<=u,()=>`Error in clip: min (${l}) must be less than or equal to max (${u}).`),l===u)return(0,i.fill)(p.shape,l,p.dtype);const h={x:p},g={clipValueMin:l,clipValueMax:u};return r.ENGINE.runKernel(d.ClipByValue,h,g)}const c=(0,o.op)({clipByValue_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./fill":"ckpag","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ckpag:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fill",()=>i);var r=e("../engine"),d=e("../kernel_names"),m=e("../util"),f=e("../util_base");function i(o,n,c){(0,f.assertNonNegativeIntegerDimensions)(o),c=c||(0,m.inferDtype)(n);const a={shape:o,value:n,dtype:c};return r.ENGINE.runKernel(d.Fill,{},a)}},{"../engine":"eID09","../kernel_names":"kYUMv","../util":"hQeVi","../util_base":"7Tgdr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kOtzv:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concat1d",()=>f);var r=e("./concat"),d=e("./operation");function m(i){return(0,r.concat)(i,0)}const f=(0,d.op)({concat1d_:m})},{"./concat":"bZcSO","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b28eZ:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concat2d",()=>f);var r=e("./concat"),d=e("./operation");function m(i,o){return(0,r.concat)(i,o)}const f=(0,d.op)({concat2d_:m})},{"./concat":"bZcSO","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],h5hqR:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concat3d",()=>f);var r=e("./concat"),d=e("./operation");function m(i,o){return(0,r.concat)(i,o)}const f=(0,d.op)({concat3d_:m})},{"./concat":"bZcSO","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jI8Bl:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concat4d",()=>f);var r=e("./concat"),d=e("./operation");function m(i,o){return(0,r.concat)(i,o)}const f=(0,d.op)({concat4d_:m})},{"./concat":"bZcSO","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2oG4M":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv1d",()=>c);var r=e("../tensor_util_env"),d=e("../util"),m=e("./conv2d"),f=e("./conv_util"),i=e("./operation"),o=e("./reshape");function n(a,l,u,p,h="NWC",g=1,v){const _=(0,r.convertToTensor)(a,"x","conv1d"),k=(0,r.convertToTensor)(l,"filter","conv1d");let y=_,x=!1;_.rank===2&&(x=!0,y=(0,o.reshape)(_,[1,_.shape[0],_.shape[1]])),d.assert(y.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${y.rank}.`),d.assert(k.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${k.rank}.`),f.checkPadOnDimRoundingMode("conv1d",p,v),d.assert(y.shape[2]===k.shape[1],()=>`Error in conv1d: depth of input (${y.shape[2]}) must match input depth for filter ${k.shape[1]}.`),d.assert(f.eitherStridesOrDilationsAreOne(u,g),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${u} and dilation '${g}'`),d.assert(f.stridesOrDilationsArePositive(g),()=>"Error in conv1D: Dilated rates should be larger than 0."),d.assert(f.stridesOrDilationsArePositive(u),()=>"Error in conv1D: Stride should be larger than 0."),d.assert(h==="NWC",()=>`Error in conv1d: got dataFormat of ${h} but only NWC is currently supported.`);const b=(0,o.reshape)(k,[1,k.shape[0],k.shape[1],k.shape[2]]),C=(0,o.reshape)(y,[y.shape[0],1,y.shape[1],y.shape[2]]),w=[1,u],N=[1,g],T="NHWC",F=(0,m.conv2d)(C,b,w,p,T,N,v);return x?(0,o.reshape)(F,[F.shape[2],F.shape[3]]):(0,o.reshape)(F,[F.shape[0],F.shape[2],F.shape[3]])}const c=(0,i.op)({conv1d_:n})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./conv2d":"yMZmx","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],yMZmx:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2d",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./conv_util"),o=e("./operation"),n=e("./reshape");function c(l,u,p,h,g="NHWC",v=[1,1],_){const k=(0,m.convertToTensor)(l,"x","conv2d","float32"),y=(0,m.convertToTensor)(u,"filter","conv2d","float32");let x=k,b=!1;k.rank===3&&(b=!0,x=(0,n.reshape)(k,[1,k.shape[0],k.shape[1],k.shape[2]])),f.assert(x.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${x.rank}.`),f.assert(y.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${y.rank}.`),i.checkPadOnDimRoundingMode("conv2d",h,_);const C=g==="NHWC"?x.shape[3]:x.shape[1];f.assert(C===y.shape[2],()=>`Error in conv2d: depth of input (${C}) must match input depth for filter ${y.shape[2]}.`),f.assert(i.eitherStridesOrDilationsAreOne(p,v),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${p} and dilations '${v}'`),f.assert(i.stridesOrDilationsArePositive(v),()=>"Error in conv2D: Dilated rates should be larger than 0."),f.assert(i.stridesOrDilationsArePositive(p),()=>"Error in conv2D: Strides should be larger than 0.");const w={x,filter:y},N={strides:p,pad:h,dataFormat:g,dilations:v,dimRoundingMode:_},T=r.ENGINE.runKernel(d.Conv2D,w,N);return b?(0,n.reshape)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}const a=(0,o.op)({conv2d_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kwS67:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2dTranspose",()=>i);var r=e("../tensor_util_env"),d=e("./conv2d_backprop_input"),m=e("./operation");function f(o,n,c,a,l,u){const p=(0,r.convertToTensor)(o,"x","conv2dTranspose"),h=(0,r.convertToTensor)(n,"filter","conv2dTranspose");return(0,d.conv2DBackpropInput)(c,p,h,a,l,"NHWC",u)}const i=(0,m.op)({conv2dTranspose_:f})},{"../tensor_util_env":"1FegS","./conv2d_backprop_input":"dOfMZ","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dOfMZ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2DBackpropInput",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../util"),f=e("./conv_util"),i=e("./operation"),o=e("./reshape");function n(a,l,u,p,h,g="NHWC",v){m.assert(a.length===l.rank,()=>`Length of inShape (${a.length}) and rank of dy (${l.rank}) must match`);let _=a,k=l,y=!1;l.rank===3&&(y=!0,k=(0,o.reshape)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),_=[1,a[0],a[1],a[2]]),m.assert(_.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${_.length}.`),m.assert(k.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${k.rank}`),m.assert(u.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${u.rank}`);const x=g==="NHWC"?_[3]:_[1],b=g==="NHWC"?k.shape[3]:k.shape[1];m.assert(x===u.shape[2],()=>`Error in conv2dDerInput: depth of input (${x}) must match input depth for filter ${u.shape[2]}.`),m.assert(b===u.shape[3],()=>`Error in conv2dDerInput: depth of output (${b}) must match output depth for filter ${u.shape[3]}.`),f.checkPadOnDimRoundingMode("conv2dDerInput",h,v);const C={dy:k,filter:u},w={strides:p,pad:h,dataFormat:g,dimRoundingMode:v,inputShape:_},N=r.ENGINE.runKernel(d.Conv2DBackpropInput,C,w);return y?(0,o.reshape)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}const c=(0,i.op)({conv2DBackpropInput_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aYLQJ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3d",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./conv_util"),o=e("./operation"),n=e("./reshape");function c(l,u,p,h,g="NDHWC",v=[1,1,1]){const _=(0,m.convertToTensor)(l,"x","conv3d"),k=(0,m.convertToTensor)(u,"filter","conv3d");let y=_,x=!1;_.rank===4&&(x=!0,y=(0,n.reshape)(_,[1,_.shape[0],_.shape[1],_.shape[2],_.shape[3]])),f.assert(y.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${y.rank}.`),f.assert(k.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${k.rank}.`),f.assert(y.shape[4]===k.shape[3],()=>`Error in conv3d: depth of input (${y.shape[4]}) must match input depth for filter ${k.shape[3]}.`),f.assert((0,i.eitherStridesOrDilationsAreOne)(p,v),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${p} and dilations '${v}'`),f.assert(g==="NDHWC",()=>`Error in conv3d: got dataFormat of ${g} but only NDHWC is currently supported.`),f.assert((0,i.stridesOrDilationsArePositive)(v),()=>"Error in conv3D: Dilated rates should be larger than 0."),f.assert((0,i.stridesOrDilationsArePositive)(p),()=>"Error in conv3D: Strides should be larger than 0.");const b={x:y,filter:k},C={strides:p,pad:h,dataFormat:g,dilations:v},w=r.ENGINE.runKernel(d.Conv3D,b,C);return x?(0,n.reshape)(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}const a=(0,o.op)({conv3d_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cLVGh:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3dTranspose",()=>i);var r=e("../tensor_util_env"),d=e("./conv3d_backprop_input"),m=e("./operation");function f(o,n,c,a,l){const u=(0,r.convertToTensor)(o,"x","conv3dTranspose"),p=(0,r.convertToTensor)(n,"filter","conv3dTranspose");return(0,d.conv3DBackpropInput)(c,u,p,a,l)}const i=(0,m.op)({conv3dTranspose_:f})},{"../tensor_util_env":"1FegS","./conv3d_backprop_input":"hSoNv","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hSoNv:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3DBackpropInput",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../util"),f=e("./operation"),i=e("./reshape");function o(c,a,l,u,p){m.assert(c.length===a.rank,()=>`Length of inShape (${c.length}) and rank of dy (${a.rank}) must match`);let h=c,g=a,v=!1;a.rank===4&&(v=!0,g=(0,i.reshape)(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=[1,c[0],c[1],c[2],c[3]]);const _=h[4],k=g.shape[4];m.assert(h.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${h.length}.`),m.assert(g.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${g.rank}`),m.assert(l.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${l.rank}`),m.assert(_===l.shape[3],()=>`Error in conv3dDerInput: depth of input (${_}) must match input depth for filter ${l.shape[3]}.`),m.assert(k===l.shape[4],()=>`Error in conv3dDerInput: depth of output (${k}) must match output depth for filter ${l.shape[4]}.`);const y={dy:g,filter:l},x={pad:p,strides:u,inputShape:h},b=r.ENGINE.runKernel(d.Conv3DBackpropInputV2,y,x);return v?(0,i.reshape)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}const n=(0,f.op)({conv3DBackpropInput_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../util":"hQeVi","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5CQ2v":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cos",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","cos","float32")};return r.ENGINE.runKernel(d.Cos,a)}const o=(0,f.op)({cos_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7OBbg":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cosh",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","cosh","float32")};return r.ENGINE.runKernel(d.Cosh,a)}const o=(0,f.op)({cosh_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1DIHN":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cumprod",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=0,a=!1,l=!1){const p={x:(0,m.convertToTensor)(n,"x","cumprod")},h={axis:c,exclusive:a,reverse:l};return r.ENGINE.runKernel(d.Cumprod,p,h)}const o=(0,f.op)({cumprod_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3lap7":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cumsum",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=0,a=!1,l=!1){const p={x:(0,m.convertToTensor)(n,"x","cumsum")},h={axis:c,exclusive:a,reverse:l};return r.ENGINE.runKernel(d.Cumsum,p,h)}const o=(0,f.op)({cumsum_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],beNZW:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"denseBincount",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a,l,u=!1){const p=(0,m.convertToTensor)(c,"x","denseBincount"),h=(0,m.convertToTensor)(a,"weights","denseBincount");f.assert(p.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${p.dtype}`),f.assert(p.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${p.rank}.`),f.assert(l>=0,()=>`size must be non-negative, but got ${l}.`),f.assert(h.size===p.size||h.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${p.shape}, weights shape: ${h.shape}.`);const g={x:p,weights:h},v={size:l,binaryOutput:u};return r.ENGINE.runKernel(d.DenseBincount,g,v)}const n=(0,i.op)({denseBincount_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aW2Gu:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthToSpace",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a,l="NHWC"){const u=(0,m.convertToTensor)(c,"x","depthToSpace","float32"),p=l==="NHWC"?u.shape[1]:u.shape[2],h=l==="NHWC"?u.shape[2]:u.shape[3],g=l==="NHWC"?u.shape[3]:u.shape[1];f.assert(a>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`),f.assert(p*a>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${p} and ${a}  for depthToSpace with input shape
    ${u.shape}`),f.assert(h*a>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${h} and ${a} for depthToSpace with input shape
        ${u.shape}`),f.assert(g%(a*a)==0,()=>`Dimension size must be evenly divisible by ${a*a} but is ${g} for depthToSpace with input shape ${u.shape}`);const v={x:u},_={blockSize:a,dataFormat:l};return r.ENGINE.runKernel(d.DepthToSpace,v,_)}const n=(0,i.op)({depthToSpace_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2Aya7":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2d",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./conv_util"),o=e("./operation"),n=e("./reshape");function c(l,u,p,h,g="NHWC",v=[1,1],_){const k=(0,m.convertToTensor)(l,"x","depthwiseConv2d","float32"),y=(0,m.convertToTensor)(u,"filter","depthwiseConv2d","float32");let x=k,b=!1;k.rank===3&&(b=!0,x=(0,n.reshape)(k,[1,k.shape[0],k.shape[1],k.shape[2]])),f.assert(x.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${x.rank}.`),f.assert(y.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`);const C=g==="NHWC"?x.shape[3]:x.shape[1];f.assert(C===y.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${C}) must match the inChannels dimension in filter ${y.shape[2]}.`),i.checkPadOnDimRoundingMode("depthwiseConv2d",h,_);const w={x,filter:y},N={strides:p,pad:h,dataFormat:g,dilations:v,dimRoundingMode:_},T=r.ENGINE.runKernel(d.DepthwiseConv2dNative,w,N);return b?(0,n.reshape)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}const a=(0,o.op)({depthwiseConv2d_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8KSwm":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"diag",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","diag")};return r.ENGINE.runKernel(d.Diag,a)}const o=(0,f.op)({diag_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4VWbu":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"dilation2d",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation"),o=e("./reshape");function n(a,l,u,p,h=[1,1],g="NHWC"){const v=(0,m.convertToTensor)(a,"x","dilation2d"),_=(0,m.convertToTensor)(l,"filter","dilation2d");f.assert(v.rank===3||v.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${v.rank}.`),f.assert(_.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${_.rank}.`),f.assert(g==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${g}`);let k=v,y=!1;v.rank===3&&(k=(0,o.reshape)(v,[1,v.shape[0],v.shape[1],v.shape[2]]),y=!0),f.assert(k.shape[3]===_.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${k.shape[3]} vs ${_.shape[2]}`);const x={x:k,filter:_},b={strides:u,pad:p,dilations:h},C=r.ENGINE.runKernel(d.Dilation2D,x,b);return y?(0,o.reshape)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}const c=(0,i.op)({dilation2d_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ajkzf:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"divNoNan",()=>a);var r=e("../tensor_util"),d=e("../tensor_util_env"),m=e("./div"),f=e("./equal"),i=e("./operation"),o=e("./where"),n=e("./zeros_like");function c(l,u){let p=(0,d.convertToTensor)(l,"a","div"),h=(0,d.convertToTensor)(u,"b","div");[p,h]=(0,r.makeTypesMatch)(p,h);const g=(0,m.div)(p,h),v=(0,n.zerosLike)(g),_=(0,f.equal)(h,v);return(0,o.where)(_,v,g)}const a=(0,i.op)({divNoNan_:c})},{"../tensor_util":"gj10y","../tensor_util_env":"1FegS","./div":"4BOnP","./equal":"9t9zd","./operation":"5CKbF","./where":"c2TLR","./zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9t9zd":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"equal",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./operation");function n(a,l){let u=(0,f.convertToTensor)(a,"a","equal","string_or_numeric"),p=(0,f.convertToTensor)(l,"b","equal","string_or_numeric");[u,p]=(0,m.makeTypesMatch)(u,p),(0,i.assertAndGetBroadcastShape)(u.shape,p.shape);const h={a:u,b:p};return r.ENGINE.runKernel(d.Equal,h)}const c=(0,o.op)({equal_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lfnGK:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getBroadcastDims",()=>r),t.export(s,"getReductionAxes",()=>d),t.export(s,"assertAndGetBroadcastShape",()=>m);function r(f,i){const o=f.length,n=[];for(let c=0;c<o;c++){const a=o-1-c,l=f[a]||1;(i[i.length-1-c]||1)>1&&l===1&&n.unshift(a)}return n}function d(f,i){const o=[];for(let n=0;n<i.length;n++){const c=f[f.length-n-1],a=i.length-n-1,l=i[a];(c==null||c===1&&l>1)&&o.unshift(a)}return o}function m(f,i){const o=Math.max(f.length,i.length),n=new Array(o);for(let c=0;c<o;c++){let a=f[f.length-c-1];a==null&&(a=1);let l=i[i.length-c-1];if(l==null&&(l=1),a===1)n[o-c-1]=l;else if(l===1)n[o-c-1]=a;else if(a!==l){const u=`Operands could not be broadcast together with shapes ${f} and ${i}.`;throw Error(u)}else n[o-c-1]=a}return n}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],c2TLR:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"where",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./broadcast_to"),i=e("./broadcast_util"),o=e("./operation");function n(a,l,u){const p=(0,m.convertToTensor)(l,"a","where"),h=(0,m.convertToTensor)(u,"b","where"),g=(0,m.convertToTensor)(a,"condition","where","bool"),v=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(g.shape,p.shape),h.shape),_=(0,f.broadcastTo)(g,v),k=(0,f.broadcastTo)(p,v),y=(0,f.broadcastTo)(h,v),x={condition:_,t:k,e:y};return r.ENGINE.runKernel(d.Select,x)}const c=(0,o.op)({where_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./broadcast_to":"de7ms","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"0HiLr":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"zerosLike",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","zerosLike")};return r.ENGINE.runKernel(d.ZerosLike,a)}const o=(0,f.op)({zerosLike_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jeGwo:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"dot",()=>n);var r=e("../tensor_util_env"),d=e("../util"),m=e("./mat_mul"),f=e("./operation"),i=e("./reshape");function o(c,a){const l=(0,r.convertToTensor)(c,"t1","dot"),u=(0,r.convertToTensor)(a,"t2","dot");d.assert((l.rank===1||l.rank===2)&&(u.rank===1||u.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${l.rank} and ${u.rank}.`);const p=l.rank===1?l.size:l.shape[1],h=u.rank===1?u.size:u.shape[0];if(d.assert(p===h,()=>`Error in dot: inner dimensions of inputs must match, but got ${p} and ${h}.`),l.rank===1&&u.rank===1){const g=(0,i.reshape)(l,[1,-1]),v=(0,i.reshape)(u,[-1,1]),_=(0,m.matMul)(g,v);return(0,i.reshape)(_,[])}else if(l.rank===1&&u.rank===2){const g=(0,i.reshape)(l,[1,-1]),v=(0,i.reshape)(u,[u.shape[0],u.shape[1]]),_=(0,m.matMul)(g,v);return(0,i.reshape)(_,[_.size])}else if(l.rank===2&&u.rank===1){const g=(0,i.reshape)(u,[-1,1]),v=(0,m.matMul)(l,g);return(0,i.reshape)(v,[v.size])}else{const g=(0,i.reshape)(u,[u.shape[0],u.shape[1]]);return(0,m.matMul)(l,g)}}const n=(0,f.op)({dot_:o})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./mat_mul":"2iQjP","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4Lsi1":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"einsum_",()=>i),t.export(s,"einsum",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,...c){const a=c.map((u,p)=>(0,m.convertToTensor)(u,`tensors${p}`,"einsum")),l={equation:n};return r.ENGINE.runKernel(d.Einsum,a,l)}const o=(0,f.op)({einsum_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],IJvcE:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"elu",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","elu","float32")};return r.ENGINE.runKernel(d.Elu,a)}const o=(0,f.op)({elu_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3yaoj":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ensureShape",()=>i);var r=e("../tensor_util_env"),d=e("../util_base"),m=e("./operation");function f(o,n){const c=(0,r.convertToTensor)(o,"x","ensureShape","string_or_numeric");if(!(0,d.arraysEqualWithNull)(c.shape,n))throw new Error(`EnsureShape: Shape of tensor ${c.shape} is not compatible with expected shape ${n}`);return o}const i=(0,m.op)({ensureShape_:f})},{"../tensor_util_env":"1FegS","../util_base":"7Tgdr","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],euJBE:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"erf",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./cast"),o=e("./operation");function n(a){let l=(0,m.convertToTensor)(a,"x","erf");f.assert(l.dtype==="int32"||l.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),l.dtype==="int32"&&(l=(0,i.cast)(l,"float32"));const u={x:l};return r.ENGINE.runKernel(d.Erf,u)}const c=(0,o.op)({erf_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./cast":"eaOhx","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"017e3":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"euclideanNorm",()=>f);var r=e("./norm"),d=e("./operation");function m(i,o=null,n=!1){return(0,r.norm)(i,"euclidean",o,n)}const f=(0,d.op)({euclideanNorm_:m})},{"./norm":"a7G0a","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],a7G0a:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"norm",()=>_);var r=e("../tensor_util_env"),d=e("../util"),m=e("./abs"),f=e("./axis_util"),i=e("./max"),o=e("./min"),n=e("./operation"),c=e("./pow"),a=e("./reshape"),l=e("./scalar"),u=e("./sqrt"),p=e("./square"),h=e("./sum");function g(k,y="euclidean",x=null,b=!1){k=(0,r.convertToTensor)(k,"x","norm");const C=v(k,y,x);let w=C.shape;if(b){const N=(0,d.parseAxisParam)(x,k.shape);w=f.expandShapeToKeepDim(C.shape,N)}return(0,a.reshape)(C,w)}function v(k,y,x=null){if(k.rank===0)return(0,m.abs)(k);if(k.rank!==1&&x===null)return v((0,a.reshape)(k,[-1]),y,x);if(k.rank===1||typeof x=="number"||Array.isArray(x)&&x.length===1){if(y===1)return(0,h.sum)((0,m.abs)(k),x);if(y===1/0)return(0,i.max)((0,m.abs)(k),x);if(y===-1/0)return(0,o.min)((0,m.abs)(k),x);if(y==="euclidean"||y===2)return(0,u.sqrt)((0,h.sum)((0,c.pow)((0,m.abs)(k),(0,l.scalar)(2,"int32")),x));throw new Error(`Error in norm: invalid ord value: ${y}`)}if(Array.isArray(x)&&x.length===2){if(y===1)return(0,i.max)((0,h.sum)((0,m.abs)(k),x[0]),x[1]-1);if(y===1/0)return(0,i.max)((0,h.sum)((0,m.abs)(k),x[1]),x[0]);if(y===-1/0)return(0,o.min)((0,h.sum)((0,m.abs)(k),x[1]),x[0]);if(y==="fro"||y==="euclidean")return(0,u.sqrt)((0,h.sum)((0,p.square)(k),x));throw new Error(`Error in norm: invalid ord value: ${y}`)}throw new Error(`Error in norm: invalid axis: ${x}`)}const _=(0,n.op)({norm_:g})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./abs":"2yA8M","./axis_util":"hf64X","./max":"khzzn","./min":"ifMr4","./operation":"5CKbF","./pow":"hg0HR","./reshape":"5iOnm","./scalar":"1SA7b","./sqrt":"VUCvx","./square":"6AZak","./sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hf64X:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"axesAreInnerMostDims",()=>d),t.export(s,"combineLocations",()=>m),t.export(s,"computeOutAndReduceShapes",()=>f),t.export(s,"expandShapeToKeepDim",()=>i),t.export(s,"assertAxesAreInnerMostDims",()=>o),t.export(s,"getAxesPermutation",()=>n),t.export(s,"getUndoAxesPermutation",()=>c),t.export(s,"getInnerMostAxes",()=>a);var r=e("../util");function d(l,u){for(let p=0;p<l.length;++p)if(l[l.length-p-1]!==u-1-p)return!1;return!0}function m(l,u,p){const h=l.length+u.length,g=[];let v=0,_=0;for(let k=0;k<h;k++)p.indexOf(k)===-1?g.push(l[v++]):g.push(u[_++]);return g}function f(l,u){const p=[],h=l.length;for(let v=0;v<h;v++)u.indexOf(v)===-1&&p.push(l[v]);const g=u.map(v=>l[v]);return[p,g]}function i(l,u){const p=u.map(h=>1);return m(l,p,u)}function o(l,u,p){r.assert(d(u,p),()=>`${l} supports only inner-most axes for now. Got axes ${u} and rank-${p} input.`)}function n(l,u){if(d(l,u))return null;const p=[];for(let h=0;h<u;++h)l.indexOf(h)===-1&&p.push(h);return l.forEach(h=>p.push(h)),p}function c(l){return l.map((u,p)=>[p,u]).sort((u,p)=>u[1]-p[1]).map(u=>u[0])}function a(l,u){const p=[];for(let h=u-l;h<u;++h)p.push(h);return p}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],khzzn:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"max",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=null,a=!1){const u={x:(0,m.convertToTensor)(n,"x","max")},p={reductionIndices:c,keepDims:a};return r.ENGINE.runKernel(d.Max,u,p)}const o=(0,f.op)({max_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ifMr4:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"min",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=null,a=!1){const u={x:(0,m.convertToTensor)(n,"x","min")},p={axis:c,keepDims:a};return r.ENGINE.runKernel(d.Min,u,p)}const o=(0,f.op)({min_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hg0HR:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pow",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./operation");function o(c,a){let l=(0,f.convertToTensor)(c,"base","pow"),u=(0,f.convertToTensor)(a,"exp","pow");[l,u]=(0,m.makeTypesMatch)(l,u);const p={a:l,b:u};return r.ENGINE.runKernel(d.Pow,p)}const n=(0,i.op)({pow_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1SA7b":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"scalar",()=>m);var r=e("../util"),d=e("./tensor_ops_util");function m(f,i){if(((0,r.isTypedArray)(f)&&i!=="string"||Array.isArray(f))&&i!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(i==="string"&&(0,r.isTypedArray)(f)&&!(f instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const o=[],n=[];return(0,d.makeTensor)(f,o,n,i)}},{"../util":"hQeVi","./tensor_ops_util":"XeZUq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],VUCvx:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sqrt",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","sqrt","float32")};return r.ENGINE.runKernel(d.Sqrt,a)}const o=(0,f.op)({sqrt_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6AZak":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"square",()=>i);var r=e("../engine"),d=e("../tensor_util_env"),m=e("./operation");function f(o){const n=(0,d.convertToTensor)(o,"x","square"),c={};return r.ENGINE.runKernel("Square",{x:n},c)}const i=(0,m.op)({square_:f})},{"../engine":"eID09","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8K3V0":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sum",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./cast"),i=e("./operation");function o(c,a=null,l=!1){let u=(0,m.convertToTensor)(c,"x","sum");u.dtype==="bool"&&(u=(0,f.cast)(u,"int32"));const p={x:u},h={axis:a,keepDims:l};return r.ENGINE.runKernel(d.Sum,p,h)}const n=(0,i.op)({sum_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./cast":"eaOhx","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8j9Nl":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"exp",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","exp")};return r.ENGINE.runKernel(d.Exp,a)}const o=(0,f.op)({exp_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7to7x":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expandDims",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a=0){const l=(0,m.convertToTensor)(c,"x","expandDims","string_or_numeric");f.assert(a<=l.rank,()=>"Axis must be <= rank of the tensor");const u={input:l},p={dim:a};return r.ENGINE.runKernel(d.ExpandDims,u,p)}const n=(0,i.op)({expandDims_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gFGhf:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expm1",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","expm1")};return r.ENGINE.runKernel(d.Expm1,a)}const o=(0,f.op)({expm1_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lE6Vo:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"eye",()=>n);var r=e("./buffer"),d=e("./expand_dims"),m=e("./operation"),f=e("./reshape"),i=e("./tile");function o(c,a,l,u="float32"){a==null&&(a=c);const p=(0,r.buffer)([c,a],u),h=c<=a?c:a;for(let v=0;v<h;++v)p.set(1,v,v);const g=(0,f.reshape)(p.toTensor(),[c,a]);if(l==null)return g;if(l.length===1)return(0,i.tile)((0,d.expandDims)(g,0),[l[0],1,1]);if(l.length===2)return(0,i.tile)((0,d.expandDims)((0,d.expandDims)(g,0),0),[l[0],l[1],1,1]);if(l.length===3)return(0,i.tile)((0,d.expandDims)((0,d.expandDims)((0,d.expandDims)(g,0),0),0),[l[0],l[1],l[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${l.length}D.`)}const n=(0,m.op)({eye_:o})},{"./buffer":"clw49","./expand_dims":"7to7x","./operation":"5CKbF","./reshape":"5iOnm","./tile":"j34EP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],j34EP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tile",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a){const l=(0,m.convertToTensor)(c,"x","tile","string_or_numeric");f.assert(l.rank===a.length,()=>`Error in transpose: rank of input ${l.rank} must match length of reps ${a}.`);const u={x:l},p={reps:a};return r.ENGINE.runKernel(d.Tile,u,p)}const n=(0,i.op)({tile_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"290Z3":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"floor",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","floor","float32")};return r.ENGINE.runKernel(d.Floor,a)}const o=(0,f.op)({floor_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fCVf8:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gather",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a=0,l=0){const u=(0,m.convertToTensor)(n,"x","gather"),p=(0,m.convertToTensor)(c,"indices","gather","int32"),h={x:u,indices:p},g={axis:a,batchDims:l};return r.ENGINE.runKernel(d.GatherV2,h,g)}const o=(0,f.op)({gather_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kEWCa:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"greater",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./operation");function n(a,l){let u=(0,f.convertToTensor)(a,"a","greater","string_or_numeric"),p=(0,f.convertToTensor)(l,"b","greater","string_or_numeric");[u,p]=(0,m.makeTypesMatch)(u,p),(0,i.assertAndGetBroadcastShape)(u.shape,p.shape);const h={a:u,b:p};return r.ENGINE.runKernel(d.Greater,h)}const c=(0,o.op)({greater_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lCE2c:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"greaterEqual",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./operation");function n(a,l){let u=(0,f.convertToTensor)(a,"a","greaterEqual","string_or_numeric"),p=(0,f.convertToTensor)(l,"b","greaterEqual","string_or_numeric");[u,p]=(0,m.makeTypesMatch)(u,p),(0,i.assertAndGetBroadcastShape)(u.shape,p.shape);const h={a:u,b:p};return r.ENGINE.runKernel(d.GreaterEqual,h)}const c=(0,o.op)({greaterEqual_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jEnsh:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"imag",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={input:(0,m.convertToTensor)(n,"input","imag")};return r.ENGINE.runKernel(d.Imag,a)}const o=(0,f.op)({imag_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fLUcH:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isFinite",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","isFinite")};return r.ENGINE.runKernel(d.IsFinite,a)}const o=(0,f.op)({isFinite_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],GPtSK:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isInf",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","isInf")};return r.ENGINE.runKernel(d.IsInf,a)}const o=(0,f.op)({isInf_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],JCWEy:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isNaN",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","isNaN")};return r.ENGINE.runKernel(d.IsNan,a)}const o=(0,f.op)({isNaN_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g5HtG:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"leakyRelu",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=.2){const l={x:(0,m.convertToTensor)(n,"x","leakyRelu")},u={alpha:c};return r.ENGINE.runKernel(d.LeakyRelu,l,u)}const o=(0,f.op)({leakyRelu_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gvtbk:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"less",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./operation");function n(a,l){let u=(0,f.convertToTensor)(a,"a","less","string_or_numeric"),p=(0,f.convertToTensor)(l,"b","less","string_or_numeric");[u,p]=(0,m.makeTypesMatch)(u,p),(0,i.assertAndGetBroadcastShape)(u.shape,p.shape);const h={a:u,b:p};return r.ENGINE.runKernel(d.Less,h)}const c=(0,o.op)({less_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fNUcT:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lessEqual",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./operation");function n(a,l){let u=(0,f.convertToTensor)(a,"a","lessEqual","string_or_numeric"),p=(0,f.convertToTensor)(l,"b","lessEqual","string_or_numeric");[u,p]=(0,m.makeTypesMatch)(u,p),(0,i.assertAndGetBroadcastShape)(u.shape,p.shape);const h={a:u,b:p};return r.ENGINE.runKernel(d.LessEqual,h)}const c=(0,o.op)({lessEqual_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dtjoK:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"linspace",()=>m);var r=e("../engine"),d=e("../kernel_names");function m(f,i,o){if(o<=0)throw new Error("The number of values should be positive.");const n={start:f,stop:i,num:o};return r.ENGINE.runKernel(d.LinSpace,{},n)}},{"../engine":"eID09","../kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6orK2":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"localResponseNormalization",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation"),o=e("./reshape");function n(a,l=5,u=1,p=1,h=.5){const g=(0,m.convertToTensor)(a,"x","localResponseNormalization");f.assert(g.rank===4||g.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${g.rank}.`),f.assert(f.isInt(l),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${l}.`);let v=g,_=!1;g.rank===3&&(_=!0,v=(0,o.reshape)(g,[1,g.shape[0],g.shape[1],g.shape[2]]));const k={x:v},y={depthRadius:l,bias:u,alpha:p,beta:h},x=r.ENGINE.runKernel(d.LRN,k,y);return _?(0,o.reshape)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const c=(0,i.op)({localResponseNormalization_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2y0F2":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"log",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","log","float32")};return r.ENGINE.runKernel(d.Log,a)}const o=(0,f.op)({log_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2jl3l":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"log1p",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","log1p")};return r.ENGINE.runKernel(d.Log1p,a)}const o=(0,f.op)({log1p_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dUvNi:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logSigmoid",()=>a);var r=e("../gradients"),d=e("../tensor_util_env"),m=e("./mul"),f=e("./neg"),i=e("./operation"),o=e("./sigmoid"),n=e("./softplus");function c(l){const u=(0,d.convertToTensor)(l,"x","logSigmoid");return(0,r.customGrad)(h=>({value:(0,f.neg)((0,n.softplus)((0,f.neg)(h))),gradFunc:_=>(0,m.mul)(_,(0,o.sigmoid)((0,f.neg)(h)))}))(u)}const a=(0,i.op)({logSigmoid_:c})},{"../gradients":"dGO2J","../tensor_util_env":"1FegS","./mul":"kfDrf","./neg":"gXSYm","./operation":"5CKbF","./sigmoid":"atwNP","./softplus":"eudDV","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dGO2J:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"customGrad",()=>l),t.export(s,"variableGrads",()=>a),t.export(s,"valueAndGrad",()=>n),t.export(s,"valueAndGrads",()=>c),t.export(s,"grad",()=>i),t.export(s,"grads",()=>o);var r=e("./engine"),d=e("./tensor"),m=e("./tensor_util_env"),f=e("./util");function i(p){return f.assert(f.isFunction(p),()=>"The f passed in grad(f) must be a function"),(h,g)=>{const v=(0,m.convertToTensor)(h,"x","tf.grad","string_or_numeric"),_=g!=null?(0,m.convertToTensor)(g,"dy","tf.grad"):null;return r.ENGINE.tidy(()=>{const{value:k,grads:y}=r.ENGINE.gradients(()=>p(v),[v],_);return _!=null&&f.assertShapesMatch(k.shape,_.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),u(y),y[0]})}}function o(p){return f.assert(f.isFunction(p),()=>"The f passed in grads(f) must be a function"),(h,g)=>{f.assert(Array.isArray(h),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const v=(0,m.convertToTensorArray)(h,"args","tf.grads","string_or_numeric"),_=g!=null?(0,m.convertToTensor)(g,"dy","tf.grads"):null;return r.ENGINE.tidy(()=>{const{value:k,grads:y}=r.ENGINE.gradients(()=>p(...v),v,_);return _!=null&&f.assertShapesMatch(k.shape,_.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),u(y),y})}}function n(p){return f.assert(f.isFunction(p),()=>"The f passed in valueAndGrad(f) must be a function"),(h,g)=>{f.assert(h instanceof d.Tensor,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),f.assert(g==null||g instanceof d.Tensor,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:v,value:_}=r.ENGINE.gradients(()=>p(h),[h],g);return u(v),{grad:v[0],value:_}}}function c(p){return f.assert(f.isFunction(p),()=>"The f passed in valueAndGrads(f) must be a function"),(h,g)=>{f.assert(Array.isArray(h)&&h.every(_=>_ instanceof d.Tensor),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),f.assert(g==null||g instanceof d.Tensor,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const v=r.ENGINE.gradients(()=>p(...h),h,g);return g!=null&&f.assertShapesMatch(v.value.shape,g.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),u(v.grads),v}}function a(p,h){f.assert(f.isFunction(p),()=>"The f passed in variableGrads(f) must be a function"),f.assert(h==null||Array.isArray(h)&&h.every(C=>C instanceof d.Variable),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const g=h!=null;if(!g){h=[];for(const C in r.ENGINE.registeredVariables)h.push(r.ENGINE.registeredVariables[C])}const v=g?h.filter(C=>!C.trainable):null,_=h.length;h=h.filter(C=>C.trainable),f.assert(h.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${_} variables is trainable.`);const k=!0,{value:y,grads:x}=r.ENGINE.gradients(p,h,null,k);f.assert(x.some(C=>C!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),f.assert(y.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${y.rank} tensor`);const b={};return h.forEach((C,w)=>{x[w]!=null&&(b[C.name]=x[w])}),v!=null&&v.forEach(C=>b[C.name]=null),{value:y,grads:b}}function l(p){return r.ENGINE.customGrad(p)}function u(p){if(p.filter(g=>g==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}},{"./engine":"eID09","./tensor":"hRGZH","./tensor_util_env":"1FegS","./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gXSYm:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"neg",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","neg")};return r.ENGINE.runKernel(d.Neg,a)}const o=(0,f.op)({neg_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eudDV:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softplus",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","softplus")};return r.ENGINE.runKernel(d.Softplus,a)}const o=(0,f.op)({softplus_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7eev5":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logSoftmax",()=>p);var r=e("../gradients"),d=e("../tensor_util_env"),m=e("./cast"),f=e("./exp"),i=e("./log"),o=e("./max"),n=e("./mul"),c=e("./operation"),a=e("./sub"),l=e("./sum");function u(h,g=-1){const v=(0,d.convertToTensor)(h,"logits","logSoftmax");if(g===-1&&(g=v.rank-1),g!==v.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${v.rank} and axis was ${g}`);return(0,r.customGrad)((k,y)=>{const x=!0,b=(0,o.max)(k,g,!0),C=(0,a.sub)(k,b),w=(0,a.sub)((0,m.cast)(C,"float32"),(0,i.log)((0,l.sum)((0,f.exp)(C),g,x)));return y([w]),{value:w,gradFunc:(T,F)=>{const[S]=F,I=!0,j=(0,f.exp)(S);return(0,a.sub)(T,(0,n.mul)((0,l.sum)(T,g,I),j))}}})(v)}const p=(0,c.op)({logSoftmax_:u})},{"../gradients":"dGO2J","../tensor_util_env":"1FegS","./cast":"eaOhx","./exp":"8j9Nl","./log":"2y0F2","./max":"khzzn","./mul":"kfDrf","./operation":"5CKbF","./sub":"ihs7S","./sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ihs7S:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sub",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./operation");function o(c,a){let l=(0,f.convertToTensor)(c,"a","sub"),u=(0,f.convertToTensor)(a,"b","sub");[l,u]=(0,m.makeTypesMatch)(l,u);const p={a:l,b:u};return r.ENGINE.runKernel(d.Sub,p)}const n=(0,i.op)({sub_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aioCW:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logSumExp",()=>h);var r=e("../tensor_util_env"),d=e("../util"),m=e("./add"),f=e("./axis_util"),i=e("./exp"),o=e("./log"),n=e("./max"),c=e("./operation"),a=e("./reshape"),l=e("./sub"),u=e("./sum");function p(g,v=null,_=!1){const k=(0,r.convertToTensor)(g,"x","logSumExp"),y=(0,d.parseAxisParam)(v,k.shape),x=(0,n.max)(k,y,!0),b=(0,l.sub)(k,x),C=(0,i.exp)(b),w=(0,u.sum)(C,y),N=(0,o.log)(w),T=(0,m.add)((0,a.reshape)(x,N.shape),N);if(_){const F=(0,f.expandShapeToKeepDim)(T.shape,y);return(0,a.reshape)(T,F)}return T}const h=(0,c.op)({logSumExp_:p})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./add":"2ocTD","./axis_util":"hf64X","./exp":"8j9Nl","./log":"2y0F2","./max":"khzzn","./operation":"5CKbF","./reshape":"5iOnm","./sub":"ihs7S","./sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eqe0O:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalAnd",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./broadcast_util"),i=e("./operation");function o(c,a){const l=(0,m.convertToTensor)(c,"a","logicalAnd","bool"),u=(0,m.convertToTensor)(a,"b","logicalAnd","bool");(0,f.assertAndGetBroadcastShape)(l.shape,u.shape);const p={a:l,b:u};return r.ENGINE.runKernel(d.LogicalAnd,p)}const n=(0,i.op)({logicalAnd_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hZuGz:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalNot",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","logicalNot","bool")};return r.ENGINE.runKernel(d.LogicalNot,a)}const o=(0,f.op)({logicalNot_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],h8nMl:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalOr",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./broadcast_util"),i=e("./operation");function o(c,a){const l=(0,m.convertToTensor)(c,"a","logicalOr","bool"),u=(0,m.convertToTensor)(a,"b","logicalOr","bool");(0,f.assertAndGetBroadcastShape)(l.shape,u.shape);const p={a:l,b:u};return r.ENGINE.runKernel(d.LogicalOr,p)}const n=(0,i.op)({logicalOr_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lO4Lx:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalXor",()=>c);var r=e("../tensor_util_env"),d=e("./broadcast_util"),m=e("./logical_and"),f=e("./logical_not"),i=e("./logical_or"),o=e("./operation");function n(a,l){const u=(0,r.convertToTensor)(a,"a","logicalXor","bool"),p=(0,r.convertToTensor)(l,"b","logicalXor","bool");return(0,d.assertAndGetBroadcastShape)(u.shape,p.shape),(0,m.logicalAnd)((0,i.logicalOr)(a,l),(0,f.logicalNot)((0,m.logicalAnd)(a,l)))}const c=(0,o.op)({logicalXor_:n})},{"../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./logical_and":"eqe0O","./logical_not":"hZuGz","./logical_or":"h8nMl","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dkdbt:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lowerBound",()=>d);var r=e("./search_sorted");function d(m,f){return(0,r.searchSorted)(m,f,"left")}},{"./search_sorted":"eUGeQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eUGeQ:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"searchSorted",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util_base"),i=e("./operation"),o=e("./reshape");const n=2147483648;function c(l,u,p="left"){const h=(0,m.convertToTensor)(l,"sortedSequence","searchSorted"),g=(0,m.convertToTensor)(u,"values","searchSorted"),v=h.shape[h.shape.length-1],_=g.shape[g.shape.length-1],k=(0,o.reshape)(h,[-1,v]),y=(0,o.reshape)(g,[-1,_]);if(k.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(k.shape[0]!==y.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,f.sizeFromShape)(y.shape)>=n)throw new Error(`values tensor size must less than ${n}`);if(k.shape[1]>=n)throw new Error(`trailing dim_size must less than ${n} for int32 output type, was ${k.shape[1]}`);const x={sortedSequence:k,values:y},b={side:p};return r.ENGINE.runKernel(d.SearchSorted,x,b)}const a=(0,i.op)({searchSorted_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util_base":"7Tgdr","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"17lyl":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./conv_util"),o=e("./operation"),n=e("./reshape");function c(l,u,p,h,g){const v=(0,m.convertToTensor)(l,"x","maxPool"),_=1;let k=v,y=!1;v.rank===3&&(y=!0,k=(0,n.reshape)(v,[1,v.shape[0],v.shape[1],v.shape[2]])),f.assert(k.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${k.rank}.`),f.assert(i.eitherStridesOrDilationsAreOne(p,_),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${p} and dilations '${_}'`),i.checkPadOnDimRoundingMode("maxPool",h,g);const x={x:k},b={filterSize:u,strides:p,pad:h,dimRoundingMode:g},C=r.ENGINE.runKernel(d.MaxPool,x,b);return y?(0,n.reshape)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}const a=(0,o.op)({maxPool_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7JZyQ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool3d",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./conv_util"),o=e("./operation"),n=e("./reshape");function c(l,u=[1,1,1],p,h,g,v="NDHWC"){const _=(0,m.convertToTensor)(l,"x","maxPool3d");let k=_,y=!1;_.rank===4&&(y=!0,k=(0,n.reshape)(_,[1,_.shape[0],_.shape[1],_.shape[2],_.shape[3]])),f.assert(k.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${k.rank}.`),f.assert(v==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${v}`),(0,i.checkPadOnDimRoundingMode)("maxPool3d",h,g);const x={x:k},b={filterSize:u,strides:p,pad:h,dimRoundingMode:g,dataFormat:v},C=r.ENGINE.runKernel(d.MaxPool3D,x,b);return y?(0,n.reshape)(C,[C.shape[1],C.shape[2],C.shape[3],C.shape[4]]):C}const a=(0,o.op)({maxPool3d_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ijZue:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolWithArgmax",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a,l,u=!1){const h={x:(0,m.convertToTensor)(n,"x","maxPoolWithArgmax")},g={filterSize:c,strides:a,pad:l,includeBatchInIndex:u},v=r.ENGINE.runKernel(d.MaxPoolWithArgmax,h,g);return{result:v[0],indexes:v[1]}}const o=(0,f.op)({maxPoolWithArgmax_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fTDK0:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maximum",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./cast"),n=e("./operation");function c(l,u){let p=(0,f.convertToTensor)(l,"a","maximum"),h=(0,f.convertToTensor)(u,"b","maximum");[p,h]=(0,m.makeTypesMatch)(p,h),p.dtype==="bool"&&(p=(0,o.cast)(p,"int32"),h=(0,o.cast)(h,"int32")),(0,i.assertAndGetBroadcastShape)(p.shape,h.shape);const g={a:p,b:h};return r.ENGINE.runKernel(d.Maximum,g)}const a=(0,n.op)({maximum_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./cast":"eaOhx","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3OoGB":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mean",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=null,a=!1){const u={x:(0,m.convertToTensor)(n,"x","mean")},p={axis:c,keepDims:a};return r.ENGINE.runKernel(d.Mean,u,p)}const o=(0,f.op)({mean_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6dHzi":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"meshgrid",()=>n);var r=e("./mat_mul"),d=e("./ones"),m=e("./reshape"),f=e("../tensor"),i=e("../tensor_util_env"),o=e("../util_base");function n(c,a,{indexing:l="xy"}={}){if(l!=="xy"&&l!=="ij")throw new TypeError(`${l} is not a valid third argument to meshgrid`);if(c===void 0)return[];let u=(0,i.convertToTensor)(c,"x","meshgrid",c instanceof f.Tensor?c.dtype:"float32");if(a===void 0)return[u];let p=(0,i.convertToTensor)(a,"y","meshgrid",a instanceof f.Tensor?a.dtype:"float32");const h=(0,o.sizeFromShape)(u.shape),g=(0,o.sizeFromShape)(p.shape);return l==="xy"?(u=(0,m.reshape)(u,[1,-1]),p=(0,m.reshape)(p,[-1,1]),[(0,r.matMul)((0,d.ones)([g,1],u.dtype),u),(0,r.matMul)(p,(0,d.ones)([1,h],p.dtype))]):(u=(0,m.reshape)(u,[-1,1]),p=(0,m.reshape)(p,[1,-1]),[(0,r.matMul)(u,(0,d.ones)([1,g],u.dtype)),(0,r.matMul)((0,d.ones)([h,1],p.dtype),p)])}},{"./mat_mul":"2iQjP","./ones":"cjU7J","./reshape":"5iOnm","../tensor":"hRGZH","../tensor_util_env":"1FegS","../util_base":"7Tgdr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cjU7J:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ones",()=>o);var r=e("../engine"),d=e("../util"),m=e("../util_base"),f=e("./complex"),i=e("./zeros");function o(n,c="float32"){if((0,m.assertNonNegativeIntegerDimensions)(n),c==="complex64"){const l=o(n,"float32"),u=(0,i.zeros)(n,"float32");return(0,f.complex)(l,u)}const a=(0,d.makeOnesTypedArray)((0,d.sizeFromShape)(n),c);return r.ENGINE.makeTensor(a,n,c)}},{"../engine":"eID09","../util":"hQeVi","../util_base":"7Tgdr","./complex":"gJKVw","./zeros":"lWQu4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lWQu4:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"zeros",()=>f);var r=e("../engine"),d=e("../util"),m=e("./complex");function f(i,o="float32"){if((0,d.assertNonNegativeIntegerDimensions)(i),o==="complex64"){const c=f(i,"float32"),a=f(i,"float32");return(0,m.complex)(c,a)}const n=(0,d.makeZerosTypedArray)((0,d.sizeFromShape)(i),o);return r.ENGINE.makeTensor(n,i,o)}},{"../engine":"eID09","../util":"hQeVi","./complex":"gJKVw","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2YOa4":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"minimum",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./cast"),n=e("./operation");function c(l,u){let p=(0,f.convertToTensor)(l,"a","minimum"),h=(0,f.convertToTensor)(u,"b","minimum");[p,h]=(0,m.makeTypesMatch)(p,h),p.dtype==="bool"&&(p=(0,o.cast)(p,"int32"),h=(0,o.cast)(h,"int32")),(0,i.assertAndGetBroadcastShape)(p.shape,h.shape);const g={a:p,b:h};return r.ENGINE.runKernel(d.Minimum,g)}const a=(0,n.op)({minimum_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./cast":"eaOhx","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hAxX2:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mirrorPad",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a,l){f.assert(l==="reflect"||l==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${l}.`);const u=(0,m.convertToTensor)(c,"x","mirrorPad");if(u.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");f.assert(a.length===u.rank,()=>`Padding doesn't match input. Must be ${u.rank}. Got ${a.length}.`);const p=l==="reflect"?1:0;for(let v=0;v<u.rank;v++)f.assert(a[v].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),f.assert(a[v][0]>=0&&a[v][0]<=u.shape[v]-p&&a[v][1]>=0&&a[v][1]<=u.shape[v]-p,()=>`Padding in dimension ${v} cannot be greater than or equal to ${u.shape[v]-p} or less than 0 for input of shape ${u.shape}`);const h={paddings:a,mode:l},g={x:u};return r.ENGINE.runKernel(d.MirrorPad,g,h)}const n=(0,i.op)({mirrorPad_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"04Yeo":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mod",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./operation");function o(c,a){let l=(0,f.convertToTensor)(c,"a","mod"),u=(0,f.convertToTensor)(a,"b","mod");[l,u]=(0,m.makeTypesMatch)(l,u);const p={a:l,b:u};return r.ENGINE.runKernel(d.Mod,p)}const n=(0,i.op)({mod_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8IKxg":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"moments",()=>u);var r=e("../tensor_util_env"),d=e("../util"),m=e("./axis_util"),f=e("./cast"),i=e("./mean"),o=e("./operation"),n=e("./reshape"),c=e("./square"),a=e("./sub");function l(p,h=null,g=!1){p=(0,r.convertToTensor)(p,"x","moments");const v=(0,d.parseAxisParam)(h,p.shape),_=(0,i.mean)(p,v,g);let k=_.shape;g||(k=(0,m.expandShapeToKeepDim)(_.shape,v));const y=(0,c.square)((0,a.sub)((0,f.cast)(p,"float32"),(0,n.reshape)(_,k))),x=(0,i.mean)(y,v,g);return{mean:_,variance:x}}const u=(0,o.op)({moments_:l})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./axis_util":"hf64X","./cast":"eaOhx","./mean":"3OoGB","./operation":"5CKbF","./reshape":"5iOnm","./square":"6AZak","./sub":"ihs7S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"52uga":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"multiRNNCell",()=>f);var r=e("../tensor_util_env"),d=e("./operation");function m(i,o,n,c){const a=(0,r.convertToTensor)(o,"data","multiRNNCell"),l=(0,r.convertToTensorArray)(n,"c","multiRNNCell"),u=(0,r.convertToTensorArray)(c,"h","multiRNNCell");let p=a;const h=[];for(let _=0;_<i.length;_++){const k=i[_](p,l[_],u[_]);h.push(k[0]),h.push(k[1]),p=k[1]}const g=[],v=[];for(let _=0;_<h.length;_+=2)g.push(h[_]),v.push(h[_+1]);return[g,v]}const f=(0,d.op)({multiRNNCell_:m})},{"../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d7gAE:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"multinomial",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation"),i=e("./reshape");function o(c,a,l,u=!1){const p=(0,m.convertToTensor)(c,"logits","multinomial"),h=p.size,g=p.rank;if(h<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${h}.`);if(g>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${g}`);l=l||Math.random();const _={logits:g===1?(0,i.reshape)(p,[1,-1]):p},k={numSamples:a,seed:l,normalized:u},y=r.ENGINE.runKernel(d.Multinomial,_,k);return g===1?(0,i.reshape)(y,[y.size]):y}const n=(0,f.op)({multinomial_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cCGqV:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"notEqual",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./operation");function n(a,l){let u=(0,f.convertToTensor)(a,"a","notEqual","string_or_numeric"),p=(0,f.convertToTensor)(l,"b","notEqual","string_or_numeric");[u,p]=(0,m.makeTypesMatch)(u,p),(0,i.assertAndGetBroadcastShape)(u.shape,p.shape);const h={a:u,b:p};return r.ENGINE.runKernel(d.NotEqual,h)}const c=(0,o.op)({notEqual_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bHJCu:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"oneHot",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a=1,l=0,u="int32"){if(c<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${c}`);const h={indices:(0,m.convertToTensor)(n,"indices","oneHot","int32")},g={dtype:u,depth:c,onValue:a,offValue:l};return r.ENGINE.runKernel(d.OneHot,h,g)}const o=(0,f.op)({oneHot_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4nFZK":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"onesLike",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","onesLike")};return r.ENGINE.runKernel(d.OnesLike,a)}const o=(0,f.op)({onesLike_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"63orM":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"outerProduct",()=>n);var r=e("../tensor_util_env"),d=e("../util"),m=e("./mat_mul"),f=e("./operation"),i=e("./reshape");function o(c,a){const l=(0,r.convertToTensor)(c,"v1","outerProduct"),u=(0,r.convertToTensor)(a,"v2","outerProduct");d.assert(l.rank===1&&u.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${l.rank} and ${u.rank}.`);const p=(0,i.reshape)(l,[-1,1]),h=(0,i.reshape)(u,[1,-1]);return(0,m.matMul)(p,h)}const n=(0,f.op)({outerProduct_:o})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./mat_mul":"2iQjP","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"30COC":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pad",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a=0){const l=(0,m.convertToTensor)(n,"x","pad");if(l.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const u={paddings:c,constantValue:a},p={x:l};return r.ENGINE.runKernel(d.PadV2,p,u)}const o=(0,f.op)({pad_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gIIvf:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pad1d",()=>i);var r=e("../util"),d=e("./operation"),m=e("./pad");function f(o,n,c=0){return(0,r.assert)(n.length===2,()=>"Invalid number of paddings. Must be length of 2."),(0,m.pad)(o,[n],c)}const i=(0,d.op)({pad1d_:f})},{"../util":"hQeVi","./operation":"5CKbF","./pad":"30COC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lUGmv:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pad2d",()=>i);var r=e("../util"),d=e("./operation"),m=e("./pad");function f(o,n,c=0){return(0,r.assert)(n.length===2&&n[0].length===2&&n[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),(0,m.pad)(o,n,c)}const i=(0,d.op)({pad2d_:f})},{"../util":"hQeVi","./operation":"5CKbF","./pad":"30COC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4HHGF":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pad3d",()=>i);var r=e("../util"),d=e("./operation"),m=e("./pad");function f(o,n,c=0){return(0,r.assert)(n.length===3&&n[0].length===2&&n[1].length===2&&n[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),(0,m.pad)(o,n,c)}const i=(0,d.op)({pad3d_:f})},{"../util":"hQeVi","./operation":"5CKbF","./pad":"30COC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iwL6g:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pad4d",()=>i);var r=e("../util"),d=e("./operation"),m=e("./pad");function f(o,n,c=0){return(0,r.assert)(n.length===4&&n[0].length===2&&n[1].length===2&&n[2].length===2&&n[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),(0,m.pad)(o,n,c)}const i=(0,d.op)({pad4d_:f})},{"../util":"hQeVi","./operation":"5CKbF","./pad":"30COC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],c1BYj:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pool",()=>h);var r=e("../tensor_util_env"),d=e("../util"),m=e("./avg_pool"),f=e("./batch_to_space_nd"),i=e("./conv_util"),o=e("./max_pool"),n=e("./operation"),c=e("./reshape"),a=e("./space_to_batch_nd");function l(g,v,_,k,y,x,b){y==null&&(y=[1,1]),x==null&&(x=1),k===0&&(k="valid");const C=(0,r.convertToTensor)(g,"x","maxPool");let w=C,N=!1;C.rank===3&&(N=!0,w=(0,c.reshape)(C,[1,C.shape[0],C.shape[1],C.shape[2]])),d.assert(i.eitherStridesOrDilationsAreOne(x,y),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${x} and dilations '${y}'`);const T=i.computePool2DInfo(w.shape,v,x,y,k),F=[T.dilationHeight,T.dilationWidth];let S;k==="same"?S=p([T.filterHeight,T.filterWidth],F):S=[[0,0],[0,0]];const I=F[0]===1&&F[1]===1,[j,D]=u([T.inHeight,T.inWidth],F,S),O=I?k:"valid",$=I?w:(0,a.spaceToBatchND)(w,F,j),R=(_==="avg"?()=>(0,m.avgPool)($,v,x,O,b):()=>(0,o.maxPool)($,v,x,O,b))(),A=I?R:(0,f.batchToSpaceND)(R,F,D);return N?(0,c.reshape)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}function u(g,v,_){const k=_.map(T=>T[0]),y=_.map(T=>T[1]),x=g.concat(k,y),b=v.map((T,F)=>(T-x[F]%T)%T),C=y.map((T,F)=>T+b[F]),w=v.map((T,F)=>[k[F],C[F]]),N=v.map((T,F)=>[0,b[F]]);return[w,N]}function p(g,v){const k=g.map((b,C)=>b+(b-1)*(v[C]-1)).map(b=>b-1),y=k.map(b=>Math.floor(b/2)),x=k.map((b,C)=>b-y[C]);return k.map((b,C)=>[y[C],x[C]])}const h=(0,n.op)({pool_:l})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./avg_pool":"iJDL3","./batch_to_space_nd":"8SWXq","./conv_util":"3jOAS","./max_pool":"17lyl","./operation":"5CKbF","./reshape":"5iOnm","./space_to_batch_nd":"hawyX","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hawyX:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"spaceToBatchND",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a,l){const u=(0,m.convertToTensor)(c,"x","spaceToBatchND");f.assert(u.rank>=1+a.length,()=>`input rank ${u.rank} should be > than [blockShape] ${a.length}`),f.assert(l.length===a.length,()=>`paddings.shape[0] ${l.length} must be equal to [blockShape] ${a.length}`),f.assert(u.shape.reduce((g,v,_)=>_>0&&_<=a.length?g&&(v+l[_-1][0]+l[_-1][1])%a[_-1]==0:g,!0),()=>`input spatial dimensions ${u.shape.slice(1)} with paddings ${l.toString()} must be divisible by blockShapes ${a.toString()}`);const p={x:u},h={blockShape:a,paddings:l};return r.ENGINE.runKernel(d.SpaceToBatchND,p,h)}const n=(0,i.op)({spaceToBatchND_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lFobp:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"prelu",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c){const a=(0,m.convertToTensor)(n,"x","prelu"),l=(0,m.convertToTensor)(c,"alpha","prelu"),u={x:a,alpha:l};return r.ENGINE.runKernel(d.Prelu,u)}const o=(0,f.op)({prelu_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bw3dp:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"prod",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./cast"),i=e("./operation");function o(c,a=null,l=!1){let u=(0,m.convertToTensor)(c,"x","prod");u.dtype==="bool"&&(u=(0,f.cast)(u,"int32"));const p={x:u},h={axis:a,keepDims:l};return r.ENGINE.runKernel(d.Prod,p,h)}const n=(0,i.op)({prod_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./cast":"eaOhx","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"11qs0":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedGather",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a,l){const u=n.map((k,y)=>(0,m.convertToTensor)(k,`tensors${y}`,"raggedGather","int32")),p=(0,m.convertToTensor)(c,"paramsDenseValues","raggedGather"),h=(0,m.convertToTensor)(a,"indices","raggedGather","int32"),g={paramsNestedSplits:u,paramsDenseValues:p,indices:h},v={outputRaggedRank:l},_=r.ENGINE.runKernel(d.RaggedGather,g,v);return{outputNestedSplits:_.slice(0,_.length-1),outputDenseValues:_[_.length-1]}}const o=(0,f.op)({raggedGather_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],nsPQk:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedRange",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a){const l=(0,m.convertToTensor)(n,"starts","raggedRange"),u=(0,m.convertToTensor)(c,"limits","raggedRange",l.dtype),p=(0,m.convertToTensor)(a,"deltas","raggedRange",l.dtype),h={starts:l,limits:u,deltas:p},g=r.ENGINE.runKernel(d.RaggedRange,h);return{rtNestedSplits:g[0],rtDenseValues:g[1]}}const o=(0,f.op)({raggedRange_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cd0hx:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedTensorToTensor",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a,l,u){const p=(0,m.convertToTensor)(n,"shape","raggedTensorToTensor","int32"),h=(0,m.convertToTensor)(c,"values","raggedTensorToTensor"),g=(0,m.convertToTensor)(a,"defaultValue","raggedTensorToTensor",h.dtype),v=l.map((y,x)=>(0,m.convertToTensor)(y,`tensors${x}`,"raggedTensorToTensor","int32")),_={shape:p,values:h,defaultValue:g,rowPartitionTensors:v},k={rowPartitionTypes:u};return r.ENGINE.runKernel(d.RaggedTensorToTensor,_,k)}const o=(0,f.op)({raggedTensorToTensor_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5Q4PR":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rand",()=>o);var r=e("../engine"),d=e("../util"),m=e("../util_base"),f=e("./operation");function i(n,c,a){(0,m.assertNonNegativeIntegerDimensions)(n);const l=(0,d.sizeFromShape)(n);let u=null;if(a==null||a==="float32")u=new Float32Array(l);else if(a==="int32")u=new Int32Array(l);else if(a==="bool")u=new Uint8Array(l);else throw new Error(`Unknown data type ${a}`);for(let p=0;p<l;p++)u[p]=c();return r.ENGINE.makeTensor(u,n,a)}const o=(0,f.op)({rand_:i})},{"../engine":"eID09","../util":"hQeVi","../util_base":"7Tgdr","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8Mnr8":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"randomGamma",()=>o);var r=e("../util_base"),d=e("./buffer"),m=e("./operation"),f=e("./rand_util");function i(n,c,a=1,l="float32",u){if((0,r.assertNonNegativeIntegerDimensions)(n),a==null&&(a=1),l==null&&(l="float32"),l!=="float32"&&l!=="int32")throw new Error(`Unsupported data type ${l}`);const p=new f.RandGamma(c,a,l,u),h=(0,d.buffer)(n,l);for(let g=0;g<h.values.length;g++)h.values[g]=p.nextValue();return h.toTensor()}const o=(0,m.op)({randomGamma_:i})},{"../util_base":"7Tgdr","./buffer":"clw49","./operation":"5CKbF","./rand_util":"cAHY4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cAHY4:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MPRandGauss",()=>m),t.export(s,"RandGamma",()=>f),t.export(s,"UniformRandom",()=>i),t.export(s,"jarqueBeraNormalityTest",()=>o),t.export(s,"expectArrayInMeanStdRange",()=>n);var r=e("seedrandom"),d=e("../test_util");class m{constructor(h,g,v,_,k){this.mean=h,this.stdDev=g,this.dtype=v,this.nextVal=NaN,this.truncated=_,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const y=k||Math.random();this.random=r.alea(y.toString())}nextValue(){if(!isNaN(this.nextVal)){const _=this.nextVal;return this.nextVal=NaN,_}let h,g,v=!1;for(;!v;){let _,k,y;do _=2*this.random()-1,k=2*this.random()-1,y=_*_+k*k;while(y>=1||y===0);const x=Math.sqrt(-2*Math.log(y)/y);h=this.mean+this.stdDev*_*x,g=this.mean+this.stdDev*k*x,(!this.truncated||this.isValidTruncated(h))&&(v=!0)}return(!this.truncated||this.isValidTruncated(g))&&(this.nextVal=this.convertValue(g)),this.convertValue(h)}convertValue(h){return this.dtype==null||this.dtype==="float32"?h:Math.round(h)}isValidTruncated(h){return h<=this.upper&&h>=this.lower}}class f{constructor(h,g,v,_){this.alpha=h,this.beta=1/g,this.dtype=v;const k=_||Math.random();this.randu=r.alea(k.toString()),this.randn=new m(0,1,v,!1,this.randu()),h<1?this.d=h+2/3:this.d=h-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let h,g,v,_,k,y;for(;;){do _=this.randn.nextValue(),y=1+this.c*_;while(y<=0);if(y*=y*y,h=_*_,g=1-.331*h*h,v=.5*h+this.d*(1-y+Math.log(y)),k=this.randu(),k<g||Math.log(k)<v)break}return y=1/this.beta*this.d*y,this.alpha<1&&(y*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(y)}convertValue(h){return this.dtype==="float32"?h:Math.round(h)}}class i{constructor(h=0,g=1,v,_){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=h,this.range=g-h,this.dtype=v,_==null&&(_=Math.random()),typeof _=="number"&&(_=_.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${h} - ${g} <= 1 and dtype is not float`);this.random=r.alea(_)}convertValue(h){return this.canReturnFloat()?h:Math.round(h)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}function o(p){const h=p.length,g=u(p),v=l(p),_=h/6*(Math.pow(g,2)+.25*Math.pow(v-3,2));if(_>5.991)throw new Error(`Invalid p-value for JB: ${_}`)}function n(p,h,g,v){v==null&&(v=(0,d.testEpsilon)());const _=c(p);(0,d.expectNumbersClose)(_,h,v),(0,d.expectNumbersClose)(a(p,_),g,v)}function c(p){let h=0;for(let g=0;g<p.length;g++)h+=p[g];return h/p.length}function a(p,h){let g=0;for(let v=0;v<p.length;v++){const _=p[v]-h;g+=_*_}return Math.sqrt(g/p.length)}function l(p){const h=c(p),g=p.length;let v=0,_=0;for(let k=0;k<g;k++){const y=p[k]-h;v+=Math.pow(y,2),_+=Math.pow(y,4)}return 1/g*_/Math.pow(1/g*v,2)}function u(p){const h=c(p),g=p.length;let v=0,_=0;for(let k=0;k<g;k++){const y=p[k]-h;v+=Math.pow(y,2),_+=Math.pow(y,3)}return 1/g*_/Math.pow(1/(g-1)*v,1.5)}},{seedrandom:"gjA5n","../test_util":"j7rFu","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gjA5n:[function(e,E,s){var t=e("12650d0e2f5e5e92"),r=e("2e9ff46cdee4aab4"),d=e("a04af32374227880"),m=e("65d05f6db8da652c"),f=e("1e972c6b140abbe7"),i=e("286eb9753e804cda"),o=e("a0d0bb1ebcf7d3f9");o.alea=t,o.xor128=r,o.xorwow=d,o.xorshift7=m,o.xor4096=f,o.tychei=i,E.exports=o},{"12650d0e2f5e5e92":"3lOXF","2e9ff46cdee4aab4":"foE9r",a04af32374227880:"6mUHT","65d05f6db8da652c":"llRO0","1e972c6b140abbe7":"bKmpK","286eb9753e804cda":"ft3d1",a0d0bb1ebcf7d3f9:"2chIw"}],"3lOXF":[function(e,E,s){(function(t,r,d){function m(n){var c=this,a=o();c.next=function(){var l=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=l-(c.c=l|0)},c.c=1,c.s0=a(" "),c.s1=a(" "),c.s2=a(" "),c.s0-=a(n),c.s0<0&&(c.s0+=1),c.s1-=a(n),c.s1<0&&(c.s1+=1),c.s2-=a(n),c.s2<0&&(c.s2+=1),a=null}function f(n,c){return c.c=n.c,c.s0=n.s0,c.s1=n.s1,c.s2=n.s2,c}function i(n,c){var a=new m(n),l=c&&c.state,u=a.next;return u.int32=function(){return a.next()*4294967296|0},u.double=function(){return u()+(u()*2097152|0)*11102230246251565e-32},u.quick=u,l&&(typeof l=="object"&&f(l,a),u.state=function(){return f(a,{})}),u}function o(){var n=4022871197,c=function(a){a=String(a);for(var l=0;l<a.length;l++){n+=a.charCodeAt(l);var u=.02519603282416938*n;n=u>>>0,u-=n,u*=n,n=u>>>0,u-=n,n+=u*4294967296}return(n>>>0)*23283064365386963e-26};return c}r&&r.exports?r.exports=i:d&&d.amd?d(function(){return i}):this.alea=i})(this,E,typeof define=="function"&&define)},{}],foE9r:[function(e,E,s){(function(t,r,d){function m(o){var n=this,c="";n.x=0,n.y=0,n.z=0,n.w=0,n.next=function(){var l=n.x^n.x<<11;return n.x=n.y,n.y=n.z,n.z=n.w,n.w^=n.w>>>19^l^l>>>8},o===(o|0)?n.x=o:c+=o;for(var a=0;a<c.length+64;a++)n.x^=c.charCodeAt(a)|0,n.next()}function f(o,n){return n.x=o.x,n.y=o.y,n.z=o.z,n.w=o.w,n}function i(o,n){var c=new m(o),a=n&&n.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var u=c.next()>>>11,p=(c.next()>>>0)/4294967296,h=(u+p)/2097152;while(h===0);return h},l.int32=c.next,l.quick=l,a&&(typeof a=="object"&&f(a,c),l.state=function(){return f(c,{})}),l}r&&r.exports?r.exports=i:d&&d.amd?d(function(){return i}):this.xor128=i})(this,E,typeof define=="function"&&define)},{}],"6mUHT":[function(e,E,s){(function(t,r,d){function m(o){var n=this,c="";n.next=function(){var l=n.x^n.x>>>2;return n.x=n.y,n.y=n.z,n.z=n.w,n.w=n.v,(n.d=n.d+362437|0)+(n.v=n.v^n.v<<4^(l^l<<1))|0},n.x=0,n.y=0,n.z=0,n.w=0,n.v=0,o===(o|0)?n.x=o:c+=o;for(var a=0;a<c.length+64;a++)n.x^=c.charCodeAt(a)|0,a==c.length&&(n.d=n.x<<10^n.x>>>4),n.next()}function f(o,n){return n.x=o.x,n.y=o.y,n.z=o.z,n.w=o.w,n.v=o.v,n.d=o.d,n}function i(o,n){var c=new m(o),a=n&&n.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var u=c.next()>>>11,p=(c.next()>>>0)/4294967296,h=(u+p)/2097152;while(h===0);return h},l.int32=c.next,l.quick=l,a&&(typeof a=="object"&&f(a,c),l.state=function(){return f(c,{})}),l}r&&r.exports?r.exports=i:d&&d.amd?d(function(){return i}):this.xorwow=i})(this,E,typeof define=="function"&&define)},{}],llRO0:[function(e,E,s){(function(t,r,d){function m(o){var n=this;n.next=function(){var a=n.x,l=n.i,u,p,h;return u=a[l],u^=u>>>7,p=u^u<<24,u=a[l+1&7],p^=u^u>>>10,u=a[l+3&7],p^=u^u>>>3,u=a[l+4&7],p^=u^u<<7,u=a[l+7&7],u=u^u<<13,p^=u^u<<9,a[l]=p,n.i=l+1&7,p};function c(a,l){var u,p,h=[];if(l===(l|0))p=h[0]=l;else for(l=""+l,u=0;u<l.length;++u)h[u&7]=h[u&7]<<15^l.charCodeAt(u)+h[u+1&7]<<13;for(;h.length<8;)h.push(0);for(u=0;u<8&&h[u]===0;++u);for(u==8?p=h[7]=-1:p=h[u],a.x=h,a.i=0,u=256;u>0;--u)a.next()}c(n,o)}function f(o,n){return n.x=o.x.slice(),n.i=o.i,n}function i(o,n){o==null&&(o=+new Date);var c=new m(o),a=n&&n.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var u=c.next()>>>11,p=(c.next()>>>0)/4294967296,h=(u+p)/2097152;while(h===0);return h},l.int32=c.next,l.quick=l,a&&(a.x&&f(a,c),l.state=function(){return f(c,{})}),l}r&&r.exports?r.exports=i:d&&d.amd?d(function(){return i}):this.xorshift7=i})(this,E,typeof define=="function"&&define)},{}],bKmpK:[function(e,E,s){(function(t,r,d){function m(o){var n=this;n.next=function(){var a=n.w,l=n.X,u=n.i,p,h;return n.w=a=a+1640531527|0,h=l[u+34&127],p=l[u=u+1&127],h^=h<<13,p^=p<<17,h^=h>>>15,p^=p>>>12,h=l[u]=h^p,n.i=u,h+(a^a>>>16)|0};function c(a,l){var u,p,h,g,v,_=[],k=128;for(l===(l|0)?(p=l,l=null):(l=l+"\0",p=0,k=Math.max(k,l.length)),h=0,g=-32;g<k;++g)l&&(p^=l.charCodeAt((g+32)%l.length)),g===0&&(v=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,g>=0&&(v=v+1640531527|0,u=_[g&127]^=p+v,h=u==0?h+1:0);for(h>=128&&(_[(l&&l.length||0)&127]=-1),h=127,g=512;g>0;--g)p=_[h+34&127],u=_[h=h+1&127],p^=p<<13,u^=u<<17,p^=p>>>15,u^=u>>>12,_[h]=p^u;a.w=v,a.X=_,a.i=h}c(n,o)}function f(o,n){return n.i=o.i,n.w=o.w,n.X=o.X.slice(),n}function i(o,n){o==null&&(o=+new Date);var c=new m(o),a=n&&n.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var u=c.next()>>>11,p=(c.next()>>>0)/4294967296,h=(u+p)/2097152;while(h===0);return h},l.int32=c.next,l.quick=l,a&&(a.X&&f(a,c),l.state=function(){return f(c,{})}),l}r&&r.exports?r.exports=i:d&&d.amd?d(function(){return i}):this.xor4096=i})(this,E,typeof define=="function"&&define)},{}],ft3d1:[function(e,E,s){(function(t,r,d){function m(o){var n=this,c="";n.next=function(){var l=n.b,u=n.c,p=n.d,h=n.a;return l=l<<25^l>>>7^u,u=u-p|0,p=p<<24^p>>>8^h,h=h-l|0,n.b=l=l<<20^l>>>12^u,n.c=u=u-p|0,n.d=p<<16^u>>>16^h,n.a=h-l|0},n.a=0,n.b=0,n.c=-1640531527,n.d=1367130551,o===Math.floor(o)?(n.a=o/4294967296|0,n.b=o|0):c+=o;for(var a=0;a<c.length+20;a++)n.b^=c.charCodeAt(a)|0,n.next()}function f(o,n){return n.a=o.a,n.b=o.b,n.c=o.c,n.d=o.d,n}function i(o,n){var c=new m(o),a=n&&n.state,l=function(){return(c.next()>>>0)/4294967296};return l.double=function(){do var u=c.next()>>>11,p=(c.next()>>>0)/4294967296,h=(u+p)/2097152;while(h===0);return h},l.int32=c.next,l.quick=l,a&&(typeof a=="object"&&f(a,c),l.state=function(){return f(c,{})}),l}r&&r.exports?r.exports=i:d&&d.amd?d(function(){return i}):this.tychei=i})(this,E,typeof define=="function"&&define)},{}],"2chIw":[function(e,E,s){(function(t,r,d){var m=256,f=6,i=52,o="random",n=d.pow(m,f),c=d.pow(2,i),a=c*2,l=m-1,u;function p(x,b,C){var w=[];b=b==!0?{entropy:!0}:b||{};var N=_(v(b.entropy?[x,y(r)]:x??k(),3),w),T=new h(w),F=function(){for(var S=T.g(f),I=n,j=0;S<c;)S=(S+j)*m,I*=m,j=T.g(1);for(;S>=a;)S/=2,I/=2,j>>>=1;return(S+j)/I};return F.int32=function(){return T.g(4)|0},F.quick=function(){return T.g(4)/4294967296},F.double=F,_(y(T.S),r),(b.pass||C||function(S,I,j,D){return D&&(D.S&&g(D,T),S.state=function(){return g(T,{})}),j?(d[o]=S,I):S})(F,N,"global"in b?b.global:this==d,b.state)}function h(x){var b,C=x.length,w=this,N=0,T=w.i=w.j=0,F=w.S=[];for(C||(x=[C++]);N<m;)F[N]=N++;for(N=0;N<m;N++)F[N]=F[T=l&T+x[N%C]+(b=F[N])],F[T]=b;(w.g=function(S){for(var I,j=0,D=w.i,O=w.j,$=w.S;S--;)I=$[D=l&D+1],j=j*m+$[l&($[D]=$[O=l&O+I])+($[O]=I)];return w.i=D,w.j=O,j})(m)}function g(x,b){return b.i=x.i,b.j=x.j,b.S=x.S.slice(),b}function v(x,b){var C=[],w=typeof x,N;if(b&&w=="object")for(N in x)try{C.push(v(x[N],b-1))}catch{}return C.length?C:w=="string"?x:x+"\0"}function _(x,b){for(var C=x+"",w,N=0;N<C.length;)b[l&N]=l&(w^=b[l&N]*19)+C.charCodeAt(N++);return y(b)}function k(){try{var x;return u&&(x=u.randomBytes)?x=x(m):(x=new Uint8Array(m),(t.crypto||t.msCrypto).getRandomValues(x)),y(x)}catch{var b=t.navigator,C=b&&b.plugins;return[+new Date,t,C,t.screen,y(r)]}}function y(x){return String.fromCharCode.apply(0,x)}if(_(d.random(),r),E.exports){E.exports=p;try{u=e("55ffaba5e09143c0")}catch{}}else typeof define=="function"&&define.amd?define(function(){return p}):d["seed"+o]=p})(typeof self!="undefined"?self:this,[],Math)},{"55ffaba5e09143c0":"34v0S"}],j7rFu:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TEST_EPSILON_FLOAT16",()=>i),t.export(s,"expectArraysClose",()=>o),t.export(s,"testEpsilon",()=>n),t.export(s,"expectPromiseToFail",()=>a),t.export(s,"expectArraysEqual",()=>l),t.export(s,"expectNumbersClose",()=>u),t.export(s,"expectValuesInRange",()=>h),t.export(s,"expectArrayBuffersEqual",()=>g),t.export(s,"encodeStrings",()=>v),t.export(s,"createVideoElement",()=>_),t.export(s,"play",()=>k);var r=e("./engine"),d=e("./tensor_util_env"),m=e("./util");const f=.001,i=.1;function o(y,x,b){return b==null&&(b=n()),c(y,x,(C,w)=>p(C,w,b))}function n(){return r.ENGINE.backend.floatPrecision()===32?f:i}function c(y,x,b){let C=!0;if(((0,m.isTypedArray)(y)||(0,m.isTypedArray)(x))&&(C=!1),(0,m.isTypedArray)(y)&&(0,m.isTypedArray)(x)&&(C=!0),C){const T=y.constructor.name,F=x.constructor.name;if(T!==F)throw new Error(`Arrays are of different type. Actual: ${T}. Expected: ${F}`)}if(Array.isArray(y)&&Array.isArray(x)){const T=(0,d.inferShape)(y),F=(0,d.inferShape)(x);if(!(0,m.arraysEqual)(T,F))throw new Error(`Arrays have different shapes. Actual: [${T}]. Expected: [${F}]`)}const w=(0,m.isTypedArray)(y)?y:(0,m.flatten)(y),N=(0,m.isTypedArray)(x)?x:(0,m.flatten)(x);if(w.length!==N.length)throw new Error(`Arrays have different lengths actual: ${w.length} vs expected: ${N.length}.
Actual:   ${w}.
Expected: ${N}.`);for(let T=0;T<N.length;++T){const F=w[T],S=N[T];if(!b(F,S))throw new Error(`Arrays differ: actual[${T}] = ${F}, expected[${T}] = ${S}.
Actual:   ${w}.
Expected: ${N}.`)}typeof expect!="undefined"&&expect().nothing()}function a(y,x){y().then(()=>x.fail(),()=>x()),typeof expect!="undefined"&&expect().nothing()}function l(y,x){const b=typeof x=="string"||typeof x=="number"||typeof x=="boolean"?[x]:x;return(0,m.isString)(y)||(0,m.isString)(y[0])||(0,m.isString)(x)||(0,m.isString)(x[0])?c(y,b,(C,w)=>C==w):c(y,x,(C,w)=>p(C,w,0))}function u(y,x,b){if(b==null&&(b=n()),!p(y,x,b))throw new Error(`Numbers differ: actual === ${y}, expected === ${x}`);typeof expect!="undefined"&&expect().nothing()}function p(y,x,b){return!isFinite(y)&&!isFinite(x)?!0:!(isNaN(y)||isNaN(x)||Math.abs(y-x)>b)}function h(y,x,b){for(let C=0;C<y.length;C++)if(y[C]<x||y[C]>b)throw new Error(`Value out of range:${y[C]} low: ${x}, high: ${b}`)}function g(y,x){const b=new Float32Array(y),C=new Float32Array(x);if(b.length!==C.length)throw new Error(`Expected ArrayBuffer to be of length ${C.length}, but it was ${b.length}`);for(let w=0;w<C.length;w++)if(b[w]!==C[w])throw new Error(`Expected ArrayBuffer value at ${w} to be ${C[w]} but got ${b[w]} instead`)}function v(y){for(let x=0;x<y.length;x++){const b=y[x];Array.isArray(b)?v(b):y[x]=(0,m.encodeString)(b)}return y}function _(y){const x=document.createElement("video");return"playsInline"in x&&(x.playsInline=!0),x.muted=!0,x.loop=!0,x.style.position="fixed",x.style.left="0px",x.style.top="0px",x.preload="auto",x.appendChild(y),new Promise(b=>{x.addEventListener("loadeddata",C=>b(x)),x.load()})}async function k(y){await y.play(),"requestVideoFrameCallback"in y&&await new Promise(x=>{y.requestVideoFrameCallback(x)})}},{"./engine":"eID09","./tensor_util_env":"1FegS","./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2SdXP":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"randomNormal",()=>o);var r=e("../util_base"),d=e("./buffer"),m=e("./operation"),f=e("./rand_util");function i(n,c=0,a=1,l,u){if((0,r.assertNonNegativeIntegerDimensions)(n),l!=null&&l==="bool")throw new Error(`Unsupported data type ${l}`);const p=new f.MPRandGauss(c,a,l,!1,u),h=(0,d.buffer)(n,l);for(let g=0;g<h.values.length;g++)h.values[g]=p.nextValue();return h.toTensor()}const o=(0,m.op)({randomNormal_:i})},{"../util_base":"7Tgdr","./buffer":"clw49","./operation":"5CKbF","./rand_util":"cAHY4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gv3SM:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"randomStandardNormal",()=>f);var r=e("./operation"),d=e("./random_normal");function m(i,o,n){if(o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);return(0,d.randomNormal)(i,0,1,o,n)}const f=(0,r.op)({randomStandardNormal_:m})},{"./operation":"5CKbF","./random_normal":"2SdXP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bgoTO:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"randomUniform",()=>o);var r=e("../util_base"),d=e("./buffer"),m=e("./operation"),f=e("./rand_util");function i(n,c=0,a=1,l="float32",u){(0,r.assertNonNegativeIntegerDimensions)(n);const p=(0,d.buffer)(n,l),h=new f.UniformRandom(c,a,null,u);for(let g=0;g<p.values.length;g++)p.values[g]=h.nextValue();return p.toTensor()}const o=(0,m.op)({randomUniform_:i})},{"../util_base":"7Tgdr","./buffer":"clw49","./operation":"5CKbF","./rand_util":"cAHY4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6Ahef":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"randomUniformInt",()=>f);var r=e("./operation"),d=e("./random_uniform");function m(i,o,n,c){return(0,d.randomUniform)(i,o,n,"int32",c)}const f=(0,r.op)({randomUniformInt_:m})},{"./operation":"5CKbF","./random_uniform":"bgoTO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jWxCz:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"range",()=>m);var r=e("../engine"),d=e("../kernel_names");function m(f,i,o=1,n="float32"){if(o===0)throw new Error("Cannot have a step of zero");const c={start:f,stop:i,step:o,dtype:n};return r.ENGINE.runKernel(d.Range,{},c)}},{"../engine":"eID09","../kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],e8Ty6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"real",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={input:(0,m.convertToTensor)(n,"input","real")};return r.ENGINE.runKernel(d.Real,a)}const o=(0,f.op)({real_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"40LSU":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reciprocal",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","reciprocal")};return r.ENGINE.runKernel(d.Reciprocal,a)}const o=(0,f.op)({reciprocal_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ksZVD:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"relu",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","relu")};return r.ENGINE.runKernel(d.Relu,a)}const o=(0,f.op)({relu_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9hEUU":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"relu6",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","relu6")};return r.ENGINE.runKernel(d.Relu6,a)}const o=(0,f.op)({relu6_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aNxZz:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reverse",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c){const l={x:(0,m.convertToTensor)(n,"x","reverse")},u={dims:c};return r.ENGINE.runKernel(d.Reverse,l,u)}const o=(0,f.op)({reverse_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9K1Kp":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reverse1d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./reverse");function i(n){const c=(0,r.convertToTensor)(n,"x","reverse");return d.assert(c.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${c.rank}.`),(0,f.reverse)(c,0)}const o=(0,m.op)({reverse1d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./reverse":"aNxZz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kaeNM:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reverse2d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./reverse");function i(n,c){const a=(0,r.convertToTensor)(n,"x","reverse");return d.assert(a.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${a.rank}.`),(0,f.reverse)(a,c)}const o=(0,m.op)({reverse2d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./reverse":"aNxZz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2tj4i":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reverse3d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./reverse");function i(n,c){const a=(0,r.convertToTensor)(n,"x","reverse");return d.assert(a.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${a.rank}.`),(0,f.reverse)(a,c)}const o=(0,m.op)({reverse3d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./reverse":"aNxZz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9uxQ1":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reverse4d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./reverse");function i(n,c){const a=(0,r.convertToTensor)(n,"x","reverse");return d.assert(a.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${a.rank}.`),(0,f.reverse)(a,c)}const o=(0,m.op)({reverse4d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./reverse":"aNxZz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2FEmu":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"round",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","round")};return r.ENGINE.runKernel(d.Round,a)}const o=(0,f.op)({round_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],h2SJp:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rsqrt",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","rsqrt","float32")};return r.ENGINE.runKernel(d.Rsqrt,a)}const o=(0,f.op)({rsqrt_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1S9no":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"selu",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","selu")};return r.ENGINE.runKernel(d.Selu,a)}const o=(0,f.op)({selu_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],janaT:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"separableConv2d",()=>c);var r=e("../tensor_util_env"),d=e("../util"),m=e("./conv2d"),f=e("./depthwise_conv2d"),i=e("./operation"),o=e("./reshape");function n(a,l,u,p,h,g=[1,1],v="NHWC"){const _=(0,r.convertToTensor)(a,"x","separableConv2d"),k=(0,r.convertToTensor)(l,"depthwiseFilter","separableConv2d"),y=(0,r.convertToTensor)(u,"pointwiseFilter","separableConv2d");let x=_,b=!1;if(_.rank===3&&(b=!0,x=(0,o.reshape)(_,[1,_.shape[0],_.shape[1],_.shape[2]])),v==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");d.assert(x.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${x.rank}.`),d.assert(k.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${k.rank}.`),d.assert(y.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${k.rank}.`),d.assert(y.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${y.shape[0]}.`),d.assert(y.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${y.shape[1]}.`);const C=k.shape[2],w=k.shape[3];d.assert(y.shape[2]===C*w,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${C*w}, but got ${y.shape[2]}.`);const N=(0,f.depthwiseConv2d)(x,k,p,h,v,g),T=1,F=(0,m.conv2d)(N,y,T,"valid",v);return b?(0,o.reshape)(F,[F.shape[1],F.shape[2],F.shape[3]]):F}const c=(0,i.op)({separableConv2d_:n})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./conv2d":"yMZmx","./depthwise_conv2d":"2Aya7","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jfk69:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"setdiff1dAsync",()=>i);var r=e("../tensor"),d=e("../tensor_util_env"),m=e("../util");async function f(o,n){const c=(0,d.convertToTensor)(o,"x","setdiff1d"),a=(0,d.convertToTensor)(n,"y","setdiff1d");m.assert(c.dtype===a.dtype,()=>`x and y should have the same dtype, but got x (${c.dtype}) and y (${a.dtype}).`),m.assert(c.rank===1,()=>`x should be 1D tensor, but got x (${c.shape}).`),m.assert(a.rank===1,()=>`y should be 1D tensor, but got y (${a.shape}).`);const l=await c.data(),u=await a.data(),p=new Set(u);let h=0;for(let _=0;_<l.length;_++)p.has(l[_])||h++;const g=new r.TensorBuffer([h],c.dtype),v=new r.TensorBuffer([h],"int32");for(let _=0,k=0;_<l.length;_++)p.has(l[_])||(g.values[k]=l[_],v.values[k]=_,k++);return[g.toTensor(),v.toTensor()]}const i=f},{"../tensor":"hRGZH","../tensor_util_env":"1FegS","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gEPy4:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sign",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","sign")};return r.ENGINE.runKernel(d.Sign,a)}const o=(0,f.op)({sign_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6zeDO":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sin",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","sin","float32")};return r.ENGINE.runKernel(d.Sin,a)}const o=(0,f.op)({sin_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],emuxO:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sinh",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","sinh")};return r.ENGINE.runKernel(d.Sinh,a)}const o=(0,f.op)({sinh_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iLkhL:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"slice1d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./slice");function i(n,c,a){const l=(0,r.convertToTensor)(n,"x","slice1d");return d.assert(l.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${l.rank} tensor`),(0,f.slice)(l,[c],[a])}const o=(0,m.op)({slice1d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./slice":"9qYv4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1CZzj":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"slice2d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./slice");function i(n,c,a){const l=(0,r.convertToTensor)(n,"x","slice2d");return d.assert(l.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${l.rank} tensor`),(0,f.slice)(l,c,a)}const o=(0,m.op)({slice2d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./slice":"9qYv4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gNnXx:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"slice3d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./slice");function i(n,c,a){const l=(0,r.convertToTensor)(n,"x","slice3d");return d.assert(l.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${l.rank} tensor`),(0,f.slice)(l,c,a)}const o=(0,m.op)({slice3d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./slice":"9qYv4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],esmJ6:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"slice4d",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./slice");function i(n,c,a){const l=(0,r.convertToTensor)(n,"x","slice4d");return d.assert(l.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${l.rank} tensor`),(0,f.slice)(l,c,a)}const o=(0,m.op)({slice4d_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./slice":"9qYv4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"25xmz":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softmax",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=-1){const a=(0,m.convertToTensor)(n,"logits","softmax","float32");if(c===-1&&(c=a.rank-1),c!==a.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and dim was ${c}`);const l={logits:a},u={dim:c};return r.ENGINE.runKernel(d.Softmax,l,u)}const o=(0,f.op)({softmax_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9hd3o":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fft",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../util"),f=e("../operation");function i(n){(0,m.assert)(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const c={input:n};return r.ENGINE.runKernel(d.FFT,c)}const o=(0,f.op)({fft_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../util":"hQeVi","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3yVNF":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ifft",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../util"),f=e("../operation");function i(n){(0,m.assert)(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const c={input:n};return r.ENGINE.runKernel(d.IFFT,c)}const o=(0,f.op)({ifft_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../util":"hQeVi","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7gwdt":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"irfft",()=>h);var r=e("../complex"),d=e("../concat"),m=e("../imag"),f=e("../mul"),i=e("../operation"),o=e("../real"),n=e("../reshape"),c=e("../reverse"),a=e("../scalar"),l=e("../slice"),u=e("./ifft");function p(g){const v=g.shape[g.shape.length-1],_=g.size/v;let k;if(v<=2){const y=(0,n.reshape)(g,[_,v]);k=(0,u.ifft)(y)}else{const y=[_,2*(v-1)],x=(0,n.reshape)((0,o.real)(g),[_,v]),b=(0,n.reshape)((0,m.imag)(g),[_,v]),C=(0,c.reverse)((0,l.slice)(x,[0,1],[_,v-2]),1),w=(0,f.mul)((0,c.reverse)((0,l.slice)(b,[0,1],[_,v-2]),1),(0,a.scalar)(-1)),N=(0,d.concat)([x,C],1),T=(0,d.concat)([b,w],1),F=(0,n.reshape)((0,r.complex)(N,T),[y[0],y[1]]);k=(0,u.ifft)(F)}if(k=(0,o.real)(k),g.rank===3&&g.shape[0]!==0){const y=k,x=g.shape[0];k=(0,n.reshape)(k,[x,k.shape[0]/x,k.shape[1]]),y.dispose()}return k}const h=(0,i.op)({irfft_:p})},{"../complex":"gJKVw","../concat":"bZcSO","../imag":"jEnsh","../mul":"kfDrf","../operation":"5CKbF","../real":"e8Ty6","../reshape":"5iOnm","../reverse":"aNxZz","../scalar":"1SA7b","../slice":"9qYv4","./ifft":"3yVNF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dhjoM:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rfft",()=>g);var r=e("../../util"),d=e("../complex"),m=e("../concat"),f=e("../imag"),i=e("../operation"),o=e("../real"),n=e("../reshape"),c=e("../slice"),a=e("../split"),l=e("../zeros"),u=e("../zeros_like"),p=e("./fft");function h(v,_){(0,r.assert)(v.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${v.dtype}`);let k=v.shape[v.shape.length-1];const y=v.size/k;let x;if(_!=null&&_<k){const D=v.shape.map($=>0),O=v.shape.map($=>$);O[v.shape.length-1]=_,x=(0,c.slice)(v,D,O),k=_}else if(_!=null&&_>k){const D=v.shape.map(O=>O);D[v.shape.length-1]=_-k,x=(0,m.concat)([v,(0,l.zeros)(D)],v.shape.length-1),k=_}else x=v;const b=(0,u.zerosLike)(x),C=(0,n.reshape)((0,d.complex)(x,b),[y,k]),w=(0,p.fft)(C),N=Math.floor(k/2)+1,T=(0,o.real)(w),F=(0,f.imag)(w),S=(0,a.split)(T,[N,k-N],T.shape.length-1),I=(0,a.split)(F,[N,k-N],F.shape.length-1),j=x.shape.slice();return j[x.shape.length-1]=N,(0,n.reshape)((0,d.complex)(S[0],I[0]),j)}const g=(0,i.op)({rfft_:h})},{"../../util":"hQeVi","../complex":"gJKVw","../concat":"bZcSO","../imag":"jEnsh","../operation":"5CKbF","../real":"e8Ty6","../reshape":"5iOnm","../slice":"9qYv4","../split":"d81fP","../zeros":"lWQu4","../zeros_like":"0HiLr","./fft":"9hd3o","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d81fP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"split",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a=0){const u={x:(0,m.convertToTensor)(n,"x","split")},p={numOrSizeSplits:c,axis:a};return r.ENGINE.runKernel(d.SplitV,u,p)}const o=(0,f.op)({split_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cWGon:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"squaredDifference",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util"),f=e("../tensor_util_env"),i=e("./broadcast_util"),o=e("./operation");function n(a,l){let u=(0,f.convertToTensor)(a,"a","squaredDifference"),p=(0,f.convertToTensor)(l,"b","squaredDifference");[u,p]=(0,m.makeTypesMatch)(u,p),(0,i.assertAndGetBroadcastShape)(u.shape,p.shape);const h={a:u,b:p},g={};return r.ENGINE.runKernel(d.SquaredDifference,h,g)}const c=(0,o.op)({squaredDifference_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util":"gj10y","../tensor_util_env":"1FegS","./broadcast_util":"lfnGK","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3LX0Y":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"squeeze",()=>o);var r=e("../tensor_util_env"),d=e("../util"),m=e("./operation"),f=e("./reshape");function i(n,c){const a=(0,r.convertToTensor)(n,"x","squeeze","string_or_numeric");return(0,f.reshape)(a,(0,d.squeezeShape)(a.shape,c).newShape)}const o=(0,m.op)({squeeze_:i})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bf1WU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stack",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a=0){const l=(0,m.convertToTensorArray)(c,"tensors","stack","string_or_numeric");f.assert(l.length>=1,()=>"Pass at least one tensor to tf.stack"),l.length>0&&f.assert(a<=l[0].rank,()=>"Axis must be <= rank of the tensor");const u=l,p={axis:a};return r.ENGINE.runKernel(d.Pack,u,p)}const n=(0,i.op)({stack_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"89RLy":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"step",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=0){const l={x:(0,m.convertToTensor)(n,"x","step")},u={alpha:c};return r.ENGINE.runKernel(d.Step,l,u)}const o=(0,f.op)({step_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1FUj8":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stridedSlice",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c,a,l,u=0,p=0,h=0,g=0,v=0){const k={x:(0,m.convertToTensor)(n,"x","stridedSlice","string_or_numeric")},y={begin:c,end:a,strides:l,beginMask:u,endMask:p,ellipsisMask:h,newAxisMask:g,shrinkAxisMask:v};return r.ENGINE.runKernel(d.StridedSlice,k,y)}const o=(0,f.op)({stridedSlice_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"0vb9d":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tan",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n){const a={x:(0,m.convertToTensor)(n,"x","tan","float32")};return r.ENGINE.runKernel(d.Tan,a)}const o=(0,f.op)({tan_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7Loyb":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensor1d",()=>f);var r=e("../tensor_util_env"),d=e("../util"),m=e("./tensor_ops_util");function f(i,o){(0,d.assertNonNull)(i);const n=(0,r.inferShape)(i,o);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");const c=null;return(0,m.makeTensor)(i,c,n,o)}},{"../tensor_util_env":"1FegS","../util":"hQeVi","./tensor_ops_util":"XeZUq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6pkh7":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensor2d",()=>f);var r=e("../tensor_util_env"),d=e("../util"),m=e("./tensor_ops_util");function f(i,o,n){if((0,d.assertNonNull)(i),o!=null&&o.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const c=(0,r.inferShape)(i,n);if(c.length!==2&&c.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(c.length===1&&o==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,m.makeTensor)(i,o,c,n)}},{"../tensor_util_env":"1FegS","../util":"hQeVi","./tensor_ops_util":"XeZUq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"95xiR":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensor3d",()=>f);var r=e("../tensor_util_env"),d=e("../util"),m=e("./tensor_ops_util");function f(i,o,n){if((0,d.assertNonNull)(i),o!=null&&o.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const c=(0,r.inferShape)(i,n);if(c.length!==3&&c.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(c.length===1&&o==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,m.makeTensor)(i,o,c,n)}},{"../tensor_util_env":"1FegS","../util":"hQeVi","./tensor_ops_util":"XeZUq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7JEcJ":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensor4d",()=>f);var r=e("../tensor_util_env"),d=e("../util"),m=e("./tensor_ops_util");function f(i,o,n){if((0,d.assertNonNull)(i),o!=null&&o.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const c=(0,r.inferShape)(i,n);if(c.length!==4&&c.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(c.length===1&&o==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,m.makeTensor)(i,o,c,n)}},{"../tensor_util_env":"1FegS","../util":"hQeVi","./tensor_ops_util":"XeZUq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kdKLv:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensor5d",()=>f);var r=e("../tensor_util_env"),d=e("../util"),m=e("./tensor_ops_util");function f(i,o,n){if((0,d.assertNonNull)(i),o!=null&&o.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const c=(0,r.inferShape)(i,n);if(c.length!==5&&c.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(c.length===1&&o==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,m.makeTensor)(i,o,c,n)}},{"../tensor_util_env":"1FegS","../util":"hQeVi","./tensor_ops_util":"XeZUq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fMQgD:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensor6d",()=>f);var r=e("../tensor_util_env"),d=e("../util"),m=e("./tensor_ops_util");function f(i,o,n){if((0,d.assertNonNull)(i),o!=null&&o.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const c=(0,r.inferShape)(i,n);if(c.length!==6&&c.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(c.length===1&&o==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return o=o||c,(0,m.makeTensor)(i,o,c,n)}},{"../tensor_util_env":"1FegS","../util":"hQeVi","./tensor_ops_util":"XeZUq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fjQXJ:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensorScatterUpdate",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation"),i=e("./scatter_nd_util");function o(c,a,l){const u=(0,m.convertToTensor)(c,"tensor","tensorScatterupdate"),p=(0,m.convertToTensor)(a,"indices","tensorScatterupdate","int32"),h=(0,m.convertToTensor)(l,"updates","tensorScatterupdate");if(i.validateInput(h,p,u.shape),u.dtype!==h.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${u.dtype} and ${h.dtype}.`);const g={tensor:u,indices:p,updates:h},v={};return r.ENGINE.runKernel(d.TensorScatterUpdate,g,v)}const n=(0,f.op)({tensorScatterUpdate_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","./scatter_nd_util":"eqT3b","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eqT3b:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"validateUpdateShape",()=>d),t.export(s,"validateInput",()=>m),t.export(s,"calculateShapes",()=>f);var r=e("../util");function d(i,o,n){const c=o.rank>1?o.shape[o.rank-1]:1,a=o.rank>1?o.rank-1:1,l=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${o.shape}, shape: ${i}, sliceDim: ${c}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(l+` update.rank < ${a}. `);if(i.length<c+(n.rank-a))throw new Error(l+` Output shape length < ${c+(n.rank-a)}`);if(n.rank!==a+i.length-c)throw new Error(l+` update.rank != ${a+i.length-c}`);for(let u=0;u<a;++u)if(n.shape[u]!==o.shape[u])throw new Error(l+` updates.shape[${u}] (${n.shape[u]}) != indices.shape[${u}] (${o.shape[u]}).`);for(let u=0;u<n.rank-a;++u)if(n.shape[u+a]!==i[u+c])throw new Error(l+` updates.shape[${u+a}] (${n.shape[u+a]}) != shape[${u+a}] (${i[u+a]})`)}function m(i,o,n){if(o.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${o.rank}.`);if(i.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${i.rank}.`);if(o.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${o.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(o.size===0)throw new Error(`Indices specified for empty output. indices shape: ${o.shape}`);if(i.size===0)throw new Error(`Updates specified for empty output. updates shape: ${i.shape}`)}d(n,o,i)}function f(i,o,n){const c=o.shape.length,a=c>1?o.shape[c-1]:1,l=n.length;let u=1;for(let _=a;_<l;++_)u*=n[_];const p=a<1?1:a,h=(0,r.sizeFromShape)(o.shape)/p,g=[...(0,r.computeStrides)(n.slice(0,a)),1],v=(0,r.sizeFromShape)(n);return{sliceRank:a,numUpdates:h,sliceSize:u,strides:g,outputSize:v}}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"37Jzb":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"topk",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c=1,a=!0){const l=(0,m.convertToTensor)(n,"x","topk");if(l.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const u=l.shape[l.shape.length-1];if(c<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${c}`);if(c>u)throw new Error(`'k' passed to topk() must be <= the last dimension (${u}) but got ${c}`);const p={x:l},h={k:c,sorted:a},[g,v]=r.ENGINE.runKernel(d.TopK,p,h);return{values:g,indices:v}}const o=(0,f.op)({topk_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eXBbS:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"truncatedNormal",()=>o);var r=e("../util_base"),d=e("./buffer"),m=e("./operation"),f=e("./rand_util");function i(n,c=0,a=1,l,u){if((0,r.assertNonNegativeIntegerDimensions)(n),l!=null&&l==="bool")throw new Error("Unsupported data type $ { dtype }");const p=new f.MPRandGauss(c,a,l,!0,u),h=(0,d.buffer)(n,l);for(let g=0;g<h.values.length;g++)h.values[g]=p.nextValue();return h.toTensor()}const o=(0,m.op)({truncatedNormal_:i})},{"../util_base":"7Tgdr","./buffer":"clw49","./operation":"5CKbF","./rand_util":"cAHY4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],au9MH:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unique",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a=0){const l=(0,m.convertToTensor)(c,"x","unique","string_or_numeric");(0,f.assert)(l.rank>0,()=>"The input tensor must be at least 1D");const u={x:l},p={axis:a},[h,g]=r.ENGINE.runKernel(d.Unique,u,p);return{values:h,indices:g}}const n=(0,i.op)({unique_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],f19re:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unsortedSegmentSum",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a,l){const u=(0,m.convertToTensor)(c,"x","unsortedSegmentSum"),p=(0,m.convertToTensor)(a,"segmentIds","unsortedSegmentSum","int32");(0,f.assert)((0,f.isInt)(l),()=>"numSegments must be of dtype int");const h={x:u,segmentIds:p},g={numSegments:l};return r.ENGINE.runKernel(d.UnsortedSegmentSum,h,g)}const n=(0,i.op)({unsortedSegmentSum_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eKCnA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unstack",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation");function o(c,a=0){const l=(0,m.convertToTensor)(c,"x","unstack","string_or_numeric");f.assert(a>=-l.shape.length&&a<l.shape.length,()=>`Axis = ${a} is not in [-${l.shape.length}, ${l.shape.length})`);const u={value:l},p={axis:a};return r.ENGINE.runKernel(d.Unpack,u,p)}const n=(0,i.op)({unstack_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dDeJ8:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"upperBound",()=>d);var r=e("./search_sorted");function d(m,f){return(0,r.searchSorted)(m,f,"right")}},{"./search_sorted":"eUGeQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b64O0:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"variable",()=>d);var r=e("../engine");function d(m,f=!0,i,o){return r.ENGINE.makeVariable(m,f,i,o)}},{"../engine":"eID09","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],drCKR:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"whereAsync",()=>f);var r=e("../backends/where_impl"),d=e("../tensor_util_env");async function m(i){const o=(0,d.convertToTensor)(i,"condition","whereAsync","bool"),n=await o.data(),c=(0,r.whereImpl)(o.shape,n);return i!==o&&o.dispose(),c}const f=m},{"../backends/where_impl":"1XF52","../tensor_util_env":"1FegS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1XF52":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"whereImpl",()=>d);var r=e("../ops/buffer");function d(m,f){const i=[];for(let c=0;c<f.length;c++)f[c]&&i.push(c);const o=(0,r.buffer)(m,"int32"),n=(0,r.buffer)([i.length,m.length],"int32");for(let c=0;c<i.length;c++){const a=o.indexToLoc(i[c]),l=c*m.length;n.values.set(a,l)}return n.toTensor()}},{"../ops/buffer":"clw49","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],auJXH:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"booleanMaskAsync",()=>c);var r=e("../tensor_util_env"),d=e("../util"),m=e("./gather"),f=e("./reshape"),i=e("./squeeze"),o=e("./where_async");async function n(a,l,u){const p=(0,r.convertToTensor)(a,"tensor","boolMask"),h=(0,r.convertToTensor)(l,"mask","boolMask","bool"),g=u??0,v=h.rank,_=p.shape;d.assert(v>0,()=>"mask cannot be scalar"),d.assertShapesMatch(_.slice(g,g+v),h.shape,"mask's shape must match the first K dimensions of tensor's shape,");let k=1;for(let T=g;T<g+v;T++)k*=_[T];const y=_.slice(0,g).concat([k],_.slice(g+v)),x=(0,f.reshape)(p,y),b=(0,f.reshape)(h,[-1]),C=await(0,o.whereAsync)(b),w=(0,i.squeeze)(C,[1]),N=(0,m.gather)(x,w,g);return a!==p&&p.dispose(),l!==h&&h.dispose(),w.dispose(),x.dispose(),b.dispose(),C.dispose(),N}const c=n},{"../tensor_util_env":"1FegS","../util":"hQeVi","./gather":"fCVf8","./reshape":"5iOnm","./squeeze":"3LX0Y","./where_async":"drCKR","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iN8Um:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transpose",()=>p);var r=e("../engine"),d=e("../globals"),m=e("../kernel_names"),f=e("../tensor_util_env"),i=e("../util"),o=e("./complex"),n=e("./imag"),c=e("./neg"),a=e("./operation"),l=e("./real");function u(h,g,v){const _=(0,f.convertToTensor)(h,"x","transpose");if(g==null&&(g=_.shape.map((x,b)=>b).reverse()),i.assert(_.rank===g.length,()=>`Error in transpose: rank of input ${_.rank} must match length of perm ${g}.`),g.forEach(x=>{i.assert(x>=0&&x<_.rank,()=>`All entries in 'perm' must be between 0 and ${_.rank-1} but got ${g}`)}),_.rank<=1)return _.clone();const k={x:_},y={perm:g};return _.dtype==="complex64"?(0,d.tidy)(()=>{let x=(0,l.real)(_),b=(0,n.imag)(_);return x=r.ENGINE.runKernel(m.Transpose,{x},y),b=r.ENGINE.runKernel(m.Transpose,{x:b},y),v&&(b=(0,c.neg)(b)),(0,o.complex)(x,b)}):r.ENGINE.runKernel(m.Transpose,k,y)}const p=(0,a.op)({transpose_:u})},{"../engine":"eID09","../globals":"3oVUX","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./complex":"gJKVw","./imag":"jEnsh","./neg":"gXSYm","./operation":"5CKbF","./real":"e8Ty6","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],o0Juc:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"movingAverage",()=>p);var r=e("../tensor_util"),d=e("../tensor_util_env"),m=e("../util"),f=e("./add"),i=e("./div"),o=e("./mul"),n=e("./operation"),c=e("./pow"),a=e("./scalar"),l=e("./sub");function u(h,g,v,_,k=!0){const y=(0,d.convertToTensor)(h,"v","movingAverage"),x=(0,d.convertToTensor)(g,"x","movingAverage"),b=(0,d.convertToTensor)(v,"decay","movingAverage");(0,r.assertTypesMatch)(y,x),m.assert(m.arraysEqual(y.shape,x.shape),()=>"Shape mismatch in v and x");const C=(0,a.scalar)(1),w=(0,l.sub)(C,b);let N=(0,o.mul)((0,l.sub)(x,y),w);if(k){m.assert(_!=null,()=>"When using zeroDebias: true, step is required.");const T=(0,d.convertToTensor)(_,"step","movingAverage");N=(0,i.div)(N,(0,l.sub)(C,(0,c.pow)(b,T)))}return(0,f.add)(y,N)}const p=(0,n.op)({movingAverage_:u})},{"../tensor_util":"gj10y","../tensor_util_env":"1FegS","../util":"hQeVi","./add":"2ocTD","./div":"4BOnP","./mul":"kfDrf","./operation":"5CKbF","./pow":"hg0HR","./scalar":"1SA7b","./sub":"ihs7S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],agVbG:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"scatterND",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util_base"),i=e("./operation"),o=e("./scatter_nd_util");function n(a,l,u){(0,f.assertNonNegativeIntegerDimensions)(u);const p=(0,m.convertToTensor)(a,"indices","scatterND","int32"),h=(0,m.convertToTensor)(l,"updates","scatterND");o.validateInput(h,p,u);const g={indices:p,updates:h},v={shape:u};return r.ENGINE.runKernel(d.ScatterNd,g,v)}const c=(0,i.op)({scatterND_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util_base":"7Tgdr","./operation":"5CKbF","./scatter_nd_util":"eqT3b","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d0a3m:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseToDense",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../ops/sparse_to_dense_util"),f=e("../tensor_util_env"),i=e("../util_base"),o=e("./operation");function n(a,l,u,p=0){(0,i.assertNonNegativeIntegerDimensions)(u);const h=(0,f.convertToTensor)(a,"sparseIndices","sparseToDense","int32"),g=(0,f.convertToTensor)(l,"sparseValues","sparseToDense","string_or_numeric"),v=(0,f.convertToTensor)(p,"defaultValue","sparseToDense",g.dtype);m.validateInput(h,g,u,v);const _={sparseIndices:h,sparseValues:g,defaultValue:v},k={outputShape:u};return r.ENGINE.runKernel(d.SparseToDense,_,k)}const c=(0,o.op)({sparseToDense_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../ops/sparse_to_dense_util":"5LEAw","../tensor_util_env":"1FegS","../util_base":"7Tgdr","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5LEAw":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"validateInput",()=>r);function r(d,m,f,i){if(d.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${d.dtype}.`);if(d.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${d.shape}.`);const o=d.rank>0?d.shape[0]:1,n=d.rank>1?d.shape[1]:1;if(f.length!==n)throw new Error(`outputShape has incorrect number of elements:, ${f.length}, should be: ${n}.`);const c=m.size;if(!(m.rank===0||m.rank===1&&c===o))throw new Error(`sparseValues has incorrect shape ${m.shape}, should be [] or [${o}]`);if(m.dtype!==i.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7l4RC":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gatherND",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("./operation");function i(n,c){const a=(0,m.convertToTensor)(c,"indices","gatherND","int32"),u={params:(0,m.convertToTensor)(n,"x","gatherND","string_or_numeric"),indices:a};return r.ENGINE.runKernel(d.GatherNd,u)}const o=(0,f.op)({gatherND_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6JCZT":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"dropout",()=>p);var r=e("../tensor"),d=e("../tensor_util_env"),m=e("../util"),f=e("./add"),i=e("./div"),o=e("./dropout_util"),n=e("./floor"),c=e("./mul"),a=e("./operation"),l=e("./random_uniform");function u(h,g,v,_){const k=(0,d.convertToTensor)(h,"x","dropout");if(m.assert(k.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${k.dtype} tensor instead.`),m.assert(g>=0&&g<1,()=>`rate must be a float in the range [0, 1), but got ${g}.`),g===0)return h instanceof r.Tensor?k.clone():k;const y=(0,o.getNoiseShape)(k,v),x=1-g,b=(0,i.div)((0,n.floor)((0,f.add)((0,l.randomUniform)(y,0,1,"float32",_),x)),x);return(0,c.mul)(k,b)}const p=(0,a.op)({dropout_:u})},{"../tensor":"hRGZH","../tensor_util_env":"1FegS","../util":"hQeVi","./add":"2ocTD","./div":"4BOnP","./dropout_util":"6xaXz","./floor":"290Z3","./mul":"kfDrf","./operation":"5CKbF","./random_uniform":"bgoTO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6xaXz":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getNoiseShape",()=>d);var r=e("../util");function d(m,f){if(f==null)return m.shape.slice();if(r.arraysEqual(m.shape,f))return f;if(m.shape.length===f.length){const i=[];for(let o=0;o<m.shape.length;o++)f[o]==null&&m.shape[o]!=null?i.push(m.shape[o]):i.push(f[o]);return i}return f}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iJyYE:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"enclosingPowerOfTwo",()=>d),t.export(s,"cosineWindow",()=>m);var r=e("./tensor1d");function d(f){return Math.floor(Math.pow(2,Math.ceil(Math.log(f)/Math.log(2))))}function m(f,i,o){const n=1-f%2,c=new Float32Array(f);for(let a=0;a<f;++a){const l=2*Math.PI*a/(f+n-1);c[a]=i-o*Math.cos(l)}return(0,r.tensor1d)(c,"float32")}},{"./tensor1d":"7Loyb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9qO0a":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"inTopKAsync",()=>i);var r=e("../tensor_util_env"),d=e("../util"),m=e("./tensor");async function f(o,n,c=1){const a=(0,r.convertToTensor)(o,"predictions","inTopK"),l=(0,r.convertToTensor)(n,"targets","inTopK");(0,d.assert)(a.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`),(0,d.assert)(a.rank-1===l.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${l.rank}`),(0,d.assertShapesMatch)(a.shape.slice(0,a.shape.length-1),l.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const u=a.shape[a.shape.length-1];(0,d.assert)(c>0&&c<=u,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${u}), but got ${c}`);const p=await a.data(),h=await l.data(),[g,v]=[p.length/u,u],_=(0,d.getTypedArrayFromDType)("bool",g);for(let k=0;k<g;k++){const y=k*v,x=p.subarray(y,y+v),b=[];for(let C=0;C<x.length;C++)b.push({value:x[C],index:C});b.sort((C,w)=>w.value-C.value),_[k]=0;for(let C=0;C<c;C++)if(b[C].index===h[k]){_[k]=1;break}}return o!==a&&a.dispose(),n!==l&&l.dispose(),(0,m.tensor)(_,l.shape,"bool")}const i=f},{"../tensor_util_env":"1FegS","../util":"hQeVi","./tensor":"cbWW7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bnIvI:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2d",()=>r.conv2d),t.export(s,"depthwiseConv2d",()=>d.depthwiseConv2d),t.export(s,"matMul",()=>m.matMul);var r=e("./fused/conv2d"),d=e("./fused/depthwise_conv2d"),m=e("./fused/mat_mul")},{"./fused/conv2d":"4w309","./fused/depthwise_conv2d":"03YIp","./fused/mat_mul":"3DaEd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4w309":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2d",()=>k);var r=e("../../engine"),d=e("../../gradients"),m=e("../../kernel_names"),f=e("../../tensor_util"),i=e("../../tensor_util_env"),o=e("../../util"),n=e("../add"),c=e("../broadcast_util"),a=e("../conv2d"),l=e("../conv2d_backprop_filter"),u=e("../conv2d_backprop_input"),p=e("../conv_util"),h=e("../fused_util"),g=e("../operation"),v=e("../reshape");function _({x:y,filter:x,strides:b,pad:C,dataFormat:w="NHWC",dilations:N=[1,1],dimRoundingMode:T,bias:F,activation:S="linear",preluActivationWeights:I,leakyreluAlpha:j}){if(S=S||"linear",(0,h.shouldFuse)(r.ENGINE.state.gradientDepth,S)===!1){o.assert(w==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${w} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let K=(0,a.conv2d)(y,x,b,C,w,N,T);return F!=null&&(K=(0,n.add)(K,F)),(0,h.applyActivation)(K,S,I,j)}const D=(0,i.convertToTensor)(y,"x","conv2d","float32"),O=(0,i.convertToTensor)(x,"filter","conv2d","float32");let $=D,P=!1;D.rank===3&&(P=!0,$=(0,v.reshape)(D,[1,D.shape[0],D.shape[1],D.shape[2]])),o.assert($.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${$.rank}.`),o.assert(O.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${O.rank}.`),p.checkPadOnDimRoundingMode("fused conv2d",C,T);const R=w==="NHWC"?$.shape[3]:$.shape[1];o.assert(O.shape[2]===R,()=>`Error in conv2d: depth of input (${R}) must match input depth for filter ${O.shape[2]}.`),o.assert(p.eitherStridesOrDilationsAreOne(b,N),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${b} and dilations '${N}'`);const A=p.computeConv2DInfo($.shape,O.shape,b,N,C,T);let z;F!=null&&(z=(0,i.convertToTensor)(F,"bias","fused conv2d"),[z]=(0,f.makeTypesMatch)(z,D),w==="NHWC"?c.assertAndGetBroadcastShape(A.outShape,z.shape):(o.assert(z.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${z.shape.length}.`),o.assert(z.shape.length===0||z.shape[0]===A.outChannels||z.shape[0]===1,()=>`Error in fused conv2d: bias shape (${z.shape}) is not compatible with the number of output channels (${A.outChannels})`)));let G;if(I!=null){const K=I.shape;if(o.assert(K.length<=1||K.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${K.length}.`),K.length===1)o.assert(K[0]===1||K[0]===A.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${K}) is not compatible with the number of output channels (${A.outChannels}).`);else if(K.length===3)try{c.assertAndGetBroadcastShape(K,A.outShape)}catch{const H=`Error in fused conv2d: PReLU activation weights (${K}) is not compatible with the output shape of the conv2d (${A.outShape}).`;throw Error(H)}G=(0,i.convertToTensor)(I,"prelu weights","fused conv2d")}const L=(K,W)=>{o.assert(w==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${w} but only NHWC is currently supported.`);const[H,Z,Q,te]=W,ee=(0,h.getFusedDyActivation)(K,Q,S);o.assert(p.tupleValuesAreOne(N),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${N}'`);const ne=(0,u.conv2DBackpropInput)(Z.shape,ee,H,b,C),se=(0,l.conv2DBackpropFilter)(Z,ee,H.shape,b,C),X=[ne,se];if(te!=null){const U=(0,h.getFusedBiasGradient)(te,ee);X.push(U)}return X},M={x:$,filter:O,bias:z,preluActivationWeights:G},V={strides:b,pad:C,dataFormat:w,dilations:N,dimRoundingMode:T,activation:S,leakyreluAlpha:j};return F==null?(0,d.customGrad)((W,H,Z)=>{let Q=r.ENGINE.runKernel(m.FusedConv2D,M,V);return Z([H,W,Q]),P&&(Q=(0,v.reshape)(Q,[Q.shape[1],Q.shape[2],Q.shape[3]])),{value:Q,gradFunc:L}})($,O):(0,d.customGrad)((W,H,Z,Q)=>{let te=r.ENGINE.runKernel(m.FusedConv2D,M,V);return Q([H,W,te,Z]),P&&(te=(0,v.reshape)(te,[te.shape[1],te.shape[2],te.shape[3]])),{value:te,gradFunc:L}})($,O,z)}const k=(0,g.op)({fusedConv2d_:_})},{"../../engine":"eID09","../../gradients":"dGO2J","../../kernel_names":"kYUMv","../../tensor_util":"gj10y","../../tensor_util_env":"1FegS","../../util":"hQeVi","../add":"2ocTD","../broadcast_util":"lfnGK","../conv2d":"yMZmx","../conv2d_backprop_filter":"dETBL","../conv2d_backprop_input":"dOfMZ","../conv_util":"3jOAS","../fused_util":"2eUTg","../operation":"5CKbF","../reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dETBL:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2DBackpropFilter",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../util"),f=e("./conv_util"),i=e("./operation"),o=e("./reshape");function n(a,l,u,p,h,g="NHWC",v){let _=a;a.rank===3&&(_=(0,o.reshape)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let k=l;k.rank===3&&(k=(0,o.reshape)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),m.assert(_.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${_.shape}.`),m.assert(k.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${k.shape}.`),m.assert(u.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${u}.`);const y=g==="NHWC"?_.shape[3]:_.shape[1],x=g==="NHWC"?k.shape[3]:k.shape[1];m.assert(y===u[2],()=>`Error in conv2dDerFilter: depth of input ${y}) must match input depth in filter (${u[2]}.`),m.assert(x===u[3],()=>`Error in conv2dDerFilter: depth of dy (${x}) must match output depth for filter (${u[3]}).`),f.checkPadOnDimRoundingMode("conv2dDerFilter",h,v);const b={x:_,dy:k},C={strides:p,pad:h,dataFormat:g,dimRoundingMode:v,filterShape:u};return r.ENGINE.runKernel(d.Conv2DBackpropFilter,b,C)}const c=(0,i.op)({conv2DBackpropFilter_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2eUTg":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getFusedDyActivation",()=>p),t.export(s,"getFusedBiasGradient",()=>h),t.export(s,"applyActivation",()=>g),t.export(s,"shouldFuse",()=>v);var r=e("./broadcast_util"),d=e("./elu"),m=e("./leaky_relu"),f=e("./mul"),i=e("./prelu"),o=e("./relu"),n=e("./relu6"),c=e("./reshape"),a=e("./sigmoid"),l=e("./step"),u=e("./sum");function p(_,k,y){if(y==null||y==="linear")return _;if(y==="relu")return(0,f.mul)(_,(0,l.step)(k));throw new Error(`Cannot compute gradient for fused activation ${y}.`)}function h(_,k){let y=k;const x=r.getReductionAxes(_.shape,k.shape);return x.length>0&&(y=(0,u.sum)(y,x)),(0,c.reshape)(y,_.shape)}function g(_,k,y,x){if(k==="linear")return _;if(k==="relu")return(0,o.relu)(_);if(k==="elu")return(0,d.elu)(_);if(k==="relu6")return(0,n.relu6)(_);if(k==="prelu")return(0,i.prelu)(_,y);if(k==="leakyrelu")return(0,m.leakyRelu)(_,x);if(k==="sigmoid")return(0,a.sigmoid)(_);throw new Error(`Unknown fused activation ${k}.`)}const v=(_,k)=>!(_>0)||k==="linear"},{"./broadcast_util":"lfnGK","./elu":"IJvcE","./leaky_relu":"g5HtG","./mul":"kfDrf","./prelu":"lFobp","./relu":"ksZVD","./relu6":"9hEUU","./reshape":"5iOnm","./sigmoid":"atwNP","./step":"89RLy","./sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"03YIp":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2d",()=>k);var r=e("../../engine"),d=e("../../gradients"),m=e("../../kernel_names"),f=e("../../tensor_util"),i=e("../../tensor_util_env"),o=e("../../util"),n=e("../add"),c=e("../broadcast_util"),a=e("../conv_util"),l=e("../depthwise_conv2d"),u=e("../depthwise_conv2d_native_backprop_filter"),p=e("../depthwise_conv2d_native_backprop_input"),h=e("../fused_util"),g=e("../operation"),v=e("../reshape");function _({x:y,filter:x,strides:b,pad:C,dataFormat:w="NHWC",dilations:N=[1,1],dimRoundingMode:T,bias:F,activation:S="linear",preluActivationWeights:I,leakyreluAlpha:j}){if((0,h.shouldFuse)(r.ENGINE.state.gradientDepth,S)===!1){let V=(0,l.depthwiseConv2d)(y,x,b,C,w,N,T);return F!=null&&(V=(0,n.add)(V,F)),(0,h.applyActivation)(V,S,I,j)}const D=(0,i.convertToTensor)(y,"x","depthwiseConv2d","float32"),O=(0,i.convertToTensor)(x,"filter","depthwiseConv2d","float32");let $=D,P=!1;D.rank===3&&(P=!0,$=(0,v.reshape)(D,[1,D.shape[0],D.shape[1],D.shape[2]])),o.assert($.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${$.rank}.`),o.assert(O.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${O.rank}.`),o.assert($.shape[3]===O.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${$.shape[3]}) must match the inChannels dimension in filter ${O.shape[2]}.`),N==null&&(N=[1,1]),o.assert(a.eitherStridesOrDilationsAreOne(b,N),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${b} and dilations '${N}'`),a.checkPadOnDimRoundingMode("fused depthwiseConv2d",C,T);const R=a.computeConv2DInfo($.shape,O.shape,b,N,C,T,!0);let A;F!=null&&(A=(0,i.convertToTensor)(F,"bias","fused conv2d"),[A]=(0,f.makeTypesMatch)(A,D),c.assertAndGetBroadcastShape(R.outShape,A.shape));let z;I!=null&&(z=(0,i.convertToTensor)(I,"prelu weights","fused depthwiseConv2d"));const G=(V,K)=>{o.assert(a.tupleValuesAreOne(N),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${N}'`);const[W,H,Z,Q]=K,te=(0,h.getFusedDyActivation)(V,Z,S),ee=(0,p.depthwiseConv2dNativeBackpropInput)(H.shape,te,W,b,C,N,T),ne=(0,u.depthwiseConv2dNativeBackpropFilter)(H,te,W.shape,b,C,N,T);if(Q!=null){const se=(0,h.getFusedBiasGradient)(A,te);return[ee,ne,se]}return[ee,ne]},L={x:$,filter:O,bias:A,preluActivationWeights:z},M={strides:b,pad:C,dataFormat:w,dilations:N,dimRoundingMode:T,activation:S,leakyreluAlpha:j};return F==null?(0,d.customGrad)((K,W,H)=>{let Z=r.ENGINE.runKernel(m.FusedDepthwiseConv2D,L,M);return H([W,K,Z]),P&&(Z=(0,v.reshape)(Z,[Z.shape[1],Z.shape[2],Z.shape[3]])),{value:Z,gradFunc:G}})($,O):(0,d.customGrad)((K,W,H,Z)=>{let Q=r.ENGINE.runKernel(m.FusedDepthwiseConv2D,L,M);return Z([W,K,Q,H]),P&&(Q=(0,v.reshape)(Q,[Q.shape[1],Q.shape[2],Q.shape[3]])),{value:Q,gradFunc:G}})($,O,A)}const k=(0,g.op)({fusedDepthwiseConv2d_:_})},{"../../engine":"eID09","../../gradients":"dGO2J","../../kernel_names":"kYUMv","../../tensor_util":"gj10y","../../tensor_util_env":"1FegS","../../util":"hQeVi","../add":"2ocTD","../broadcast_util":"lfnGK","../conv_util":"3jOAS","../depthwise_conv2d":"2Aya7","../depthwise_conv2d_native_backprop_filter":"AN0q6","../depthwise_conv2d_native_backprop_input":"k2U5j","../fused_util":"2eUTg","../operation":"5CKbF","../reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],AN0q6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNativeBackpropFilter",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("./operation"),f=e("./reshape");function i(n,c,a,l,u,p=[1,1],h){let g=n;n.rank===3&&(g=(0,f.reshape)(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let v=c;v.rank===3&&(v=(0,f.reshape)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const _={x:g,dy:v},k={strides:l,pad:u,dimRoundingMode:h,dilations:p,filterShape:a};return r.ENGINE.runKernel(d.DepthwiseConv2dNativeBackpropFilter,_,k)}const o=(0,m.op)({depthwiseConv2dNativeBackpropFilter_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k2U5j:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNativeBackpropInput",()=>o);var r=e("../engine"),d=e("../kernel_names"),m=e("./operation"),f=e("./reshape");function i(n,c,a,l,u,p=[1,1],h){let g=c,v=!1;c.rank===3&&(v=!0,g=(0,f.reshape)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const _={dy:g,filter:a},k={strides:l,pad:u,dimRoundingMode:h,dilations:p,inputShape:n},y=r.ENGINE.runKernel(d.DepthwiseConv2dNativeBackpropInput,_,k);return v?(0,f.reshape)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const o=(0,m.op)({depthwiseConv2dNativeBackpropInput_:i})},{"../engine":"eID09","../kernel_names":"kYUMv","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3DaEd":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"matMul",()=>g);var r=e("../../engine"),d=e("../../gradients"),m=e("../../kernel_names"),f=e("../../tensor_util"),i=e("../../tensor_util_env"),o=e("../../util"),n=e("../add"),c=e("../broadcast_util"),a=e("../fused_util"),l=e("../mat_mul"),u=e("../operation"),p=e("../reshape");function h({a:v,b:_,transposeA:k=!1,transposeB:y=!1,bias:x,activation:b="linear",preluActivationWeights:C,leakyreluAlpha:w=.2}){if((0,a.shouldFuse)(r.ENGINE.state.gradientDepth,b)===!1){let H=(0,l.matMul)(v,_,k,y);return x!=null&&(H=(0,n.add)(H,x)),(0,a.applyActivation)(H,b,C,w)}let N=(0,i.convertToTensor)(v,"a","fused matMul"),T=(0,i.convertToTensor)(_,"b","fused matMul");[N,T]=(0,f.makeTypesMatch)(N,T);const F=k?N.shape[N.rank-2]:N.shape[N.rank-1],S=y?T.shape[T.rank-1]:T.shape[T.rank-2],I=k?N.shape[N.rank-1]:N.shape[N.rank-2],j=y?T.shape[T.rank-2]:T.shape[T.rank-1],D=N.shape.slice(0,-2),O=T.shape.slice(0,-2),$=o.sizeFromShape(D),P=o.sizeFromShape(O);o.assert(F===S,()=>`Error in fused matMul: inner shapes (${F}) and (${S}) of Tensors with shapes ${N.shape} and ${T.shape} and transposeA=${k} and transposeB=${y} must match.`);const A=c.assertAndGetBroadcastShape(N.shape.slice(0,-2),T.shape.slice(0,-2)).concat([I,j]),z=k?(0,p.reshape)(N,[$,F,I]):(0,p.reshape)(N,[$,I,F]),G=y?(0,p.reshape)(T,[P,j,S]):(0,p.reshape)(T,[P,S,j]);let L;x!=null&&(L=(0,i.convertToTensor)(x,"bias","fused matMul"),[L]=(0,f.makeTypesMatch)(L,N),c.assertAndGetBroadcastShape(A,L.shape));let M;C!=null&&(M=(0,i.convertToTensor)(C,"prelu weights","fused matMul"));const V=(H,Z)=>{const[Q,te,ee,ne]=Z,se=(0,a.getFusedDyActivation)((0,p.reshape)(H,ee.shape),ee,b);let X,U;if(!k&&!y?(X=(0,l.matMul)(se,te,!1,!0),U=(0,l.matMul)(Q,se,!0,!1)):!k&&y?(X=(0,l.matMul)(se,te,!1,!1),U=(0,l.matMul)(se,Q,!0,!1)):k&&!y?(X=(0,l.matMul)(te,se,!1,!0),U=(0,l.matMul)(Q,se,!1,!1)):(X=(0,l.matMul)(te,se,!0,!0),U=(0,l.matMul)(se,Q,!0,!0)),x!=null){const Y=(0,a.getFusedBiasGradient)(ne,se);return[X,U,Y]}else return[X,U]},K={a:z,b:G,bias:L,preluActivationWeights:M},W={transposeA:k,transposeB:y,activation:b,leakyreluAlpha:w};return x==null?(0,d.customGrad)((Z,Q,te)=>{const ee=r.ENGINE.runKernel(m._FusedMatMul,K,W);return te([Z,Q,ee]),{value:(0,p.reshape)(ee,A),gradFunc:V}})(z,G):(0,d.customGrad)((Z,Q,te,ee)=>{const ne=r.ENGINE.runKernel(m._FusedMatMul,K,W);return ee([Z,Q,ne,te]),{value:(0,p.reshape)(ne,A),gradFunc:V}})(z,G,L)}const g=(0,u.op)({fusedMatMul_:h})},{"../../engine":"eID09","../../gradients":"dGO2J","../../kernel_names":"kYUMv","../../tensor_util":"gj10y","../../tensor_util_env":"1FegS","../../util":"hQeVi","../add":"2ocTD","../broadcast_util":"lfnGK","../fused_util":"2eUTg","../mat_mul":"2iQjP","../operation":"5CKbF","../reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eE18k:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"hammingWindow",()=>f);var r=e("../operation"),d=e("../signal_ops_util");function m(i){return(0,d.cosineWindow)(i,.54,.46)}const f=(0,r.op)({hammingWindow_:m})},{"../operation":"5CKbF","../signal_ops_util":"iJyYE","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1Ro11":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"hannWindow",()=>f);var r=e("../operation"),d=e("../signal_ops_util");function m(i){return(0,d.cosineWindow)(i,.5,.5)}const f=(0,r.op)({hannWindow_:m})},{"../operation":"5CKbF","../signal_ops_util":"iJyYE","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hggYY:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"frame",()=>c);var r=e("../concat"),d=e("../fill"),m=e("../operation"),f=e("../reshape"),i=e("../slice"),o=e("../tensor2d");function n(a,l,u,p=!1,h=0){let g=0;const v=[];for(;g+l<=a.size;)v.push((0,i.slice)(a,g,l)),g+=u;if(p)for(;g<a.size;){const _=g+l-a.size,k=(0,r.concat)([(0,i.slice)(a,g,l-_),(0,d.fill)([_],h)]);v.push(k),g+=u}return v.length===0?(0,o.tensor2d)([],[0,l]):(0,f.reshape)((0,r.concat)(v),[v.length,l])}const c=(0,m.op)({frame_:n})},{"../concat":"bZcSO","../fill":"ckpag","../operation":"5CKbF","../reshape":"5iOnm","../slice":"9qYv4","../tensor2d":"6pkh7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"11SkP":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stft",()=>c);var r=e("../mul"),d=e("../operation"),m=e("../signal_ops_util"),f=e("../spectral/rfft"),i=e("./frame"),o=e("./hann_window");function n(a,l,u,p,h=o.hannWindow){p==null&&(p=(0,m.enclosingPowerOfTwo)(l));const g=(0,i.frame)(a,l,u),v=(0,r.mul)(g,h(l));return(0,f.rfft)(v,p)}const c=(0,d.op)({stft_:n})},{"../mul":"kfDrf","../operation":"5CKbF","../signal_ops_util":"iJyYE","../spectral/rfft":"dhjoM","./frame":"hggYY","./hann_window":"1Ro11","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gn8cZ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cropAndResize",()=>n);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../../util"),i=e("../operation");function o(c,a,l,u,p="bilinear",h=0){const g=(0,m.convertToTensor)(c,"image","cropAndResize"),v=(0,m.convertToTensor)(a,"boxes","cropAndResize","float32"),_=(0,m.convertToTensor)(l,"boxInd","cropAndResize","int32"),k=v.shape[0];f.assert(g.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${g.rank}.`),f.assert(v.rank===2&&v.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${k},4] but had shape ${v.shape}.`),f.assert(_.rank===1&&_.shape[0]===k,()=>`Error in cropAndResize: boxInd must be have size [${k}] but had shape ${v.shape}.`),f.assert(u.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${u.length}.`),f.assert(u[0]>=1&&u[1]>=1,()=>`cropSize must be atleast [1,1], but was ${u}`),f.assert(p==="bilinear"||p==="nearest",()=>`method must be bilinear or nearest, but was ${p}`);const y={image:g,boxes:v,boxInd:_},x={method:p,extrapolationValue:h,cropSize:u};return r.ENGINE.runKernel(d.CropAndResize,y,x)}const n=(0,i.op)({cropAndResize_:o})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../../util":"hQeVi","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dzaMc:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"flipLeftRight",()=>n);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../../util"),i=e("../operation");function o(c){const a=(0,m.convertToTensor)(c,"image","flipLeftRight","float32");f.assert(a.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${a.rank}.`);const l={image:a};return r.ENGINE.runKernel(d.FlipLeftRight,l,{})}const n=(0,i.op)({flipLeftRight_:o})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../../util":"hQeVi","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kxoz5:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"grayscaleToRGB",()=>o);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../operation"),f=e("../tile");function i(n){const c=(0,r.convertToTensor)(n,"image","grayscaleToRGB"),a=c.rank-1,l=c.shape[a];d.assert(c.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${c.rank}.`),d.assert(l===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${l}.`);const u=new Array(c.rank);return u.fill(1,0,a),u[a]=3,(0,f.tile)(c,u)}const o=(0,m.op)({grayscaleToRGB_:i})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../operation":"5CKbF","../tile":"j34EP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1CsPB":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rgbToGrayscale",()=>a);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../cast"),f=e("../einsum"),i=e("../expand_dims"),o=e("../operation"),n=e("../tensor1d");function c(l){const u=(0,r.convertToTensor)(l,"image","RGBToGrayscale"),p=u.rank-1,h=u.shape[p];d.assert(u.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${u.rank}.`),d.assert(h===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${h}.`);const g=u.dtype,v=(0,m.cast)(u,"float32"),_=(0,n.tensor1d)([.2989,.587,.114]);let k;switch(u.rank){case 2:k=(0,f.einsum)("ij,j->i",v,_);break;case 3:k=(0,f.einsum)("ijk,k->ij",v,_);break;case 4:k=(0,f.einsum)("ijkl,l->ijk",v,_);break;case 5:k=(0,f.einsum)("ijklm,m->ijkl",v,_);break;case 6:k=(0,f.einsum)("ijklmn,n->ijklm",v,_);break;default:throw new Error("Not a valid tensor rank.")}return k=(0,i.expandDims)(k,-1),(0,m.cast)(k,g)}const a=(0,o.op)({rgbToGrayscale_:c})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../cast":"eaOhx","../einsum":"4Lsi1","../expand_dims":"7to7x","../operation":"5CKbF","../tensor1d":"7Loyb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],akMuG:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rotateWithOffset",()=>n);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../../util"),i=e("../operation");function o(c,a,l=0,u=.5){const p=(0,m.convertToTensor)(c,"image","rotateWithOffset","float32");f.assert(p.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${p.rank}.`);const h={image:p},g={radians:a,fillValue:l,center:u};return r.ENGINE.runKernel(d.RotateWithOffset,h,g)}const n=(0,i.op)({rotateWithOffset_:o})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../../util":"hQeVi","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],irWaD:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppression",()=>n);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../nonmax_util"),i=e("../operation");function o(c,a,l,u=.5,p=Number.NEGATIVE_INFINITY){const h=(0,m.convertToTensor)(c,"boxes","nonMaxSuppression","float32"),g=(0,m.convertToTensor)(a,"scores","nonMaxSuppression","float32"),v=(0,f.nonMaxSuppSanityCheck)(h,g,l,u,p);l=v.maxOutputSize,u=v.iouThreshold,p=v.scoreThreshold;const _={maxOutputSize:l,iouThreshold:u,scoreThreshold:p};return r.ENGINE.runKernel(d.NonMaxSuppressionV3,{boxes:h,scores:g},_)}const n=(0,i.op)({nonMaxSuppression_:o})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../nonmax_util":"kCKmy","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kCKmy:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppSanityCheck",()=>d);var r=e("../util");function d(m,f,i,o,n,c){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),c==null&&(c=0);const a=m.shape[0];return i=Math.min(i,a),r.assert(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),r.assert(m.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${m.rank}'`),r.assert(m.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${m.shape[1]}`),r.assert(f.rank===1,()=>"scores must be a 1D tensor"),r.assert(f.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${f.shape[0]}`),r.assert(0<=c&&c<=1,()=>`softNmsSigma must be in [0, 1], but was '${c}'`),{maxOutputSize:i,iouThreshold:o,scoreThreshold:n,softNmsSigma:c}}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"16l36":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionAsync",()=>o);var r=e("../../backends/non_max_suppression_impl"),d=e("../../tensor_util_env"),m=e("../nonmax_util"),f=e("../tensor1d");async function i(n,c,a,l=.5,u=Number.NEGATIVE_INFINITY){const p=(0,d.convertToTensor)(n,"boxes","nonMaxSuppressionAsync"),h=(0,d.convertToTensor)(c,"scores","nonMaxSuppressionAsync"),g=(0,m.nonMaxSuppSanityCheck)(p,h,a,l,u);a=g.maxOutputSize,l=g.iouThreshold,u=g.scoreThreshold;const v=await Promise.all([p.data(),h.data()]),_=v[0],k=v[1],{selectedIndices:y}=(0,r.nonMaxSuppressionV3Impl)(_,k,a,l,u);return p!==n&&p.dispose(),h!==c&&h.dispose(),(0,f.tensor1d)(y,"int32")}const o=i},{"../../backends/non_max_suppression_impl":"5hm5N","../../tensor_util_env":"1FegS","../nonmax_util":"kCKmy","../tensor1d":"7Loyb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5hm5N":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionV3Impl",()=>d),t.export(s,"nonMaxSuppressionV4Impl",()=>m),t.export(s,"nonMaxSuppressionV5Impl",()=>f);var r=e("./non_max_suppression_util");function d(a,l,u,p,h){return i(a,l,u,p,h,0)}function m(a,l,u,p,h,g){return i(a,l,u,p,h,0,!1,g,!0)}function f(a,l,u,p,h,g){return i(a,l,u,p,h,g,!0)}function i(a,l,u,p,h,g,v=!1,_=!1,k=!1){const y=[];for(let F=0;F<l.length;F++)l[F]>h&&y.push({score:l[F],boxIndex:F,suppressBeginIndex:0});y.sort(c);const x=g>0?-.5/g:0,b=[],C=[];for(;b.length<u&&y.length>0;){const F=y.pop(),{score:S,boxIndex:I,suppressBeginIndex:j}=F;if(S<h)break;let D=!1;for(let O=b.length-1;O>=j;--O){const $=o(a,I,b[O]);if($>=p){D=!0;break}if(F.score=F.score*n(p,x,$),F.score<=h)break}F.suppressBeginIndex=b.length,D||(F.score===S?(b.push(I),C.push(F.score)):F.score>h&&(0,r.binaryInsert)(y,F,c))}const w=b.length,N=u-w;_&&N>0&&(b.push(...new Array(N).fill(0)),C.push(...new Array(N).fill(0)));const T={selectedIndices:b};return v&&(T.selectedScores=C),k&&(T.validOutputs=w),T}function o(a,l,u){const p=a.subarray(l*4,l*4+4),h=a.subarray(u*4,u*4+4),g=Math.min(p[0],p[2]),v=Math.min(p[1],p[3]),_=Math.max(p[0],p[2]),k=Math.max(p[1],p[3]),y=Math.min(h[0],h[2]),x=Math.min(h[1],h[3]),b=Math.max(h[0],h[2]),C=Math.max(h[1],h[3]),w=(_-g)*(k-v),N=(b-y)*(C-x);if(w<=0||N<=0)return 0;const T=Math.max(g,y),F=Math.max(v,x),S=Math.min(_,b),I=Math.min(k,C),j=Math.max(S-T,0)*Math.max(I-F,0);return j/(w+N-j)}function n(a,l,u){const p=Math.exp(l*u*u);return u<=a?p:0}function c(a,l){return a.score-l.score||a.score===l.score&&l.boxIndex-a.boxIndex}},{"./non_max_suppression_util":"6yjNk","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6yjNk":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"binaryInsert",()=>r),t.export(s,"binarySearch",()=>d);function r(i,o,n){const c=d(i,o,n),a=c<0?-(c+1):c;i.splice(a,0,o)}function d(i,o,n){return f(i,o,n||m)}function m(i,o){return i>o?1:i<o?-1:0}function f(i,o,n){let c=0,a=i.length,l=0,u=!1;for(;c<a;){l=c+(a-c>>>1);const p=n(o,i[l]);p>0?c=l+1:(a=l,u=!p)}return u?c:-c-1}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3vK71":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionWithScore",()=>n);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../nonmax_util"),i=e("../operation");function o(c,a,l,u=.5,p=Number.NEGATIVE_INFINITY,h=0){const g=(0,m.convertToTensor)(c,"boxes","nonMaxSuppression"),v=(0,m.convertToTensor)(a,"scores","nonMaxSuppression"),_=(0,f.nonMaxSuppSanityCheck)(g,v,l,u,p,h);l=_.maxOutputSize,u=_.iouThreshold,p=_.scoreThreshold,h=_.softNmsSigma;const k={boxes:g,scores:v},y={maxOutputSize:l,iouThreshold:u,scoreThreshold:p,softNmsSigma:h},x=r.ENGINE.runKernel(d.NonMaxSuppressionV5,k,y);return{selectedIndices:x[0],selectedScores:x[1]}}const n=(0,i.op)({nonMaxSuppressionWithScore_:o})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../nonmax_util":"kCKmy","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],e5YaP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionWithScoreAsync",()=>o);var r=e("../../backends/non_max_suppression_impl"),d=e("../../tensor_util_env"),m=e("../nonmax_util"),f=e("../tensor1d");async function i(n,c,a,l=.5,u=Number.NEGATIVE_INFINITY,p=0){const h=(0,d.convertToTensor)(n,"boxes","nonMaxSuppressionAsync"),g=(0,d.convertToTensor)(c,"scores","nonMaxSuppressionAsync"),v=(0,m.nonMaxSuppSanityCheck)(h,g,a,l,u,p);a=v.maxOutputSize,l=v.iouThreshold,u=v.scoreThreshold,p=v.softNmsSigma;const _=await Promise.all([h.data(),g.data()]),k=_[0],y=_[1],{selectedIndices:x,selectedScores:b}=(0,r.nonMaxSuppressionV5Impl)(k,y,a,l,u,p);return h!==n&&h.dispose(),g!==c&&g.dispose(),{selectedIndices:(0,f.tensor1d)(x,"int32"),selectedScores:(0,f.tensor1d)(b)}}const o=i},{"../../backends/non_max_suppression_impl":"5hm5N","../../tensor_util_env":"1FegS","../nonmax_util":"kCKmy","../tensor1d":"7Loyb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7uLk5":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionPadded",()=>n);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../nonmax_util"),i=e("../operation");function o(c,a,l,u=.5,p=Number.NEGATIVE_INFINITY,h=!1){const g=(0,m.convertToTensor)(c,"boxes","nonMaxSuppression"),v=(0,m.convertToTensor)(a,"scores","nonMaxSuppression"),_=(0,f.nonMaxSuppSanityCheck)(g,v,l,u,p,null),k=_.maxOutputSize,y=_.iouThreshold,x=_.scoreThreshold,b={boxes:g,scores:v},C={maxOutputSize:k,iouThreshold:y,scoreThreshold:x,padToMaxOutputSize:h},w=r.ENGINE.runKernel(d.NonMaxSuppressionV4,b,C);return{selectedIndices:w[0],validOutputs:w[1]}}const n=(0,i.op)({nonMaxSuppressionPadded_:o})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../nonmax_util":"kCKmy","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fstwv:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionPaddedAsync",()=>n);var r=e("../../backends/non_max_suppression_impl"),d=e("../../tensor_util_env"),m=e("../nonmax_util"),f=e("../scalar"),i=e("../tensor1d");async function o(c,a,l,u=.5,p=Number.NEGATIVE_INFINITY,h=!1){const g=(0,d.convertToTensor)(c,"boxes","nonMaxSuppressionAsync"),v=(0,d.convertToTensor)(a,"scores","nonMaxSuppressionAsync"),_=(0,m.nonMaxSuppSanityCheck)(g,v,l,u,p,null),k=_.maxOutputSize,y=_.iouThreshold,x=_.scoreThreshold,[b,C]=await Promise.all([g.data(),v.data()]),{selectedIndices:w,validOutputs:N}=(0,r.nonMaxSuppressionV4Impl)(b,C,k,y,x,h);return g!==c&&g.dispose(),v!==a&&v.dispose(),{selectedIndices:(0,i.tensor1d)(w,"int32"),validOutputs:(0,f.scalar)(N,"int32")}}const n=o},{"../../backends/non_max_suppression_impl":"5hm5N","../../tensor_util_env":"1FegS","../nonmax_util":"kCKmy","../scalar":"1SA7b","../tensor1d":"7Loyb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3Sz6B":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeBilinear",()=>c);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../../util"),i=e("../operation"),o=e("../reshape");function n(a,l,u=!1,p=!1){const h=(0,m.convertToTensor)(a,"images","resizeBilinear");f.assert(h.rank===3||h.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${h.rank}.`),f.assert(l.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${l}.`),f.assert(p===!1||u===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let g=h,v=!1;h.rank===3&&(v=!0,g=(0,o.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2]]));const[]=l,_={images:g},k={alignCorners:u,halfPixelCenters:p,size:l},y=r.ENGINE.runKernel(d.ResizeBilinear,_,k);return v?(0,o.reshape)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const c=(0,i.op)({resizeBilinear_:n})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../../util":"hQeVi","../operation":"5CKbF","../reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iB9E5:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeNearestNeighbor",()=>c);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../../util"),i=e("../operation"),o=e("../reshape");function n(a,l,u=!1,p=!1){const h=(0,m.convertToTensor)(a,"images","resizeNearestNeighbor");f.assert(h.rank===3||h.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${h.rank}.`),f.assert(l.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${l}.`),f.assert(h.dtype==="float32"||h.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),f.assert(p===!1||u===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let g=h,v=!1;h.rank===3&&(v=!0,g=(0,o.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2]]));const[]=l,_={images:g},k={alignCorners:u,halfPixelCenters:p,size:l},y=r.ENGINE.runKernel(d.ResizeNearestNeighbor,_,k);return v?(0,o.reshape)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const c=(0,i.op)({resizeNearestNeighbor_:n})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../../util":"hQeVi","../operation":"5CKbF","../reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],E6UxQ:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"threshold",()=>N);var r=e("../tensor1d"),d=e("../operation"),m=e("../cast"),f=e("../split"),i=e("../bincount"),o=e("../less_equal"),n=e("../greater"),c=e("../sum"),a=e("../add"),l=e("../mul"),u=e("../div"),p=e("../sub"),h=e("../round"),g=e("../where"),v=e("../fill"),_=e("../slice"),k=e("../range"),y=e("../tensor"),x=e("../../util"),b=e("../../tensor_util_env");function C(T,F="binary",S=!1,I=.5){const j=(0,b.convertToTensor)(T,"image","threshold"),D=.2989,O=.587,$=.114,P=j.shape[0]*j.shape[1];let R=(0,l.mul)((0,r.tensor1d)([I]),255),A,z,G,L;if(x.assert(j.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${j.rank}.`),x.assert(j.shape[2]===3||j.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${j.shape[2]}.`),x.assert(j.dtype==="int32"||j.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${j.dtype}.`),x.assert(F==="otsu"||F==="binary",()=>`Method must be binary or otsu, but was ${F}`),j.shape[2]===3){[A,z,G]=(0,f.split)(j,[1,1,1],-1);const K=(0,l.mul)(A,D),W=(0,l.mul)(z,O),H=(0,l.mul)(G,$);L=(0,a.add)((0,a.add)(K,W),H)}else L=T;if(F==="otsu"){const K=(0,i.bincount)((0,m.cast)((0,h.round)(L),"int32"),(0,y.tensor)([]),256);R=w(K,P)}const M=S?(0,o.lessEqual)(L,R):(0,n.greater)(L,R);return(0,m.cast)((0,l.mul)(M,255),"int32")}function w(T,F){let S=(0,r.tensor1d)([-1]),I=(0,r.tensor1d)([0]),j=(0,r.tensor1d)([0]),D,O,$,P,R,A;for(let z=0;z<T.size-1;z++){D=(0,_.slice)(T,0,z+1),O=(0,_.slice)(T,z+1),R=(0,u.div)((0,c.sum)(D),F),A=(0,u.div)((0,c.sum)(O),F);const G=(0,c.sum)((0,l.mul)(D,(0,k.range)(0,D.size)));$=(0,u.div)(G,(0,c.sum)(D));const L=(0,v.fill)(O.shape,D.size),M=(0,a.add)((0,k.range)(0,O.size),L),V=(0,l.mul)(O,M);P=(0,u.div)((0,c.sum)(V),(0,c.sum)(O));const K=(0,p.sub)($,P),W=(0,p.sub)($,P),H=(0,l.mul)(R,A);j=(0,l.mul)((0,l.mul)(H,K),W);const Z=(0,n.greater)(j,I);I=(0,g.where)(Z,j,I),S=(0,g.where)(Z,(0,r.tensor1d)([z]),S)}return S}const N=(0,d.op)({threshold_:C})},{"../tensor1d":"7Loyb","../operation":"5CKbF","../cast":"eaOhx","../split":"d81fP","../bincount":"fV2lv","../less_equal":"fNUcT","../greater":"kEWCa","../sum":"8K3V0","../add":"2ocTD","../mul":"kfDrf","../div":"4BOnP","../sub":"ihs7S","../round":"2FEmu","../where":"c2TLR","../fill":"ckpag","../slice":"9qYv4","../range":"jWxCz","../tensor":"cbWW7","../../util":"hQeVi","../../tensor_util_env":"1FegS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1ZVax":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transform",()=>n);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../../util"),i=e("../operation");function o(c,a,l="nearest",u="constant",p=0,h){const g=(0,m.convertToTensor)(c,"image","transform","float32"),v=(0,m.convertToTensor)(a,"transforms","transform","float32");f.assert(g.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${g.rank}.`),f.assert(v.rank===2&&(v.shape[0]===g.shape[0]||v.shape[0]===1)&&v.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),f.assert(h==null||h.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${h}.`);const _={image:g,transforms:v},k={interpolation:l,fillMode:u,fillValue:p,outputShape:h};return r.ENGINE.runKernel(d.Transform,_,k)}const n=(0,i.op)({transform_:o})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../../util":"hQeVi","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gDWqX:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"bandPart",()=>y);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../greater_equal"),f=e("../less"),i=e("../less_equal"),o=e("../logical_and"),n=e("../minimum"),c=e("../neg"),a=e("../operation"),l=e("../range"),u=e("../reshape"),p=e("../stack"),h=e("../sub"),g=e("../unstack"),v=e("../where"),_=e("../zeros");function k(x,b,C){const w=(0,r.convertToTensor)(x,"a","bandPart");(0,d.assert)(w.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${w.rank}.`);const N=w.shape,[T,F]=w.shape.slice(-2);let S,I;typeof b=="number"?((0,d.assert)(b%1==0,()=>`bandPart(): numLower must be an integer, got ${b}.`),(0,d.assert)(b<=T,()=>`bandPart(): numLower (${b}) must not be greater than the number of rows (${T}).`),S=(0,r.convertToTensor)(b<0?T:b,"numLower","bandPart")):((0,d.assert)(b.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),S=(0,v.where)((0,f.less)(b,0),T,(0,n.minimum)(b,T))),typeof C=="number"?((0,d.assert)(C%1==0,()=>`bandPart(): numUpper must be an integer, got ${C}.`),(0,d.assert)(C<=F,()=>`bandPart(): numUpper (${C}) must not be greater than the number of columns (${F}).`),I=(0,r.convertToTensor)(C<0?F:C,"numUpper","bandPart")):((0,d.assert)(C.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),I=(0,v.where)((0,f.less)(C,0),F,(0,n.minimum)(C,F)));const j=(0,u.reshape)((0,l.range)(0,T,1,"int32"),[-1,1]),D=(0,l.range)(0,F,1,"int32"),O=(0,h.sub)(j,D),$=(0,o.logicalAnd)((0,i.lessEqual)(O,S),(0,m.greaterEqual)(O,(0,c.neg)(I))),P=(0,_.zeros)([T,F],w.dtype);return(0,u.reshape)((0,p.stack)((0,g.unstack)((0,u.reshape)(w,[-1,T,F])).map(R=>(0,v.where)($,R,P))),N)}const y=(0,a.op)({bandPart_:k})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../greater_equal":"lCE2c","../less":"gvtbk","../less_equal":"fNUcT","../logical_and":"eqe0O","../minimum":"2YOa4","../neg":"gXSYm","../operation":"5CKbF","../range":"jWxCz","../reshape":"5iOnm","../stack":"bf1WU","../sub":"ihs7S","../unstack":"eKCnA","../where":"c2TLR","../zeros":"lWQu4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fvIMn:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gramSchmidt",()=>h);var r=e("../../engine"),d=e("../../util"),m=e("../div"),f=e("../mul"),i=e("../norm"),o=e("../operation"),n=e("../split"),c=e("../squeeze"),a=e("../stack"),l=e("../sub"),u=e("../sum");function p(g){let v;if(Array.isArray(g)){v=!1,(0,d.assert)(g!=null&&g.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const y=g[0].shape[0];for(let x=1;x<g.length;++x)(0,d.assert)(g[x].shape[0]===y,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${g[x].shape[0]} vs. ${y})`)}else v=!0,g=(0,n.split)(g,g.shape[0],0).map(y=>(0,c.squeeze)(y,[0]));(0,d.assert)(g.length<=g[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${g.length}) exceeds number of dimensions (${g[0].shape[0]}).`);const _=[],k=g;for(let y=0;y<g.length;++y)_.push(r.ENGINE.tidy(()=>{let x=k[y];if(y>0)for(let b=0;b<y;++b){const C=(0,f.mul)((0,u.sum)((0,f.mul)(_[b],x)),_[b]);x=(0,l.sub)(x,C)}return(0,m.div)(x,(0,i.norm)(x,"euclidean"))}));return v?(0,a.stack)(_,0):_}const h=(0,o.op)({gramSchmidt_:p})},{"../../engine":"eID09","../../util":"hQeVi","../div":"4BOnP","../mul":"kfDrf","../norm":"a7G0a","../operation":"5CKbF","../split":"d81fP","../squeeze":"3LX0Y","../stack":"bf1WU","../sub":"ihs7S","../sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cDvml:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"qr",()=>T);var r=e("../../engine"),d=e("../../globals"),m=e("../../util"),f=e("../clone"),i=e("../concat"),o=e("../div"),n=e("../eye"),c=e("../greater"),a=e("../mat_mul"),l=e("../mul"),u=e("../neg"),p=e("../norm"),h=e("../operation"),g=e("../reshape"),v=e("../slice"),_=e("../stack"),k=e("../sub"),y=e("../tensor2d"),x=e("../transpose"),b=e("../unstack"),C=e("../where");function w(F,S=!1){if((0,m.assert)(F.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${F.rank}`),F.rank===2)return N(F,S);{const I=F.shape.slice(0,F.shape.length-2).reduce((R,A)=>R*A),j=(0,b.unstack)((0,g.reshape)(F,[I,F.shape[F.shape.length-2],F.shape[F.shape.length-1]]),0),D=[],O=[];j.forEach(R=>{const[A,z]=N(R,S);D.push(A),O.push(z)});const $=(0,g.reshape)((0,_.stack)(D,0),F.shape),P=(0,g.reshape)((0,_.stack)(O,0),F.shape);return[$,P]}}function N(F,S=!1){return r.ENGINE.tidy(()=>{(0,m.assert)(F.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${F.shape.length}D Tensor.`);const I=F.shape[0],j=F.shape[1];let D=(0,n.eye)(I),O=(0,f.clone)(F);const $=(0,y.tensor2d)([[1]],[1,1]);let P=(0,f.clone)($);const R=I>=j?j:I;for(let A=0;A<R;++A){const z=O,G=P,L=D;[P,O,D]=r.ENGINE.tidy(()=>{const M=(0,v.slice)(O,[A,A],[I-A,1]),V=(0,p.norm)(M),K=(0,v.slice)(O,[A,A],[1,1]),W=(0,C.where)((0,c.greater)(K,0),(0,y.tensor2d)([[-1]]),(0,y.tensor2d)([[1]])),H=(0,k.sub)(K,(0,l.mul)(W,V)),Z=(0,o.div)(M,H);Z.shape[0]===1?P=(0,f.clone)($):P=(0,i.concat)([$,(0,v.slice)(Z,[1,0],[Z.shape[0]-1,Z.shape[1]])],0);const Q=(0,u.neg)((0,o.div)((0,a.matMul)(W,H),V)),te=(0,v.slice)(O,[A,0],[I-A,j]),ee=(0,l.mul)(Q,P),ne=(0,x.transpose)(P);if(A===0)O=(0,k.sub)(te,(0,a.matMul)(ee,(0,a.matMul)(ne,te)));else{const U=(0,k.sub)(te,(0,a.matMul)(ee,(0,a.matMul)(ne,te)));O=(0,i.concat)([(0,v.slice)(O,[0,0],[A,j]),U],0)}const se=(0,x.transpose)(ee),X=(0,v.slice)(D,[0,A],[I,D.shape[1]-A]);if(A===0)D=(0,k.sub)(X,(0,a.matMul)((0,a.matMul)(X,P),se));else{const U=(0,k.sub)(X,(0,a.matMul)((0,a.matMul)(X,P),se));D=(0,i.concat)([(0,v.slice)(D,[0,0],[I,A]),U],1)}return[P,O,D]}),(0,d.dispose)([z,G,L])}return!S&&I>j&&(D=(0,v.slice)(D,[0,0],[I,j]),O=(0,v.slice)(O,[0,0],[j,j])),[D,O]})}const T=(0,h.op)({qr_:w})},{"../../engine":"eID09","../../globals":"3oVUX","../../util":"hQeVi","../clone":"lnPTw","../concat":"bZcSO","../div":"4BOnP","../eye":"lE6Vo","../greater":"kEWCa","../mat_mul":"2iQjP","../mul":"kfDrf","../neg":"gXSYm","../norm":"a7G0a","../operation":"5CKbF","../reshape":"5iOnm","../slice":"9qYv4","../stack":"bf1WU","../sub":"ihs7S","../tensor2d":"6pkh7","../transpose":"iN8Um","../unstack":"eKCnA","../where":"c2TLR","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2JQrT":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"absoluteDifference",()=>a);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../abs"),f=e("../loss_ops_utils"),i=e("../operation"),o=e("../sub"),n=e("./compute_weighted_loss");function c(l,u,p,h=f.Reduction.SUM_BY_NONZERO_WEIGHTS){const g=(0,r.convertToTensor)(l,"labels","absoluteDifference"),v=(0,r.convertToTensor)(u,"predictions","absoluteDifference");let _=null;p!=null&&(_=(0,r.convertToTensor)(p,"weights","absoluteDifference")),(0,d.assertShapesMatch)(g.shape,v.shape,"Error in absoluteDifference: ");const k=(0,m.abs)((0,o.sub)(g,v));return(0,n.computeWeightedLoss)(k,_,h)}const a=(0,i.op)({absoluteDifference_:c})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../abs":"2yA8M","../loss_ops_utils":"3908k","../operation":"5CKbF","../sub":"ihs7S","./compute_weighted_loss":"3pu2G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3908k":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Reduction",()=>r);var r;(function(d){d[d.NONE=0]="NONE",d[d.MEAN=1]="MEAN",d[d.SUM=2]="SUM",d[d.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(r||(r={}))},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3pu2G":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"computeWeightedLoss",()=>h);var r=e("../../tensor_util_env"),d=e("../cast"),m=e("../div"),f=e("../loss_ops_utils"),i=e("../mean"),o=e("../mul"),n=e("../not_equal"),c=e("../ones"),a=e("../operation"),l=e("../scalar"),u=e("../sum");function p(g,v,_=f.Reduction.SUM_BY_NONZERO_WEIGHTS){const k=(0,r.convertToTensor)(g,"losses","computeWeightedLoss");let y=null;v!=null&&(y=(0,r.convertToTensor)(v,"weights","computeWeightedLoss"));const x=y==null?k:(0,o.mul)(k,y);if(_===f.Reduction.NONE)return x;if(_===f.Reduction.SUM)return(0,u.sum)(x);if(_===f.Reduction.MEAN){if(y==null)return(0,i.mean)(x);{const b=k.size/y.size,C=(0,m.div)((0,u.sum)(x),(0,u.sum)(y));return b>1?(0,m.div)(C,(0,l.scalar)(b)):C}}if(_===f.Reduction.SUM_BY_NONZERO_WEIGHTS){if(y==null)return(0,m.div)((0,u.sum)(x),(0,l.scalar)(k.size));{const b=(0,o.mul)(y,(0,c.ones)(k.shape)),C=(0,d.cast)((0,u.sum)((0,n.notEqual)(b,(0,l.scalar)(0))),"float32");return(0,m.div)((0,u.sum)(x),C)}}throw Error(`Unknown reduction: ${_}`)}const h=(0,a.op)({computeWeightedLoss_:p})},{"../../tensor_util_env":"1FegS","../cast":"eaOhx","../div":"4BOnP","../loss_ops_utils":"3908k","../mean":"3OoGB","../mul":"kfDrf","../not_equal":"cCGqV","../ones":"cjU7J","../operation":"5CKbF","../scalar":"1SA7b","../sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ktMLc:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cosineDistance",()=>u);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../loss_ops_utils"),f=e("../mul"),i=e("../operation"),o=e("../scalar"),n=e("../sub"),c=e("../sum"),a=e("./compute_weighted_loss");function l(p,h,g,v,_=m.Reduction.SUM_BY_NONZERO_WEIGHTS){const k=(0,r.convertToTensor)(p,"labels","cosineDistance"),y=(0,r.convertToTensor)(h,"predictions","cosineDistance");let x=null;v!=null&&(x=(0,r.convertToTensor)(v,"weights","cosineDistance")),(0,d.assertShapesMatch)(k.shape,y.shape,"Error in cosineDistance: ");const b=(0,o.scalar)(1),C=(0,n.sub)(b,(0,c.sum)((0,f.mul)(k,y),g,!0));return(0,a.computeWeightedLoss)(C,x,_)}const u=(0,i.op)({cosineDistance_:l})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../loss_ops_utils":"3908k","../mul":"kfDrf","../operation":"5CKbF","../scalar":"1SA7b","../sub":"ihs7S","../sum":"8K3V0","./compute_weighted_loss":"3pu2G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jUfH7:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"hingeLoss",()=>u);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../loss_ops_utils"),f=e("../mul"),i=e("../operation"),o=e("../relu"),n=e("../scalar"),c=e("../sub"),a=e("./compute_weighted_loss");function l(p,h,g,v=m.Reduction.SUM_BY_NONZERO_WEIGHTS){let _=(0,r.convertToTensor)(p,"labels","hingeLoss");const k=(0,r.convertToTensor)(h,"predictions","hingeLoss");let y=null;g!=null&&(y=(0,r.convertToTensor)(g,"weights","hingeLoss")),(0,d.assertShapesMatch)(_.shape,k.shape,"Error in hingeLoss: ");const x=(0,n.scalar)(1);_=(0,c.sub)((0,f.mul)((0,n.scalar)(2),_),x);const b=(0,o.relu)((0,c.sub)(x,(0,f.mul)(_,k)));return(0,a.computeWeightedLoss)(b,y,v)}const u=(0,i.op)({hingeLoss_:l})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../loss_ops_utils":"3908k","../mul":"kfDrf","../operation":"5CKbF","../relu":"ksZVD","../scalar":"1SA7b","../sub":"ihs7S","./compute_weighted_loss":"3pu2G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kNBnV:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"huberLoss",()=>g);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../abs"),f=e("../add"),i=e("../loss_ops_utils"),o=e("../minimum"),n=e("../mul"),c=e("../operation"),a=e("../scalar"),l=e("../square"),u=e("../sub"),p=e("./compute_weighted_loss");function h(v,_,k,y=1,x=i.Reduction.SUM_BY_NONZERO_WEIGHTS){const b=(0,r.convertToTensor)(v,"labels","huberLoss"),C=(0,r.convertToTensor)(_,"predictions","huberLoss");let w=null;k!=null&&(w=(0,r.convertToTensor)(k,"weights","huberLoss")),(0,d.assertShapesMatch)(b.shape,C.shape,"Error in huberLoss: ");const N=(0,a.scalar)(y),T=(0,m.abs)((0,u.sub)(C,b)),F=(0,o.minimum)(T,N),S=(0,u.sub)(T,F),I=(0,f.add)((0,n.mul)((0,a.scalar)(.5),(0,l.square)(F)),(0,n.mul)(N,S));return(0,p.computeWeightedLoss)(I,w,x)}const g=(0,c.op)({huberLoss_:h})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../abs":"2yA8M","../add":"2ocTD","../loss_ops_utils":"3908k","../minimum":"2YOa4","../mul":"kfDrf","../operation":"5CKbF","../scalar":"1SA7b","../square":"6AZak","../sub":"ihs7S","./compute_weighted_loss":"3pu2G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b5mul:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logLoss",()=>h);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../add"),f=e("../log"),i=e("../loss_ops_utils"),o=e("../mul"),n=e("../neg"),c=e("../operation"),a=e("../scalar"),l=e("../sub"),u=e("./compute_weighted_loss");function p(g,v,_,k=1e-7,y=i.Reduction.SUM_BY_NONZERO_WEIGHTS){const x=(0,r.convertToTensor)(g,"labels","logLoss"),b=(0,r.convertToTensor)(v,"predictions","logLoss");let C=null;_!=null&&(C=(0,r.convertToTensor)(_,"weights","logLoss")),(0,d.assertShapesMatch)(x.shape,b.shape,"Error in logLoss: ");const w=(0,a.scalar)(1),N=(0,a.scalar)(k),T=(0,n.neg)((0,o.mul)(x,(0,f.log)((0,m.add)(b,N)))),F=(0,o.mul)((0,l.sub)(w,x),(0,f.log)((0,m.add)((0,l.sub)(w,b),N))),S=(0,l.sub)(T,F);return(0,u.computeWeightedLoss)(S,C,y)}const h=(0,c.op)({logLoss_:p})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../add":"2ocTD","../log":"2y0F2","../loss_ops_utils":"3908k","../mul":"kfDrf","../neg":"gXSYm","../operation":"5CKbF","../scalar":"1SA7b","../sub":"ihs7S","./compute_weighted_loss":"3pu2G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fhwN0:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"meanSquaredError",()=>c);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../loss_ops_utils"),f=e("../operation"),i=e("../squared_difference"),o=e("./compute_weighted_loss");function n(a,l,u,p=m.Reduction.SUM_BY_NONZERO_WEIGHTS){const h=(0,r.convertToTensor)(a,"labels","meanSquaredError"),g=(0,r.convertToTensor)(l,"predictions","meanSquaredError");let v=null;u!=null&&(v=(0,r.convertToTensor)(u,"weights","meanSquaredError")),(0,d.assertShapesMatch)(h.shape,g.shape,"Error in meanSquaredError: ");const _=(0,i.squaredDifference)(h,g);return(0,o.computeWeightedLoss)(_,v,p)}const c=(0,f.op)({meanSquaredError_:n})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../loss_ops_utils":"3908k","../operation":"5CKbF","../squared_difference":"cWGon","./compute_weighted_loss":"3pu2G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jlgk9:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sigmoidCrossEntropy",()=>k);var r=e("../../tensor_util_env"),d=e("../../util"),m=e("../abs"),f=e("../add"),i=e("../exp"),o=e("../log1p"),n=e("../loss_ops_utils"),c=e("../mul"),a=e("../neg"),l=e("../operation"),u=e("../relu"),p=e("../scalar"),h=e("../sub"),g=e("./compute_weighted_loss");function v(y,x){const b=(0,r.convertToTensor)(y,"labels","sigmoidCrossEntropyWithLogits"),C=(0,r.convertToTensor)(x,"logits","sigmoidCrossEntropyWithLogits");(0,d.assertShapesMatch)(b.shape,C.shape,"Error in sigmoidCrossEntropyWithLogits: ");const w=(0,u.relu)(C),N=(0,c.mul)(C,b),T=(0,o.log1p)((0,i.exp)((0,a.neg)((0,m.abs)(C))));return(0,f.add)((0,h.sub)(w,N),T)}function _(y,x,b,C=0,w=n.Reduction.SUM_BY_NONZERO_WEIGHTS){let N=(0,r.convertToTensor)(y,"multiClassLabels","sigmoidCrossEntropy");const T=(0,r.convertToTensor)(x,"logits","sigmoidCrossEntropy");let F=null;if(b!=null&&(F=(0,r.convertToTensor)(b,"weights","sigmoidCrossEntropy")),(0,d.assertShapesMatch)(N.shape,T.shape,"Error in sigmoidCrossEntropy: "),C>0){const I=(0,p.scalar)(C),j=(0,p.scalar)(1),D=(0,p.scalar)(.5);N=(0,f.add)((0,c.mul)(N,(0,h.sub)(j,I)),(0,c.mul)(D,I))}const S=v(N,T);return(0,g.computeWeightedLoss)(S,F,w)}const k=(0,l.op)({sigmoidCrossEntropy_:_})},{"../../tensor_util_env":"1FegS","../../util":"hQeVi","../abs":"2yA8M","../add":"2ocTD","../exp":"8j9Nl","../log1p":"2jl3l","../loss_ops_utils":"3908k","../mul":"kfDrf","../neg":"gXSYm","../operation":"5CKbF","../relu":"ksZVD","../scalar":"1SA7b","../sub":"ihs7S","./compute_weighted_loss":"3pu2G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g4oKU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softmaxCrossEntropy",()=>C);var r=e("../../gradients"),d=e("../../tensor_util_env"),m=e("../../util"),f=e("../add"),i=e("../axis_util"),o=e("../cast"),n=e("../div"),c=e("../exp"),a=e("../log_sum_exp"),l=e("../loss_ops_utils"),u=e("../mul"),p=e("../neg"),h=e("../operation"),g=e("../reshape"),v=e("../scalar"),_=e("../sub"),k=e("../sum"),y=e("./compute_weighted_loss");function x(w,N,T=-1){if(T===-1&&(T=N.rank-1),T!==N.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${N.rank} and dim was ${T}`);return(0,r.customGrad)((S,I,j)=>{const D=!0,O=(0,a.logSumExp)(I,[T],D),$=(0,_.sub)((0,o.cast)(I,"float32"),O);j([S,$]);const P=(0,p.neg)((0,u.mul)($,S));return{value:(0,k.sum)(P,[T]),gradFunc:(z,G)=>{const[L,M]=G,V=(0,i.expandShapeToKeepDim)(z.shape,[T]);return[(0,u.mul)((0,g.reshape)(z,V),(0,_.sub)((0,o.cast)(L,"float32"),(0,c.exp)(M))),(0,u.mul)((0,g.reshape)(z,V),(0,_.sub)((0,c.exp)(M),(0,o.cast)(L,"float32")))]}}})(w,N)}function b(w,N,T,F=0,S=l.Reduction.SUM_BY_NONZERO_WEIGHTS){let I=(0,d.convertToTensor)(w,"onehotLabels","softmaxCrossEntropy");const j=(0,d.convertToTensor)(N,"logits","softmaxCrossEntropy");let D=null;if(T!=null&&(D=(0,d.convertToTensor)(T,"weights","softmaxCrossEntropy")),(0,m.assertShapesMatch)(I.shape,j.shape,"Error in softmaxCrossEntropy: "),F>0){const $=(0,v.scalar)(F),P=(0,v.scalar)(1),R=(0,v.scalar)(I.shape[1]);I=(0,f.add)((0,u.mul)(I,(0,_.sub)(P,$)),(0,n.div)($,R))}const O=x(I,j);return(0,y.computeWeightedLoss)(O,D,S)}const C=(0,h.op)({softmaxCrossEntropy_:b})},{"../../gradients":"dGO2J","../../tensor_util_env":"1FegS","../../util":"hQeVi","../add":"2ocTD","../axis_util":"hf64X","../cast":"eaOhx","../div":"4BOnP","../exp":"8j9Nl","../log_sum_exp":"aioCW","../loss_ops_utils":"3908k","../mul":"kfDrf","../neg":"gXSYm","../operation":"5CKbF","../reshape":"5iOnm","../scalar":"1SA7b","../sub":"ihs7S","../sum":"8K3V0","./compute_weighted_loss":"3pu2G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],z5ZLN:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseFillEmptyRows",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../operation");function i(n,c,a,l){const u=(0,m.convertToTensor)(n,"indices","sparseFillEmptyRows","int32"),p=(0,m.convertToTensor)(c,"values","sparseFillEmptyRows"),h=(0,m.convertToTensor)(a,"denseShape","sparseFillEmptyRows","int32"),g=(0,m.convertToTensor)(l,"defaultValue","sparseFillEmptyRows",p.dtype);if(u.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${u.shape}`);if(p.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${p.shape}`);if(h.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${h.shape}`);if(g.rank!==0)throw new Error(`Default value should be a scalar but received shape ${g.shape}`);const v={indices:u,values:p,denseShape:h,defaultValue:g},_=r.ENGINE.runKernel(d.SparseFillEmptyRows,v);return{outputIndices:_[0],outputValues:_[1],emptyRowIndicator:_[2],reverseIndexMap:_[3]}}const o=(0,f.op)({sparseFillEmptyRows_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4YrN6":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseReshape",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../operation");function i(n,c,a){const l=(0,m.convertToTensor)(n,"inputIndices","sparseReshape","int32"),u=(0,m.convertToTensor)(c,"inputShape","sparseReshape","int32"),p=(0,m.convertToTensor)(a,"newShape","sparseReshape","int32");if(l.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${l.shape}`);if(u.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${u.shape}`);if(p.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${p.shape}`);const h={inputIndices:l,inputShape:u,newShape:p},g=r.ENGINE.runKernel(d.SparseReshape,h);return{outputIndices:g[0],outputShape:g[1]}}const o=(0,f.op)({sparseReshape_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aGdXZ:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseSegmentMean",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../operation");function i(n,c,a){const l=(0,m.convertToTensor)(n,"data","sparseSegmentMean"),u=(0,m.convertToTensor)(c,"indices","sparseSegmentMean","int32"),p=(0,m.convertToTensor)(a,"segmentIds","sparseSegmentMean","int32");if(l.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(u.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${u.shape}`);if(p.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${p.shape}`);const h={data:l,indices:u,segmentIds:p};return r.ENGINE.runKernel(d.SparseSegmentMean,h)}const o=(0,f.op)({sparseSegmentMean_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],R1JHI:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseSegmentSum",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../operation");function i(n,c,a){const l=(0,m.convertToTensor)(n,"data","sparseSegmentSum"),u=(0,m.convertToTensor)(c,"indices","sparseSegmentSum","int32"),p=(0,m.convertToTensor)(a,"segmentIds","sparseSegmentSum","int32");if(l.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(u.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${u.shape}`);if(p.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${p.shape}`);const h={data:l,indices:u,segmentIds:p};return r.ENGINE.runKernel(d.SparseSegmentSum,h)}const o=(0,f.op)({sparseSegmentSum_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],PZM1g:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringNGrams",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../operation");function i(n,c,a,l,u,p,h,g){const v=(0,m.convertToTensor)(n,"data","stringNGrams","string");if(v.dtype!=="string")throw new Error("Data must be of datatype string");if(v.shape.length!==1)throw new Error(`Data must be a vector, saw: ${v.shape}`);const _=(0,m.convertToTensor)(c,"dataSplits","stringNGrams");if(_.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const k={separator:a,nGramWidths:l,leftPad:u,rightPad:p,padWidth:h,preserveShortSequences:g},y={data:v,dataSplits:_},x=r.ENGINE.runKernel(d.StringNGrams,y,k);return{nGrams:x[0],nGramsSplits:x[1]}}const o=(0,f.op)({stringNGrams_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2ncXM":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringSplit",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../operation");function i(n,c,a=!0){const l=(0,m.convertToTensor)(n,"input","stringSplit","string"),u=(0,m.convertToTensor)(c,"delimiter","stringSplit","string");if(l.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${l.shape}`);if(u.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${u.shape}`);const p={skipEmpty:a},h={input:l,delimiter:u},g=r.ENGINE.runKernel(d.StringSplit,h,p);return{indices:g[0],values:g[1],shape:g[2]}}const o=(0,f.op)({stringSplit_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"30QBZ":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringToHashBucketFast",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../operation");function i(n,c){const a=(0,m.convertToTensor)(n,"input","stringToHashBucketFast","string"),l={numBuckets:c};if(c<=0)throw new Error("Number of buckets must be at least 1");const u={input:a};return r.ENGINE.runKernel(d.StringToHashBucketFast,u,l)}const o=(0,f.op)({stringToHashBucketFast_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cfIpH:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"staticRegexReplace",()=>o);var r=e("../../engine"),d=e("../../kernel_names"),m=e("../../tensor_util_env"),f=e("../operation");function i(n,c,a,l=!0){const u=(0,m.convertToTensor)(n,"input","staticRegexReplace","string"),p={pattern:c,rewrite:a,replaceGlobal:l};return r.ENGINE.runKernel(d.StaticRegexReplace,{x:u},p)}const o=(0,f.op)({staticRegexReplace_:i})},{"../../engine":"eID09","../../kernel_names":"kYUMv","../../tensor_util_env":"1FegS","../operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ar0Uz:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Optimizer",()=>i);var r=e("../globals"),d=e("../gradients"),m=e("../ops/ops"),f=e("../serialization");class i extends f.Serializable{minimize(n,c=!1,a){const{value:l,grads:u}=this.computeGradients(n,a);if(a!=null){const p=a.map(h=>({name:h.name,tensor:u[h.name]}));this.applyGradients(p)}else this.applyGradients(u);return(0,r.dispose)(u),c?l:(l.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(n,c){return(0,d.variableGrads)(n,c)}dispose(){this.iterations_!=null&&(0,r.dispose)(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:(0,m.scalar)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(n){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(n){return this.iterations_=(await n[0].tensor.data())[0],n.slice(1)}}Object.defineProperty(i,Symbol.hasInstance,{value:o=>o.minimize!=null&&o.computeGradients!=null&&o.applyGradients!=null})},{"../globals":"3oVUX","../gradients":"dGO2J","../ops/ops":"iu1Y6","../serialization":"6K9Ec","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6K9Ec":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Serializable",()=>f),t.export(s,"SerializationMap",()=>i),t.export(s,"registerClass",()=>o),t.export(s,"getRegisteredName",()=>n);var r=e("./util");const d=new Map,m=new Map;class f{getClassName(){return this.constructor.className}static fromConfig(a,l){return new a(l)}}class i{constructor(){this.classNameMap={}}static getMap(){return i.instance==null&&(i.instance=new i),i.instance}static register(a){i.getMap().classNameMap[a.className]=[a,a.fromConfig]}}function o(c,a,l){(0,r.assert)(c.className!=null,()=>"Class being registered does not have the static className property defined."),(0,r.assert)(typeof c.className=="string",()=>"className is required to be a string, but got type "+typeof c.className),(0,r.assert)(c.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof a=="undefined"&&(a="Custom"),typeof l=="undefined"&&(l=c.className);const u=l,p=a+">"+u;return i.register(c),d.set(p,c),m.set(c,p),c}function n(c){return m.has(c)?m.get(c):c.className}},{"./util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],knoCw:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AdagradOptimizer",()=>l);var r=e("../engine"),d=e("../globals"),m=e("../ops/add"),f=e("../ops/div"),i=e("../ops/fill"),o=e("../ops/mul"),n=e("../ops/sqrt"),c=e("../ops/square"),a=e("./optimizer");class l extends a.Optimizer{static get className(){return"Adagrad"}constructor(p,h=.1){super();this.learningRate=p,this.initialAccumulatorValue=h,this.accumulatedGrads=[]}applyGradients(p){(Array.isArray(p)?p.map(g=>g.name):Object.keys(p)).forEach((g,v)=>{const _=r.ENGINE.registeredVariables[g];if(this.accumulatedGrads[v]==null){const x=!1;this.accumulatedGrads[v]={originalName:`${g}/accumulator`,variable:(0,d.tidy)(()=>(0,i.fill)(_.shape,this.initialAccumulatorValue).variable(x))}}const k=Array.isArray(p)?p[v].tensor:p[g];if(k==null)return;const y=this.accumulatedGrads[v].variable;(0,d.tidy)(()=>{const x=(0,m.add)(y,(0,c.square)(k));y.assign(x);const b=(0,m.add)((0,o.mul)((0,f.div)(k,(0,n.sqrt)((0,m.add)(x,r.ENGINE.backend.epsilon()))),-this.learningRate),_);_.assign(b)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&(0,d.dispose)(this.accumulatedGrads.map(p=>p.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(p=>({name:p.originalName,tensor:p.variable})))}async setWeights(p){p=await this.extractIterations(p);const h=!1;this.accumulatedGrads=p.map(g=>({originalName:g.name,variable:g.tensor.variable(h)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(p,h){return new p(h.learningRate,h.initialAccumulatorValue)}}},{"../engine":"eID09","../globals":"3oVUX","../ops/add":"2ocTD","../ops/div":"4BOnP","../ops/fill":"ckpag","../ops/mul":"kfDrf","../ops/sqrt":"VUCvx","../ops/square":"6AZak","./optimizer":"ar0Uz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iEGnS:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AdamOptimizer",()=>h);var r=e("../engine"),d=e("../globals"),m=e("../ops/add"),f=e("../ops/div"),i=e("../ops/mul"),o=e("../ops/pow"),n=e("../ops/scalar"),c=e("../ops/sqrt"),a=e("../ops/square"),l=e("../ops/sub"),u=e("../ops/zeros_like"),p=e("./optimizer");class h extends p.Optimizer{static get className(){return"Adam"}constructor(v,_,k,y=null){super();this.learningRate=v,this.beta1=_,this.beta2=k,this.epsilon=y,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,d.tidy)(()=>{this.accBeta1=(0,n.scalar)(_).variable(),this.accBeta2=(0,n.scalar)(k).variable()}),y==null&&(this.epsilon=r.ENGINE.backend.epsilon())}applyGradients(v){const _=Array.isArray(v)?v.map(k=>k.name):Object.keys(v);(0,d.tidy)(()=>{const k=(0,l.sub)(1,this.accBeta1),y=(0,l.sub)(1,this.accBeta2);_.forEach((x,b)=>{const C=r.ENGINE.registeredVariables[x],w=!1;this.accumulatedFirstMoment[b]==null&&(this.accumulatedFirstMoment[b]={originalName:`${x}/m`,variable:(0,d.tidy)(()=>(0,u.zerosLike)(C).variable(w))}),this.accumulatedSecondMoment[b]==null&&(this.accumulatedSecondMoment[b]={originalName:`${x}/v`,variable:(0,d.tidy)(()=>(0,u.zerosLike)(C).variable(w))});const N=Array.isArray(v)?v[b].tensor:v[x];if(N==null)return;const T=this.accumulatedFirstMoment[b].variable,F=this.accumulatedSecondMoment[b].variable,S=(0,m.add)((0,i.mul)(T,this.beta1),(0,i.mul)(N,1-this.beta1)),I=(0,m.add)((0,i.mul)(F,this.beta2),(0,i.mul)((0,a.square)(N),1-this.beta2)),j=(0,f.div)(S,k),D=(0,f.div)(I,y);T.assign(S),F.assign(I);const O=(0,m.add)((0,i.mul)((0,f.div)(j,(0,m.add)((0,c.sqrt)(D),this.epsilon)),-this.learningRate),C);C.assign(O)}),this.accBeta1.assign((0,i.mul)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,i.mul)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&(0,d.dispose)(this.accumulatedFirstMoment.map(v=>v.variable)),this.accumulatedSecondMoment!=null&&(0,d.dispose)(this.accumulatedSecondMoment.map(v=>v.variable))}async getWeights(){const v=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(v.map(_=>({name:_.originalName,tensor:_.variable})))}async setWeights(v){v=await this.extractIterations(v),(0,d.tidy)(()=>{this.accBeta1.assign((0,o.pow)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,o.pow)(this.beta2,this.iterations_+1))});const _=v.length/2,k=!1;this.accumulatedFirstMoment=v.slice(0,_).map(y=>({originalName:y.name,variable:y.tensor.variable(k)})),this.accumulatedSecondMoment=v.slice(_,_*2).map(y=>({originalName:y.name,variable:y.tensor.variable(k)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(v,_){return new v(_.learningRate,_.beta1,_.beta2,_.epsilon)}}},{"../engine":"eID09","../globals":"3oVUX","../ops/add":"2ocTD","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/pow":"hg0HR","../ops/scalar":"1SA7b","../ops/sqrt":"VUCvx","../ops/square":"6AZak","../ops/sub":"ihs7S","../ops/zeros_like":"0HiLr","./optimizer":"ar0Uz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dFQur:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AdamaxOptimizer",()=>p);var r=e("../engine"),d=e("../globals"),m=e("../ops/abs"),f=e("../ops/add"),i=e("../ops/div"),o=e("../ops/maximum"),n=e("../ops/mul"),c=e("../ops/scalar"),a=e("../ops/sub"),l=e("../ops/zeros_like"),u=e("./optimizer");class p extends u.Optimizer{static get className(){return"Adamax"}constructor(g,v,_,k=null,y=0){super();this.learningRate=g,this.beta1=v,this.beta2=_,this.epsilon=k,this.decay=y,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,d.tidy)(()=>{this.iteration=(0,c.scalar)(0).variable(),this.accBeta1=(0,c.scalar)(v).variable()}),k==null&&(this.epsilon=r.ENGINE.backend.epsilon())}applyGradients(g){const v=Array.isArray(g)?g.map(_=>_.name):Object.keys(g);(0,d.tidy)(()=>{const _=(0,a.sub)(1,this.accBeta1),k=(0,i.div)(-this.learningRate,(0,f.add)((0,n.mul)(this.iteration,this.decay),1));v.forEach((y,x)=>{const b=r.ENGINE.registeredVariables[y],C=!1;this.accumulatedFirstMoment[x]==null&&(this.accumulatedFirstMoment[x]={originalName:`${y}/m`,variable:(0,l.zerosLike)(b).variable(C)}),this.accumulatedWeightedInfNorm[x]==null&&(this.accumulatedWeightedInfNorm[x]={originalName:`${y}/v`,variable:(0,l.zerosLike)(b).variable(C)});const w=Array.isArray(g)?g[x].tensor:g[y];if(w==null)return;const N=this.accumulatedFirstMoment[x].variable,T=this.accumulatedWeightedInfNorm[x].variable,F=(0,f.add)((0,n.mul)(N,this.beta1),(0,n.mul)(w,1-this.beta1)),S=(0,n.mul)(T,this.beta2),I=(0,m.abs)(w),j=(0,o.maximum)(S,I);N.assign(F),T.assign(j);const D=(0,f.add)((0,n.mul)((0,i.div)(k,_),(0,i.div)(F,(0,f.add)(j,this.epsilon))),b);b.assign(D)}),this.iteration.assign((0,f.add)(this.iteration,1)),this.accBeta1.assign((0,n.mul)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&(0,d.dispose)(this.accumulatedFirstMoment.map(g=>g.variable)),this.accumulatedWeightedInfNorm!=null&&(0,d.dispose)(this.accumulatedWeightedInfNorm.map(g=>g.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(g){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(g,v){return new g(v.learningRate,v.beta1,v.beta2,v.epsilon,v.decay)}}},{"../engine":"eID09","../globals":"3oVUX","../ops/abs":"2yA8M","../ops/add":"2ocTD","../ops/div":"4BOnP","../ops/maximum":"fTDK0","../ops/mul":"kfDrf","../ops/scalar":"1SA7b","../ops/sub":"ihs7S","../ops/zeros_like":"0HiLr","./optimizer":"ar0Uz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],PTiwT:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MomentumOptimizer",()=>c);var r=e("../engine"),d=e("../globals"),m=e("../ops/add"),f=e("../ops/mul"),i=e("../ops/scalar"),o=e("../ops/zeros_like"),n=e("./sgd_optimizer");class c extends n.SGDOptimizer{static get className(){return"Momentum"}constructor(l,u,p=!1){super(l);this.learningRate=l,this.momentum=u,this.useNesterov=p,this.accumulations=[],this.m=(0,i.scalar)(this.momentum)}applyGradients(l){(Array.isArray(l)?l.map(p=>p.name):Object.keys(l)).forEach((p,h)=>{const g=r.ENGINE.registeredVariables[p];if(this.accumulations[h]==null){const k=!1;this.accumulations[h]={originalName:`${p}/momentum`,variable:(0,d.tidy)(()=>(0,o.zerosLike)(g).variable(k))}}const v=this.accumulations[h].variable,_=Array.isArray(l)?l[h].tensor:l[p];_!=null&&(0,d.tidy)(()=>{let k;const y=(0,m.add)((0,f.mul)(this.m,v),_);this.useNesterov?k=(0,m.add)((0,f.mul)(this.c,(0,m.add)(_,(0,f.mul)(y,this.m))),g):k=(0,m.add)((0,f.mul)(this.c,y),g),v.assign(y),g.assign(k)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&(0,d.dispose)(this.accumulations.map(l=>l.variable))}setMomentum(l){this.momentum=l}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(l=>({name:l.originalName,tensor:l.variable})))}async setWeights(l){l=await this.extractIterations(l);const u=!1;this.accumulations=l.map(p=>({originalName:p.name,variable:p.tensor.variable(u)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(l,u){return new l(u.learningRate,u.momentum,u.useNesterov)}}},{"../engine":"eID09","../globals":"3oVUX","../ops/add":"2ocTD","../ops/mul":"kfDrf","../ops/scalar":"1SA7b","../ops/zeros_like":"0HiLr","./sgd_optimizer":"2g2Lt","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2g2Lt":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"SGDOptimizer",()=>n);var r=e("../engine"),d=e("../globals"),m=e("../ops/add"),f=e("../ops/mul"),i=e("../ops/scalar"),o=e("./optimizer");class n extends o.Optimizer{static get className(){return"SGD"}constructor(a){super();this.learningRate=a,this.setLearningRate(a)}applyGradients(a){(Array.isArray(a)?a.map(u=>u.name):Object.keys(a)).forEach((u,p)=>{const h=Array.isArray(a)?a[p].tensor:a[u];if(h==null)return;const g=r.ENGINE.registeredVariables[u];(0,d.tidy)(()=>{const v=(0,m.add)((0,f.mul)(this.c,h),g);g.assign(v)})}),this.incrementIterations()}setLearningRate(a){this.learningRate=a,this.c!=null&&this.c.dispose(),this.c=(0,d.keep)((0,i.scalar)(-a))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(a){if(a=await this.extractIterations(a),a.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(a,l){return new a(l.learningRate)}}},{"../engine":"eID09","../globals":"3oVUX","../ops/add":"2ocTD","../ops/mul":"kfDrf","../ops/scalar":"1SA7b","./optimizer":"ar0Uz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eCBOJ:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"RMSPropOptimizer",()=>u);var r=e("../engine"),d=e("../globals"),m=e("../ops/add"),f=e("../ops/div"),i=e("../ops/mul"),o=e("../ops/sqrt"),n=e("../ops/square"),c=e("../ops/sub"),a=e("../ops/zeros_like"),l=e("./optimizer");class u extends l.Optimizer{static get className(){return"RMSProp"}constructor(h,g=.9,v=0,_=null,k=!1){super();if(this.learningRate=h,this.decay=g,this.momentum=v,this.epsilon=_,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=k,_==null&&(this.epsilon=r.ENGINE.backend.epsilon()),h==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(h){(Array.isArray(h)?h.map(v=>v.name):Object.keys(h)).forEach((v,_)=>{const k=r.ENGINE.registeredVariables[v],y=!1;this.accumulatedMeanSquares[_]==null&&(this.accumulatedMeanSquares[_]={originalName:`${v}/rms`,variable:(0,d.tidy)(()=>(0,a.zerosLike)(k).variable(y))}),this.accumulatedMoments[_]==null&&(this.accumulatedMoments[_]={originalName:`${v}/momentum`,variable:(0,d.tidy)(()=>(0,a.zerosLike)(k).variable(y))}),this.accumulatedMeanGrads[_]==null&&this.centered&&(this.accumulatedMeanGrads[_]={originalName:`${v}/mg`,variable:(0,d.tidy)(()=>(0,a.zerosLike)(k).variable(y))});const x=Array.isArray(h)?h[_].tensor:h[v];if(x==null)return;const b=this.accumulatedMeanSquares[_].variable,C=this.accumulatedMoments[_].variable;(0,d.tidy)(()=>{const w=(0,m.add)((0,i.mul)(b,this.decay),(0,i.mul)((0,n.square)(x),1-this.decay));if(this.centered){const N=this.accumulatedMeanGrads[_].variable,T=(0,m.add)((0,i.mul)(N,this.decay),(0,i.mul)(x,1-this.decay)),F=(0,f.div)((0,i.mul)(x,this.learningRate),(0,o.sqrt)((0,c.sub)(w,(0,m.add)((0,n.square)(T),this.epsilon)))),S=(0,m.add)((0,i.mul)(C,this.momentum),F);b.assign(w),N.assign(T),C.assign(S);const I=(0,c.sub)(k,S);k.assign(I)}else{const N=(0,m.add)((0,i.mul)(b,this.decay),(0,i.mul)((0,n.square)(x),1-this.decay)),T=(0,m.add)((0,i.mul)(C,this.momentum),(0,f.div)((0,i.mul)(x,this.learningRate),(0,o.sqrt)((0,m.add)(N,this.epsilon))));b.assign(N),C.assign(T);const F=(0,c.sub)(k,T);k.assign(F)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&(0,d.dispose)(this.accumulatedMeanSquares.map(h=>h.variable)),this.accumulatedMeanGrads!=null&&this.centered&&(0,d.dispose)(this.accumulatedMeanGrads.map(h=>h.variable)),this.accumulatedMoments!=null&&(0,d.dispose)(this.accumulatedMoments.map(h=>h.variable))}async getWeights(){const h=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&h.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(h.map(g=>({name:g.originalName,tensor:g.variable})))}async setWeights(h){h=await this.extractIterations(h);const g=this.centered?h.length/3:h.length/2,v=!1;this.accumulatedMeanSquares=h.slice(0,g).map(_=>({originalName:_.name,variable:_.tensor.variable(v)})),this.accumulatedMoments=h.slice(g,g*2).map(_=>({originalName:_.name,variable:_.tensor.variable(v)})),this.centered&&(this.accumulatedMeanGrads=h.slice(g*2,g*3).map(_=>({originalName:_.name,variable:_.tensor.variable(v)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(h,g){return new h(g.learningRate,g.decay,g.momentum,g.epsilon,g.centered)}}},{"../engine":"eID09","../globals":"3oVUX","../ops/add":"2ocTD","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/sqrt":"VUCvx","../ops/square":"6AZak","../ops/sub":"ihs7S","../ops/zeros_like":"0HiLr","./optimizer":"ar0Uz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],apsUi:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AdadeltaOptimizer",()=>h.AdadeltaOptimizer),t.export(s,"AdagradOptimizer",()=>g.AdagradOptimizer),t.export(s,"AdamOptimizer",()=>v.AdamOptimizer),t.export(s,"AdamaxOptimizer",()=>_.AdamaxOptimizer),t.export(s,"MomentumOptimizer",()=>k.MomentumOptimizer),t.export(s,"Optimizer",()=>y.Optimizer),t.export(s,"OptimizerConstructors",()=>x.OptimizerConstructors),t.export(s,"RMSPropOptimizer",()=>b.RMSPropOptimizer),t.export(s,"SGDOptimizer",()=>C.SGDOptimizer),t.export(s,"Tensor",()=>w.Tensor),t.export(s,"TensorBuffer",()=>w.TensorBuffer),t.export(s,"Variable",()=>w.Variable),t.export(s,"Rank",()=>N.Rank),t.export(s,"sumOutType",()=>N.sumOutType),t.export(s,"upcastType",()=>N.upcastType),t.export(s,"Reduction",()=>F.Reduction),t.export(s,"customGrad",()=>D.customGrad),t.export(s,"grad",()=>D.grad),t.export(s,"grads",()=>D.grads),t.export(s,"valueAndGrad",()=>D.valueAndGrad),t.export(s,"valueAndGrads",()=>D.valueAndGrads),t.export(s,"variableGrads",()=>D.variableGrads),t.export(s,"Environment",()=>O.Environment),t.export(s,"env",()=>O.env),t.export(s,"ENV",()=>O.ENV),t.export(s,"nextFrame",()=>$.nextFrame),t.export(s,"KernelBackend",()=>z.KernelBackend),t.export(s,"DataStorage",()=>z.DataStorage),t.export(s,"version_core",()=>p.version),t.export(s,"browser",()=>f),t.export(s,"io",()=>r),t.export(s,"math",()=>d),t.export(s,"serialization",()=>c),t.export(s,"test_util",()=>l),t.export(s,"util",()=>u),t.export(s,"backend_util",()=>P),t.export(s,"broadcast_util",()=>m),t.export(s,"tensor_util",()=>a),t.export(s,"slice_util",()=>n),t.export(s,"gather_util",()=>i),t.export(s,"scatter_util",()=>o),t.export(s,"device_util",()=>R),t.export(s,"kernel_impls",()=>A);var r=e("./io/io"),d=e("./math"),m=e("./ops/broadcast_util"),f=e("./ops/browser"),i=e("./ops/gather_nd_util"),o=e("./ops/scatter_nd_util"),n=e("./ops/slice_util"),c=e("./serialization"),a=e("./tensor_util"),l=e("./test_util"),u=e("./util"),p=e("./version"),h=e("./optimizers/adadelta_optimizer"),g=e("./optimizers/adagrad_optimizer"),v=e("./optimizers/adam_optimizer"),_=e("./optimizers/adamax_optimizer"),k=e("./optimizers/momentum_optimizer"),y=e("./optimizers/optimizer"),x=e("./optimizers/optimizer_constructors"),b=e("./optimizers/rmsprop_optimizer"),C=e("./optimizers/sgd_optimizer"),w=e("./tensor"),N=e("./types"),T=e("./ops/ops");t.exportAll(T,s);var F=e("./ops/loss_ops_utils"),S=e("./train");t.exportAll(S,s);var I=e("./globals");t.exportAll(I,s);var j=e("./kernel_registry");t.exportAll(j,s);var D=e("./gradients"),O=e("./environment"),$=e("./browser_util"),P=e("./backends/backend_util"),R=e("./device_util"),A=e("./backends/kernel_impls"),z=e("./backends/backend"),G=e("./kernel_names");t.exportAll(G,s)},{"./io/io":"eR1gc","./math":"hFmCM","./ops/broadcast_util":"lfnGK","./ops/browser":"lW1iE","./ops/gather_nd_util":"4J1P2","./ops/scatter_nd_util":"eqT3b","./ops/slice_util":"j7Apq","./serialization":"6K9Ec","./tensor_util":"gj10y","./test_util":"j7rFu","./util":"hQeVi","./version":"7bPiH","./optimizers/adadelta_optimizer":"jueNe","./optimizers/adagrad_optimizer":"knoCw","./optimizers/adam_optimizer":"iEGnS","./optimizers/adamax_optimizer":"dFQur","./optimizers/momentum_optimizer":"PTiwT","./optimizers/optimizer":"ar0Uz","./optimizers/optimizer_constructors":"e9trF","./optimizers/rmsprop_optimizer":"eCBOJ","./optimizers/sgd_optimizer":"2g2Lt","./tensor":"hRGZH","./types":"cjn0s","./ops/ops":"iu1Y6","./ops/loss_ops_utils":"3908k","./train":"7XJ9c","./globals":"3oVUX","./kernel_registry":"9w40T","./gradients":"dGO2J","./environment":"7s0uC","./browser_util":"6LJNB","./backends/backend_util":"bIRcy","./device_util":"gJmrq","./backends/kernel_impls":"kmpkh","./backends/backend":"gVYLh","./kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eR1gc:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"copyModel",()=>l.copyModel),t.export(s,"listModels",()=>l.listModels),t.export(s,"moveModel",()=>l.moveModel),t.export(s,"removeModel",()=>l.removeModel),t.export(s,"browserFiles",()=>m.browserFiles),t.export(s,"browserHTTPRequest",()=>f.browserHTTPRequest),t.export(s,"CompositeArrayBuffer",()=>a.CompositeArrayBuffer),t.export(s,"concatenateArrayBuffers",()=>i.concatenateArrayBuffers),t.export(s,"decodeWeights",()=>i.decodeWeights),t.export(s,"encodeWeights",()=>i.encodeWeights),t.export(s,"fromMemory",()=>o.fromMemory),t.export(s,"fromMemorySync",()=>o.fromMemorySync),t.export(s,"getLoadHandlers",()=>n.getLoadHandlers),t.export(s,"getModelArtifactsForJSON",()=>i.getModelArtifactsForJSON),t.export(s,"getModelArtifactsForJSONSync",()=>i.getModelArtifactsForJSONSync),t.export(s,"getModelArtifactsInfoForJSON",()=>i.getModelArtifactsInfoForJSON),t.export(s,"getSaveHandlers",()=>n.getSaveHandlers),t.export(s,"getWeightSpecs",()=>i.getWeightSpecs),t.export(s,"http",()=>f.http),t.export(s,"isHTTPScheme",()=>f.isHTTPScheme),t.export(s,"loadWeights",()=>c.loadWeights),t.export(s,"registerLoadRouter",()=>n.registerLoadRouter),t.export(s,"registerSaveRouter",()=>n.registerSaveRouter),t.export(s,"weightsLoaderFactory",()=>c.weightsLoaderFactory),t.export(s,"withSaveHandler",()=>o.withSaveHandler),t.export(s,"withSaveHandlerSync",()=>o.withSaveHandlerSync);var r=e("./indexed_db"),d=e("./local_storage"),m=e("./browser_files"),f=e("./http"),i=e("./io_utils"),o=e("./passthrough"),n=e("./router_registry"),c=e("./weights_loader"),a=e("./composite_array_buffer"),l=e("./model_management")},{"./indexed_db":"c5i6C","./local_storage":"b3sM1","./browser_files":"5MHqs","./http":"9SOSq","./io_utils":"7CjsN","./passthrough":"4V3ry","./router_registry":"84W52","./weights_loader":"3Snmj","./composite_array_buffer":"6z3FM","./model_management":"5516O","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5MHqs":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"BrowserDownloads",()=>l),t.export(s,"browserDownloadsRouter",()=>p),t.export(s,"browserDownloads",()=>h),t.export(s,"browserFiles",()=>g);var r=e("../flags"),d=e("../environment"),m=e("./io_utils"),f=e("./router_registry"),i=e("./composite_array_buffer");const o="model",n=".json",c=".weights.bin";function a(v){return new Promise(_=>setTimeout(_)).then(v)}class l{constructor(_){if(!(0,d.env)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");_.startsWith(l.URL_SCHEME)&&(_=_.slice(l.URL_SCHEME.length)),(_==null||_.length===0)&&(_=o),this.modelJsonFileName=_+n,this.weightDataFileName=_+c}async save(_){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const k=i.CompositeArrayBuffer.join(_.weightData),y=window.URL.createObjectURL(new Blob([k],{type:"application/octet-stream"}));if(_.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const x=[{paths:["./"+this.weightDataFileName],weights:_.weightSpecs}],b=(0,m.getModelJSONForModelArtifacts)(_,x),C=window.URL.createObjectURL(new Blob([JSON.stringify(b)],{type:"application/json"})),w=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(w.download=this.modelJsonFileName,w.href=C,await a(()=>w.dispatchEvent(new MouseEvent("click"))),_.weightData!=null){const N=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;N.download=this.weightDataFileName,N.href=y,await a(()=>N.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,m.getModelArtifactsInfoForJSON)(_)}}}}l.URL_SCHEME="downloads://";class u{constructor(_){if(_==null||_.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${_}`);this.jsonFile=_[0],this.weightsFiles=_.slice(1)}async load(){return new Promise((_,k)=>{const y=new FileReader;y.onload=x=>{const b=JSON.parse(x.target.result),C=b.modelTopology;if(C==null){k(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(b.weightsManifest==null){k(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){_({modelTopology:C});return}const N=(0,m.getModelArtifactsForJSON)(b,T=>this.loadWeights(T));_(N)},y.onerror=x=>k(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),y.readAsText(this.jsonFile)})}loadWeights(_){const k=[],y=[];for(const C of _)k.push(...C.weights),y.push(...C.paths);const x=this.checkManifestAndWeightFiles(_),b=y.map(C=>this.loadWeightsFile(C,x[C]));return Promise.all(b).then(C=>[k,C])}loadWeightsFile(_,k){return new Promise((y,x)=>{const b=new FileReader;b.onload=C=>{const w=C.target.result;y(w)},b.onerror=C=>x(`Failed to weights data from file of path '${_}'.`),b.readAsArrayBuffer(k)})}checkManifestAndWeightFiles(_){const k=[],y=this.weightsFiles.map(b=>(0,m.basename)(b.name)),x={};for(const b of _)b.paths.forEach(C=>{const w=(0,m.basename)(C);if(k.indexOf(w)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${w}'`);if(k.push(w),y.indexOf(w)===-1)throw new Error(`Weight file with basename '${w}' is not provided.`);x[C]=this.weightsFiles[y.indexOf(w)]});if(k.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${k.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return x}}const p=v=>(0,d.env)().getBool("IS_BROWSER")&&!Array.isArray(v)&&v.startsWith(l.URL_SCHEME)?h(v.slice(l.URL_SCHEME.length)):null;f.IORouterRegistry.registerSaveRouter(p);function h(v="model"){return new l(v)}function g(v){return new u(v)}},{"../flags":"1dH0L","../environment":"7s0uC","./io_utils":"7CjsN","./router_registry":"84W52","./composite_array_buffer":"6z3FM","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9SOSq":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"HTTPRequest",()=>a),t.export(s,"parseUrl",()=>l),t.export(s,"isHTTPScheme",()=>u),t.export(s,"httpRouter",()=>p),t.export(s,"http",()=>h),t.export(s,"browserHTTPRequest",()=>g);var r=e("../environment"),d=e("../util"),m=e("./io_utils"),f=e("./composite_array_buffer"),i=e("./router_registry"),o=e("./weights_loader");const n="application/octet-stream",c="application/json";class a{constructor(_,k){if(this.DEFAULT_METHOD="POST",k==null&&(k={}),this.weightPathPrefix=k.weightPathPrefix,this.onProgress=k.onProgress,this.weightUrlConverter=k.weightUrlConverter,k.fetchFunc!=null?((0,d.assert)(typeof k.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=k.fetchFunc):this.fetch=(0,r.env)().platform.fetch,(0,d.assert)(_!=null&&_.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(_)&&(0,d.assert)(_.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${_.length}).`),this.path=_,k.requestInit!=null&&k.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=k.requestInit||{}}async save(_){if(_.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const k=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);k.body=new FormData;const y=[{paths:["./model.weights.bin"],weights:_.weightSpecs}],x=(0,m.getModelJSONForModelArtifacts)(_,y);if(k.body.append("model.json",new Blob([JSON.stringify(x)],{type:c}),"model.json"),_.weightData!=null){const C=f.CompositeArrayBuffer.join(_.weightData);k.body.append("model.weights.bin",new Blob([C],{type:n}),"model.weights.bin")}const b=await this.fetch(this.path,k);if(b.ok)return{modelArtifactsInfo:(0,m.getModelArtifactsInfoForJSON)(_),responses:[b]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${b.status}.`)}async load(){const _=await this.fetch(this.path,this.requestInit);if(!_.ok)throw new Error(`Request to ${this.path} failed with status code ${_.status}. Please verify this URL points to the model JSON of the model to load.`);let k;try{k=await _.json()}catch{let C=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?C+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":C+=" Please make sure the server is serving valid JSON for this request.",new Error(C)}const y=k.modelTopology,x=k.weightsManifest;if(y==null&&x==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return(0,m.getModelArtifactsForJSON)(k,b=>this.loadWeights(b))}async loadWeights(_){const k=Array.isArray(this.path)?this.path[1]:this.path,[y,x]=l(k),b=this.weightPathPrefix||y,C=(0,m.getWeightSpecs)(_),w=[],N=[];for(const F of _)for(const S of F.paths)this.weightUrlConverter!=null?N.push(this.weightUrlConverter(S)):w.push(b+S+x);this.weightUrlConverter&&w.push(...await Promise.all(N));const T=await(0,o.loadWeightsAsArrayBuffer)(w,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[C,T]}}a.URL_SCHEME_REGEX=/^https?:\/\//;function l(v){const _=v.lastIndexOf("/"),k=v.lastIndexOf("?"),y=v.substring(0,_),x=k>_?v.substring(k):"";return[y+"/",x]}function u(v){return v.match(a.URL_SCHEME_REGEX)!=null}const p=(v,_)=>{if(typeof fetch=="undefined"&&(_==null||_.fetchFunc==null))return null;{let k=!0;if(Array.isArray(v)?k=v.every(y=>u(y)):k=u(v),k)return h(v,_)}return null};i.IORouterRegistry.registerSaveRouter(p),i.IORouterRegistry.registerLoadRouter(p);function h(v,_){return new a(v,_)}function g(v,_){return h(v,_)}},{"../environment":"7s0uC","../util":"hQeVi","./io_utils":"7CjsN","./composite_array_buffer":"6z3FM","./router_registry":"84W52","./weights_loader":"3Snmj","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3Snmj":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"loadWeightsAsArrayBuffer",()=>n),t.export(s,"loadWeights",()=>c),t.export(s,"weightsLoaderFactory",()=>a);var r=e("../environment"),d=e("../util"),m=e("./composite_array_buffer"),f=e("./io_utils"),i=e("./progress"),o=e("./types");async function n(l,u){u==null&&(u={});const p=u.fetchFunc==null?(0,r.env)().platform.fetch:u.fetchFunc,h=l.map(C=>p(C,u.requestInit,{isBinary:!0})),g=0,v=.5,k=(u.onProgress==null?await Promise.all(h):await(0,i.monitorPromisesProgress)(h,u.onProgress,g,v)).map(C=>C.arrayBuffer()),y=.5,x=1;return u.onProgress==null?await Promise.all(k):await(0,i.monitorPromisesProgress)(k,u.onProgress,y,x)}async function c(l,u="",p,h){return a(_=>n(_,{requestInit:h}))(l,u,p)}function a(l){return async(u,p="",h)=>{const g=u.map(()=>!1),v={},_=h!=null?h.map(()=>!1):[],k=[];if(u.forEach((N,T)=>{let F=0;N.weights.forEach(S=>{const I="quantization"in S?S.quantization.dtype:S.dtype,j=o.DTYPE_VALUE_SIZE_MAP[I]*d.sizeFromShape(S.shape),D=()=>{g[T]=!0,v[T]==null&&(v[T]=[]),v[T].push({manifestEntry:S,groupOffset:F,sizeBytes:j})};h!=null?h.forEach((O,$)=>{O===S.name&&(D(),_[$]=!0)}):D(),k.push(S.name),F+=j})}),!_.every(N=>N)){const N=h.filter((T,F)=>!_[F]);throw new Error(`Could not find weights in manifest with names: ${N.join(", ")}. 
Manifest JSON has weights with names: ${k.join(", ")}.`)}const y=g.reduce((N,T,F)=>(T&&N.push(F),N),[]),x=[];y.forEach(N=>{u[N].paths.forEach(T=>{const F=p+(p.endsWith("/")?"":"/")+T;x.push(F)})});const b=await l(x),C={};let w=0;return y.forEach(N=>{const T=u[N].paths.length,F=new m.CompositeArrayBuffer(b.slice(w,w+T));v[N].forEach(I=>{const j=F.slice(I.groupOffset,I.groupOffset+I.sizeBytes),D=(0,f.decodeWeights)(j,[I.manifestEntry]);for(const O in D)C[O]=D[O]}),w+=T}),C}}},{"../environment":"7s0uC","../util":"hQeVi","./composite_array_buffer":"6z3FM","./io_utils":"7CjsN","./progress":"lnM1v","./types":"cefnM","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lnM1v:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"monitorPromisesProgress",()=>d);var r=e("../util");function d(m,f,i,o){a(m),i=i??0,o=o??1,l(i,o);let n=0;const c=u=>(u.then(p=>{const h=i+ ++n/m.length*(o-i);return f(h),p}),u);function a(u){(0,r.assert)(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function l(u,p){(0,r.assert)(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),(0,r.assert)(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${p}`),(0,r.assert)(p>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${p}`)}return Promise.all(m.map(c))}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4V3ry":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fromMemory",()=>f),t.export(s,"fromMemorySync",()=>i),t.export(s,"withSaveHandler",()=>o),t.export(s,"withSaveHandlerSync",()=>n);class r{constructor(a){this.modelArtifacts=a}load(){return this.modelArtifacts}}class d{constructor(a){this.saveHandler=a}save(a){return this.saveHandler(a)}}class m{constructor(a){a.load&&(this.load=()=>Promise.resolve(a.load())),a.save&&(this.save=l=>Promise.resolve(a.save(l)))}}function f(c,a,l,u){const p=arguments;return new m(i(...p))}function i(c,a,l,u){return arguments.length===1?c.modelTopology!=null||c.weightSpecs!=null?new r(c):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new r({modelTopology:c})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new r({modelTopology:c,weightSpecs:a,weightData:l,trainingConfig:u}))}function o(c){return new d(c)}function n(c){return new d(c)}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hFmCM:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"confusionMatrix",()=>r.confusionMatrix);var r=e("./ops/confusion_matrix")},{"./ops/confusion_matrix":"lhgvU","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lhgvU:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"confusionMatrix_",()=>c),t.export(s,"confusionMatrix",()=>a);var r=e("../tensor_util_env"),d=e("../util"),m=e("./cast"),f=e("./mat_mul"),i=e("./one_hot"),o=e("./operation"),n=e("./transpose");function c(l,u,p){const h=(0,r.convertToTensor)(l,"labels","confusionMatrix"),g=(0,r.convertToTensor)(u,"predictions","confusionMatrix");d.assert(p==null||p>0&&Number.isInteger(p),()=>`If provided, numClasses must be a positive integer, but got ${p}`),d.assert(h.rank===1,()=>`Expected the rank of labels to be 1, but got ${h.rank}`),d.assert(g.rank===1,()=>`Expected the rank of predictions to be 1, but got ${g.rank}`),d.assert(h.shape[0]===g.shape[0],()=>`Mismatch in the number of examples: ${h.shape[0]} vs. ${g.shape[0]}. Labels and predictions should have the same number of elements.`),d.assert(p>0&&Number.isInteger(p),()=>`numClasses is required to be a positive integer, but got ${p}`);const v=(0,i.oneHot)((0,m.cast)(h,"int32"),p),_=(0,i.oneHot)((0,m.cast)(g,"int32"),p),k=(0,n.transpose)(v),y=(0,f.matMul)(k,_);return(0,m.cast)(y,"int32")}const a=(0,o.op)({confusionMatrix_:c})},{"../tensor_util_env":"1FegS","../util":"hQeVi","./cast":"eaOhx","./mat_mul":"2iQjP","./one_hot":"bHJCu","./operation":"5CKbF","./transpose":"iN8Um","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lW1iE:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fromPixelsAsync",()=>k),t.export(s,"toPixels",()=>b),t.export(s,"draw",()=>C),t.export(s,"fromPixels",()=>w);var r=e("../engine"),d=e("../environment"),m=e("../kernel_names"),f=e("../kernel_registry"),i=e("../tensor"),o=e("../tensor_util_env"),n=e("./cast"),c=e("./operation"),a=e("./tensor3d");let l,u=!1;function p(N,T=3){if(T>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(N==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let F=!1,S=!1,I=!1,j=!1,D=!1,O=!1;if(N.data instanceof Uint8Array)F=!0;else if(typeof ImageData!="undefined"&&N instanceof ImageData)S=!0;else if(typeof HTMLVideoElement!="undefined"&&N instanceof HTMLVideoElement)I=!0;else if(typeof HTMLImageElement!="undefined"&&N instanceof HTMLImageElement)j=!0;else if(N.getContext!=null)D=!0;else if(typeof ImageBitmap!="undefined"&&N instanceof ImageBitmap)O=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${N.constructor.name}`);if((0,f.getKernel)(m.FromPixels,r.ENGINE.backendName)!=null){const L={pixels:N},M={numChannels:T};return r.ENGINE.runKernel(m.FromPixels,L,M)}const[P,R]=I?[N.videoWidth,N.videoHeight]:[N.width,N.height];let A;if(D)A=N.getContext("2d").getImageData(0,0,P,R).data;else if(S||F)A=N.data;else if(j||I||O){if(l==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")l=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else l=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});l.canvas.width=P,l.canvas.height=R,l.drawImage(N,0,0,P,R),A=l.getImageData(0,0,P,R).data}let z;if(T===4)z=new Int32Array(A);else{const L=P*R;z=new Int32Array(L*T);for(let M=0;M<L;M++)for(let V=0;V<T;++V)z[M*T+V]=A[M*4+V]}const G=[R,P,T];return(0,a.tensor3d)(z,G,"int32")}function h(N){return N!=null&&N.data instanceof Uint8Array}function g(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function v(N){return N!=null&&N.width!==0&&N.height!==0}function _(N){return g()&&!(N instanceof ImageBitmap)&&v(N)&&!h(N)}async function k(N,T=3){let F=null;if((0,d.env)().getBool("WRAP_TO_IMAGEBITMAP")&&_(N)){let S;try{S=await createImageBitmap(N,{premultiplyAlpha:"none"})}catch{S=null}S!=null&&S.width===N.width&&S.height===N.height?F=S:F=N}else F=N;return p(F,T)}function y(N){if(N.rank!==2&&N.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${N.rank}.`);const T=N.rank===2?1:N.shape[2];if(T>4||T===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${T}`);if(N.dtype!=="float32"&&N.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${N.dtype}. Please use float32 or int32 tensors.`)}function x(N){const T=(N==null?void 0:N.alpha)||1;if(T>1||T<0)throw new Error(`Alpha value ${T} is suppoed to be in range [0 - 1].`)}async function b(N,T){let F=(0,o.convertToTensor)(N,"img","toPixels");if(!(N instanceof i.Tensor)){const P=F;F=(0,n.cast)(P,"int32"),P.dispose()}y(F);const[S,I]=F.shape.slice(0,2),j=F.rank===2?1:F.shape[2],D=await F.data(),O=F.dtype==="float32"?255:1,$=new Uint8ClampedArray(I*S*4);for(let P=0;P<S*I;++P){const R=[0,0,0,255];for(let z=0;z<j;z++){const G=D[P*j+z];if(F.dtype==="float32"){if(G<0||G>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${G}.`)}else if(F.dtype==="int32"&&(G<0||G>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${G}.`);j===1?(R[0]=G*O,R[1]=G*O,R[2]=G*O):R[z]=G*O}const A=P*4;$[A+0]=Math.round(R[0]),$[A+1]=Math.round(R[1]),$[A+2]=Math.round(R[2]),$[A+3]=Math.round(R[3])}if(T!=null){u||(0,f.getKernel)(m.Draw,r.ENGINE.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),u=!0),T.width=I,T.height=S;const P=T.getContext("2d"),R=new ImageData($,I,S);P.putImageData(R,0,0)}return F!==N&&F.dispose(),$}function C(N,T,F){let S=(0,o.convertToTensor)(N,"img","draw");if(!(N instanceof i.Tensor)){const D=S;S=(0,n.cast)(D,"int32"),D.dispose()}y(S),x(F==null?void 0:F.imageOptions);const I={image:S},j={canvas:T,options:F};r.ENGINE.runKernel(m.Draw,I,j)}const w=(0,c.op)({fromPixels_:p})},{"../engine":"eID09","../environment":"7s0uC","../kernel_names":"kYUMv","../kernel_registry":"9w40T","../tensor":"hRGZH","../tensor_util_env":"1FegS","./cast":"eaOhx","./operation":"5CKbF","./tensor3d":"95xiR","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4J1P2":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"prepareAndValidate",()=>d);var r=e("../util");function d(m,f){const i=m.shape.length,o=f.shape.length;if(i<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${i}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(f.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${f.dtype}.`);if(f.shape[o-1]>i)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${f.shape[o-1]} vs. ${i}`);if((0,r.sizeFromShape)(m.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${m.shape}.`);const n=f.shape,c=n[n.length-1];let a=1;for(let g=0;g<n.length-1;++g)a*=n[g];const l=m.shape,u=n.slice();u.pop();let p=1;for(let g=c;g<i;++g)p*=l[g],u.push(l[g]);const h=[...(0,r.computeStrides)(m.shape).map(g=>g/p),1].slice(0,c);return[u,a,p,h]}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],j7Apq:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"assertParamsValid",()=>f),t.export(s,"maskToAxes",()=>i),t.export(s,"computeOutShape",()=>o),t.export(s,"stridesWithElidedDims",()=>n),t.export(s,"getNormalizedAxes",()=>l),t.export(s,"startIndicesWithElidedDims",()=>u),t.export(s,"stopIndicesWithElidedDims",()=>p),t.export(s,"stridesForAxis",()=>h),t.export(s,"startForAxis",()=>g),t.export(s,"stopForAxis",()=>v),t.export(s,"isSliceContinous",()=>_),t.export(s,"computeFlatOffset",()=>k),t.export(s,"parseSliceParams",()=>y),t.export(s,"sliceInfo",()=>x);var r=e("../util");const d=-2,m=-1;function f(w,N,T){const F=w.shape.length;r.assert(F===N.length,()=>`Error in slice${F}D: Length of begin ${N} must match the rank of the array (${F}).`),r.assert(F===T.length,()=>`Error in slice${F}D: Length of size ${T} must match the rank of the array (${F}).`);for(let S=0;S<F;++S)r.assert(N[S]+T[S]<=w.shape[S],()=>`Error in slice${F}D: begin[${S}] + size[${S}] (${N[S]+T[S]}) would overflow input.shape[${S}] (${w.shape[S]})`)}function i(w){const N=[];let T=0;for(;w>0;)w&1&&N.push(T),w/=2,T++;return N}function o(w,N,T){const F=[];for(let S=0;S<w.length;S++)F[S]=Math.ceil((N[S]-w[S])/T[S]);return F}function n(w,N,T,F){const S=[...w];for(let I=S.length;I<F.length;I++)S.push(1);for(let I=0;I<T;I++)I===0?S[N]=1:(S.splice(N,0,1),S.pop());return S}function c(w,N,T){return T<=w?T:T-(N-1)}function a(w,N){const T=[];for(let F=0;F<w;F++)T.push(N+F);return T}function l(w,N,T,F,S,I,j,D,O){const $=w.length;let P=new Array($),R=new Array($),A=new Array($);if(N.length&&T>0){const z=N[0],G=T+1;P=u(j,z,G,F,w),R=p(D,z,G,S,w),A=n(I,z,G,w)}else for(let z=0;z<$;z++)P[z]=g(j,F,I,w,z,O),R[z]=v(D,S,I,w,z,O),A[z]=h(I,z,O);return{begin:P,end:R,strides:A}}function u(w,N,T,F,S){const I=[...S],j=a(T,N);for(let D=0;D<I.length;D++)if(j.indexOf(D)>-1)I[D]=0;else{const O=c(N,T,D);let $=F[O];w&1<<O&&($=0),I[D]=$}return I}function p(w,N,T,F,S){const I=[...S],j=a(T,N);for(let D=0;D<I.length;D++)if(j.indexOf(D)>-1)I[D]=Number.MAX_SAFE_INTEGER;else{const O=c(N,T,D);let $=F[O];w&1<<O&&($=Number.MAX_SAFE_INTEGER),I[D]=$}for(let D=0;D<I.length;D++){const O=S[D];I[D]<0&&(I[D]+=O),I[D]=r.clamp(0,I[D],S[D])}return I}function h(w,N,T){let F=w[N];return(T&1<<N||F==null)&&(F=1),F}function g(w,N,T,F,S,I){let j=N[S];const D=T[S]||1;(w&1<<S||I&1<<S||j==null)&&(D>0?j=Number.MIN_SAFE_INTEGER:j=Number.MAX_SAFE_INTEGER);const O=F[S];return j<0&&(j+=O),j=r.clamp(0,j,O-1),j}function v(w,N,T,F,S,I){let j=N[S];const D=T[S]||1;(w&1<<S||I&1<<S||j==null)&&(D>0?j=Number.MAX_SAFE_INTEGER:j=Number.MIN_SAFE_INTEGER);const O=F[S];return j<0&&(j+=O),D>0?j=r.clamp(0,j,O):j=r.clamp(-1,j,O-1),j}function _(w,N,T){let F=T.length;for(let S=0;S<T.length;S++)if(T[S]>1){F=S;break}for(let S=F+1;S<T.length;S++)if(N[S]>0||T[S]!==w[S])return!1;return!0}function k(w,N){let T=w.length>0?w[w.length-1]:1;for(let F=0;F<w.length-1;F++)T+=w[F]*N[F];return T}function y(w,N,T){let F;const S=w.shape.length;typeof N=="number"?F=[N,...new Array(S-1).fill(0)]:N.length<S?F=N.concat(new Array(S-N.length).fill(0)):F=N.slice(),F.forEach(j=>{r.assert(j!==-1,()=>"slice() does not support negative begin indexing.")});let I;return T==null?I=new Array(S).fill(-1):typeof T=="number"?I=[T,...new Array(S-1).fill(-1)]:T.length<S?I=T.concat(new Array(S-T.length).fill(-1)):I=T,I=I.map((j,D)=>j>=0?j:(r.assert(j===-1,()=>`Negative size values should be exactly -1 but got ${j} for the slice() size at index ${D}.`),w.shape[D]-F[D])),[F,I]}function x(w,N,T,F,S,I,j,D,O){let $;if(F==null?($=new Array(N.length),$.fill(1)):$=F,j!=null&&(j&j-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let P=!1;const R={dims:$.length,numAddAxisAfterEllipsis:0,begin:N.slice(),end:T.slice(),strides:$.slice(),beginMask:S,endMask:I,ellipsisMask:j,newAxisMask:D,shrinkAxisMask:O};for(let W=0;W<R.dims;W++)P&&(1<<W&D)!=0&&R.numAddAxisAfterEllipsis++,1<<W&j&&(P=!0);P||(R.ellipsisMask|=1<<R.dims,R.dims++);const A={dims:w.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};b(R,A);let z=!0,G=!0,L=!0;const M=[],V=[];for(let W=0;W<w.length;++W){if(A.strides[W]===0)throw Error(`strides[${W}] must be non-zero`);const H=!!(A.shrinkAxisMask&1<<W),Z=w[W];if(Z===-1){M.push(H?1:-1);continue}const Q=[A.beginMask&1<<W,A.endMask&1<<W],te=[A.strides[W]>0?0:-1,A.strides[W]>0?Z:Z-1];if(H&&A.strides[W]<=0)throw Error("only stride 1 allowed on non-range indexing.");L=L&&A.strides[W]===1;const ee=!!(A.beginMask&1<<W&&A.endMask&1<<W);if(A.beginValid&&A.endValid){if(H){const U=A.begin[W]<0?Z+A.begin[W]:A.begin[W];if(A.begin[W]=U,A.end[W]=A.begin[W]+1,U<0||U>=Z)throw Error(`slice index ${A.begin[W]} of dimension ${W} out of bounds.`)}else A.begin[W]=C(A.begin[W],0,A.strides[W],Z,Q,te),A.end[W]=C(A.end[W],1,A.strides[W],Z,Q,te);const X=A.strides[W]===1&&A.begin[W]===0&&A.end[W]===Z;z=z&&X,G=G&&(W===0&&A.strides[W]===1||X)}else z=z&&A.strides[W]===1&&ee,G=G&&(W===0&&A.strides[W]===1||ee);let ne,se=!1;if(A.beginValid&&A.endValid?(ne=A.end[W]-A.begin[W],se=!0):H?(ne=1,se=!0):ee&&Z>=0&&(A.strides[W]<0?ne=-Z:ne=Z,se=!0),se){let X;ne===0||ne<0!=A.strides[W]<0?X=0:X=Math.trunc(ne/A.strides[W])+(ne%A.strides[W]!=0?1:0),M.push(X)}else M.push(-1)}for(let W=0;W<A.finalShapeGatherIndices.length;++W){const H=A.finalShapeGatherIndices[W];H>=0?V.push(M[H]):H===d&&V.push(1)}return{finalShapeSparse:V.filter((W,H)=>A.finalShapeGatherIndices[H]!==d),finalShape:V,isIdentity:z,sliceDim0:G,isSimpleSlice:L,begin:A.begin,end:A.end,strides:A.strides}}function b(w,N){N.beginMask=0,N.endMask=0,N.shrinkAxisMask=0;let T=0;N.beginValid=w.begin!=null,N.endValid=w.end!=null,N.begin=new Array(N.dims),N.end=new Array(N.dims),N.strides=new Array(N.dims),N.finalShapeGatherIndices=[],N.finalShapeGatherIndicesSparse=[],N.inputShapeGatherIndicesSparse=new Array(N.dims);for(let F=0;F<w.dims;F++)if(1<<F&w.ellipsisMask){const S=Math.min(N.dims-(w.dims-F)+1+w.numAddAxisAfterEllipsis,N.dims);for(;T<S;T++)N.begin[T]=0,N.end[T]=0,N.strides[T]=1,N.beginMask|=1<<T,N.endMask|=1<<T,N.finalShapeGatherIndices.push(T),N.finalShapeGatherIndicesSparse.push(-1),N.inputShapeGatherIndicesSparse[T]=F}else if(1<<F&w.newAxisMask)N.finalShapeGatherIndices.push(d),N.finalShapeGatherIndicesSparse.push(-1);else{if(T===N.begin.length)throw Error(`Index out of range using input dim ${T}; input has only ${N.dims} dims, ${N.begin.length}.`);w.begin!=null&&(N.begin[T]=w.begin[F]),w.end!=null&&(N.end[T]=w.end[F]),N.strides[T]=w.strides[F],w.beginMask&1<<F&&(N.beginMask|=1<<T),w.endMask&1<<F&&(N.endMask|=1<<T),w.shrinkAxisMask&1<<F?(N.finalShapeGatherIndices.push(m),N.finalShapeGatherIndicesSparse.push(-1),N.shrinkAxisMask|=1<<T):(N.finalShapeGatherIndices.push(T),N.finalShapeGatherIndicesSparse.push(F)),N.inputShapeGatherIndicesSparse[T]=F,T++}}function C(w,N,T,F,S,I){if(S[N])return T>0?I[N]:I[N+1&1];{const j=w<0?F+w:w;return j<I[0]?I[0]:j>I[1]?I[1]:j}}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7bPiH":[function(e,E,s){/** @license See the LICENSE file. */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"version",()=>r);const r="4.9.0"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],e9trF:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"OptimizerConstructors",()=>c);var r=e("./adadelta_optimizer"),d=e("./adagrad_optimizer"),m=e("./adam_optimizer"),f=e("./adamax_optimizer"),i=e("./momentum_optimizer"),o=e("./rmsprop_optimizer"),n=e("./sgd_optimizer");class c{static sgd(l){return new n.SGDOptimizer(l)}static momentum(l,u,p=!1){return new i.MomentumOptimizer(l,u,p)}static rmsprop(l,u=.9,p=0,h=null,g=!1){return new o.RMSPropOptimizer(l,u,p,h,g)}static adam(l=.001,u=.9,p=.999,h=null){return new m.AdamOptimizer(l,u,p,h)}static adadelta(l=.001,u=.95,p=null){return new r.AdadeltaOptimizer(l,u,p)}static adamax(l=.002,u=.9,p=.999,h=null,g=0){return new f.AdamaxOptimizer(l,u,p,h,g)}static adagrad(l,u=.1){return new d.AdagradOptimizer(l,u)}}},{"./adadelta_optimizer":"jueNe","./adagrad_optimizer":"knoCw","./adam_optimizer":"iEGnS","./adamax_optimizer":"dFQur","./momentum_optimizer":"PTiwT","./rmsprop_optimizer":"eCBOJ","./sgd_optimizer":"2g2Lt","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7XJ9c":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"train",()=>d);var r=e("./optimizers/optimizer_constructors");const d=r.OptimizerConstructors},{"./optimizers/optimizer_constructors":"e9trF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6LJNB":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nextFrame",()=>d);const r=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:m=>m())();function d(){return new Promise(m=>r(()=>m()))}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bIRcy:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"upcastType",()=>u.upcastType),t.export(s,"slice_util",()=>l),t.export(s,"segment_util",()=>F),t.export(s,"fromUint8ToStringArray",()=>S),t.export(s,"fromStringArrayToUint8",()=>I);var r=e("../util"),d=e("../ops/axis_util");t.exportAll(d,s);var m=e("../ops/broadcast_util");t.exportAll(m,s);var f=e("../ops/concat_util");t.exportAll(f,s);var i=e("../ops/conv_util");t.exportAll(i,s);var o=e("../ops/fused_util");t.exportAll(o,s);var n=e("../ops/fused_types");t.exportAll(n,s);var c=e("../ops/ragged_to_dense_util");t.exportAll(c,s);var a=e("../ops/reduce_util");t.exportAll(a,s);var l=e("../ops/slice_util"),u=e("../types"),p=e("../ops/rotate_util");t.exportAll(p,s);var h=e("../ops/array_ops_util");t.exportAll(h,s);var g=e("../ops/gather_nd_util");t.exportAll(g,s);var v=e("../ops/scatter_nd_util");t.exportAll(v,s);var _=e("../ops/selu_util");t.exportAll(_,s),t.exportAll(o,s);var k=e("../ops/erf_util");t.exportAll(k,s);var y=e("../log");t.exportAll(y,s);var x=e("../backends/complex_util");t.exportAll(x,s);var b=e("../backends/einsum_util");t.exportAll(b,s);var C=e("../ops/split_util");t.exportAll(C,s);var w=e("../ops/sparse/sparse_fill_empty_rows_util");t.exportAll(w,s);var N=e("../ops/sparse/sparse_reshape_util");t.exportAll(N,s);var T=e("../ops/sparse/sparse_segment_reduction_util");t.exportAll(T,s);var F=e("../ops/segment_util");function S(j){try{return j.map(D=>(0,r.decodeString)(D))}catch(D){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${D}`)}}function I(j){return j.map(D=>(0,r.encodeString)(D))}},{"../util":"hQeVi","../ops/axis_util":"hf64X","../ops/broadcast_util":"lfnGK","../ops/concat_util":"e9baM","../ops/conv_util":"3jOAS","../ops/fused_util":"2eUTg","../ops/fused_types":"kBDpP","../ops/ragged_to_dense_util":"cBW5C","../ops/reduce_util":"2NDnN","../ops/slice_util":"j7Apq","../types":"cjn0s","../ops/rotate_util":"k1G8k","../ops/array_ops_util":"iXkjA","../ops/gather_nd_util":"4J1P2","../ops/scatter_nd_util":"eqT3b","../ops/selu_util":"9LoWe","../ops/erf_util":"hfDzl","../log":"6Wzwt","../backends/complex_util":"bkyES","../backends/einsum_util":"9cEJ0","../ops/split_util":"9Ftew","../ops/sparse/sparse_fill_empty_rows_util":"8STV6","../ops/sparse/sparse_reshape_util":"ibWEl","../ops/sparse/sparse_segment_reduction_util":"lbCZT","../ops/segment_util":"jSy2n","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],e9baM:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"assertParamsConsistent",()=>d),t.export(s,"computeOutShape",()=>m);var r=e("../util");function d(f,i){const o=f[0].length;f.forEach((c,a)=>{r.assert(c.length===o,()=>`Error in concat${o}D: rank of tensors[${a}] must be the same as the rank of the rest (${o})`)}),r.assert(i>=0&&i<o,()=>`Error in concat${o}D: axis must be between 0 and ${o-1}.`);const n=f[0];f.forEach((c,a)=>{for(let l=0;l<o;l++)r.assert(l===i||c[l]===n[l],()=>`Error in concat${o}D: Shape of tensors[${a}] (${c}) does not match the shape of the rest (${n}) along the non-concatenated axis ${a}.`)})}function m(f,i){const o=f[0].slice();for(let n=1;n<f.length;n++)o[i]+=f[n][i];return o}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kBDpP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s)},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cBW5C:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"RowPartitionType",()=>r),t.export(s,"combineRaggedTensorToTensorShapes",()=>d),t.export(s,"getRowPartitionTypesHelper",()=>m),t.export(s,"getRaggedRank",()=>f),t.export(s,"validateDefaultValueShape",()=>i);var r;(function(o){o[o.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",o[o.VALUE_ROWIDS=1]="VALUE_ROWIDS",o[o.ROW_LENGTHS=2]="ROW_LENGTHS",o[o.ROW_SPLITS=3]="ROW_SPLITS",o[o.ROW_LIMITS=4]="ROW_LIMITS",o[o.ROW_STARTS=5]="ROW_STARTS"})(r||(r={}));function d(o,n,c){let a=new Array;if(c==null&&n==null)return a;if(n==null)for(;a.length<o+c.length;)a.push(-1);else a=n.slice();if(c==null)return a;if(o+c.length!==a.length)throw new Error(`rt input.shape and shape=${n} are incompatible: rt input.rank = ${o+c.length}, but shape.rank = ${a.length}`);for(let l=1;l<c.length;++l){const u=c[l],p=a[a.length-c.length+l],h=a[p];if(u>=0)if(h>=0){if(h!==u)throw new Error(`rt input.shape and shape=${n} are incompatible: rt input.shape[${l+o}] = ${u} but shape[${l+o}] = ${h}`)}else a[p]=u}return a}function m(o){const n={FIRST_DIM_SIZE:r.FIRST_DIM_SIZE,VALUE_ROWIDS:r.VALUE_ROWIDS,ROW_LENGTHS:r.ROW_LENGTHS,ROW_SPLITS:r.ROW_SPLITS,ROW_LIMITS:r.ROW_LIMITS,ROW_STARTS:r.ROW_STARTS},c=[];for(const a of o)if(a in n)c.push(n[a]);else break;return c}function f(o){return o.length===0?0:o[0]===r.FIRST_DIM_SIZE?o.length-1:o.length}function i(o,n){if(o==null||n==null)return;const c=o.length,a=n.length;if(c>=a)throw new Error(`defaultValue.shape=${o} and ragged tensor flatValues.shape=${n}, are incompatible: defaultValue.rank = ${c} must be less than ragged tensor input flatValues.rank = ${a})`);for(let l=0;l<Math.min(c,a-1);++l){const u=o[l],p=n[l+1];if(u>=0&&p>=0&&u!==1&&u!==p)throw new Error(`defaultValue.shape=${o}, and ragged tensor input flatValues.shape=${n} are incompatible: defaultValue.shape[${l-o.length}] = ${u} but ragged tensor input.flatValues.shape[${l-o.length}] = ${p}`)}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2NDnN":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"PARALLELIZE_THRESHOLD",()=>d),t.export(s,"computeOptimalWindowSize",()=>m);var r=e("../util");const d=30;function m(f){return f<=d?f:(0,r.nearestDivisor)(f,Math.floor(Math.sqrt(f)))}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k1G8k:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getImageCenter",()=>r);function r(d,m,f){const i=f*(typeof d=="number"?d:d[0]),o=m*(typeof d=="number"?d:d[1]);return[i,o]}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iXkjA:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getReshaped",()=>r),t.export(s,"getPermuted",()=>d),t.export(s,"getReshapedPermuted",()=>m),t.export(s,"getSliceBeginCoords",()=>f),t.export(s,"getSliceSize",()=>i);function r(o,n,c,a=!0){let l=[];if(a)l=l.concat(n.slice(0)),l.push(o[0]/c),l=l.concat(o.slice(1));else{l=l.concat(o[0]);const u=n.length;for(let p=0;p<u;++p)l=l.concat([o[p+1]/n[p],n[p]]);l=l.concat(o.slice(u+1))}return l}function d(o,n,c=!0){const a=[];if(c){a.push(n);for(let l=n+1;l<o;++l)l<=2*n?(a.push(l),a.push(l-(n+1))):a.push(l)}else{const l=[],u=[];for(let p=1;p<o;++p)p>=n*2+1||p%2==1?u.push(p):l.push(p);a.push(...l),a.push(0),a.push(...u)}return a}function m(o,n,c,a=!0){const l=[];a?l.push(o[0]/c):l.push(o[0]*c);for(let u=1;u<o.length;++u)u<=n.length?a?l.push(n[u-1]*o[u]):l.push(o[u]/n[u-1]):l.push(o[u]);return l}function f(o,n){const c=[0];for(let a=0;a<n;++a)c.push(o[a][0]);return c}function i(o,n,c){const a=o.slice(0,1);for(let l=0;l<c;++l)a.push(o[l+1]-n[l][0]-n[l][1]);return a}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9LoWe":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"SELU_SCALEALPHA",()=>r),t.export(s,"SELU_SCALE",()=>d);const r=1.7580993408473768,d=1.0507009873554805},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hfDzl:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ERF_P",()=>r),t.export(s,"ERF_A1",()=>d),t.export(s,"ERF_A2",()=>m),t.export(s,"ERF_A3",()=>f),t.export(s,"ERF_A4",()=>i),t.export(s,"ERF_A5",()=>o);const r=.3275911,d=.254829592,m=-.284496736,f=1.421413741,i=-1.453152027,o=1.061405429},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bkyES:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mergeRealAndImagArrays",()=>r),t.export(s,"splitRealAndImagArrays",()=>d),t.export(s,"complexWithEvenIndex",()=>m),t.export(s,"complexWithOddIndex",()=>f),t.export(s,"getComplexWithIndex",()=>i),t.export(s,"assignToTypedArray",()=>o),t.export(s,"exponents",()=>n),t.export(s,"exponent",()=>c);function r(a,l){if(a.length!==l.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${a.length}, imag: ${l.length}.`);const u=new Float32Array(a.length*2);for(let p=0;p<u.length;p+=2)u[p]=a[p/2],u[p+1]=l[p/2];return u}function d(a){const l=new Float32Array(a.length/2),u=new Float32Array(a.length/2);for(let p=0;p<a.length;p+=2)l[p/2]=a[p],u[p/2]=a[p+1];return{real:l,imag:u}}function m(a){const l=Math.ceil(a.length/4),u=new Float32Array(l),p=new Float32Array(l);for(let h=0;h<a.length;h+=4)u[Math.floor(h/4)]=a[h],p[Math.floor(h/4)]=a[h+1];return{real:u,imag:p}}function f(a){const l=Math.floor(a.length/4),u=new Float32Array(l),p=new Float32Array(l);for(let h=2;h<a.length;h+=4)u[Math.floor(h/4)]=a[h],p[Math.floor(h/4)]=a[h+1];return{real:u,imag:p}}function i(a,l){const u=a[l*2],p=a[l*2+1];return{real:u,imag:p}}function o(a,l,u,p){a[p*2]=l,a[p*2+1]=u}function n(a,l){const u=new Float32Array(a/2),p=new Float32Array(a/2);for(let h=0;h<Math.ceil(a/2);h++){const g=(l?2:-2)*Math.PI*(h/a);u[h]=Math.cos(g),p[h]=Math.sin(g)}return{real:u,imag:p}}function c(a,l,u){const p=(u?2:-2)*Math.PI*(a/l),h=Math.cos(p),g=Math.sin(p);return{real:h,imag:g}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9cEJ0":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"decodeEinsumEquation",()=>o),t.export(s,"getEinsumPermutation",()=>n),t.export(s,"checkEinsumDimSizes",()=>c),t.export(s,"getEinsumComputePath",()=>a),t.export(s,"isIdentityPermutation",()=>l);var r=e("../util_base");const d="->",m=/->/g,f=",",i="...";function o(p,h){p=p.replace(/\s/g,"");const g=(p.length-p.replace(m,"").length)/d.length;if(g<1)throw new Error("Equations without an arrow are not supported.");if(g>1)throw new Error(`Equation must contain exactly one arrow ("${d}").`);const[v,_]=p.split(d);(0,r.assert)(v.indexOf(i)===-1,()=>`The ellipsis notation ("${i}") is not supported yet.`);const k=v.split(f),y=k.length;if(h!==y)throw new Error(`Expected ${y} input tensors, received ${h}`);if(y>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const x=[];for(let T=0;T<_.length;++T){const F=_[T];if(!k.some(S=>S.indexOf(F)!==-1))throw new Error(`Output subscripts contain the label ${F} not present in the input subscripts.`);x.indexOf(F)===-1&&x.push(F)}for(let T=0;T<v.length;++T){const F=v[T];x.indexOf(F)===-1&&F!==f&&x.push(F)}const b=new Array(k.length);for(let T=0;T<y;++T){if(new Set(k[T].split("")).size!==k[T].length)throw new Error(`Found duplicate axes in input component ${k[T]}. Support for duplicate axes in input is not implemented yet.`);b[T]=[];for(let F=0;F<k[T].length;++F)b[T].push(x.indexOf(k[T][F]))}const C=x.length,w=_.length,N=[];for(let T=w;T<C;++T)N.push(T);return{allDims:x,summedDims:N,idDims:b}}function n(p,h){let g=new Array(p);g.fill(-1);for(let _=0;_<h.length;++_)g[h[_]]=_;const v=[];for(let _=0;_<p;++_)g[_]===-1&&v.push(_);return g=g.filter(_=>_!==-1),{permutationIndices:g,expandDims:v}}function c(p,h,g){const v=new Array(p);for(let _=0;_<g.length;++_){const k=g[_].shape;for(let y=0;y<h[_].length;++y)v[h[_][y]]===void 0?v[h[_][y]]=k[y]:(0,r.assert)(v[h[_][y]]===k[y],()=>`Expected dimension ${v[h[_][y]]} at axis ${y} of input shaped ${JSON.stringify(k)}, but got dimension ${k[y]}`)}}function a(p,h){const g=p,v=[];let _=0;p.length===0&&g.push(-1),_=p.length+1;for(let y=0;y<_;++y)v.push([]);const k=[];for(let y=0;y<g.length;++y){const x=g[y],b=u(h,x);for(const C of b)k.indexOf(C)===-1&&(v[y].push(C),k.push(C))}return{path:g,steps:v}}function l(p){return p.every((h,g)=>h===g)}function u(p,h){const g=[];for(let v=0;v<p.length;++v)(p[v].length===0||p[v].indexOf(h)!==-1||h===-1)&&g.push(v);return g}},{"../util_base":"7Tgdr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9Ftew":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"prepareSplitSize",()=>d);var r=e("../util");function d(m,f,i=0){let o=[];if(typeof f=="number")(0,r.assert)(m.shape[i]%f==0,()=>"Number of splits must evenly divide the axis."),o=new Array(f).fill(m.shape[i]/f);else{const n=f.reduce((a,l)=>(l===-1&&(a+=1),a),0);(0,r.assert)(n<=1,()=>"There should be only one negative value in split array.");const c=f.indexOf(-1);if(c!==-1){const a=f.reduce((l,u)=>u>0?l+u:l);f[c]=m.shape[i]-a}(0,r.assert)(m.shape[i]===f.reduce((a,l)=>a+l),()=>"The sum of sizes must match the size of the axis dimension."),o=f}return o}},{"../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8STV6":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",()=>r),t.export(s,"getSparseFillEmptyRowsNegativeIndexErrorMessage",()=>d),t.export(s,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",()=>m);function r(f){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${f}`}function d(f,i){return`indices(${f}, 0) is invalid: ${i} < 0`}function m(f,i,o){return`indices(${f}, 0) is invalid: ${i} >= ${o}`}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ibWEl:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",()=>d),t.export(s,"getSparseReshapeNegativeOutputDimErrorMessage",()=>m),t.export(s,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",()=>f),t.export(s,"getSparseReshapeInputOutputMultipleErrorMessage",()=>i),t.export(s,"getSparseReshapeInputOutputMismatchErrorMessage",()=>o);var r=e("../../util");function d(n,c){return`only one output dimension may be -1, not both ${n} and ${c}`}function m(n,c){return`size ${n} must be non-negative, not ${c}`}function f(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function i(n,c){const a=(0,r.sizeFromShape)(n),l=(0,r.sizeFromShape)(c);return`Input to reshape is a SparseTensor with ${a}
  dense values, but the requested shape requires a multiple of ${l}. inputShape=${n} outputShape= ${c}`}function o(n,c){const a=(0,r.sizeFromShape)(n),l=(0,r.sizeFromShape)(c);return`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${l}. inputShape=${n} outputShape=${c}`}},{"../../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lbCZT:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",()=>r),t.export(s,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",()=>d),t.export(s,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",()=>m),t.export(s,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",()=>f);function r(){return"segment ids must be >= 0"}function d(){return"segment ids are not increasing"}function m(i,o){return`Segment id ${i} out of range [0, ${o}), possibly because segmentIds input is not sorted.`}function f(i,o,n){return`Bad: indices[${i}] == ${o} out of range [0, ${n})`}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jSy2n:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"segOpComputeOptimalWindowSize",()=>m),t.export(s,"computeOutShape",()=>f),t.export(s,"collectGatherOpShapeInfo",()=>i);var r=e("../util"),d=e("./reduce_util");function m(o,n){let c=!1,a;for(o<=d.PARALLELIZE_THRESHOLD?(a=o,c=!0):a=(0,r.nearestDivisor)(o,Math.floor(Math.sqrt(o)));!c;)a>n||a===o?c=!0:a=(0,r.nearestDivisor)(o,a+1);return a}function f(o,n,c){const a=[],l=o.length;for(let u=0;u<l;u++)u!==n?a.push(o[u]):a.push(c);return a}function i(o,n,c,a){const l=n.shape.length,u=o.shape.length;if(a!==0&&(a<-l||a>l))throw new Error(`Expect batchDims in the range of [-${l}, ${l}], but got ${a}`);if(a<0&&(a+=l),a>u)throw new Error(`batchDims (${a}) must be less than rank(x) (
    ${u}).`);if(c<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${c}).`);for(let k=0;k<a;++k)if(o.shape[k]!==n.shape[k])throw new Error(`x.shape[${k}]: ${o.shape[k]} should be equal to indices.shape[${k}]: ${n.shape[k]}.`);const p=o.shape[c],h=[];let g=1,v=1,_=1;for(let k=0;k<a;++k)h.push(o.shape[k]),g*=o.shape[k];for(let k=a;k<c;k++)h.push(o.shape[k]),v*=o.shape[k];for(let k=a;k<l;k++)h.push(n.shape[k]);for(let k=c+1;k<u;k++)h.push(o.shape[k]),_*=o.shape[k];return{batchSize:g,sliceSize:_,outerSize:v,dimSize:p,outputShape:h}}},{"../util":"hQeVi","./reduce_util":"2NDnN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kmpkh:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionV3Impl",()=>r.nonMaxSuppressionV3Impl),t.export(s,"nonMaxSuppressionV4Impl",()=>r.nonMaxSuppressionV4Impl),t.export(s,"nonMaxSuppressionV5Impl",()=>r.nonMaxSuppressionV5Impl),t.export(s,"whereImpl",()=>d.whereImpl);var r=e("./non_max_suppression_impl"),d=e("./where_impl")},{"./non_max_suppression_impl":"5hm5N","./where_impl":"1XF52","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6n8PF":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("./gradients/Abs_grad"),r=e("./gradients/Acos_grad"),d=e("./gradients/Acosh_grad"),m=e("./gradients/Add_grad"),f=e("./gradients/AddN_grad"),i=e("./gradients/ArgMax_grad"),o=e("./gradients/ArgMin_grad"),n=e("./gradients/Asin_grad"),c=e("./gradients/Asinh_grad"),a=e("./gradients/Atan2_grad"),l=e("./gradients/Atan_grad"),u=e("./gradients/Atanh_grad"),p=e("./gradients/AvgPool3D_grad"),h=e("./gradients/AvgPool_grad"),g=e("./gradients/BatchMatMul_grad"),v=e("./gradients/BatchToSpaceND_grad"),_=e("./gradients/BroadcastTo_grad"),k=e("./gradients/Cast_grad"),y=e("./gradients/Ceil_grad"),x=e("./gradients/ClipByValue_grad"),b=e("./gradients/ComplexAbs_grad"),C=e("./gradients/Concat_grad"),w=e("./gradients/Conv2D_grad"),N=e("./gradients/Conv2DBackpropInput_grad"),T=e("./gradients/Conv3D_grad"),F=e("./gradients/Cos_grad"),S=e("./gradients/Cosh_grad"),I=e("./gradients/Cumsum_grad"),j=e("./gradients/DepthwiseConv2dNative_grad"),D=e("./gradients/Dilation2D_grad"),O=e("./gradients/Elu_grad"),$=e("./gradients/Erf_grad"),P=e("./gradients/Exp_grad"),R=e("./gradients/ExpandDims_grad"),A=e("./gradients/Expm1_grad"),z=e("./gradients/Floor_grad"),G=e("./gradients/FloorDiv_grad"),L=e("./gradients/FusedBatchNorm_grad"),M=e("./gradients/GatherV2_grad"),V=e("./gradients/GreaterEqual_grad"),K=e("./gradients/Identity_grad"),W=e("./gradients/IsFinite_grad"),H=e("./gradients/IsInf_grad"),Z=e("./gradients/IsNan_grad"),Q=e("./gradients/LeakyRelu_grad"),te=e("./gradients/Log1p_grad"),ee=e("./gradients/Log_grad"),ne=e("./gradients/LogSoftmax_grad"),se=e("./gradients/LRN_grad"),X=e("./gradients/Max_grad"),U=e("./gradients/Maximum_grad"),Y=e("./gradients/MaxPool3D_grad"),J=e("./gradients/MaxPool_grad"),q=e("./gradients/Mean_grad"),ae=e("./gradients/Min_grad"),ie=e("./gradients/Minimum_grad"),le=e("./gradients/MirrorPad_grad"),ue=e("./gradients/Mod_grad"),B=e("./gradients/Multiply_grad"),re=e("./gradients/Neg_grad"),oe=e("./gradients/OneHot_grad"),de=e("./gradients/OnesLike_grad"),fe=e("./gradients/Pack_grad"),pe=e("./gradients/PadV2_grad"),me=e("./gradients/Pow_grad"),he=e("./gradients/Prelu_grad"),ge=e("./gradients/Prod_grad"),ve=e("./gradients/RealDiv_grad"),ke=e("./gradients/Reciprocal_grad"),_e=e("./gradients/Relu6_grad"),ye=e("./gradients/Relu_grad"),be=e("./gradients/Reshape_grad"),Ce=e("./gradients/ResizeBilinear_grad"),we=e("./gradients/ResizeNearestNeighbor_grad"),xe=e("./gradients/Reverse_grad"),Ne=e("./gradients/Round_grad"),Ie=e("./gradients/Rsqrt_grad"),Te=e("./gradients/Select_grad"),Ee=e("./gradients/Selu_grad"),Fe=e("./gradients/Sigmoid_grad"),De=e("./gradients/Sign_grad"),Ae=e("./gradients/Sin_grad"),Pe=e("./gradients/Sinh_grad"),Re=e("./gradients/Slice_grad"),$e=e("./gradients/Softmax_grad"),Oe=e("./gradients/Softplus_grad"),Se=e("./gradients/SpaceToBatchND_grad"),je=e("./gradients/SplitV_grad"),ze=e("./gradients/Sqrt_grad"),Ge=e("./gradients/Square_grad"),Le=e("./gradients/SquaredDifference_grad"),Me=e("./gradients/Step_grad"),Ve=e("./gradients/Sub_grad"),Ue=e("./gradients/Sum_grad"),Be=e("./gradients/Tan_grad"),He=e("./gradients/Tanh_grad"),We=e("./gradients/Tile_grad"),Ke=e("./gradients/Transpose_grad"),ce=e("./gradients/Unpack_grad"),Ye=e("./gradients/UnsortedSegmentSum_grad"),Xe=e("./gradients/ZerosLike_grad"),Ze=e("./kernel_registry");const Qe=[t.absGradConfig,r.acosGradConfig,d.acoshGradConfig,m.addGradConfig,f.addNGradConfig,i.argMaxGradConfig,o.argMinGradConfig,n.asinGradConfig,c.asinhGradConfig,a.atan2GradConfig,l.atanGradConfig,u.atanhGradConfig,p.avgPool3DGradConfig,h.avgPoolGradConfig,g.batchMatMulGradConfig,v.batchToSpaceNDGradConfig,_.broadcastToGradConfig,k.castGradConfig,y.ceilGradConfig,x.clipByValueGradConfig,b.complexAbsGradConfig,C.concatGradConfig,N.conv2DBackpropInputGradConfig,w.conv2DGradConfig,T.conv3DGradConfig,F.cosGradConfig,S.coshGradConfig,I.cumsumGradConfig,j.depthwiseConv2dNativeGradConfig,D.dilation2dGradConfig,ve.divGradConfig,O.eluGradConfig,$.erfGradConfig,P.expGradConfig,R.expandDimsGradConfig,A.expm1GradConfig,G.floorDivGradConfig,z.floorGradConfig,L.fusedBatchNormGradConfig,M.gatherGradConfig,V.greaterEqualGradConfig,K.identityGradConfig,W.isFiniteGradConfig,H.isInfGradConfig,Z.isNanGradConfig,Q.leakyReluGradConfig,te.log1pGradConfig,ee.logGradConfig,ne.logSoftmaxGradConfig,se.lrnGradConfig,X.maxGradConfig,X.maxGradConfig,U.maximumGradConfig,Y.maxPool3DGradConfig,J.maxPoolGradConfig,q.meanGradConfig,ae.minGradConfig,ie.minimumGradConfig,le.mirrorPadGradConfig,ue.modGradConfig,B.multiplyGradConfig,re.negGradConfig,oe.oneHotGradConfig,de.onesLikeGradConfig,fe.packGradConfig,pe.padV2GradConfig,pe.padV2GradConfig,me.powGradConfig,he.preluGradConfig,ge.prodGradConfig,ke.reciprocalGradConfig,_e.relu6GradConfig,ye.reluGradConfig,be.reshapeGradConfig,Ce.resizeBilinearGradConfig,we.resizeNearestNeighborGradConfig,xe.reverseGradConfig,Ne.roundGradConfig,Ie.rsqrtGradConfig,Te.selectGradConfig,Ee.seluGradConfig,Fe.sigmoidGradConfig,De.signGradConfig,Ae.sinGradConfig,Pe.sinhGradConfig,Re.sliceGradConfig,$e.softmaxGradConfig,Oe.softplusGradConfig,Se.spaceToBatchNDGradConfig,Se.spaceToBatchNDGradConfig,je.splitVGradConfig,je.splitVGradConfig,ze.sqrtGradConfig,Le.squaredDifferenceGradConfig,Ge.squareGradConfig,Me.stepGradConfig,Ve.subGradConfig,Ue.sumGradConfig,Be.tanGradConfig,He.tanhGradConfig,We.tileGradConfig,Ke.transposeGradConfig,ce.unpackGradConfig,Ye.unsortedSegmentSumGradConfig,Xe.zerosLikeGradConfig];for(const Je of Qe)(0,Ze.registerGradient)(Je)},{"./gradients/Abs_grad":"eX5Wu","./gradients/Acos_grad":"aztLg","./gradients/Acosh_grad":"gKZ1z","./gradients/Add_grad":"kl6B6","./gradients/AddN_grad":"jQxIm","./gradients/ArgMax_grad":"9hqPf","./gradients/ArgMin_grad":"3OUOC","./gradients/Asin_grad":"2og4q","./gradients/Asinh_grad":"6TYuj","./gradients/Atan2_grad":"6c3fH","./gradients/Atan_grad":"8wlp5","./gradients/Atanh_grad":"i3Ibj","./gradients/AvgPool3D_grad":"bvCqU","./gradients/AvgPool_grad":"fIBOt","./gradients/BatchMatMul_grad":"iDk06","./gradients/BatchToSpaceND_grad":"lJ7I3","./gradients/BroadcastTo_grad":"gV0BI","./gradients/Cast_grad":"9CtwI","./gradients/Ceil_grad":"kiYdf","./gradients/ClipByValue_grad":"a7a5T","./gradients/ComplexAbs_grad":"aNCs4","./gradients/Concat_grad":"CAHaf","./gradients/Conv2D_grad":"3Vr0x","./gradients/Conv2DBackpropInput_grad":"b39ze","./gradients/Conv3D_grad":"k2Mv7","./gradients/Cos_grad":"2bPjX","./gradients/Cosh_grad":"4TLIP","./gradients/Cumsum_grad":"7md5I","./gradients/DepthwiseConv2dNative_grad":"5GxWE","./gradients/Dilation2D_grad":"jJv6w","./gradients/Elu_grad":"jYupY","./gradients/Erf_grad":"7NrJ7","./gradients/Exp_grad":"kXeQ2","./gradients/ExpandDims_grad":"48hiK","./gradients/Expm1_grad":"93NlH","./gradients/Floor_grad":"9lu7Y","./gradients/FloorDiv_grad":"6J79D","./gradients/FusedBatchNorm_grad":"23f4o","./gradients/GatherV2_grad":"7R4VR","./gradients/GreaterEqual_grad":"1XXdI","./gradients/Identity_grad":"1MTG1","./gradients/IsFinite_grad":"cv4vV","./gradients/IsInf_grad":"cvjgc","./gradients/IsNan_grad":"a7uTl","./gradients/LeakyRelu_grad":"4m6Cv","./gradients/Log1p_grad":"8CQZY","./gradients/Log_grad":"6omLe","./gradients/LogSoftmax_grad":"5tAN8","./gradients/LRN_grad":"aBcrY","./gradients/Max_grad":"bto1A","./gradients/Maximum_grad":"68gQp","./gradients/MaxPool3D_grad":"f1i0m","./gradients/MaxPool_grad":"efUrA","./gradients/Mean_grad":"elQ43","./gradients/Min_grad":"gXDcZ","./gradients/Minimum_grad":"3p0ZS","./gradients/MirrorPad_grad":"3ebeH","./gradients/Mod_grad":"2WqVg","./gradients/Multiply_grad":"fkXZo","./gradients/Neg_grad":"7TpqJ","./gradients/OneHot_grad":"9zQjk","./gradients/OnesLike_grad":"9fYuF","./gradients/Pack_grad":"dPJzv","./gradients/PadV2_grad":"gjUKg","./gradients/Pow_grad":"lK2uh","./gradients/Prelu_grad":"eEbHE","./gradients/Prod_grad":"vlTkL","./gradients/RealDiv_grad":"gfQMC","./gradients/Reciprocal_grad":"fTCBo","./gradients/Relu6_grad":"hYJlP","./gradients/Relu_grad":"dSd16","./gradients/Reshape_grad":"86NWU","./gradients/ResizeBilinear_grad":"iWELZ","./gradients/ResizeNearestNeighbor_grad":"hqg9o","./gradients/Reverse_grad":"6cnTo","./gradients/Round_grad":"569Uc","./gradients/Rsqrt_grad":"14n3D","./gradients/Select_grad":"2KxDe","./gradients/Selu_grad":"92cch","./gradients/Sigmoid_grad":"6MKdx","./gradients/Sign_grad":"hDqSd","./gradients/Sin_grad":"clx1w","./gradients/Sinh_grad":"bziiI","./gradients/Slice_grad":"g8Dfi","./gradients/Softmax_grad":"39TF6","./gradients/Softplus_grad":"jy1mx","./gradients/SpaceToBatchND_grad":"jPwJI","./gradients/SplitV_grad":"hphaM","./gradients/Sqrt_grad":"dCXiv","./gradients/Square_grad":"8480x","./gradients/SquaredDifference_grad":"akEAY","./gradients/Step_grad":"a58ZX","./gradients/Sub_grad":"b8ULg","./gradients/Sum_grad":"lB9V5","./gradients/Tan_grad":"4Q0Vi","./gradients/Tanh_grad":"dgUqM","./gradients/Tile_grad":"alauC","./gradients/Transpose_grad":"7QJBa","./gradients/Unpack_grad":"2OFZM","./gradients/UnsortedSegmentSum_grad":"bgI7D","./gradients/ZerosLike_grad":"03IDC","./kernel_registry":"9w40T"}],eX5Wu:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"absGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/mul"),f=e("../ops/step");const i={kernelName:r.Abs,inputsToSave:["x"],gradFunc:(o,n)=>{const[c]=n;return{x:()=>(0,m.mul)(o,(0,f.step)((0,d.cast)(c,"float32"),-1))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/mul":"kfDrf","../ops/step":"89RLy","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aztLg:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"acosGradConfig",()=>a);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/div"),f=e("../ops/neg"),i=e("../ops/scalar"),o=e("../ops/sqrt"),n=e("../ops/square"),c=e("../ops/sub");const a={kernelName:r.Acos,inputsToSave:["x"],gradFunc:(l,u)=>{const[p]=u;return{x:()=>{const h=(0,n.square)((0,d.cast)(p,"float32")),g=(0,o.sqrt)((0,c.sub)((0,i.scalar)(1),h));return(0,f.neg)((0,m.div)(l,g))}}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/neg":"gXSYm","../ops/scalar":"1SA7b","../ops/sqrt":"VUCvx","../ops/square":"6AZak","../ops/sub":"ihs7S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gKZ1z:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"acoshGradConfig",()=>n);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/div"),f=e("../ops/sqrt"),i=e("../ops/square"),o=e("../ops/sub");const n={kernelName:r.Acosh,inputsToSave:["x"],gradFunc:(c,a)=>{const[l]=a;return{x:()=>{const u=(0,f.sqrt)((0,o.sub)((0,i.square)((0,d.cast)(l,"float32")),1));return(0,m.div)(c,u)}}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/sqrt":"VUCvx","../ops/square":"6AZak","../ops/sub":"ihs7S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kl6B6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"addGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/broadcast_util"),m=e("../ops/reshape"),f=e("../ops/sum");const i={kernelName:r.Add,inputsToSave:["a","b"],gradFunc:(o,n)=>{const[c,a]=n,l=d.assertAndGetBroadcastShape(c.shape,a.shape);return{a:()=>{let h=o;const g=d.getReductionAxes(c.shape,l);return g.length>0&&(h=(0,f.sum)(h,g)),(0,m.reshape)(h,c.shape)},b:()=>{let h=o;const g=d.getReductionAxes(a.shape,l);return g.length>0&&(h=(0,f.sum)(h,g)),(0,m.reshape)(h,a.shape)}}}}},{"../kernel_names":"kYUMv","../ops/broadcast_util":"lfnGK","../ops/reshape":"5iOnm","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jQxIm:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"addNGradConfig",()=>d);var r=e("../kernel_names");const d={kernelName:r.AddN,saveAllInputs:!0,gradFunc:(m,f)=>{const i={};return f.forEach((o,n)=>{i[n]=()=>m.clone()}),i}}},{"../kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9hqPf":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMaxGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.ArgMax,inputsToSave:["x"],gradFunc:(f,i)=>{const[o]=i;return{x:()=>(0,d.zerosLike)(o)}}}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3OUOC":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMinGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.ArgMin,inputsToSave:["x"],gradFunc:(f,i)=>{const[o]=i;return{x:()=>(0,d.zerosLike)(o)}}}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2og4q":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"asinGradConfig",()=>c);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/div"),f=e("../ops/scalar"),i=e("../ops/sqrt"),o=e("../ops/square"),n=e("../ops/sub");const c={kernelName:r.Asin,inputsToSave:["x"],gradFunc:(a,l)=>{const[u]=l;return{x:()=>(0,m.div)(a,(0,i.sqrt)((0,n.sub)((0,f.scalar)(1),(0,o.square)((0,d.cast)(u,"float32")))))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/scalar":"1SA7b","../ops/sqrt":"VUCvx","../ops/square":"6AZak","../ops/sub":"ihs7S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6TYuj":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"asinhGradConfig",()=>c);var r=e("../kernel_names"),d=e("../ops/add"),m=e("../ops/cast"),f=e("../ops/div"),i=e("../ops/scalar"),o=e("../ops/sqrt"),n=e("../ops/square");const c={kernelName:r.Asinh,inputsToSave:["x"],gradFunc:(a,l)=>{const[u]=l;return{x:()=>{const p=(0,o.sqrt)((0,d.add)((0,i.scalar)(1),(0,n.square)((0,m.cast)(u,"float32"))));return(0,f.div)(a,p)}}}}},{"../kernel_names":"kYUMv","../ops/add":"2ocTD","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/scalar":"1SA7b","../ops/sqrt":"VUCvx","../ops/square":"6AZak","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6c3fH":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atan2GradConfig",()=>l);var r=e("../kernel_names"),d=e("../ops/add"),m=e("../ops/broadcast_util"),f=e("../ops/div"),i=e("../ops/mul"),o=e("../ops/neg"),n=e("../ops/reshape"),c=e("../ops/square"),a=e("../ops/sum");const l={kernelName:r.Atan2,inputsToSave:["a","b"],gradFunc:(u,p)=>{const[h,g]=p,v=(0,m.assertAndGetBroadcastShape)(h.shape,g.shape);return{a:()=>{const y=(0,d.add)((0,c.square)(h),(0,c.square)(g));let x=(0,i.mul)(u,(0,f.div)(g,y));const b=(0,m.getReductionAxes)(h.shape,v);return b.length>0&&(x=(0,a.sum)(x,b)),(0,n.reshape)(x,h.shape)},b:()=>{const y=(0,d.add)((0,c.square)(h),(0,c.square)(g));let x=(0,o.neg)((0,i.mul)(u,(0,f.div)(h,y)));const b=(0,m.getReductionAxes)(g.shape,v);return b.length>0&&(x=(0,a.sum)(x,b)),(0,n.reshape)(x,g.shape)}}}}},{"../kernel_names":"kYUMv","../ops/add":"2ocTD","../ops/broadcast_util":"lfnGK","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/neg":"gXSYm","../ops/reshape":"5iOnm","../ops/square":"6AZak","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8wlp5":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atanGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/add"),m=e("../ops/cast"),f=e("../ops/div"),i=e("../ops/square");const o={kernelName:r.Atan,inputsToSave:["x"],gradFunc:(n,c)=>{const[a]=c;return{x:()=>(0,f.div)(n,(0,d.add)((0,i.square)((0,m.cast)(a,"float32")),1))}}}},{"../kernel_names":"kYUMv","../ops/add":"2ocTD","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/square":"6AZak","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],i3Ibj:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atanhGradConfig",()=>n);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/div"),f=e("../ops/square"),i=e("../ops/sub"),o=e("../ops/scalar");const n={kernelName:r.Atanh,inputsToSave:["x"],gradFunc:(c,a)=>{const[l]=a;return{x:()=>(0,m.div)(c,(0,i.sub)((0,o.scalar)(1),(0,f.square)((0,d.cast)(l,"float32"))))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/square":"6AZak","../ops/sub":"ihs7S","../ops/scalar":"1SA7b","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bvCqU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool3DGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/avg_pool_3d_grad");const m={kernelName:r.AvgPool3D,inputsToSave:["x"],gradFunc:(f,i,o)=>{const[n]=i,{filterSize:c,strides:a,pad:l,dimRoundingMode:u}=o;return{x:()=>(0,d.avgPool3dGrad)(f,n,c,a,l,u)}}}},{"../kernel_names":"kYUMv","../ops/avg_pool_3d_grad":"bB1ll","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bB1ll:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool3dGrad",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./conv_util"),o=e("./operation"),n=e("./reshape");function c(l,u,p,h,g,v){const _=(0,m.convertToTensor)(l,"dy","avgPool3dGrad"),k=(0,m.convertToTensor)(u,"input","avgPool3dGrad");let y=_,x=k,b=!1;k.rank===4&&(b=!0,y=(0,n.reshape)(_,[1,_.shape[0],_.shape[1],_.shape[2],_.shape[3]]),x=(0,n.reshape)(k,[1,k.shape[0],k.shape[1],k.shape[2],k.shape[3]])),f.assert(y.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${y.rank}.`),f.assert(x.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${x.rank}.`),(0,i.checkPadOnDimRoundingMode)("avgPool3dGrad",g,v);const C={dy:y,input:x},w={filterSize:p,strides:h,pad:g,dimRoundingMode:v},N=r.ENGINE.runKernel(d.AvgPool3DGrad,C,w);return b?(0,n.reshape)(N,[N.shape[1],N.shape[2],N.shape[3],N.shape[4]]):N}const a=(0,o.op)({avgPool3dGrad_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fIBOt:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPoolGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/avg_pool_grad");const m={kernelName:r.AvgPool,inputsToSave:["x"],gradFunc:(f,i,o)=>{const[n]=i,{filterSize:c,strides:a,pad:l}=o;return{x:()=>(0,d.avgPoolGrad)(f,n,c,a,l)}}}},{"../kernel_names":"kYUMv","../ops/avg_pool_grad":"a0brf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],a0brf:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPoolGrad",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./operation"),o=e("./reshape");function n(a,l,u,p,h){const g=(0,m.convertToTensor)(a,"dy","avgPoolGrad"),v=(0,m.convertToTensor)(l,"input","avgPoolGrad");f.assert(v.rank===g.rank,()=>`Rank of input (${v.rank}) does not match rank of dy (${g.rank})`);let _=v,k=g,y=!1;v.rank===3&&(y=!0,_=(0,o.reshape)(v,[1,v.shape[0],v.shape[1],v.shape[2]]),k=(0,o.reshape)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),f.assert(k.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${k.rank}.`),f.assert(_.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${_.rank}.`);const x={dy:k,input:_},b={filterSize:u,strides:p,pad:h},C=r.ENGINE.runKernel(d.AvgPoolGrad,x,b);return y?(0,o.reshape)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}const c=(0,i.op)({avgPoolGrad_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iDk06:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchMatMulGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/mat_mul");const m={kernelName:r.BatchMatMul,inputsToSave:["a","b"],gradFunc:(f,i,o)=>{const[n,c]=i,{transposeA:a,transposeB:l}=o;return!a&&!l?{a:()=>(0,d.matMul)(f,c,!1,!0),b:()=>(0,d.matMul)(n,f,!0,!1)}:!a&&l?{a:()=>(0,d.matMul)(f,c,!1,!1),b:()=>(0,d.matMul)(f,n,!0,!1)}:a&&!l?{a:()=>(0,d.matMul)(c,f,!1,!0),b:()=>(0,d.matMul)(n,f,!1,!1)}:{a:()=>(0,d.matMul)(c,f,!0,!0),b:()=>(0,d.matMul)(f,n,!0,!0)}}}},{"../kernel_names":"kYUMv","../ops/mat_mul":"2iQjP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lJ7I3:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchToSpaceNDGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/space_to_batch_nd");const m={kernelName:r.BatchToSpaceND,gradFunc:(f,i,o)=>{const{blockShape:n,crops:c}=o;return{x:()=>(0,d.spaceToBatchND)(f,n,c)}}}},{"../kernel_names":"kYUMv","../ops/space_to_batch_nd":"hawyX","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gV0BI:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"broadcastToGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/sum");const m={kernelName:r.BroadcastTo,gradFunc:(f,i,o)=>{const n=o,c=n.inputShape,a=n.shape,l=Array.from(a);for(let p=c.length-1;p>=0;p--)if(c[p]===a[p])l[p]=1;else if(c[p]!==1)throw new Error(`broadcastTo(): [${c}] cannot be broadcast to [${a}].`);const u=[];for(let p=0;p<l.length;p++)l[p]>1&&u.push(p);return{x:()=>(0,d.sum)(f,u,!0)}}}},{"../kernel_names":"kYUMv","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9CtwI":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"castGradConfig",()=>d);var r=e("../kernel_names");const d={kernelName:r.Cast,gradFunc:m=>({x:()=>m.clone()})}},{"../kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kiYdf:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ceilGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.Ceil,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],a7a5T:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"clipByValueGradConfig",()=>n);var r=e("../kernel_names"),d=e("../ops/greater_equal"),m=e("../ops/less_equal"),f=e("../ops/logical_and"),i=e("../ops/where"),o=e("../ops/zeros_like");const n={kernelName:r.ClipByValue,inputsToSave:["x"],gradFunc:(c,a,l)=>{const[u]=a,{clipValueMin:p,clipValueMax:h}=l;return{x:()=>(0,i.where)((0,f.logicalAnd)((0,d.greaterEqual)(u,p),(0,m.lessEqual)(u,h)),c,(0,o.zerosLike)(c))}}}},{"../kernel_names":"kYUMv","../ops/greater_equal":"lCE2c","../ops/less_equal":"fNUcT","../ops/logical_and":"eqe0O","../ops/where":"c2TLR","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aNCs4:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"complexAbsGradConfig",()=>m);var r=e("../kernel_names"),d=e("./Abs_grad");const m={kernelName:r.ComplexAbs,inputsToSave:["x"],gradFunc:d.absGradConfig.gradFunc}},{"../kernel_names":"kYUMv","./Abs_grad":"eX5Wu","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],CAHaf:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concatGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/split"),m=e("../util");const f={kernelName:r.Concat,saveAllInputs:!0,gradFunc:(i,o,n)=>{const c=o.map(h=>h.shape),{axis:a}=n,l=(0,m.parseAxisParam)(a,o[0].shape)[0],u=c.map(h=>h[l]);return(0,d.split)(i,u,l).map(h=>()=>h)}}},{"../kernel_names":"kYUMv","../ops/split":"d81fP","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3Vr0x":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2DGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/conv2d_backprop_filter"),m=e("../ops/conv2d_backprop_input"),f=e("../ops/conv_util"),i=e("../util");const o={kernelName:r.Conv2D,inputsToSave:["x","filter"],gradFunc:(n,c,a)=>{const[l,u]=c,{dilations:p,strides:h,pad:g,dataFormat:v}=a;return i.assert(f.tupleValuesAreOne(p),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${p}'`),{x:()=>(0,m.conv2DBackpropInput)(l.shape,n,u,h,g,v),filter:()=>(0,d.conv2DBackpropFilter)(l,n,u.shape,h,g,v)}}}},{"../kernel_names":"kYUMv","../ops/conv2d_backprop_filter":"dETBL","../ops/conv2d_backprop_input":"dOfMZ","../ops/conv_util":"3jOAS","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b39ze:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2DBackpropInputGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/conv2d"),m=e("../ops/conv2d_backprop_filter");const f={kernelName:r.Conv2DBackpropInput,inputsToSave:["dy","filter"],gradFunc:(i,o,n)=>{const[c,a]=o,{strides:l,pad:u,dataFormat:p,dimRoundingMode:h}=n;return{dy:()=>(0,d.conv2d)(i,a,l,u,p,1,h),filter:()=>(0,m.conv2DBackpropFilter)(i,c,a.shape,l,u,p,h)}}}},{"../kernel_names":"kYUMv","../ops/conv2d":"yMZmx","../ops/conv2d_backprop_filter":"dETBL","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k2Mv7:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3DGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/conv3d_backprop_filter"),m=e("../ops/conv3d_backprop_input"),f=e("../ops/conv_util"),i=e("../util");const o={kernelName:r.Conv3D,inputsToSave:["x","filter"],gradFunc:(n,c,a)=>{const{dilations:l,strides:u,pad:p}=a;i.assert((0,f.tupleValuesAreOne)(l),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${l}'`);const[h,g]=c;return{x:()=>(0,m.conv3DBackpropInput)(h.shape,n,g,u,p),filter:()=>(0,d.conv3DBackpropFilter)(h,n,g.shape,u,p)}}}},{"../kernel_names":"kYUMv","../ops/conv3d_backprop_filter":"gkl40","../ops/conv3d_backprop_input":"hSoNv","../ops/conv_util":"3jOAS","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gkl40:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3DBackpropFilter",()=>n);var r=e("../engine"),d=e("../kernel_names"),m=e("../util"),f=e("./operation"),i=e("./reshape");function o(c,a,l,u,p){let h=c;c.rank===4&&(h=(0,i.reshape)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]));let g=a;g.rank===4&&(g=(0,i.reshape)(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),m.assert(h.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${h.shape}.`),m.assert(g.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${g.shape}.`),m.assert(l.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${l}.`),m.assert(h.shape[4]===l[3],()=>`Error in conv3dDerFilter: depth of input ${h.shape[4]}) must match input depth in filter (${l[3]}.`),m.assert(g.shape[4]===l[4],()=>`Error in conv3dDerFilter: depth of dy (${g.shape[4]}) must match output depth for filter (${l[4]}).`);const v={x:h,dy:g},_={strides:u,pad:p,filterShape:l};return r.ENGINE.runKernel(d.Conv3DBackpropFilterV2,v,_)}const n=(0,f.op)({conv3DBackpropFilter_:o})},{"../engine":"eID09","../kernel_names":"kYUMv","../util":"hQeVi","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2bPjX":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cosGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/mul"),f=e("../ops/neg"),i=e("../ops/sin");const o={kernelName:r.Cos,inputsToSave:["x"],gradFunc:(n,c)=>{const[a]=c;return{x:()=>(0,m.mul)((0,f.neg)((0,i.sin)((0,d.cast)(a,"float32"))),n)}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/mul":"kfDrf","../ops/neg":"gXSYm","../ops/sin":"6zeDO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4TLIP":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"coshGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/mul"),f=e("../ops/sinh");const i={kernelName:r.Cosh,inputsToSave:["x"],gradFunc:(o,n)=>{const[c]=n;return{x:()=>(0,m.mul)((0,f.sinh)((0,d.cast)(c,"float32")),o)}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/mul":"kfDrf","../ops/sinh":"emuxO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7md5I":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cumsumGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/axis_util"),m=e("../ops/cumsum"),f=e("../ops/transpose");const i={kernelName:r.Cumsum,inputsToSave:["x"],gradFunc:(o,n,c)=>{const[a]=n,{axis:l,exclusive:u,reverse:p}=c;return{x:()=>{const h=(0,d.getAxesPermutation)([l],a.rank);let g=(0,m.cumsum)(o,l,u,!p);return h!=null&&(g=(0,f.transpose)(g,h)),g}}}}},{"../kernel_names":"kYUMv","../ops/axis_util":"hf64X","../ops/cumsum":"3lap7","../ops/transpose":"iN8Um","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5GxWE":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNativeGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/conv_util"),m=e("../ops/depthwise_conv2d_native_backprop_filter"),f=e("../ops/depthwise_conv2d_native_backprop_input"),i=e("../util");const o={kernelName:r.DepthwiseConv2dNative,inputsToSave:["x","filter"],gradFunc:(n,c,a)=>{const{dilations:l,strides:u,pad:p,dimRoundingMode:h}=a,g=l??[1,1];i.assert(d.tupleValuesAreOne(g),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${g}'`);const[v,_]=c;return i.assert(v.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${v.rank}.`),i.assert(_.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${_.rank}.`),i.assert(v.shape[3]===_.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${v.shape[3]}) must match the inChannels dimension in filter ${_.shape[2]}.`),i.assert(d.eitherStridesOrDilationsAreOne(u,g),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${u} and dilations '${g}'.`),d.checkPadOnDimRoundingMode("depthwiseConv2d",p,h),{x:()=>(0,f.depthwiseConv2dNativeBackpropInput)(v.shape,n,_,u,p,g,h),filter:()=>(0,m.depthwiseConv2dNativeBackpropFilter)(v,n,_.shape,u,p,g,h)}}}},{"../kernel_names":"kYUMv","../ops/conv_util":"3jOAS","../ops/depthwise_conv2d_native_backprop_filter":"AN0q6","../ops/depthwise_conv2d_native_backprop_input":"k2U5j","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jJv6w:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"dilation2dGradConfig",()=>m);var r=e("../engine"),d=e("../kernel_names");const m={kernelName:d.Dilation2D,inputsToSave:["x","filter"],gradFunc:(f,i,o)=>{const[n,c]=i,a={x:n,filter:c,dy:f},l={x:n,filter:c,dy:f};return{x:()=>r.ENGINE.runKernel(d.Dilation2DBackpropInput,a,o),filter:()=>r.ENGINE.runKernel(d.Dilation2DBackpropFilter,l,o)}}}},{"../engine":"eID09","../kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jYupY:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"eluGradConfig",()=>m);var r=e("../engine"),d=e("../kernel_names");const m={kernelName:d.Elu,outputsToSave:[!0],gradFunc:(f,i)=>{const[o]=i,n={dy:f,y:o};return{x:()=>r.ENGINE.runKernel(d.EluGrad,n)}}}},{"../engine":"eID09","../kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7NrJ7":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"erfGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/exp"),m=e("../ops/mul"),f=e("../ops/neg"),i=e("../ops/square");const o={kernelName:r.Erf,inputsToSave:["x"],gradFunc:(n,c)=>{const[a]=c,l=(0,m.mul)((0,d.exp)((0,f.neg)((0,i.square)(a))),2/Math.sqrt(Math.PI));return{x:()=>(0,m.mul)(n,l)}}}},{"../kernel_names":"kYUMv","../ops/exp":"8j9Nl","../ops/mul":"kfDrf","../ops/neg":"gXSYm","../ops/square":"6AZak","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kXeQ2:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/mul");const m={kernelName:r.Exp,outputsToSave:[!0],gradFunc:(f,i)=>{const[o]=i;return{x:()=>(0,d.mul)(f,o)}}}},{"../kernel_names":"kYUMv","../ops/mul":"kfDrf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"48hiK":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expandDimsGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/reshape");const m={kernelName:r.ExpandDims,inputsToSave:["input"],gradFunc:(f,i)=>{const[o]=i;return{input:()=>(0,d.reshape)(f,o.shape)}}}},{"../kernel_names":"kYUMv","../ops/reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"93NlH":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expm1GradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/exp"),m=e("../ops/mul");const f={kernelName:r.Expm1,inputsToSave:["x"],gradFunc:(i,o)=>{const[n]=o;return{x:()=>(0,m.mul)(i,(0,d.exp)(n))}}}},{"../kernel_names":"kYUMv","../ops/exp":"8j9Nl","../ops/mul":"kfDrf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9lu7Y":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"floorGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.Floor,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6J79D":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"floorDivGradConfig",()=>l);var r=e("../kernel_names"),d=e("../ops/broadcast_util"),m=e("../ops/cast"),f=e("../ops/div"),i=e("../ops/mul"),o=e("../ops/neg"),n=e("../ops/reshape"),c=e("../ops/square"),a=e("../ops/sum");const l={kernelName:r.FloorDiv,inputsToSave:["a","b"],gradFunc:(u,p)=>{const[h,g]=p,v=(0,d.assertAndGetBroadcastShape)(h.shape,g.shape);return{a:()=>{const y=(0,f.div)(u,(0,m.cast)(g,"float32")),x=(0,d.getReductionAxes)(h.shape,v);return x.length>0?(0,n.reshape)((0,a.sum)(y,x),h.shape):y},b:()=>{let y=(0,i.mul)(u,(0,m.cast)(h,"float32"));const x=(0,d.getReductionAxes)(g.shape,v);x.length>0&&(y=(0,n.reshape)((0,a.sum)(y,x),g.shape));const b=(0,c.square)(g);return(0,o.neg)((0,f.div)(y,(0,m.cast)(b,"float32")))}}}}},{"../kernel_names":"kYUMv","../ops/broadcast_util":"lfnGK","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/neg":"gXSYm","../ops/reshape":"5iOnm","../ops/square":"6AZak","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"23f4o":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fusedBatchNormGradConfig",()=>u);var r=e("../kernel_names"),d=e("../ops/add"),m=e("../ops/broadcast_util"),f=e("../ops/mul"),i=e("../ops/reshape"),o=e("../ops/rsqrt"),n=e("../ops/scalar"),c=e("../ops/sub"),a=e("../ops/sum"),l=e("../ops/tile");const u={kernelName:r.FusedBatchNorm,inputsToSave:["x","mean","variance","scale"],gradFunc:(p,h,g)=>{const{varianceEpsilon:v}=g,[_,k,y,x]=h,b=x??(0,n.scalar)(1),C=(0,m.getReductionAxes)(k.shape,_.shape),w=[];if(k.rank===1){for(let P=0;P<_.shape.length-1;++P)w.push(_.shape[P]);w.push(1)}const N=(0,c.sub)(_,k),T=(0,f.mul)(p,b),F=(0,o.rsqrt)((0,d.add)(y,(0,n.scalar)(v))),S=(0,f.mul)((0,f.mul)((0,f.mul)(F,F),F),(0,n.scalar)(-.5));return{x:()=>k.rank===1?(0,i.reshape)((0,f.mul)((0,f.mul)(p,(0,l.tile)((0,i.reshape)(F,[1,1,1,k.shape[0]]),w)),b),_.shape):(0,i.reshape)((0,f.mul)((0,f.mul)(p,F),b),_.shape),mean:()=>{let P=(0,f.mul)((0,f.mul)(F,(0,n.scalar)(-1)),T);return k.rank===1&&(P=(0,a.sum)(P,C)),(0,i.reshape)(P,k.shape)},variance:()=>{let P=(0,f.mul)((0,f.mul)(S,N),T);return k.rank===1&&(P=(0,a.sum)(P,C)),(0,i.reshape)(P,k.shape)},scale:()=>{const P=(0,f.mul)(N,F);let R=(0,f.mul)(p,P);return k.rank===1&&(R=(0,a.sum)(R,C)),(0,i.reshape)(R,k.shape)},offset:()=>{let P=p;return k.rank===1&&(P=(0,a.sum)(P,C)),(0,i.reshape)(P,k.shape)}}}}},{"../kernel_names":"kYUMv","../ops/add":"2ocTD","../ops/broadcast_util":"lfnGK","../ops/mul":"kfDrf","../ops/reshape":"5iOnm","../ops/rsqrt":"h2SJp","../ops/scalar":"1SA7b","../ops/sub":"ihs7S","../ops/sum":"8K3V0","../ops/tile":"j34EP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7R4VR":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gatherGradConfig",()=>n);var r=e("../kernel_names"),d=e("../ops/axis_util"),m=e("../ops/reshape"),f=e("../ops/transpose"),i=e("../ops/unsorted_segment_sum"),o=e("../util");const n={kernelName:r.GatherV2,inputsToSave:["x","indices"],gradFunc:(l,u,p)=>{const[h,g]=u,{axis:v}=p,_=(0,o.parseAxisParam)(v,h.shape)[0];return{x:()=>{const y=h.shape,x=g.size,b=y.slice(0,_),C=b.length,w=y.slice(v,y.length).slice(1),N=w.length,T=c(0,C),F=c(C+1,C+1+N),S=a([b,[x],w]),I=(0,m.reshape)(l,S),j=(0,m.reshape)(g,[x]),D=a([[C],T,F]),O=(0,f.transpose)(I,D);let $=(0,i.unsortedSegmentSum)(O,j,h.shape[_]);const P=(0,d.getUndoAxesPermutation)(D);return $=(0,f.transpose)($,P),$},indices:()=>g}}};function c(l,u){const p=[];for(let h=l;h<u;++h)p.push(h);return p}function a(l){const u=[];for(let p=0;p<l.length;++p)for(let h=0;h<l[p].length;++h)u.push(l[p][h]);return u}},{"../kernel_names":"kYUMv","../ops/axis_util":"hf64X","../ops/reshape":"5iOnm","../ops/transpose":"iN8Um","../ops/unsorted_segment_sum":"f19re","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1XXdI":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"greaterEqualGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.GreaterEqual,inputsToSave:["a","b"],gradFunc:(f,i)=>{const[o,n]=i;return{a:()=>(0,d.zerosLike)(o),b:()=>(0,d.zerosLike)(n)}}}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1MTG1":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"identityGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/cast");const m={kernelName:r.Identity,gradFunc:f=>({x:()=>(0,d.cast)(f,"float32")})}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cv4vV:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isFiniteGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.IsFinite,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cvjgc:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isInfGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.IsInf,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],a7uTl:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isNanGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.IsNan,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4m6Cv":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"leakyReluGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/greater"),m=e("../ops/mul"),f=e("../ops/where");const i={kernelName:r.LeakyRelu,inputsToSave:["x"],gradFunc:(o,n,c)=>{const[a]=n,{alpha:l}=c,u=(0,d.greater)(a,0);return{x:()=>(0,f.where)(u,o,(0,m.mul)(o,l))}}}},{"../kernel_names":"kYUMv","../ops/greater":"kEWCa","../ops/mul":"kfDrf","../ops/where":"c2TLR","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8CQZY":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"log1pGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/add"),m=e("../ops/div");const f={kernelName:r.Log1p,inputsToSave:["x"],gradFunc:(i,o)=>{const[n]=o;return{x:()=>(0,m.div)(i,(0,d.add)(n,1))}}}},{"../kernel_names":"kYUMv","../ops/add":"2ocTD","../ops/div":"4BOnP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6omLe":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/div");const f={kernelName:r.Log,inputsToSave:["x"],gradFunc:(i,o)=>{const[n]=o;return{x:()=>(0,m.div)(i,(0,d.cast)(n,"float32"))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/div":"4BOnP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5tAN8":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logSoftmaxGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/exp"),m=e("../ops/mul"),f=e("../ops/sub"),i=e("../ops/sum");const o={kernelName:r.LogSoftmax,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,c,a)=>{const[l]=c,{axis:u}=a;return{logits:()=>{const p=!0,h=(0,d.exp)(l);return(0,f.sub)(n,(0,m.mul)((0,i.sum)(n,u,p),h))}}}}},{"../kernel_names":"kYUMv","../ops/exp":"8j9Nl","../ops/mul":"kfDrf","../ops/sub":"ihs7S","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aBcrY:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lrnGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/local_response_normalization_backprop");const m={kernelName:r.LRN,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(f,i,o)=>{const[n,c]=i,{depthRadius:a,bias:l,alpha:u,beta:p}=o;return{x:()=>(0,d.localResponseNormalizationBackprop)(n,c,f,a,l,u,p)}}}},{"../kernel_names":"kYUMv","../ops/local_response_normalization_backprop":"8kCQm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8kCQm":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"localResponseNormalizationBackprop",()=>i);var r=e("../engine"),d=e("../kernel_names"),m=e("./operation");function f(o,n,c,a=5,l=1,u=1,p=.5){const h={x:o,y:n,dy:c},g={depthRadius:a,bias:l,alpha:u,beta:p};return r.ENGINE.runKernel(d.LRNGrad,h,g)}const i=(0,m.op)({localResponseNormalizationBackprop_:f})},{"../engine":"eID09","../kernel_names":"kYUMv","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bto1A:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxGradConfig",()=>f);var r=e("../kernel_names"),d=e("../util"),m=e("./min_max_grad_util");const f={kernelName:r.Max,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,o,n)=>{const c=n,{reductionIndices:a}=c,l=o[0],u=o[1],p=d.parseAxisParam(a,l.shape),h=(0,m.gradForMinAndMax)(i,u,l,p);return{x:()=>h.x()}}}},{"../kernel_names":"kYUMv","../util":"hQeVi","./min_max_grad_util":"1yfoh","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1yfoh":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gradForMinAndMax",()=>o);var r=e("../ops/axis_util"),d=e("../ops/cast"),m=e("../ops/equal"),f=e("../ops/mul"),i=e("../ops/reshape");function o(n,c,a,l){return c.rank<a.rank&&(c=(0,i.reshape)(c,r.expandShapeToKeepDim(c.shape,l))),n.rank<a.rank&&(n=(0,i.reshape)(n,r.expandShapeToKeepDim(n.shape,l))),{x:()=>(0,f.mul)(n,(0,d.cast)((0,m.equal)(a,c),n.dtype))}}},{"../ops/axis_util":"hf64X","../ops/cast":"eaOhx","../ops/equal":"9t9zd","../ops/mul":"kfDrf","../ops/reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"68gQp":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maximumGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/greater_equal"),f=e("../ops/less"),i=e("../ops/mul");const o={kernelName:r.Maximum,inputsToSave:["a","b"],gradFunc:(n,c)=>{const[a,l]=c;return{a:()=>(0,i.mul)(n,(0,d.cast)((0,m.greaterEqual)(a,l),"float32")),b:()=>(0,i.mul)(n,(0,d.cast)((0,f.less)(a,l),"float32"))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/greater_equal":"lCE2c","../ops/less":"gvtbk","../ops/mul":"kfDrf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],f1i0m:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool3DGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/max_pool_3d_grad");const m={kernelName:r.MaxPool3D,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(f,i,o)=>{const[n,c]=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:p}=o;return{x:()=>(0,d.maxPool3dGrad)(f,n,c,a,l,u,p)}}}},{"../kernel_names":"kYUMv","../ops/max_pool_3d_grad":"d5Ywq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d5Ywq:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool3dGrad",()=>a);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./conv_util"),o=e("./operation"),n=e("./reshape");function c(l,u,p,h,g,v,_){const k=(0,m.convertToTensor)(l,"dy","maxPool3dGrad"),y=(0,m.convertToTensor)(u,"input","maxPool3dGrad"),x=(0,m.convertToTensor)(p,"output","maxPool3dGrad");let b=k,C=y,w=x,N=!1;y.rank===4&&(N=!0,b=(0,n.reshape)(k,[1,k.shape[0],k.shape[1],k.shape[2],k.shape[3]]),C=(0,n.reshape)(y,[1,y.shape[0],y.shape[1],y.shape[2],y.shape[3]]),w=(0,n.reshape)(x,[1,x.shape[0],x.shape[1],x.shape[2],x.shape[3]])),f.assert(b.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${b.rank}.`),f.assert(C.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${C.rank}.`),f.assert(w.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${w.rank}.`),(0,i.checkPadOnDimRoundingMode)("maxPool3dGrad",v,_);const T={dy:b,input:C,output:w},F={filterSize:h,strides:g,pad:v,dimRoundingMode:_},S=r.ENGINE.runKernel(d.MaxPool3DGrad,T,F);return N?(0,n.reshape)(S,[S.shape[1],S.shape[2],S.shape[3],S.shape[4]]):S}const a=(0,o.op)({maxPool3dGrad_:c})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","./reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],efUrA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/max_pool_grad");const m={kernelName:r.MaxPool,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(f,i,o)=>{const[n,c]=i,{filterSize:a,strides:l,pad:u}=o;return{x:()=>(0,d.maxPoolGrad)(f,n,c,a,l,u)}}}},{"../kernel_names":"kYUMv","../ops/max_pool_grad":"gTHNx","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gTHNx:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolGrad",()=>c);var r=e("../engine"),d=e("../kernel_names"),m=e("../tensor_util_env"),f=e("../util"),i=e("./conv_util"),o=e("./operation");function n(a,l,u,p,h,g,v){const _=(0,m.convertToTensor)(a,"dy","maxPoolGrad"),k=(0,m.convertToTensor)(l,"input","maxPoolGrad"),y=(0,m.convertToTensor)(u,"output","maxPoolGrad");f.assert(k.rank===_.rank,()=>`Rank of input (${k.rank}) does not match rank of dy (${_.rank})`),f.assert(_.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${_.rank}.`),f.assert(k.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${k.rank}.`),i.checkPadOnDimRoundingMode("maxPoolGrad",g,v);const x={dy:_,input:k,output:y},b={filterSize:p,strides:h,pad:g,dimRoundingMode:v};return r.ENGINE.runKernel(d.MaxPoolGrad,x,b)}const c=(0,o.op)({maxPoolGrad_:n})},{"../engine":"eID09","../kernel_names":"kYUMv","../tensor_util_env":"1FegS","../util":"hQeVi","./conv_util":"3jOAS","./operation":"5CKbF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],elQ43:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"meanGradConfig",()=>c);var r=e("../kernel_names"),d=e("../ops/axis_util"),m=e("../ops/div"),f=e("../ops/mul"),i=e("../ops/ones"),o=e("../ops/reshape"),n=e("../util");const c={kernelName:r.Mean,inputsToSave:["x"],gradFunc:(a,l,u)=>{const[p]=l,{axis:h}=u,g=n.parseAxisParam(h,p.shape),_=(0,d.computeOutAndReduceShapes)(p.shape,g)[1],k=n.sizeFromShape(_);return{x:()=>{const x=p.shape.slice();g.forEach(w=>{x[w]=1});const b=(0,o.reshape)(a,x);return(0,m.div)((0,f.mul)(b,(0,i.ones)(p.shape,"float32")),k)}}}}},{"../kernel_names":"kYUMv","../ops/axis_util":"hf64X","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/ones":"cjU7J","../ops/reshape":"5iOnm","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gXDcZ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"minGradConfig",()=>f);var r=e("../kernel_names"),d=e("../util"),m=e("./min_max_grad_util");const f={kernelName:r.Min,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,o,n)=>{const c=n,{axis:a}=c,[l,u]=o,p=d.parseAxisParam(a,l.shape),h=(0,m.gradForMinAndMax)(i,u,l,p);return{x:()=>h.x()}}}},{"../kernel_names":"kYUMv","../util":"hQeVi","./min_max_grad_util":"1yfoh","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3p0ZS":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"minimumGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/greater"),f=e("../ops/less_equal"),i=e("../ops/mul");const o={kernelName:r.Minimum,inputsToSave:["a","b"],gradFunc:(n,c)=>{const[a,l]=c;return{a:()=>(0,i.mul)(n,(0,d.cast)((0,f.lessEqual)(a,l),"float32")),b:()=>(0,i.mul)(n,(0,d.cast)((0,m.greater)(a,l),"float32"))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/greater":"kEWCa","../ops/less_equal":"fNUcT","../ops/mul":"kfDrf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3ebeH":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mirrorPadGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/slice");const m={kernelName:r.MirrorPad,inputsToSave:["x"],gradFunc:(f,i,o)=>{const n=i[0],{paddings:c}=o,a=c.map(l=>l[0]);return{x:()=>(0,d.slice)(f,a,n.shape)}}}},{"../kernel_names":"kYUMv","../ops/slice":"9qYv4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2WqVg":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"modGradConfig",()=>a);var r=e("../kernel_names"),d=e("../ops/broadcast_util"),m=e("../ops/div"),f=e("../ops/floor"),i=e("../ops/mul"),o=e("../ops/neg"),n=e("../ops/reshape"),c=e("../ops/sum");const a={kernelName:r.Mod,inputsToSave:["a","b"],gradFunc:(l,u)=>{const[p,h]=u,g=(0,d.assertAndGetBroadcastShape)(p.shape,h.shape);return{a:()=>{const k=(0,d.getReductionAxes)(p.shape,g);return k.length>0?(0,n.reshape)((0,c.sum)(l,k),p.shape):l},b:()=>{const k=(0,i.mul)(l,(0,o.neg)((0,f.floor)((0,m.div)(p,h)))),y=(0,d.getReductionAxes)(h.shape,g);return y.length>0?(0,n.reshape)((0,c.sum)(k,y),h.shape):k}}}}},{"../kernel_names":"kYUMv","../ops/broadcast_util":"lfnGK","../ops/div":"4BOnP","../ops/floor":"290Z3","../ops/mul":"kfDrf","../ops/neg":"gXSYm","../ops/reshape":"5iOnm","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fkXZo:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"multiplyGradConfig",()=>n);var r=e("../kernel_names"),d=e("../ops/broadcast_util"),m=e("../ops/cast"),f=e("../ops/mul"),i=e("../ops/reshape"),o=e("../ops/sum");const n={kernelName:r.Multiply,inputsToSave:["a","b"],gradFunc:(c,a)=>{const[l,u]=a,p=(0,d.assertAndGetBroadcastShape)(l.shape,u.shape);return{a:()=>{const v=(0,f.mul)(c,(0,m.cast)(u,"float32")),_=(0,d.getReductionAxes)(l.shape,p);return _.length>0?(0,i.reshape)((0,o.sum)(v,_),l.shape):v},b:()=>{const v=(0,f.mul)(c,(0,m.cast)(l,"float32")),_=(0,d.getReductionAxes)(u.shape,p);return _.length>0?(0,i.reshape)((0,o.sum)(v,_),u.shape):v}}}}},{"../kernel_names":"kYUMv","../ops/broadcast_util":"lfnGK","../ops/cast":"eaOhx","../ops/mul":"kfDrf","../ops/reshape":"5iOnm","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7TpqJ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"negGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/neg");const m={kernelName:r.Neg,gradFunc:f=>({x:()=>(0,d.neg)(f)})}},{"../kernel_names":"kYUMv","../ops/neg":"gXSYm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9zQjk":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"oneHotGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros");const m={kernelName:r.OneHot,inputsToSave:["indices"],gradFunc:(f,i)=>{const o=i[0];return{indices:()=>(0,d.zeros)(o.shape,"float32")}}}},{"../kernel_names":"kYUMv","../ops/zeros":"lWQu4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9fYuF":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"onesLikeGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.OnesLike,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dPJzv:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"packGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/unstack");const m={kernelName:r.Pack,saveAllInputs:!0,gradFunc:(f,i,o)=>{const{axis:n}=o;return(0,d.unstack)(f,n).map(a=>()=>a)}}},{"../kernel_names":"kYUMv","../ops/unstack":"eKCnA","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gjUKg:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"padV2GradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/slice");const m={kernelName:r.PadV2,inputsToSave:["x"],gradFunc:(f,i,o)=>{const n=i[0],{paddings:c}=o,a=c.map(l=>l[0]);return{x:()=>(0,d.slice)(f,a,n.shape)}}}},{"../kernel_names":"kYUMv","../ops/slice":"9qYv4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lK2uh:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"powGradConfig",()=>g);var r=e("../kernel_names"),d=e("../ops/broadcast_util"),m=e("../ops/cast"),f=e("../ops/greater"),i=e("../ops/log"),o=e("../ops/mul"),n=e("../ops/pow"),c=e("../ops/reshape"),a=e("../ops/scalar"),l=e("../ops/sub"),u=e("../ops/sum"),p=e("../ops/where"),h=e("../ops/zeros_like");const g={kernelName:r.Pow,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(v,_)=>{const[k,y,x]=_,b=k,C=y,w=d.assertAndGetBroadcastShape(b.shape,C.shape);return{a:()=>{const F=(0,m.cast)(C,"float32");let S=(0,o.mul)(v,(0,o.mul)(F,(0,n.pow)(b,(0,l.sub)(F,(0,a.scalar)(1)))));const I=d.getReductionAxes(b.shape,w);return I.length>0&&(S=(0,u.sum)(S,I)),(0,c.reshape)(S,b.shape)},b:()=>{const F=(0,f.greater)(b,0),S=(0,p.where)(F,(0,i.log)(b),(0,h.zerosLike)(b));let I=(0,o.mul)(v,(0,o.mul)(x,S));const j=d.getReductionAxes(C.shape,w);return j.length>0&&(I=(0,u.sum)(I,j)),(0,c.reshape)(I,C.shape)}}}}},{"../kernel_names":"kYUMv","../ops/broadcast_util":"lfnGK","../ops/cast":"eaOhx","../ops/greater":"kEWCa","../ops/log":"2y0F2","../ops/mul":"kfDrf","../ops/pow":"hg0HR","../ops/reshape":"5iOnm","../ops/scalar":"1SA7b","../ops/sub":"ihs7S","../ops/sum":"8K3V0","../ops/where":"c2TLR","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eEbHE:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"preluGradConfig",()=>a);var r=e("../kernel_names"),d=e("../ops/broadcast_util"),m=e("../ops/greater"),f=e("../ops/mul"),i=e("../ops/reshape"),o=e("../ops/sum"),n=e("../ops/where"),c=e("../ops/zeros_like");const a={kernelName:r.Prelu,inputsToSave:["x","alpha"],gradFunc:(l,u)=>{const[p,h]=u,g=(0,m.greater)(p,0);return{x:()=>(0,n.where)(g,l,(0,f.mul)(l,h)),alpha:()=>{let v=(0,n.where)(g,(0,c.zerosLike)(l),(0,f.mul)(l,p));const _=(0,d.getReductionAxes)(h.shape,l.shape);return _.length>0&&(v=(0,o.sum)(v,_)),(0,i.reshape)(v,h.shape)}}}}},{"../kernel_names":"kYUMv","../ops/broadcast_util":"lfnGK","../ops/greater":"kEWCa","../ops/mul":"kfDrf","../ops/reshape":"5iOnm","../ops/sum":"8K3V0","../ops/where":"c2TLR","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],vlTkL:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"prodGradConfig",()=>a);var r=e("../base"),d=e("../kernel_names"),m=e("../ops/cumprod"),f=e("../ops/mul"),i=e("../ops/reshape"),o=e("../ops/transpose");function n(l,u,p){const h=l.shape.slice();h[p]=1;const g=(0,i.reshape)(u,h),v=(0,m.cumprod)(l,p,!0,!1),_=(0,m.cumprod)(l,p,!0,!0),k=(0,f.mul)(v,_);return(0,f.mul)(g,k)}function c(l,u,p){const h=l.shape.length,g=h-p.length,v=r.backend_util.getAxesPermutation(p,h);let _=l;v!=null&&(_=(0,o.transpose)(l,v));const k=_.shape.slice(),x=k.splice(h-p.length,p.length).reduce((w,N)=>w*N,1);k.push(x);const b=_.reshape(k);let C=n(b,u,g);if(C=C.reshape(_.shape),v!=null){const w=r.backend_util.getUndoAxesPermutation(v);C=(0,o.transpose)(C,w)}return C}const a={kernelName:d.Prod,inputsToSave:["x"],gradFunc:(l,u,p)=>{const[h]=u,{axis:g}=p;let v=[];return g==null?v=h.shape.map((_,k)=>k):typeof g=="number"?v=[g]:v=g,{x:()=>c(h,l,v)}}}},{"../base":"apsUi","../kernel_names":"kYUMv","../ops/cumprod":"1DIHN","../ops/mul":"kfDrf","../ops/reshape":"5iOnm","../ops/transpose":"iN8Um","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gfQMC:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"divGradConfig",()=>l);var r=e("../kernel_names"),d=e("../ops/broadcast_util"),m=e("../ops/cast"),f=e("../ops/div"),i=e("../ops/mul"),o=e("../ops/neg"),n=e("../ops/reshape"),c=e("../ops/square"),a=e("../ops/sum");const l={kernelName:r.RealDiv,inputsToSave:["a","b"],gradFunc:(u,p)=>{const[h,g]=p,v=d.assertAndGetBroadcastShape(h.shape,g.shape);return{a:()=>{const y=(0,f.div)(u,(0,m.cast)(g,"float32")),x=d.getReductionAxes(h.shape,v);return x.length>0?(0,n.reshape)((0,a.sum)(y,x),h.shape):y},b:()=>{let y=(0,i.mul)(u,(0,m.cast)(h,"float32"));const x=d.getReductionAxes(g.shape,v);x.length>0&&(y=(0,n.reshape)((0,a.sum)(y,x),g.shape));const b=(0,c.square)(g);return(0,o.neg)((0,f.div)(y,(0,m.cast)(b,"float32")))}}}}},{"../kernel_names":"kYUMv","../ops/broadcast_util":"lfnGK","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/neg":"gXSYm","../ops/reshape":"5iOnm","../ops/square":"6AZak","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fTCBo:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reciprocalGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/div"),m=e("../ops/neg"),f=e("../ops/square");const i={kernelName:r.Reciprocal,inputsToSave:["x"],gradFunc:(o,n)=>{const[c]=n;return{x:()=>(0,d.div)(o,(0,m.neg)((0,f.square)(c)))}}}},{"../kernel_names":"kYUMv","../ops/div":"4BOnP","../ops/neg":"gXSYm","../ops/square":"6AZak","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hYJlP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"relu6GradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/less_equal"),f=e("../ops/mul"),i=e("../ops/step");const o={kernelName:r.Relu6,inputsToSave:["x"],gradFunc:(n,c)=>{const[a]=c,l=(0,f.mul)((0,m.lessEqual)(a,6),(0,i.step)(a));return{x:()=>(0,f.mul)(n,(0,d.cast)(l,"float32"))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/less_equal":"fNUcT","../ops/mul":"kfDrf","../ops/step":"89RLy","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dSd16:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reluGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/mul"),f=e("../ops/step");const i={kernelName:r.Relu,inputsToSave:["x"],gradFunc:(o,n)=>{const[c]=n;return{x:()=>(0,m.mul)(o,(0,d.cast)((0,f.step)(c),"float32"))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/mul":"kfDrf","../ops/step":"89RLy","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"86NWU":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reshapeGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/reshape");const m={kernelName:r.Reshape,inputsToSave:["x"],gradFunc:(f,i)=>{const[o]=i;return{x:()=>(0,d.reshape)(f,o.shape)}}}},{"../kernel_names":"kYUMv","../ops/reshape":"5iOnm","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iWELZ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeBilinearGradConfig",()=>m);var r=e("../engine"),d=e("../kernel_names");const m={kernelName:d.ResizeBilinear,inputsToSave:["images"],gradFunc:(f,i,o)=>{const[n]=i,c={dy:f,images:n};return{images:()=>r.ENGINE.runKernel(d.ResizeBilinearGrad,c,o)}}}},{"../engine":"eID09","../kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hqg9o:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeNearestNeighborGradConfig",()=>m);var r=e("../engine"),d=e("../kernel_names");const m={kernelName:d.ResizeNearestNeighbor,inputsToSave:["images"],gradFunc:(f,i,o)=>{const[n]=i,c={dy:f,images:n};return{images:()=>r.ENGINE.runKernel(d.ResizeNearestNeighborGrad,c,o)}}}},{"../engine":"eID09","../kernel_names":"kYUMv","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6cnTo":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reverseGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/reverse"),m=e("../util");const f={kernelName:r.Reverse,gradFunc:(i,o,n)=>{const{dims:c}=n,a=(0,m.parseAxisParam)(c,i.shape);return{x:()=>(0,d.reverse)(i,a)}}}},{"../kernel_names":"kYUMv","../ops/reverse":"aNxZz","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"569Uc":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"roundGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.Round,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"14n3D":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rsqrtGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/div"),m=e("../ops/mul"),f=e("../ops/neg"),i=e("../ops/pow");const o={kernelName:r.Rsqrt,inputsToSave:["x"],gradFunc:(n,c)=>{const[a]=c;return{x:()=>(0,f.neg)((0,d.div)(n,(0,m.mul)((0,i.pow)(a,1.5),2)))}}}},{"../kernel_names":"kYUMv","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/neg":"gXSYm","../ops/pow":"hg0HR","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2KxDe":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"selectGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/logical_not"),f=e("../ops/mul"),i=e("../ops/zeros_like");const o={kernelName:r.Select,inputsToSave:["condition"],gradFunc:(n,c)=>{const[a]=c;return{condition:()=>(0,d.cast)((0,i.zerosLike)(a),"float32"),t:()=>(0,f.mul)(n,(0,d.cast)(a,n.dtype)),e:()=>(0,f.mul)(n,(0,d.cast)((0,m.logicalNot)(a),n.dtype))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/logical_not":"hZuGz","../ops/mul":"kfDrf","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"92cch":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"seluGradConfig",()=>a);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/exp"),f=e("../ops/greater"),i=e("../ops/mul"),o=e("../ops/scalar"),n=e("../ops/selu_util"),c=e("../ops/where");const a={kernelName:r.Selu,inputsToSave:["x"],gradFunc:(l,u)=>{const[p]=u;return{x:()=>{const h=(0,f.greater)(p,(0,o.scalar)(0)),g=(0,o.scalar)(n.SELU_SCALEALPHA),v=(0,o.scalar)(n.SELU_SCALE),_=(0,i.mul)(l,v),k=(0,i.mul)((0,i.mul)(l,g),(0,m.exp)((0,d.cast)(p,"float32")));return(0,c.where)(h,_,k)}}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/exp":"8j9Nl","../ops/greater":"kEWCa","../ops/mul":"kfDrf","../ops/scalar":"1SA7b","../ops/selu_util":"9LoWe","../ops/where":"c2TLR","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6MKdx":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sigmoidGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/mul"),m=e("../ops/scalar"),f=e("../ops/sub");const i={kernelName:r.Sigmoid,outputsToSave:[!0],gradFunc:(o,n)=>{const[c]=n;return{x:()=>(0,d.mul)(o,(0,d.mul)(c,(0,f.sub)((0,m.scalar)(1),c)))}}}},{"../kernel_names":"kYUMv","../ops/mul":"kfDrf","../ops/scalar":"1SA7b","../ops/sub":"ihs7S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hDqSd:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"signGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.Sign,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],clx1w:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sinGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/cos"),f=e("../ops/mul");const i={kernelName:r.Sin,inputsToSave:["x"],gradFunc:(o,n)=>{const[c]=n;return{x:()=>(0,f.mul)((0,m.cos)((0,d.cast)(c,"float32")),o)}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/cos":"5CQ2v","../ops/mul":"kfDrf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bziiI:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sinhGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/cosh"),f=e("../ops/mul");const i={kernelName:r.Sinh,inputsToSave:["x"],gradFunc:(o,n)=>{const[c]=n;return{x:()=>(0,f.mul)((0,m.cosh)((0,d.cast)(c,"float32")),o)}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/cosh":"7OBbg","../ops/mul":"kfDrf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g8Dfi:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sliceGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/pad"),m=e("../ops/slice_util");const f={kernelName:r.Slice,inputsToSave:["x"],gradFunc:(i,o,n)=>{const[c]=o,{begin:a,size:l}=n,u=c.shape,[p,h]=(0,m.parseSliceParams)(c,a,l),g=[];for(let v=0;v<i.rank;v++)g.push([p[v],u[v]-p[v]-h[v]]);return{x:()=>(0,d.pad)(i,g)}}}},{"../kernel_names":"kYUMv","../ops/pad":"30COC","../ops/slice_util":"j7Apq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"39TF6":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softmaxGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/mul"),m=e("../ops/sub"),f=e("../ops/sum");const i={kernelName:r.Softmax,outputsToSave:[!0],gradFunc:(o,n,c)=>{const[a]=n,{dim:l}=c,u=!0,p=(0,d.mul)(o,a);return{logits:()=>(0,m.sub)(p,(0,d.mul)((0,f.sum)(p,[l],u),a))}}}},{"../kernel_names":"kYUMv","../ops/mul":"kfDrf","../ops/sub":"ihs7S","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jy1mx:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softplusGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/mul"),m=e("../ops/sigmoid");const f={kernelName:r.Softplus,inputsToSave:["x"],gradFunc:(i,o)=>{const[n]=o;return{x:()=>(0,d.mul)(i,(0,m.sigmoid)(n))}}}},{"../kernel_names":"kYUMv","../ops/mul":"kfDrf","../ops/sigmoid":"atwNP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jPwJI:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"spaceToBatchNDGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/batch_to_space_nd");const m={kernelName:r.SpaceToBatchND,gradFunc:(f,i,o)=>{const{blockShape:n,paddings:c}=o;return{x:()=>(0,d.batchToSpaceND)(f,n,c)}}}},{"../kernel_names":"kYUMv","../ops/batch_to_space_nd":"8SWXq","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hphaM:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"splitVGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/concat");const m={kernelName:r.SplitV,gradFunc:(f,i,o)=>{const{axis:n}=o;return{x:()=>(0,d.concat)(f,n)}}}},{"../kernel_names":"kYUMv","../ops/concat":"bZcSO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dCXiv:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sqrtGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/div"),f=e("../ops/mul"),i=e("../ops/sqrt");const o={kernelName:r.Sqrt,inputsToSave:["x"],gradFunc:(n,c)=>{const[a]=c;return{x:()=>(0,m.div)(n,(0,f.mul)((0,i.sqrt)((0,d.cast)(a,"float32")),2))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/div":"4BOnP","../ops/mul":"kfDrf","../ops/sqrt":"VUCvx","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8480x":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"squareGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/cast"),m=e("../ops/mul");const f={kernelName:r.Square,inputsToSave:["x"],gradFunc:(i,o)=>{const[n]=o;return{x:()=>(0,m.mul)(i,(0,m.mul)((0,d.cast)(n,"float32"),2))}}}},{"../kernel_names":"kYUMv","../ops/cast":"eaOhx","../ops/mul":"kfDrf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],akEAY:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"squaredDifferenceGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/mul"),m=e("../ops/scalar"),f=e("../ops/sub");const i={kernelName:r.SquaredDifference,inputsToSave:["a","b"],gradFunc:(o,n)=>{const[c,a]=n,l=(0,m.scalar)(2);return{a:()=>(0,d.mul)(o,(0,d.mul)(l,(0,f.sub)(c,a))),b:()=>(0,d.mul)(o,(0,d.mul)(l,(0,f.sub)(a,c)))}}}},{"../kernel_names":"kYUMv","../ops/mul":"kfDrf","../ops/scalar":"1SA7b","../ops/sub":"ihs7S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],a58ZX:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stepGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.Step,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b8ULg:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"subGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/broadcast_util"),m=e("../ops/neg"),f=e("../ops/reshape"),i=e("../ops/sum");const o={kernelName:r.Sub,inputsToSave:["a","b"],gradFunc:(n,c)=>{const[a,l]=c,u=d.assertAndGetBroadcastShape(a.shape,l.shape);return{a:()=>{let g=n;const v=d.getReductionAxes(a.shape,u);return v.length>0&&(g=(0,i.sum)(g,v)),(0,f.reshape)(g,a.shape)},b:()=>{let g=n;const v=d.getReductionAxes(l.shape,u);return v.length>0&&(g=(0,i.sum)(g,v)),(0,f.reshape)((0,m.neg)(g),l.shape)}}}}},{"../kernel_names":"kYUMv","../ops/broadcast_util":"lfnGK","../ops/neg":"gXSYm","../ops/reshape":"5iOnm","../ops/sum":"8K3V0","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lB9V5:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sumGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/mul"),m=e("../ops/ones"),f=e("../ops/reshape"),i=e("../util");const o={kernelName:r.Sum,inputsToSave:["x"],gradFunc:(n,c,a)=>{const[l]=c,u=l.shape.slice(),{axis:p}=a;(0,i.parseAxisParam)(p,l.shape).forEach(_=>{u[_]=1});const g=(0,f.reshape)(n,u),v=(0,d.mul)(g,(0,m.ones)(l.shape,"float32"));return{x:()=>v}}}},{"../kernel_names":"kYUMv","../ops/mul":"kfDrf","../ops/ones":"cjU7J","../ops/reshape":"5iOnm","../util":"hQeVi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4Q0Vi":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tanGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/cos"),m=e("../ops/div"),f=e("../ops/square");const i={kernelName:r.Tan,inputsToSave:["x"],gradFunc:(o,n)=>{const[c]=n;return{x:()=>(0,m.div)(o,(0,f.square)((0,d.cos)(c)))}}}},{"../kernel_names":"kYUMv","../ops/cos":"5CQ2v","../ops/div":"4BOnP","../ops/square":"6AZak","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dgUqM:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tanhGradConfig",()=>o);var r=e("../kernel_names"),d=e("../ops/mul"),m=e("../ops/scalar"),f=e("../ops/square"),i=e("../ops/sub");const o={kernelName:r.Tanh,outputsToSave:[!0],gradFunc:(n,c)=>{const[a]=c;return{x:()=>(0,d.mul)((0,i.sub)((0,m.scalar)(1),(0,f.square)(a)),n)}}}},{"../kernel_names":"kYUMv","../ops/mul":"kfDrf","../ops/scalar":"1SA7b","../ops/square":"6AZak","../ops/sub":"ihs7S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],alauC:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tileGradConfig",()=>i);var r=e("../kernel_names"),d=e("../ops/add"),m=e("../ops/slice"),f=e("../ops/zeros_like");const i={kernelName:r.Tile,inputsToSave:["x"],gradFunc:(o,n,c)=>{const[a]=n,{reps:l}=c;return{x:()=>{let p=(0,f.zerosLike)(a);if(a.rank===1)for(let h=0;h<l[0];++h)p=(0,d.add)(p,(0,m.slice)(o,[h*a.shape[0]],[a.shape[0]]));else if(a.rank===2)for(let h=0;h<l[0];++h)for(let g=0;g<l[1];++g)p=(0,d.add)(p,(0,m.slice)(o,[h*a.shape[0],g*a.shape[1]],[a.shape[0],a.shape[1]]));else if(a.rank===3)for(let h=0;h<l[0];++h)for(let g=0;g<l[1];++g)for(let v=0;v<l[2];++v)p=(0,d.add)(p,(0,m.slice)(o,[h*a.shape[0],g*a.shape[1],v*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else if(a.rank===4)for(let h=0;h<l[0];++h)for(let g=0;g<l[1];++g)for(let v=0;v<l[2];++v)for(let _=0;_<l[3];++_)p=(0,d.add)(p,(0,m.slice)(o,[h*a.shape[0],g*a.shape[1],v*a.shape[2],_*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);return p}}}}},{"../kernel_names":"kYUMv","../ops/add":"2ocTD","../ops/slice":"9qYv4","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7QJBa":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transposeGradConfig",()=>f);var r=e("../kernel_names"),d=e("../ops/axis_util"),m=e("../ops/transpose");const f={kernelName:r.Transpose,gradFunc:(i,o,n)=>{const c=n,{perm:a}=c,l=d.getUndoAxesPermutation(a);return{x:()=>(0,m.transpose)(i,l)}}}},{"../kernel_names":"kYUMv","../ops/axis_util":"hf64X","../ops/transpose":"iN8Um","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2OFZM":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unpackGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/stack");const m={kernelName:r.Unpack,gradFunc:(f,i,o)=>{const n=o,{axis:c}=n;return{value:()=>(0,d.stack)(f,c)}}}},{"../kernel_names":"kYUMv","../ops/stack":"bf1WU","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bgI7D:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unsortedSegmentSumGradConfig",()=>u);var r=e("../kernel_names"),d=e("../ops/expand_dims"),m=e("../ops/gather"),f=e("../ops/greater_equal"),i=e("../ops/logical_and"),o=e("../ops/maximum"),n=e("../ops/ones"),c=e("../ops/scalar"),a=e("../ops/where"),l=e("../ops/zeros_like");const u={kernelName:r.UnsortedSegmentSum,inputsToSave:["segmentIds"],gradFunc:(h,g)=>{const[v]=g;return{x:()=>p(h,v)}}};function p(h,g){const v=(0,o.maximum)(g,(0,l.zerosLike)(g)),_=(0,m.gather)(h,v);let k=(0,f.greaterEqual)(g,(0,c.scalar)(0,"int32"));const y=_.rank-k.rank;for(let b=0;b<y;++b)k=(0,d.expandDims)(k,b+1);k=(0,i.logicalAnd)(k,(0,n.ones)(_.shape,"bool"));const x=(0,l.zerosLike)(_);return(0,a.where)(k,_,x)}},{"../kernel_names":"kYUMv","../ops/expand_dims":"7to7x","../ops/gather":"fCVf8","../ops/greater_equal":"lCE2c","../ops/logical_and":"eqe0O","../ops/maximum":"fTDK0","../ops/ones":"cjU7J","../ops/scalar":"1SA7b","../ops/where":"c2TLR","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"03IDC":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"zerosLikeGradConfig",()=>m);var r=e("../kernel_names"),d=e("../ops/zeros_like");const m={kernelName:r.ZerosLike,gradFunc:f=>({x:()=>(0,d.zerosLike)(f)})}},{"../kernel_names":"kYUMv","../ops/zeros_like":"0HiLr","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hRxg5:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("./abs"),r=e("./acos"),d=e("./acosh"),m=e("./add"),f=e("./all"),i=e("./any"),o=e("./arg_max"),n=e("./arg_min"),c=e("./as_scalar"),a=e("./as_type"),l=e("./as1d"),u=e("./as2d"),p=e("./as3d"),h=e("./as4d"),g=e("./as5d"),v=e("./asin"),_=e("./asinh"),k=e("./atan"),y=e("./atan2"),x=e("./atanh"),b=e("./avg_pool"),C=e("./batch_to_space_nd"),w=e("./batchnorm"),N=e("./broadcast_to"),T=e("./cast"),F=e("./ceil"),S=e("./clip_by_value"),I=e("./concat"),j=e("./conv1d"),D=e("./conv2d_transpose"),O=e("./conv2d"),$=e("./cos"),P=e("./cosh"),R=e("./cumprod"),A=e("./cumsum"),z=e("./depth_to_space"),G=e("./depthwise_conv2d"),L=e("./dilation2d"),M=e("./div_no_nan"),V=e("./div"),K=e("./dot"),W=e("./elu"),H=e("./equal"),Z=e("./erf"),Q=e("./euclidean_norm"),te=e("./exp"),ee=e("./expand_dims"),ne=e("./expm1"),se=e("./fft"),X=e("./flatten"),U=e("./floor"),Y=e("./floorDiv"),J=e("./gather"),q=e("./greater_equal"),ae=e("./greater"),ie=e("./ifft"),le=e("./irfft"),ue=e("./is_finite"),B=e("./is_inf"),re=e("./is_nan"),oe=e("./leaky_relu"),de=e("./less_equal"),fe=e("./less"),pe=e("./local_response_normalization"),me=e("./log_sigmoid"),he=e("./log_softmax"),ge=e("./log_sum_exp"),ve=e("./log"),ke=e("./log1p"),_e=e("./logical_and"),ye=e("./logical_not"),be=e("./logical_or"),Ce=e("./logical_xor"),we=e("./mat_mul"),xe=e("./max_pool"),Ne=e("./max"),Ie=e("./maximum"),Te=e("./mean"),Ee=e("./min"),Fe=e("./minimum"),De=e("./mirror_pad"),Ae=e("./mod"),Pe=e("./mul"),Re=e("./neg"),$e=e("./norm"),Oe=e("./not_equal"),Se=e("./one_hot"),je=e("./ones_like"),ze=e("./pad"),Ge=e("./pool"),Le=e("./pow"),Me=e("./prelu"),Ve=e("./prod"),Ue=e("./reciprocal"),Be=e("./relu"),He=e("./relu6"),We=e("./reshape_as"),Ke=e("./reshape"),ce=e("./resize_bilinear"),Ye=e("./resize_nearest_neighbor"),Xe=e("./reverse"),Ze=e("./rfft"),Qe=e("./round"),Je=e("./rsqrt"),qe=e("./selu"),et=e("./separable_conv2d"),tt=e("./sigmoid"),st=e("./sign"),rt=e("./sin"),nt=e("./sinh"),at=e("./slice"),ot=e("./softmax"),lt=e("./softplus"),it=e("./space_to_batch_nd"),ct=e("./split"),ut=e("./sqrt"),pt=e("./square"),dt=e("./squared_difference"),ft=e("./squeeze"),mt=e("./stack"),ht=e("./step"),gt=e("./strided_slice"),vt=e("./sub"),_t=e("./sum"),kt=e("./tan"),yt=e("./tanh"),bt=e("./tile"),xt=e("./to_bool"),Ct=e("./to_float"),wt=e("./to_int"),Nt=e("./topk"),It=e("./transpose"),St=e("./unique"),jt=e("./unsorted_segment_sum"),Tt=e("./unstack"),Et=e("./where"),Ft=e("./zeros_like")},{"./abs":"kkTi3","./acos":"gx5AP","./acosh":"h8AR3","./add":"iTPCe","./all":"k8ZTl","./any":"jKpD6","./arg_max":"7ShCo","./arg_min":"bLuCJ","./as_scalar":"9j3X3","./as_type":"htWXM","./as1d":"34qIo","./as2d":"1m9m5","./as3d":"alY8r","./as4d":"3kZgK","./as5d":"beJjm","./asin":"lXB4R","./asinh":"gxqWx","./atan":"iWTuX","./atan2":"8R1EZ","./atanh":"hC09N","./avg_pool":"dK0UU","./batch_to_space_nd":"7zpm4","./batchnorm":"ds1NH","./broadcast_to":"bBACU","./cast":"l6WLv","./ceil":"i2Lyo","./clip_by_value":"535rM","./concat":"jszzO","./conv1d":"4eVCp","./conv2d_transpose":"cMyrq","./conv2d":"dJMY7","./cos":"4FFMT","./cosh":"br3PK","./cumprod":"jCUeb","./cumsum":"bTV7D","./depth_to_space":"7I3eW","./depthwise_conv2d":"2qdML","./dilation2d":"iiI0I","./div_no_nan":"kQlzR","./div":"934XI","./dot":"3omzx","./elu":"2g15e","./equal":"d2lDD","./erf":"3oL1K","./euclidean_norm":"1CQc2","./exp":"elAOg","./expand_dims":"8rE6d","./expm1":"llqcJ","./fft":"eS16o","./flatten":"86gT3","./floor":"70weo","./floorDiv":"ltQ7V","./gather":"j5J3C","./greater_equal":"3NUYl","./greater":"98ton","./ifft":"6TQAo","./irfft":"dBi8S","./is_finite":"83Mt3","./is_inf":"cPiit","./is_nan":"fxIGA","./leaky_relu":"23f4h","./less_equal":"coiP0","./less":"3ITFa","./local_response_normalization":"4dvvZ","./log_sigmoid":"kxVc8","./log_softmax":"3HfMH","./log_sum_exp":"1E9x7","./log":"fquhK","./log1p":"cEhar","./logical_and":"jyMRU","./logical_not":"2qDEZ","./logical_or":"bCN93","./logical_xor":"eCztE","./mat_mul":"hNU3n","./max_pool":"iTmsl","./max":"jy3Jc","./maximum":"lxDQU","./mean":"8peRE","./min":"k8LSA","./minimum":"gDvEz","./mirror_pad":"89dFK","./mod":"1kn3i","./mul":"ffDIT","./neg":"dDnOu","./norm":"6oz2E","./not_equal":"7eW3b","./one_hot":"loh9P","./ones_like":"jFX8e","./pad":"cGxgP","./pool":"f9DPE","./pow":"5DTlt","./prelu":"h8DvB","./prod":"44Uab","./reciprocal":"fIpcq","./relu":"j2Er5","./relu6":"bvj5o","./reshape_as":"cFip3","./reshape":"89eXF","./resize_bilinear":"l3VwY","./resize_nearest_neighbor":"joP3b","./reverse":"Cq9do","./rfft":"5mKcf","./round":"lfEP7","./rsqrt":"5v27F","./selu":"3iK6k","./separable_conv2d":"f5kAI","./sigmoid":"anaeP","./sign":"3L4Ec","./sin":"8Bxah","./sinh":"cuwwH","./slice":"exW7z","./softmax":"7tsgy","./softplus":"iP6hD","./space_to_batch_nd":"4WAuW","./split":"616lK","./sqrt":"3Musf","./square":"73dUH","./squared_difference":"huppX","./squeeze":"jKvlq","./stack":"kNpK0","./step":"kB2tt","./strided_slice":"gcYkQ","./sub":"hf6FA","./sum":"e4vdY","./tan":"dlyis","./tanh":"2FlCS","./tile":"7Geui","./to_bool":"eNWzT","./to_float":"3iLKv","./to_int":"8ajt9","./topk":"4uwPC","./transpose":"c5vdz","./unique":"jCmxR","./unsorted_segment_sum":"1ldt1","./unstack":"g53XF","./where":"cVqbY","./zeros_like":"jZLXO"}],kkTi3:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.abs=function(){return this.throwIfDisposed(),(0,t.abs)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],gx5AP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.acos=function(){return this.throwIfDisposed(),(0,t.acos)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],h8AR3:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.acosh=function(){return this.throwIfDisposed(),(0,t.acosh)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],iTPCe:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/add"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.add=function(d){return this.throwIfDisposed(),(0,t.add)(this,d)}},{"../../ops/add":"2ocTD","../../tensor":"hRGZH"}],k8ZTl:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/all"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.all=function(d,m){return this.throwIfDisposed(),(0,t.all)(this,d,m)}},{"../../ops/all":"igf6q","../../tensor":"hRGZH"}],jKpD6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/any"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.any=function(d,m){return this.throwIfDisposed(),(0,t.any)(this,d,m)}},{"../../ops/any":"eq1Te","../../tensor":"hRGZH"}],"7ShCo":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/arg_max"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.argMax=function(d){return this.throwIfDisposed(),(0,t.argMax)(this,d)}},{"../../ops/arg_max":"j4fPS","../../tensor":"hRGZH"}],bLuCJ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/arg_min"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.argMin=function(d){return this.throwIfDisposed(),(0,t.argMin)(this,d)}},{"../../ops/arg_min":"a5NPa","../../tensor":"hRGZH"}],"9j3X3":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor"),d=e("../../util");(0,r.getGlobalTensorClass)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,d.assert)(this.size===1,()=>"The array must have only 1 element."),(0,t.reshape)(this,[])}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH","../../util":"hQeVi"}],htWXM:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.asType=function(d){return this.throwIfDisposed(),(0,t.cast)(this,d)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"34qIo":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.as1D=function(){return this.throwIfDisposed(),(0,t.reshape)(this,[this.size])}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH"}],"1m9m5":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.as2D=function(d,m){return this.throwIfDisposed(),(0,t.reshape)(this,[d,m])}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH"}],alY8r:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.as3D=function(d,m,f){return this.throwIfDisposed(),(0,t.reshape)(this,[d,m,f])}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH"}],"3kZgK":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.as4D=function(d,m,f,i){return this.throwIfDisposed(),(0,t.reshape)(this,[d,m,f,i])}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH"}],beJjm:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.as5D=function(d,m,f,i,o){return this.throwIfDisposed(),(0,t.reshape)(this,[d,m,f,i,o])}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH"}],lXB4R:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.asin=function(){return this.throwIfDisposed(),(0,t.asin)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],gxqWx:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.asinh=function(){return this.throwIfDisposed(),(0,t.asinh)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],iWTuX:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.atan=function(){return this.throwIfDisposed(),(0,t.atan)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"8R1EZ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/atan2"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.atan2=function(d){return this.throwIfDisposed(),(0,t.atan2)(this,d)}},{"../../ops/atan2":"hC9rc","../../tensor":"hRGZH"}],hC09N:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.atanh=function(){return this.throwIfDisposed(),(0,t.atanh)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],dK0UU:[function(e,E,s){var t=e("../../ops/avg_pool"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.avgPool=function(d,m,f,i){return this.throwIfDisposed(),(0,t.avgPool)(this,d,m,f,i)}},{"../../ops/avg_pool":"iJDL3","../../tensor":"hRGZH"}],"7zpm4":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/batch_to_space_nd"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.batchToSpaceND=function(d,m){return this.throwIfDisposed(),(0,t.batchToSpaceND)(this,d,m)}},{"../../ops/batch_to_space_nd":"8SWXq","../../tensor":"hRGZH"}],ds1NH:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/batchnorm"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.batchNorm=function(d,m,f,i,o){return this.throwIfDisposed(),(0,t.batchNorm)(this,d,m,f,i,o)}},{"../../ops/batchnorm":"5kwLS","../../tensor":"hRGZH"}],bBACU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/broadcast_to"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.broadcastTo=function(d){return this.throwIfDisposed(),(0,t.broadcastTo)(this,d)}},{"../../ops/broadcast_to":"de7ms","../../tensor":"hRGZH"}],l6WLv:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.cast=function(d){return this.throwIfDisposed(),(0,t.cast)(this,d)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],i2Lyo:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.ceil=function(){return this.throwIfDisposed(),(0,t.ceil)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"535rM":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.clipByValue=function(d,m){return this.throwIfDisposed(),(0,t.clipByValue)(this,d,m)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],jszzO:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/concat"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.concat=function(d,m){return this.throwIfDisposed(),d instanceof r.Tensor&&(d=[d]),(0,t.concat)([this,...d],m)}},{"../../ops/concat":"bZcSO","../../tensor":"hRGZH"}],"4eVCp":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/conv1d"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.conv1d=function(d,m,f,i,o,n){return this.throwIfDisposed(),(0,t.conv1d)(this,d,m,f,i,o,n)}},{"../../ops/conv1d":"2oG4M","../../tensor":"hRGZH"}],cMyrq:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/conv2d_transpose"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.conv2dTranspose=function(d,m,f,i,o){return this.throwIfDisposed(),(0,t.conv2dTranspose)(this,d,m,f,i,o)}},{"../../ops/conv2d_transpose":"kwS67","../../tensor":"hRGZH"}],dJMY7:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/conv2d"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.conv2d=function(d,m,f,i,o,n){return this.throwIfDisposed(),(0,t.conv2d)(this,d,m,f,i,o,n)}},{"../../ops/conv2d":"yMZmx","../../tensor":"hRGZH"}],"4FFMT":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.cos=function(){return this.throwIfDisposed(),(0,t.cos)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],br3PK:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.cosh=function(){return this.throwIfDisposed(),(0,t.cosh)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],jCUeb:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/cumprod"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.cumprod=function(d,m,f){return this.throwIfDisposed(),(0,t.cumprod)(this,d,m,f)}},{"../../ops/cumprod":"1DIHN","../../tensor":"hRGZH"}],bTV7D:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/cumsum"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.cumsum=function(d,m,f){return this.throwIfDisposed(),(0,t.cumsum)(this,d,m,f)}},{"../../ops/cumsum":"3lap7","../../tensor":"hRGZH"}],"7I3eW":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/depth_to_space"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.depthToSpace=function(d,m){return this.throwIfDisposed(),(0,t.depthToSpace)(this,d,m)}},{"../../ops/depth_to_space":"aW2Gu","../../tensor":"hRGZH"}],"2qdML":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/depthwise_conv2d"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.depthwiseConv2d=function(d,m,f,i,o,n){return this.throwIfDisposed(),(0,t.depthwiseConv2d)(this,d,m,f,i,o,n)}},{"../../ops/depthwise_conv2d":"2Aya7","../../tensor":"hRGZH"}],iiI0I:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/dilation2d"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.dilation2d=function(d,m,f,i,o){return this.throwIfDisposed(),(0,t.dilation2d)(this,d,m,f,i,o)}},{"../../ops/dilation2d":"4VWbu","../../tensor":"hRGZH"}],kQlzR:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/div_no_nan"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.divNoNan=function(d){return this.throwIfDisposed(),(0,t.divNoNan)(this,d)}},{"../../ops/div_no_nan":"ajkzf","../../tensor":"hRGZH"}],"934XI":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/div"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.div=function(d){return this.throwIfDisposed(),(0,t.div)(this,d)}},{"../../ops/div":"4BOnP","../../tensor":"hRGZH"}],"3omzx":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/dot"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.dot=function(d){return this.throwIfDisposed(),(0,t.dot)(this,d)}},{"../../ops/dot":"jeGwo","../../tensor":"hRGZH"}],"2g15e":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/elu"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.elu=function(){return this.throwIfDisposed(),(0,t.elu)(this)}},{"../../ops/elu":"IJvcE","../../tensor":"hRGZH"}],d2lDD:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/equal"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.equal=function(d){return this.throwIfDisposed(),(0,t.equal)(this,d)}},{"../../ops/equal":"9t9zd","../../tensor":"hRGZH"}],"3oL1K":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.erf=function(){return this.throwIfDisposed(),(0,t.erf)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"1CQc2":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/euclidean_norm"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.euclideanNorm=function(d,m){return this.throwIfDisposed(),(0,t.euclideanNorm)(this,d,m)}},{"../../ops/euclidean_norm":"017e3","../../tensor":"hRGZH"}],elAOg:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.exp=function(){return this.throwIfDisposed(),(0,t.exp)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"8rE6d":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/expand_dims"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.expandDims=function(d){return this.throwIfDisposed(),(0,t.expandDims)(this,d)}},{"../../ops/expand_dims":"7to7x","../../tensor":"hRGZH"}],llqcJ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.expm1=function(){return this.throwIfDisposed(),(0,t.expm1)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],eS16o:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.fft=function(){return this.throwIfDisposed(),(0,t.fft)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"86gT3":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.flatten=function(){return this.throwIfDisposed(),(0,t.reshape)(this,[this.size])}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH"}],"70weo":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.floor=function(){return this.throwIfDisposed(),(0,t.floor)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],ltQ7V:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/floorDiv"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.floorDiv=function(d){return this.throwIfDisposed(),(0,t.floorDiv)(this,d)}},{"../../ops/floorDiv":"k05AJ","../../tensor":"hRGZH"}],j5J3C:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/gather"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.gather=function(d,m,f){return this.throwIfDisposed(),(0,t.gather)(this,d,m,f)}},{"../../ops/gather":"fCVf8","../../tensor":"hRGZH"}],"3NUYl":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/greater_equal"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.greaterEqual=function(d){return this.throwIfDisposed(),(0,t.greaterEqual)(this,d)}},{"../../ops/greater_equal":"lCE2c","../../tensor":"hRGZH"}],"98ton":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/greater"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.greater=function(d){return this.throwIfDisposed(),(0,t.greater)(this,d)}},{"../../ops/greater":"kEWCa","../../tensor":"hRGZH"}],"6TQAo":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.ifft=function(){return this.throwIfDisposed(),(0,t.ifft)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],dBi8S:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.irfft=function(){return this.throwIfDisposed(),(0,t.irfft)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"83Mt3":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,t.isFinite)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],cPiit:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.isInf=function(){return this.throwIfDisposed(),(0,t.isInf)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],fxIGA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,t.isNaN)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"23f4h":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/leaky_relu"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.leakyRelu=function(d){return this.throwIfDisposed(),(0,t.leakyRelu)(this,d)}},{"../../ops/leaky_relu":"g5HtG","../../tensor":"hRGZH"}],coiP0:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/less_equal"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.lessEqual=function(d){return this.throwIfDisposed(),(0,t.lessEqual)(this,d)}},{"../../ops/less_equal":"fNUcT","../../tensor":"hRGZH"}],"3ITFa":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/less"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.less=function(d){return this.throwIfDisposed(),(0,t.less)(this,d)}},{"../../ops/less":"gvtbk","../../tensor":"hRGZH"}],"4dvvZ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/local_response_normalization"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.localResponseNormalization=function(d,m,f,i){return this.throwIfDisposed(),(0,t.localResponseNormalization)(this,d,m,f,i)}},{"../../ops/local_response_normalization":"6orK2","../../tensor":"hRGZH"}],kxVc8:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,t.logSigmoid)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"3HfMH":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.logSoftmax=function(d){return this.throwIfDisposed(),(0,t.logSoftmax)(this,d)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"1E9x7":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/log_sum_exp"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.logSumExp=function(d,m){return this.throwIfDisposed(),(0,t.logSumExp)(this,d,m)}},{"../../ops/log_sum_exp":"aioCW","../../tensor":"hRGZH"}],fquhK:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.log=function(){return this.throwIfDisposed(),(0,t.log)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],cEhar:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.log1p=function(){return this.throwIfDisposed(),(0,t.log1p)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],jyMRU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/logical_and"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.logicalAnd=function(d){return this.throwIfDisposed(),(0,t.logicalAnd)(this,d)}},{"../../ops/logical_and":"eqe0O","../../tensor":"hRGZH"}],"2qDEZ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/logical_not"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,t.logicalNot)(this)}},{"../../ops/logical_not":"hZuGz","../../tensor":"hRGZH"}],bCN93:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/logical_or"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.logicalOr=function(d){return this.throwIfDisposed(),(0,t.logicalOr)(this,d)}},{"../../ops/logical_or":"h8nMl","../../tensor":"hRGZH"}],eCztE:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/logical_xor"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.logicalXor=function(d){return this.throwIfDisposed(),(0,t.logicalXor)(this,d)}},{"../../ops/logical_xor":"lO4Lx","../../tensor":"hRGZH"}],hNU3n:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/mat_mul"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.matMul=function(d,m,f){return this.throwIfDisposed(),(0,t.matMul)(this,d,m,f)}},{"../../ops/mat_mul":"2iQjP","../../tensor":"hRGZH"}],iTmsl:[function(e,E,s){var t=e("../../ops/max_pool"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.maxPool=function(d,m,f,i){return this.throwIfDisposed(),(0,t.maxPool)(this,d,m,f,i)}},{"../../ops/max_pool":"17lyl","../../tensor":"hRGZH"}],jy3Jc:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/max"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.max=function(d,m){return this.throwIfDisposed(),(0,t.max)(this,d,m)}},{"../../ops/max":"khzzn","../../tensor":"hRGZH"}],lxDQU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/maximum"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.maximum=function(d){return this.throwIfDisposed(),(0,t.maximum)(this,d)}},{"../../ops/maximum":"fTDK0","../../tensor":"hRGZH"}],"8peRE":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/mean"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.mean=function(d,m){return this.throwIfDisposed(),(0,t.mean)(this,d,m)}},{"../../ops/mean":"3OoGB","../../tensor":"hRGZH"}],k8LSA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/min"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.min=function(d,m){return this.throwIfDisposed(),(0,t.min)(this,d,m)}},{"../../ops/min":"ifMr4","../../tensor":"hRGZH"}],gDvEz:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/minimum"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.minimum=function(d){return this.throwIfDisposed(),(0,t.minimum)(this,d)}},{"../../ops/minimum":"2YOa4","../../tensor":"hRGZH"}],"89dFK":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/mirror_pad"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.mirrorPad=function(d,m){return this.throwIfDisposed(),(0,t.mirrorPad)(this,d,m)}},{"../../ops/mirror_pad":"hAxX2","../../tensor":"hRGZH"}],"1kn3i":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/mod"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.mod=function(d){return this.throwIfDisposed(),(0,t.mod)(this,d)}},{"../../ops/mod":"04Yeo","../../tensor":"hRGZH"}],ffDIT:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/mul"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.mul=function(d){return this.throwIfDisposed(),(0,t.mul)(this,d)}},{"../../ops/mul":"kfDrf","../../tensor":"hRGZH"}],dDnOu:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.neg=function(){return this.throwIfDisposed(),(0,t.neg)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"6oz2E":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.norm=function(d,m,f){return this.throwIfDisposed(),(0,t.norm)(this,d,m,f)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"7eW3b":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/not_equal"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.notEqual=function(d){return this.throwIfDisposed(),(0,t.notEqual)(this,d)}},{"../../ops/not_equal":"cCGqV","../../tensor":"hRGZH"}],loh9P:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/one_hot"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.oneHot=function(d,m=1,f=0){return this.throwIfDisposed(),(0,t.oneHot)(this,d,m,f)}},{"../../ops/one_hot":"bHJCu","../../tensor":"hRGZH"}],jFX8e:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,t.onesLike)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],cGxgP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/pad"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.pad=function(d,m){return this.throwIfDisposed(),(0,t.pad)(this,d,m)}},{"../../ops/pad":"30COC","../../tensor":"hRGZH"}],f9DPE:[function(e,E,s){var t=e("../../ops/pool"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.pool=function(d,m,f,i,o,n){return this.throwIfDisposed(),(0,t.pool)(this,d,m,f,i,o,n)}},{"../../ops/pool":"c1BYj","../../tensor":"hRGZH"}],"5DTlt":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/pow"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.pow=function(d){return this.throwIfDisposed(),(0,t.pow)(this,d)}},{"../../ops/pow":"hg0HR","../../tensor":"hRGZH"}],h8DvB:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/prelu"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.prelu=function(d){return this.throwIfDisposed(),(0,t.prelu)(this,d)}},{"../../ops/prelu":"lFobp","../../tensor":"hRGZH"}],"44Uab":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/prod"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.prod=function(d,m){return this.throwIfDisposed(),(0,t.prod)(this,d,m)}},{"../../ops/prod":"bw3dp","../../tensor":"hRGZH"}],fIpcq:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,t.reciprocal)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],j2Er5:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/relu"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.relu=function(){return this.throwIfDisposed(),(0,t.relu)(this)}},{"../../ops/relu":"ksZVD","../../tensor":"hRGZH"}],bvj5o:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/relu6"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.relu6=function(){return this.throwIfDisposed(),(0,t.relu6)(this)}},{"../../ops/relu6":"9hEUU","../../tensor":"hRGZH"}],cFip3:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.reshapeAs=function(d){return this.throwIfDisposed(),(0,t.reshape)(this,d.shape)}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH"}],"89eXF":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reshape"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.reshape=function(d){return this.throwIfDisposed(),(0,t.reshape)(this,d)}},{"../../ops/reshape":"5iOnm","../../tensor":"hRGZH"}],l3VwY:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/image/resize_bilinear"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.resizeBilinear=function(d,m,f){return this.throwIfDisposed(),(0,t.resizeBilinear)(this,d,m,f)}},{"../../ops/image/resize_bilinear":"3Sz6B","../../tensor":"hRGZH"}],joP3b:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/image/resize_nearest_neighbor"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.resizeNearestNeighbor=function(d,m,f){return this.throwIfDisposed(),(0,t.resizeNearestNeighbor)(this,d,m,f)}},{"../../ops/image/resize_nearest_neighbor":"iB9E5","../../tensor":"hRGZH"}],Cq9do:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/reverse"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.reverse=function(d){return this.throwIfDisposed(),(0,t.reverse)(this,d)}},{"../../ops/reverse":"aNxZz","../../tensor":"hRGZH"}],"5mKcf":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.rfft=function(){return this.throwIfDisposed(),(0,t.rfft)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],lfEP7:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.round=function(){return this.throwIfDisposed(),(0,t.round)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"5v27F":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,t.rsqrt)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"3iK6k":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/selu"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.selu=function(){return this.throwIfDisposed(),(0,t.selu)(this)}},{"../../ops/selu":"1S9no","../../tensor":"hRGZH"}],f5kAI:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/separable_conv2d"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.separableConv2d=function(d,m,f,i,o,n){return this.throwIfDisposed(),(0,t.separableConv2d)(this,d,m,f,i,o,n)}},{"../../ops/separable_conv2d":"janaT","../../tensor":"hRGZH"}],anaeP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,t.sigmoid)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"3L4Ec":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.sign=function(){return this.throwIfDisposed(),(0,t.sign)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"8Bxah":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.sin=function(){return this.throwIfDisposed(),(0,t.sin)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],cuwwH:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.sinh=function(){return this.throwIfDisposed(),(0,t.sinh)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],exW7z:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.slice=function(d,m){return this.throwIfDisposed(),(0,t.slice)(this,d,m)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"7tsgy":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.softmax=function(d){return this.throwIfDisposed(),(0,t.softmax)(this,d)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],iP6hD:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.softplus=function(){return this.throwIfDisposed(),(0,t.softplus)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"4WAuW":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/space_to_batch_nd"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.spaceToBatchND=function(d,m){return this.throwIfDisposed(),(0,t.spaceToBatchND)(this,d,m)}},{"../../ops/space_to_batch_nd":"hawyX","../../tensor":"hRGZH"}],"616lK":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/split"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.split=function(d,m){return this.throwIfDisposed(),(0,t.split)(this,d,m)}},{"../../ops/split":"d81fP","../../tensor":"hRGZH"}],"3Musf":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,t.sqrt)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"73dUH":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.square=function(){return this.throwIfDisposed(),(0,t.square)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],huppX:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/squared_difference"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.squaredDifference=function(d){return this.throwIfDisposed(),(0,t.squaredDifference)(this,d)}},{"../../ops/squared_difference":"cWGon","../../tensor":"hRGZH"}],jKvlq:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/squeeze"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.squeeze=function(d){return this.throwIfDisposed(),(0,t.squeeze)(this,d)}},{"../../ops/squeeze":"3LX0Y","../../tensor":"hRGZH"}],kNpK0:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/stack"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.stack=function(d,m){this.throwIfDisposed();const f=d instanceof r.Tensor?[this,d]:[this,...d];return(0,t.stack)(f,m)}},{"../../ops/stack":"bf1WU","../../tensor":"hRGZH"}],kB2tt:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.step=function(d){return this.throwIfDisposed(),(0,t.step)(this,d)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],gcYkQ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.stridedSlice=function(d,m,f,i,o,n,c,a){return this.throwIfDisposed(),(0,t.stridedSlice)(this,d,m,f,i,o,n,c,a)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],hf6FA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/sub"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.sub=function(d){return this.throwIfDisposed(),(0,t.sub)(this,d)}},{"../../ops/sub":"ihs7S","../../tensor":"hRGZH"}],e4vdY:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/sum"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.sum=function(d,m){return this.throwIfDisposed(),(0,t.sum)(this,d,m)}},{"../../ops/sum":"8K3V0","../../tensor":"hRGZH"}],dlyis:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.tan=function(){return this.throwIfDisposed(),(0,t.tan)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"2FlCS":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.tanh=function(){return this.throwIfDisposed(),(0,t.tanh)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"7Geui":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/tile"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.tile=function(d){return this.throwIfDisposed(),(0,t.tile)(this,d)}},{"../../ops/tile":"j34EP","../../tensor":"hRGZH"}],eNWzT:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.toBool=function(){return this.throwIfDisposed(),(0,t.cast)(this,"bool")}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"3iLKv":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,t.cast)(this,"float32")}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"8ajt9":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.toInt=function(){return this.throwIfDisposed(),(0,t.cast)(this,"int32")}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],"4uwPC":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/topk"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.topk=function(d,m){return this.throwIfDisposed(),(0,t.topk)(this,d,m)}},{"../../ops/topk":"37Jzb","../../tensor":"hRGZH"}],c5vdz:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/transpose"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.transpose=function(d){return this.throwIfDisposed(),(0,t.transpose)(this,d)}},{"../../ops/transpose":"iN8Um","../../tensor":"hRGZH"}],jCmxR:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/unique"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.unique=function(d){return this.throwIfDisposed(),(0,t.unique)(this,d)}},{"../../ops/unique":"au9MH","../../tensor":"hRGZH"}],"1ldt1":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/unsorted_segment_sum"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.unsortedSegmentSum=function(d,m){return this.throwIfDisposed(),(0,t.unsortedSegmentSum)(this,d,m)}},{"../../ops/unsorted_segment_sum":"f19re","../../tensor":"hRGZH"}],g53XF:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/unstack"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.unstack=function(d){return this.throwIfDisposed(),(0,t.unstack)(this,d)}},{"../../ops/unstack":"eKCnA","../../tensor":"hRGZH"}],cVqbY:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/where"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.where=function(d,m){return this.throwIfDisposed(),(0,t.where)(d,this,m)}},{"../../ops/where":"c2TLR","../../tensor":"hRGZH"}],jZLXO:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("../../ops/ops"),r=e("../../tensor");(0,r.getGlobalTensorClass)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,t.zerosLike)(this)}},{"../../ops/ops":"iu1Y6","../../tensor":"hRGZH"}],c6k9G:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CallbackList",()=>l.CallbackList),t.export(s,"CustomCallback",()=>l.CustomCallback),t.export(s,"History",()=>l.History),t.export(s,"Callback",()=>u.Callback),t.export(s,"callbacks",()=>u.callbacks),t.export(s,"EarlyStopping",()=>u.EarlyStopping),t.export(s,"InputSpec",()=>p.InputSpec),t.export(s,"SymbolicTensor",()=>p.SymbolicTensor),t.export(s,"LayersModel",()=>h.LayersModel),t.export(s,"input",()=>g.input),t.export(s,"loadLayersModel",()=>g.loadLayersModel),t.export(s,"model",()=>g.model),t.export(s,"registerCallbackConstructor",()=>g.registerCallbackConstructor),t.export(s,"sequential",()=>g.sequential),t.export(s,"RNN",()=>v.RNN),t.export(s,"Sequential",()=>_.Sequential),t.export(s,"LayerVariable",()=>k.LayerVariable),t.export(s,"version_layers",()=>y.version),t.export(s,"constraints",()=>f),t.export(s,"initializers",()=>i),t.export(s,"layers",()=>o),t.export(s,"metrics",()=>n),t.export(s,"models",()=>c),t.export(s,"regularizers",()=>a);var r=e("./flags_layers"),d=e("@tensorflow/tfjs-core"),m=e("@tensorflow/tfjs-core/dist/register_all_gradients"),f=e("./exports_constraints"),i=e("./exports_initializers"),o=e("./exports_layers"),n=e("./exports_metrics"),c=e("./exports_models"),a=e("./exports_regularizers"),l=e("./base_callbacks"),u=e("./callbacks"),p=e("./engine/topology"),h=e("./engine/training"),g=e("./exports"),v=e("./layers/recurrent"),_=e("./models"),k=e("./variables"),y=e("./version")},{"./flags_layers":"gq9PW","@tensorflow/tfjs-core":"fqGP4","@tensorflow/tfjs-core/dist/register_all_gradients":"6n8PF","./exports_constraints":"buGqR","./exports_initializers":"cmIhs","./exports_layers":"kF2tq","./exports_metrics":"e950f","./exports_models":"1uqec","./exports_regularizers":"bevU7","./base_callbacks":"efotw","./callbacks":"eMJDd","./engine/topology":"Fr8bO","./engine/training":"bEWyV","./exports":"8wz9y","./layers/recurrent":"dY6Qj","./models":"6CNgn","./variables":"8n5g7","./version":"auovA","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gq9PW:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ENV",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./engine/executor");const m=(0,r.env)();m.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,d.updateCacheMaxEntries)},{"@tensorflow/tfjs-core":"fqGP4","./engine/executor":"lTSQJ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lTSQJ:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"FeedDict",()=>c),t.export(s,"cachedSorted",()=>a),t.export(s,"cachedRecipientCounts",()=>l),t.export(s,"updateCacheMaxEntries",()=>u),t.export(s,"execute",()=>p),t.export(s,"getTopologicalSortAndRecipientCountsForOneFetch",()=>v);var r=e("@tensorflow/tfjs-core"),d=e("../errors"),m=e("../utils/executor_utils"),f=e("../utils/generic_utils"),i=e("./input_layer"),o=e("./topology");function n(k,y){if(k.dtype==null||k.dtype===y.dtype)return y;try{return(0,r.cast)(y,k.dtype)}catch{throw new d.ValueError(`The dtype of the feed (${y.dtype}) can not be cast to the dtype of the key '${k.name}' (${k.dtype}).`)}}class c{constructor(y){if(this.id2Value={},this.id2Mask={},this.name2Id={},y instanceof c)for(const x in y.id2Value)this.id2Value[x]=y.id2Value[x],x in y.id2Mask&&(this.id2Mask[x]=y.id2Mask[x]);else{if(y==null)return;for(const x of y)this.add(x.key,x.value)}}add(y,x,b){if(this.id2Value[y.id]==null)this.id2Value[y.id]=n(y,x),this.name2Id[y.name]=y.id,b!=null&&(this.id2Mask[y.id]=b);else throw new d.ValueError(`Duplicate key: name=${y.name}, id=${y.id}`);return this}addFeed(y){this.add(y.key,y.value)}hasKey(y){return this.id2Value[y.id]!=null}names(){return Object.keys(this.name2Id)}getValue(y){if(y instanceof o.SymbolicTensor){if(this.id2Value[y.id]==null)throw new d.ValueError(`Nonexistent key: ${y.name}`);return this.id2Value[y.id]}else{const x=this.name2Id[y];if(x==null)throw new d.ValueError(`Feed dict has no SymbolicTensor name: ${y}`);return this.id2Value[x]}}getMask(y){if(y instanceof o.SymbolicTensor){if(this.id2Value[y.id]==null)throw new d.ValueError(`Nonexistent key: ${y.name}`);return this.id2Mask[y.id]}else{const x=this.name2Id[y];if(x==null)throw new d.ValueError(`Feed dict has no SymbolicTensor name: ${y}`);return this.id2Mask[x]}}disposeMasks(){this.id2Mask!=null&&(0,r.dispose)(this.id2Mask)}}const a=new m.LruCache,l=new m.LruCache;function u(k){a!=null&&a.setMaxEntries(k),l!=null&&l.setMaxEntries(k)}function p(k,y,x,b){const C=x==null?!1:x.training,w=Array.isArray(k),N=w?k:[k],T=N.map($=>$.name),F=[],S=y.names();for(const $ of T)S.indexOf($)!==-1?F.push(y.getValue($)):F.push(null);b!=null&&(b.maxNumTensors=-1/0,b.minNumTensors=1/0);const I=T.join(",")+"|"+y.names().sort().join(",");let j=a.get(I),D;if(j==null){const $=h(N,y);j=$.sorted,D=$.recipientCounts,a.put(I,j),l.put(I,D)}D={},C||Object.assign(D,l.get(I));const O=new c(y);for(let $=0;$<j.length;++$){if(b!=null){const H=(0,r.memory)().numTensors;H>b.maxNumTensors&&(b.maxNumTensors=H),H<b.minNumTensors&&(b.minNumTensors=H)}const P=j[$],R=P.sourceLayer;if(R instanceof i.InputLayer)continue;const A=[],z=[],G=[];let L=!1;for(const H of P.inputs){const Z=O.getValue(H),Q=O.getMask(H);A.push(Z),z.push(Q),Q!=null&&(L=!0),C||(D[H.name]--,D[H.name]===0&&!y.hasKey(H)&&T.indexOf(H.name)===-1&&!Z.isDisposed&&H.sourceLayer.stateful!==!0&&G.push(Z))}L&&(x=x||{},x.mask=z[0]);const M=(0,f.toList)(R.apply(A,x));let V=null;R.supportsMasking&&(V=R.computeMask(A,z));const K=_(P),W=Array.isArray(K)?K:[K];for(let H=0;H<W.length;++H){O.hasKey(W[H])||O.add(W[H],M[H],Array.isArray(V)?V[0]:V);const Z=T.indexOf(W[H].name);Z!==-1&&(F[Z]=M[H])}C||(0,r.dispose)(G)}return O.disposeMasks(),w?F:F[0]}function h(k,y){r.util.assert(k!=null&&k.length>0,()=>"Expected at least one fetch, got none");let x=[],b={};if(k.length===1){const C=v(k[0],y);x=C.sorted,b=C.recipientMap}else{const C=new Set;for(const w of k){const{sorted:N,recipientMap:T}=v(w,y);for(const F of N)C.has(F.name)||(x.push(F),C.add(F.name));for(const F in T)b[F]==null&&(b[F]=new Set),T[F].forEach(S=>b[F].add(S))}}return{sorted:x,recipientCounts:g(b)}}function g(k){const y={};for(const x in k)y[x]=k[x].size;return y}function v(k,y){const x=new Set,b=[],C={};for(const T of y.names())x.add(T);const w=[],N=[];for(w.push(k);w.length>0;){const T=w[w.length-1];if(x.has(T.name)){w.pop();continue}const F=N[N.length-1]===w.length-1;if(T.inputs.length===0||F)w.pop(),b.push(T),x.add(T.name),F&&N.pop();else{N.push(w.length-1);for(const S of T.inputs)C[S.name]==null&&(C[S.name]=new Set),C[S.name].add(T.name),!x.has(S.name)&&w.push(S)}}return{sorted:b,recipientMap:C}}function _(k){let y;if(k.sourceLayer.inboundNodes.length===1)y=k.sourceLayer.output;else{let x=null;for(let b=0;b<k.sourceLayer.inboundNodes.length;++b)for(const C of k.sourceLayer.inboundNodes[b].outputTensors)if(C.id===k.id){x=b;break}y=k.sourceLayer.getOutputAt(x)}return y}},{"@tensorflow/tfjs-core":"fqGP4","../errors":"eAG95","../utils/executor_utils":"h9oZ9","../utils/generic_utils":"gl5LS","./input_layer":"lBCvo","./topology":"Fr8bO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eAG95:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AttributeError",()=>r),t.export(s,"RuntimeError",()=>d),t.export(s,"ValueError",()=>m),t.export(s,"NotImplementedError",()=>f),t.export(s,"AssertionError",()=>i),t.export(s,"IndexError",()=>o);class r extends Error{constructor(c){super(c);Object.setPrototypeOf(this,r.prototype)}}class d extends Error{constructor(c){super(c);Object.setPrototypeOf(this,d.prototype)}}class m extends Error{constructor(c){super(c);Object.setPrototypeOf(this,m.prototype)}}class f extends Error{constructor(c){super(c);Object.setPrototypeOf(this,f.prototype)}}class i extends Error{constructor(c){super(c);Object.setPrototypeOf(this,i.prototype)}}class o extends Error{constructor(c){super(c);Object.setPrototypeOf(this,o.prototype)}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],h9oZ9:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"LruCache",()=>r);class r{constructor(m){this.maxEntries=m||100,this.cache=new Map}get(m){let f;return this.cache.has(m)&&(f=this.cache.get(m),this.cache.delete(m),this.cache.set(m,f)),f}put(m,f){if(this.cache.has(m))this.cache.delete(m);else if(this.cache.size>=this.maxEntries){const i=this.cache.keys().next().value;this.cache.delete(i)}this.cache.set(m,f)}getMaxEntries(){return this.maxEntries}setMaxEntries(m){if(m<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${m}.`);if(this.maxEntries>m)for(let f=0;f<this.maxEntries-m;f++){const i=this.cache.keys().next().value;this.cache.delete(i)}this.maxEntries=m}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gl5LS:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pyListRepeat",()=>m),t.export(s,"assert",()=>f),t.export(s,"count",()=>i),t.export(s,"singletonOrArray",()=>o),t.export(s,"toList",()=>n),t.export(s,"objectListUid",()=>c),t.export(s,"toSnakeCase",()=>a),t.export(s,"toCamelCase",()=>l),t.export(s,"serializeKerasObject",()=>p),t.export(s,"deserializeKerasObject",()=>g),t.export(s,"numberCompare",()=>v),t.export(s,"reverseNumberCompare",()=>_),t.export(s,"stringToDType",()=>k),t.export(s,"stringsEqual",()=>y),t.export(s,"unique",()=>x),t.export(s,"isObjectEmpty",()=>b),t.export(s,"checkStringTypeUnionValue",()=>C),t.export(s,"checkArrayTypeAndLength",()=>w),t.export(s,"assertPositiveInteger",()=>N),t.export(s,"formatAsFriendlyString",()=>T),t.export(s,"debounce",()=>F),t.export(s,"mapActivationToFusedKernel",()=>S),t.export(s,"getCartesianProductOfValues",()=>I);var r=e("@tensorflow/tfjs-core"),d=e("../errors");function m(j,D){if(Array.isArray(j)){let O=[];for(let $=0;$<D;$++)O=O.concat(j);return O}else{const O=new Array(D);return O.fill(j),O}}function f(j,D){if(!j)throw new d.AssertionError(D)}function i(j,D){let O=0;for(const $ of j)$===D&&O++;return O}function o(j){return j.length===1?j[0]:j}function n(j){return Array.isArray(j)?j:[j]}function c(j){const D=n(j);let O="";for(const $ of D){if($.id==null)throw new d.ValueError(`Object ${$} passed to objectListUid without an id`);O!==""&&(O=O+", "),O=`${O}${Math.abs($.id)}`}return O}function a(j){const O=j.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return O[0]!=="_"?O:"private"+O}function l(j){return j.length<=1||j.indexOf("_")===-1?j:j.replace(/[_]+(\w|$)/g,(D,O)=>O.toUpperCase())}let u={};function p(j){if(j==null)return null;const D={};return D.className=j.getClassName(),D.config=j.getConfig(),D}function h(j){if(!(j==null||typeof j!="object"))if(Array.isArray(j))j.forEach(D=>h(D));else{const D=Object.keys(j);for(const O of D){const $=j[O];$!=null&&typeof $=="object"&&(!Array.isArray($)&&$.type==="ndarray"&&typeof $.value=="number"?j[O]=$.value:h($))}}}function g(j,D={},O={},$="object",P=!1){if(typeof j=="string"){const R=j;let A;if(R in O)A=O[R];else if(R in u)A=u[R];else if(A=D[R],A==null)throw new d.ValueError(`Unknown ${$}: ${j}. This may be due to one of the following reasons:
1. The ${$} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${$} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return A}else{const R=j;if(R.className==null||R.config==null)throw new d.ValueError(`${$}: Improper config format: ${JSON.stringify(R)}.
'className' and 'config' must set.`);const A=R.className;let z,G;if(A in O?[z,G]=O[A]:A in u?[z,G]=u.className:A in D&&([z,G]=D[A]),z==null)throw new d.ValueError(`Unknown ${$}: ${A}. This may be due to one of the following reasons:
1. The ${$} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${$} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(G!=null){const L={};for(const W of Object.keys(u))L[W]=u[W];for(const W of Object.keys(O))L[W]=O[W];const M=R.config;M.customObjects=L;const V=Object.assign({},u);for(const W of Object.keys(O))u[W]=O[W];h(R.config);const K=G(z,R.config,O,P);return u=Object.assign({},V),K}else{const L=Object.assign({},u);for(const V of Object.keys(O))u[V]=O[V];const M=new z(R.config);return u=Object.assign({},L),M}}}function v(j,D){return j<D?-1:j>D?1:0}function _(j,D){return-1*v(j,D)}function k(j){switch(j){case"float32":return"float32";default:throw new d.ValueError(`Invalid dtype: ${j}`)}}function y(j,D){if(j==null||D==null)return j===D;if(j.length!==D.length)return!1;for(let O=0;O<j.length;++O)if(j[O]!==D[O])return!1;return!0}function x(j){if(j==null)return j;const D=[];for(const O of j)D.indexOf(O)===-1&&D.push(O);return D}function b(j){if(j==null)throw new d.ValueError(`Invalid value in obj: ${JSON.stringify(j)}`);for(const D in j)if(j.hasOwnProperty(D))return!1;return!0}function C(j,D,O){if(O!=null&&j.indexOf(O)<0)throw new d.ValueError(`${O} is not a valid ${D}.  Valid values are ${j} or null/undefined.`)}function w(j,D,O=0,$=1/0){return f(O>=0),f($>=O),Array.isArray(j)&&j.length>=O&&j.length<=$&&j.every(P=>typeof P===D)}function N(j,D){Array.isArray(j)?(r.util.assert(j.length>0,()=>`${D} is unexpectedly an empty array.`),j.forEach((O,$)=>N(O,`element ${$+1} of ${D}`))):r.util.assert(Number.isInteger(j)&&j>0,()=>`Expected ${D} to be a positive integer, but got ${T(j)}.`)}function T(j){return j===null?"null":Array.isArray(j)?"["+j.map(D=>T(D)).join(",")+"]":typeof j=="string"?`"${j}"`:`${j}`}function F(j,D,O){let $=O!=null?O():r.util.now(),P;return(...A)=>{const z=O!=null?O():r.util.now();return z-$<D||($=z,P=j(...A)),P}}function S(j){return j==="relu"?"relu":j==="linear"?"linear":j==="elu"?"elu":null}function I(...j){f(j.length>0,"arrayOfValues is empty");for(const D of j)f(Array.isArray(D),"one of the values is not an array"),f(D.length>0,"one of the values is empty");return j.reduce((D,O)=>D.length===0?O.map($=>[$]):O.map($=>D.map(P=>[...P,$])).reduce(($,P)=>$.concat(P),[]),[])}},{"@tensorflow/tfjs-core":"fqGP4","../errors":"eAG95","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lBCvo:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"InputLayer",()=>i),t.export(s,"Input",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../backend/state"),m=e("../errors"),f=e("./topology");class i extends f.Layer{constructor(c){super({dtype:c.dtype,name:c.name!=null?c.name:(0,d.getUid)("input").toString()});if(c.batchSize==null&&(c.batchSize=null),c.sparse==null&&(c.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=c.sparse,c.inputShape!=null&&c.batchInputShape!=null)throw new m.ValueError("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let a=c.batchInputShape;if(a==null){if(c.inputShape==null)throw new m.ValueError("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");a=[c.batchSize].concat(c.inputShape)}else if(c.batchSize!=null)throw new m.ValueError("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const l=c.dtype||"float32";this.batchInputShape=a,this.dtype=l,this.inputSpec=[{shape:a}];const u=new f.SymbolicTensor(this.dtype,this.batchInputShape,this,[],{},this.name);u.nodeIndex=0,u.tensorIndex=0,new f.Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[u],outputTensors:[u],inputMasks:[null],outputMasks:[null],inputShapes:[a],outputShapes:[a]})}apply(c,a){throw new m.ValueError(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}i.className="InputLayer",r.serialization.registerClass(i);function o(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new m.ValueError("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let c=n.batchShape;n.shape!=null&&c==null&&(c=[null].concat(n.shape));let a=n.dtype;return a==null&&(a="float32"),new i({batchInputShape:c,name:n.name,dtype:a,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}},{"@tensorflow/tfjs-core":"fqGP4","../backend/state":"3jxc5","../errors":"eAG95","./topology":"Fr8bO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3jxc5":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getNextUniqueTensorId",()=>d),t.export(s,"getUid",()=>f);let r=0;function d(){return r++}const m={};function f(i=""){return i in m||(m[i]=0),m[i]+=1,i+m[i].toString()}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],Fr8bO:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"InputSpec",()=>l),t.export(s,"SymbolicTensor",()=>u),t.export(s,"Node",()=>h),t.export(s,"Layer",()=>v),t.export(s,"getSourceInputs",()=>y);var r=e("@tensorflow/tfjs-core"),d=e("../backend/state"),m=e("../common"),f=e("../errors"),i=e("../initializers"),o=e("../utils/generic_utils"),n=e("../utils/types_utils"),c=e("../utils/variable_utils"),a=e("../variables");class l{constructor(b){this.dtype=b.dtype,this.shape=b.shape,b.shape!=null?this.ndim=b.shape.length:this.ndim=b.ndim,this.maxNDim=b.maxNDim,this.minNDim=b.minNDim,this.axes=b.axes||{}}}class u{constructor(b,C,w,N,T,F,S){this.dtype=b,this.shape=C,this.sourceLayer=w,this.inputs=N,this.callArgs=T,this.outputTensorIndex=S,this.id=(0,d.getNextUniqueTensorId)(),F!=null&&(this.originalName=(0,m.getScopedTensorName)(F),this.name=(0,m.getUniqueTensorName)(this.originalName)),this.rank=C.length}}let p=0;class h{constructor(b,C){this.callArgs=C,this.id=p++,this.outboundLayer=b.outboundLayer,this.inboundLayers=b.inboundLayers,this.nodeIndices=b.nodeIndices,this.tensorIndices=b.tensorIndices,this.inputTensors=b.inputTensors,this.outputTensors=b.outputTensors,this.inputMasks=b.inputMasks,this.outputMasks=b.outputMasks,this.inputShapes=b.inputShapes,this.outputShapes=b.outputShapes;for(const w of b.inboundLayers)w!=null&&w.outboundNodes.push(this);b.outboundLayer.inboundNodes.push(this)}getConfig(){const b=[];for(const C of this.inboundLayers)C!=null?b.push(C.name):b.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:b,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let g=0;class v extends r.serialization.Serializable{constructor(b={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=g++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let C=b.name;if(!C){const w=this.getClassName();C=o.toSnakeCase(w)+"_"+(0,d.getUid)(w)}if(this.name=C,this.trainable_=b.trainable==null?!0:b.trainable,b.inputShape!=null||b.batchInputShape!=null){let w;if(b.batchInputShape!=null)w=b.batchInputShape;else if(b.inputShape!=null){let T=null;b.batchSize!=null&&(T=b.batchSize),w=[T].concat(b.inputShape)}this.batchInputShape=w;let N=b.dtype;N==null&&(N=b.inputDType),N==null&&(N="float32"),this.dtype=N}b.weights!=null?this.initialWeights=b.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(b,C){return b.name+"_ib-"+C.toString()}getNodeAtIndex(b,C){if(this.inboundNodes.length===0)throw new f.RuntimeError(`The layer has never been called and thus has no defined ${C}.`);if(this.inboundNodes.length<=b)throw new f.ValueError(`Asked to get ${C} at node ${b}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[b]}getInputAt(b){return o.singletonOrArray(this.getNodeAtIndex(b,"input").inputTensors)}getOutputAt(b){return o.singletonOrArray(this.getNodeAtIndex(b,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new f.AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new f.AttributeError(`Layer ${this.name} is not connected, no input to return.`);return o.singletonOrArray(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new f.AttributeError(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new f.AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return o.singletonOrArray(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(b=>b())}get updates(){return this._updates}get built(){return this._built}set built(b){this._built=b}get trainable(){return this.trainable_}set trainable(b){this._trainableWeights.forEach(C=>C.trainable=b),this.trainable_=b}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(b=>b.trainable):[]}set trainableWeights(b){this._trainableWeights=b}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(b=>!b.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(b){this._nonTrainableWeights=b}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(b){if(b=o.toList(b),this.inputSpec==null||this.inputSpec.length===0)return;const C=o.toList(this.inputSpec);if(b.length!==C.length)throw new f.ValueError(`Layer ${this.name} expects ${C.length} inputs, but it received ${b.length} input tensors. Input received: ${b}`);for(let w=0;w<b.length;w++){const N=b[w],T=C[w];if(T==null)continue;const F=N.rank;if(T.ndim!=null&&F!==T.ndim)throw new f.ValueError(`Input ${w} is incompatible with layer ${this.name}: expected ndim=${T.ndim}, found ndim=${F}`);if(T.maxNDim!=null&&F>T.maxNDim)throw new f.ValueError(`Input ${w} is incompatible with layer ${this.name}: expected max_ndim=${T.maxNDim}, found ndim=${F}`);if(T.minNDim!=null&&F<T.minNDim)throw new f.ValueError(`Input ${w} is incompatible with layer ${this.name}: expected min_ndim=${T.minNDim}, found ndim=${F}.`);if(T.dtype!=null&&N.dtype!==T.dtype)throw new f.ValueError(`Input ${w} is incompatible with layer ${this.name} : expected dtype=${T.dtype}, found dtype=${N.dtype}.`);if(T.axes){const S=N.shape;for(const I in T.axes){const j=Number(I),D=T.axes[I],O=j>=0?S[j]:S[S.length+j];if(D!=null&&[D,null].indexOf(O)===-1)throw new f.ValueError(`Input ${w} is incompatible with layer ${this.name}: expected axis ${j} of input shape to have value ${D} but got shape ${S}.`)}}if(T.shape!=null)for(let S=0;S<T.shape.length;++S){const I=T.shape[S],j=N.shape[S];if(I!=null&&j!=null&&I!==j)throw new f.ValueError(`Input ${w} is incompatible with layer ${this.name}: expected shape=${T.shape}, found shape=${N.shape}.`)}}}call(b,C){return b}invokeCallHook(b,C){this._callHook!=null&&this._callHook(b,C)}setCallHook(b){this._callHook=b}clearCallHook(){this._callHook=null}apply(b,C){C=C||{},this.assertNotDisposed();const w=o.toList(b);let N=!0;for(const F of w)if(!(F instanceof u)){N=!1;break}let T=!0;for(const F of w)if(F instanceof u){T=!1;break}if(N===T)throw new f.ValueError("Arguments to apply() must be all SymbolicTensors or all Tensors");return(0,m.nameScope)(this.name,()=>{if(!this.built){this.assertInputCompatibility(b);const F=[];for(const S of o.toList(b))F.push(S.shape);this.build(o.singletonOrArray(F)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&T&&(this._refCount=1)}if(this.assertInputCompatibility(b),T){let F=this.call(b,C);const S=o.toList(F),I=[];for(let j of S)w.indexOf(j)!==-1&&(j=j.clone()),I.push(j);if(F=o.singletonOrArray(I),this.activityRegularizer!=null)throw new f.NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return F}else{const F=_(b),S=this.computeOutputShape(F);let I;const j=k(b);if(this.warnOnIncompatibleInputShape(Array.isArray(b)?F[0]:F),S!=null&&S.length>0&&Array.isArray(S[0])?I=S.map((D,O)=>new u(j,D,this,o.toList(b),C,this.name,O)):I=new u(j,S,this,o.toList(b),C,this.name),this.addInboundNode(b,I,null,null,F,S,C),this._refCount++,this.activityRegularizer!=null)throw new f.NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return I}})}warnOnIncompatibleInputShape(b){if(this.batchInputShape!=null)if(b.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(b)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let C=!1;this.batchInputShape.forEach((w,N)=>{w!=null&&b[N]!=null&&b[N]!==w&&(C=!0)}),C&&console.warn(`The shape of the input tensor (${JSON.stringify(b)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new f.AttributeError(`The layer ${this.name} has never been called and thus has no defined output shape.`);const b=[];for(const C of this.inboundNodes){const w=JSON.stringify(C.outputShapes);b.indexOf(w)===-1&&b.push(w)}if(b.length===1){const C=this.inboundNodes[0].outputShapes;return Array.isArray(C)&&Array.isArray(C[0])&&C.length===1?C[0]:C}else throw new f.AttributeError(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new f.RuntimeError(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return c.countParamsInWeights(this.weights)}build(b){this.built=!0}getWeights(b=!1){return(0,a.batchGetValue)(b?this.trainableWeights:this.weights)}setWeights(b){(0,r.tidy)(()=>{const C=this.weights;if(C.length!==b.length)throw new f.ValueError(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${b.length}, but the layer was expecting ${C.length} weights. Provided weights: ${b}...`);if(C.length===0)return;const w=[],N=(0,a.batchGetValue)(C);for(let T=0;T<N.length;++T){const F=N[T],S=C[T],I=b[T];if(!r.util.arraysEqual(F.shape,I.shape))throw new f.ValueError(`Layer weight shape ${F.shape} not compatible with provided weight shape ${I.shape}`);w.push([S,I])}(0,a.batchSetValue)(w)})}addWeight(b,C,w,N,T,F,S,I){if(this._addedWeightNames.indexOf(b)!==-1)throw new f.ValueError(`Duplicate weight name ${b} for layer ${this.name}`);this._addedWeightNames.push(b),w==null&&(w="float32"),this.fastWeightInitDuringBuild&&(N=I!=null?I():(0,i.getInitializer)("zeros"));const j=N.apply(C,w),D=new a.LayerVariable(j,w,b,F,S);return j.dispose(),T!=null&&this.addLoss(()=>T.apply(D.read())),F==null&&(F=!0),F?this._trainableWeights.push(D):this._nonTrainableWeights.push(D),D}setFastWeightInitDuringBuild(b){this.fastWeightInitDuringBuild=b}addLoss(b){b==null||Array.isArray(b)&&b.length===0||(b=o.toList(b),this._losses!==void 0&&this._losses!==null&&this.losses.push(...b))}computeOutputShape(b){return b}computeMask(b,C){if(!this.supportsMasking){if(C!=null)if(Array.isArray(C))C.forEach(w=>{if(w!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return C}addInboundNode(b,C,w,N,T,F,S=null){const I=o.toList(b);C=o.toList(C),w=o.toList(w),N=o.toList(N),T=n.normalizeShapeList(T),F=n.normalizeShapeList(F);const j=[],D=[],O=[];for(const $ of I)j.push($.sourceLayer),D.push($.nodeIndex),O.push($.tensorIndex);new h({outboundLayer:this,inboundLayers:j,nodeIndices:D,tensorIndices:O,inputTensors:I,outputTensors:C,inputMasks:w,outputMasks:N,inputShapes:T,outputShapes:F},S);for(let $=0;$<C.length;$++)C[$].sourceLayer=this,C[$].nodeIndex=this.inboundNodes.length-1,C[$].tensorIndex=$}getConfig(){const b={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(b.batchInputShape=this.batchInputShape),this.dtype!=null&&(b.dtype=this.dtype),b}disposeWeights(){return this.weights.forEach(b=>b.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let b=0;return--this._refCount==0&&(b=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:b}}}function _(x){x=o.toList(x);const b=[];for(const C of x)b.push(C.shape);return o.singletonOrArray(b)}function k(x){return"float32"}function y(x,b,C){if((b==null||C!=null&&C>0)&&(b=x.sourceLayer,C=x.nodeIndex),b.inboundNodes.length===0)return[x];{const w=b.inboundNodes[C];if(w.inboundLayers.length===0)return w.inputTensors;{const N=[];for(let T=0;T<w.inboundLayers.length;T++){const F=w.inputTensors[T],S=w.inboundLayers[T],I=w.nodeIndices[T],j=y(F,S,I);for(const D of j)N.indexOf(D)===-1&&N.push(D)}return N}}}},{"@tensorflow/tfjs-core":"fqGP4","../backend/state":"3jxc5","../common":"hHHWg","../errors":"eAG95","../initializers":"j99Rp","../utils/generic_utils":"gl5LS","../utils/types_utils":"fJq00","../utils/variable_utils":"kkX6H","../variables":"8n5g7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hHHWg:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"checkDataFormat",()=>f),t.export(s,"checkInterpolationFormat",()=>i),t.export(s,"checkPaddingMode",()=>o),t.export(s,"checkPoolMode",()=>n),t.export(s,"nameScope",()=>l),t.export(s,"getScopedTensorName",()=>p),t.export(s,"getUniqueTensorName",()=>h),t.export(s,"isValidTensorName",()=>v);var r=e("./keras_format/common"),d=e("./utils/generic_utils");const m=new Map;function f(_){(0,d.checkStringTypeUnionValue)(r.VALID_DATA_FORMAT_VALUES,"DataFormat",_)}function i(_){(0,d.checkStringTypeUnionValue)(r.VALID_INTERPOLATION_FORMAT_VALUES,"InterpolationFormat",_)}function o(_){(0,d.checkStringTypeUnionValue)(r.VALID_PADDING_MODE_VALUES,"PaddingMode",_)}function n(_){(0,d.checkStringTypeUnionValue)(r.VALID_POOL_MODE_VALUES,"PoolMode",_)}const c=[],a="/";function l(_,k){c.push(_);try{const y=k();return c.pop(),y}catch(y){throw c.pop(),y}}function u(){return c.length===0?"":c.join(a)+a}function p(_){if(!v(_))throw new Error("Not a valid tensor name: '"+_+"'");return u()+_}function h(_){if(!v(_))throw new Error("Not a valid tensor name: '"+_+"'");m.has(_)||m.set(_,0);const k=m.get(_);if(m.set(_,m.get(_)+1),k>0){const y=`${_}_${k}`;return m.set(y,1),y}else return _}const g=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function v(_){return!!_.match(g)}},{"./keras_format/common":"9kIj8","./utils/generic_utils":"gl5LS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9kIj8":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"VALID_DATA_FORMAT_VALUES",()=>r),t.export(s,"VALID_INTERPOLATION_FORMAT_VALUES",()=>d),t.export(s,"VALID_PADDING_MODE_VALUES",()=>m),t.export(s,"VALID_POOL_MODE_VALUES",()=>f),t.export(s,"VALID_BIDIRECTIONAL_MERGE_MODES",()=>i),t.export(s,"VALID_SAMPLE_WEIGHT_MODES",()=>o);const r=["channelsFirst","channelsLast"],d=["nearest","bilinear"],m=["valid","same","causal"],f=["max","avg"],i=["sum","mul","concat","ave"],o=["temporal"]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],j99Rp:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"checkFanMode",()=>c),t.export(s,"checkDistribution",()=>a),t.export(s,"Initializer",()=>l),t.export(s,"Zeros",()=>u),t.export(s,"Ones",()=>p),t.export(s,"Constant",()=>h),t.export(s,"RandomUniform",()=>g),t.export(s,"RandomNormal",()=>v),t.export(s,"TruncatedNormal",()=>_),t.export(s,"Identity",()=>k),t.export(s,"VarianceScaling",()=>x),t.export(s,"GlorotUniform",()=>b),t.export(s,"GlorotNormal",()=>C),t.export(s,"HeNormal",()=>w),t.export(s,"HeUniform",()=>N),t.export(s,"LeCunNormal",()=>T),t.export(s,"LeCunUniform",()=>F),t.export(s,"Orthogonal",()=>S),t.export(s,"INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP",()=>I),t.export(s,"serializeInitializer",()=>D),t.export(s,"getInitializer",()=>O);var r=e("@tensorflow/tfjs-core"),d=e("./backend/tfjs_backend"),m=e("./common"),f=e("./errors"),i=e("./keras_format/initializer_config"),o=e("./utils/generic_utils"),n=e("./utils/math_utils");function c($){(0,o.checkStringTypeUnionValue)(i.VALID_FAN_MODE_VALUES,"FanMode",$)}function a($){(0,o.checkStringTypeUnionValue)(i.VALID_DISTRIBUTION_VALUES,"Distribution",$)}class l extends r.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class u extends l{apply(P,R){return(0,r.zeros)(P,R)}}u.className="Zeros",r.serialization.registerClass(u);class p extends l{apply(P,R){return(0,r.ones)(P,R)}}p.className="Ones",r.serialization.registerClass(p);class h extends l{constructor(P){super();if(typeof P!="object")throw new f.ValueError(`Expected argument of type ConstantConfig but got ${P}`);if(P.value===void 0)throw new f.ValueError(`config must have value set but got ${P}`);this.value=P.value}apply(P,R){return(0,r.tidy)(()=>(0,r.mul)((0,r.scalar)(this.value),(0,r.ones)(P,R)))}getConfig(){return{value:this.value}}}h.className="Constant",r.serialization.registerClass(h);class g extends l{constructor(P){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=P.minval||this.DEFAULT_MINVAL,this.maxval=P.maxval||this.DEFAULT_MAXVAL,this.seed=P.seed}apply(P,R){return(0,r.randomUniform)(P,this.minval,this.maxval,R,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}g.className="RandomUniform",r.serialization.registerClass(g);class v extends l{constructor(P){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=P.mean||this.DEFAULT_MEAN,this.stddev=P.stddev||this.DEFAULT_STDDEV,this.seed=P.seed}apply(P,R){if(R=R||"float32",R!=="float32"&&R!=="int32")throw new f.NotImplementedError(`randomNormal does not support dType ${R}.`);return d.randomNormal(P,this.mean,this.stddev,R,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}v.className="RandomNormal",r.serialization.registerClass(v);class _ extends l{constructor(P){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=P.mean||this.DEFAULT_MEAN,this.stddev=P.stddev||this.DEFAULT_STDDEV,this.seed=P.seed}apply(P,R){if(R=R||"float32",R!=="float32"&&R!=="int32")throw new f.NotImplementedError(`truncatedNormal does not support dType ${R}.`);return(0,r.truncatedNormal)(P,this.mean,this.stddev,R,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_.className="TruncatedNormal",r.serialization.registerClass(_);class k extends l{constructor(P){super();this.gain=P.gain!=null?P.gain:1}apply(P,R){return(0,r.tidy)(()=>{if(P.length!==2||P[0]!==P[1])throw new f.ValueError("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.mul)(this.gain,(0,r.eye)(P[0]))})}getConfig(){return{gain:this.gain}}}k.className="Identity",r.serialization.registerClass(k);function y($,P="channelsLast"){let R,A;if((0,m.checkDataFormat)(P),$.length===2)R=$[0],A=$[1];else if([3,4,5].indexOf($.length)!==-1){if(P==="channelsFirst"){const z=(0,n.arrayProd)($,2);R=$[1]*z,A=$[0]*z}else if(P==="channelsLast"){const z=(0,n.arrayProd)($,0,$.length-2);R=$[$.length-2]*z,A=$[$.length-1]*z}}else{const z=(0,n.arrayProd)($);R=Math.sqrt(z),A=Math.sqrt(z)}return[R,A]}class x extends l{constructor(P){super();if(P.scale<0)throw new f.ValueError(`scale must be a positive float. Got: ${P.scale}`);this.scale=P.scale==null?1:P.scale,this.mode=P.mode==null?"fanIn":P.mode,c(this.mode),this.distribution=P.distribution==null?"normal":P.distribution,a(this.distribution),this.seed=P.seed}apply(P,R){const A=y(P),z=A[0],G=A[1];let L=this.scale;if(this.mode==="fanIn"?L/=Math.max(1,z):this.mode==="fanOut"?L/=Math.max(1,G):L/=Math.max(1,(z+G)/2),this.distribution==="normal"){const M=Math.sqrt(L);if(R=R||"float32",R!=="float32"&&R!=="int32")throw new f.NotImplementedError(`${this.getClassName()} does not support dType ${R}.`);return(0,r.truncatedNormal)(P,0,M,R,this.seed)}else{const M=Math.sqrt(3*L);return(0,r.randomUniform)(P,-M,M,R,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}x.className="VarianceScaling",r.serialization.registerClass(x);class b extends x{constructor(P){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:P==null?null:P.seed})}getClassName(){return x.className}}b.className="GlorotUniform",r.serialization.registerClass(b);class C extends x{constructor(P){super({scale:1,mode:"fanAvg",distribution:"normal",seed:P==null?null:P.seed})}getClassName(){return x.className}}C.className="GlorotNormal",r.serialization.registerClass(C);class w extends x{constructor(P){super({scale:2,mode:"fanIn",distribution:"normal",seed:P==null?null:P.seed})}getClassName(){return x.className}}w.className="HeNormal",r.serialization.registerClass(w);class N extends x{constructor(P){super({scale:2,mode:"fanIn",distribution:"uniform",seed:P==null?null:P.seed})}getClassName(){return x.className}}N.className="HeUniform",r.serialization.registerClass(N);class T extends x{constructor(P){super({scale:1,mode:"fanIn",distribution:"normal",seed:P==null?null:P.seed})}getClassName(){return x.className}}T.className="LeCunNormal",r.serialization.registerClass(T);class F extends x{constructor(P){super({scale:1,mode:"fanIn",distribution:"uniform",seed:P==null?null:P.seed})}getClassName(){return x.className}}F.className="LeCunUniform",r.serialization.registerClass(F);class S extends l{constructor(P){super();this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=P.gain==null?this.DEFAULT_GAIN:P.gain,this.seed=P.seed}apply(P,R){return(0,r.tidy)(()=>{if(P.length<2)throw new f.NotImplementedError("Shape must be at least 2D.");if(R!=="int32"&&R!=="float32"&&R!==void 0)throw new TypeError(`Unsupported data type ${R}.`);const A=r.util.sizeFromShape(P.slice(0,-1)),z=P[P.length-1],G=A*z;G>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${G}) elements: Slowness may result.`);const L=[Math.max(z,A),Math.min(z,A)],M=d.randomNormal(L,0,1,R,this.seed),V=r.linalg.qr(M,!1);let K=V[0];const H=V[1].flatten().stridedSlice([0],[Math.min(z,A)*Math.min(z,A)],[Math.min(z,A)+1]);return K=(0,r.mul)(K,H.sign()),A<z&&(K=K.transpose()),(0,r.mul)((0,r.scalar)(this.gain),K.reshape(P))})}getConfig(){return{gain:this.gain,seed:this.seed}}}S.className="Orthogonal",r.serialization.registerClass(S);const I={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function j($,P={}){return(0,o.deserializeKerasObject)($,r.serialization.SerializationMap.getMap().classNameMap,P,"initializer")}function D($){return(0,o.serializeKerasObject)($)}function O($){if(typeof $=="string"){const P=$ in I?I[$]:$;if(P==="GlorotNormal")return new C;if(P==="GlorotUniform")return new b;if(P==="HeNormal")return new w;if(P==="HeUniform")return new N;if(P==="LeCunNormal")return new T;if(P==="LeCunUniform")return new F;{const R={};return R.className=P,R.config={},j(R)}}else return $ instanceof l?$:j($)}},{"@tensorflow/tfjs-core":"fqGP4","./backend/tfjs_backend":"2pIRC","./common":"hHHWg","./errors":"eAG95","./keras_format/initializer_config":"3kyCw","./utils/generic_utils":"gl5LS","./utils/math_utils":"1DUeI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2pIRC":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"setBackend",()=>n),t.export(s,"getBackend",()=>c),t.export(s,"isBackendSymbolic",()=>a),t.export(s,"countParams",()=>l),t.export(s,"cast",()=>u),t.export(s,"expandDims",()=>p),t.export(s,"repeat",()=>h),t.export(s,"flatten",()=>g),t.export(s,"batchFlatten",()=>v),t.export(s,"sliceAlongFirstAxis",()=>_),t.export(s,"sliceAlongLastAxis",()=>k),t.export(s,"sliceAlongAxis",()=>y),t.export(s,"concatenate",()=>x),t.export(s,"concatAlongFirstAxis",()=>b),t.export(s,"tile",()=>C),t.export(s,"randomNormal",()=>w),t.export(s,"dot",()=>N),t.export(s,"sign",()=>T),t.export(s,"oneHot",()=>F),t.export(s,"gather",()=>S),t.export(s,"square",()=>I),t.export(s,"pow",()=>j),t.export(s,"biasAdd",()=>O),t.export(s,"elu",()=>$),t.export(s,"softsign",()=>P),t.export(s,"dropout",()=>R),t.export(s,"hardSigmoid",()=>A),t.export(s,"inTrainPhase",()=>z);var r=e("@tensorflow/tfjs-core"),d=e("../common"),m=e("../errors"),f=e("../utils/math_utils"),i=e("./common");let o="webgl";function n(G){r.setBackend(G),o=G}function c(){return o}function a(){return!1}function l(G){const L=G.shape;return L.length>0?L.reduce((M,V)=>M*V):1}function u(G,L){return r.cast(G,L)}function p(G,L=-1){const M=G.shape.slice();return L<0&&(L=M.length+L+1),M.splice(L,0,1),r.reshape(G,M)}function h(G,L){return(0,r.tidy)(()=>{if(G.shape.length!==2)throw new m.ValueError(`repeat() expects a rank-2 tensor, but received a rank-${G.shape.length} tensor.`);const M=p(G,1);return C(M,[1,L,1])})}function g(G){const L=[f.arrayProd(G.shape)];return r.reshape(G,L)}function v(G){if(G.rank<=1)throw new m.ValueError(`batchFlatten requires a minimum rank of 2. Got rank: ${G.rank}.`);const L=[G.shape[0],f.arrayProd(G.shape,1)];return r.reshape(G,L)}function _(G,L,M){return(0,r.tidy)(()=>{switch(G.rank){case 1:return r.slice1d(G,L,M);case 2:return r.slice2d(G,[L,0],[M,G.shape[1]]);case 3:return r.slice3d(G,[L,0,0],[M,G.shape[1],G.shape[2]]);case 4:return r.slice4d(G,[L,0,0,0],[M,G.shape[1],G.shape[2],G.shape[3]]);case 5:return r.slice(G,[L,0,0,0,0],[M,G.shape[1],G.shape[2],G.shape[3],G.shape[4]]);case 6:return r.slice(G,[L,0,0,0,0,0],[M,G.shape[1],G.shape[2],G.shape[3],G.shape[4],G.shape[5]]);default:throw new m.ValueError(`sliceAlongFirstAxis() received an unsupported tensor rank: ${G.rank}`)}})}function k(G,L,M){return(0,r.tidy)(()=>{switch(G.rank){case 1:return r.slice1d(G,L,M);case 2:return r.slice2d(G,[0,L],[G.shape[0],M]);case 3:return r.slice3d(G,[0,0,L],[G.shape[0],G.shape[1],M]);case 4:return r.slice4d(G,[0,0,0,L],[G.shape[0],G.shape[1],G.shape[2],M]);default:throw new m.ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${G.rank}`)}})}function y(G,L,M,V){return(0,r.tidy)(()=>{switch(G.rank){case 1:return r.slice1d(G,L,M);case 2:switch(V){case 1:return _(G,L,M);case 2:return k(G,L,M);default:throw new m.ValueError(`The axis is not within the rank of the tensor ${V}`)}case 3:switch(V){case 1:return _(G,L,M);case 2:return r.slice3d(G,[0,L,0],[G.shape[0],M,G.shape[2]]);case 3:return k(G,L,M);default:throw new m.ValueError(`The axis is not within the rank of the tensor ${V}`)}case 4:switch(V){case 1:return _(G,L,M);case 2:return r.slice4d(G,[0,L,0,0],[G.shape[0],M,G.shape[2],G.shape[3]]);case 3:return r.slice4d(G,[0,0,L,0],[G.shape[0],G.shape[1],M,G.shape[3]]);case 4:return k(G,L,M);default:throw new m.ValueError(`The axis is not within the rank of the tensor ${V}`)}default:throw new m.ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${G.rank}`)}})}function x(G,L=-1){let M;return L<0&&(M=G[0].rank,M!==0?L=M:L=0),L===G[0].rank&&(L=-1),r.concat(G,L)}function b(G,L){switch(G.rank){case 1:return r.concat1d([G,L]);case 2:return r.concat2d([G,L],0);case 3:return r.concat3d([G,L],0);case 4:return r.concat4d([G,L],0);default:throw new m.ValueError(`concatAlongFirstAxis() received an unsupported tensor rank: ${G.rank}`)}}function C(G,L){if(Array.isArray(L)||(L=[L]),G.rank!==L.length)throw new m.ValueError(`The length of input n (${L.length}) does not match the number of dimensions in input x (${G.rank})`);return r.tile(G,L)}function w(G,L=0,M=1,V,K){return r.randomNormal(G,L,M,V,K)}function N(G,L,M,V){if(G.rank<2||L.rank<2)throw new m.NotImplementedError(`dot requires both inputs to be rank >= 2 but got x shape = ${G.shape} and y shape = ${L.shape}`);if(L.rank>=3){const K=G.shape.slice(-1)[0],W=L.shape.slice(-2)[0];if(K!==W)throw new m.NotImplementedError(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${G.shape} and  y shape = ${L.shape}`)}if(G.rank===2&&L.rank===2){const K=!1,W=!1;return r.fused.matMul({a:G,b:L,transposeA:K,transposeB:W,bias:V?D(G.rank,V,(0,i.imageDataFormat)()):null,activation:M})}else{const K=G.shape.slice(),W=K.pop();G=r.reshape(G,[-1,W]);const H=L.shape.slice(),Z=H.pop(),Q=H.pop(),te=[...H,Z],ee=Array.from({length:L.rank},(U,Y)=>Y===0?L.rank-2:Y<=L.rank-2?Y-1:Y);L=r.reshape(r.transpose(L,ee),[Q,-1]);const ne=[...K,...te],se=!1,X=!1;return r.reshape(r.fused.matMul({a:G,b:L,transposeA:se,transposeB:X,bias:V?D(G.rank,V,(0,i.imageDataFormat)()):null,activation:M}),ne)}}function T(G){return(0,r.tidy)(()=>{const L=(0,r.zerosLike)(G),M=(0,r.onesLike)(G);return(0,r.where)(r.equal(G,L),L,(0,r.where)(r.greater(G,(0,r.zerosLike)(G)),M,r.mul(-1,M)))})}function F(G,L){return(0,r.tidy)(()=>{if(G.rank!==1)throw new Error("Only 1D one-hot tensors are supported in the deeplearn backend, at present.");return G=r.cast(G,"int32"),r.cast(r.oneHot(G,L),"float32")})}function S(G,L,M){return(0,r.tidy)(()=>(Array.isArray(L)?L=(0,r.tensor1d)(L,"int32"):L=r.cast(L,"int32"),r.gather(G,L,M)))}function I(G){return r.mul(G,G)}function j(G,L){return(0,r.tidy)(()=>{if(typeof L=="number"&&(L=(0,r.scalar)(Math.round(L),"int32")),L.dtype!=="int32")throw new m.NotImplementedError(`Non-int32 dtype (${L.dtype}) is not supported by pow() yet`);return r.pow(G,L)})}function D(G,L,M){const V=L.shape;if(L.rank!==1&&L.rank!==G)throw new m.ValueError(`Unexpected bias dimensions: ${L.rank}; expected it to be 1 or ${G}`);if(G===5){if(M==="channelsFirst")return V.length===1?r.reshape(L,[1,V[0],1,1,1]):r.reshape(L,[1,V[3],V[0],V[1],V[2]]);if(M==="channelsLast")return V.length===1?r.reshape(L,[1,1,1,1,V[0]]):r.reshape(L,[1].concat(V))}else if(G===4){if(M==="channelsFirst")return V.length===1?r.reshape(L,[1,V[0],1,1]):r.reshape(L,[1,V[2],V[0],V[1]]);if(M==="channelsLast")return V.length===1?r.reshape(L,[1,1,1,V[0]]):r.reshape(L,[1].concat(V))}else if(G===3){if(M==="channelsFirst")return V.length===1?r.reshape(L,[1,V[0],1]):r.reshape(L,[1,V[1],V[0]]);if(M==="channelsLast")return V.length===1?r.reshape(L,[1,1,V[0]]):r.reshape(L,[1].concat(V))}else if(G<3)return L;throw new m.ValueError(`Unsupported input rank by biasAdd: ${L.rank}`)}function O(G,L,M){return(0,r.tidy)(()=>(M==null&&(M=(0,i.imageDataFormat)()),(0,d.checkDataFormat)(M),r.add(G,D(G.rank,L,M))))}function $(G,L=1){if(L!==1)throw new m.NotImplementedError(`Support for alpha values other than 1 (${L}) is not implemented yet.`);return r.elu(G)}function P(G){return(0,r.tidy)(()=>r.div(G,r.add(r.abs(G),1)))}function R(G,L,M,V){return(0,r.tidy)(()=>r.dropout(G,L,M,V))}function A(G){return(0,r.tidy)(()=>{const L=r.add(.5,r.mul(.2,G));return r.clipByValue(L,0,1)})}function z(G,L,M=!1){return M?G():L()}},{"@tensorflow/tfjs-core":"fqGP4","../common":"hHHWg","../errors":"eAG95","../utils/math_utils":"1DUeI","./common":"7Ax0n","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1DUeI":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isInteger",()=>d),t.export(s,"arrayProd",()=>m),t.export(s,"min",()=>f),t.export(s,"max",()=>i),t.export(s,"sum",()=>o),t.export(s,"mean",()=>n),t.export(s,"variance",()=>c),t.export(s,"median",()=>a),t.export(s,"range",()=>l);var r=e("../errors");function d(u){return u===parseInt(u.toString(),10)}function m(u,p,h){p==null&&(p=0),h==null&&(h=u.length);let g=1;for(let v=p;v<h;++v)g*=u[v];return g}function f(u){if(u.length===0)return Number.NaN;let p=Number.POSITIVE_INFINITY;for(let h=0;h<u.length;h++){const g=u[h];g<p&&(p=g)}return p}function i(u){if(u.length===0)return Number.NaN;let p=Number.NEGATIVE_INFINITY;for(let h=0;h<u.length;h++){const g=u[h];g>p&&(p=g)}return p}function o(u){let p=0;for(let h=0;h<u.length;h++)p+=u[h];return p}function n(u){return o(u)/u.length}function c(u){const p=n(u),h=u.map(v=>v-p);let g=0;for(let v=0;v<h.length;v++){const _=h[v];g+=_*_}return g/u.length}function a(u){const p=u.slice().sort((v,_)=>v-_),h=Math.floor((p.length-1)/2),g=Math.ceil((p.length-1)/2);return h===g?p[h]:(p[h]+p[g])/2}function l(u,p){if(p<u)throw new r.ValueError(`end (${p}) < begin (${u}) is forbidden.`);const h=[];for(let g=u;g<p;++g)h.push(g);return h}},{"../errors":"eAG95","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7Ax0n":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"epsilon",()=>m),t.export(s,"setEpsilon",()=>f),t.export(s,"imageDataFormat",()=>i);var r=e("@tensorflow/tfjs-core");let d;function m(){return d==null&&(d=(0,r.backend)().epsilon()),d}function f(o){d=o}function i(){return"channelsLast"}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3kyCw":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"VALID_FAN_MODE_VALUES",()=>r),t.export(s,"VALID_DISTRIBUTION_VALUES",()=>d),t.export(s,"initializerClassNames",()=>m);const r=["fanIn","fanOut","fanAvg"],d=["normal","uniform","truncatedNormal"],m=["Zeros","Ones","Constant","RandomNormal","RandomUniform","TruncatedNormal","VarianceScaling","Orthogonal","Identity"]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fJq00:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isArrayOfShapes",()=>d),t.export(s,"normalizeShapeList",()=>m),t.export(s,"getExactlyOneTensor",()=>f),t.export(s,"getExactlyOneShape",()=>i);var r=e("../errors");function d(o){return Array.isArray(o)&&Array.isArray(o[0])}function m(o){return o.length===0?[]:Array.isArray(o[0])?o:[o]}function f(o){let n;if(Array.isArray(o)){if(o.length!==1)throw new r.ValueError(`Expected Tensor length to be 1; got ${o.length}`);n=o[0]}else n=o;return n}function i(o){if(Array.isArray(o)&&Array.isArray(o[0])){if(o.length===1)return o[0];throw new r.ValueError(`Expected exactly 1 Shape; got ${o.length}`)}else return o}},{"../errors":"eAG95","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kkX6H:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"countParamsInWeights",()=>r);function r(d){let m=0;for(const f of d)f.shape.length===0?m+=1:m+=f.shape.reduce((i,o)=>i*o);return m}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8n5g7":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"LayerVariable",()=>o),t.export(s,"variable",()=>c),t.export(s,"zerosVariable",()=>a),t.export(s,"zerosLike",()=>l),t.export(s,"onesVariable",()=>u),t.export(s,"onesLike",()=>p),t.export(s,"eyeVariable",()=>h),t.export(s,"randomUniformVariable",()=>g),t.export(s,"truncatedNormalVariable",()=>v),t.export(s,"randomNormalVariable",()=>_),t.export(s,"update",()=>k),t.export(s,"updateAdd",()=>y),t.export(s,"updateSub",()=>x),t.export(s,"batchGetValue",()=>b),t.export(s,"batchSetValue",()=>C),t.export(s,"gradients",()=>w);var r=e("@tensorflow/tfjs-core"),d=e("./backend/state"),m=e("./common"),f=e("./errors");const i="Variable";class o{constructor(T,F="float32",S=i,I=!0,j=null){this.dtype=F??"float32",this.shape=T.shape,this.id=(0,d.getNextUniqueTensorId)(),S=S??i,this.originalName=(0,m.getScopedTensorName)(S),this.name=(0,m.getUniqueTensorName)(this.originalName),this.trainable_=I,this.constraint=j,this.val=r.variable(T,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(T){return this.assertNotDisposed(),n(this.val,T),this.val.id!==T.id&&(this.val.assign(T),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(T){this.trainable_=T,this.val.trainable=T}}function n(N,T){if(N.shape.toString()!==T.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(N.shape)+" vs. "+JSON.stringify(T.shape))}function c(N,T,F,S){return new o(N,T,F,!0,S)}function a(N,T,F){return new o(r.zeros(N),T,F)}function l(N,T,F){return new o(r.zerosLike(N),T,F)}function u(N,T,F){const S=r.ones(N);return new o(S,T,F)}function p(N,T,F){const S=r.onesLike(N);return new o(S,T,F)}function h(N,T,F){return new o(r.eye(N),T,F)}function g(N,T,F,S,I,j="randomUniform"){return new o(r.randomUniform(N,T,F,S),S,j)}function v(N,T=0,F=1,S,I,j="truncatedNormal"){if(S=S||"float32",S!=="float32"&&S!=="int32")throw new f.NotImplementedError(`randomNormal does not support dType ${S}.`);return new o(r.truncatedNormal(N,T,F,S,I),S,j)}function _(N,T=0,F=1,S,I,j="randomNormal"){if(S=S||"float32",S!=="float32"&&S!=="int32")throw new f.NotImplementedError(`randomNormalVariable does not support dType ${S}.`);return new o(r.randomNormal(N,T,F,S,I),S,j)}function k(N,T){return N.write(T)}function y(N,T){return N.write(r.add(N.read(),T))}function x(N,T){return N.write(r.sub(N.read(),T))}function b(N){return N.map(T=>T.read())}function C(N){N.forEach(T=>{T[0].write(T[1])})}function w(N,T){const F=T.map(I=>I.read()),S=(0,r.variableGrads)(N,F);return T.map(I=>S.grads[I.name])}},{"@tensorflow/tfjs-core":"fqGP4","./backend/state":"3jxc5","./common":"hHHWg","./errors":"eAG95","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],buGqR:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxNorm",()=>d),t.export(s,"unitNorm",()=>m),t.export(s,"nonNeg",()=>f),t.export(s,"minMaxNorm",()=>i);var r=e("./constraints");function d(o){return new r.MaxNorm(o)}function m(o){return new r.UnitNorm(o)}function f(){return new r.NonNeg}function i(o){return new r.MinMaxNorm(o)}},{"./constraints":"2NsZD","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2NsZD":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Constraint",()=>i),t.export(s,"MaxNorm",()=>o),t.export(s,"UnitNorm",()=>n),t.export(s,"NonNeg",()=>c),t.export(s,"MinMaxNorm",()=>a),t.export(s,"CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP",()=>l),t.export(s,"serializeConstraint",()=>u),t.export(s,"deserializeConstraint",()=>p),t.export(s,"getConstraint",()=>h);var r=e("@tensorflow/tfjs-core"),d=e("./backend/common"),m=e("./utils/generic_utils");function f(g,v){return(0,r.tidy)(()=>r.sqrt(r.sum(r.mul(g,g),v,!0)))}class i extends r.serialization.Serializable{getConfig(){return{}}}class o extends i{constructor(v){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=v.maxValue!=null?v.maxValue:this.defaultMaxValue,this.axis=v.axis!=null?v.axis:this.defaultAxis}apply(v){return(0,r.tidy)(()=>{const _=f(v,this.axis),k=r.clipByValue(_,0,this.maxValue);return r.mul(v,r.div(k,r.add((0,d.epsilon)(),_)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}o.className="MaxNorm",r.serialization.registerClass(o);class n extends i{constructor(v){super();this.defaultAxis=0,this.axis=v.axis!=null?v.axis:this.defaultAxis}apply(v){return(0,r.tidy)(()=>r.div(v,r.add((0,d.epsilon)(),f(v,this.axis))))}getConfig(){return{axis:this.axis}}}n.className="UnitNorm",r.serialization.registerClass(n);class c extends i{apply(v){return r.relu(v)}}c.className="NonNeg",r.serialization.registerClass(c);class a extends i{constructor(v){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=v.minValue!=null?v.minValue:this.defaultMinValue,this.maxValue=v.maxValue!=null?v.maxValue:this.defaultMaxValue,this.rate=v.rate!=null?v.rate:this.defaultRate,this.axis=v.axis!=null?v.axis:this.defaultAxis}apply(v){return(0,r.tidy)(()=>{const _=f(v,this.axis),k=r.add(r.mul(this.rate,r.clipByValue(_,this.minValue,this.maxValue)),r.mul(1-this.rate,_));return r.mul(v,r.div(k,r.add((0,d.epsilon)(),_)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}a.className="MinMaxNorm",r.serialization.registerClass(a);const l={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function u(g){return(0,m.serializeKerasObject)(g)}function p(g,v={}){return(0,m.deserializeKerasObject)(g,r.serialization.SerializationMap.getMap().classNameMap,v,"constraint")}function h(g){if(g==null)return null;if(typeof g=="string"){const _={className:g in l?l[g]:g,config:{}};return p(_)}else return g instanceof i?g:p(g)}},{"@tensorflow/tfjs-core":"fqGP4","./backend/common":"7Ax0n","./utils/generic_utils":"gl5LS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cmIhs:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"zeros",()=>d),t.export(s,"ones",()=>m),t.export(s,"constant",()=>f),t.export(s,"randomUniform",()=>i),t.export(s,"randomNormal",()=>o),t.export(s,"truncatedNormal",()=>n),t.export(s,"identity",()=>c),t.export(s,"varianceScaling",()=>a),t.export(s,"glorotUniform",()=>l),t.export(s,"glorotNormal",()=>u),t.export(s,"heNormal",()=>p),t.export(s,"heUniform",()=>h),t.export(s,"leCunNormal",()=>g),t.export(s,"leCunUniform",()=>v),t.export(s,"orthogonal",()=>_);var r=e("./initializers");function d(){return new r.Zeros}function m(){return new r.Ones}function f(k){return new r.Constant(k)}function i(k){return new r.RandomUniform(k)}function o(k){return new r.RandomNormal(k)}function n(k){return new r.TruncatedNormal(k)}function c(k){return new r.Identity(k)}function a(k){return new r.VarianceScaling(k)}function l(k){return new r.GlorotUniform(k)}function u(k){return new r.GlorotNormal(k)}function p(k){return new r.HeNormal(k)}function h(k){return new r.HeUniform(k)}function g(k){return new r.LeCunNormal(k)}function v(k){return new r.LeCunUniform(k)}function _(k){return new r.Orthogonal(k)}},{"./initializers":"j99Rp","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kF2tq:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"inputLayer",()=>w),t.export(s,"elu",()=>N),t.export(s,"reLU",()=>T),t.export(s,"leakyReLU",()=>F),t.export(s,"prelu",()=>S),t.export(s,"softmax",()=>I),t.export(s,"thresholdedReLU",()=>j),t.export(s,"conv1d",()=>D),t.export(s,"conv2d",()=>O),t.export(s,"conv2dTranspose",()=>$),t.export(s,"conv3d",()=>P),t.export(s,"conv3dTranspose",()=>R),t.export(s,"separableConv2d",()=>A),t.export(s,"cropping2D",()=>z),t.export(s,"upSampling2d",()=>G),t.export(s,"depthwiseConv2d",()=>L),t.export(s,"activation",()=>M),t.export(s,"dense",()=>V),t.export(s,"dropout",()=>K),t.export(s,"spatialDropout1d",()=>W),t.export(s,"flatten",()=>H),t.export(s,"repeatVector",()=>Z),t.export(s,"reshape",()=>Q),t.export(s,"permute",()=>te),t.export(s,"embedding",()=>ee),t.export(s,"add",()=>ne),t.export(s,"average",()=>se),t.export(s,"concatenate",()=>X),t.export(s,"maximum",()=>U),t.export(s,"minimum",()=>Y),t.export(s,"multiply",()=>J),t.export(s,"dot",()=>q),t.export(s,"batchNormalization",()=>ae),t.export(s,"layerNormalization",()=>ie),t.export(s,"zeroPadding2d",()=>le),t.export(s,"averagePooling1d",()=>ue),t.export(s,"avgPool1d",()=>B),t.export(s,"avgPooling1d",()=>re),t.export(s,"averagePooling2d",()=>oe),t.export(s,"avgPool2d",()=>de),t.export(s,"avgPooling2d",()=>fe),t.export(s,"averagePooling3d",()=>pe),t.export(s,"avgPool3d",()=>me),t.export(s,"avgPooling3d",()=>he),t.export(s,"globalAveragePooling1d",()=>ge),t.export(s,"globalAveragePooling2d",()=>ve),t.export(s,"globalMaxPooling1d",()=>ke),t.export(s,"globalMaxPooling2d",()=>_e),t.export(s,"maxPooling1d",()=>ye),t.export(s,"maxPooling2d",()=>be),t.export(s,"maxPooling3d",()=>Ce),t.export(s,"gru",()=>we),t.export(s,"gruCell",()=>xe),t.export(s,"lstm",()=>Ne),t.export(s,"lstmCell",()=>Ie),t.export(s,"simpleRNN",()=>Te),t.export(s,"simpleRNNCell",()=>Ee),t.export(s,"convLstm2d",()=>Fe),t.export(s,"convLstm2dCell",()=>De),t.export(s,"rnn",()=>Ae),t.export(s,"stackedRNNCells",()=>Pe),t.export(s,"bidirectional",()=>Re),t.export(s,"timeDistributed",()=>$e),t.export(s,"globalMaxPool1d",()=>Oe),t.export(s,"globalMaxPool2d",()=>Se),t.export(s,"maxPool1d",()=>je),t.export(s,"maxPool2d",()=>ze),t.export(s,"Layer",()=>d.Layer),t.export(s,"RNN",()=>v.RNN),t.export(s,"RNNCell",()=>v.RNNCell),t.export(s,"input",()=>m.input),t.export(s,"gaussianNoise",()=>Ge),t.export(s,"gaussianDropout",()=>Le),t.export(s,"alphaDropout",()=>Me),t.export(s,"masking",()=>Ve),t.export(s,"rescaling",()=>Ue),t.export(s,"centerCrop",()=>Be),t.export(s,"resizing",()=>He),t.export(s,"categoryEncoding",()=>We),t.export(s,"randomWidth",()=>Ke);var r=e("./engine/input_layer"),d=e("./engine/topology"),m=e("./exports"),f=e("./layers/advanced_activations"),i=e("./layers/convolutional"),o=e("./layers/convolutional_depthwise"),n=e("./layers/convolutional_recurrent"),c=e("./layers/core"),a=e("./layers/embeddings"),l=e("./layers/merge"),u=e("./layers/noise"),p=e("./layers/normalization"),h=e("./layers/padding"),g=e("./layers/pooling"),v=e("./layers/recurrent"),_=e("./layers/wrappers"),k=e("./layers/preprocessing/image_preprocessing"),y=e("./layers/preprocessing/center_crop"),x=e("./layers/preprocessing/category_encoding"),b=e("./layers/preprocessing/image_resizing"),C=e("./layers/preprocessing/random_width");function w(ce){return new r.InputLayer(ce)}function N(ce){return new f.ELU(ce)}function T(ce){return new f.ReLU(ce)}function F(ce){return new f.LeakyReLU(ce)}function S(ce){return new f.PReLU(ce)}function I(ce){return new f.Softmax(ce)}function j(ce){return new f.ThresholdedReLU(ce)}function D(ce){return new i.Conv1D(ce)}function O(ce){return new i.Conv2D(ce)}function $(ce){return new i.Conv2DTranspose(ce)}function P(ce){return new i.Conv3D(ce)}function R(ce){return new i.Conv3DTranspose(ce)}function A(ce){return new i.SeparableConv2D(ce)}function z(ce){return new i.Cropping2D(ce)}function G(ce){return new i.UpSampling2D(ce)}function L(ce){return new o.DepthwiseConv2D(ce)}function M(ce){return new c.Activation(ce)}function V(ce){return new c.Dense(ce)}function K(ce){return new c.Dropout(ce)}function W(ce){return new c.SpatialDropout1D(ce)}function H(ce){return new c.Flatten(ce)}function Z(ce){return new c.RepeatVector(ce)}function Q(ce){return new c.Reshape(ce)}function te(ce){return new c.Permute(ce)}function ee(ce){return new a.Embedding(ce)}function ne(ce){return new l.Add(ce)}function se(ce){return new l.Average(ce)}function X(ce){return new l.Concatenate(ce)}function U(ce){return new l.Maximum(ce)}function Y(ce){return new l.Minimum(ce)}function J(ce){return new l.Multiply(ce)}function q(ce){return new l.Dot(ce)}function ae(ce){return new p.BatchNormalization(ce)}function ie(ce){return new p.LayerNormalization(ce)}function le(ce){return new h.ZeroPadding2D(ce)}function ue(ce){return new g.AveragePooling1D(ce)}function B(ce){return ue(ce)}function re(ce){return ue(ce)}function oe(ce){return new g.AveragePooling2D(ce)}function de(ce){return oe(ce)}function fe(ce){return oe(ce)}function pe(ce){return new g.AveragePooling3D(ce)}function me(ce){return pe(ce)}function he(ce){return pe(ce)}function ge(ce){return new g.GlobalAveragePooling1D(ce)}function ve(ce){return new g.GlobalAveragePooling2D(ce)}function ke(ce){return new g.GlobalMaxPooling1D(ce)}function _e(ce){return new g.GlobalMaxPooling2D(ce)}function ye(ce){return new g.MaxPooling1D(ce)}function be(ce){return new g.MaxPooling2D(ce)}function Ce(ce){return new g.MaxPooling3D(ce)}function we(ce){return new v.GRU(ce)}function xe(ce){return new v.GRUCell(ce)}function Ne(ce){return new v.LSTM(ce)}function Ie(ce){return new v.LSTMCell(ce)}function Te(ce){return new v.SimpleRNN(ce)}function Ee(ce){return new v.SimpleRNNCell(ce)}function Fe(ce){return new n.ConvLSTM2D(ce)}function De(ce){return new n.ConvLSTM2DCell(ce)}function Ae(ce){return new v.RNN(ce)}function Pe(ce){return new v.StackedRNNCells(ce)}function Re(ce){return new _.Bidirectional(ce)}function $e(ce){return new _.TimeDistributed(ce)}const Oe=ke,Se=_e,je=ye,ze=be;function Ge(ce){return new u.GaussianNoise(ce)}function Le(ce){return new u.GaussianDropout(ce)}function Me(ce){return new u.AlphaDropout(ce)}function Ve(ce){return new c.Masking(ce)}function Ue(ce){return new k.Rescaling(ce)}function Be(ce){return new y.CenterCrop(ce)}function He(ce){return new b.Resizing(ce)}function We(ce){return new x.CategoryEncoding(ce)}function Ke(ce){return new C.RandomWidth(ce)}},{"./engine/input_layer":"lBCvo","./engine/topology":"Fr8bO","./exports":"8wz9y","./layers/advanced_activations":"4tdb5","./layers/convolutional":"c9doa","./layers/convolutional_depthwise":"beYFj","./layers/convolutional_recurrent":"cGaOx","./layers/core":"9950O","./layers/embeddings":"lnFLI","./layers/merge":"850W9","./layers/noise":"d0FUe","./layers/normalization":"3t16R","./layers/padding":"eYU3J","./layers/pooling":"gsLvQ","./layers/recurrent":"dY6Qj","./layers/wrappers":"2LPFf","./layers/preprocessing/image_preprocessing":"KeMAY","./layers/preprocessing/center_crop":"dPRfa","./layers/preprocessing/category_encoding":"sCfiO","./layers/preprocessing/image_resizing":"3qpfr","./layers/preprocessing/random_width":"8QTln","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8wz9y":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"loadLayersModel",()=>f.loadLayersModel),t.export(s,"model",()=>i),t.export(s,"sequential",()=>o),t.export(s,"input",()=>n),t.export(s,"registerCallbackConstructor",()=>c);var r=e("./base_callbacks"),d=e("./engine/input_layer"),m=e("./engine/training"),f=e("./models");function i(a){return new m.LayersModel(a)}function o(a){return new f.Sequential(a)}function n(a){return(0,d.Input)(a)}function c(a,l){r.CallbackConstructorRegistry.registerCallbackConstructor(a,l)}},{"./base_callbacks":"efotw","./engine/input_layer":"lBCvo","./engine/training":"bEWyV","./models":"6CNgn","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],efotw:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ModelLoggingVerbosity",()=>i),t.export(s,"DEFAULT_YIELD_EVERY_MS",()=>o),t.export(s,"BaseCallback",()=>n),t.export(s,"CallbackList",()=>c),t.export(s,"BaseLogger",()=>a),t.export(s,"History",()=>l),t.export(s,"CustomCallback",()=>u),t.export(s,"standardizeCallbacks",()=>p),t.export(s,"CallbackConstructorRegistry",()=>h),t.export(s,"configureCallbacks",()=>g);var r=e("@tensorflow/tfjs-core"),d=e("./errors"),m=e("./logs"),f=e("./utils/generic_utils"),i;(function(v){v[v.SILENT=0]="SILENT",v[v.VERBOSE=1]="VERBOSE"})(i||(i={}));const o=125;class n{constructor(){this.validationData=null}setParams(_){this.params=_}async onEpochBegin(_,k){}async onEpochEnd(_,k){}async onBatchBegin(_,k){}async onBatchEnd(_,k){}async onTrainBegin(_){}async onTrainEnd(_){}setModel(_){}}class c{constructor(_,k=10){_==null&&(_=[]),this.callbacks=_,this.queueLength=k}append(_){this.callbacks.push(_)}setParams(_){for(const k of this.callbacks)k.setParams(_)}setModel(_){for(const k of this.callbacks)k.setModel(_)}async onEpochBegin(_,k){k==null&&(k={});for(const y of this.callbacks)await y.onEpochBegin(_,k)}async onEpochEnd(_,k){k==null&&(k={});for(const y of this.callbacks)await y.onEpochEnd(_,k)}async onBatchBegin(_,k){k==null&&(k={});for(const y of this.callbacks)await y.onBatchBegin(_,k)}async onBatchEnd(_,k){k==null&&(k={});for(const y of this.callbacks)await y.onBatchEnd(_,k)}async onTrainBegin(_){_==null&&(_={});for(const k of this.callbacks)await k.onTrainBegin(_)}async onTrainEnd(_){_==null&&(_={});for(const k of this.callbacks)await k.onTrainEnd(_)}}class a extends n{constructor(){super()}async onEpochBegin(_){this.seen=0,this.totals={}}async onBatchEnd(_,k){k==null&&(k={});const y=k.size==null?0:k.size;this.seen+=y;for(const x in k){const b=k[x];if(typeof b=="number")this.totals.hasOwnProperty(x)||(this.totals[x]=0),this.totals[x]=this.totals[x]+b*y;else{let C;x in this.totals?C=this.totals[x]:this.totals[x]=0;const w=(0,r.tidy)(()=>(0,r.add)(this.totals[x],(0,r.mul)(b,y)));this.totals[x]=w,C!=null&&C.dispose()}}}async onEpochEnd(_,k){if(k!=null)for(const y of this.params.metrics)this.totals[y]!=null&&(typeof this.totals[y]=="number"?k[y]=this.totals[y]/this.seen:(0,r.tidy)(()=>{const x=(0,r.mul)((0,r.div)(1,this.seen),this.totals[y]);k[y]=x,this.totals[y].dispose(),(0,r.keep)(k[y])}))}}class l extends n{async onTrainBegin(_){this.epoch=[],this.history={}}async onEpochEnd(_,k){k==null&&(k={}),this.epoch.push(_);for(const y in k)this.history[y]==null&&(this.history[y]=[]),this.history[y].push(k[y])}async syncData(){const _=[],k=[],y=[];for(const b in this.history){const C=this.history[b];for(let w=0;w<C.length;++w)if(typeof C[w]!="number"){const N=C[w];_.push(N.data()),k.push(b),y.push(w)}}const x=await Promise.all(_);for(let b=0;b<x.length;++b)this.history[k[b]][y[b]].dispose(),this.history[k[b]][y[b]]=x[b][0]}}class u extends n{constructor(_,k){super();if(this.currentEpoch=0,this.nowFunc=_.nowFunc,this.nextFrameFunc=_.nextFrameFunc||r.nextFrame,this.yieldEvery=k||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=o),this.yieldEvery==="never"&&_.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.util.isNumber(this.yieldEvery)&&(this.maybeWait=f.debounce(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=_.onTrainBegin,this.trainEnd=_.onTrainEnd,this.epochBegin=_.onEpochBegin,this.epochEnd=_.onEpochEnd,this.batchBegin=_.onBatchBegin,this.batchEnd=_.onBatchEnd,this.yield=_.onYield}async maybeWait(_,k,y){const x=[];this.yield!=null&&(await(0,m.resolveScalarsInLogs)(y),x.push(this.yield(_,k,y))),x.push(this.nextFrameFunc()),await Promise.all(x)}async onEpochBegin(_,k){this.currentEpoch=_,this.epochBegin!=null&&(await(0,m.resolveScalarsInLogs)(k),await this.epochBegin(_,k))}async onEpochEnd(_,k){const y=[];this.epochEnd!=null&&(await(0,m.resolveScalarsInLogs)(k),y.push(this.epochEnd(_,k))),this.yieldEvery==="epoch"&&y.push(this.nextFrameFunc()),await Promise.all(y)}async onBatchBegin(_,k){this.batchBegin!=null&&(await(0,m.resolveScalarsInLogs)(k),await this.batchBegin(_,k))}async onBatchEnd(_,k){const y=[];this.batchEnd!=null&&(await(0,m.resolveScalarsInLogs)(k),y.push(this.batchEnd(_,k))),this.yieldEvery==="batch"?y.push(this.nextFrameFunc()):r.util.isNumber(this.yieldEvery)&&y.push(this.maybeWait(this.currentEpoch,_,k)),await Promise.all(y)}async onTrainBegin(_){this.trainBegin!=null&&(await(0,m.resolveScalarsInLogs)(_),await this.trainBegin(_))}async onTrainEnd(_){this.trainEnd!=null&&(await(0,m.resolveScalarsInLogs)(_),await this.trainEnd(_))}}function p(v,_){return v==null&&(v={}),v instanceof n?[v]:Array.isArray(v)&&v[0]instanceof n?v:f.toList(v).map(y=>new u(y,_))}class h{constructor(){}static registerCallbackConstructor(_,k){r.util.assert(_>=0&&Number.isInteger(_),()=>`Verbosity level is expected to be an integer >= 0, but got ${_}`),h.checkForDuplicate(k),h.constructors[_]==null&&(h.constructors[_]=[]),h.constructors[_].push(k)}static checkForDuplicate(_){for(const k in h.constructors)h.constructors[+k].forEach(x=>{if(x===_)throw new d.ValueError("Duplicate callback constructor.")})}static clear(){h.constructors={}}static createCallbacks(_){const k=[];for(const y in h.constructors){const x=+y;_>=x&&k.push(...h.constructors[x])}return k.map(y=>new y)}}h.constructors={};function g(v,_,k,y,x,b,C,w,N){const T=new l,F=[new a,...h.createCallbacks(_)];v!=null&&F.push(...v),F.push(T);const S=new c(F);return S.setParams({epochs:k,initialEpoch:y,samples:x,steps:b,batchSize:C,verbose:_,doValidation:w,metrics:N}),{callbackList:S,history:T}}},{"@tensorflow/tfjs-core":"fqGP4","./errors":"eAG95","./logs":"guoRw","./utils/generic_utils":"gl5LS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],guoRw:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resolveScalarsInLogs",()=>d),t.export(s,"disposeTensorsInLogs",()=>m);var r=e("@tensorflow/tfjs-core");async function d(f){if(f==null)return;const i=[],o=[],n=[];for(const c in f){const a=f[c];if(typeof a!="number"){const l=a;i.push(l.data()),o.push(c),n.push(l)}}if(i.length>0){const c=await Promise.all(i);for(let a=0;a<c.length;++a)f[o[a]]=c[a][0];(0,r.dispose)(n)}}function m(f){if(f!=null)for(const i in f){const o=f[i];typeof o!="number"&&o.dispose()}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bEWyV:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isDataTensor",()=>w),t.export(s,"isDataArray",()=>N),t.export(s,"isDataDict",()=>T),t.export(s,"standardizeInputData",()=>F),t.export(s,"checkArrayLengths",()=>S),t.export(s,"collectMetrics",()=>D),t.export(s,"LayersModel",()=>$),t.export(s,"Functional",()=>P);var r=e("@tensorflow/tfjs-core"),d=e("../backend/tfjs_backend"),m=e("../base_callbacks"),f=e("../common"),i=e("../errors"),o=e("../layers/serialization"),n=e("../logs"),c=e("../losses"),a=e("../metrics"),l=e("../optimizers"),u=e("../user_defined_metadata"),p=e("../utils/generic_utils"),h=e("../utils/layer_utils"),g=e("../utils/math_utils"),v=e("../utils/serialization_utils"),_=e("../version"),k=e("./container"),y=e("./executor"),x=e("./training_dataset"),b=e("./training_tensors"),C=e("./training_utils");function w(R){return R instanceof r.Tensor}function N(R){return Array.isArray(R)}function T(R){return!w(R)&&!N(R)}function F(R,A,z,G=!0,L=""){if(A==null||A.length===0){if(R!=null){let V=!1;if(N(R)&&R.length>0)V=!0;else if(T(R)){for(const K in R)if(R.hasOwnProperty(K)){V=!0;break}}else V=!0;if(V)throw new i.ValueError(`Error when checking model ${L} expected no data, but got ${R}`)}return[]}if(R==null)return A.map(V=>null);let M;if(T(R)){M=[];for(const V of A){if(R[V]==null)throw new i.ValueError(`No data provided for "${V}". Need data for each key in: ${A}`);M.push(R[V])}}else if(N(R)){if(R.length!==A.length)throw new i.ValueError(`Error when checking model ${L}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${A.length} Tensor(s), but instead got the following list of Tensor(s): ${R}`);M=R}else{if(A.length>1)throw new i.ValueError(`The model ${L} expects ${A.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${R.shape}`);M=[R]}if(M=(0,b.ensureTensorsRank2OrHigher)(M),z!=null)for(let V=0;V<A.length;++V){if(z[V]==null)continue;const K=M[V];if(K.shape.length!==z[V].length)throw new i.ValueError(`Error when checking ${L}: expected ${A[V]} to have ${z[V].length} dimension(s). but got array with shape ${K.shape}`);for(let W=0;W<z[V].length;++W){if(W===0&&!G)continue;const H=K.shape[W],Z=z[V][W];if(Z!=null&&Z>=0&&H!==Z)throw new i.ValueError(`${L} expected a batch of elements where each example has shape [${z[V].slice(1,z[V].length)}] (i.e.,tensor shape [*,${z[V].slice(1,z[V].length)}]) but the ${L} received an input with ${K.shape[0]} examples, each with shape [${K.shape.slice(1,K.shape.length)}] (tensor shape [${K.shape}])`)}}return M}function S(R,A,z){const G=(0,p.unique)(R.map(M=>M.shape[0]));G.sort();const L=(0,p.unique)(A.map(M=>M.shape[0]));if(L.sort(),G.length>1)throw new i.ValueError(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(R.map(M=>M.shape))}`);if(L.length>1)throw new i.ValueError(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(A.map(M=>M.shape))}`);if(G.length>0&&L.length>0&&!r.util.arraysEqual(G,L))throw new i.ValueError(`Input Tensors should have the same number of samples as target Tensors. Found ${G[0]} input sample(s) and ${L[0]} target sample(s).`)}function I(R,A,z){const G=[c.meanSquaredError,c.binaryCrossentropy,c.categoricalCrossentropy];for(let L=0;L<R.length;++L){const M=R[L],V=A[L],K=z[L];if(V!=null){if(V===c.categoricalCrossentropy&&M.shape[M.shape.length-1]===1)throw new i.ValueError(`You are passing a target array of shape ${M.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(G.indexOf(V)!==-1){const W=M.shape.slice(1),H=K.slice(1);for(let Z=0;Z<W.length;++Z){const Q=W[Z],te=H[Z];if(te!=null&&Q!==te)throw new i.ValueError(`A target Tensor with shape ${M.shape} was passed for an output of shape ${K}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function j(R,A,z,G=!0,L=""){let M;if(Array.isArray(R)){if(R.length!==A.length)throw new i.ValueError(`Error when checking model ${L}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${A.length} Tensor(s), but instead got ${R.length} Tensors(s).`);M=R}else{if(A.length>1)throw new i.ValueError(`The model expects ${A.length} ${L} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(R.shape)}.`);M=[R]}if(z!=null)for(let V=0;V<A.length;++V){if(z[V]==null)continue;const K=M[V];if(K.shape.length!==z[V].length)throw new i.ValueError(`Error when checking ${L}: expected ${A[V]} to have ${z[V].length} dimension(s), but got array with shape ${JSON.stringify(K.shape)}`);for(let W=0;W<z[V].length;++W){if(W===0&&!G)continue;const H=K.shape[W],Z=z[V][W];if(Z!=null&&Z!==H)throw new i.ValueError(`Error when checking ${L}: expected ${A[V]} to have shape ${JSON.stringify(z[V])} but got array with shape ${JSON.stringify(K.shape)}.`)}}}function D(R,A){if(R==null||Array.isArray(R)&&R.length===0)return A.map(G=>[]);let z;if(typeof R=="string"||typeof R=="function")z=[R];else if(Array.isArray(R)||typeof R=="object")z=R;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${R}`);if(Array.isArray(z))return A.map(G=>z);{const G=[];for(const L of A){let M=z.hasOwnProperty(L)?z[L]:[];Array.isArray(M)||(M=[M]),G.push(M)}return G}}const O="layers-model";class $ extends k.Container{constructor(A){super(A);this.isTraining=!1}summary(A,z,G=console.log){if(!this.built)throw new i.ValueError("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");(0,h.printSummary)(this,A,z,G)}compile(A){if(A.loss==null&&(A.loss=[]),this.loss=A.loss,typeof A.optimizer=="string")this.optimizer_=l.getOptimizer(A.optimizer),this.isOptimizerOwned=!0;else{if(!(A.optimizer instanceof r.Optimizer))throw new i.ValueError("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=A.optimizer,this.isOptimizerOwned=!1}let z=[];if(!Array.isArray(A.loss)&&typeof A.loss!="string"&&typeof A.loss!="function"){A.loss=A.loss;for(const V in A.loss)if(this.outputNames.indexOf(V)===-1)throw new i.ValueError(`Unknown entry in loss dictionary: "${V}". Only expected the following keys: ${this.outputNames}`);for(const V of this.outputNames)A.loss[V]==null&&console.warn(`Output "${V}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${V} during training`),z.push(c.get(A.loss[V]))}else if(Array.isArray(A.loss)){if(A.loss.length!==this.outputs.length)throw new i.ValueError(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${A.loss}.`);z=A.loss.map(K=>c.get(K))}else{const V=c.get(A.loss);this.outputs.forEach(K=>{z.push(V)})}this.lossFunctions=z,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let V=0;V<this.outputs.length;++V){const K=this.internalOutputShapes[V],W=this.outputNames[V];this.feedOutputNames.push(W),this.feedOutputShapes.push(K),this.feedLossFns.push(this.lossFunctions[V])}const G=[];this.metrics=A.metrics,this.metricsNames=["loss"],this.metricsTensors=[],(0,f.nameScope)("loss",()=>{for(let V=0;V<this.outputs.length;++V){if(G.indexOf(V)!==-1)continue;const K=this.lossFunctions[V];this.outputs.length>1&&(this.metricsTensors.push([K,V]),this.metricsNames.push(this.outputNames[V]+"_loss"))}});const L=D(A.metrics,this.outputNames),M=(V,K,W)=>{this.outputNames.length>1&&(K=this.outputNames[V]+"_"+K),this.metricsNames.push(K),this.metricsTensors.push([W,V])};(0,f.nameScope)("metric",()=>{for(let V=0;V<this.outputs.length;++V){if(G.indexOf(V)!==-1)continue;const K=L[V];(H=>{const Z="";let Q,te,ee;for(const ne of H){if(typeof ne=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(ne)!==-1){const X=this.internalOutputShapes[V];X[X.length-1]===1||this.lossFunctions[V]===c.binaryCrossentropy?["accuracy","acc"].indexOf(ne)!==-1?te=a.binaryAccuracy:["crossentropy","ce"].indexOf(ne)!==-1&&(te=a.binaryCrossentropy):this.lossFunctions[V]===c.sparseCategoricalCrossentropy?["accuracy","acc"].indexOf(ne)!==-1?te=a.sparseCategoricalAccuracy:["crossentropy","ce"].indexOf(ne)!==-1&&(te=a.sparseCategoricalCrossentropy):["accuracy","acc"].indexOf(ne)!==-1?te=a.categoricalAccuracy:["crossentropy","ce"].indexOf(ne)!==-1&&(te=a.categoricalCrossentropy);let U;["accuracy","acc"].indexOf(ne)!==-1?U="acc":["crossentropy","ce"].indexOf(ne)!==-1&&(U="ce"),ee=te,Q=Z+U}else ee=a.get(ne),Q=Z+a.getLossOrMetricName(ne);let se;(0,f.nameScope)(Q,()=>{se=ee}),M(V,Q,se)}})(K)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(A,z,G={}){const L=G.batchSize==null?32:G.batchSize;(0,b.checkBatchSize)(L);const M=!0,V=this.standardizeUserDataXY(A,z,M,L);try{const K=V[0].concat(V[1]);this.makeTestFunction();const W=this.testFunction,H=this.testLoop(W,K,L,G.verbose,G.steps);return(0,p.singletonOrArray)(H)}finally{(0,b.disposeNewTensors)(V[0],A),(0,b.disposeNewTensors)(V[1],z)}}async evaluateDataset(A,z){return this.makeTestFunction(),(0,x.evaluateDataset)(this,A,z)}checkNumSamples(A,z,G,L="steps"){let M;if(G!=null){if(M=null,z!=null)throw new i.ValueError(`If ${L} is set, batchSize must be null or undefined.Got batchSize = ${z}`)}else if(A!=null)Array.isArray(A)?M=A[0].shape[0]:M=A.shape[0];else throw new i.ValueError(`Either the input data should have a defined shape, or ${L} shoud be specified.`);return M}execute(A,z){if(Array.isArray(z)&&z.length===0)throw new i.ValueError("`outputs` is an empty Array, which is not allowed.");const G=Array.isArray(z),L=G?z:[z],M=this.retrieveSymbolicTensors(L),V=new y.FeedDict;if(A instanceof r.Tensor&&(A=[A]),Array.isArray(A)){if(A.length!==this.inputs.length)throw new i.ValueError(`The number of inputs provided (${A.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let W=0;W<this.inputs.length;++W)V.add(this.inputs[W],A[W])}else for(const W of this.inputs){const H=A[W.name];if(H==null)throw new i.ValueError(`No value is provided for the model's input ${W.name}`);V.add(W,H)}const K=(0,y.execute)(M,V);return G?K:K[0]}retrieveSymbolicTensors(A){const z=(0,p.pyListRepeat)(null,A.length);let G=A.length;for(const L of this.layers){const M=Array.isArray(L.output)?L.output:[L.output],V=M.map(K=>K.name);for(let K=0;K<A.length;++K){const W=V.indexOf(A[K]);if(W!==-1&&(z[K]=M[W],G--),G===0)break}if(G===0)break}if(G>0){const L=[];throw z.forEach((M,V)=>{M==null&&L.push(A[V])}),new i.ValueError(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(L)}`)}return z}predictLoop(A,z=32,G=!1){return r.tidy(()=>{const L=this.checkNumSamples(A);if(G)throw new i.NotImplementedError("Verbose predictLoop() is not implemented yet.");const M=(0,b.makeBatches)(L,z),V=this.outputs.map(K=>[]);for(let K=0;K<M.length;++K)r.tidy(()=>{const H=M[K][0],Z=M[K][1],Q=(0,b.sliceArrays)(A,H,Z),te=[];if(Array.isArray(Q))for(let ne=0;ne<Q.length;++ne)te.push({key:this.inputs[ne],value:Q[ne]});else te.push({key:this.inputs[0],value:Q});const ee=new y.FeedDict(te);return(0,y.execute)(this.outputs,ee)}).forEach((H,Z)=>V[Z].push(H));return(0,p.singletonOrArray)(V.map(K=>r.concat(K,0)))})}predict(A,z={}){const G=(0,b.ensureTensorsRank2OrHigher)(A);j(G,this.inputNames,this.feedInputShapes,!1);try{const L=z.batchSize==null?32:z.batchSize;return(0,b.checkBatchSize)(L),this.predictLoop(G,L)}finally{(0,b.disposeNewTensors)(G,A)}}predictOnBatch(A){j(A,this.inputNames,this.feedInputShapes,!0);const z=(Array.isArray(A)?A[0]:A).shape[0];return this.predictLoop(A,z)}standardizeUserDataXY(A,z,G=!0,L){if(this.optimizer_==null)throw new i.RuntimeError("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const M=[];for(let V=0;V<this.feedOutputShapes.length;++V){const K=this.feedOutputShapes[V];this.feedLossFns[V]===c.sparseCategoricalCrossentropy?M.push(K.slice(0,K.length-1).concat([1])):M.push(K)}if(A=F(A,this.feedInputNames,this.feedInputShapes,!1,"input"),z=F(z,this.feedOutputNames,M,!1,"target"),S(A,z,null),I(z,this.feedLossFns,this.feedOutputShapes),this.stateful&&L!=null&&L>0&&A[0].shape[0]%L!=0)throw new i.ValueError(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${L}. Found: ${A[0].shape[0]} sample(s).`);return[A,z]}async standardizeUserData(A,z,G,L,M=!0,V){const[K,W]=this.standardizeUserDataXY(A,z,M,V);if(G!=null)throw new Error("sample weight is not supported yet.");let H=null;if(L!=null){const Z=(0,C.standardizeClassWeights)(L,this.outputNames);H=[];for(let Q=0;Q<Z.length;++Q)H.push(await(0,C.standardizeWeights)(W[Q],null,Z[Q]))}return[K,W,H]}testLoop(A,z,G,L=0,M){return r.tidy(()=>{const V=this.checkNumSamples(z,G,M,"steps"),K=[];if(L>0)throw new i.NotImplementedError("Verbose mode is not implemented yet.");if(M!=null)throw new i.NotImplementedError("steps mode in testLoop() is not implemented yet");{const W=(0,b.makeBatches)(V,G),H=(0,r.tensor1d)((0,g.range)(0,V));for(let Z=0;Z<W.length;++Z){const Q=W[Z][0],te=W[Z][1],ee=d.sliceAlongFirstAxis(H,Q,te-Q),ne=(0,b.sliceArraysByIndices)(z,ee),se=A(ne);if(Z===0)for(let X=0;X<se.length;++X)K.push((0,r.scalar)(0));for(let X=0;X<se.length;++X){const U=se[X];K[X]=r.add(K[X],r.mul(te-Q,U))}}for(let Z=0;Z<K.length;++Z)K[Z]=r.div(K[Z],V)}return K})}getDedupedMetricsNames(){const A=this.metricsNames,z=[];for(let G=0;G<A.length;++G){const L=A[G];let M=L;(0,p.count)(A,L)>1&&(M+=`_${(0,p.count)(A.slice(0,G),L)}`),z.push(M)}return z}makeTrainFunction(){return A=>{const z=[],G=A.slice(0,this.inputs.length),L=A.slice(this.inputs.length,this.inputs.length+this.outputs.length),M=A.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),V=[],K=()=>{const Q=[];for(let se=0;se<this.inputs.length;++se)Q.push({key:this.inputs[se],value:G[se]});const te=new y.FeedDict(Q),ee=(0,y.execute)(this.outputs,te,{training:!0});let ne;for(let se=0;se<this.lossFunctions.length;++se){let U=this.lossFunctions[se](L[se],ee[se]);M[se]!=null&&(U=(0,C.computeWeightedLoss)(U,M[se]));const Y=r.mean(U);z.push(Y),se===0?ne=U:ne=r.add(ne,U)}for(let se=0;se<this.metricsTensors.length;++se){let X;if(this.outputs.length>1&&se<this.outputs.length)X=z[se];else{const U=this.metricsTensors[se][0],Y=this.metricsTensors[se][1];X=r.mean(U(L[Y],ee[Y]))}r.keep(X),V.push(X)}return ne=r.mean(ne),this.calculateLosses().forEach(se=>{ne=r.add(ne,se)}),ne},W=this.collectedTrainableWeights.map(Q=>Q.read()),H=!0;return[this.optimizer_.minimize(K,H,W)].concat(V)}}makeTestFunction(){this.testFunction=A=>r.tidy(()=>{const z=[];let G;const L=A.slice(0,this.inputs.length),M=A.slice(this.inputs.length,this.inputs.length+this.outputs.length),V=[];for(let H=0;H<this.inputs.length;++H)V.push({key:this.inputs[H],value:L[H]});const K=new y.FeedDict(V),W=(0,y.execute)(this.outputs,K);for(let H=0;H<this.lossFunctions.length;++H){const Z=this.lossFunctions[H],Q=r.mean(Z(M[H],W[H]));H===0?G=Q:G=r.add(G,Q),z.push(G)}for(let H=0;H<this.metricsTensors.length;++H){const Z=this.metricsTensors[H][0],Q=this.metricsTensors[H][1],te=r.mean(Z(M[Q],W[Q]));z.push(te)}return z})}async fit(A,z,G={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let L,M,V,K,W,H,Z,Q,te;try{const ee=G.batchSize==null?32:G.batchSize;(0,b.checkBatchSize)(ee);const ne=!1,se=await this.standardizeUserData(A,z,G.sampleWeight,G.classWeight,ne,ee);L=se[0],M=se[1],te=se[2];let X=!1,U;if(G.validationData!=null&&G.validationData.length>0){if(X=!0,G.validationData.length===2)W=G.validationData[0],H=G.validationData[1];else throw G.validationData.length===3?new i.NotImplementedError("validationData including sample weights is not supported yet."):new i.ValueError(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${G.validationData} is invalid.`);const B=!0,re=await this.standardizeUserData(W,H,null,null,B,ee);Z=re[0],Q=re[1],U=Z.concat(Q)}else if(G.validationSplit!=null&&G.validationSplit>0&&G.validationSplit<1){X=!0;const B=Math.floor(L[0].shape[0]*(1-G.validationSplit)),re=L[0].shape[0];Z=(0,b.sliceArrays)(L,B,re),V=L,L=(0,b.sliceArrays)(L,0,B),Q=(0,b.sliceArrays)(M,B,re),K=M,M=(0,b.sliceArrays)(M,0,B),U=Z.concat(Q)}else G.validationSteps!=null&&(X=!0);const Y=L.concat(M).concat(te);this.checkTrainableWeightsConsistency();const J=this.makeTrainFunction(),q=this.getDedupedMetricsNames();let ae,ie;X?(this.makeTestFunction(),ae=this.testFunction,ie=q.slice().concat(q.map(B=>"val_"+B))):(ae=null,U=[],ie=q.slice());const le=(0,m.standardizeCallbacks)(G.callbacks,G.yieldEvery);return await this.fitLoop(J,Y,q,ee,G.epochs,G.verbose,le,ae,U,G.shuffle,ie,G.initialEpoch,null,null)}finally{this.isTraining=!1,(0,b.disposeNewTensors)(L,A),(0,b.disposeNewTensors)(M,z),(0,b.disposeNewTensors)(V,A),(0,b.disposeNewTensors)(K,z),(0,b.disposeNewTensors)(Z,W),(0,b.disposeNewTensors)(Q,H),te!=null&&r.dispose(te)}}async fitLoop(A,z,G,L,M,V,K,W,H,Z,Q,te,ee,ne){L==null&&(L=32),M==null&&(M=1),Z==null&&(Z=!0),te==null&&(te=0);let se=!1;if(W!=null&&H!=null&&(se=!0),ne!=null&&(se=!0,ee==null))throw new i.ValueError("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const X=this.checkNumSamples(z,L,ee,"steps_per_epoch");let U;X!=null&&(U=(0,g.range)(0,X)),V==null&&(V=1);const{callbackList:Y,history:J}=(0,m.configureCallbacks)(K,V,M,te,X,ee,L,se,Q);Y.setModel(this),this.history=J,await Y.onTrainBegin(),this.stopTraining_=!1;for(let q=te;q<M;++q){await Y.onEpochBegin(q);const ae={};if(ee!=null)throw new i.NotImplementedError("stepsPerEpoch mode is not implemented yet.");{if(Z==="batch")throw new i.NotImplementedError("batch shuffling is not implemneted yet");Z&&r.util.shuffle(U);const ie=(0,r.tensor1d)(U),le=(0,b.makeBatches)(X,L);for(let ue=0;ue<le.length;++ue){const B={};if(await Y.onBatchBegin(ue,B),r.tidy(()=>{const re=le[ue][0],oe=le[ue][1],de=d.sliceAlongFirstAxis(ie,re,oe-re);B.batch=ue,B.size=oe-re;const fe=(0,b.sliceArraysByIndices)(z,de),pe=A(fe);for(let me=0;me<G.length;++me){const he=G[me],ge=pe[me];B[he]=ge,r.keep(ge)}if(ue===le.length-1&&se){const me=this.testLoop(W,H,L);for(let he=0;he<G.length;++he){const ge=G[he],ve=me[he];r.keep(ve),ae["val_"+ge]=ve}}}),await Y.onBatchEnd(ue,B),(0,n.disposeTensorsInLogs)(B),this.stopTraining_)break}ie.dispose()}if(await Y.onEpochEnd(q,ae),this.stopTraining_)break}return await Y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(A,z){return(0,x.fitDataset)(this,A,z)}async trainOnBatch(A,z){const G=await this.standardizeUserData(A,z),L=G[0],M=G[1],K=this.makeTrainFunction()(L.concat(M)),W=[];for(const H of K){const Z=await H.data();W.push(Z[0])}return r.dispose(K),(0,b.disposeNewTensors)(G[0],A),(0,b.disposeNewTensors)(G[1],z),(0,p.singletonOrArray)(W)}getNamedWeights(A){const z=[],G=A!=null&&A.trainableOnly,L=G?this.trainableWeights:this.weights,M=this.getWeights(G);for(let V=0;V<L.length;++V)G&&!L[V].trainable||z.push({name:L[V].originalName,tensor:M[V]});return z}set stopTraining(A){this.stopTraining_=A}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(A){this.optimizer_!==A&&(this.optimizer_=A,this.isOptimizerOwned=!1)}dispose(){const A=super.dispose();if(A.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const z=r.memory().numTensors;this.optimizer_.dispose(),A.numDisposedVariables+=z-r.memory().numTensors}return A}getLossIdentifiers(){let A;if(typeof this.loss=="string")A=(0,p.toSnakeCase)(this.loss);else if(Array.isArray(this.loss)){for(const z of this.loss)if(typeof z!="string")throw new Error("Serialization of non-string loss is not supported.");A=this.loss.map(z=>(0,p.toSnakeCase)(z))}else{const z=Object.keys(this.loss);A={};const G=this.loss;for(const L of z)if(typeof G[L]=="string")A[L]=(0,p.toSnakeCase)(G[L]);else throw new Error("Serialization of non-string loss is not supported.")}return A}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[(0,p.toSnakeCase)(a.getLossOrMetricName(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(A=>(0,p.toSnakeCase)(a.getLossOrMetricName(A)));{const A={};for(const z in this.metrics)A[z]=(0,p.toSnakeCase)(a.getLossOrMetricName(this.metrics[z]));return A}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(A){if(A.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(A.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(A.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const z=(0,v.convertPythonicToTs)(A.optimizer_config),G=(0,o.deserialize)(z);let L;if(typeof A.loss=="string")L=(0,p.toCamelCase)(A.loss);else if(Array.isArray(A.loss))L=A.loss.map(V=>(0,p.toCamelCase)(V));else if(A.loss!=null){L={};for(const V in A.loss)L[V]=(0,p.toCamelCase)(A.loss[V])}let M;if(Array.isArray(A.metrics))M=A.metrics.map(V=>(0,p.toCamelCase)(V));else if(A.metrics!=null){M={};for(const V in A.metrics)M[V]=(0,p.toCamelCase)(A.metrics[V])}this.compile({loss:L,metrics:M,optimizer:G})}async save(A,z){if(typeof A=="string"){const H=r.io.getSaveHandlers(A);if(H.length===0)throw new i.ValueError(`Cannot find any save handlers for URL '${A}'`);if(H.length>1)throw new i.ValueError(`Found more than one (${H.length}) save handlers for URL '${A}'`);A=H[0]}if(A.save==null)throw new i.ValueError("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const G=await r.io.encodeWeights(this.getNamedWeights(z)),L=!1,M=null,K={modelTopology:this.toJSON(M,L),format:O,generatedBy:`TensorFlow.js tfjs-layers v${_.version}`,convertedBy:null};if((z==null?!1:z.includeOptimizer)&&this.optimizer!=null){K.trainingConfig=this.getTrainingConfig();const H="optimizer",{data:Z,specs:Q}=await r.io.encodeWeights(await this.optimizer.getWeights(),H);G.specs.push(...Q),G.data=r.io.concatenateArrayBuffers([G.data,Z])}if(this.userDefinedMetadata!=null){const H=!0;(0,u.checkUserDefinedMetadata)(this.userDefinedMetadata,this.name,H),K.userDefinedMetadata=this.userDefinedMetadata}return K.weightData=G.data,K.weightSpecs=G.specs,A.save(K)}setUserDefinedMetadata(A){(0,u.checkUserDefinedMetadata)(A,this.name),this.userDefinedMetadata=A}getUserDefinedMetadata(){return this.userDefinedMetadata}}$.className="Model",r.serialization.registerClass($);class P extends ${}P.className="Functional",r.serialization.registerClass(P)},{"@tensorflow/tfjs-core":"fqGP4","../backend/tfjs_backend":"2pIRC","../base_callbacks":"efotw","../common":"hHHWg","../errors":"eAG95","../layers/serialization":"jf3QQ","../logs":"guoRw","../losses":"1qbI1","../metrics":"cLx4I","../optimizers":"aYXQi","../user_defined_metadata":"9k3Iq","../utils/generic_utils":"gl5LS","../utils/layer_utils":"519K2","../utils/math_utils":"1DUeI","../utils/serialization_utils":"lx2dB","../version":"auovA","./container":"8ohzf","./executor":"lTSQJ","./training_dataset":"ldvNO","./training_tensors":"kwer9","./training_utils":"faEEH","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jf3QQ:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"deserialize",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("../utils/generic_utils");function m(f,i={},o=!1){return(0,d.deserializeKerasObject)(f,r.serialization.SerializationMap.getMap().classNameMap,i,"layer",o)}},{"@tensorflow/tfjs-core":"fqGP4","../utils/generic_utils":"gl5LS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1qbI1":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"l2Normalize",()=>i),t.export(s,"meanSquaredError",()=>o),t.export(s,"meanAbsoluteError",()=>n),t.export(s,"meanAbsolutePercentageError",()=>c),t.export(s,"meanSquaredLogarithmicError",()=>a),t.export(s,"squaredHinge",()=>l),t.export(s,"hinge",()=>u),t.export(s,"categoricalHinge",()=>p),t.export(s,"logcosh",()=>h),t.export(s,"categoricalCrossentropy",()=>g),t.export(s,"sparseCategoricalCrossentropy",()=>v),t.export(s,"sigmoidCrossEntropyWithLogits",()=>_),t.export(s,"binaryCrossentropy",()=>k),t.export(s,"kullbackLeiblerDivergence",()=>y),t.export(s,"poisson",()=>x),t.export(s,"cosineProximity",()=>b),t.export(s,"mse",()=>C),t.export(s,"MSE",()=>w),t.export(s,"mae",()=>N),t.export(s,"MAE",()=>T),t.export(s,"mape",()=>F),t.export(s,"MAPE",()=>S),t.export(s,"msle",()=>I),t.export(s,"MSLE",()=>j),t.export(s,"kld",()=>D),t.export(s,"KLD",()=>O),t.export(s,"cosine",()=>$),t.export(s,"lossesMap",()=>P),t.export(s,"get",()=>R);var r=e("@tensorflow/tfjs-core"),d=e("./backend/common"),m=e("./backend/tfjs_backend"),f=e("./errors");function i(A,z){return(0,r.tidy)(()=>{A.dtype!=="float32"&&(A=r.cast(A,"float32"));const G=r.sum(m.square(A),z,!0),L=r.fill(G.shape,(0,d.epsilon)()),M=r.sqrt(r.maximum(G,L));return r.div(A,M)})}function o(A,z){return(0,r.tidy)(()=>r.mean(m.square(r.sub(z,A)),-1))}function n(A,z){return(0,r.tidy)(()=>r.mean(r.abs(r.sub(z,A)),-1))}function c(A,z){return(0,r.tidy)(()=>{const G=r.sub(A,z),L=r.clipByValue(r.abs(A),(0,d.epsilon)(),Number.MAX_VALUE),M=r.abs(r.div(G,L));return r.mul(100,r.mean(M,-1))})}function a(A,z){return(0,r.tidy)(()=>{const G=r.clipByValue(z,(0,d.epsilon)(),Number.MAX_VALUE),L=r.log(r.add(1,G)),M=r.clipByValue(A,(0,d.epsilon)(),Number.MAX_VALUE),V=r.log(r.add(1,M));return r.mean(m.square(r.sub(L,V)),-1)})}function l(A,z){return(0,r.tidy)(()=>{const G=r.maximum(0,r.sub(1,r.mul(A,z)));return r.mean(m.square(G),-1)})}function u(A,z){return(0,r.tidy)(()=>{const G=r.maximum(0,r.sub(1,r.mul(A,z)));return r.mean(G,-1)})}function p(A,z){return(0,r.tidy)(()=>{const G=r.sum(r.mul(A,z),-1),L=r.max(r.mul(r.sub(1,A),z),-1);return r.maximum(0,r.add(1,r.sub(L,G)))})}function h(A,z){return(0,r.tidy)(()=>{const G=Math.log(2),L=r.sub(z,A),M=r.sub(r.add(L,r.softplus(r.mul(-2,L))),G);return r.mean(M,-1)})}function g(A,z,G=!1){return(0,r.tidy)(()=>{if(G)z=r.softmax(z);else{const L=r.sum(z,z.shape.length-1,!0);z=r.div(z,L)}return z=r.clipByValue(z,(0,d.epsilon)(),1-(0,d.epsilon)()),r.neg(r.sum(r.mul(r.cast(A,"float32"),r.log(z)),z.shape.length-1))})}function v(A,z,G=!1){return(0,r.tidy)(()=>{const L=r.cast(r.floor(m.flatten(A)),"int32");z=r.clipByValue(z,(0,d.epsilon)(),1-(0,d.epsilon)());const M=z.shape,V=r.reshape(r.oneHot(L,M[M.length-1]),M);return g(V,z,G)})}function _(A,z){if(!r.util.arraysEqual(A.shape,z.shape))throw new f.ValueError(`logits and labels must have the same shape, but got shapes ${JSON.stringify(A.shape)} and ${JSON.stringify(z.shape)}`);return(0,r.tidy)(()=>{const G=r.relu(z),L=r.neg(r.abs(z));return r.add(r.sub(G,r.mul(z,A)),r.log1p(r.exp(L)))})}function k(A,z){return(0,r.tidy)(()=>{let G;return G=r.clipByValue(z,(0,d.epsilon)(),1-(0,d.epsilon)()),G=r.log(r.div(G,r.sub(1,G))),r.mean(_(A,G),-1)})}function y(A,z){return(0,r.tidy)(()=>{const G=r.clipByValue(A,(0,d.epsilon)(),1),L=r.clipByValue(z,(0,d.epsilon)(),1);return r.sum(r.mul(A,r.log(r.div(G,L))),-1)})}function x(A,z){return(0,r.tidy)(()=>{const G=r.log(r.add((0,d.epsilon)(),z));return r.mean(r.sub(z,r.mul(A,G)),-1)})}function b(A,z){return(0,r.tidy)(()=>{const G=i(A,-1),L=i(z,-1),M=r.mul(G,L);return r.neg(r.sum(M,-1))})}const C=o,w=o,N=n,T=n,F=c,S=c,I=a,j=a,D=y,O=y,$=b,P={meanSquaredError:o,meanAbsoluteError:n,meanAbsolutePercentageError:c,meanSquaredLogarithmicError:a,squaredHinge:l,hinge:u,categoricalHinge:p,logcosh:h,categoricalCrossentropy:g,sparseCategoricalCrossentropy:v,binaryCrossentropy:k,kullbackLeiblerDivergence:y,poisson:x,cosineProximity:b};function R(A){if(typeof A=="string"){if(A in P)return P[A];let z=`Unknown loss ${A}`;throw A.toLowerCase().includes("softmaxcrossentropy")&&(z=`Unknown loss ${A}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new f.ValueError(z)}else return A}},{"@tensorflow/tfjs-core":"fqGP4","./backend/common":"7Ax0n","./backend/tfjs_backend":"2pIRC","./errors":"eAG95","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cLx4I:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"binaryAccuracy",()=>o),t.export(s,"categoricalAccuracy",()=>n),t.export(s,"precision",()=>u),t.export(s,"recall",()=>p),t.export(s,"binaryCrossentropy",()=>h),t.export(s,"sparseCategoricalAccuracy",()=>g),t.export(s,"topKCategoricalAccuracy",()=>v),t.export(s,"sparseTopKCategoricalAccuracy",()=>_),t.export(s,"mse",()=>k),t.export(s,"MSE",()=>y),t.export(s,"mae",()=>x),t.export(s,"MAE",()=>b),t.export(s,"mape",()=>C),t.export(s,"MAPE",()=>w),t.export(s,"categoricalCrossentropy",()=>N),t.export(s,"cosine",()=>T),t.export(s,"sparseCategoricalCrossentropy",()=>F),t.export(s,"metricsMap",()=>S),t.export(s,"get",()=>I),t.export(s,"getLossOrMetricName",()=>j);var r=e("@tensorflow/tfjs-core"),d=e("./backend/tfjs_backend"),m=e("./errors"),f=e("./losses"),i=e("./utils/generic_utils");function o(D,O){return(0,r.tidy)(()=>{const $=r.mul(.5,r.onesLike(O)),P=d.cast(r.greater(O,$),D.dtype);return r.mean(r.equal(D,P),-1)})}function n(D,O){return(0,r.tidy)(()=>d.cast(r.equal(r.argMax(D,-1),r.argMax(O,-1)),"float32"))}function c(D,O){return(0,r.tidy)(()=>r.cast(r.sum(r.logicalAnd(r.equal(D,1),r.equal(O,1))),"float32"))}function a(D,O){return(0,r.tidy)(()=>r.cast(r.sum(r.logicalAnd(r.equal(D,1),r.equal(O,0))),"float32"))}function l(D,O){return(0,r.tidy)(()=>r.cast(r.sum(r.logicalAnd(r.equal(D,0),r.equal(O,1))),"float32"))}function u(D,O){return(0,r.tidy)(()=>{const $=c(D,O),P=l(D,O),R=r.add($,P);return r.cast(r.where(r.greater(R,0),r.div($,R),0),"float32")})}function p(D,O){return(0,r.tidy)(()=>{const $=c(D,O),P=a(D,O),R=r.add($,P);return r.cast(r.where(r.greater(R,0),r.div($,R),0),"float32")})}function h(D,O){return(0,f.binaryCrossentropy)(D,O)}function g(D,O){return D.rank===O.rank&&(D=r.squeeze(D,[D.rank-1])),O=r.argMax(O,-1),O.dtype!==D.dtype&&(O=r.cast(O,D.dtype)),r.cast(r.equal(D,O),"float32")}function v(D,O){throw new m.NotImplementedError}function _(D,O){throw new m.NotImplementedError}const k=f.meanSquaredError,y=f.meanSquaredError,x=f.meanAbsoluteError,b=f.meanAbsoluteError,C=f.meanAbsolutePercentageError,w=f.meanAbsolutePercentageError,N=f.categoricalCrossentropy,T=f.cosineProximity,F=f.sparseCategoricalCrossentropy,S={binaryAccuracy:o,categoricalAccuracy:n,precision:u,categoricalCrossentropy:N,sparseCategoricalCrossentropy:F,mse:k,MSE:y,mae:x,MAE:b,mape:C,MAPE:w,cosine:T};function I(D){if(typeof D=="string"&&D in S)return S[D];if(typeof D!="string"&&D!=null)return D;throw new m.ValueError(`Unknown metric ${D}`)}function j(D){if(i.assert(D!==null,`Unknown LossOrMetricFn ${D}`),typeof D=="string")return D;{let O;for(const $ of Object.keys(f.lossesMap))if(f.lossesMap[$]===D){O=$;break}if(O!==void 0)return O;for(const $ of Object.keys(S))if(S[$]===D){O=$;break}return O!==void 0?O:D.name}}},{"@tensorflow/tfjs-core":"fqGP4","./backend/tfjs_backend":"2pIRC","./errors":"eAG95","./losses":"1qbI1","./utils/generic_utils":"gl5LS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aYXQi:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getOptimizer",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./backend/common"),m=e("./errors");function f(i){const o={Adagrad:()=>r.train.adagrad(.01),Adadelta:()=>r.train.adadelta(1,.95,(0,d.epsilon)()),Adam:()=>r.train.adam(.001,.9,.999,(0,d.epsilon)()),Adamax:()=>r.train.adamax(.002,.9,.999,(0,d.epsilon)(),0),RMSProp:()=>r.train.rmsprop(.001,.9,0,(0,d.epsilon)()),SGD:()=>r.train.sgd(.01)};if(o.adagrad=o.Adagrad,o.adadelta=o.Adadelta,o.adam=o.Adam,o.adamax=o.Adamax,o.rmsprop=o.RMSProp,o.sgd=o.SGD,i in o)return o[i]();throw new m.ValueError(`Unknown Optimizer ${i}`)}},{"@tensorflow/tfjs-core":"fqGP4","./backend/common":"7Ax0n","./errors":"eAG95","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9k3Iq":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH",()=>r),t.export(s,"checkUserDefinedMetadata",()=>d),t.export(s,"plainObjectCheck",()=>m);const r=1048576;function d(f,i,o=!1){if(f==null||typeof f!="object"||Object.getPrototypeOf(f)!==Object.prototype||!m(f))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(o){const n=JSON.stringify(f);n.length>r&&console.warn(`User-defined metadata of model "${i}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${r}.`)}}function m(f){if(f===null)return!0;if(typeof f=="object")if(Object.getPrototypeOf(f)===Object.prototype){const i=Object.keys(f);for(const o of i)if(typeof o!="string"||!m(f[o]))return!1;return!0}else if(Array.isArray(f)){for(const i of f)if(!m(i))return!1;return!0}else return!1;else{const i=typeof f;return i==="string"||i==="number"||i==="boolean"}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"519K2":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"printSummary",()=>d);var r=e("./variable_utils");function d(c,a,l,u=console.log){const p=f(c),h=["Layer (type)","Input Shape","Output shape","Param #"];p?(a=a||90,l=l||[.32,.61,.89,1]):(a=a||115,l=l||[.24,.48,.7,.8,1]),l[l.length-1]<=1&&(l=l.map(y=>Math.floor(a*y)));let g;if(!p){h.push("Receives inputs"),g=[];for(const y in c.nodesByDepth)g.push(...c.nodesByDepth[y])}u("_".repeat(a)),i(h,l,u),u("=".repeat(a));const v=c.layers;for(let y=0;y<v.length;++y)p?o(v[y],l,u):n(v[y],l,g,u),u((y===v.length-1?"=":"_").repeat(a));c.checkTrainableWeightsConsistency();const _=m(c),k=(0,r.countParamsInWeights)(c.nonTrainableWeights);u(`Total params: ${_+k}`),u(`Trainable params: ${_}`),u(`Non-trainable params: ${k}`),u("_".repeat(a))}function m(c){let a;return c.collectedTrainableWeights!=null?a=(0,r.countParamsInWeights)(c.collectedTrainableWeights):a=(0,r.countParamsInWeights)(c.trainableWeights),a}function f(c){let a=!0;const l=[],u=[];for(const p in c.nodesByDepth)l.push(c.nodesByDepth[p]);for(const p of l){if(p.length>1||p.length===1&&p[0].inboundLayers.length>1){a=!1;break}u.push(...p)}if(a)for(const p of c.layers){let h=!1;for(const g of p.inboundNodes)if(u.indexOf(g)!==-1)if(h){a=!1;break}else h=!0;if(!a)break}return a}function i(c,a,l=console.log){let u="";for(let p=0;p<c.length;++p)p>0&&(u=u.slice(0,u.length-1)+" "),u+=c[p],u=u.slice(0,a[p]),u+=" ".repeat(a[p]-u.length);l(u)}function o(c,a,l){let u,p;try{p=c.inboundNodes.map(_=>JSON.stringify(_.inputShapes)).join(",")}catch{p="multiple"}try{u=JSON.stringify(c.outputShape)}catch{u="multiple"}const h=c.name,g=c.getClassName(),v=[`${h} (${g})`,p,u,c.countParams().toString()];i(v,a,l)}function n(c,a,l,u){let p,h;try{h=c.inboundNodes.map(x=>JSON.stringify(x.inputShapes)).join(",")}catch{h="multiple"}try{p=JSON.stringify(c.outputShape)}catch{p="multiple"}const g=[];for(const x of c.inboundNodes)if(!(l!=null&&l.length>0&&l.indexOf(x)===-1))for(let b=0;b<x.inboundLayers.length;++b){const C=x.inboundLayers[b].name,w=x.nodeIndices[b],N=x.tensorIndices[b];g.push(`${C}[${w}][${N}]`)}const v=c.name,_=c.getClassName(),k=g.length===0?"":g[0],y=[`${v} (${_})`,h,p,c.countParams().toString(),k];i(y,a,u);for(let x=1;x<g.length;++x)i(["","","","",g[x]],a,u)}},{"./variable_utils":"kkX6H","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lx2dB:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"convertPythonicToTs",()=>m),t.export(s,"convertTsToPythonic",()=>f);var r=e("../utils/generic_utils");function d(i,o,n){return(i==="inboundNodes"||i==="outputLayers"||i==="inputLayers")&&o===0&&typeof n=="string"}function m(i,o){if(i===null)return null;if(typeof i=="string")return r.toCamelCase(i);if(typeof i=="number"||typeof i=="boolean")return i;if(i instanceof Array){const n=[],c=i.length;for(let a=0;a<c;++a){const l=i[a];d(o,a,l)?n.push(l):n.push(m(l,o))}return n}else{const n={};for(const c of Object.keys(i)){const a=i[c];if(c==="name"&&typeof a=="string")n[c]=a;else{const l=r.toCamelCase(c);n[l]=m(a,l)}}return n}}function f(i,o){if(i==null)return null;if(typeof i=="string")return r.toSnakeCase(i);if(typeof i=="number"||typeof i=="boolean")return i;if(i instanceof Array){const n=[],c=i.length;for(let a=0;a<c;++a){const l=i[a];d(o,a,l)?n.push(l):n.push(f(l,o))}return n}else{const n={};for(const c of Object.keys(i)){const a=i[c],l=r.toSnakeCase(c);(c==="name"||c==="className")&&typeof a=="string"?n[l]=a:n[l]=f(a,c)}return n}}},{"../utils/generic_utils":"gl5LS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],auovA:[function(e,E,s){/** @license See the LICENSE file. */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"version",()=>r);const r="4.9.0"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8ohzf":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Container",()=>h);var r=e("@tensorflow/tfjs-core"),d=e("../backend/state"),m=e("../errors"),f=e("../layers/serialization"),i=e("../utils/generic_utils"),o=e("../utils/serialization_utils"),n=e("../utils/types_utils"),c=e("../variables"),a=e("../version"),l=e("./executor"),u=e("./input_layer"),p=e("./topology");class h extends p.Layer{constructor(v){super({});if(this.containerNodes=new Set,this.name=v.name,this.name==null){const P=this.getClassName().toLowerCase();this.name=(0,d.getUid)(P)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(v.inputs)?this.inputs=v.inputs.slice():this.inputs=[v.inputs],Array.isArray(v.outputs)?this.outputs=v.outputs.slice():this.outputs=[v.outputs],i.unique(this.inputs).length!==this.inputs.length)throw new m.ValueError(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(P=>P.name)}`);i.unique(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(P=>P.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const P of this.outputs){const R=P.sourceLayer,A=P.nodeIndex,z=P.tensorIndex;this.outputLayers.push(R),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(z)}for(const P of this.inputs){const R=P.sourceLayer,A=P.nodeIndex,z=P.tensorIndex;i.assert(A===0,"input layer has >1 nodes"),i.assert(z===0,"input layer has >1 tensors"),this.inputLayers.push(R),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(z)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let P=0;P<this.inputLayers.length;P++){const R=this.inputLayers[P];if(!(R instanceof u.InputLayer))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${v.inputs}. Input ${P} (0-based) originates from layer type ${R.getClassName()}.`);this.inputNames.push(R.name),this.feedInputShapes.push(R.batchInputShape),this.feedInputNames.push(R.name)}for(const P of this.outputLayers)this.outputNames.push(P.name);this.internalInputShapes=this.inputs.map(P=>P.shape),this.internalOutputShapes=this.outputs.map(P=>P.shape);const _={},k={},y={},x={},b={},C=[],w=(P,R,A,z,G,L)=>{(z==null||G==null||L==null)&&(z=P.sourceLayer,G=P.nodeIndex,L=P.tensorIndex);const M=z.inboundNodes[G];if(A.indexOf(M)!==-1)throw new m.RuntimeError(`The tensor ${P.name} at layer "${z.name}" is part of a cycle.`);if(R.indexOf(M)!==-1)return;this.containerNodes.add(h.nodeKey(z,G)),z.id in b||(b[z.id]=Object.keys(b).length),A.indexOf(M)===-1&&A.push(M);const V=M.inboundLayers.length;for(let K=0;K<V;K++){const W=M.inputTensors[K],H=M.inboundLayers[K],Z=M.nodeIndices[K],Q=M.tensorIndices[K];w(W,R,A,H,Z,Q)}for(R.push(M);A.indexOf(M)>=0;)A.splice(A.indexOf(M),1);C.push(M)},N=[],T=[];for(const P of this.outputs)w(P,N,T);const F=C.slice().reverse();for(const P of F){k[P.id]=P,P.id in _||(_[P.id]=0);let R=_[P.id];const A=y[P.outboundLayer.id]==null?0:y[P.outboundLayer.id];R=Math.max(R,A),y[P.outboundLayer.id]=R,x[P.outboundLayer.id]=P.outboundLayer,_[P.id]=R;for(let z=0;z<P.inboundLayers.length;z++){const G=P.inboundLayers[z],L=P.nodeIndices[z],M=G.inboundNodes[L],V=_[M.id]==null?0:_[M.id];_[M.id]=Math.max(R+1,V),k[M.id]=M}}const S={};for(const P in _){const R=_[P];R in S||(S[R]=[]),S[R].push(k[P])}const I={};for(const P in y){const R=y[P];R in I||(I[R]=[]),I[R].push(x[P])}let j=Object.keys(I).map(P=>parseInt(P,10)).sort(i.reverseNumberCompare);this.layers=[];for(const P of j){const R=I[P];R.sort((A,z)=>{const G=b[A.id],L=b[z.id];return G<L?-1:G>L?1:0});for(const A of R)A instanceof h&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=I,j=Object.keys(S).map(P=>parseInt(P,10)).sort(i.reverseNumberCompare);const D=this.inputs.slice(),O=[];for(const P of j)for(const R of S[P]){const A=R.outboundLayer;if(A!=null){for(const z of R.inputTensors)if(D.indexOf(z)===-1)throw new m.RuntimeError(`Graph disconnected: cannot obtain value for tensor ${z} at layer "${A.name}". The following previous layers were accessed without issue: ${O}`);for(const z of R.outputTensors)D.push(z);O.push(A.name)}}this.nodesByDepth=S;const $=this.layers.map(P=>P.name);for(const P of $){const R=$.filter(A=>A===P).length;if(R!==1)throw new m.RuntimeError(`The name "${P}" is used ${R} times in the model. All layer names should be unique. Layer names: `+JSON.stringify($))}this.outboundNodes=[],this.inboundNodes=[],new p.Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(P=>null),outputMasks:this.outputs.map(P=>null),inputShapes:this.inputs.map(P=>P.shape),outputShapes:this.outputs.map(P=>P.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const v={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(const _ of this.layers)v.numDisposedVariables+=_.dispose().numDisposedVariables;for(const _ of this.internalContainerRefs)v.numDisposedVariables+=_.dispose().numDisposedVariables}return v.refCountAfterDispose=this._refCount,v}get trainable(){return this.trainable_}set trainable(v){this.layers.forEach(_=>{_._trainableWeights.forEach(k=>k.trainable=v)}),this.trainable_=v}get trainableWeights(){if(this._trainableWeights.length>0)throw new m.ValueError("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let v=[];for(const _ of this.layers)v=v.concat(_.trainableWeights);return v}get nonTrainableWeights(){const v=[];for(const _ of this.layers)v.push(..._.nonTrainableWeights);if(!this.trainable){const _=[];for(const k of this.layers)_.push(...k.trainableWeights);return _.concat(v)}return v}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(v,_=!0){const k={};let y=0;const x=Object.keys(v)[0].split("/"),b=!isNaN(parseInt(x[x.length-1],10));for(const w of this.layers)for(const[N,T]of w.weights.entries()){const F=b?`${T.name.split("/").slice(0,-1).join("/")+"/"}${N}`:T.originalName;if(k[F]!=null)throw new m.ValueError(`Duplicate weight name: ${F}`);k[F]=T,y++}const C=[];for(const w in v){let N=w;if(k[w]==null){const T=w.split("/");N=T.slice(0,-2).concat([T[T.length-1]]).join("/")}if(k[N]!=null)C.push([k[N],v[w]]);else if(_)throw new m.ValueError(`Provided weight data has no target variable: ${w}`);delete k[N]}if(_){const w=[];for(const N in k)w.push(N);if(w.length>0)throw new m.ValueError(`${w.length} of ${y} weights are not set: ${w}`)}(0,c.batchSetValue)(C)}updatedConfig(){const v=this.getConfig(),_={};return _.className=this.getClassName(),_.config=v,_.kerasVersion=`tfjs-layers ${a.version}`,_.backend="TensorFlow.js",_}toJSON(v,_=!0){const k=(0,o.convertTsToPythonic)(this.updatedConfig());return _?JSON.stringify(k):k}call(v,_){return(0,r.tidy)(()=>{v=i.toList(v);const k=new l.FeedDict;for(let y=0;y<this.inputs.length;++y)k.add(this.inputs[y],v[y]);return(0,l.execute)(this.outputs,k,_)})}computeMask(v,_){return(0,r.tidy)(()=>{v=i.toList(v);let k;return _==null?k=i.pyListRepeat(null,v.length):k=i.toList(_),this.runInternalGraph(v,k)[1]})}computeOutputShape(v){const _=n.normalizeShapeList(v);if(_.length!==this.inputLayers.length)throw new m.ValueError(`Invalid inputShape argument ${v}: model has ${this.inputLayers.length} tensor inputs.`);const k={};for(let C=0;C<_.length;C++){const w=this.inputLayers[C],N=_[C],T=w.name+"_0_0";k[T]=N}const y=Object.keys(this.nodesByDepth).map(C=>parseInt(C,10)).sort(i.reverseNumberCompare);if(y.length>1)for(const C of y){const w=this.nodesByDepth[C];for(const N of w){const T=N.outboundLayer;if(this.inputLayers.map(D=>D.id).indexOf(T.id)!==-1)continue;const F=[];for(let D=0;D<N.inboundLayers.length;D++){const O=N.inboundLayers[D],$=N.nodeIndices[D],P=N.tensorIndices[D],R=`${O.name}_${$}_${P}`,A=k[R];F.push(A)}const S=T.computeOutputShape(i.singletonOrArray(F)),I=n.normalizeShapeList(S),j=T.inboundNodes.indexOf(N);for(let D=0;D<I.length;D++){const O=`${T.name}_${j}_${D}`;k[O]=I[D]}}}const x=[],b=[];for(let C=0;C<this.outputLayers.length;C++){const w=this.outputLayers[C],N=this.outputLayersNodeIndices[C],T=this.outputLayersTensorIndices[C],F=`${w.name}_${N}_${T}`;b.push(F)}for(let C=0;C<b.length;C++){const w=b[C];i.assert(w in k),x.push(k[w])}return i.singletonOrArray(x)}runInternalGraph(v,_){_==null&&(_=i.pyListRepeat(null,v.length));const k={};for(let w=0;w<this.inputs.length;++w){const N=this.inputs[w],T=v[w],F=_[w];k[N.id]=[T,F]}const y=Object.keys(this.nodesByDepth).map(w=>parseInt(w,10)).sort(i.reverseNumberCompare);for(const w of y){const N=this.nodesByDepth[w];for(const T of N){const F=T.outboundLayer,S=T.inputTensors,I=T.outputTensors,j=new Array;for(const D of S)D.id in k&&j.push(k[D.id]);if(j.length===S.length){let D={},O,$,P,R;if(T.callArgs!=null&&(D=T.callArgs),j.length===1){const[A,z]=j[0];D.mask==null&&(D.mask=z),P=i.toList(F.call(A,D)),R=i.toList(F.computeMask(A,z)),O=[A],$=[z]}else O=j.map(A=>A[0]),$=j.map(A=>A[1]),D.mask==null&&(D.mask=$),P=i.toList(F.call(O,D)),R=i.toList(F.computeMask(O,$));if(F.activityRegularizer)throw new m.NotImplementedError("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<I.length;++A){const z=I[A],G=P[A],L=R[A];k[z.id]=[G,L]}}}}const x=[],b=[],C=[];for(const w of this.outputs){i.assert(w.id in k,`Could not compute output ${w.name} : ${w.id}`);const[N,T]=k[w.id];C.push(N.shape),x.push(N),b.push(T)}return[x,b,C]}buildNodeConversionMap(v){const _={};let k;for(const y of this.layers){k=y instanceof h?1:0;for(let x=0;x<y.inboundNodes.length;x++){const b=h.nodeKey(y,x);this.containerNodes.has(b)&&(_[b]=k,k+=1)}}return _}getLayer(v,_){if(_!=null)return this.findLayer(_);if(v==null)throw new m.ValueError("Provide either a layer name or layer index");if(typeof v=="number")return this.findLayer(v);for(const k of this.layers)if(k.name===v)return k;throw new m.ValueError(`No such layer: ${v}`)}findLayer(v){if(this.layers.length<=v)throw new m.ValueError(`Was asked to retrieve layer at index ${v}, but model only has ${this.layers.length} layer(s).`);return this.layers[v]}calculateLosses(){return(0,r.tidy)(()=>{const v=[];for(const _ of this.layers)for(let k=0;k<_.inboundNodes.length;++k){const y=h.nodeKey(_,k);this.containerNodes.has(y)&&v.push(..._.calculateLosses())}return v})}getConfig(){const v={name:this.name},_=this.buildNodeConversionMap(this.layers),k=[];for(const b of this.layers){const C=b.getClassName(),w=b.getConfig(),N=[];for(let F=0;F<b.inboundNodes.length;F++){const S=b.inboundNodes[F],I=h.nodeKey(b,F);let j={};if(this.containerNodes.has(I)){if(S.callArgs)try{JSON.stringify(S.callArgs),j=S.callArgs}catch{console.warn(`Layer ${b.name} was passed non-serializable keyword arguments: ${S.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),j={}}if(S.inboundLayers.length>0){const D=[];for(let O=0;O<S.inboundLayers.length;O++){const $=S.inboundLayers[O],P=S.nodeIndices[O],R=S.tensorIndices[O],A=h.nodeKey($,P);let z=_[A];z==null&&(z=0),D.push([$.name,z,R,j])}N.push(D)}}}const T={};T.name=b.name,T.className=C,T.config=w,T.inboundNodes=N,k.push(T)}v.layers=k;const y=[];for(let b=0;b<this.inputLayers.length;b++){const C=this.inputLayers[b],w=this.inputLayersNodeIndices[b],N=h.nodeKey(C,w);if(!this.containerNodes.has(N))continue;let T=_[N];T==null&&(T=0);const F=this.inputLayersTensorIndices[b];y.push([C.name,T,F])}v.inputLayers=y;const x=[];for(let b=0;b<this.outputLayers.length;b++){const C=this.outputLayers[b],w=this.outputLayersNodeIndices[b],N=h.nodeKey(C,w);if(!this.containerNodes.has(N))continue;let T=_[N];T==null&&(T=0);const F=this.outputLayersTensorIndices[b];x.push([C.name,T,F])}return v.outputLayers=x,v}static fromConfig(v,_,k={},y=!1){const x={},b={};function C(O,$){O.name in b?b[O.name].push($):b[O.name]=[$]}function w(O,$){const P=[];let R;for(const A of $){const z=A[0],G=A[1],L=A[2];if(R=A[3]==null?{}:A[3],!(z in x)){C(O,$);return}const M=x[z];if(M.inboundNodes.length<=G){C(O,$);return}const V=M.inboundNodes[G];P.push(V.outputTensors[L])}P.length>0&&O.apply(i.singletonOrArray(P),R)}function N(O){const $=O.name,P=(0,f.deserialize)(O,_.customObjects!=null?_.customObjects:{});P.setFastWeightInitDuringBuild(y),x[$]=P,O.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new m.ValueError(`Corrupted configuration, expected array for nodeData: ${A}`);C(P,A)})}const T=_.name,F=_.layers;for(const O of F)N(O);for(;!i.isObjectEmpty(b);)for(const O of F){const $=x[O.name];if($.name in b){const P=b[$.name];delete b[$.name];for(const R of P)w($,R)}}const S=[],I=[],j=_.inputLayers;for(const O of j){const $=O[0],P=O[1],R=O[2];i.assert($ in x);const z=x[$].inboundNodes[P].outputTensors;S.push(z[R])}const D=_.outputLayers;for(const O of D){const $=O[0],P=O[1],R=O[2];i.assert($ in x);const z=x[$].inboundNodes[P].outputTensors;I.push(z[R])}return new v({inputs:S,outputs:I,name:T})}get stateful(){if(this._stateful)throw new m.ValueError("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const v of this.layers)if(v.stateful)return!0;return!1}resetStates(){(0,r.tidy)(()=>{this.layers.forEach(v=>{v.stateful&&v.resetStates()})})}}},{"@tensorflow/tfjs-core":"fqGP4","../backend/state":"3jxc5","../errors":"eAG95","../layers/serialization":"jf3QQ","../utils/generic_utils":"gl5LS","../utils/serialization_utils":"lx2dB","../utils/types_utils":"fJq00","../variables":"8n5g7","../version":"auovA","./executor":"lTSQJ","./input_layer":"lBCvo","./topology":"Fr8bO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ldvNO:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fitDataset",()=>u),t.export(s,"evaluateDataset",()=>v);var r=e("@tensorflow/tfjs-core"),d=e("../base_callbacks"),m=e("../errors"),f=e("../logs"),i=e("../utils/generic_utils"),o=e("./training_utils");const n=32;function c(_,k){let y,x;const b=k;y=b.xs,x=b.ys,r.util.assert(y!=null&&x!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${k}`);const C=a("input",_.inputNames,y),w=a("output",_.outputNames,x),N=C[0].shape[0];r.util.assert(C.length===_.inputs.length,()=>`LayersModel has ${_.inputs.length} inputs, but the dataset provides ${C.length} inputs.  (Expected input keys: ${JSON.stringify(_.inputNames)})`),r.util.assert(w.length===_.outputs.length,()=>`LayersModel has ${_.outputs.length} outputs, but the dataset provides ${w.length} outputs.  (Expected output keys: ${JSON.stringify(_.outputNames)})`);for(let T=0;T<C.length;T++)r.util.assert(C[T].shape[0]===N,()=>`Batch size mismatch: input ${_.inputNames[T]} has ${C[T].shape[0]}; expected  ${N} based on input ${_.inputNames[0]}.`);for(let T=0;T<w.length;T++)r.util.assert(w[T].shape[0]===N,()=>`Batch size mismatch: output ${_.outputNames[T]} has ${w[T].shape[0]}; expected  ${N} based on input ${_.inputNames[0]}.`);return{xs:C,ys:w}}function a(_,k,y){if(y instanceof r.Tensor)return[y];if(Array.isArray(y))return r.util.assert(y.length===k.length,()=>`Received an array of ${y.length} Tensors, but expected ${k.length} to match the ${_} keys ${k}.`),y;{const x=[];for(const b of k){if(y[b]==null)throw new m.ValueError(`The feature data generated by the dataset lacks the required ${_} key '${b}'.`);x.push(y[b])}return x}}function l(_){if(_.length===3)throw new m.NotImplementedError("Validation with sample weights is not implemented yet.");return{xs:_[0],ys:_[1]}}async function u(_,k,y){const x=y.batchesPerEpoch!=null;if(r.util.assert(_.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),r.util.assert(y!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r.util.assert(y.epochs!=null&&y.epochs>0&&Number.isInteger(y.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${y.epochs}`),r.util.assert(!x||y.batchesPerEpoch>0&&Number.isInteger(y.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${y.batchesPerEpoch}`),r.util.assert(y.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),_.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");_.isTraining=!0;try{const b=y.validationData!=null;let C,w;if(b)if(h(y.validationData))r.util.assert(y.validationBatches==null||y.validationBatches>0&&Number.isInteger(y.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${y.validationBatches}`);else{const P=l(y.validationData);C=P.xs,w=P.ys}const N=_.makeTrainFunction(),T=_.getDedupedMetricsNames();let F;b?F=T.slice().concat(T.map(P=>"val_"+P)):F=T.slice();const S=(0,d.standardizeCallbacks)(y.callbacks,y.yieldEvery),I=y.verbose==null?1:y.verbose,{callbackList:j,history:D}=(0,d.configureCallbacks)(S,I,y.epochs,null,null,p(k,y),null,b,F);j.setModel(_),_.history=D,await j.onTrainBegin(),_.stopTraining_=!1;let O=y.initialEpoch==null?0:y.initialEpoch,$=await k.iterator();for(;O<y.epochs;){const P={};await j.onEpochBegin(O);let R=0,A=0;for(x||($=await k.iterator());x?R<y.batchesPerEpoch:!0;){const z=await $.next();if(x&&z.done){console.warn(`You provided \`batchesPerEpoch\` as ${y.batchesPerEpoch}, but your dataset iterator ran out of data after ${R} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${y.batchesPerEpoch*y.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(z.value!=null){const{xs:G,ys:L}=c(_,z.value),M={};M.batch=A,M.size=G[0].shape[0],await j.onBatchBegin(A,M);const V=[];if(y.classWeight!=null){const H=(0,o.standardizeClassWeights)(y.classWeight,_.outputNames);for(let Z=0;Z<H.length;++Z)V.push(await(0,o.standardizeWeights)(L[Z],null,H[Z]))}const K=G.concat(L).concat(V),W=N(K);r.dispose(K);for(let H=0;H<T.length;++H){const Z=T[H],Q=W[H];M[Z]=Q,r.keep(Q)}await j.onBatchEnd(A,M),(0,f.disposeTensorsInLogs)(M),A++,R++}if(x?R>=y.batchesPerEpoch:z.done){if(b){let G;h(y.validationData)?G=(0,i.toList)(await _.evaluateDataset(y.validationData,{batches:y.validationBatches})):G=(0,i.toList)(_.evaluate(C,w,{batchSize:y.validationBatchSize==null?n:y.validationBatchSize,verbose:0}));for(let L=0;L<_.metricsNames.length;++L)P[`val_${_.metricsNames[L]}`]=G[L]}break}if(_.stopTraining_)break}if(await j.onEpochEnd(O,P),O++,_.stopTraining_)break}return await j.onTrainEnd(),await _.history.syncData(),_.history}finally{_.isTraining=!1}}function p(_,k){let y=null;return k.batchesPerEpoch!=null?y=k.batchesPerEpoch:Number.isFinite(_.size)&&(y=_.size),y}function h(_){return typeof _.iterator=="function"}function g(_){return typeof _.next=="function"}async function v(_,k,y){y=y||{};const x=y.batches!=null,b=_.testFunction;let C=[];if(y.verbose>0)throw new m.NotImplementedError("Verbose mode is not implemented yet.");r.util.assert(!x||y.batches>0&&Number.isInteger(y.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(y.batches)}`);const w=g(k)?k:await k.iterator();let N=0,T=0;for(;x?T<y.batches:!0;){const F=await w.next();if(C=r.tidy(()=>{if(F.value){const{xs:S,ys:I}=c(_,F.value),j=S.concat(I),D=r.tidy(()=>b(j));if(r.dispose(j),T===0)for(let $=0;$<D.length;++$)C.push((0,r.scalar)(0));const O=j[0].shape[0];for(let $=0;$<D.length;++$){const P=D[$],R=C[$];C[$]=r.tidy(()=>r.add(C[$],r.mul(O,P))),T>0&&r.dispose(R)}r.dispose(D),N+=O,++T}return C}),F.done){x&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${y.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let F=0;F<C.length;++F){const S=C[F];C[F]=r.div(C[F],N),r.dispose(S)}return(0,i.singletonOrArray)(C)}},{"@tensorflow/tfjs-core":"fqGP4","../base_callbacks":"efotw","../errors":"eAG95","../logs":"guoRw","../utils/generic_utils":"gl5LS","./training_utils":"faEEH","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],faEEH:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"standardizeClassWeights",()=>m),t.export(s,"standardizeSampleWeights",()=>f),t.export(s,"standardizeWeights",()=>i),t.export(s,"computeWeightedLoss",()=>o);var r=e("@tensorflow/tfjs-core");function d(n,c,a){const l=c.length;if(n==null||Array.isArray(n)&&n.length===0)return c.map(u=>null);if(l===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&c[0]in n?[n[c[0]]]:[n];if(Array.isArray(n)){if(n.length!==l)throw new Error(`Provided ${a} is an array of ${n.length} element(s), but the model has ${l} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const u=[];return c.forEach(p=>{p in n?u.push(n[p]):u.push(null)}),u}else throw new Error(`The model has multiple (${l}) outputs, so ${a} must be either an array with ${l} elements or an object with ${c} keys. Provided ${a} not understood: ${JSON.stringify(n)}`)}function m(n,c){return d(n,c,"classWeight")}function f(n,c){return d(n,c,"sampleWeight")}async function i(n,c,a,l){if(c!=null||l!=null)throw new Error("Support sampleWeight is not implemented yet");if(a!=null){const u=(0,r.tidy)(()=>{if(n.shape.length===1)return(0,r.clone)(n);if(n.shape.length===2)if(n.shape[1]>1){const g=1;return(0,r.argMax)(n,g)}else{if(n.shape[1]===1)return(0,r.reshape)(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),p=Array.from(await u.data());(0,r.dispose)(u);const h=[];return p.forEach(g=>{if(a[g]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${g} exists in the data but not in classWeight`);h.push(a[g])}),(0,r.tensor1d)(h,"float32")}else return null}function o(n,c){return(0,r.mul)(n,c)}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kwer9:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"checkBatchSize",()=>m),t.export(s,"sliceArrays",()=>f),t.export(s,"sliceArraysByIndices",()=>i),t.export(s,"makeBatches",()=>o),t.export(s,"ensureTensorsRank2OrHigher",()=>n),t.export(s,"disposeNewTensors",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("../backend/tfjs_backend");function m(a){r.util.assert(a>0&&Number.isInteger(a),()=>`batchSize is required to be a positive integer, but got ${a}`)}function f(a,l,u){return a==null?[null]:Array.isArray(a)?a.map(p=>(0,d.sliceAlongFirstAxis)(p,l,u-l)):(0,d.sliceAlongFirstAxis)(a,l,u-l)}function i(a,l){return r.tidy(()=>a==null?null:Array.isArray(a)?a.map(u=>i(u,l)):(0,d.gather)(a,l.dtype==="int32"?l:r.cast(l,"int32")))}function o(a,l){const u=[];let p=0,h=null;for(;p<a;)h=p+l,h>=a&&(h=a),u.push([p,h]),p=h;return u}function n(a){const l=[];a instanceof r.Tensor&&(a=[a]);for(let u=0;u<a.length;++u){const p=a[u];if(p.rank===1)l.push((0,d.expandDims)(p,1));else{if(p.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");l.push(p)}}return l}function c(a,l){if(a==null)return;const u=[];if(l instanceof r.Tensor)u.push(l.id);else if(Array.isArray(l))l.forEach(h=>u.push(h.id));else if(l!=null)for(const h in l){const g=l[h];u.push(g.id)}const p=[];if(a instanceof r.Tensor)u.indexOf(a.id)===-1&&p.push(a);else if(Array.isArray(a))a.forEach(h=>{u.indexOf(h.id)===-1&&p.push(h)});else if(a!=null)for(const h in a){const g=a[h];u.indexOf(g.id)===-1&&p.push(g)}p.forEach(h=>{h.isDisposed||h.dispose()})}},{"@tensorflow/tfjs-core":"fqGP4","../backend/tfjs_backend":"2pIRC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6CNgn":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"modelFromJSON",()=>u),t.export(s,"loadLayersModel",()=>p),t.export(s,"loadLayersModelFromIOHandler",()=>h),t.export(s,"Sequential",()=>v);var r=e("@tensorflow/tfjs-core"),d=e("./backend/state"),m=e("./engine/input_layer"),f=e("./engine/topology"),i=e("./engine/training"),o=e("./errors"),n=e("./layers/serialization"),c=e("./utils/generic_utils"),a=e("./utils/serialization_utils"),l=e("./utils/types_utils");async function u(_,k){"modelTopology"in _||(_={modelTopology:_});let y=_.modelTopology;y.model_config!=null&&(y=y.model_config);const x=(0,a.convertPythonicToTs)(y),b=(0,n.deserialize)(x,k);if(_.weightsManifest!=null){const C=await r.io.loadWeights(_.weightsManifest,_.pathPrefix,b.weights.map(N=>N.originalName)),w={};for(const N of b.weights)w[N.originalName]=C[N.originalName];b.loadWeights(w),(0,r.dispose)(C)}return b}async function p(_,k){if(k==null&&(k={}),typeof _=="string"){const y=r.io.getLoadHandlers(_,k);if(y.length===0)y.push(r.io.browserHTTPRequest(_,k));else if(y.length>1)throw new o.ValueError(`Found more than one (${y.length}) load handlers for URL '${_}'`);_=y[0]}return h(_,void 0,k)}async function h(_,k,y){if(y==null&&(y={}),_.load==null)throw new o.ValueError("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const x=await _.load();let b=x.modelTopology;b.model_config!=null&&(b=b.model_config);const C=y.strict==null?!0:y.strict,w=x.weightData!=null&&x.weightSpecs!=null&&C,N=(0,n.deserialize)((0,a.convertPythonicToTs)(b),k,w),T=x.trainingConfig;if(T!=null&&N.loadTrainingConfig(T),x.userDefinedMetadata!=null&&N.setUserDefinedMetadata(x.userDefinedMetadata),x.weightData!=null){if(x.weightSpecs==null)throw new o.ValueError("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:F,optimizerWeights:S}=g(x.weightData,x.weightSpecs);N.loadWeights(F,C),N.optimizer!=null&&S.length>0&&await N.optimizer.setWeights(S),(0,r.dispose)(F),(0,r.dispose)(S.map(I=>I.tensor))}return N}function g(_,k){const y=r.io.decodeWeights(_,k),x={},b=[];return k.forEach(C=>{C.group==="optimizer"?b.push({name:C.name,tensor:y[C.name]}):x[C.name]=y[C.name]}),{modelWeights:x,optimizerWeights:b}}class v extends i.LayersModel{constructor(k){super({inputs:[],outputs:[]});if(k=k||{},this.trainable=!0,this.built=!1,this.name=k.name!=null?k.name:(0,d.getUid)("sequential_"),k.layers!=null)for(const y of k.layers)this.add(y)}checkShape(k){if(k.inboundNodes[0].outputTensors[0].shape.some(x=>x<0))throw new o.ValueError(`Negative dimension size caused by adding layer ${k.name} with input shape [${k.inboundNodes[0].inputTensors[0].shape}]`)}add(k){const y=k instanceof v||k instanceof i.LayersModel;let x;if(y){if(x=k,x.outputs.length!==1)throw new o.ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(x.inputs.length!==1)throw new o.ValueError("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(k.inboundNodes.length===0){if(k.batchInputShape==null)throw new o.ValueError("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const b=(0,m.Input)({batchShape:k.batchInputShape,dtype:k.dtype,name:k.name+"_input"});k.apply(b)}if(y)this.outputs=x.outputs,this.inputs=x.inputs;else{if(k.inboundNodes.length!==1)throw new o.ValueError(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${k.name} which has ${k.inboundNodes.length} pre-existing inbound connections.`);if(k.inboundNodes[0].outputTensors.length!==1)throw new o.ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(k),this.outputs=[k.inboundNodes[0].outputTensors[0]],this.inputs=(0,f.getSourceInputs)(this.outputs[0])}this.inboundNodes=[],new f.Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:c.pyListRepeat(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs[0].shape})}else{const b=k.apply(this.outputs[0]);if(Array.isArray(b))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(k),this.outputs=[b],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(k),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const k=this.layers.length-1;this.layers[k].outboundNodes=[],this.outputs=[this.layers[k].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(k,y){return this.model==null&&this.build(),this.model.call(k,y)}build(k){if((0,l.getExactlyOneShape)(k),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new i.LayersModel({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(k,y,x=console.log){this.built||this.build(),super.summary(k,y,x)}setWeights(k){this.model==null&&this.build(),this.model.setWeights(k)}evaluate(k,y,x={}){if(!this.built)throw new o.RuntimeError("The model needs to be compiled before being used.");return this.model.evaluate(k,y,x)}async evaluateDataset(k,y){if(!this.built)throw new o.RuntimeError("The model needs to be compiled before being used.");return this.model.evaluateDataset(k,y)}predict(k,y={}){return this.model==null&&this.build(),this.model.predict(k,y)}predictOnBatch(k){return this.model==null&&this.build(),this.model.predictOnBatch(k)}compile(k){this.build(),this.model.compile(k),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(k){this.model.optimizer=k}async fit(k,y,x={}){if(!this.built)throw new o.RuntimeError("The model needs to be compiled before being used.");return this.model.fit(k,y,x)}async fitDataset(k,y){if(!this.built)throw new o.RuntimeError("The model needs to be compiled before being used.");return this.model.fitDataset(k,y)}async trainOnBatch(k,y){return this.model.trainOnBatch(k,y)}static fromConfig(k,y,x={},b=!1){let C,w={};if(y instanceof Array){if(y[0].className==null||y[0].className==="Merge")throw new o.ValueError("Legacy serialization format not supported yet.");C=y}else r.util.assert(y.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),C=y.layers,delete y.layers,w=y;const N=new k(w);if(!(N instanceof v))throw new o.NotImplementedError(`Sequential.fromConfig called on non-Sequential input: ${N}`);for(const T of C){const F=void 0,S=(0,n.deserialize)(T,F,b);b&&S.setFastWeightInitDuringBuild(!0),N.add(S)}return N}set stopTraining(k){if(this.model==null)throw new o.ValueError("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=k}get stopTraining(){if(this.model==null)throw new o.ValueError("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const k=[];for(const y of this.layers){const x={};x.className=y.getClassName(),x.config=y.getConfig(),k.push(x)}return{name:this.name,layers:k}}}v.className="Sequential",r.serialization.registerClass(v)},{"@tensorflow/tfjs-core":"fqGP4","./backend/state":"3jxc5","./engine/input_layer":"lBCvo","./engine/topology":"Fr8bO","./engine/training":"bEWyV","./errors":"eAG95","./layers/serialization":"jf3QQ","./utils/generic_utils":"gl5LS","./utils/serialization_utils":"lx2dB","./utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4tdb5":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ReLU",()=>a),t.export(s,"LeakyReLU",()=>l),t.export(s,"PReLU",()=>u),t.export(s,"ELU",()=>p),t.export(s,"ThresholdedReLU",()=>h),t.export(s,"Softmax",()=>g);var r=e("@tensorflow/tfjs-core"),d=e("../activations"),m=e("../constraints"),f=e("../engine/topology"),i=e("../errors"),o=e("../initializers"),n=e("../regularizers"),c=e("../utils/types_utils");class a extends f.Layer{constructor(_){super(_??{});this.supportsMasking=!0,_!=null&&(this.maxValue=_.maxValue)}call(_,k){_=(0,c.getExactlyOneTensor)(_);let y=(0,r.relu)(_);return this.maxValue!=null&&(y=(0,r.clipByValue)(y,0,this.maxValue)),y}computeOutputShape(_){return _}getConfig(){const _={maxValue:this.maxValue},k=super.getConfig();return Object.assign(_,k),_}}a.className="ReLU",r.serialization.registerClass(a);class l extends f.Layer{constructor(_){super(_??{});this.DEFAULT_ALPHA=.3,_==null&&(_={}),this.alpha=_.alpha==null?this.DEFAULT_ALPHA:_.alpha}call(_,k){const y=(0,c.getExactlyOneTensor)(_);return(0,r.leakyRelu)(y,this.alpha)}computeOutputShape(_){return _}getConfig(){const _={alpha:this.alpha},k=super.getConfig();return Object.assign(_,k),_}}l.className="LeakyReLU",r.serialization.registerClass(l);class u extends f.Layer{constructor(_){super(_??{});if(this.DEFAULT_ALPHA_INITIALIZER="zeros",_==null&&(_={}),this.supportsMasking=!0,this.alphaInitializer=(0,o.getInitializer)(_.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=(0,n.getRegularizer)(_.alphaRegularizer),this.alphaConstraint=(0,m.getConstraint)(_.alphaConstraint),_.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(_.sharedAxes))this.sharedAxes=_.sharedAxes;else if(typeof _.sharedAxes=="number")this.sharedAxes=[_.sharedAxes];else throw new i.ValueError(`Expected sharedAxes to be a number or an array of numbers, but got ${_.sharedAxes}`)}build(_){_=(0,c.getExactlyOneShape)(_);const k=_.slice(1);if(this.sharedAxes!=null)for(const x of this.sharedAxes)k[x-1]=1;this.alpha=this.addWeight("alpha",k,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const y={};if(this.sharedAxes!=null)for(let x=1;x<_.length;++x)y[x]=_[x];this.inputSpec=[new f.InputSpec({ndim:_.length,axes:y})],this.built=!0}call(_,k){return _=(0,c.getExactlyOneTensor)(_),(0,r.prelu)(_,this.alpha.read())}getConfig(){const _={alphaInitializer:(0,o.serializeInitializer)(this.alphaInitializer),alphaRegularizer:(0,n.serializeRegularizer)(this.alphaRegularizer),alphaConstraint:(0,m.serializeConstraint)(this.alphaConstraint),sharedAxes:this.sharedAxes},k=super.getConfig();return Object.assign(_,k),_}}u.className="PReLU",r.serialization.registerClass(u);class p extends f.Layer{constructor(_){super(_??{});if(this.DEFAULT_ALPHA=1,_==null&&(_={}),_.alpha!=null&&_.alpha!==this.DEFAULT_ALPHA)throw new i.NotImplementedError(`Non-default alpha value (${_.alpha}) is not supported by the ELU layer yet.`);this.alpha=_.alpha==null?this.DEFAULT_ALPHA:_.alpha}call(_,k){const y=(0,c.getExactlyOneTensor)(_);return(0,r.elu)(y)}computeOutputShape(_){return _}getConfig(){const _={alpha:this.alpha},k=super.getConfig();return Object.assign(_,k),_}}p.className="ELU",r.serialization.registerClass(p);class h extends f.Layer{constructor(_){super(_??{});this.DEFAULT_THETA=1,_==null&&(_={}),this.theta=_.theta==null?this.DEFAULT_THETA:_.theta}call(_,k){const y=(0,c.getExactlyOneTensor)(_);return(0,r.mul)(y,(0,r.cast)((0,r.greater)(y,this.theta),"float32"))}computeOutputShape(_){return _}getConfig(){const _={theta:this.theta},k=super.getConfig();return Object.assign(_,k),_}}h.className="ThresholdedReLU",r.serialization.registerClass(h);class g extends f.Layer{constructor(_){super(_??{});this.DEFAULT_AXIS=1,_==null&&(_={}),this.softmax=new d.Softmax().apply,this.axis=_.axis==null?this.DEFAULT_AXIS:_.axis}call(_,k){const y=(0,c.getExactlyOneTensor)(_);return this.softmax(y,this.axis)}computeOutputShape(_){return _}getConfig(){const _={axis:this.axis},k=super.getConfig();return Object.assign(_,k),_}}g.className="Softmax",r.serialization.registerClass(g)},{"@tensorflow/tfjs-core":"fqGP4","../activations":"l9dwY","../constraints":"2NsZD","../engine/topology":"Fr8bO","../errors":"eAG95","../initializers":"j99Rp","../regularizers":"aeAuB","../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],l9dwY:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Activation",()=>f),t.export(s,"Elu",()=>i),t.export(s,"Selu",()=>o),t.export(s,"Relu",()=>n),t.export(s,"Relu6",()=>c),t.export(s,"Linear",()=>a),t.export(s,"Sigmoid",()=>l),t.export(s,"HardSigmoid",()=>u),t.export(s,"Softplus",()=>p),t.export(s,"Softsign",()=>h),t.export(s,"Tanh",()=>g),t.export(s,"Softmax",()=>v),t.export(s,"LogSoftmax",()=>_),t.export(s,"Swish",()=>k),t.export(s,"Mish",()=>y),t.export(s,"serializeActivation",()=>x),t.export(s,"deserializeActivation",()=>b),t.export(s,"getActivation",()=>C);var r=e("@tensorflow/tfjs-core"),d=e("./backend/tfjs_backend"),m=e("./utils/generic_utils");class f extends r.serialization.Serializable{getConfig(){return{}}}class i extends f{apply(N,T=1){return d.elu(N,T)}}i.className="elu",r.serialization.registerClass(i);class o extends f{apply(N){return r.selu(N)}}o.className="selu",r.serialization.registerClass(o);class n extends f{apply(N){return r.relu(N)}}n.className="relu",r.serialization.registerClass(n);class c extends f{apply(N){return(0,r.tidy)(()=>r.minimum(6,r.relu(N)))}}c.className="relu6",r.serialization.registerClass(c);class a extends f{apply(N){return N}}a.className="linear",r.serialization.registerClass(a);class l extends f{apply(N){return r.sigmoid(N)}}l.className="sigmoid",r.serialization.registerClass(l);class u extends f{apply(N){return d.hardSigmoid(N)}}u.className="hardSigmoid",r.serialization.registerClass(u);class p extends f{apply(N){return r.softplus(N)}}p.className="softplus",r.serialization.registerClass(p);class h extends f{apply(N){return d.softsign(N)}}h.className="softsign",r.serialization.registerClass(h);class g extends f{apply(N){return r.tanh(N)}}g.className="tanh",r.serialization.registerClass(g);class v extends f{apply(N,T=-1){return r.softmax(N,T)}}v.className="softmax",r.serialization.registerClass(v);class _ extends f{apply(N,T=-1){return r.logSoftmax(N,T)}}_.className="logSoftmax",r.serialization.registerClass(_);class k extends f{apply(N,T=1){return(0,r.tidy)(()=>r.mul(r.sigmoid(r.mul(N,T)),N))}}k.className="swish",r.serialization.registerClass(k);class y extends f{apply(N){return(0,r.tidy)(()=>r.mul(N,r.tanh(r.softplus(N))))}}y.className="mish",r.serialization.registerClass(y);function x(w){return w.getClassName()}function b(w,N={}){return(0,m.deserializeKerasObject)(w,r.serialization.SerializationMap.getMap().classNameMap,N,"activation")}function C(w){if(w==null){const N={};return N.className="linear",N.config={},b(N)}if(typeof w=="string"){const N={};return N.className=w,N.config={},b(N)}else return w instanceof f?w:b(w)}},{"@tensorflow/tfjs-core":"fqGP4","./backend/tfjs_backend":"2pIRC","./utils/generic_utils":"gl5LS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aeAuB:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Regularizer",()=>i),t.export(s,"L1L2",()=>o),t.export(s,"l1",()=>n),t.export(s,"l2",()=>c),t.export(s,"REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP",()=>a),t.export(s,"serializeRegularizer",()=>l),t.export(s,"deserializeRegularizer",()=>u),t.export(s,"getRegularizer",()=>p);var r=e("@tensorflow/tfjs-core"),d=e("./backend/tfjs_backend"),m=e("./utils/generic_utils");function f(h){if(h!=null&&typeof h!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${h}`)}class i extends r.serialization.Serializable{}class o extends i{constructor(g){super();f(g),this.l1=g==null||g.l1==null?.01:g.l1,this.l2=g==null||g.l2==null?.01:g.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(g){return(0,r.tidy)(()=>{let v=(0,r.zeros)([1]);return this.hasL1&&(v=(0,r.add)(v,(0,r.sum)(r.mul(this.l1,(0,r.abs)(g))))),this.hasL2&&(v=(0,r.add)(v,(0,r.sum)(r.mul(this.l2,d.square(g))))),r.reshape(v,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(g,v){return new g({l1:v.l1,l2:v.l2})}}o.className="L1L2",r.serialization.registerClass(o);function n(h){return f(h),new o({l1:h!=null?h.l1:null,l2:0})}function c(h){return f(h),new o({l2:h!=null?h.l2:null,l1:0})}const a={l1l2:"L1L2"};function l(h){return(0,m.serializeKerasObject)(h)}function u(h,g={}){return(0,m.deserializeKerasObject)(h,r.serialization.SerializationMap.getMap().classNameMap,g,"regularizer")}function p(h){if(h==null)return null;if(typeof h=="string"){const v={className:h in a?a[h]:h,config:{}};return u(v)}else return h instanceof i?h:u(h)}},{"@tensorflow/tfjs-core":"fqGP4","./backend/tfjs_backend":"2pIRC","./utils/generic_utils":"gl5LS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],c9doa:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"preprocessConv2DInput",()=>g),t.export(s,"preprocessConv3DInput",()=>v),t.export(s,"conv1dWithBias",()=>_),t.export(s,"conv1d",()=>k),t.export(s,"conv2d",()=>y),t.export(s,"conv2dWithBiasActivation",()=>x),t.export(s,"conv3d",()=>b),t.export(s,"conv3dWithBias",()=>C),t.export(s,"BaseConv",()=>w),t.export(s,"Conv",()=>N),t.export(s,"Conv2D",()=>T),t.export(s,"Conv3D",()=>F),t.export(s,"Conv2DTranspose",()=>S),t.export(s,"Conv3DTranspose",()=>I),t.export(s,"SeparableConv",()=>j),t.export(s,"SeparableConv2D",()=>D),t.export(s,"Conv1D",()=>O),t.export(s,"Cropping2D",()=>$),t.export(s,"UpSampling2D",()=>P);var r=e("@tensorflow/tfjs-core"),d=e("../activations"),m=e("../backend/common"),f=e("../backend/tfjs_backend"),i=e("../common"),o=e("../constraints"),n=e("../engine/topology"),c=e("../errors"),a=e("../initializers"),l=e("../regularizers"),u=e("../utils/conv_utils"),p=e("../utils/generic_utils"),h=e("../utils/types_utils");function g(R,A){return(0,r.tidy)(()=>((0,i.checkDataFormat)(A),A==="channelsFirst"?r.transpose(R,[0,2,3,1]):R))}function v(R,A){return(0,r.tidy)(()=>((0,i.checkDataFormat)(A),A==="channelsFirst"?r.transpose(R,[0,2,3,4,1]):R))}function _(R,A,z,G=1,L="valid",M,V=1){return(0,r.tidy)(()=>{if(M==null&&(M=(0,m.imageDataFormat)()),(0,i.checkDataFormat)(M),R.shape.length!==3)throw new c.ValueError(`The input of a conv1dWithBias operation should be 3, but is ${R.shape.length} instead.`);if(A.shape.length!==3)throw new c.ValueError(`The kernel for a conv1dWithBias operation should be 3, but is ${A.shape.length} instead`);if(z!=null&&z.shape.length!==1)throw new c.ValueError(`The bias for a conv1dWithBias operation should be 1, but is ${A.shape.length} instead`);if(M==="channelsFirst"&&(R=r.transpose(R,[0,2,1])),L==="causal")throw new c.NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let K=r.conv1d(R,A,G,L==="same"?"same":"valid","NWC",V);return z!=null&&(K=f.biasAdd(K,z)),K})}function k(R,A,z=1,G="valid",L,M=1){return(0,r.tidy)(()=>((0,i.checkDataFormat)(L),_(R,A,null,z,G,L,M)))}function y(R,A,z=[1,1],G="valid",L,M){return(0,r.tidy)(()=>((0,i.checkDataFormat)(L),x(R,A,null,z,G,L,M)))}function x(R,A,z,G=[1,1],L="valid",M,V,K=null){return(0,r.tidy)(()=>{if(M==null&&(M=(0,m.imageDataFormat)()),(0,i.checkDataFormat)(M),R.rank!==3&&R.rank!==4)throw new c.ValueError(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${R.rank}.`);if(A.rank!==3&&A.rank!==4)throw new c.ValueError(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${R.rank}.`);let W=g(R,M);if(L==="causal")throw new c.NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return W=r.fused.conv2d({x:W,filter:A,strides:G,pad:L==="same"?"same":"valid",dilations:V,dataFormat:"NHWC",bias:z,activation:K}),M==="channelsFirst"&&(W=r.transpose(W,[0,3,1,2])),W})}function b(R,A,z=[1,1,1],G="valid",L,M){return(0,r.tidy)(()=>((0,i.checkDataFormat)(L),C(R,A,null,z,G,L,M)))}function C(R,A,z,G=[1,1,1],L="valid",M,V){return(0,r.tidy)(()=>{if(M==null&&(M=(0,m.imageDataFormat)()),(0,i.checkDataFormat)(M),R.rank!==4&&R.rank!==5)throw new c.ValueError(`conv3dWithBias expects input to be of rank 4 or 5, but received ${R.rank}.`);if(A.rank!==4&&A.rank!==5)throw new c.ValueError(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${R.rank}.`);let K=v(R,M);if(L==="causal")throw new c.NotImplementedError("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return K=r.conv3d(K,A,G,L==="same"?"same":"valid","NDHWC",V),z!=null&&(K=f.biasAdd(K,z)),M==="channelsFirst"&&(K=r.transpose(K,[0,4,1,2,3])),K})}class w extends n.Layer{constructor(A,z){super(z);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",w.verifyArgs(z),this.rank=A,p.assertPositiveInteger(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new c.NotImplementedError(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=(0,u.normalizeArray)(z.kernelSize,A,"kernelSize"),this.strides=(0,u.normalizeArray)(z.strides==null?1:z.strides,A,"strides"),this.padding=z.padding==null?"valid":z.padding,(0,i.checkPaddingMode)(this.padding),this.dataFormat=z.dataFormat==null?"channelsLast":z.dataFormat,(0,i.checkDataFormat)(this.dataFormat),this.activation=(0,d.getActivation)(z.activation),this.useBias=z.useBias==null?!0:z.useBias,this.biasInitializer=(0,a.getInitializer)(z.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=(0,o.getConstraint)(z.biasConstraint),this.biasRegularizer=(0,l.getRegularizer)(z.biasRegularizer),this.activityRegularizer=(0,l.getRegularizer)(z.activityRegularizer),this.dilationRate=(0,u.normalizeArray)(z.dilationRate==null?1:z.dilationRate,A,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new c.ValueError(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new c.ValueError(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new c.ValueError(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(A){if(p.assert("kernelSize"in A,"required key 'kernelSize' not in config"),typeof A.kernelSize!="number"&&!p.checkArrayTypeAndLength(A.kernelSize,"number",1,3))throw new c.ValueError(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(A.kernelSize)}.`)}getConfig(){const A={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:(0,d.serializeActivation)(this.activation),useBias:this.useBias,biasInitializer:(0,a.serializeInitializer)(this.biasInitializer),biasRegularizer:(0,l.serializeRegularizer)(this.biasRegularizer),activityRegularizer:(0,l.serializeRegularizer)(this.activityRegularizer),biasConstraint:(0,o.serializeConstraint)(this.biasConstraint)},z=super.getConfig();return Object.assign(A,z),A}}class N extends w{constructor(A,z){super(A,z);this.kernel=null,N.verifyArgs(z),this.filters=z.filters,p.assertPositiveInteger(this.filters,"filters"),this.kernelInitializer=(0,a.getInitializer)(z.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=(0,o.getConstraint)(z.kernelConstraint),this.kernelRegularizer=(0,l.getRegularizer)(z.kernelRegularizer)}build(A){A=(0,h.getExactlyOneShape)(A);const z=this.dataFormat==="channelsFirst"?1:A.length-1;if(A[z]==null)throw new c.ValueError(`The channel dimension of the input should be defined. Found ${A[z]}`);const G=A[z],L=this.kernelSize.concat([G,this.filters]);this.kernel=this.addWeight("kernel",L,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[z]:G}}],this.built=!0}call(A,z){return(0,r.tidy)(()=>{A=(0,h.getExactlyOneTensor)(A);let G;const L=this.bias==null?null:this.bias.read(),M=p.mapActivationToFusedKernel(this.activation.getClassName());if(M!=null&&this.rank===2)G=x(A,this.kernel.read(),L,this.strides,this.padding,this.dataFormat,this.dilationRate,M);else{if(this.rank===1)G=_(A,this.kernel.read(),L,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)G=x(A,this.kernel.read(),L,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)G=C(A,this.kernel.read(),L,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new c.NotImplementedError("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(G=this.activation.apply(G))}return G})}computeOutputShape(A){A=(0,h.getExactlyOneShape)(A);const z=[],G=this.dataFormat==="channelsLast"?A.slice(1,A.length-1):A.slice(2);for(let M=0;M<G.length;++M){const V=(0,u.convOutputLength)(G[M],this.kernelSize[M],this.padding,this.strides[M],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[M]);z.push(V)}let L=[A[0]];return this.dataFormat==="channelsLast"?(L=L.concat(z),L.push(this.filters)):(L.push(this.filters),L=L.concat(z)),L}getConfig(){const A={filters:this.filters,kernelInitializer:(0,a.serializeInitializer)(this.kernelInitializer),kernelRegularizer:(0,l.serializeRegularizer)(this.kernelRegularizer),kernelConstraint:(0,o.serializeConstraint)(this.kernelConstraint)},z=super.getConfig();return Object.assign(A,z),A}static verifyArgs(A){if(!("filters"in A)||typeof A.filters!="number"||A.filters<1)throw new c.ValueError(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(A.filters)}`)}}class T extends N{constructor(A){super(2,A);T.verifyArgs(A)}getConfig(){const A=super.getConfig();return delete A.rank,A}static verifyArgs(A){if(typeof A.kernelSize!="number"&&!p.checkArrayTypeAndLength(A.kernelSize,"number",1,2))throw new c.ValueError(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(A.kernelSize)}.`)}}T.className="Conv2D",r.serialization.registerClass(T);class F extends N{constructor(A){super(3,A);F.verifyArgs(A)}getConfig(){const A=super.getConfig();return delete A.rank,A}static verifyArgs(A){if(typeof A.kernelSize!="number"&&!(Array.isArray(A.kernelSize)&&(A.kernelSize.length===1||A.kernelSize.length===3)))throw new c.ValueError(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(A.kernelSize)}.`)}}F.className="Conv3D",r.serialization.registerClass(F);class S extends T{constructor(A){super(A);if(this.inputSpec=[new n.InputSpec({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new c.ValueError(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(A){if(A=(0,h.getExactlyOneShape)(A),A.length!==4)throw new c.ValueError("Input should have rank 4; Received input shape: "+JSON.stringify(A));const z=this.dataFormat==="channelsFirst"?1:A.length-1;if(A[z]==null)throw new c.ValueError("The channel dimension of the inputs should be defined. Found `None`.");const G=A[z],L=this.kernelSize.concat([this.filters,G]);this.kernel=this.addWeight("kernel",L,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new n.InputSpec({ndim:4,axes:{[z]:G}})],this.built=!0}call(A,z){return r.tidy(()=>{let G=(0,h.getExactlyOneTensor)(A);if(G.shape.length!==4)throw new c.ValueError(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${G.shape.length}`);const L=G.shape,M=L[0];let V,K;this.dataFormat==="channelsFirst"?(V=2,K=3):(V=1,K=2);const W=L[V],H=L[K],Z=this.kernelSize[0],Q=this.kernelSize[1],te=this.strides[0],ee=this.strides[1],ne=(0,u.deconvLength)(W,te,Z,this.padding),se=(0,u.deconvLength)(H,ee,Q,this.padding),X=[M,ne,se,this.filters];this.dataFormat!=="channelsLast"&&(G=r.transpose(G,[0,2,3,1]));let U=r.conv2dTranspose(G,this.kernel.read(),X,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(U=r.transpose(U,[0,3,1,2])),this.bias!=null&&(U=f.biasAdd(U,this.bias.read(),this.dataFormat)),this.activation!=null&&(U=this.activation.apply(U)),U})}computeOutputShape(A){A=(0,h.getExactlyOneShape)(A);const z=A.slice();let G,L,M;this.dataFormat==="channelsFirst"?(G=1,L=2,M=3):(G=3,L=1,M=2);const V=this.kernelSize[0],K=this.kernelSize[1],W=this.strides[0],H=this.strides[1];return z[G]=this.filters,z[L]=(0,u.deconvLength)(z[L],W,V,this.padding),z[M]=(0,u.deconvLength)(z[M],H,K,this.padding),z}getConfig(){const A=super.getConfig();return delete A.dilationRate,A}}S.className="Conv2DTranspose",r.serialization.registerClass(S);class I extends F{constructor(A){super(A);if(this.inputSpec=[new n.InputSpec({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new c.ValueError(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(A){if(A=(0,h.getExactlyOneShape)(A),A.length!==5)throw new c.ValueError("Input should have rank 5; Received input shape: "+JSON.stringify(A));const z=this.dataFormat==="channelsFirst"?1:A.length-1;if(A[z]==null)throw new c.ValueError("The channel dimension of the inputs should be defined. Found `None`.");const G=A[z],L=this.kernelSize.concat([this.filters,G]);this.kernel=this.addWeight("kernel",L,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new n.InputSpec({ndim:5,axes:{[z]:G}})],this.built=!0}call(A,z){return r.tidy(()=>{let G=(0,h.getExactlyOneTensor)(A);if(G.shape.length!==5)throw new c.ValueError(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${G.shape.length}`);const L=G.shape,M=L[0];let V,K,W;this.dataFormat==="channelsFirst"?(W=2,V=3,K=4):(W=1,V=2,K=3);const H=L[W],Z=L[V],Q=L[K],te=this.kernelSize[0],ee=this.kernelSize[1],ne=this.kernelSize[2],se=this.strides[0],X=this.strides[1],U=this.strides[2],Y=(0,u.deconvLength)(H,se,te,this.padding),J=(0,u.deconvLength)(Z,X,ee,this.padding),q=(0,u.deconvLength)(Q,U,ne,this.padding),ae=[M,Y,J,q,this.filters];this.dataFormat!=="channelsLast"&&(G=r.transpose(G,[0,2,3,4,1]));let ie=r.conv3dTranspose(G,this.kernel.read(),ae,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(ie=r.transpose(ie,[0,4,1,2,3])),this.bias!==null&&(ie=f.biasAdd(ie,this.bias.read(),this.dataFormat)),this.activation!==null&&(ie=this.activation.apply(ie)),ie})}computeOutputShape(A){A=(0,h.getExactlyOneShape)(A);const z=A.slice();let G,L,M,V;this.dataFormat==="channelsFirst"?(G=1,L=2,M=3,V=4):(G=4,L=1,M=2,V=3);const K=this.kernelSize[0],W=this.kernelSize[1],H=this.kernelSize[2],Z=this.strides[0],Q=this.strides[1],te=this.strides[2];return z[G]=this.filters,z[L]=(0,u.deconvLength)(z[L],Z,K,this.padding),z[M]=(0,u.deconvLength)(z[M],Q,W,this.padding),z[V]=(0,u.deconvLength)(z[V],te,H,this.padding),z}getConfig(){const A=super.getConfig();return delete A.dilationRate,A}}I.className="Conv3DTranspose",r.serialization.registerClass(I);class j extends N{constructor(A,z){super(A,z);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,z.filters==null)throw new c.ValueError("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(z.kernelInitializer!=null||z.kernelRegularizer!=null||z.kernelConstraint!=null)throw new c.ValueError("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(z.padding!=null&&z.padding!=="same"&&z.padding!=="valid")throw new c.ValueError(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(z.padding)}`);this.depthMultiplier=z.depthMultiplier==null?1:z.depthMultiplier,this.depthwiseInitializer=(0,a.getInitializer)(z.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=(0,l.getRegularizer)(z.depthwiseRegularizer),this.depthwiseConstraint=(0,o.getConstraint)(z.depthwiseConstraint),this.pointwiseInitializer=(0,a.getInitializer)(z.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=(0,l.getRegularizer)(z.pointwiseRegularizer),this.pointwiseConstraint=(0,o.getConstraint)(z.pointwiseConstraint)}build(A){if(A=(0,h.getExactlyOneShape)(A),A.length<this.rank+2)throw new c.ValueError(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(A)}`);const z=this.dataFormat==="channelsFirst"?1:A.length-1;if(A[z]==null||A[z]<0)throw new c.ValueError(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(A[z])}`);const G=A[z],L=this.kernelSize.concat([G,this.depthMultiplier]),M=[];for(let K=0;K<this.rank;++K)M.push(1);M.push(G*this.depthMultiplier,this.filters);const V=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",L,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,V,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",M,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,V,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,V,this.biasConstraint):this.bias=null,this.inputSpec=[new n.InputSpec({ndim:this.rank+2,axes:{[z]:G}})],this.built=!0}call(A,z){return(0,r.tidy)(()=>{A=(0,h.getExactlyOneTensor)(A);let G;if(this.rank===1)throw new c.NotImplementedError("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(A=r.transpose(A,[0,2,3,1])),G=r.separableConv2d(A,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(G=f.biasAdd(G,this.bias.read(),this.dataFormat)),this.activation!=null&&(G=this.activation.apply(G)),this.dataFormat==="channelsFirst"&&(G=r.transpose(G,[0,3,1,2])),G})}getConfig(){const A=super.getConfig();return delete A.rank,delete A.kernelInitializer,delete A.kernelRegularizer,delete A.kernelConstraint,A.depthwiseInitializer=(0,a.serializeInitializer)(this.depthwiseInitializer),A.pointwiseInitializer=(0,a.serializeInitializer)(this.pointwiseInitializer),A.depthwiseRegularizer=(0,l.serializeRegularizer)(this.depthwiseRegularizer),A.pointwiseRegularizer=(0,l.serializeRegularizer)(this.pointwiseRegularizer),A.depthwiseConstraint=(0,o.serializeConstraint)(this.depthwiseConstraint),A.pointwiseConstraint=(0,o.serializeConstraint)(this.pointwiseConstraint),A}}j.className="SeparableConv";class D extends j{constructor(A){super(2,A)}}D.className="SeparableConv2D",r.serialization.registerClass(D);class O extends N{constructor(A){super(1,A);O.verifyArgs(A),this.inputSpec=[{ndim:3}]}getConfig(){const A=super.getConfig();return delete A.rank,delete A.dataFormat,A}static verifyArgs(A){if(typeof A.kernelSize!="number"&&!p.checkArrayTypeAndLength(A.kernelSize,"number",1,1))throw new c.ValueError(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(A.kernelSize)}.`)}}O.className="Conv1D",r.serialization.registerClass(O);class $ extends n.Layer{constructor(A){super(A);typeof A.cropping=="number"?this.cropping=[[A.cropping,A.cropping],[A.cropping,A.cropping]]:typeof A.cropping[0]=="number"?this.cropping=[[A.cropping[0],A.cropping[0]],[A.cropping[1],A.cropping[1]]]:this.cropping=A.cropping,this.dataFormat=A.dataFormat===void 0?"channelsLast":A.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(A){return this.dataFormat==="channelsFirst"?[A[0],A[1],A[2]-this.cropping[0][0]-this.cropping[0][1],A[3]-this.cropping[1][0]-this.cropping[1][1]]:[A[0],A[1]-this.cropping[0][0]-this.cropping[0][1],A[2]-this.cropping[1][0]-this.cropping[1][1],A[3]]}call(A,z){return(0,r.tidy)(()=>{if(A=(0,h.getExactlyOneTensor)(A),this.dataFormat==="channelsLast"){const G=f.sliceAlongAxis(A,this.cropping[0][0],A.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return f.sliceAlongAxis(G,this.cropping[1][0],A.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const G=f.sliceAlongAxis(A,this.cropping[0][0],A.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return f.sliceAlongAxis(G,this.cropping[1][0],A.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const A={cropping:this.cropping,dataFormat:this.dataFormat},z=super.getConfig();return Object.assign(A,z),A}}$.className="Cropping2D",r.serialization.registerClass($);class P extends n.Layer{constructor(A){super(A);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=A.size==null?this.DEFAULT_SIZE:A.size,this.dataFormat=A.dataFormat==null?"channelsLast":A.dataFormat,(0,i.checkDataFormat)(this.dataFormat),this.interpolation=A.interpolation==null?"nearest":A.interpolation,(0,i.checkInterpolationFormat)(this.interpolation)}computeOutputShape(A){if(this.dataFormat==="channelsFirst"){const z=A[2]==null?null:this.size[0]*A[2],G=A[3]==null?null:this.size[1]*A[3];return[A[0],A[1],z,G]}else{const z=A[1]==null?null:this.size[0]*A[1],G=A[2]==null?null:this.size[1]*A[2];return[A[0],z,G,A[3]]}}call(A,z){return r.tidy(()=>{let G=(0,h.getExactlyOneTensor)(A);const L=G.shape;if(this.dataFormat==="channelsFirst"){G=r.transpose(G,[0,2,3,1]);const M=this.size[0]*L[2],V=this.size[1]*L[3],K=this.interpolation==="nearest"?r.image.resizeNearestNeighbor(G,[M,V]):r.image.resizeBilinear(G,[M,V]);return r.transpose(K,[0,3,1,2])}else{const M=this.size[0]*L[1],V=this.size[1]*L[2];return this.interpolation==="nearest"?r.image.resizeNearestNeighbor(G,[M,V]):r.image.resizeBilinear(G,[M,V])}})}getConfig(){const A={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},z=super.getConfig();return Object.assign(A,z),A}}P.className="UpSampling2D",r.serialization.registerClass(P)},{"@tensorflow/tfjs-core":"fqGP4","../activations":"l9dwY","../backend/common":"7Ax0n","../backend/tfjs_backend":"2pIRC","../common":"hHHWg","../constraints":"2NsZD","../engine/topology":"Fr8bO","../errors":"eAG95","../initializers":"j99Rp","../regularizers":"aeAuB","../utils/conv_utils":"4SHhE","../utils/generic_utils":"gl5LS","../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4SHhE":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"normalizeArray",()=>f),t.export(s,"convOutputLength",()=>i),t.export(s,"deconvLength",()=>o);var r=e("../errors"),d=e("./generic_utils"),m=e("./math_utils");function f(n,c,a){if(typeof n=="number")return(0,d.pyListRepeat)(n,c);if(n.length!==c)throw new r.ValueError(`The ${a} argument must be an integer or tuple of ${c} integers. Received: ${n.length} elements.`);for(let l=0;l<c;++l){const u=n[l];if(!(0,m.isInteger)(u))throw new r.ValueError(`The ${a} argument must be an integer or tuple of ${c} integers. Received: ${JSON.stringify(n)} including a non-integer number ${u}`)}return n}function i(n,c,a,l,u=1){if(n==null)return n;const p=c+(c-1)*(u-1);let h;return a==="same"?h=n:h=n-p+1,Math.floor((h+l-1)/l)}function o(n,c,a,l){if(n==null)return null;if(l==="valid")n=n*c+(0,m.max)([a-c,0]);else if(l==="same")n=n*c;else throw new r.ValueError(`Unsupport padding mode: ${l}.`);return n}},{"../errors":"eAG95","./generic_utils":"gl5LS","./math_utils":"1DUeI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],beYFj:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2d",()=>p),t.export(s,"DepthwiseConv2D",()=>h);var r=e("@tensorflow/tfjs-core"),d=e("../backend/common"),m=e("../backend/tfjs_backend"),f=e("../common"),i=e("../constraints"),o=e("../errors"),n=e("../initializers"),c=e("../regularizers"),a=e("../utils/conv_utils"),l=e("../utils/types_utils"),u=e("./convolutional");function p(g,v,_=[1,1],k="valid",y,x){return(0,r.tidy)(()=>{y==null&&(y=(0,d.imageDataFormat)()),(0,f.checkDataFormat)(y);let b=(0,u.preprocessConv2DInput)(g,y);if(g.rank!==4)throw new o.ValueError(`Input for depthwiseConv2d is required to be 4-D, but is instead ${g.rank}-D`);if(v.rank!==4)throw new o.ValueError(`depthwiseKernel is required to be 4-D, but is instead ${v.rank}-D`);return b=r.depthwiseConv2d(b,v,_,k==="same"?"same":"valid","NHWC",x),y==="channelsFirst"&&(b=r.transpose(b,[0,3,1,2])),b})}class h extends u.BaseConv{constructor(v){super(2,v);this.depthwiseKernel=null,this.depthMultiplier=v.depthMultiplier==null?1:v.depthMultiplier,this.depthwiseInitializer=(0,n.getInitializer)(v.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=(0,i.getConstraint)(v.depthwiseConstraint),this.depthwiseRegularizer=(0,c.getRegularizer)(v.depthwiseRegularizer)}build(v){if(v=(0,l.getExactlyOneShape)(v),v.length<4)throw new o.ValueError(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(v)}.`);const _=this.dataFormat==="channelsFirst"?1:3;if(v[_]==null||v[_]<0)throw new o.ValueError(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${v[_]}).`);const k=v[_],y=[this.kernelSize[0],this.kernelSize[1],k,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",y,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[k*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(v,_){return(0,r.tidy)(()=>{v=(0,l.getExactlyOneTensor)(v);let k=p(v,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(k=m.biasAdd(k,this.bias.read(),this.dataFormat)),this.activation!=null&&(k=this.activation.apply(k)),k})}computeOutputShape(v){v=(0,l.getExactlyOneShape)(v);const _=this.dataFormat==="channelsFirst"?v[2]:v[1],k=this.dataFormat==="channelsFirst"?v[3]:v[2],y=this.dataFormat==="channelsFirst"?v[1]*this.depthMultiplier:v[3]*this.depthMultiplier,x=(0,a.convOutputLength)(_,this.kernelSize[0],this.padding,this.strides[0]),b=(0,a.convOutputLength)(k,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[v[0],y,x,b]:[v[0],x,b,y]}getConfig(){const v=super.getConfig();return v.depthMultiplier=this.depthMultiplier,v.depthwiseInitializer=(0,n.serializeInitializer)(this.depthwiseInitializer),v.depthwiseRegularizer=(0,c.serializeRegularizer)(this.depthwiseRegularizer),v.depthwiseConstraint=(0,i.serializeConstraint)(this.depthwiseRegularizer),v}}h.className="DepthwiseConv2D",r.serialization.registerClass(h)},{"@tensorflow/tfjs-core":"fqGP4","../backend/common":"7Ax0n","../backend/tfjs_backend":"2pIRC","../common":"hHHWg","../constraints":"2NsZD","../errors":"eAG95","../initializers":"j99Rp","../regularizers":"aeAuB","../utils/conv_utils":"4SHhE","../utils/types_utils":"fJq00","./convolutional":"c9doa","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cGaOx:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ConvLSTM2DCell",()=>g),t.export(s,"ConvLSTM2D",()=>v);var r=e("@tensorflow/tfjs-core"),d=e("../backend/tfjs_backend"),m=e("../common"),f=e("../engine/topology"),i=e("../errors"),o=e("../initializers"),n=e("../utils/conv_utils"),c=e("../utils/generic_utils"),a=e("../utils/types_utils"),l=e("./recurrent"),u=function(_,k){var y={};for(var x in _)Object.prototype.hasOwnProperty.call(_,x)&&k.indexOf(x)<0&&(y[x]=_[x]);if(_!=null&&typeof Object.getOwnPropertySymbols=="function")for(var b=0,x=Object.getOwnPropertySymbols(_);b<x.length;b++)k.indexOf(x[b])<0&&Object.prototype.propertyIsEnumerable.call(_,x[b])&&(y[x[b]]=_[x[b]]);return y};class p extends l.RNNCell{}class h extends l.RNN{constructor(k){if(k.unroll)throw new i.NotImplementedError("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(k.cell))throw new i.NotImplementedError("It is not possible at the moment to stack convolutional cells.");super(k);this.inputSpec=[new f.InputSpec({ndim:5})]}call(k,y){return r.tidy(()=>{if(this.cell.dropoutMask!=null&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),y&&y.constants)throw new i.ValueError("ConvRNN2D cell does not support constants");const x=y==null?null:y.mask,b=y==null?null:y.training,C=y==null?null:y.initialState;return super.call(k,{mask:x,training:b,initialState:C})})}computeOutputShape(k){let y=this.computeSingleOutputShape(k);return this.returnSequences||(y=[y[0],...y.slice(2)]),this.returnState&&(y=[y,...Array(2).fill([k[0],...y.slice(-3)])]),y}getInitialState(k){return r.tidy(()=>{const{stateSize:y}=this.cell,x=k.shape,b=this.computeSingleOutputShape(x),C=[b[0],...b.slice(2)],w=r.zeros(C);return Array.isArray(y)?Array(y.length).fill(w):[w]})}resetStates(k,y=!1){r.tidy(()=>{if(!this.stateful)throw new i.AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const x=this.inputSpec[0].shape,b=this.computeSingleOutputShape(x),C=[b[0],...b.slice(2)];if(x[0]==null)throw new i.ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>r.zeros(C)):this.states_=[r.zeros(C)];else if(k==null)r.dispose(this.states_),this.keptStates!=null&&(r.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>r.zeros(C)):this.states_[0]=r.zeros(C);else{if(Array.isArray(k)||(k=[k]),k.length!==this.states_.length)throw new i.ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${k.length} state value(s). Input received: ${k}`);y?this.keptStates.push(this.states_.slice()):r.dispose(this.states_);for(let N=0;N<this.states_.length;++N){const T=k[N],F=C;if(!r.util.arraysEqual(T.shape,F))throw new i.ValueError(`State ${N} is incompatible with layer ${this.name}: expected shape=${F}, received shape=${T.shape}`);this.states_[N]=T}}this.states_=this.states_.map(N=>r.keep(N.clone()))})}computeSingleOutputShape(k){const{dataFormat:y,filters:x,kernelSize:b,padding:C,strides:w,dilationRate:N}=this.cell,T=y==="channelsFirst",F=k[T?3:2],S=k[T?4:3],I=(0,n.convOutputLength)(F,b[0],C,w[0],N[0]),j=(0,n.convOutputLength)(S,b[1],C,w[1],N[1]);return[...k.slice(0,2),...T?[x,I,j]:[I,j,x]]}}h.className="ConvRNN2D";class g extends l.LSTMCell{constructor(k){const{filters:y,kernelSize:x,strides:b,padding:C,dataFormat:w,dilationRate:N}=k;super(Object.assign(Object.assign({},k),{units:y}));this.filters=y,(0,c.assertPositiveInteger)(this.filters,"filters"),this.kernelSize=(0,n.normalizeArray)(x,2,"kernelSize"),this.kernelSize.forEach(T=>(0,c.assertPositiveInteger)(T,"kernelSize")),this.strides=(0,n.normalizeArray)(b||1,2,"strides"),this.strides.forEach(T=>(0,c.assertPositiveInteger)(T,"strides")),this.padding=C||"valid",(0,m.checkPaddingMode)(this.padding),this.dataFormat=w||"channelsLast",(0,m.checkDataFormat)(this.dataFormat),this.dilationRate=(0,n.normalizeArray)(N||1,2,"dilationRate"),this.dilationRate.forEach(T=>(0,c.assertPositiveInteger)(T,"dilationRate"))}build(k){var y;k=(0,a.getExactlyOneShape)(k);const x=this.dataFormat==="channelsFirst"?1:k.length-1;if(k[x]==null)throw new i.ValueError(`The channel dimension of the input should be defined. Found ${k[x]}`);const b=k[x],C=4,w=this.kernelSize.concat([b,this.filters*C]);this.kernel=this.addWeight("kernel",w,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const N=this.kernelSize.concat([this.filters,this.filters*C]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",N,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let T;if(this.unitForgetBias){const F=this.biasInitializer,S=this.filters;T=new(y=class extends o.Initializer{apply(j,D){const O=F.apply([S]),$=r.ones([S]),P=F.apply([S*2]);return d.concatenate([O,$,P])}},y.className="CustomInit",y)}else T=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*C],null,T,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(k,y){return r.tidy(()=>{if(k.length!==3)throw new i.ValueError(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${k.length}.`);const x=y.training||!1,b=k[0],C=k[1],w=k[2],N=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=(0,l.generateDropoutMask)({ones:()=>r.onesLike(b),rate:this.dropout,training:x,count:N,dropoutFunc:this.dropoutFunc}));const T=this.dropoutMask,F=(J,q,ae)=>!q||!q[ae]?J:r.mul(q[ae],J);let S=F(b,T,0),I=F(b,T,1),j=F(b,T,2),D=F(b,T,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=(0,l.generateDropoutMask)({ones:()=>r.onesLike(C),rate:this.recurrentDropout,training:x,count:N,dropoutFunc:this.dropoutFunc}));const O=this.recurrentDropoutMask;let $=F(C,O,0),P=F(C,O,1),R=F(C,O,2),A=F(C,O,3);const z=3,[G,L,M,V]=r.split(this.kernel.read(),N,z),[K,W,H,Z]=this.useBias?r.split(this.bias.read(),N):[null,null,null,null];S=this.inputConv(S,G,K,this.padding),I=this.inputConv(I,L,W,this.padding),j=this.inputConv(j,M,H,this.padding),D=this.inputConv(D,V,Z,this.padding);const[Q,te,ee,ne]=r.split(this.recurrentKernel.read(),N,z);$=this.recurrentConv($,Q),P=this.recurrentConv(P,te),R=this.recurrentConv(R,ee),A=this.recurrentConv(A,ne);const se=this.recurrentActivation.apply(r.add(S,$)),X=this.recurrentActivation.apply(r.add(I,P)),U=r.add(r.mul(X,w),r.mul(se,this.activation.apply(r.add(j,R)))),Y=r.mul(this.recurrentActivation.apply(r.add(D,A)),this.activation.apply(U));return[Y,Y,U]})}getConfig(){const k=super.getConfig(),{units:y}=k,x=u(k,["units"]),b={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},x),b)}inputConv(k,y,x,b){const C=r.conv2d(k,y,this.strides,b||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return x?d.biasAdd(C,x,this.dataFormat):C}recurrentConv(k,y){const x=1;return r.conv2d(k,y,x,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}g.className="ConvLSTM2DCell",r.serialization.registerClass(g);class v extends h{constructor(k){const y=new g(k);super(Object.assign(Object.assign({},k),{cell:y}))}static fromConfig(k,y){return new k(y)}}v.className="ConvLSTM2D",r.serialization.registerClass(v)},{"@tensorflow/tfjs-core":"fqGP4","../backend/tfjs_backend":"2pIRC","../common":"hHHWg","../engine/topology":"Fr8bO","../errors":"eAG95","../initializers":"j99Rp","../utils/conv_utils":"4SHhE","../utils/generic_utils":"gl5LS","../utils/types_utils":"fJq00","./recurrent":"dY6Qj","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dY6Qj:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"standardizeArgs",()=>v),t.export(s,"rnn",()=>_),t.export(s,"RNN",()=>k),t.export(s,"RNNCell",()=>y),t.export(s,"SimpleRNNCell",()=>x),t.export(s,"SimpleRNN",()=>b),t.export(s,"GRUCell",()=>C),t.export(s,"GRU",()=>w),t.export(s,"LSTMCell",()=>N),t.export(s,"LSTM",()=>T),t.export(s,"StackedRNNCells",()=>F),t.export(s,"generateDropoutMask",()=>S);var r=e("@tensorflow/tfjs-core"),d=e("../activations"),m=e("../backend/tfjs_backend"),f=e("../common"),i=e("../constraints"),o=e("../engine/topology"),n=e("../errors"),c=e("../initializers"),a=e("../regularizers"),l=e("../utils/generic_utils"),u=e("../utils/math_utils"),p=e("../utils/types_utils"),h=e("../variables"),g=e("./serialization");function v(I,j,D,O){if(Array.isArray(I)){if(j!=null||D!=null)throw new n.ValueError("When inputs is an array, neither initialState or constants should be provided");O!=null&&(D=I.slice(I.length-O,I.length),I=I.slice(0,I.length-O)),I.length>1&&(j=I.slice(1,I.length)),I=I[0]}function $(P){return P==null||Array.isArray(P)?P:[P]}return j=$(j),D=$(D),{inputs:I,initialState:j,constants:D}}function _(I,j,D,O=!1,$,P,R=!1,A=!1){return r.tidy(()=>{const z=j.shape.length;if(z<3)throw new n.ValueError(`Input should be at least 3D, but is ${z}D.`);const G=[1,0].concat(u.range(2,z));if(j=r.transpose(j,G),P!=null)throw new n.NotImplementedError("The rnn() functoin of the deeplearn.js backend does not support constants yet.");R&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),$!=null&&($=r.cast(r.cast($,"bool"),"float32"),$.rank===z-1&&($=r.expandDims($,-1)),$=r.transpose($,G)),O&&(j=r.reverse(j,0),$!=null&&($=r.reverse($,0)));const L=[];let M,V=D;const K=j.shape[0],W=r.unstack(j);let H;$!=null&&(H=r.unstack($));for(let Q=0;Q<K;++Q){const te=W[Q],ee=r.tidy(()=>I(te,V));if($==null)M=ee[0],V=ee[1];else{const ne=r.tidy(()=>{const se=H[Q],X=r.sub(r.onesLike(se),se),U=r.add(r.mul(ee[0],se),r.mul(V[0],X)),Y=V.map((J,q)=>r.add(r.mul(ee[1][q],se),r.mul(J,X)));return{output:U,newStates:Y}});M=ne.output,V=ne.newStates}A&&L.push(M)}let Z;if(A){const Q=1;Z=r.stack(L,Q)}return[M,Z,V]})}class k extends o.Layer{constructor(j){super(j);let D;if(j.cell==null)throw new n.ValueError("cell property is missing for the constructor of RNN.");if(Array.isArray(j.cell)?D=new F({cells:j.cell}):D=j.cell,D.stateSize==null)throw new n.ValueError("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=D,this.returnSequences=j.returnSequences==null?!1:j.returnSequences,this.returnState=j.returnState==null?!1:j.returnState,this.goBackwards=j.goBackwards==null?!1:j.goBackwards,this._stateful=j.stateful==null?!1:j.stateful,this.unroll=j.unroll==null?!1:j.unroll,this.supportsMasking=!0,this.inputSpec=[new o.InputSpec({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const j=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return u.range(0,j).map(D=>null)}else return this.states_}setStates(j){this.states_=j}computeOutputShape(j){(0,p.isArrayOfShapes)(j)&&(j=j[0]);let D=this.cell.stateSize;Array.isArray(D)||(D=[D]);const O=D[0];let $;if(this.returnSequences?$=[j[0],j[1],O]:$=[j[0],O],this.returnState){const P=[];for(const R of D)P.push([j[0],R]);return[$].concat(P)}else return $}computeMask(j,D){return r.tidy(()=>{Array.isArray(D)&&(D=D[0]);const O=this.returnSequences?D:null;if(this.returnState){const $=this.states.map(P=>null);return[O].concat($)}else return O})}get states(){if(this.states_==null){const j=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,D=[];for(let O=0;O<j;++O)D.push(null);return D}else return this.states_}set states(j){this.states_=j}build(j){const D=null;if(this.numConstants!=null)throw new n.NotImplementedError("Constants support is not implemented in RNN yet.");(0,p.isArrayOfShapes)(j)&&(j=j[0]);const O=this.stateful?j[0]:null,$=j.slice(2);this.inputSpec[0]=new o.InputSpec({shape:[O,null,...$]});const P=[j[0]].concat(j.slice(2));if(D!=null)throw new n.NotImplementedError("Constants support is not implemented in RNN yet.");this.cell.build(P);let R;if(Array.isArray(this.cell.stateSize)?R=this.cell.stateSize:R=[this.cell.stateSize],this.stateSpec!=null){if(!r.util.arraysEqual(this.stateSpec.map(A=>A.shape[A.shape.length-1]),R))throw new n.ValueError(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=R.map(A=>new o.InputSpec({shape:[null,A]}));this.stateful&&this.resetStates()}resetStates(j,D=!1){(0,r.tidy)(()=>{if(!this.stateful)throw new n.AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const O=this.inputSpec[0].shape[0];if(O==null)throw new n.ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map($=>r.zeros([O,$])):this.states_=[r.zeros([O,this.cell.stateSize])];else if(j==null)r.dispose(this.states_),this.keptStates!=null&&(r.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map($=>r.zeros([O,$])):this.states_[0]=r.zeros([O,this.cell.stateSize]);else{if(Array.isArray(j)||(j=[j]),j.length!==this.states_.length)throw new n.ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${j.length} state value(s). Input received: ${j}`);D===!0?this.keptStates.push(this.states_.slice()):r.dispose(this.states_);for(let $=0;$<this.states_.length;++$){const P=j[$],R=Array.isArray(this.cell.stateSize)?this.cell.stateSize[$]:this.cell.stateSize,A=[O,R];if(!r.util.arraysEqual(P.shape,A))throw new n.ValueError(`State ${$} is incompatible with layer ${this.name}: expected shape=${A}, received shape=${P.shape}`);this.states_[$]=P}}this.states_=this.states_.map($=>r.keep($.clone()))})}apply(j,D){let O=D==null?null:D.initialState,$=D==null?null:D.constants;D==null&&(D={});const P=v(j,O,$,this.numConstants);j=P.inputs,O=P.initialState,$=P.constants;let R=[],A=[];if(O!=null){D.initialState=O,R=R.concat(O),this.stateSpec=[];for(const G of O)this.stateSpec.push(new o.InputSpec({shape:G.shape}));A=A.concat(this.stateSpec)}if($!=null&&(D.constants=$,R=R.concat($),this.numConstants=$.length),R[0]instanceof o.SymbolicTensor){const G=[j].concat(R),L=this.inputSpec.concat(A),M=this.inputSpec;this.inputSpec=L;const V=super.apply(G,D);return this.inputSpec=M,V}else return super.apply(j,D)}call(j,D){return(0,r.tidy)(()=>{const O=D==null?null:D.mask,$=D==null?null:D.training;let P=D==null?null:D.initialState;j=(0,p.getExactlyOneTensor)(j),P==null&&(this.stateful?P=this.states_:P=this.getInitialState(j));const R=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(P.length!==R)throw new n.ValueError(`RNN Layer has ${R} state(s) but was passed ${P.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const A={training:$},G=_((W,H)=>{const Z=this.cell.call([W].concat(H),A);return[Z[0],Z.slice(1)]},j,P,this.goBackwards,O,null,this.unroll,this.returnSequences),L=G[0],M=G[1],V=G[2];this.stateful&&this.resetStates(V,$);const K=this.returnSequences?M:L;return this.returnState?[K].concat(V):K})}getInitialState(j){return(0,r.tidy)(()=>{let D=r.zeros(j.shape);return D=r.sum(D,[1,2]),D=m.expandDims(D),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(O=>O>1?m.tile(D,[1,O]):D):this.cell.stateSize>1?[m.tile(D,[1,this.cell.stateSize])]:[D]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(j){super.setFastWeightInitDuringBuild(j),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(j)}getConfig(){const j=super.getConfig(),D={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(D.numConstants=this.numConstants);const O=this.cell.getConfig();return this.getClassName()===k.className&&(D.cell={className:this.cell.getClassName(),config:O}),Object.assign(Object.assign(Object.assign({},O),j),D)}static fromConfig(j,D,O={}){const $=D.cell,P=(0,g.deserialize)($,O);return new j(Object.assign(D,{cell:P}))}}k.className="RNN",r.serialization.registerClass(k);class y extends o.Layer{}class x extends y{constructor(j){super(j);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=j.units,(0,l.assertPositiveInteger)(this.units,"units"),this.activation=(0,d.getActivation)(j.activation==null?this.DEFAULT_ACTIVATION:j.activation),this.useBias=j.useBias==null?!0:j.useBias,this.kernelInitializer=(0,c.getInitializer)(j.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=(0,c.getInitializer)(j.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=(0,c.getInitializer)(j.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=(0,a.getRegularizer)(j.kernelRegularizer),this.recurrentRegularizer=(0,a.getRegularizer)(j.recurrentRegularizer),this.biasRegularizer=(0,a.getRegularizer)(j.biasRegularizer),this.kernelConstraint=(0,i.getConstraint)(j.kernelConstraint),this.recurrentConstraint=(0,i.getConstraint)(j.recurrentConstraint),this.biasConstraint=(0,i.getConstraint)(j.biasConstraint),this.dropout=u.min([1,u.max([0,j.dropout==null?0:j.dropout])]),this.recurrentDropout=u.min([1,u.max([0,j.recurrentDropout==null?0:j.recurrentDropout])]),this.dropoutFunc=j.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(j){j=(0,p.getExactlyOneShape)(j),this.kernel=this.addWeight("kernel",[j[j.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(j,D){return(0,r.tidy)(()=>{if(j.length!==2)throw new n.ValueError(`SimpleRNNCell expects 2 input Tensors, got ${j.length}.`);let O=j[1];j=j[0];const $=D.training==null?!1:D.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=S({ones:()=>r.onesLike(j),rate:this.dropout,training:$,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=S({ones:()=>r.onesLike(O),rate:this.recurrentDropout,training:$,dropoutFunc:this.dropoutFunc}));let P;const R=this.dropoutMask,A=this.recurrentDropoutMask;R!=null?P=m.dot(r.mul(j,R),this.kernel.read()):P=m.dot(j,this.kernel.read()),this.bias!=null&&(P=m.biasAdd(P,this.bias.read())),A!=null&&(O=r.mul(O,A));let z=r.add(P,m.dot(O,this.recurrentKernel.read()));return this.activation!=null&&(z=this.activation.apply(z)),[z,z]})}getConfig(){const j=super.getConfig(),D={units:this.units,activation:(0,d.serializeActivation)(this.activation),useBias:this.useBias,kernelInitializer:(0,c.serializeInitializer)(this.kernelInitializer),recurrentInitializer:(0,c.serializeInitializer)(this.recurrentInitializer),biasInitializer:(0,c.serializeInitializer)(this.biasInitializer),kernelRegularizer:(0,a.serializeRegularizer)(this.kernelRegularizer),recurrentRegularizer:(0,a.serializeRegularizer)(this.recurrentRegularizer),biasRegularizer:(0,a.serializeRegularizer)(this.biasRegularizer),activityRegularizer:(0,a.serializeRegularizer)(this.activityRegularizer),kernelConstraint:(0,i.serializeConstraint)(this.kernelConstraint),recurrentConstraint:(0,i.serializeConstraint)(this.recurrentConstraint),biasConstraint:(0,i.serializeConstraint)(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},j),D)}}x.className="SimpleRNNCell",r.serialization.registerClass(x);class b extends k{constructor(j){j.cell=new x(j);super(j)}call(j,D){return(0,r.tidy)(()=>{this.cell.dropoutMask!=null&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const O=D==null?null:D.mask,$=D==null?null:D.training,P=D==null?null:D.initialState;return super.call(j,{mask:O,training:$,initialState:P})})}static fromConfig(j,D){return new j(D)}}b.className="SimpleRNN",r.serialization.registerClass(b);class C extends y{constructor(j){super(j);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",j.resetAfter)throw new n.ValueError("GRUCell does not support reset_after parameter set to true.");this.units=j.units,(0,l.assertPositiveInteger)(this.units,"units"),this.activation=(0,d.getActivation)(j.activation===void 0?this.DEFAULT_ACTIVATION:j.activation),this.recurrentActivation=(0,d.getActivation)(j.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:j.recurrentActivation),this.useBias=j.useBias==null?!0:j.useBias,this.kernelInitializer=(0,c.getInitializer)(j.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=(0,c.getInitializer)(j.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=(0,c.getInitializer)(j.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=(0,a.getRegularizer)(j.kernelRegularizer),this.recurrentRegularizer=(0,a.getRegularizer)(j.recurrentRegularizer),this.biasRegularizer=(0,a.getRegularizer)(j.biasRegularizer),this.kernelConstraint=(0,i.getConstraint)(j.kernelConstraint),this.recurrentConstraint=(0,i.getConstraint)(j.recurrentConstraint),this.biasConstraint=(0,i.getConstraint)(j.biasConstraint),this.dropout=u.min([1,u.max([0,j.dropout==null?0:j.dropout])]),this.recurrentDropout=u.min([1,u.max([0,j.recurrentDropout==null?0:j.recurrentDropout])]),this.dropoutFunc=j.dropoutFunc,this.implementation=j.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(j){j=(0,p.getExactlyOneShape)(j);const D=j[j.length-1];this.kernel=this.addWeight("kernel",[D,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(j,D){return(0,r.tidy)(()=>{if(j.length!==2)throw new n.ValueError(`GRUCell expects 2 input Tensors (inputs, h, c), got ${j.length}.`);const O=D.training==null?!1:D.training;let $=j[1];j=j[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=S({ones:()=>r.onesLike(j),rate:this.dropout,training:O,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=S({ones:()=>r.onesLike($),rate:this.recurrentDropout,training:O,count:3,dropoutFunc:this.dropoutFunc}));const P=this.dropoutMask,R=this.recurrentDropoutMask;let A,z,G;0<this.dropout&&this.dropout<1&&(j=r.mul(j,P[0]));let L=m.dot(j,this.kernel.read());this.useBias&&(L=m.biasAdd(L,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&($=r.mul($,R[0]));const M=this.recurrentKernel.read(),[V,K]=r.split(M,[2*this.units,this.units],M.rank-1),W=m.dot($,V),[H,Z,Q]=r.split(L,3,L.rank-1),[te,ee]=r.split(W,2,W.rank-1);A=this.recurrentActivation.apply(r.add(H,te)),z=this.recurrentActivation.apply(r.add(Z,ee));const ne=m.dot(r.mul(z,$),K);G=this.activation.apply(r.add(Q,ne));const se=r.add(r.mul(A,$),r.mul(r.add(1,r.neg(A)),G));return[se,se]})}getConfig(){const j=super.getConfig(),D={units:this.units,activation:(0,d.serializeActivation)(this.activation),recurrentActivation:(0,d.serializeActivation)(this.recurrentActivation),useBias:this.useBias,kernelInitializer:(0,c.serializeInitializer)(this.kernelInitializer),recurrentInitializer:(0,c.serializeInitializer)(this.recurrentInitializer),biasInitializer:(0,c.serializeInitializer)(this.biasInitializer),kernelRegularizer:(0,a.serializeRegularizer)(this.kernelRegularizer),recurrentRegularizer:(0,a.serializeRegularizer)(this.recurrentRegularizer),biasRegularizer:(0,a.serializeRegularizer)(this.biasRegularizer),activityRegularizer:(0,a.serializeRegularizer)(this.activityRegularizer),kernelConstraint:(0,i.serializeConstraint)(this.kernelConstraint),recurrentConstraint:(0,i.serializeConstraint)(this.recurrentConstraint),biasConstraint:(0,i.serializeConstraint)(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},j),D)}}C.className="GRUCell",r.serialization.registerClass(C);class w extends k{constructor(j){j.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),j.cell=new C(j);super(j)}call(j,D){return(0,r.tidy)(()=>{this.cell.dropoutMask!=null&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const O=D==null?null:D.mask,$=D==null?null:D.training,P=D==null?null:D.initialState;return super.call(j,{mask:O,training:$,initialState:P})})}static fromConfig(j,D){return D.implmentation===0&&(D.implementation=1),new j(D)}}w.className="GRU",r.serialization.registerClass(w);class N extends y{constructor(j){super(j);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=j.units,(0,l.assertPositiveInteger)(this.units,"units"),this.activation=(0,d.getActivation)(j.activation===void 0?this.DEFAULT_ACTIVATION:j.activation),this.recurrentActivation=(0,d.getActivation)(j.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:j.recurrentActivation),this.useBias=j.useBias==null?!0:j.useBias,this.kernelInitializer=(0,c.getInitializer)(j.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=(0,c.getInitializer)(j.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=(0,c.getInitializer)(j.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=j.unitForgetBias,this.kernelRegularizer=(0,a.getRegularizer)(j.kernelRegularizer),this.recurrentRegularizer=(0,a.getRegularizer)(j.recurrentRegularizer),this.biasRegularizer=(0,a.getRegularizer)(j.biasRegularizer),this.kernelConstraint=(0,i.getConstraint)(j.kernelConstraint),this.recurrentConstraint=(0,i.getConstraint)(j.recurrentConstraint),this.biasConstraint=(0,i.getConstraint)(j.biasConstraint),this.dropout=u.min([1,u.max([0,j.dropout==null?0:j.dropout])]),this.recurrentDropout=u.min([1,u.max([0,j.recurrentDropout==null?0:j.recurrentDropout])]),this.dropoutFunc=j.dropoutFunc,this.implementation=j.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(j){var D;j=(0,p.getExactlyOneShape)(j);const O=j[j.length-1];this.kernel=this.addWeight("kernel",[O,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let $;if(this.useBias){if(this.unitForgetBias){const P=this.biasInitializer,R=this.units;$=new(D=class extends c.Initializer{apply(z,G){const L=P.apply([R]),M=new c.Ones().apply([R]),V=P.apply([R*2]);return m.concatAlongFirstAxis(m.concatAlongFirstAxis(L,M),V)}},D.className="CustomInit",D)}else $=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,$,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(j,D){return(0,r.tidy)(()=>{const O=D.training==null?!1:D.training;if(j.length!==3)throw new n.ValueError(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${j.length}.`);let $=j[1];const P=j[2];j=j[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=S({ones:()=>r.onesLike(j),rate:this.dropout,training:O,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=S({ones:()=>r.onesLike($),rate:this.recurrentDropout,training:O,count:4,dropoutFunc:this.dropoutFunc}));const R=this.dropoutMask,A=this.recurrentDropoutMask;let z,G,L,M;0<this.dropout&&this.dropout<1&&(j=r.mul(j,R[0]));let V=m.dot(j,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&($=r.mul($,A[0])),V=r.add(V,m.dot($,this.recurrentKernel.read())),this.useBias&&(V=m.biasAdd(V,this.bias.read()));const[K,W,H,Z]=r.split(V,4,V.rank-1);z=this.recurrentActivation.apply(K),G=this.recurrentActivation.apply(W),L=r.add(r.mul(G,P),r.mul(z,this.activation.apply(H))),M=this.recurrentActivation.apply(Z);const Q=r.mul(M,this.activation.apply(L));return[Q,Q,L]})}getConfig(){const j=super.getConfig(),D={units:this.units,activation:(0,d.serializeActivation)(this.activation),recurrentActivation:(0,d.serializeActivation)(this.recurrentActivation),useBias:this.useBias,kernelInitializer:(0,c.serializeInitializer)(this.kernelInitializer),recurrentInitializer:(0,c.serializeInitializer)(this.recurrentInitializer),biasInitializer:(0,c.serializeInitializer)(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:(0,a.serializeRegularizer)(this.kernelRegularizer),recurrentRegularizer:(0,a.serializeRegularizer)(this.recurrentRegularizer),biasRegularizer:(0,a.serializeRegularizer)(this.biasRegularizer),activityRegularizer:(0,a.serializeRegularizer)(this.activityRegularizer),kernelConstraint:(0,i.serializeConstraint)(this.kernelConstraint),recurrentConstraint:(0,i.serializeConstraint)(this.recurrentConstraint),biasConstraint:(0,i.serializeConstraint)(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},j),D)}}N.className="LSTMCell",r.serialization.registerClass(N);class T extends k{constructor(j){j.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),j.cell=new N(j);super(j)}call(j,D){return(0,r.tidy)(()=>{this.cell.dropoutMask!=null&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const O=D==null?null:D.mask,$=D==null?null:D.training,P=D==null?null:D.initialState;return super.call(j,{mask:O,training:$,initialState:P})})}static fromConfig(j,D){return D.implmentation===0&&(D.implementation=1),new j(D)}}T.className="LSTM",r.serialization.registerClass(T);class F extends y{constructor(j){super(j);this.cells=j.cells}get stateSize(){const j=[];for(const D of this.cells.slice().reverse())Array.isArray(D.stateSize)?j.push(...D.stateSize):j.push(D.stateSize);return j}call(j,D){return(0,r.tidy)(()=>{let O=j.slice(1);const $=[];for(const A of this.cells.slice().reverse())Array.isArray(A.stateSize)?$.push(O.splice(0,A.stateSize.length)):$.push(O.splice(0,1));$.reverse();const P=[];let R;for(let A=0;A<this.cells.length;++A){const z=this.cells[A];O=$[A],A===0?R=[j[0]].concat(O):R=[R[0]].concat(O),R=z.call(R,D),P.push(R.slice(1))}O=[];for(const A of P.slice().reverse())O.push(...A);return[R[0]].concat(O)})}build(j){(0,p.isArrayOfShapes)(j)&&(j=j[0]);let D;this.cells.forEach((O,$)=>{(0,f.nameScope)(`RNNCell_${$}`,()=>{O.build(j),Array.isArray(O.stateSize)?D=O.stateSize[0]:D=O.stateSize,j=[j[0],D]})}),this.built=!0}getConfig(){const j=super.getConfig(),D=P=>({className:P.getClassName(),config:P.getConfig()}),$={cells:this.cells.map(D)};return Object.assign(Object.assign({},j),$)}static fromConfig(j,D,O={}){const $=[];for(const P of D.cells)$.push((0,g.deserialize)(P,O));return new j({cells:$})}get trainableWeights(){if(!this.trainable)return[];const j=[];for(const D of this.cells)j.push(...D.trainableWeights);return j}get nonTrainableWeights(){const j=[];for(const D of this.cells)j.push(...D.nonTrainableWeights);if(!this.trainable){const D=[];for(const O of this.cells)D.push(...O.trainableWeights);return D.concat(j)}return j}getWeights(){const j=[];for(const D of this.cells)j.push(...D.weights);return(0,h.batchGetValue)(j)}setWeights(j){const D=[];for(const O of this.cells){const $=O.weights.length,P=j.splice($);for(let R=0;R<O.weights.length;++R)D.push([O.weights[R],P[R]])}(0,h.batchSetValue)(D)}}F.className="StackedRNNCells",r.serialization.registerClass(F);function S(I){const{ones:j,rate:D,training:O=!1,count:$=1,dropoutFunc:P}=I,R=()=>P!=null?P(j(),D):m.dropout(j(),D),A=()=>m.inTrainPhase(R,j,O);return!$||$<=1?r.keep(A().clone()):Array($).fill(void 0).map(A).map(G=>r.keep(G.clone()))}},{"@tensorflow/tfjs-core":"fqGP4","../activations":"l9dwY","../backend/tfjs_backend":"2pIRC","../common":"hHHWg","../constraints":"2NsZD","../engine/topology":"Fr8bO","../errors":"eAG95","../initializers":"j99Rp","../regularizers":"aeAuB","../utils/generic_utils":"gl5LS","../utils/math_utils":"1DUeI","../utils/types_utils":"fJq00","../variables":"8n5g7","./serialization":"jf3QQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9950O":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Dropout",()=>p),t.export(s,"SpatialDropout1D",()=>h),t.export(s,"Dense",()=>g),t.export(s,"Flatten",()=>v),t.export(s,"Activation",()=>_),t.export(s,"RepeatVector",()=>k),t.export(s,"Reshape",()=>y),t.export(s,"Permute",()=>x),t.export(s,"Masking",()=>b);var r=e("@tensorflow/tfjs-core"),d=e("../activations"),m=e("../backend/tfjs_backend"),f=e("../constraints"),i=e("../engine/topology"),o=e("../errors"),n=e("../initializers"),c=e("../regularizers"),a=e("../utils/generic_utils"),l=e("../utils/math_utils"),u=e("../utils/types_utils");class p extends i.Layer{constructor(w){super(w);this.rate=Math.max(Math.min(w.rate,1),0),this.noiseShape=w.noiseShape,this.seed=w.seed,this.supportsMasking=!0}getNoiseShape(w){if(this.noiseShape==null)return this.noiseShape;const N=w.shape,T=[];for(let F=0;F<this.noiseShape.length;++F)T.push(this.noiseShape[F]==null?N[F]:this.noiseShape[F]);return T}call(w,N){return(0,r.tidy)(()=>{this.invokeCallHook(w,N);const T=(0,u.getExactlyOneTensor)(w);if(0<this.rate&&this.rate<1){const F=N.training==null?!1:N.training,S=this.getNoiseShape(T);return m.inTrainPhase(()=>m.dropout(T,this.rate,S,this.seed),()=>T,F)}return w})}getConfig(){const w={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},N=super.getConfig();return Object.assign(w,N),w}dispose(){return super.dispose()}}p.className="Dropout",r.serialization.registerClass(p);class h extends p{constructor(w){super(w);this.inputSpec=[{ndim:3}]}getNoiseShape(w){const N=w.shape;return[N[0],1,N[2]]}}h.className="SpatialDropout1D",r.serialization.registerClass(h);class g extends i.Layer{constructor(w){super(w);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",w.batchInputShape==null&&w.inputShape==null&&w.inputDim!=null){let N=null;w.batchSize!=null&&(N=w.batchSize),this.batchInputShape=[N,w.inputDim]}this.units=w.units,(0,a.assertPositiveInteger)(this.units,"units"),this.activation=(0,d.getActivation)(w.activation),w.useBias!=null&&(this.useBias=w.useBias),this.kernelInitializer=(0,n.getInitializer)(w.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=(0,n.getInitializer)(w.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=(0,f.getConstraint)(w.kernelConstraint),this.biasConstraint=(0,f.getConstraint)(w.biasConstraint),this.kernelRegularizer=(0,c.getRegularizer)(w.kernelRegularizer),this.biasRegularizer=(0,c.getRegularizer)(w.biasRegularizer),this.activityRegularizer=(0,c.getRegularizer)(w.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(w){w=(0,u.getExactlyOneShape)(w);const N=w[w.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[N,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:N}}],this.built=!0}computeOutputShape(w){w=(0,u.getExactlyOneShape)(w);const N=w.slice();return N[N.length-1]=this.units,N}call(w,N){return(0,r.tidy)(()=>{this.invokeCallHook(w,N);const T=(0,u.getExactlyOneTensor)(w),F=(0,a.mapActivationToFusedKernel)(this.activation.getClassName());let S;return F!=null?S=m.dot(T,this.kernel.read(),F,this.bias?this.bias.read():null):(S=m.dot(T,this.kernel.read()),this.bias!=null&&(S=m.biasAdd(S,this.bias.read())),this.activation!=null&&(S=this.activation.apply(S))),S})}getConfig(){const w={units:this.units,activation:(0,d.serializeActivation)(this.activation),useBias:this.useBias,kernelInitializer:(0,n.serializeInitializer)(this.kernelInitializer),biasInitializer:(0,n.serializeInitializer)(this.biasInitializer),kernelRegularizer:(0,c.serializeRegularizer)(this.kernelRegularizer),biasRegularizer:(0,c.serializeRegularizer)(this.biasRegularizer),activityRegularizer:(0,c.serializeRegularizer)(this.activityRegularizer),kernelConstraint:(0,f.serializeConstraint)(this.kernelConstraint),biasConstraint:(0,f.serializeConstraint)(this.biasConstraint)},N=super.getConfig();return Object.assign(w,N),w}}g.className="Dense",r.serialization.registerClass(g);class v extends i.Layer{constructor(w){w=w||{};super(w);this.inputSpec=[{minNDim:3}],this.dataFormat=w.dataFormat}computeOutputShape(w){w=(0,u.getExactlyOneShape)(w);for(const N of w.slice(1))if(N==null)throw new o.ValueError(`The shape of the input to "Flatten" is not fully defined (got ${w.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[w[0],(0,l.arrayProd)(w,1)]}call(w,N){return(0,r.tidy)(()=>{this.invokeCallHook(w,N);let T=(0,u.getExactlyOneTensor)(w);if(this.dataFormat==="channelsFirst"&&T.rank>1){const F=[0];for(let S=2;S<T.rank;++S)F.push(S);F.push(1),T=(0,r.transpose)(T,F)}return m.batchFlatten(T)})}getConfig(){const w={};this.dataFormat!=null&&(w.dataFormat=this.dataFormat);const N=super.getConfig();return Object.assign(w,N),w}}v.className="Flatten",r.serialization.registerClass(v);class _ extends i.Layer{constructor(w){super(w);this.supportsMasking=!0,this.activation=(0,d.getActivation)(w.activation)}call(w,N){return(0,r.tidy)(()=>{this.invokeCallHook(w,N);const T=(0,u.getExactlyOneTensor)(w);return this.activation.apply(T)})}getConfig(){const w={activation:(0,d.serializeActivation)(this.activation)},N=super.getConfig();return Object.assign(w,N),w}}_.className="Activation",r.serialization.registerClass(_);class k extends i.Layer{constructor(w){super(w);this.n=w.n,this.inputSpec=[{ndim:2}]}computeOutputShape(w){return[w[0],this.n,w[1]]}call(w,N){return(0,r.tidy)(()=>(w=(0,u.getExactlyOneTensor)(w),m.repeat(w,this.n)))}getConfig(){const w={n:this.n},N=super.getConfig();return Object.assign(w,N),w}}k.className="RepeatVector",r.serialization.registerClass(k);class y extends i.Layer{constructor(w){super(w);this.targetShape=w.targetShape;for(let N=0;N<this.targetShape.length;++N)this.isUnknown(this.targetShape[N])&&(this.targetShape[N]=null)}isUnknown(w){return w<0||w==null}fixUnknownDimension(w,N){const T="Total size of new array must be unchanged.",F=N.slice();let S=1,I=null;for(let D=0;D<F.length;++D){const O=F[D];if(this.isUnknown(O))if(I===null)I=D;else throw new o.ValueError("Can only specifiy one unknown dimension.");else S*=O}const j=(0,l.arrayProd)(w);if(I!==null){if(S===0||j%S!=0)throw new o.ValueError(T);F[I]=j/S}else if(j!==S)throw new o.ValueError(T);return F}computeOutputShape(w){let N=!1;for(let T=0;T<w.length;++T)if(this.isUnknown(w[T])){N=!0;break}return N?w.slice(0,1).concat(this.targetShape):w.slice(0,1).concat(this.fixUnknownDimension(w.slice(1),this.targetShape))}call(w,N){return(0,r.tidy)(()=>{this.invokeCallHook(w,N);const T=(0,u.getExactlyOneTensor)(w),F=T.shape,S=F.slice(0,1).concat(this.fixUnknownDimension(F.slice(1),this.targetShape));return(0,r.reshape)(T,S)})}getConfig(){const w={targetShape:this.targetShape},N=super.getConfig();return Object.assign(w,N),w}}y.className="Reshape",r.serialization.registerClass(y);class x extends i.Layer{constructor(w){super(w);if(w.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(w.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${w.dims} instead.`);const N=(0,l.range)(1,w.dims.length+1);if(!r.util.arraysEqual(w.dims.slice().sort(),N))throw new Error("Invalid permutation `dims`: "+JSON.stringify(w.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=w.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new i.InputSpec({ndim:this.dims.length+1})]}computeOutputShape(w){w=(0,u.getExactlyOneShape)(w);const N=w.slice();return this.dims.forEach((T,F)=>{N[F+1]=w[T]}),N}call(w,N){return(0,r.transpose)((0,u.getExactlyOneTensor)(w),this.dimsIncludingBatch)}getConfig(){const w={dims:this.dims},N=super.getConfig();return Object.assign(w,N),w}}x.className="Permute",r.serialization.registerClass(x);class b extends i.Layer{constructor(w){super(w??{});this.supportsMasking=!0,w!=null?this.maskValue=w.maskValue==null?0:w.maskValue:this.maskValue=0}computeOutputShape(w){return w}getConfig(){const w=super.getConfig(),N={maskValue:this.maskValue};return Object.assign(N,w),N}computeMask(w,N){const T=(0,u.getExactlyOneTensor)(w),F=-1;return(0,r.any)((0,r.notEqual)(T,this.maskValue),F)}call(w,N){return(0,r.tidy)(()=>{this.invokeCallHook(w,N);const T=(0,u.getExactlyOneTensor)(w),F=-1,S=!0,I=(0,r.any)((0,r.notEqual)(T,this.maskValue),F,S);return(0,r.mul)(T,(0,r.cast)(I,T.dtype))})}}b.className="Masking",r.serialization.registerClass(b)},{"@tensorflow/tfjs-core":"fqGP4","../activations":"l9dwY","../backend/tfjs_backend":"2pIRC","../constraints":"2NsZD","../engine/topology":"Fr8bO","../errors":"eAG95","../initializers":"j99Rp","../regularizers":"aeAuB","../utils/generic_utils":"gl5LS","../utils/math_utils":"1DUeI","../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lnFLI:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Embedding",()=>l);var r=e("@tensorflow/tfjs-core"),d=e("../backend/tfjs_backend"),m=e("../constraints"),f=e("../engine/topology"),i=e("../errors"),o=e("../initializers"),n=e("../regularizers"),c=e("../utils/generic_utils"),a=e("../utils/types_utils");class l extends f.Layer{constructor(p){super(p);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",p.batchInputShape==null&&p.inputShape==null){let h=null;p.batchSize!=null&&(h=p.batchSize),p.inputLength==null?this.batchInputShape=[h,null]:this.batchInputShape=[h].concat(c.toList(p.inputLength))}this.inputDim=p.inputDim,c.assertPositiveInteger(this.inputDim,"inputDim"),this.outputDim=p.outputDim,c.assertPositiveInteger(this.outputDim,"outputDim"),this.embeddingsInitializer=(0,o.getInitializer)(p.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=(0,n.getRegularizer)(p.embeddingsRegularizer),this.activityRegularizer=(0,n.getRegularizer)(p.activityRegularizer),this.embeddingsConstraint=(0,m.getConstraint)(p.embeddingsConstraint),this.maskZero=p.maskZero,this.supportsMasking=p.maskZero,this.inputLength=p.inputLength}build(p){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(p){}computeMask(p,h){return(0,r.tidy)(()=>this.maskZero?(p=(0,a.getExactlyOneTensor)(p),(0,r.notEqual)(p,(0,r.zerosLike)(p))):null)}computeOutputShape(p){if(p=(0,a.getExactlyOneShape)(p),this.inputLength==null)return[...p,this.outputDim];const h=c.toList(this.inputLength);if(h.length!==p.length-1)throw new i.ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${p}`);{let g=0;for(let v=0;v<h.length;++v){const _=h[v],k=p[v+1];if(_!=null&&k!=null&&_!==k)throw new i.ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${p}`);_==null&&(h[g]=k),g++}}return[p[0],...h,this.outputDim]}call(p,h){return(0,r.tidy)(()=>{this.invokeCallHook(p,h);let g=(0,a.getExactlyOneTensor)(p);g.dtype!=="int32"&&(g=d.cast(g,"int32"));const v=d.gather(this.embeddings.read(),(0,r.reshape)(g,[g.size]));return(0,r.reshape)(v,(0,a.getExactlyOneShape)(this.computeOutputShape(g.shape)))})}getConfig(){const p={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:(0,o.serializeInitializer)(this.embeddingsInitializer),embeddingsRegularizer:(0,n.serializeRegularizer)(this.embeddingsRegularizer),activityRegularizer:(0,n.serializeRegularizer)(this.activityRegularizer),embeddingsConstraint:(0,m.serializeConstraint)(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},h=super.getConfig();return Object.assign(p,h),p}}l.className="Embedding",r.serialization.registerClass(l)},{"@tensorflow/tfjs-core":"fqGP4","../backend/tfjs_backend":"2pIRC","../constraints":"2NsZD","../engine/topology":"Fr8bO","../errors":"eAG95","../initializers":"j99Rp","../regularizers":"aeAuB","../utils/generic_utils":"gl5LS","../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"850W9":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Merge",()=>a),t.export(s,"Add",()=>l),t.export(s,"add",()=>u),t.export(s,"Multiply",()=>p),t.export(s,"multiply",()=>h),t.export(s,"Average",()=>g),t.export(s,"average",()=>v),t.export(s,"Maximum",()=>_),t.export(s,"maximum",()=>k),t.export(s,"Minimum",()=>y),t.export(s,"minimum",()=>x),t.export(s,"Concatenate",()=>b),t.export(s,"concatenate",()=>C),t.export(s,"Dot",()=>T);var r=e("@tensorflow/tfjs-core"),d=e("../backend/tfjs_backend"),m=e("../engine/topology"),f=e("../errors"),i=e("../losses"),o=e("../utils/generic_utils"),n=e("../utils/math_utils"),c=e("../utils/types_utils");class a extends m.Layer{constructor(S){super(S||{});this.supportsMasking=!0}mergeFunction(S){throw new f.NotImplementedError}computeElementwiseOpOutputShape(S,I){if(S==null||I==null)return null;if(S.length<I.length)return this.computeElementwiseOpOutputShape(I,S);if(I.length===0)return S;const j=S.slice(0,S.length-I.length);for(let D=0;D<I.length;++D){const O=S[S.length-I.length+D],$=I[D];if(O==null||$==null||O<0||$<0)j.push(null);else if(O===1)j.push($);else if($===1)j.push(O);else{if(O!==$)throw new f.ValueError("Operands could not be broadcast together with shapes "+JSON.stringify(S)+" "+JSON.stringify(I));j.push(O)}}return j}build(S){if(Array.isArray(S)&&!Array.isArray(S[0])&&(S=[(0,c.getExactlyOneShape)(S)]),S.length<2)throw new f.ValueError(`A merge layer should be called on an Array of at least 2 inputs. Got ${S.length} input(s).`);let I=[];for(const O of S)O!=null&&O[0]!==null&&I.push(O[0]);if(I=o.unique(I),I.length>1)throw new f.ValueError(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(S)}.`);let j=S[0]==null?null:S[0].slice(1);for(let O=1;O<S.length;++O){const $=S[O]==null?null:S[O].slice(1);j=this.computeElementwiseOpOutputShape(j,$)}const D=S.map(O=>O.length);S.indexOf(null)===-1&&o.unique(D).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(S,I){return(0,r.tidy)(()=>{if(this.reshapeRequired){const j=[],D=S.map(O=>O.rank);if(D.indexOf(null)===-1){const O=n.max(D);for(let $ of S){const P=$.rank;for(let R=0;R<O-P;++R)$=d.expandDims($,1);j.push($)}return this.mergeFunction(j)}else{let O=!1;for(const R of S){const A=R.rank;if(A==null){const z=R.shape,G=z[0],L=z.slice(1).concat([G]);let M=r.reshape(R,[G].concat(n.arrayProd(z.slice(1))));M=r.transpose(M,[1,0]),M=r.reshape(M,L),j.push(M),O=!0}else if(A>1){const z=n.range(1,A).concat([0]);j.push(r.transpose(R,z)),O=!0}else j.push(R)}let $=this.mergeFunction(j);const P=$.rank;if(O){if(P==null){const R=$.shape,A=R.length,z=R[A-1],G=[z].concat(R.slice(0,R.length-1));$=r.reshape(r.transpose(r.reshape($,[-1,z]),[1,0]),G)}else if(P>1){const R=[P-1].concat(n.range(0,P-1));$=r.transpose($,R)}}return $}}else return this.mergeFunction(S)})}computeOutputShape(S){let I;S[0]==null?I=null:I=S[0].slice(1);for(let D=1;D<S.length;++D){const O=S[D]==null?null:S[D].slice(1);I=this.computeElementwiseOpOutputShape(I,O)}let j=[];for(const D of S)D!=null&&D[0]!==null&&j.push(D[0]);return j=o.unique(j),j.length===1?I=j.concat(I):I=[null].concat(I),I}computeMask(S,I){return r.tidy(()=>{if(I==null)return null;if(!Array.isArray(I))throw new f.ValueError("`mask` should be an Array");if(!Array.isArray(S))throw new f.ValueError("`inputs` should be an Array");if(I.length!==S.length)throw new f.ValueError(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${S.length} vs ${I.length})`);if(I.every(D=>D==null))return null;I=I.map(D=>D==null?D:r.expandDims(D,0));let j=I[0];for(let D=1;D<I.length-1;++D)j=r.logicalAnd(j,I[D]);return j})}}class l extends a{constructor(S){super(S)}mergeFunction(S){return(0,r.tidy)(()=>{let I=S[0].clone();for(let j=1;j<S.length;++j)I=r.add(I,S[j]);return I})}}l.className="Add",r.serialization.registerClass(l);function u(F){return Array.isArray(F)?new l({}).apply(F):new l(F)}class p extends a{constructor(S){super(S)}mergeFunction(S){return(0,r.tidy)(()=>{let I=S[0].clone();for(let j=1;j<S.length;++j)I=r.mul(I,S[j]);return I})}}p.className="Multiply",r.serialization.registerClass(p);function h(F){return Array.isArray(F)?new p({}).apply(F):new p(F)}class g extends a{constructor(S){super(S)}mergeFunction(S){return(0,r.tidy)(()=>{let I=S[0].clone();for(let j=1;j<S.length;++j)I=r.add(I,S[j]);return r.mul(1/S.length,I)})}}g.className="Average",r.serialization.registerClass(g);function v(F){return Array.isArray(F)?new g({}).apply(F):new g(F)}class _ extends a{constructor(S){super(S)}mergeFunction(S){return(0,r.tidy)(()=>{let I=S[0];for(let j=1;j<S.length;++j)I=r.maximum(I,S[j]);return I})}}_.className="Maximum",r.serialization.registerClass(_);function k(F){return Array.isArray(F)?new _({}).apply(F):new _(F)}class y extends a{constructor(S){super(S)}mergeFunction(S){return(0,r.tidy)(()=>{let I=S[0];for(let j=1;j<S.length;++j)I=r.minimum(I,S[j]);return I})}}y.className="Minimum",r.serialization.registerClass(y);function x(F){return Array.isArray(F)?new y({}).apply(F):new y(F)}class b extends a{constructor(S){super(S);this.DEFAULT_AXIS=-1,S==null&&(S={}),this.axis=S.axis==null?this.DEFAULT_AXIS:S.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(S){if(!(Array.isArray(S)&&Array.isArray(S[0]))||S.length===1)throw new f.ValueError("A `Concatenate` layer should be called on a list of at least 2 inputs");let I=!0;for(const D of S)if(D!=null){I=!1;break}if(I)return;const j=[];for(let D=0;D<S.length;++D){const O=S[D].slice();O.splice(this.axis,1);let $=!1;for(const P of j)if(r.util.arraysEqual(P,O)){$=!0;break}$||j.push(O)}if(j.length>1)throw new f.ValueError("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(S))}mergeFunction(S){return(0,r.tidy)(()=>d.concatenate(S,this.axis))}computeOutputShape(S){if(!(Array.isArray(S)&&Array.isArray(S[0])))throw new f.ValueError("A `Concatenate` layer should be called on a list of inputs.");const I=S,j=I[0].slice(),D=this.axis<0?j.length+this.axis:this.axis;for(const O of I.slice(1)){if(j[D]==null||O[D]==null){j[D]=null;break}j[D]+=O[D]}return j}computeMask(S,I){if(I==null)return null;if(!Array.isArray(I))throw new f.ValueError("`mask` should be an array for Concatenate");if(!Array.isArray(S))throw new f.ValueError("`inputs` should be an array for Concatenate");if(I.length!==S.length)throw new f.ValueError(`Mismatch in the length of mask (${I.length}) and the legnth of inputs (${S.length})`);return r.tidy(()=>{let j=!0;if(I.forEach($=>{if($!=null){j=!1;return}}),j)return null;const D=[];for(let $=0;$<S.length;++$)I[$]==null?D.push(r.cast(r.onesLike(S[$]),"bool")):I[$].rank<S[$].rank?D.push(r.expandDims(I[$],-1)):D.push(I[$]);const O=r.concat(D,this.axis);return r.all(O,-1,!1)})}getConfig(){const S={axis:this.axis},I=super.getConfig();return Object.assign(S,I),S}}b.className="Concatenate",r.serialization.registerClass(b);function C(F){return Array.isArray(F)?new b({}).apply(F):new b(F)}function w(F,S){for(;F<0;)F+=S;return F}function N(F,S,I){if(F.shape.length>3||S.shape.length>3)throw new f.NotImplementedError("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.util.assert(F.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${F.shape.length}`),r.util.assert(F.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${S.shape.length}`),typeof I=="number"&&(I=[I,I]),F.dtype==="complex64"||S.dtype==="complex64")throw new f.NotImplementedError("batchDot is not implemented for complex64-type Tensors yet.");const j=F.shape.length,D=S.shape.length;I==null&&(I=[j-1,D-2]);const O=I;return r.tidy(()=>{let $;if(j>D){$=j-D;const R=[];for(let A=0;A<$;++A)R.push(1);S=r.reshape(S,S.shape.concat(R))}else if(D>j){$=D-j;const R=[];for(let A=0;A<$;++A)R.push(1);F=r.reshape(F,F.shape.concat(R))}else $=0;let P;if(F.shape.length===2&&S.shape.length===2)O[0]===O[1]?P=r.sum(r.mul(F,S),O[0]):P=r.sum(r.mul(r.transpose(F,[1,0]),S),O[1]);else{const R=O[0]!==F.shape.length-1,A=O[1]===S.shape.length-1;P=r.matMul(F,S,R,A)}if($>0){let R;j>D?R=j+D-3:R=j-1;const A=[];for(let z=R;z<R+$;++z)A.push(z);P=r.squeeze(P,A)}return P.shape.length===1&&(P=r.expandDims(P,1)),P})}class T extends a{constructor(S){super(S);this.axes=S.axes,this.normalize=S.normalize==null?!1:S.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(S){r.util.assert(Array.isArray(S)&&S.length===2&&Array.isArray(S[0])&&Array.isArray(S[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const I=S[0],j=S[1];if(I.length>3||j.length>3)throw new f.NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const D=this.interpretAxes(I,j);if(I[D[0]]!==j[D[1]])throw new f.ValueError(`Dimension incompatibility: ${I[D[0]]} !== ${j[D[1]]}`)}mergeFunction(S){if(S.length!==2)throw new f.ValueError(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${S.length} input(s).`);let I=S[0],j=S[1],D;return Array.isArray(this.axes)?D=this.axes.map((O,$)=>w(O,S[$].shape.length)):D=[w(this.axes,I.shape.length),w(this.axes,j.shape.length)],this.normalize&&(I=(0,i.l2Normalize)(I,D[0]),j=(0,i.l2Normalize)(j,D[1])),N(I,j,D)}interpretAxes(S,I){let j;return Array.isArray(this.axes)?j=this.axes:j=[w(this.axes,S.length),w(this.axes,I.length)],j}computeOutputShape(S){r.util.assert(Array.isArray(S)&&S.length===2&&Array.isArray(S[0])&&Array.isArray(S[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const I=S[0].slice(),j=S[1].slice();if(I.length>3||j.length>3)throw new f.NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const D=this.interpretAxes(I,j);I.splice(D[0],1),j.splice(D[1],1),j.splice(0,1);const O=I.concat(j);return O.length===1&&O.push(1),O}computeMask(S,I){return null}getConfig(){const S={axes:this.axes,normalize:this.normalize},I=super.getConfig();return Object.assign(S,I),S}}T.className="Dot",r.serialization.registerClass(T)},{"@tensorflow/tfjs-core":"fqGP4","../backend/tfjs_backend":"2pIRC","../engine/topology":"Fr8bO","../errors":"eAG95","../losses":"1qbI1","../utils/generic_utils":"gl5LS","../utils/math_utils":"1DUeI","../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d0FUe:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"GaussianNoise",()=>i),t.export(s,"GaussianDropout",()=>o),t.export(s,"AlphaDropout",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../backend/tfjs_backend"),m=e("../engine/topology"),f=e("../utils/types_utils");class i extends m.Layer{constructor(a){super(a);this.supportsMasking=!0,this.stddev=a.stddev}computeOutputShape(a){return a}getConfig(){const a=super.getConfig(),l={stddev:this.stddev};return Object.assign(l,a),l}call(a,l){return(0,r.tidy)(()=>{this.invokeCallHook(a,l);const u=(0,f.getExactlyOneTensor)(a),p=()=>(0,r.add)(d.randomNormal(u.shape,0,this.stddev),u);return d.inTrainPhase(p,()=>u,l.training||!1)})}}i.className="GaussianNoise",r.serialization.registerClass(i);class o extends m.Layer{constructor(a){super(a);this.supportsMasking=!0,this.rate=a.rate}computeOutputShape(a){return a}getConfig(){const a=super.getConfig(),l={rate:this.rate};return Object.assign(l,a),l}call(a,l){return(0,r.tidy)(()=>{this.invokeCallHook(a,l);const u=(0,f.getExactlyOneTensor)(a);if(this.rate>0&&this.rate<1){const p=()=>{const h=Math.sqrt(this.rate/(1-this.rate));return(0,r.mul)(u,d.randomNormal(u.shape,1,h))};return d.inTrainPhase(p,()=>u,l.training||!1)}return u})}}o.className="GaussianDropout",r.serialization.registerClass(o);class n extends m.Layer{constructor(a){super(a);this.supportsMasking=!0,this.rate=a.rate,this.noiseShape=a.noiseShape}_getNoiseShape(a){return this.noiseShape||(0,f.getExactlyOneTensor)(a).shape}computeOutputShape(a){return a}getConfig(){const a=super.getConfig(),l={rate:this.rate};return Object.assign(l,a),l}call(a,l){return(0,r.tidy)(()=>{if(this.rate<1&&this.rate>0){const u=this._getNoiseShape(a),p=()=>{const h=(0,f.getExactlyOneTensor)(a),g=1.6732632423543772,v=1.0507009873554805,_=-g*v;let k=(0,r.greaterEqual)((0,r.randomUniform)(u),this.rate);k=d.cast(k,"float32");const y=((1-this.rate)*(1+this.rate*_**2))**-.5,x=-y*_*this.rate,b=(0,r.add)((0,r.mul)(h,k),(0,r.mul)((0,r.add)(k,-1),_));return(0,r.add)((0,r.mul)(b,y),x)};return d.inTrainPhase(p,()=>(0,f.getExactlyOneTensor)(a),l.training||!1)}return a})}}n.className="AlphaDropout",r.serialization.registerClass(n)},{"@tensorflow/tfjs-core":"fqGP4","../backend/tfjs_backend":"2pIRC","../engine/topology":"Fr8bO","../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3t16R":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchNormalization",()=>l),t.export(s,"normalizeBatchInTraining",()=>h),t.export(s,"BatchNormalization",()=>g),t.export(s,"LayerNormalization",()=>v);var r=e("@tensorflow/tfjs-core"),d=e("../constraints"),m=e("../engine/topology"),f=e("../errors"),i=e("../initializers"),o=e("../regularizers"),n=e("../utils/generic_utils"),c=e("../utils/math_utils"),a=e("../utils/types_utils");function l(_,k,y,x,b,C=.001){let w;if(_.rank===2)w=r.batchNorm2d(_,k,y,x,b,C);else if(_.rank===3)w=r.batchNorm3d(_,k,y,x,b,C);else if(_.rank===4)w=r.batchNorm4d(_,k,y,x,b,C);else throw new f.NotImplementedError(`batchNormalization is not implemented for array of rank ${_.rank} yet`);return w}function u(_,k,y,x,b=.001){return(0,r.tidy)(()=>{const C=r.moments(_,x),w=C.mean,N=C.variance;return[l(_,w,N,y,k,b),w,N]})}function p(_,k,y,x,b=.001){return(0,r.tidy)(()=>{const C=r.moments(_,x),w=C.mean,N=C.variance,T=[];for(const O of c.range(0,_.rank))x.indexOf(O)!==-1?T.push(1):T.push(_.shape[O]);const F=(0,r.reshape)(w,T),S=(0,r.reshape)(N,T),I=k==null?null:(0,r.reshape)(k,T),j=y==null?null:(0,r.reshape)(y,T);return[l(_,F,S,j,I,b),w,N]})}function h(_,k,y,x,b=.001){return r.util.arraysEqual(x.slice().sort(),c.range(0,_.rank-1))?u(_,k,y,x,b):p(_,k,y,x,b)}class g extends m.Layer{constructor(k){k==null&&(k={});super(k);this.supportsMasking=!0,this.axis=k.axis==null?-1:k.axis,this.momentum=k.momentum==null?.99:k.momentum,this.epsilon=k.epsilon==null?.001:k.epsilon,this.center=k.center==null?!0:k.center,this.scale=k.scale==null?!0:k.scale,this.betaInitializer=(0,i.getInitializer)(k.betaInitializer||"zeros"),this.gammaInitializer=(0,i.getInitializer)(k.gammaInitializer||"ones"),this.movingMeanInitializer=(0,i.getInitializer)(k.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=(0,i.getInitializer)(k.movingVarianceInitializer||"ones"),this.betaConstraint=(0,d.getConstraint)(k.betaConstraint),this.gammaConstraint=(0,d.getConstraint)(k.gammaConstraint),this.betaRegularizer=(0,o.getRegularizer)(k.betaRegularizer),this.gammaRegularizer=(0,o.getRegularizer)(k.gammaRegularizer)}build(k){k=(0,a.getExactlyOneShape)(k);const y=this.axis>=0?this.axis:this.axis+k.length,x=k[y];if(x==null)throw new f.ValueError(`Axis ${y} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(k)}.`);this.inputSpec=[new m.InputSpec({ndim:k.length,axes:{[y]:x}})];const b=[x];this.scale&&(this.gamma=this.addWeight("gamma",b,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",b,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",b,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",b,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(k,y){return(0,r.tidy)(()=>{const x=y.training==null?!1:y.training,b=(0,a.getExactlyOneTensor)(k),C=b.shape,w=C.length,N=c.range(0,w),T=this.axis>=0?this.axis:this.axis+w;N.splice(T,1);const F=n.pyListRepeat(1,w);F[T]=C[T];const S=N.slice();S.sort();const I=!r.util.arraysEqual(S,c.range(0,w).slice(0,w-1)),j=()=>{if(I){const A=(0,r.reshape)(this.movingMean.read(),F),z=(0,r.reshape)(this.movingVariance.read(),F),G=this.center?(0,r.reshape)(this.beta.read(),F):null,L=this.scale?(0,r.reshape)(this.gamma.read(),F):null;return l(b,A,z,G,L,this.epsilon)}else return l(b,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!x)return j();const[D,O,$]=h(b,this.gamma.read(),this.beta.read(),N,this.epsilon),P=(A,z,G)=>{r.tidy(()=>{const L=1-G,M=A.read(),V=r.mul(r.sub(M,z),L);A.write(r.sub(M,V))})};return(()=>{P(this.movingMean,O,this.momentum),P(this.movingVariance,$,this.momentum)})(),D})}getConfig(){const k={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,i.serializeInitializer)(this.betaInitializer),gammaInitializer:(0,i.serializeInitializer)(this.gammaInitializer),movingMeanInitializer:(0,i.serializeInitializer)(this.movingMeanInitializer),movingVarianceInitializer:(0,i.serializeInitializer)(this.movingVarianceInitializer),betaRegularizer:(0,o.serializeRegularizer)(this.betaRegularizer),gammaRegularizer:(0,o.serializeRegularizer)(this.gammaRegularizer),betaConstraint:(0,d.serializeConstraint)(this.betaConstraint),gammaConstraint:(0,d.serializeConstraint)(this.gammaConstraint)},y=super.getConfig();return Object.assign(k,y),k}}g.className="BatchNormalization",r.serialization.registerClass(g);class v extends m.Layer{constructor(k){k==null&&(k={});super(k);if(this.axis=k.axis==null?-1:k.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const y of this.axis)if(!Number.isInteger(y))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=k.epsilon==null?.001:k.epsilon,this.center=k.center==null?!0:k.center,this.scale=k.scale==null?!0:k.scale,this.betaInitializer=(0,i.getInitializer)(k.betaInitializer||"zeros"),this.gammaInitializer=(0,i.getInitializer)(k.gammaInitializer||"ones"),this.betaRegularizer=(0,o.getRegularizer)(k.betaRegularizer),this.gammaRegularizer=(0,o.getRegularizer)(k.gammaRegularizer),this.supportsMasking=!0}build(k){k=(0,a.getExactlyOneShape)(k);const y=k.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let C=0;C<this.axis.length;++C)this.axis[C]<0&&(this.axis[C]+=y);for(const C of this.axis)if(C<0||C>=y)throw new Error(`Invalid axis: ${C}`);if(this.axis.length!==n.unique(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const x=this.axis.map(C=>k[C]),b=!0;this.scale?this.gamma=this.addWeight("gamma",x,"float32",this.gammaInitializer,this.gammaRegularizer,b):this.gamma=null,this.center?this.beta=this.addWeight("beta",x,"float32",this.betaInitializer,this.betaRegularizer,b):this.beta=null,this.built=!0}call(k,y){const x=(0,a.getExactlyOneTensor)(k),b=x.shape,C=b.length;return(0,r.tidy)(()=>{const w=!0;let{mean:N,variance:T}=(0,r.moments)(x,this.axis,w);const F=n.pyListRepeat(1,C);for(const $ of this.axis)F[$]=b[$];const S=$=>$!=null&&$.shape.length!==C?r.reshape($,F):$;let I=this.scale?S(this.gamma.read()):null,j=this.center?S(this.beta.read()):null;const D=[],O=[];for(let $=0;$<C;++$)this.axis.indexOf($)!==-1?(D.push(b[$]),O.push(1)):(D.push(1),O.push(b[$]));return N=r.tile(N,D),T=r.tile(T,D),I!=null&&(I=r.tile(I,O)),j!=null&&(j=r.tile(j,O)),l(x,N,T,j,I,this.epsilon)})}getConfig(){const k={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,i.serializeInitializer)(this.betaInitializer),gammaInitializer:(0,i.serializeInitializer)(this.gammaInitializer),betaRegularizer:(0,o.serializeRegularizer)(this.betaRegularizer),gammaRegularizer:(0,o.serializeRegularizer)(this.gammaRegularizer)},y=super.getConfig();return Object.assign(k,y),k}}v.className="LayerNormalization",r.serialization.registerClass(v)},{"@tensorflow/tfjs-core":"fqGP4","../constraints":"2NsZD","../engine/topology":"Fr8bO","../errors":"eAG95","../initializers":"j99Rp","../regularizers":"aeAuB","../utils/generic_utils":"gl5LS","../utils/math_utils":"1DUeI","../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eYU3J:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"temporalPadding",()=>o),t.export(s,"spatial2dPadding",()=>n),t.export(s,"ZeroPadding2D",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("../backend/common"),m=e("../engine/topology"),f=e("../errors"),i=e("../utils/types_utils");function o(a,l){return(0,r.tidy)(()=>{if(a.rank!==3)throw new f.ValueError(`temporalPadding expects input tensor to be 3-D, but received a ${a.rank}-D tensor.`);if(l==null&&(l=[1,1]),l.length!==2)throw new f.ValueError(`temporalPadding expects input padding pattern to be a length-2 array, but received a length-${l.length} array.`);const u=[[0,0],l,[0,0]];return r.pad(a,u)})}function n(a,l,u){return(0,r.tidy)(()=>{if(a.rank!==4)throw new f.ValueError(`temporalPadding expects input tensor to be 4-D, but received a ${a.rank}-D tensor.`);if(l==null&&(l=[[1,1],[1,1]]),l.length!==2||l[0].length!==2||l[1].length!==2)throw new f.ValueError("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(u==null&&(u=(0,d.imageDataFormat)()),u!=="channelsLast"&&u!=="channelsFirst")throw new f.ValueError(`Unknown data format: ${u}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let p;return u==="channelsFirst"?p=[[0,0],[0,0],l[0],l[1]]:p=[[0,0],l[0],l[1],[0,0]],r.pad(a,p)})}class c extends m.Layer{constructor(l){l==null&&(l={});super(l);if(this.dataFormat=l.dataFormat==null?(0,d.imageDataFormat)():l.dataFormat,l.padding==null)this.padding=[[1,1],[1,1]];else if(typeof l.padding=="number")this.padding=[[l.padding,l.padding],[l.padding,l.padding]];else{if(l.padding=l.padding,l.padding.length!==2)throw new f.ValueError(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${l.padding.length} array.`);let u,p;if(typeof l.padding[0]=="number")u=[l.padding[0],l.padding[0]],p=[l.padding[1],l.padding[1]];else{if(l.padding=l.padding,l.padding[0].length!==2)throw new f.ValueError(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${l.padding[0].length} array.`);if(u=l.padding[0],l.padding[1].length!==2)throw new f.ValueError(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${l.padding[1].length} array.`);p=l.padding[1]}this.padding=[u,p]}this.inputSpec=[new m.InputSpec({ndim:4})]}computeOutputShape(l){l=(0,i.getExactlyOneShape)(l);let u,p;return this.dataFormat==="channelsFirst"?(l[2]!=null&&l[2]>=0?u=l[2]+this.padding[0][0]+this.padding[0][1]:u=null,l[3]!=null&&l[3]>=0?p=l[3]+this.padding[1][0]+this.padding[1][1]:p=null,[l[0],l[1],u,p]):(l[1]!=null&&l[1]>=0?u=l[1]+this.padding[0][0]+this.padding[0][1]:u=null,l[2]!=null&&l[2]>=0?p=l[2]+this.padding[1][0]+this.padding[1][1]:p=null,[l[0],u,p,l[3]])}call(l,u){return(0,r.tidy)(()=>n((0,i.getExactlyOneTensor)(l),this.padding,this.dataFormat))}getConfig(){const l={padding:this.padding,dataFormat:this.dataFormat},u=super.getConfig();return Object.assign(l,u),l}}c.className="ZeroPadding2D",r.serialization.registerClass(c)},{"@tensorflow/tfjs-core":"fqGP4","../backend/common":"7Ax0n","../engine/topology":"Fr8bO","../errors":"eAG95","../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gsLvQ:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pool2d",()=>u),t.export(s,"pool3d",()=>p),t.export(s,"Pooling1D",()=>h),t.export(s,"MaxPooling1D",()=>g),t.export(s,"AveragePooling1D",()=>v),t.export(s,"Pooling2D",()=>_),t.export(s,"MaxPooling2D",()=>k),t.export(s,"AveragePooling2D",()=>y),t.export(s,"Pooling3D",()=>x),t.export(s,"MaxPooling3D",()=>b),t.export(s,"AveragePooling3D",()=>C),t.export(s,"GlobalPooling1D",()=>w),t.export(s,"GlobalAveragePooling1D",()=>N),t.export(s,"GlobalMaxPooling1D",()=>T),t.export(s,"GlobalPooling2D",()=>F),t.export(s,"GlobalAveragePooling2D",()=>S),t.export(s,"GlobalMaxPooling2D",()=>I);var r=e("@tensorflow/tfjs-core"),d=e("../backend/common"),m=e("../backend/tfjs_backend"),f=e("../common"),i=e("../engine/topology"),o=e("../errors"),n=e("../utils/conv_utils"),c=e("../utils/generic_utils"),a=e("../utils/types_utils"),l=e("./convolutional");function u(j,D,O,$,P,R){return(0,r.tidy)(()=>{(0,f.checkDataFormat)(P),(0,f.checkPoolMode)(R),(0,f.checkPaddingMode)($),O==null&&(O=[1,1]),$==null&&($="valid"),P==null&&(P=(0,d.imageDataFormat)()),R==null&&(R="max"),j=(0,l.preprocessConv2DInput)(j,P);let A;const z=$==="same"?"same":"valid";return R==="max"?A=r.maxPool(j,D,O,z):A=r.avgPool(j,D,O,z),P==="channelsFirst"&&(A=r.transpose(A,[0,3,1,2])),A})}function p(j,D,O,$,P,R){return(0,r.tidy)(()=>{(0,f.checkDataFormat)(P),(0,f.checkPoolMode)(R),(0,f.checkPaddingMode)($),O==null&&(O=[1,1,1]),$==null&&($="valid"),P==null&&(P=(0,d.imageDataFormat)()),R==null&&(R="max"),j=(0,l.preprocessConv3DInput)(j,P);let A;const z=$==="same"?"same":"valid";return R==="max"?A=r.maxPool3d(j,D,O,z):A=r.avgPool3d(j,D,O,z),P==="channelsFirst"&&(A=r.transpose(A,[0,4,1,2,3])),A})}class h extends i.Layer{constructor(D){D.poolSize==null&&(D.poolSize=2);super(D);if(typeof D.poolSize=="number")this.poolSize=[D.poolSize];else if(Array.isArray(D.poolSize)&&D.poolSize.length===1&&typeof D.poolSize[0]=="number")this.poolSize=D.poolSize;else throw new o.ValueError(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(D.poolSize)}`);if((0,c.assertPositiveInteger)(this.poolSize,"poolSize"),D.strides==null)this.strides=this.poolSize;else if(typeof D.strides=="number")this.strides=[D.strides];else if(Array.isArray(D.strides)&&D.strides.length===1&&typeof D.strides[0]=="number")this.strides=D.strides;else throw new o.ValueError(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(D.strides)}`);(0,c.assertPositiveInteger)(this.strides,"strides"),this.padding=D.padding==null?"valid":D.padding,(0,f.checkPaddingMode)(this.padding),this.inputSpec=[new i.InputSpec({ndim:3})]}computeOutputShape(D){D=(0,a.getExactlyOneShape)(D);const O=(0,n.convOutputLength)(D[1],this.poolSize[0],this.padding,this.strides[0]);return[D[0],O,D[2]]}call(D,O){return(0,r.tidy)(()=>{this.invokeCallHook(D,O),D=m.expandDims((0,a.getExactlyOneTensor)(D),2);const $=this.poolingFunction((0,a.getExactlyOneTensor)(D),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.squeeze($,[2])})}getConfig(){const D={poolSize:this.poolSize,padding:this.padding,strides:this.strides},O=super.getConfig();return Object.assign(D,O),D}}class g extends h{constructor(D){super(D)}poolingFunction(D,O,$,P,R){return(0,f.checkDataFormat)(R),(0,f.checkPaddingMode)(P),u(D,O,$,P,R,"max")}}g.className="MaxPooling1D",r.serialization.registerClass(g);class v extends h{constructor(D){super(D)}poolingFunction(D,O,$,P,R){return(0,f.checkDataFormat)(R),(0,f.checkPaddingMode)(P),u(D,O,$,P,R,"avg")}}v.className="AveragePooling1D",r.serialization.registerClass(v);class _ extends i.Layer{constructor(D){D.poolSize==null&&(D.poolSize=[2,2]);super(D);if(this.poolSize=Array.isArray(D.poolSize)?D.poolSize:[D.poolSize,D.poolSize],D.strides==null)this.strides=this.poolSize;else if(Array.isArray(D.strides)){if(D.strides.length!==2)throw new o.ValueError(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${D.strides.length}.`);this.strides=D.strides}else this.strides=[D.strides,D.strides];(0,c.assertPositiveInteger)(this.poolSize,"poolSize"),(0,c.assertPositiveInteger)(this.strides,"strides"),this.padding=D.padding==null?"valid":D.padding,this.dataFormat=D.dataFormat==null?"channelsLast":D.dataFormat,(0,f.checkDataFormat)(this.dataFormat),(0,f.checkPaddingMode)(this.padding),this.inputSpec=[new i.InputSpec({ndim:4})]}computeOutputShape(D){D=(0,a.getExactlyOneShape)(D);let O=this.dataFormat==="channelsFirst"?D[2]:D[1],$=this.dataFormat==="channelsFirst"?D[3]:D[2];return O=(0,n.convOutputLength)(O,this.poolSize[0],this.padding,this.strides[0]),$=(0,n.convOutputLength)($,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[D[0],D[1],O,$]:[D[0],O,$,D[3]]}call(D,O){return(0,r.tidy)(()=>(this.invokeCallHook(D,O),this.poolingFunction((0,a.getExactlyOneTensor)(D),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const D={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},O=super.getConfig();return Object.assign(D,O),D}}class k extends _{constructor(D){super(D)}poolingFunction(D,O,$,P,R){return(0,f.checkDataFormat)(R),(0,f.checkPaddingMode)(P),u(D,O,$,P,R,"max")}}k.className="MaxPooling2D",r.serialization.registerClass(k);class y extends _{constructor(D){super(D)}poolingFunction(D,O,$,P,R){return(0,f.checkDataFormat)(R),(0,f.checkPaddingMode)(P),u(D,O,$,P,R,"avg")}}y.className="AveragePooling2D",r.serialization.registerClass(y);class x extends i.Layer{constructor(D){D.poolSize==null&&(D.poolSize=[2,2,2]);super(D);if(this.poolSize=Array.isArray(D.poolSize)?D.poolSize:[D.poolSize,D.poolSize,D.poolSize],D.strides==null)this.strides=this.poolSize;else if(Array.isArray(D.strides)){if(D.strides.length!==3)throw new o.ValueError(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${D.strides.length}.`);this.strides=D.strides}else this.strides=[D.strides,D.strides,D.strides];(0,c.assertPositiveInteger)(this.poolSize,"poolSize"),(0,c.assertPositiveInteger)(this.strides,"strides"),this.padding=D.padding==null?"valid":D.padding,this.dataFormat=D.dataFormat==null?"channelsLast":D.dataFormat,(0,f.checkDataFormat)(this.dataFormat),(0,f.checkPaddingMode)(this.padding),this.inputSpec=[new i.InputSpec({ndim:5})]}computeOutputShape(D){D=(0,a.getExactlyOneShape)(D);let O=this.dataFormat==="channelsFirst"?D[2]:D[1],$=this.dataFormat==="channelsFirst"?D[3]:D[2],P=this.dataFormat==="channelsFirst"?D[4]:D[3];return O=(0,n.convOutputLength)(O,this.poolSize[0],this.padding,this.strides[0]),$=(0,n.convOutputLength)($,this.poolSize[1],this.padding,this.strides[1]),P=(0,n.convOutputLength)(P,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[D[0],D[1],O,$,P]:[D[0],O,$,P,D[4]]}call(D,O){return(0,r.tidy)(()=>(this.invokeCallHook(D,O),this.poolingFunction((0,a.getExactlyOneTensor)(D),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const D={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},O=super.getConfig();return Object.assign(D,O),D}}class b extends x{constructor(D){super(D)}poolingFunction(D,O,$,P,R){return(0,f.checkDataFormat)(R),(0,f.checkPaddingMode)(P),p(D,O,$,P,R,"max")}}b.className="MaxPooling3D",r.serialization.registerClass(b);class C extends x{constructor(D){super(D)}poolingFunction(D,O,$,P,R){return(0,f.checkDataFormat)(R),(0,f.checkPaddingMode)(P),p(D,O,$,P,R,"avg")}}C.className="AveragePooling3D",r.serialization.registerClass(C);class w extends i.Layer{constructor(D){super(D);this.inputSpec=[new i.InputSpec({ndim:3})]}computeOutputShape(D){return[D[0],D[2]]}call(D,O){throw new o.NotImplementedError}}class N extends w{constructor(D){super(D||{})}call(D,O){return(0,r.tidy)(()=>{const $=(0,a.getExactlyOneTensor)(D);return r.mean($,1)})}}N.className="GlobalAveragePooling1D",r.serialization.registerClass(N);class T extends w{constructor(D){super(D||{})}call(D,O){return(0,r.tidy)(()=>{const $=(0,a.getExactlyOneTensor)(D);return r.max($,1)})}}T.className="GlobalMaxPooling1D",r.serialization.registerClass(T);class F extends i.Layer{constructor(D){super(D);this.dataFormat=D.dataFormat==null?"channelsLast":D.dataFormat,(0,f.checkDataFormat)(this.dataFormat),this.inputSpec=[new i.InputSpec({ndim:4})]}computeOutputShape(D){return this.dataFormat==="channelsLast"?[D[0],D[3]]:[D[0],D[1]]}call(D,O){throw new o.NotImplementedError}getConfig(){const D={dataFormat:this.dataFormat},O=super.getConfig();return Object.assign(D,O),D}}class S extends F{call(D,O){return(0,r.tidy)(()=>{const $=(0,a.getExactlyOneTensor)(D);return this.dataFormat==="channelsLast"?r.mean($,[1,2]):r.mean($,[2,3])})}}S.className="GlobalAveragePooling2D",r.serialization.registerClass(S);class I extends F{call(D,O){return(0,r.tidy)(()=>{const $=(0,a.getExactlyOneTensor)(D);return this.dataFormat==="channelsLast"?r.max($,[1,2]):r.max($,[2,3])})}}I.className="GlobalMaxPooling2D",r.serialization.registerClass(I)},{"@tensorflow/tfjs-core":"fqGP4","../backend/common":"7Ax0n","../backend/tfjs_backend":"2pIRC","../common":"hHHWg","../engine/topology":"Fr8bO","../errors":"eAG95","../utils/conv_utils":"4SHhE","../utils/generic_utils":"gl5LS","../utils/types_utils":"fJq00","./convolutional":"c9doa","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2LPFf":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Wrapper",()=>u),t.export(s,"TimeDistributed",()=>p),t.export(s,"checkBidirectionalMergeMode",()=>h),t.export(s,"Bidirectional",()=>v);var r=e("@tensorflow/tfjs-core"),d=e("../backend/tfjs_backend"),m=e("../common"),f=e("../engine/topology"),i=e("../errors"),o=e("../keras_format/common"),n=e("../utils/generic_utils"),c=e("../utils/types_utils"),a=e("./recurrent"),l=e("./serialization");class u extends f.Layer{constructor(k){super(k);this.layer=k.layer}build(k){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(k){this.layer!=null&&(this.layer.trainable=k)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(k){this.layer.setWeights(k)}getConfig(){const k={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},y=super.getConfig();return Object.assign(k,y),k}setFastWeightInitDuringBuild(k){super.setFastWeightInitDuringBuild(k),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(k)}static fromConfig(k,y,x={}){const b=y.layer,C=(0,l.deserialize)(b,x);delete y.layer;const w={layer:C};return Object.assign(w,y),new k(w)}}class p extends u{constructor(k){super(k);this.supportsMasking=!0}build(k){if(k=(0,c.getExactlyOneShape)(k),k.length<3)throw new i.ValueError(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(k)}`);this.inputSpec=[{shape:k}];const y=[k[0]].concat(k.slice(2));this.layer.built||(this.layer.build(y),this.layer.built=!0),super.build(k)}computeOutputShape(k){k=(0,c.getExactlyOneShape)(k);const y=[k[0]].concat(k.slice(2)),x=this.layer.computeOutputShape(y),b=k[1];return[x[0],b].concat(x.slice(1))}call(k,y){return(0,r.tidy)(()=>{k=(0,c.getExactlyOneTensor)(k);const x=(w,N)=>[(0,c.getExactlyOneTensor)(this.layer.call(w,y)),[]];return(0,a.rnn)(x,k,[],!1,null,null,!1,!0)[1]})}}p.className="TimeDistributed",r.serialization.registerClass(p);function h(_){n.checkStringTypeUnionValue(o.VALID_BIDIRECTIONAL_MERGE_MODES,"BidirectionalMergeMode",_)}const g="concat";class v extends u{constructor(k){super(k);const y=k.layer.getConfig(),x={};x.className=k.layer.getClassName(),x.config=y,this.forwardLayer=(0,l.deserialize)(x),y.goBackwards=y.goBackwards!==!0;const b={};if(b.className=k.layer.getClassName(),b.config=y,this.backwardLayer=(0,l.deserialize)(b),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=k.mergeMode===void 0?g:k.mergeMode,h(this.mergeMode),k.weights)throw new i.NotImplementedError("weights support is not implemented for Bidirectional layer yet.");this._stateful=k.layer.stateful,this.returnSequences=k.layer.returnSequences,this.returnState=k.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=k.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(k){this._trainable=k,this.forwardLayer!=null&&(this.forwardLayer.trainable=k),this.backwardLayer!=null&&(this.backwardLayer.trainable=k)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(k){const y=k.length,x=Math.floor(y/2);this.forwardLayer.setWeights(k.slice(0,x)),this.backwardLayer.setWeights(k.slice(x))}computeOutputShape(k){let y=this.forwardLayer.computeOutputShape(k);Array.isArray(y)&&Array.isArray(y[0])||(y=[y]);let x,b,C;return this.returnState&&(C=y.slice(1)),x=y[0],this.mergeMode==="concat"?(x[x.length-1]*=2,b=[x]):this.mergeMode==null?b=[x,x.slice()]:b=[x],this.returnState?this.mergeMode==null?b.concat(C).concat(C.slice()):[x].concat(C).concat(C.slice()):n.singletonOrArray(b)}apply(k,y){let x=y==null?null:y.initialState,b=y==null?null:y.constants;y==null&&(y={});const C=(0,a.standardizeArgs)(k,x,b,this.numConstants);if(k=C.inputs,x=C.initialState,b=C.constants,Array.isArray(k)&&(x=k.slice(1),k=k[0]),(x==null||x.length===0)&&b==null)return super.apply(k,y);const w=[],N=[];if(x!=null){const F=x.length;if(F%2>0)throw new i.ValueError("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");y.initialState=x,w.push(...x);const S=x.map(I=>new f.InputSpec({shape:I.shape}));this.forwardLayer.stateSpec=S.slice(0,F/2),this.backwardLayer.stateSpec=S.slice(F/2),N.push(...S)}if(b!=null)throw new i.NotImplementedError("Support for constants in Bidirectional layers is not implemented yet.");const T=w[0]instanceof f.SymbolicTensor;for(const F of w)if(F instanceof f.SymbolicTensor!==T)throw new i.ValueError("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(T){const F=[k].concat(w),S=this.inputSpec.concat(N),I=this.inputSpec;this.inputSpec=S;const j=super.apply(F,y);return this.inputSpec=I,j}else return super.apply(k,y)}call(k,y){return(0,r.tidy)(()=>{const x=y.initialState;let b,C;if(x==null)b=this.forwardLayer.call(k,y),C=this.backwardLayer.call(k,y);else{const T=x.slice(0,x.length/2),F=x.slice(x.length/2);b=this.forwardLayer.call(k,Object.assign(y,{initialState:T})),C=this.backwardLayer.call(k,Object.assign(y,{initialState:F}))}let w;this.returnState&&(Array.isArray(b)&&(w=b.slice(1).concat(C.slice(1))),b=b[0],C=C[0]),this.returnSequences&&(C=r.reverse(C,1));let N;return this.mergeMode==="concat"?N=d.concatenate([b,C]):this.mergeMode==="sum"?N=r.add(b,C):this.mergeMode==="ave"?N=r.mul(.5,r.add(b,C)):this.mergeMode==="mul"?N=r.mul(b,C):this.mergeMode==null&&(N=[b,C]),this.returnState?this.mergeMode==null?N.concat(w):[N].concat(w):N})}resetStates(k){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(k){(0,m.nameScope)(this.forwardLayer.name,()=>{this.forwardLayer.build(k)}),(0,m.nameScope)(this.backwardLayer.name,()=>{this.backwardLayer.build(k)}),this.built=!0}computeMask(k,y){Array.isArray(y)&&(y=y[0]);let x;if(this.returnSequences?this.mergeMode==null?x=[y,y]:x=y:this.mergeMode==null?x=[null,null]:x=null,this.returnState){const C=this.forwardLayer.states.map(w=>null);return Array.isArray(x)?x.concat(C).concat(C):[x].concat(C).concat(C)}else return x}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(k){super.setFastWeightInitDuringBuild(k),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(k),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(k)}getConfig(){const k={mergeMode:this.mergeMode},y=super.getConfig();return Object.assign(k,y),k}static fromConfig(k,y){const x=(0,l.deserialize)(y.layer);if(delete y.layer,y.numConstants!=null)throw new i.NotImplementedError("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const b=y;return b.layer=x,new k(b)}}v.className="Bidirectional",r.serialization.registerClass(v)},{"@tensorflow/tfjs-core":"fqGP4","../backend/tfjs_backend":"2pIRC","../common":"hHHWg","../engine/topology":"Fr8bO","../errors":"eAG95","../keras_format/common":"9kIj8","../utils/generic_utils":"gl5LS","../utils/types_utils":"fJq00","./recurrent":"dY6Qj","./serialization":"jf3QQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],KeMAY:[function(e,E,s){/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Rescaling",()=>i);var r=e("../../engine/topology"),d=e("@tensorflow/tfjs-core"),m=e("../../utils/types_utils"),f=e("../../backend/tfjs_backend");class i extends r.Layer{constructor(n){super(n);this.scale=n.scale,n.offset?this.offset=n.offset:this.offset=0}getConfig(){const n={scale:this.scale,offset:this.offset},c=super.getConfig();return Object.assign(n,c),n}call(n,c){return(0,d.tidy)(()=>(n=(0,m.getExactlyOneTensor)(n),n.dtype!=="float32"&&(n=f.cast(n,"float32")),(0,d.add)((0,d.mul)(n,this.scale),this.offset)))}}i.className="Rescaling",d.serialization.registerClass(i)},{"../../engine/topology":"Fr8bO","@tensorflow/tfjs-core":"fqGP4","../../utils/types_utils":"fJq00","../../backend/tfjs_backend":"2pIRC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dPRfa:[function(e,E,s){/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CenterCrop",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../../utils/types_utils"),m=e("../../engine/topology"),f=e("../../backend/tfjs_backend");const{resizeBilinear:i,cropAndResize:o}=r.image;class n extends m.Layer{constructor(a){super(a);this.height=a.height,this.width=a.width}centerCrop(a,l,u,p,h,g,v,_){return(0,r.tidy)(()=>{let k,y=!1;const x=l/g,b=u/v,C=(p+l)/g,w=(h+u)/v,N=[x,b,C,w],T=[];a.rank===3?(y=!0,k=(0,r.stack)([a])):k=a;for(let D=0;D<k.shape[0];D++)T.push(N);const F=(0,r.tensor)(T,[T.length,4]),S=(0,r.range)(0,T.length,1,"int32"),j=o(k,F,S,[p,h],"nearest");return y?f.cast((0,d.getExactlyOneTensor)((0,r.unstack)(j)),_):f.cast(j,_)})}upsize(a,l,u,p){return(0,r.tidy)(()=>{const h=i(a,[l,u]);return f.cast(h,p)})}call(a,l){return(0,r.tidy)(()=>{const u=(0,d.getExactlyOneTensor)(a),p=u.dtype,h=u.shape,g=h[h.length-3],v=h[h.length-2];let _=0;g!==this.height&&(_=Math.floor((g-this.height)/2));let k=0;return v!==this.width&&(k=Math.floor((v-this.width)/2),k===0&&(k=1)),_>=0&&k>=0?this.centerCrop(u,_,k,this.height,this.width,g,v,p):this.upsize(a,this.height,this.width,p)})}getConfig(){const a={height:this.height,width:this.width},l=super.getConfig();return Object.assign(a,l),a}computeOutputShape(a){a=(0,d.getExactlyOneShape)(a);const l=a.length-3,u=a.length-2;return a[l]=this.height,a[u]=this.width,a}}n.className="CenterCrop",r.serialization.registerClass(n)},{"@tensorflow/tfjs-core":"fqGP4","../../utils/types_utils":"fJq00","../../engine/topology":"Fr8bO","../../backend/tfjs_backend":"2pIRC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],sCfiO:[function(e,E,s){/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CategoryEncoding",()=>n);var r=e("../../engine/topology"),d=e("@tensorflow/tfjs-core"),m=e("../../utils/types_utils"),f=e("../../errors"),i=e("../../backend/tfjs_backend"),o=e("./preprocessing_utils");class n extends r.Layer{constructor(a){super(a);this.numTokens=a.numTokens,a.outputMode?this.outputMode=a.outputMode:this.outputMode="multiHot"}getConfig(){const a={numTokens:this.numTokens,outputMode:this.outputMode},l=super.getConfig();return Object.assign(a,l),a}computeOutputShape(a){return a=(0,m.getExactlyOneShape)(a),a==null?[this.numTokens]:this.outputMode==="oneHot"&&a[a.length-1]!==1?(a.push(this.numTokens),a):(a[a.length-1]=this.numTokens,a)}call(a,l){return(0,d.tidy)(()=>{a=(0,m.getExactlyOneTensor)(a),a.dtype!=="int32"&&(a=i.cast(a,"int32"));let u;if(typeof l.countWeights!="undefined"){if(this.outputMode!=="count")throw new f.ValueError(`countWeights is not used when outputMode !== count.
              Received countWeights=${l.countWeights}`);u=(0,m.getExactlyOneTensor)(l.countWeights)}const p=(0,d.max)(a),h=(0,d.min)(a),g=(0,d.greater)(this.numTokens,p).bufferSync().get(0),v=(0,d.greaterEqual)(h,0).bufferSync().get(0);if(!(g&&v))throw new f.ValueError(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return o.encodeCategoricalInputs(a,this.outputMode,this.numTokens,u)})}}n.className="CategoryEncoding",d.serialization.registerClass(n)},{"../../engine/topology":"Fr8bO","@tensorflow/tfjs-core":"fqGP4","../../utils/types_utils":"fJq00","../../errors":"eAG95","../../backend/tfjs_backend":"2pIRC","./preprocessing_utils":"i4Ffo","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],i4Ffo:[function(e,E,s){/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"encodeCategoricalInputs",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../../utils/types_utils"),m=e("../../errors"),f=e("../../backend/tfjs_backend");function i(o,n,c,a){let l=(0,d.getExactlyOneTensor)(o);if(l.dtype!=="int32"&&(l=f.cast(l,"int32")),n==="int")return l;const u=l.shape;if(l.rank===0&&(l=(0,r.expandDims)(l,-1)),n==="oneHot"&&l.shape[l.shape.length-1]!==1&&(l=(0,r.expandDims)(l,-1)),l.rank>2)throw new m.ValueError(`When outputMode is not int, maximum output rank is 2 Received outputMode ${n} and input shape ${u} which would result in output rank ${l.rank}.`);const p=["multiHot","oneHot"].includes(n),h=l;let g;if(typeof a!="undefined"&&n==="count"?g=(0,r.denseBincount)(h,a,c,p):g=(0,r.denseBincount)(h,[],c,p),n!=="tfIdf")return g;if(a)return(0,r.mul)(g,a);throw new m.ValueError("When outputMode is 'tfIdf', weights must be provided.")}},{"@tensorflow/tfjs-core":"fqGP4","../../utils/types_utils":"fJq00","../../errors":"eAG95","../../backend/tfjs_backend":"2pIRC","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3qpfr":[function(e,E,s){/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Resizing",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../../engine/topology"),m=e("../../errors"),f=e("../../utils/types_utils");const i=["bilinear","nearest"],o=new Set(i);class n extends d.Layer{constructor(a){super(a);if(this.height=a.height,this.width=a.width,a.interpolation)if(o.has(a.interpolation))this.interpolation=a.interpolation;else throw new m.ValueError(`Invalid interpolation parameter: ${a.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(a.cropToAspectRatio)}computeOutputShape(a){a=(0,f.getExactlyOneShape)(a);const l=a[2];return[this.height,this.width,l]}getConfig(){const a={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},l=super.getConfig();return Object.assign(a,l),a}call(a,l){return(0,r.tidy)(()=>{const u=[this.height,this.width];if(this.interpolation==="bilinear")return r.image.resizeBilinear(a,u,!this.cropToAspectRatio);if(this.interpolation==="nearest")return r.image.resizeNearestNeighbor(a,u,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...o]} are supported`)})}}n.className="Resizing",r.serialization.registerClass(n)},{"@tensorflow/tfjs-core":"fqGP4","../../engine/topology":"Fr8bO","../../errors":"eAG95","../../utils/types_utils":"fJq00","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8QTln":[function(e,E,s){/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"INTERPOLATION_METHODS",()=>o),t.export(s,"RandomWidth",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../../utils/types_utils"),m=e("../../errors"),f=e("../../engine/base_random_layer");const i=["bilinear","nearest"],o=new Set(i);class n extends f.BaseRandomLayer{constructor(a){super(a);const{factor:l,interpolation:u="bilinear"}=a;if(this.factor=l,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new m.ValueError(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new m.ValueError(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new m.ValueError(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(u)if(o.has(u))this.interpolation=u;else throw new m.ValueError(`Invalid interpolation parameter: ${u} is not implemented`)}getConfig(){const a={factor:this.factor,interpolation:this.interpolation},l=super.getConfig();return Object.assign(a,l),a}computeOutputShape(a){a=(0,d.getExactlyOneShape)(a);const l=a[2];return[this.imgHeight,-1,l]}call(a,l){return(0,r.tidy)(()=>{const u=(0,d.getExactlyOneTensor)(a);this.imgHeight=u.shape[u.shape.length-3];const p=u.shape[u.shape.length-2];this.widthFactor=(0,r.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let h=this.widthFactor.dataSync()[0]*p;h=Math.round(h);const g=[this.imgHeight,h];switch(this.interpolation){case"bilinear":return r.image.resizeBilinear(a,g);case"nearest":return r.image.resizeNearestNeighbor(a,g);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...o]} are supported`)}})}}n.className="RandomWidth",r.serialization.registerClass(n)},{"@tensorflow/tfjs-core":"fqGP4","../../utils/types_utils":"fJq00","../../errors":"eAG95","../../engine/base_random_layer":"k4gH9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k4gH9:[function(e,E,s){/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"BaseRandomLayer",()=>m);var r=e("./topology"),d=e("../backend/random_seed");class m extends r.Layer{constructor(i){super(i);this.randomGenerator=new d.RandomSeed(i.seed)}getConfig(){const i={seed:this.randomGenerator.seed},o=super.getConfig();return Object.assign(i,o),i}}m.className="BaseRandomLayer"},{"./topology":"Fr8bO","../backend/random_seed":"1d1CX","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1d1CX":[function(e,E,s){/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"RandomSeed",()=>r);class r{constructor(m){this.seed=m}next(){if(this.seed!==void 0)return this.seed++}}r.className="RandomSeed"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],e950f:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"binaryAccuracy",()=>m),t.export(s,"binaryCrossentropy",()=>f),t.export(s,"sparseCategoricalAccuracy",()=>i),t.export(s,"categoricalAccuracy",()=>o),t.export(s,"categoricalCrossentropy",()=>n),t.export(s,"precision",()=>c),t.export(s,"recall",()=>a),t.export(s,"cosineProximity",()=>l),t.export(s,"meanAbsoluteError",()=>u),t.export(s,"meanAbsolutePercentageError",()=>p),t.export(s,"MAPE",()=>h),t.export(s,"mape",()=>g),t.export(s,"meanSquaredError",()=>v),t.export(s,"MSE",()=>_),t.export(s,"mse",()=>k);var r=e("./losses"),d=e("./metrics");function m(y,x){return d.binaryAccuracy(y,x)}function f(y,x){return d.binaryCrossentropy(y,x)}function i(y,x){return d.sparseCategoricalAccuracy(y,x)}function o(y,x){return d.categoricalAccuracy(y,x)}function n(y,x){return d.categoricalCrossentropy(y,x)}function c(y,x){return d.precision(y,x)}function a(y,x){return d.recall(y,x)}function l(y,x){return r.cosineProximity(y,x)}function u(y,x){return r.meanAbsoluteError(y,x)}function p(y,x){return r.meanAbsolutePercentageError(y,x)}function h(y,x){return r.meanAbsolutePercentageError(y,x)}function g(y,x){return r.meanAbsolutePercentageError(y,x)}function v(y,x){return r.meanSquaredError(y,x)}function _(y,x){return r.meanSquaredError(y,x)}function k(y,x){return r.meanSquaredError(y,x)}},{"./losses":"1qbI1","./metrics":"cLx4I","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1uqec":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"modelFromJSON",()=>r.modelFromJSON);var r=e("./models")},{"./models":"6CNgn","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bevU7:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"l1l2",()=>d),t.export(s,"l1",()=>m),t.export(s,"l2",()=>f);var r=e("./regularizers");function d(i){return new r.L1L2(i)}function m(i){return r.l1(i)}function f(i){return r.l2(i)}},{"./regularizers":"aeAuB","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eMJDd:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Callback",()=>i),t.export(s,"EarlyStopping",()=>c),t.export(s,"earlyStopping",()=>a),t.export(s,"callbacks",()=>l);var r=e("./base_callbacks"),d=e("./engine/training"),m=e("./errors"),f=e("./logs");class i extends r.BaseCallback{constructor(){super(...arguments);this.model=null}setModel(p){if(!(p instanceof d.LayersModel))throw new Error("model must be a LayersModel, not some other Container");this.model=p}}function o(u,p){return u<p}function n(u,p){return u>p}class c extends i{constructor(p){super();if(p==null&&(p={}),p.restoreBestWeights)throw new m.NotImplementedError("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=p.monitor||"val_loss",this.minDelta=Math.abs(p.minDelta||0),this.patience=p.patience||0,this.verbose=p.verbose||0,this.mode=p.mode||"auto",this.baseline=p.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=o:this.mode==="max"?this.monitorFunc=n:this.monitor.indexOf("acc")!==-1?this.monitorFunc=n:this.monitorFunc=o,this.monitorFunc===o&&(this.minDelta*=-1)}async onTrainBegin(p){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===o?1/0:-1/0}async onEpochEnd(p,h){await(0,f.resolveScalarsInLogs)(h);const g=this.getMonitorValue(h);g!=null&&(this.monitorFunc(g-this.minDelta,this.best)?(this.best=g,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=p,this.model.stopTraining=!0)))}async onTrainEnd(p){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(p){p==null&&(p={});const h=p[this.monitor];return h==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(p)}`),h}}function a(u){return new c(u)}const l={earlyStopping:a}},{"./base_callbacks":"efotw","./engine/training":"bEWyV","./errors":"eAG95","./logs":"guoRw","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],l98bQ:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"GraphModel",()=>d.GraphModel),t.export(s,"loadGraphModel",()=>d.loadGraphModel),t.export(s,"loadGraphModelSync",()=>d.loadGraphModelSync),t.export(s,"deregisterOp",()=>m.deregisterOp),t.export(s,"registerOp",()=>m.registerOp),t.export(s,"version_converter",()=>f.version);var r=e("./flags"),d=e("./executor/graph_model"),m=e("./operations/custom_op/register"),f=e("./version")},{"./flags":"ajFoD","./executor/graph_model":"lTwhU","./operations/custom_op/register":"aCdfb","./version":"hdTWU","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ajFoD:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@tensorflow/tfjs-core");(0,t.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,d=>{d&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})},{"@tensorflow/tfjs-core":"fqGP4"}],lTwhU:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TFHUB_SEARCH_PARAM",()=>i),t.export(s,"DEFAULT_MODEL_NAME",()=>o),t.export(s,"GraphModel",()=>n),t.export(s,"loadGraphModel",()=>c),t.export(s,"loadGraphModelSync",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("../operations/operation_mapper"),m=e("./graph_executor"),f=e("./resource_manager");const i="?tfjs-format=file",o="model.json";class n{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(p,h={},g=r.io){this.modelUrl=p,this.loadOptions=h,this.version="n/a",this.io=g,h==null&&(this.loadOptions={}),this.resourceManager=new f.ResourceManager}findIOHandler(){const p=this.modelUrl;if(p.load!=null)this.handler=p;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(p,this.loadOptions);else{const h=this.io.getLoadHandlers(p,this.loadOptions);if(h.length===0)h.push(this.io.browserHTTPRequest(p,this.loadOptions));else if(h.length>1)throw new Error(`Found more than one (${h.length}) load handlers for URL '${[p]}'`);this.handler=h[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const p=this.handler.load();return r.util.isPromise(p)?p.then(h=>this.loadSync(h)):this.loadSync(p)}loadSync(p){this.artifacts=p;const h=this.artifacts.modelTopology;let g=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const _=this.artifacts.userDefinedMetadata;_.signature!=null&&(g=_.signature),_.structuredOutputKeys!=null&&(this.structuredOutputKeys=_.structuredOutputKeys)}this.signature=g,this.version=`${h.versions.producer}.${h.versions.minConsumer}`;const v=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new m.GraphExecutor(d.OperationMapper.Instance.transformGraph(h,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(v),this.executor.resourceManager=this.resourceManager,p.modelInitializer!=null&&p.modelInitializer.node!=null){const _=d.OperationMapper.Instance.transformGraph(p.modelInitializer);this.initializer=new m.GraphExecutor(_),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=p.initializerSignature}return!0}async save(p,h){if(typeof p=="string"){const g=this.io.getSaveHandlers(p);if(g.length===0)throw new Error(`Cannot find any save handlers for URL '${p}'`);if(g.length>1)throw new Error(`Found more than one (${g.length}) save handlers for URL '${p}'`);p=g[0]}if(p.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return p.save(this.artifacts)}addStructuredOutputNames(p){if(this.structuredOutputKeys){const h=p instanceof r.Tensor?[p]:p,g={};return h.forEach((v,_)=>g[this.structuredOutputKeys[_]]=v),g}return p}predict(p,h){const g=this.execute(p,this.outputNodes);return this.addStructuredOutputNames(g)}async predictAsync(p,h){const g=await this.executeAsync(p,this.outputNodes);return this.addStructuredOutputNames(g)}normalizeInputs(p){var h;if(!(p instanceof r.Tensor)&&!Array.isArray(p)){const _=(h=this.signature)===null||h===void 0?void 0:h.inputs;if(_!=null)for(const k in _){const y=_[k];y.resourceId!=null&&(p[k]=this.resourceIdToCapturedInput[y.resourceId])}return p}p=Array.isArray(p)?p:[p];const g=Object.keys(this.resourceIdToCapturedInput).length;if(p.length+g!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-g} non-resource placeholders, while there are ${p.length} input tensors provided.`);let v=0;return this.inputNodes.reduce((_,k)=>{var y,x,b;const C=(b=(x=(y=this.signature)===null||y===void 0?void 0:y.inputs)===null||x===void 0?void 0:x[k])===null||b===void 0?void 0:b.resourceId;return C!=null?_[k]=this.resourceIdToCapturedInput[C]:_[k]=p[v++],_},{})}normalizeOutputs(p){return p=p||this.outputNodes,Array.isArray(p)?p:[p]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(p){if(this.resourceIdToCapturedInput={},this.initializerSignature){const h=this.initializerSignature.outputs,g=Object.keys(h);for(let v=0;v<g.length;v++){const _=g[v],k=h[_];this.resourceIdToCapturedInput[k.resourceId]=p[v]}}}execute(p,h){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),p=this.normalizeInputs(p),h=this.normalizeOutputs(h);const g=this.executor.execute(p,h);return g.length>1?g:g[0]}async executeAsync(p,h){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),p=this.normalizeInputs(p),h=this.normalizeOutputs(h);const g=await this.executor.executeAsync(p,h);return g.length>1?g:g[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(p){return Object.keys(p).reduce((h,g)=>(h[g]=[p[g]],h),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,r.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function c(u,p={},h=r.io){if(u==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");p==null&&(p={}),p.fromTFHub&&typeof u=="string"&&(u=l(u));const g=new n(u,p,h);return await g.load(),g}function a(u){if(u==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let p;if(u instanceof Array){const[g,v]=u;if(!g)throw new Error("modelJSON must be the first element of the array");if(!v||!(v instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in g))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in g))throw new Error("Model JSON is missing 'weightsManifest'");const _=r.io.getWeightSpecs(g.weightsManifest),k=r.io.getModelArtifactsForJSONSync(g,_,v);p=r.io.fromMemorySync(k)}else if("load"in u)p=u;else if("modelTopology"in u&&"weightSpecs"in u&&"weightData"in u)p=r.io.fromMemorySync(u);else throw new Error("Unknown model format");const h=new n(p);return h.load(),h}function l(u){return u.endsWith("/")||(u=u+"/"),`${u}${o}${i}`}},{"@tensorflow/tfjs-core":"fqGP4","../operations/operation_mapper":"9a5A8","./graph_executor":"5QJH1","./resource_manager":"7Rob1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9a5A8":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"OperationMapper",()=>F),t.export(s,"decodeBase64",()=>S),t.export(s,"parseStringParam",()=>I),t.export(s,"getStringParam",()=>j),t.export(s,"getBoolParam",()=>D),t.export(s,"getNumberParam",()=>O),t.export(s,"parseDtypeParam",()=>$),t.export(s,"getFuncParam",()=>P),t.export(s,"getDtypeParam",()=>R),t.export(s,"getDtypeArrayParam",()=>A),t.export(s,"parseTensorShapeParam",()=>z),t.export(s,"getTensorShapeParam",()=>G),t.export(s,"getNumericArrayParam",()=>L),t.export(s,"getStringArrayParam",()=>M),t.export(s,"getTensorShapeArrayParam",()=>V),t.export(s,"getBoolArrayParam",()=>K);var r=e("@tensorflow/tfjs-core"),d=e("../data/compiled_api"),m=e("./custom_op/register"),f=e("./executors/utils"),i=e("./op_list/arithmetic"),o=e("./op_list/basic_math"),n=e("./op_list/control"),c=e("./op_list/convolution"),a=e("./op_list/creation"),l=e("./op_list/dynamic"),u=e("./op_list/evaluation"),p=e("./op_list/graph"),h=e("./op_list/hash_table"),g=e("./op_list/image"),v=e("./op_list/logical"),_=e("./op_list/matrices"),k=e("./op_list/normalization"),y=e("./op_list/reduction"),x=e("./op_list/slice_join"),b=e("./op_list/sparse"),C=e("./op_list/spectral"),w=e("./op_list/string"),N=e("./op_list/transformation"),T=e("509fe566240bdc8b").Buffer;class F{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const H=[i,o,n,c,a,l,u,p,h,g,v,_,k,y,x,b,C,w,N],Z=[].concat(...H.map(Q=>Q.json));this.opMappers=Z.reduce((Q,te)=>(Q[te.tfOpName]=te,Q),{})}transformGraph(H,Z={}){const Q=H.node,te=[],ee=[],ne=[],se=Q.reduce((le,ue)=>(le[ue.name]=this.mapNode(ue),ue.op.startsWith("Placeholder")?te.push(le[ue.name]):ue.op==="Const"?ee.push(le[ue.name]):(ue.input==null||ue.input.length===0)&&ne.push(le[ue.name]),le),{});let X=[];const U=[];let Y={},J={};Z!=null&&(Y=this.mapSignatureEntries(Z.inputs),J=this.mapSignatureEntries(Z.outputs));const q=Object.keys(se);q.forEach(le=>{const ue=se[le];ue.inputNames.forEach((B,re)=>{const[oe,,de]=(0,f.getNodeNameAndIndex)(B),fe=se[oe];if(fe.outputs!=null){const pe=fe.outputs.indexOf(de);if(pe!==-1){const me=`${oe}:${pe}`;ue.inputNames[re]=me}}ue.inputs.push(fe),fe.children.push(ue)})}),Object.keys(J).length===0?q.forEach(le=>{const ue=se[le];ue.children.length===0&&U.push(ue)}):Object.keys(J).forEach(le=>{const[ue]=(0,f.getNodeNameAndIndex)(le),B=se[ue];B!=null&&(B.signatureKey=J[le],U.push(B))}),Object.keys(Y).length>0?Object.keys(Y).forEach(le=>{const[ue]=(0,f.getNodeNameAndIndex)(le),B=se[ue];B&&(B.signatureKey=Y[le],X.push(B))}):X=te;let ae={};H.library!=null&&H.library.function!=null&&(ae=H.library.function.reduce((le,ue)=>(le[ue.signature.name]=this.mapFunction(ue),le),{}));const ie={nodes:se,inputs:X,outputs:U,weights:ee,placeholders:te,signature:Z,functions:ae};return ne.length>0&&(ie.initNodes=ne),ie}mapSignatureEntries(H){return Object.keys(H||{}).reduce((Z,Q)=>(Z[H[Q].name]=Q,Z),{})}mapNode(H){const Z=(0,m.getRegisteredOp)(H.op)||this.opMappers[H.op]||{};H.attr==null&&(H.attr={});const Q={name:H.name,op:H.op,category:Z.category,inputNames:(H.input||[]).map(te=>te.startsWith("^")?te.slice(1):te),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:H.attr,outputs:Z.outputs};return Z.inputs!=null&&(Q.inputParams=Z.inputs.reduce((te,ee)=>(te[ee.name]={type:ee.type,inputIndexStart:ee.start,inputIndexEnd:ee.end},te),{})),Z.attrs!=null&&(Q.attrParams=Z.attrs.reduce((te,ee)=>{const ne=ee.type;let se;switch(ee.type){case"string":se=j(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=j(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"string[]":se=M(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=M(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"number":se=O(H.attr,ee.tfName,ee.defaultValue||0),se===void 0&&!!ee.tfDeprecatedName&&(se=O(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"number[]":se=L(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=L(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"bool":se=D(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=D(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"bool[]":se=K(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=K(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"shape":se=G(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=G(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"shape[]":se=V(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=V(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"dtype":se=R(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=R(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"dtype[]":se=A(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=A(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"func":se=P(H.attr,ee.tfName,ee.defaultValue),se===void 0&&!!ee.tfDeprecatedName&&(se=P(H.attr,ee.tfDeprecatedName,ee.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${ee.type} for op: ${H.op}`)}return te[ee.name]={value:se,type:ne},te},{})),Q}mapFunction(H){const Z=H.nodeDef,Q=[],te=[];let ee={};Z!=null&&(ee=Z.reduce((J,q)=>(J[q.name]=this.mapNode(q),q.op==="Const"&&te.push(J[q.name]),J),{}));const ne=[],se=[];H.signature.inputArg.forEach(J=>{const[q]=(0,f.getNodeNameAndIndex)(J.name),ae={name:q,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:$(J.type),type:"dtype"}},children:[]};ae.signatureKey=J.name,ne.push(ae),ee[q]=ae}),Object.keys(ee).forEach(J=>{const q=ee[J];q.inputNames.forEach((ae,ie)=>{const[le,,ue]=(0,f.getNodeNameAndIndex)(ae),B=ee[le];if(B.outputs!=null){const re=B.outputs.indexOf(ue);if(re!==-1){const oe=`${le}:${re}`;q.inputNames[ie]=oe}}q.inputs.push(B),B.children.push(q)})});const U=H.ret;H.signature.outputArg.forEach(J=>{const[q,ae]=(0,f.getNodeNameAndIndex)(U[J.name]),ie=ee[q];ie!=null&&(ie.defaultOutput=ae,se.push(ie))});const Y=this.mapArgsToSignature(H);return{nodes:ee,inputs:ne,outputs:se,weights:te,placeholders:Q,signature:Y}}mapArgsToSignature(H){return{methodName:H.signature.name,inputs:H.signature.inputArg.reduce((Z,Q)=>(Z[Q.name]=this.mapArgToTensorInfo(Q),Z),{}),outputs:H.signature.outputArg.reduce((Z,Q)=>(Z[Q.name]=this.mapArgToTensorInfo(Q,H.ret),Z),{})}}mapArgToTensorInfo(H,Z){let Q=H.name;return Z!=null&&(Q=Z[Q]),{name:Q,dtype:H.type}}}function S(W){const H=(0,r.env)().global;if(typeof H.atob!="undefined")return H.atob(W);if(typeof T!="undefined")return new T(W,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function I(W,H){const Z=Array.isArray(W)?String.fromCharCode.apply(null,W):S(W);return H?Z:Z.toLowerCase()}function j(W,H,Z,Q=!1){const te=W[H];return te!=null?I(te.s,Q):Z}function D(W,H,Z){const Q=W[H];return Q?Q.b:Z}function O(W,H,Z){const Q=W[H]||{},te=Q.i!=null?Q.i:Q.f!=null?Q.f:Z;return typeof te=="number"?te:parseInt(te,10)}function $(W){switch(typeof W=="string"&&(W=d.DataType[W]),W){case d.DataType.DT_FLOAT:case d.DataType.DT_HALF:return"float32";case d.DataType.DT_INT32:case d.DataType.DT_INT64:case d.DataType.DT_INT8:case d.DataType.DT_UINT8:return"int32";case d.DataType.DT_BOOL:return"bool";case d.DataType.DT_DOUBLE:return"float32";case d.DataType.DT_STRING:return"string";default:return null}}function P(W,H,Z){const Q=W[H];return Q&&Q.func?Q.func.name:Z}function R(W,H,Z){const Q=W[H];return Q&&Q.type?$(Q.type):Z}function A(W,H,Z){const Q=W[H];return Q&&Q.list&&Q.list.type?Q.list.type.map(te=>$(te)):Z}function z(W){if(!W.unknownRank)return W.dim!=null?W.dim.map(H=>typeof H.size=="number"?H.size:parseInt(H.size,10)):[]}function G(W,H,Z){const Q=W[H];return Q&&Q.shape?z(Q.shape):Z}function L(W,H,Z){const Q=W[H];return Q?((Q.list.f&&Q.list.f.length?Q.list.f:Q.list.i)||[]).map(te=>typeof te=="number"?te:parseInt(te,10)):Z}function M(W,H,Z,Q=!1){const te=W[H];return te&&te.list&&te.list.s?te.list.s.map(ee=>I(ee,Q)):Z}function V(W,H,Z){const Q=W[H];return Q&&Q.list&&Q.list.shape?Q.list.shape.map(te=>z(te)):Z}function K(W,H,Z){const Q=W[H];return Q&&Q.list&&Q.list.b?Q.list.b:Z}},{"509fe566240bdc8b":"cPU1M","@tensorflow/tfjs-core":"fqGP4","../data/compiled_api":"6ROyj","./custom_op/register":"aCdfb","./executors/utils":"8WeA1","./op_list/arithmetic":"cLUOs","./op_list/basic_math":"cQPEG","./op_list/control":"eBWmx","./op_list/convolution":"h7JFl","./op_list/creation":"5rOSv","./op_list/dynamic":"4SdBb","./op_list/evaluation":"b4HGj","./op_list/graph":"fH4jH","./op_list/hash_table":"atW4L","./op_list/image":"2jMZj","./op_list/logical":"eQGYv","./op_list/matrices":"eDtGi","./op_list/normalization":"iNQCm","./op_list/reduction":"6fZOP","./op_list/slice_join":"3y6nN","./op_list/sparse":"9dp3I","./op_list/spectral":"6cSEy","./op_list/string":"idGlX","./op_list/transformation":"jFKjy","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6ROyj":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DataType",()=>r),t.export(s,"SaverDef",()=>d);var r;(function(m){m[m.DT_INVALID=0]="DT_INVALID",m[m.DT_FLOAT=1]="DT_FLOAT",m[m.DT_DOUBLE=2]="DT_DOUBLE",m[m.DT_INT32=3]="DT_INT32",m[m.DT_UINT8=4]="DT_UINT8",m[m.DT_INT16=5]="DT_INT16",m[m.DT_INT8=6]="DT_INT8",m[m.DT_STRING=7]="DT_STRING",m[m.DT_COMPLEX64=8]="DT_COMPLEX64",m[m.DT_INT64=9]="DT_INT64",m[m.DT_BOOL=10]="DT_BOOL",m[m.DT_QINT8=11]="DT_QINT8",m[m.DT_QUINT8=12]="DT_QUINT8",m[m.DT_QINT32=13]="DT_QINT32",m[m.DT_BFLOAT16=14]="DT_BFLOAT16",m[m.DT_QINT16=15]="DT_QINT16",m[m.DT_QUINT16=16]="DT_QUINT16",m[m.DT_UINT16=17]="DT_UINT16",m[m.DT_COMPLEX128=18]="DT_COMPLEX128",m[m.DT_HALF=19]="DT_HALF",m[m.DT_RESOURCE=20]="DT_RESOURCE",m[m.DT_VARIANT=21]="DT_VARIANT",m[m.DT_UINT32=22]="DT_UINT32",m[m.DT_UINT64=23]="DT_UINT64",m[m.DT_FLOAT_REF=101]="DT_FLOAT_REF",m[m.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",m[m.DT_INT32_REF=103]="DT_INT32_REF",m[m.DT_UINT8_REF=104]="DT_UINT8_REF",m[m.DT_INT16_REF=105]="DT_INT16_REF",m[m.DT_INT8_REF=106]="DT_INT8_REF",m[m.DT_STRING_REF=107]="DT_STRING_REF",m[m.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",m[m.DT_INT64_REF=109]="DT_INT64_REF",m[m.DT_BOOL_REF=110]="DT_BOOL_REF",m[m.DT_QINT8_REF=111]="DT_QINT8_REF",m[m.DT_QUINT8_REF=112]="DT_QUINT8_REF",m[m.DT_QINT32_REF=113]="DT_QINT32_REF",m[m.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",m[m.DT_QINT16_REF=115]="DT_QINT16_REF",m[m.DT_QUINT16_REF=116]="DT_QUINT16_REF",m[m.DT_UINT16_REF=117]="DT_UINT16_REF",m[m.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",m[m.DT_HALF_REF=119]="DT_HALF_REF",m[m.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",m[m.DT_VARIANT_REF=121]="DT_VARIANT_REF",m[m.DT_UINT32_REF=122]="DT_UINT32_REF",m[m.DT_UINT64_REF=123]="DT_UINT64_REF"})(r||(r={}));var d;(function(m){let f;(function(i){i[i.LEGACY=0]="LEGACY",i[i.V1=1]="V1",i[i.V2=2]="V2"})(f=m.CheckpointFormatVersion||(m.CheckpointFormatVersion={}))})(d||(d={}))},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aCdfb:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"registerOp",()=>d),t.export(s,"getRegisteredOp",()=>m),t.export(s,"deregisterOp",()=>f);const r={};function d(i,o){const n={tfOpName:i,category:"custom",inputs:[],attrs:[],customExecutor:o};r[i]=n}function m(i){return r[i]}function f(i){delete r[i]}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8WeA1":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getParamValue",()=>d),t.export(s,"getTensor",()=>m),t.export(s,"getTensorsForCurrentContext",()=>f),t.export(s,"getNodeNameAndIndex",()=>i),t.export(s,"parseNodeName",()=>n),t.export(s,"split",()=>c),t.export(s,"getPadding",()=>a),t.export(s,"cloneTensor",()=>l);var r=e("@tensorflow/tfjs-core");function d(u,p,h,g,v){const _=p.inputParams[u];if(_&&_.inputIndexStart!==void 0){const y=_.inputIndexStart,x=_.inputIndexEnd===0?void 0:_.inputIndexEnd===void 0?y+1:_.inputIndexEnd,b=y<0?p.inputNames.length+y:y;if(_.type==="tensor")return m(p.inputNames[b],h,g,v);if(_.type==="tensors"){const N=p.inputs.slice(y,x);return p.inputNames.slice(y,x).filter((F,S)=>{var I;return((I=N[S])===null||I===void 0?void 0:I.op)!=="NoOp"}).map(F=>m(F,h,g,v))}const C=m(p.inputNames[b],h,g,v),w=C.dataSync();return _.type==="number"?w[0]:r.util.toNestedArray(C.shape,w)}const k=p.attrParams[u];return k&&k.value}function m(u,p,h,g){const[v,_]=n(u,h);if(g!=null){const y=g.getHashTableHandleByName(v);if(y!=null)return y}const k=h.currentContextIds.find(y=>!!p[o(v,y)]);return k!==void 0?p[o(v,k)][_]:void 0}function f(u,p,h){return p[o(u,h.currentContextId)]}function i(u,p){const[h,g,v]=n(u,p);return[o(h,p&&p.currentContextId),g,v]}function o(u,p){return p?`${u}-${p}`:u}function n(u,p){if(u==="")return["",0,void 0];const h=p!=null&&p.parseNodeNameCache!=null;if(h){const _=p.parseNodeNameCache.get(u);if(_!=null)return _}const g=u.split(":");let v;if(g.length===1)v=[u,0,void 0];else{const _=g[0],k=g.length===3?g[1]:void 0,y=Number(g[g.length-1]);v=[_,y,k]}return h&&p.parseNodeNameCache.set(u,v),v}function c(u,p){const h=[];for(let g=0;g<u.length;g+=p)h.push(u.slice(g,g+p));return h}function a(u,p,h){let g=d("pad",u,p,h);if(g==="explicit"){g=d("explicitPaddings",u,p,h);const v=[[0,0],[0,0],[0,0],[0,0]];for(let _=0;_<4;_++)v[_][0]=g[_*2],v[_][1]=g[_*2+1];return v}return g}function l(u){return u.kept?u:(0,r.clone)(u)}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cLUOs:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cQPEG:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eBWmx:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],h7JFl:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5rOSv":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4SdBb":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b4HGj:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fH4jH:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],atW4L:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2jMZj":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eQGYv:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eDtGi:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iNQCm:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6fZOP":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3y6nN":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9dp3I":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6cSEy":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],idGlX:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jFKjy:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"json",()=>r);const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5QJH1":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"GraphExecutor",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../operations/executors/utils"),m=e("../operations/operation_executor"),f=e("./execution_context"),i=e("./model_analysis");class o{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(c){const a=Object.keys(c).map(l=>c[l].map(u=>u.id));this._weightIds=[].concat(...a),this._weightMap=c}set resourceManager(c){this._resourceManager=c}get inputs(){return this._inputs.map(c=>({name:c.name,shape:c.attrParams.shape?c.attrParams.shape.value:void 0,dtype:c.attrParams.dtype?c.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(c=>({name:c.name,shape:c.attrParams.shape?c.attrParams.shape.value:void 0,dtype:c.attrParams.dtype?c.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(c=>c.signatureKey||c.name)}get outputNodes(){return this._outputs.map(c=>{const a=c.signatureKey||c.name;return c.defaultOutput?`${a}:${c.defaultOutput}`:a})}get functions(){return Object.keys(this._functions).reduce((c,a)=>(c[a]=this._functions[a].signature,c),{})}constructor(c,a){this.graph=c,this.parent=a,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=c.outputs,this._inputs=c.inputs,this._initNodes=c.initNodes,this._signature=c.signature,this._functions=c.functions,c.functions!=null&&Object.keys(c.functions).forEach(l=>{this._functionExecutorMap[l]=new o(c.functions[l],this)})}getCompilationKey(c,a){const l=c.map(p=>p.name).sort(),u=a.map(p=>p.name).sort();return l.join(this.SEPARATOR)+"--"+u.join(this.SEPARATOR)}compile(c,a){const l=(0,i.getExecutionSubgraph)(c,a,this.weightMap,this._initNodes),{missingInputs:u,dynamicNode:p,syncInputs:h}=l;if(p!=null)throw new Error(`This execution contains the node '${p.name}', which has the dynamic op '${p.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${h}]`);if(u.length>0){const _=a.map(y=>y.name),k=Object.keys(c);throw new Error(`Cannot compute the outputs [${_}] from the provided inputs [${k}]. Missing the following inputs: [${u}]`)}const g=(0,i.getNodesInTopologicalOrder)(this.graph,l),v=(0,i.getNodeLiveUntilMap)(g);return{orderedNodes:g,nodeLiveUntilMap:v}}cloneAndKeepTensor(c){if(c==null)return null;const a=c.clone();return(0,r.keep)(a),a}cloneTensorList(c){return c?c.map(l=>this.cloneAndKeepTensor(l)):null}cloneTensorMap(c){return Object.fromEntries(Object.entries(c).map(([a,l])=>[a,this.cloneTensorList(l)]))}execute(c,a){this.disposeIntermediateTensors(),c=this.mapInputs(c);const l=Object.keys(c).sort();this.checkInputs(c),this.checkInputShapeAndType(c),a=this.mapOutputs(a),this.checkOutputs(a);const u=l.map(x=>this.graph.nodes[(0,d.parseNodeName)(x)[0]]),p=a.map(x=>(0,d.parseNodeName)(x)[0]),h=new Set(p);let g=p.map(x=>this.graph.nodes[x]);g.length===0&&(g=this._outputs);const v=this.getCompilationKey(u,g);let _=this.compiledMap.get(v);_==null&&(_=this.compile(c,g),this.compiledMap.set(v,_));try{this.keepIntermediateTensors=(0,r.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(x){this.keepIntermediateTensors=!1,console.warn(x.message)}const k={},y={};return(0,r.tidy)(()=>{const x=new f.ExecutionContext(this.weightMap,k,y,this.functionExecutorMap,this.parseNodeNameCache),b=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(c).forEach(T=>{const[F,S]=(0,d.parseNodeName)(T,x),I=[];I[S]=c[T],b[F]=I,this.keepIntermediateTensors&&(this.clonedTensorsMap[F]=this.cloneTensorList(I))});const C=this.getFrozenTensorIds(b),{orderedNodes:w,nodeLiveUntilMap:N}=_;for(const T of w){if(b[T.name])continue;const F=(0,m.executeOp)(T,b,x,this._resourceManager);if(r.util.isPromise(F))throw new Error(`The execution of the op '${T.op}' returned a promise. Please use model.executeAsync() instead.`);b[T.name]=F,this.keepIntermediateTensors&&(this.clonedTensorsMap[T.name]=this.cloneTensorList(F)),this.checkTensorForDisposalWithNodeLiveUntilInfo(T,b,x,C,h,N.get(T.name))}return this.parent==null&&x.dispose(C),a.map(T=>(0,d.getTensor)(T,b,x))})}getFrozenTensorIds(c){const a=[].concat.apply([],Object.keys(c).map(l=>c[l]).map(l=>l.map(u=>u.id)));return new Set(a)}checkTensorForDisposal(c,a,l,u,p,h,g){if(!((0,i.isControlFlow)(a)||h.has(c))){for(const v of l[c])v!=null&&(g[v.id]=(g[v.id]||0)+a.children.length);for(const v of a.inputs){if((0,i.isControlFlow)(v))continue;const _=(0,d.getTensorsForCurrentContext)(v.name,l,u);if(_!=null)for(const k of _){if(!k||k.kept||p.has(k.id))continue;const y=g[k.id];y===1?(k.dispose(),delete g[k.id]):y!=null&&g[k.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(c,a,l,u,p,h){function g(v){return(0,i.isControlFlow)(v)||p.has(v.name)}if(!((0,i.isControlFlow)(c)||h==null))for(const v of h){if(g(v))continue;const _=(0,d.getTensorsForCurrentContext)(v.name,a,l);for(const k of _)!k||k.kept||u.has(k.id)||k.dispose()}}async executeAsync(c,a){return this._executeAsync(c,a)}disposeIntermediateTensors(){!this.clonedTensorsMap||(Object.values(this.clonedTensorsMap).forEach(c=>{for(const a of c)a&&!a.isDisposed&&a.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(c,a,l=!1,u={},p={}){this.disposeIntermediateTensors(),l||(c=this.mapInputs(c),this.checkInputs(c),this.checkInputShapeAndType(c),a=this.mapOutputs(a),this.checkOutputs(a));try{this.keepIntermediateTensors=(0,r.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(x){this.keepIntermediateTensors=!1,console.warn(x.message)}const h=new f.ExecutionContext(this.weightMap,u,p,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const g=await this.executeWithControlFlow(c,h,a,l),v=a.map(x=>(0,d.getTensor)(x,g,h)),_=v.map(x=>x.id),k=Object.keys(c).map(x=>c[x].id),y=new Set([..._,...k,...this.weightIds]);return Object.values(g).forEach(x=>{x.forEach(b=>{b&&!b.isDisposed&&!y.has(b.id)&&b.dispose()})}),this.parent==null&&h.dispose(y),v}async executeFunctionAsync(c,a,l){const u=c.reduce((p,h,g)=>(p[this.inputs[g].name]=h,p),{});return this._executeAsync(u,this.outputNodes,!0,a,l)}async executeWithControlFlow(c,a,l,u){const p=Object.keys(c),h=p.map(I=>this.graph.nodes[(0,d.parseNodeName)(I)[0]]),g=l.map(I=>(0,d.parseNodeName)(I)[0]),v=new Set(g);let _=g.map(I=>this.graph.nodes[I]);_.length===0&&(_=this._outputs);const{usedNodes:k,missingInputs:y,dynamicNode:x,syncInputs:b}=(0,i.getExecutionSubgraph)(c,_,this.weightMap,this._initNodes),C=[...h,...this.graph.weights,...this._initNodes||[]].map(I=>({node:I,contexts:a.currentContext})),w=Object.assign({},this.weightMap);Object.keys(c).forEach(I=>{const[j,D]=(0,d.parseNodeName)(I),O=[];O[D]=c[I],w[j]=O});const N={},T=this.getFrozenTensorIds(w),F={};for(;C.length>0;){const I=this.processStack(h,C,a,w,F,T,v,N,k);await Promise.all(I)}x==null&&!u&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const S=_.filter(I=>!(0,i.isControlFlow)(I)&&!(0,d.getTensor)(I.name,w,a)).map(I=>I.name);if(S.length>0){let I="";throw x!=null&&(I=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${b}]`),new Error(`Cannot compute the outputs [${S}] from the provided inputs [${p}]. Consider providing the following inputs: [${y}]. ${I}`)}return w}processStack(c,a,l,u,p,h,g,v,_){const k=[];for(;a.length>0;){const y=a.pop();l.currentContext=y.contexts;let x="";if(y.node.op==="Enter"&&(0,d.getParamValue)("isConstant",y.node,u,l)&&([x]=(0,d.getNodeNameAndIndex)(y.node.name,l)),u[y.node.name]==null){const b=(0,m.executeOp)(y.node,u,l,this._resourceManager);x||([x]=(0,d.getNodeNameAndIndex)(y.node.name,l));const C=l.currentContext;r.util.isPromise(b)?k.push(b.then(w=>(u[x]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(w)),l.currentContext=C,this.checkTensorForDisposal(x,y.node,u,l,h,g,v),this.processChildNodes(y.node,a,l,u,p,_),w))):(u[x]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(b)),this.checkTensorForDisposal(x,y.node,u,l,h,g,v),this.processChildNodes(y.node,a,l,u,p,_))}else this.processChildNodes(y.node,a,l,u,p,_)}return k}processChildNodes(c,a,l,u,p,h){c.children.forEach(g=>{const[v]=(0,d.getNodeNameAndIndex)(g.name,l);p[v]||!h.has(g.name)||(g.op==="Merge"?g.inputNames.some(_=>!!(0,d.getTensor)(_,u,l))&&(p[v]=!0,a.push({contexts:l.currentContext,node:g})):g.inputNames.every(_=>!!(0,d.getTensor)(_,u,l))&&(p[v]=!0,a.push({contexts:l.currentContext,node:g})))})}dispose(){Object.keys(this.weightMap).forEach(c=>this.weightMap[c].forEach(a=>a.dispose()))}checkInputShapeAndType(c){Object.keys(c).forEach(a=>{const l=c[a],[u]=(0,d.parseNodeName)(a),p=this.graph.nodes[u];if(p.attrParams.shape&&p.attrParams.shape.value){const h=p.attrParams.shape.value,g=h.length===l.shape.length&&l.shape.every((v,_)=>h[_]===-1||h[_]===v);r.util.assert(g,()=>`The shape of dict['${p.name}'] provided in model.execute(dict) must be [${h}], but was [${l.shape}]`)}p.attrParams.dtype&&p.attrParams.dtype.value&&r.util.assert(l.dtype===p.attrParams.dtype.value,()=>`The dtype of dict['${p.name}'] provided in model.execute(dict) must be ${p.attrParams.dtype.value}, but was ${l.dtype}`)})}mapInputs(c){var a,l;const u={};for(const p in c){const h=(l=(a=this._signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[p];h!=null?u[h.name]=c[p]:u[p]=c[p]}return u}checkInputs(c){const a=Object.keys(c).filter(l=>{const[u]=(0,d.parseNodeName)(l);return this.graph.nodes[u]==null});if(a.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${a}] that are not part of graph`)}mapOutputs(c){return c.map(a=>{var l,u;const p=(u=(l=this._signature)===null||l===void 0?void 0:l.outputs)===null||u===void 0?void 0:u[a];return p!=null?p.name:a},{})}checkOutputs(c){c.forEach(a=>{const[l]=(0,d.parseNodeName)(a);if(!this.graph.nodes[l])throw new Error(`The output '${a}' is not found in the graph`)})}}},{"@tensorflow/tfjs-core":"fqGP4","../operations/executors/utils":"8WeA1","../operations/operation_executor":"6I3KL","./execution_context":"iEoQc","./model_analysis":"71o8q","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6I3KL":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>T);var r=e("@tensorflow/tfjs-core"),d=e("./custom_op/node_value_impl"),m=e("./custom_op/register"),f=e("./executors/arithmetic_executor"),i=e("./executors/basic_math_executor"),o=e("./executors/control_executor"),n=e("./executors/convolution_executor"),c=e("./executors/creation_executor"),a=e("./executors/dynamic_executor"),l=e("./executors/evaluation_executor"),u=e("./executors/graph_executor"),p=e("./executors/hash_table_executor"),h=e("./executors/image_executor"),g=e("./executors/logical_executor"),v=e("./executors/matrices_executor"),_=e("./executors/normalization_executor"),k=e("./executors/ragged_executor"),y=e("./executors/reduction_executor"),x=e("./executors/slice_join_executor"),b=e("./executors/sparse_executor"),C=e("./executors/spectral_executor"),w=e("./executors/string_executor"),N=e("./executors/transformation_executor");function T(F,S,I,j,D=r.tidy){const O=(($,P,R)=>{switch($.category){case"arithmetic":return D(()=>f.executeOp($,P,R));case"basic_math":return D(()=>i.executeOp($,P,R));case"control":return o.executeOp($,P,R);case"convolution":return D(()=>n.executeOp($,P,R));case"creation":return D(()=>c.executeOp($,P,R));case"dynamic":return a.executeOp($,P,R);case"evaluation":return D(()=>l.executeOp($,P,R));case"image":return D(()=>h.executeOp($,P,R));case"graph":return D(()=>u.executeOp($,P,R));case"logical":return D(()=>g.executeOp($,P,R));case"matrices":return D(()=>v.executeOp($,P,R));case"normalization":return D(()=>_.executeOp($,P,R));case"ragged":return D(()=>k.executeOp($,P,R));case"reduction":return D(()=>y.executeOp($,P,R));case"slice_join":return D(()=>x.executeOp($,P,R));case"sparse":return D(()=>b.executeOp($,P,R));case"spectral":return D(()=>C.executeOp($,P,R));case"string":return D(()=>w.executeOp($,P,R));case"transformation":return D(()=>N.executeOp($,P,R));case"hash_table":return p.executeOp($,P,R,j);case"custom":const A=(0,m.getRegisteredOp)($.op);if(A&&A.customExecutor)return A.customExecutor(new d.NodeValueImpl($,P,R));throw TypeError(`Custom op ${$.op} is not registered.`);default:throw TypeError(`Unknown op '${$.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(F,S,I);return r.util.isPromise(O)?O.then($=>[].concat($)):[].concat(O)}},{"@tensorflow/tfjs-core":"fqGP4","./custom_op/node_value_impl":"1VeII","./custom_op/register":"aCdfb","./executors/arithmetic_executor":"9v0Wf","./executors/basic_math_executor":"4LTNB","./executors/control_executor":"lvhZu","./executors/convolution_executor":"k3e2m","./executors/creation_executor":"10Dek","./executors/dynamic_executor":"jnTat","./executors/evaluation_executor":"8wOdO","./executors/graph_executor":"lKiez","./executors/hash_table_executor":"oBFC6","./executors/image_executor":"hZsCg","./executors/logical_executor":"6DMRi","./executors/matrices_executor":"gdRbg","./executors/normalization_executor":"anmI3","./executors/ragged_executor":"5lY3c","./executors/reduction_executor":"lkb56","./executors/slice_join_executor":"7zCjY","./executors/sparse_executor":"9GN9q","./executors/spectral_executor":"E9NGm","./executors/string_executor":"1N5zb","./executors/transformation_executor":"4Dj4S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1VeII":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"NodeValueImpl",()=>m);var r=e("../executors/utils"),d=e("../operation_mapper");class m{constructor(i,o,n){this.node=i,this.tensorMap=o,this.context=n,this.inputs=[],this.attrs={},this.inputs=i.inputNames.map(c=>this.getInput(c)),i.rawAttrs!=null&&(this.attrs=Object.keys(i.rawAttrs).reduce((c,a)=>(c[a]=this.getAttr(a),c),{}))}getInput(i){return(0,r.getTensor)(i,this.tensorMap,this.context)}getAttr(i,o){const n=this.node.rawAttrs[i];if(n.tensor!=null)return(0,r.getTensor)(i,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return(0,d.getNumberParam)(this.node.rawAttrs,i,o);if(n.s!=null)return(0,d.getStringParam)(this.node.rawAttrs,i,o);if(n.b!=null)return(0,d.getBoolParam)(this.node.rawAttrs,i,o);if(n.shape!=null)return(0,d.getTensorShapeParam)(this.node.rawAttrs,i,o);if(n.type!=null)return(0,d.getDtypeParam)(this.node.rawAttrs,i,o);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return(0,d.getNumericArrayParam)(this.node.rawAttrs,i,o);if(n.list.s!=null)return(0,d.getStringArrayParam)(this.node.rawAttrs,i,o);if(n.list.shape!=null)return(0,d.getTensorShapeArrayParam)(this.node.rawAttrs,i,o);if(n.list.b!=null)return(0,d.getBoolArrayParam)(this.node.rawAttrs,i,o);if(n.list.type!=null)return(0,d.getDtypeArrayParam)(this.node.rawAttrs,i,o)}return o}}},{"../executors/utils":"8WeA1","../operation_mapper":"9a5A8","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9v0Wf":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"BiasAdd":case"AddV2":case"Add":return[c.add((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"AddN":return[c.addN((0,d.getParamValue)("tensors",i,o,n))];case"FloorMod":case"Mod":return[c.mod((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"Mul":return[c.mul((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"RealDiv":case"Div":return[c.div((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"DivNoNan":return[c.divNoNan((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"FloorDiv":return[c.floorDiv((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"Sub":return[c.sub((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"Minimum":return[c.minimum((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"Maximum":return[c.maximum((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"Pow":return[c.pow((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"SquaredDifference":return[c.squaredDifference((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="arithmetic"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2aPja":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s);var r=e("./ops");t.exportAll(r,s)},{"./ops":"iu1Y6","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4LTNB":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"Abs":case"ComplexAbs":return[c.abs((0,d.getParamValue)("x",i,o,n))];case"Acos":return[c.acos((0,d.getParamValue)("x",i,o,n))];case"Acosh":return[c.acosh((0,d.getParamValue)("x",i,o,n))];case"Asin":return[c.asin((0,d.getParamValue)("x",i,o,n))];case"Asinh":return[c.asinh((0,d.getParamValue)("x",i,o,n))];case"Atan":return[c.atan((0,d.getParamValue)("x",i,o,n))];case"Atan2":return[c.atan2((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("y",i,o,n))];case"Atanh":return[c.atanh((0,d.getParamValue)("x",i,o,n))];case"Ceil":return[c.ceil((0,d.getParamValue)("x",i,o,n))];case"Complex":return[c.complex((0,d.getParamValue)("real",i,o,n),(0,d.getParamValue)("imag",i,o,n))];case"Cos":return[c.cos((0,d.getParamValue)("x",i,o,n))];case"Cosh":return[c.cosh((0,d.getParamValue)("x",i,o,n))];case"Elu":return[c.elu((0,d.getParamValue)("x",i,o,n))];case"Erf":return[c.erf((0,d.getParamValue)("x",i,o,n))];case"Exp":return[c.exp((0,d.getParamValue)("x",i,o,n))];case"Expm1":return[c.expm1((0,d.getParamValue)("x",i,o,n))];case"Floor":return[c.floor((0,d.getParamValue)("x",i,o,n))];case"Log":return[c.log((0,d.getParamValue)("x",i,o,n))];case"Log1p":return[c.log1p((0,d.getParamValue)("x",i,o,n))];case"Imag":return[c.imag((0,d.getParamValue)("x",i,o,n))];case"Neg":return[c.neg((0,d.getParamValue)("x",i,o,n))];case"Reciprocal":return[c.reciprocal((0,d.getParamValue)("x",i,o,n))];case"Real":return[c.real((0,d.getParamValue)("x",i,o,n))];case"Relu":return[c.relu((0,d.getParamValue)("x",i,o,n))];case"Round":return[c.round((0,d.getParamValue)("x",i,o,n))];case"Selu":return[c.selu((0,d.getParamValue)("x",i,o,n))];case"Sigmoid":return[c.sigmoid((0,d.getParamValue)("x",i,o,n))];case"Sin":return[c.sin((0,d.getParamValue)("x",i,o,n))];case"Sign":return[c.sign((0,d.getParamValue)("x",i,o,n))];case"Sinh":return[c.sinh((0,d.getParamValue)("x",i,o,n))];case"Softplus":return[c.softplus((0,d.getParamValue)("x",i,o,n))];case"Sqrt":return[c.sqrt((0,d.getParamValue)("x",i,o,n))];case"Square":return[c.square((0,d.getParamValue)("x",i,o,n))];case"Tanh":return[c.tanh((0,d.getParamValue)("x",i,o,n))];case"Tan":return[c.tan((0,d.getParamValue)("x",i,o,n))];case"ClipByValue":return[c.clipByValue((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("clipValueMin",i,o,n),(0,d.getParamValue)("clipValueMax",i,o,n))];case"Relu6":return[c.relu6((0,d.getParamValue)("x",i,o,n))];case"Rsqrt":return[c.rsqrt((0,d.getTensor)(i.inputNames[0],o,n))];case"LeakyRelu":return[c.leakyRelu((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("alpha",i,o,n))];case"Prelu":return[c.prelu((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("alpha",i,o,n))];case"IsNan":return[c.isNaN((0,d.getTensor)(i.inputNames[0],o,n))];case"IsInf":return[c.isInf((0,d.getTensor)(i.inputNames[0],o,n))];case"IsFinite":return[c.isFinite((0,d.getTensor)(i.inputNames[0],o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="basic_math"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lvhZu:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>i),t.export(s,"CATEGORY",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../../executor/tensor_array"),m=e("../../executor/tensor_list"),f=e("./utils");const i=async(n,c,a)=>{switch(n.op){case"If":case"StatelessIf":{const l=(0,f.getParamValue)("thenBranch",n,c,a),u=(0,f.getParamValue)("elseBranch",n,c,a),p=(0,f.getParamValue)("cond",n,c,a),h=(0,f.getParamValue)("args",n,c,a);return(await p.data())[0]?a.functionMap[l].executeFunctionAsync(h,a.tensorArrayMap,a.tensorListMap):a.functionMap[u].executeFunctionAsync(h,a.tensorArrayMap,a.tensorListMap)}case"While":case"StatelessWhile":{const l=(0,f.getParamValue)("body",n,c,a),u=(0,f.getParamValue)("cond",n,c,a),p=(0,f.getParamValue)("args",n,c,a),h=await a.functionMap[u].executeFunctionAsync(p,a.tensorArrayMap,a.tensorListMap),g=p.map(k=>k.id);let v=await h[0].data();h.forEach(k=>{!k.kept&&g.indexOf(k.id)===-1&&k.dispose()});let _=p;for(;v[0];){const k=_;_=await a.functionMap[l].executeFunctionAsync(_,a.tensorArrayMap,a.tensorListMap);const y=_.map(b=>b.id);k.forEach(b=>{!b.kept&&g.indexOf(b.id)===-1&&y.indexOf(b.id)===-1&&b.dispose()});const x=await a.functionMap[u].executeFunctionAsync(_,a.tensorArrayMap,a.tensorListMap);v=await x[0].data(),x.forEach(b=>{!b.kept&&g.indexOf(b.id)===-1&&y.indexOf(b.id)===-1&&b.dispose()})}return _}case"LoopCond":{const l=(0,f.getParamValue)("pred",n,c,a);return[(0,f.cloneTensor)(l)]}case"Switch":{const l=(0,f.getParamValue)("pred",n,c,a);let u=(0,f.getParamValue)("data",n,c,a);return u.kept||(u=(0,f.cloneTensor)(u)),(await l.data())[0]?[void 0,u]:[u,void 0]}case"Merge":{const l=n.inputNames.find(u=>(0,f.getTensor)(u,c,a)!==void 0);if(l){const u=(0,f.getTensor)(l,c,a);return[(0,f.cloneTensor)(u)]}return}case"Enter":{const l=(0,f.getParamValue)("frameName",n,c,a),u=(0,f.getParamValue)("tensor",n,c,a);return a.enterFrame(l),[(0,f.cloneTensor)(u)]}case"Exit":{const l=(0,f.getParamValue)("tensor",n,c,a);return a.exitFrame(),[(0,f.cloneTensor)(l)]}case"NextIteration":{const l=(0,f.getParamValue)("tensor",n,c,a);return a.nextIteration(),[(0,f.cloneTensor)(l)]}case"TensorArrayV3":{const l=(0,f.getParamValue)("size",n,c,a),u=(0,f.getParamValue)("dtype",n,c,a),p=(0,f.getParamValue)("elementShape",n,c,a),h=(0,f.getParamValue)("dynamicSize",n,c,a),g=(0,f.getParamValue)("clearAfterRead",n,c,a),v=(0,f.getParamValue)("identicalElementShapes",n,c,a),_=(0,f.getParamValue)("name",n,c,a),k=new d.TensorArray(_,u,l,p,v,h,g);return a.addTensorArray(k),[k.idTensor,(0,r.scalar)(1)]}case"TensorArrayWriteV3":{const l=(0,f.getParamValue)("tensorArrayId",n,c,a),u=(0,f.getParamValue)("index",n,c,a),p=(0,f.getParamValue)("tensor",n,c,a),h=a.getTensorArray(l.id);return h.write(u,p),[h.idTensor]}case"TensorArrayReadV3":{const l=(0,f.getParamValue)("tensorArrayId",n,c,a),u=(0,f.getParamValue)("index",n,c,a);return[a.getTensorArray(l.id).read(u)]}case"TensorArrayGatherV3":{const l=(0,f.getParamValue)("tensorArrayId",n,c,a),u=(0,f.getParamValue)("indices",n,c,a),p=(0,f.getParamValue)("dtype",n,c,a);return[a.getTensorArray(l.id).gather(u,p)]}case"TensorArrayScatterV3":{const l=(0,f.getParamValue)("tensorArrayId",n,c,a),u=(0,f.getParamValue)("indices",n,c,a),p=(0,f.getParamValue)("tensor",n,c,a),h=a.getTensorArray(l.id);return h.scatter(u,p),[h.idTensor]}case"TensorArrayConcatV3":{const l=(0,f.getParamValue)("tensorArrayId",n,c,a),u=a.getTensorArray(l.id),p=(0,f.getParamValue)("dtype",n,c,a);return[u.concat(p)]}case"TensorArraySplitV3":{const l=(0,f.getParamValue)("tensorArrayId",n,c,a),u=(0,f.getParamValue)("tensor",n,c,a),p=(0,f.getParamValue)("lengths",n,c,a),h=a.getTensorArray(l.id);return h.split(p,u),[h.idTensor]}case"TensorArraySizeV3":{const l=(0,f.getParamValue)("tensorArrayId",n,c,a),u=a.getTensorArray(l.id);return[(0,r.scalar)(u.size(),"int32")]}case"TensorArrayCloseV3":{const l=(0,f.getParamValue)("tensorArrayId",n,c,a),u=a.getTensorArray(l.id);return u.clearAndClose(),[u.idTensor]}case"TensorListSetItem":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=(0,f.getParamValue)("index",n,c,a),p=(0,f.getParamValue)("tensor",n,c,a),h=a.getTensorList(l.id);return h.setItem(u,p),[h.idTensor]}case"TensorListGetItem":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=(0,f.getParamValue)("index",n,c,a),p=(0,f.getParamValue)("elementShape",n,c,a),h=(0,f.getParamValue)("elementDType",n,c,a);return[a.getTensorList(l.id).getItem(u,p,h)]}case"TensorListScatterV2":case"TensorListScatter":{const l=(0,f.getParamValue)("indices",n,c,a),u=(0,f.getParamValue)("tensor",n,c,a),p=(0,f.getParamValue)("elementShape",n,c,a),h=(0,f.getParamValue)("numElements",n,c,a),g=(0,m.scatter)(u,l,p,h);return a.addTensorList(g),[g.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const l=(0,f.getParamValue)("elementShape",n,c,a),u=(0,f.getParamValue)("elementDType",n,c,a);let p;n.op==="TensorListReserve"?p="numElements":p="maxNumElements";const h=(0,f.getParamValue)(p,n,c,a),g=n.op==="TensorListReserve"?-1:h,v=(0,m.reserve)(l,u,h,g);return a.addTensorList(v),[v.idTensor]}case"TensorListGather":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=(0,f.getParamValue)("indices",n,c,a),p=(0,f.getParamValue)("elementShape",n,c,a),h=(0,f.getParamValue)("elementDType",n,c,a);return[a.getTensorList(l.id).gather(u,h,p)]}case"TensorListStack":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=(0,f.getParamValue)("elementShape",n,c,a),p=(0,f.getParamValue)("elementDType",n,c,a),h=(0,f.getParamValue)("numElements",n,c,a);return[a.getTensorList(l.id).stack(u,p,h)]}case"TensorListFromTensor":{const l=(0,f.getParamValue)("tensor",n,c,a),u=(0,f.getParamValue)("elementShape",n,c,a),p=(0,f.getParamValue)("elementDType",n,c,a),h=(0,m.fromTensor)(l,u,p);return a.addTensorList(h),[h.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=a.getTensorList(l.id),p=(0,f.getParamValue)("dtype",n,c,a),h=(0,f.getParamValue)("elementShape",n,c,a);return[u.concat(p,h)]}case"TensorListPushBack":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=(0,f.getParamValue)("tensor",n,c,a),p=a.getTensorList(l.id);return p.pushBack(u),[p.idTensor]}case"TensorListPopBack":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=(0,f.getParamValue)("elementShape",n,c,a),p=(0,f.getParamValue)("elementDType",n,c,a);return[a.getTensorList(l.id).popBack(u,p)]}case"TensorListSplit":{const l=(0,f.getParamValue)("tensor",n,c,a),u=(0,f.getParamValue)("elementShape",n,c,a),p=(0,f.getParamValue)("lengths",n,c,a),h=(0,m.split)(l,p,u);return a.addTensorList(h),[h.idTensor]}case"TensorListLength":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=a.getTensorList(l.id);return[(0,r.scalar)(u.size(),"int32")]}case"TensorListResize":{const l=(0,f.getParamValue)("tensorListId",n,c,a),u=(0,f.getParamValue)("size",n,c,a),h=a.getTensorList(l.id).resize(u);return a.addTensorList(h),[h.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}},o="control"},{"@tensorflow/tfjs-core":"fqGP4","../../executor/tensor_array":"6nTfb","../../executor/tensor_list":"4l2C7","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6nTfb":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TensorArray",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./tensor_utils");class m{constructor(i,o,n,c,a,l,u){this.name=i,this.dtype=o,this.maxSize=n,this.elementShape=c,this.identicalElementShapes=a,this.dynamicSize=l,this.clearAfterRead=u,this.tensors=[],this.closed_=!1,this.idTensor=(0,r.scalar)(0),(0,r.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(i){this.tensors.forEach(o=>{(i==null||!i.has(o.tensor.id))&&o.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(i){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(i<0||i>=this.size())throw new Error(`Tried to read from index ${i}, but array size is: ${this.size()}`);const o=this.tensors[i];if(o.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${i} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(o.cleared=!0),o.read=!0,o.tensor}readMany(i){return i.map(o=>this.read(o))}write(i,o){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(i<0||!this.dynamicSize&&i>=this.maxSize)throw new Error(`Tried to write to index ${i}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[i]||{};if(o.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${i},
          because the value dtype is ${o.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=o.shape),(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,o.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${i}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${i}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${i}, because it has already been written.`);n.tensor=o,(0,r.keep)(o),n.written=!0,this.tensors[i]=n}writeMany(i,o){if(i.length!==o.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${i.length} is not the same as tensors size: ${o.length}.`);i.forEach((n,c)=>this.write(n,o[c]))}gather(i,o){if(!!o&&o!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${o}`);if(i)i=i.slice(0,this.size());else{i=[];for(let c=0;c<this.size();c++)i.push(c)}if(i.length===0)return(0,r.tensor)([],[0].concat(this.elementShape));const n=this.readMany(i);return(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,r.stack)(n,0)}concat(i){if(!!i&&i!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${i}`);if(this.size()===0)return(0,r.tensor)([],[0].concat(this.elementShape));const o=[];for(let c=0;c<this.size();c++)o.push(c);const n=this.readMany(o);return(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,r.concat)(n,0)}scatter(i,o){if(o.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${o.dtype}`);if(i.length!==o.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${i.length} vs. ${o.shape[0]}`);const n=Math.max(...i);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(i,(0,r.unstack)(o,0))}split(i,o){if(o.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${o.dtype}`);let n=0;const c=i.map(p=>(n+=p,n));if(n!==o.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${o.shape}`);if(!this.dynamicSize&&i.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${i.length}), and the TensorArray is not marked as dynamically resizeable`);const a=n===0?0:o.size/n,l=[];(0,r.tidy)(()=>{o=(0,r.reshape)(o,[1,n,a]);for(let p=0;p<i.length;++p){const h=p===0?0:c[p-1],g=[0,h,0],v=[1,i[p],a];l[p]=(0,r.reshape)((0,r.slice)(o,g,v),this.elementShape)}return l});const u=[];for(let p=0;p<i.length;p++)u[p]=p;this.writeMany(u,l)}}},{"@tensorflow/tfjs-core":"fqGP4","./tensor_utils":"k0gP9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k0gP9:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"assertShapesMatchAllowUndefinedSize",()=>d),t.export(s,"fullDefinedShape",()=>m),t.export(s,"inferElementShape",()=>f),t.export(s,"mergeElementShape",()=>i);var r=e("@tensorflow/tfjs-core");function d(o,n,c=""){if(!(typeof o=="number"||typeof n=="number")){r.util.assert(o.length===n.length,()=>c+` Shapes ${o} and ${n} must match`);for(let a=0;a<o.length;a++){const l=o[a],u=n[a];r.util.assert(l<0||u<0||l===u,()=>c+` Shapes ${o} and ${n} must match`)}}}function m(o){return!(typeof o=="number"||o.some(n=>n<0))}function f(o,n,c){let a=i(o,c);const l=!m(a);if(l&&n.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(l&&n.forEach(u=>{a=i(u.shape,a)}),!m(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function i(o,n){if(typeof o=="number")return n;if(typeof n=="number")return o;if(o.length!==n.length)throw new Error(`Incompatible ranks during merge: ${o} vs. ${n}`);const c=[];for(let a=0;a<o.length;++a){const l=o[a],u=n[a];if(l>=0&&u>=0&&l!==u)throw new Error(`Incompatible shape during merge: ${o} vs. ${n}`);c[a]=l>=0?l:u}return c}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4l2C7":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TensorList",()=>m),t.export(s,"fromTensor",()=>f),t.export(s,"reserve",()=>i),t.export(s,"scatter",()=>o),t.export(s,"split",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("./tensor_utils");class m{get id(){return this.idTensor.id}constructor(a,l,u,p=-1){this.tensors=a,this.elementShape=l,this.elementDtype=u,a!=null&&a.forEach(h=>{if(u!==h.dtype)throw new Error(`Invalid data types; op elements ${u}, but list elements ${h.dtype}`);(0,d.assertShapesMatchAllowUndefinedSize)(l,h.shape,"TensorList shape mismatch: "),(0,r.keep)(h)}),this.idTensor=(0,r.scalar)(0),this.maxNumElements=p,(0,r.keep)(this.idTensor)}copy(){return new m([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(a){this.tensors.forEach(l=>{(a==null||!a.has(l.id))&&l.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(a,l,u=-1){if(l!==this.elementDtype)throw new Error(`Invalid data types; op elements ${l}, but list elements ${this.elementDtype}`);if(u!==-1&&this.tensors.length!==u)throw new Error(`Operation expected a list with ${u} elements but got a list with ${this.tensors.length} elements.`);(0,d.assertShapesMatchAllowUndefinedSize)(a,this.elementShape,"TensorList shape mismatch: ");const p=(0,d.inferElementShape)(this.elementShape,this.tensors,a);return(0,r.tidy)(()=>{const h=this.tensors.map(g=>(0,r.reshape)(g,p));return(0,r.stack)(h,0)})}popBack(a,l){if(l!==this.elementDtype)throw new Error(`Invalid data types; op elements ${l}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const u=(0,d.inferElementShape)(this.elementShape,this.tensors,a),p=this.tensors.pop();return p.kept=!1,(0,d.assertShapesMatchAllowUndefinedSize)(p.shape,a,"TensorList shape mismatch: "),(0,r.reshape)(p,u)}pushBack(a){if(a.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a.dtype}, but list elements ${this.elementDtype}`);if((0,d.assertShapesMatchAllowUndefinedSize)(a.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,r.keep)(a),this.tensors.push(a)}resize(a){if(a<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${a}`);if(this.maxNumElements!==-1&&a>this.maxNumElements)throw new Error(`TensorListResize input size ${a} is greater maxNumElement ${this.maxNumElements}.`);const l=new m([],this.elementShape,this.elementDtype,this.maxNumElements);l.tensors.length=a;for(let u=0;u<Math.min(this.tensors.length,a);++u)l.tensors[u]=this.tensors[u];return l}getItem(a,l,u){if(u!==this.elementDtype)throw new Error(`Invalid data types; op elements ${u}, but list elements ${this.elementDtype}`);if(a<0||a>this.tensors.length)throw new Error(`Trying to access element ${a} in a list with ${this.tensors.length} elements.`);if(this.tensors[a]==null)throw new Error(`element at index ${a} is null.`);(0,d.assertShapesMatchAllowUndefinedSize)(this.tensors[a].shape,l,"TensorList shape mismatch: ");const p=(0,d.inferElementShape)(this.elementShape,this.tensors,l);return(0,r.reshape)(this.tensors[a],p)}setItem(a,l){if(l.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${l.dtype}, but list elements ${this.elementDtype}`);if(a<0||this.maxNumElements!==-1&&a>=this.maxNumElements)throw new Error(`Trying to set element ${a} in a list with max ${this.maxNumElements} elements.`);(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,l.shape,"TensorList shape mismatch: "),(0,r.keep)(l),this.tensors[a]!=null&&(this.tensors[a].kept=!1),this.tensors[a]=l}gather(a,l,u){if(l!==this.elementDtype)throw new Error(`Invalid data types; op elements ${l}, but list elements ${this.elementDtype}`);(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,u,"TensorList shape mismatch: "),a=a.slice(0,this.size());const p=(0,d.inferElementShape)(this.elementShape,this.tensors,u);return a.length===0?(0,r.tensor)([],[0].concat(p)):(0,r.tidy)(()=>{const h=a.map(g=>(0,r.reshape)(this.tensors[g],p));return(0,r.stack)(h,0)})}concat(a,l){if(!!a&&a!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${a}`);(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,l,"TensorList shape mismatch: ");const u=(0,d.inferElementShape)(this.elementShape,this.tensors,l);return this.size()===0?(0,r.tensor)([],[0].concat(u)):(0,r.tidy)(()=>{const p=this.tensors.map(h=>(0,r.reshape)(h,u));return(0,r.concat)(p,0)})}}function f(c,a,l){const u=c.dtype;if(c.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${c.shape}`);if(c.dtype!==l)throw new Error(`Invalid data types; op elements ${c.dtype}, but list elements ${l}`);const p=c.shape.slice(1);(0,d.assertShapesMatchAllowUndefinedSize)(p,a,"TensorList shape mismatch: ");const h=(0,r.unstack)(c);return new m(h,a,u)}function i(c,a,l,u){return new m([],c,a,u)}function o(c,a,l,u){if(a.length!==c.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${a.length} vs. ${c.shape[0]}`);const p=Math.max(...a);if(u!=null&&u!==-1&&p>=u)throw new Error(`Max index must be < array size (${p}  vs. ${u})`);const h=new m([],l,c.dtype,u),g=(0,r.unstack)(c,0);return a.forEach((v,_)=>{h.setItem(v,g[_])}),h}function n(c,a,l){let u=0;const p=a.map(y=>(u+=y,u));if(u!==c.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${u}, and tensor's shape is: ${c.shape}`);const h=c.shape.slice(1),g=(0,d.mergeElementShape)(h,l),v=u===0?0:c.size/u,_=(0,r.tidy)(()=>{const y=[];c=(0,r.reshape)(c,[1,u,v]);for(let x=0;x<a.length;++x){const b=x===0?0:p[x-1],C=[0,b,0],w=[1,a[x],v];y[x]=(0,r.reshape)((0,r.slice)(c,C,w),g)}return c.dispose(),y}),k=new m([],l,c.dtype,a.length);for(let y=0;y<_.length;y++)k.setItem(y,_[y]);return k}},{"@tensorflow/tfjs-core":"fqGP4","./tensor_utils":"k0gP9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k3e2m:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>f),t.export(s,"CATEGORY",()=>i);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");function m(o,n,c){const[a,l]=(0,d.getParamValue)("fusedOps",o,n,c),u=a==="biasadd",p=!u,h=l==="prelu",g=a==="fusedbatchnorm",v=(0,d.getParamValue)("numArgs",o,n,c);if(u){if(h&&v!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!h&&u&&v!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(g)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const _=(0,d.getParamValue)("strides",o,n,c),k=(0,d.getPadding)(o,n,c),y=(0,d.getParamValue)("dataFormat",o,n,c).toUpperCase(),x=(0,d.getParamValue)("dilations",o,n,c);let[b,C]=(0,d.getParamValue)("args",o,n,c);p&&(C=b,b=void 0);const w=(0,d.getParamValue)("leakyreluAlpha",o,n,c);return{stride:_,pad:k,dataFormat:y,dilations:x,biasArg:b,preluArg:C,activationFunc:l,leakyreluAlpha:w}}const f=(o,n,c,a=r)=>{switch(o.op){case"Conv1D":{const l=(0,d.getParamValue)("stride",o,n,c),u=(0,d.getParamValue)("pad",o,n,c),p=(0,d.getParamValue)("dataFormat",o,n,c).toUpperCase(),h=(0,d.getParamValue)("dilation",o,n,c);return[a.conv1d((0,d.getParamValue)("x",o,n,c),(0,d.getParamValue)("filter",o,n,c),l,u,p,h)]}case"Conv2D":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getPadding)(o,n,c),p=(0,d.getParamValue)("dataFormat",o,n,c).toUpperCase(),h=(0,d.getParamValue)("dilations",o,n,c);return[a.conv2d((0,d.getParamValue)("x",o,n,c),(0,d.getParamValue)("filter",o,n,c),[l[1],l[2]],u,p,[h[1],h[2]])]}case"_FusedConv2D":{const{stride:l,pad:u,dataFormat:p,dilations:h,biasArg:g,preluArg:v,activationFunc:_,leakyreluAlpha:k}=m(o,n,c);return[a.fused.conv2d({x:(0,d.getParamValue)("x",o,n,c),filter:(0,d.getParamValue)("filter",o,n,c),strides:[l[1],l[2]],pad:u,dataFormat:p,dilations:[h[1],h[2]],bias:g,activation:_,preluActivationWeights:v,leakyreluAlpha:k})]}case"FusedDepthwiseConv2dNative":{const{stride:l,pad:u,dataFormat:p,dilations:h,biasArg:g,preluArg:v,activationFunc:_,leakyreluAlpha:k}=m(o,n,c);return[a.fused.depthwiseConv2d({x:(0,d.getParamValue)("x",o,n,c),filter:(0,d.getParamValue)("filter",o,n,c),strides:[l[1],l[2]],pad:u,dataFormat:p,dilations:[h[1],h[2]],bias:g,activation:_,preluActivationWeights:v,leakyreluAlpha:k})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const l=(0,d.getParamValue)("outputShape",o,n,c),u=(0,d.getParamValue)("strides",o,n,c),p=(0,d.getPadding)(o,n,c);return[a.conv2dTranspose((0,d.getParamValue)("x",o,n,c),(0,d.getParamValue)("filter",o,n,c),l,[u[1],u[2]],p)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getPadding)(o,n,c),p=(0,d.getParamValue)("dilations",o,n,c),h=(0,d.getParamValue)("dataFormat",o,n,c).toUpperCase();return[a.depthwiseConv2d((0,d.getParamValue)("input",o,n,c),(0,d.getParamValue)("filter",o,n,c),[l[1],l[2]],u,h,[p[1],p[2]])]}case"Conv3D":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getParamValue)("pad",o,n,c),p=(0,d.getParamValue)("dataFormat",o,n,c).toUpperCase(),h=(0,d.getParamValue)("dilations",o,n,c);return[a.conv3d((0,d.getParamValue)("x",o,n,c),(0,d.getParamValue)("filter",o,n,c),[l[1],l[2],l[3]],u,p,[h[1],h[2],h[3]])]}case"AvgPool":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getParamValue)("pad",o,n,c),p=(0,d.getParamValue)("kernelSize",o,n,c);return[a.avgPool((0,d.getParamValue)("x",o,n,c),[p[1],p[2]],[l[1],l[2]],u)]}case"MaxPool":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getParamValue)("pad",o,n,c),p=(0,d.getParamValue)("kernelSize",o,n,c);return[a.maxPool((0,d.getParamValue)("x",o,n,c),[p[1],p[2]],[l[1],l[2]],u)]}case"MaxPoolWithArgmax":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getParamValue)("pad",o,n,c),p=(0,d.getParamValue)("kernelSize",o,n,c),h=(0,d.getParamValue)("includeBatchInIndex",o,n,c),{result:g,indexes:v}=a.maxPoolWithArgmax((0,d.getParamValue)("x",o,n,c),[p[1],p[2]],[l[1],l[2]],u,h);return[g,v]}case"AvgPool3D":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getParamValue)("pad",o,n,c),p=(0,d.getParamValue)("kernelSize",o,n,c);return[a.avgPool3d((0,d.getParamValue)("x",o,n,c),[p[1],p[2],p[3]],[l[1],l[2],l[3]],u)]}case"MaxPool3D":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getParamValue)("pad",o,n,c),p=(0,d.getParamValue)("kernelSize",o,n,c);return[a.maxPool3d((0,d.getParamValue)("x",o,n,c),[p[1],p[2],p[3]],[l[1],l[2],l[3]],u)]}case"Dilation2D":{const l=(0,d.getParamValue)("strides",o,n,c),u=(0,d.getParamValue)("pad",o,n,c),p=(0,d.getParamValue)("dilations",o,n,c),h=l[1],g=l[2],v=p[1],_=p[2];return[a.dilation2d((0,d.getParamValue)("x",o,n,c),(0,d.getParamValue)("filter",o,n,c),[h,g],u,[v,_],"NHWC")]}default:throw TypeError(`Node type ${o.op} is not implemented`)}},i="convolution"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"10Dek":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"Fill":{const a=(0,d.getParamValue)("shape",i,o,n),l=(0,d.getParamValue)("dtype",i,o,n),u=(0,d.getParamValue)("value",i,o,n);return[c.fill(a,u,l)]}case"LinSpace":{const a=(0,d.getParamValue)("start",i,o,n),l=(0,d.getParamValue)("stop",i,o,n),u=(0,d.getParamValue)("num",i,o,n);return[c.linspace(a,l,u)]}case"Multinomial":{const a=(0,d.getParamValue)("logits",i,o,n),l=(0,d.getParamValue)("numSamples",i,o,n),u=(0,d.getParamValue)("seed",i,o,n);return[c.multinomial(a,l,u)]}case"OneHot":{const a=(0,d.getParamValue)("indices",i,o,n),l=(0,d.getParamValue)("depth",i,o,n),u=(0,d.getParamValue)("onValue",i,o,n),p=(0,d.getParamValue)("offValue",i,o,n),h=(0,d.getParamValue)("dtype",i,o,n);return[c.oneHot(a,l,u,p,h)]}case"Ones":return[c.ones((0,d.getParamValue)("shape",i,o,n),(0,d.getParamValue)("dtype",i,o,n))];case"OnesLike":return[c.onesLike((0,d.getParamValue)("x",i,o,n))];case"RandomStandardNormal":return[c.randomStandardNormal((0,d.getParamValue)("shape",i,o,n),(0,d.getParamValue)("dtype",i,o,n),(0,d.getParamValue)("seed",i,o,n))];case"RandomUniform":return[c.randomUniform((0,d.getParamValue)("shape",i,o,n),(0,d.getParamValue)("minval",i,o,n),(0,d.getParamValue)("maxval",i,o,n),(0,d.getParamValue)("dtype",i,o,n))];case"RandomUniformInt":return[c.randomUniformInt((0,d.getParamValue)("shape",i,o,n),(0,d.getParamValue)("minval",i,o,n),(0,d.getParamValue)("maxval",i,o,n),(0,d.getParamValue)("seed",i,o,n))];case"Range":{const a=(0,d.getParamValue)("start",i,o,n),l=(0,d.getParamValue)("stop",i,o,n),u=(0,d.getParamValue)("step",i,o,n);return[c.range(a,l,u,(0,d.getParamValue)("dtype",i,o,n))]}case"TruncatedNormal":{const a=(0,d.getParamValue)("shape",i,o,n),l=(0,d.getParamValue)("mean",i,o,n),u=(0,d.getParamValue)("stdDev",i,o,n),p=(0,d.getParamValue)("seed",i,o,n);return[c.truncatedNormal(a,l,u,(0,d.getParamValue)("dtype",i,o,n),p)]}case"Zeros":return[c.zeros((0,d.getParamValue)("shape",i,o,n),(0,d.getParamValue)("dtype",i,o,n))];case"ZerosLike":return[c.zerosLike((0,d.getParamValue)("x",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="creation"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jnTat:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>f),t.export(s,"CATEGORY",()=>i);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");function m(o,n,c){const a=(0,d.getParamValue)("boxes",o,n,c),l=(0,d.getParamValue)("scores",o,n,c),u=(0,d.getParamValue)("maxOutputSize",o,n,c),p=(0,d.getParamValue)("iouThreshold",o,n,c),h=(0,d.getParamValue)("scoreThreshold",o,n,c),g=(0,d.getParamValue)("softNmsSigma",o,n,c);return{boxes:a,scores:l,maxOutputSize:u,iouThreshold:p,scoreThreshold:h,softNmsSigma:g}}const f=async(o,n,c,a,l=r)=>{switch(o.op){case"NonMaxSuppressionV5":{const{boxes:u,scores:p,maxOutputSize:h,iouThreshold:g,scoreThreshold:v,softNmsSigma:_}=m(o,n,c),k=await l.image.nonMaxSuppressionWithScoreAsync(u,p,h,g,v,_);return[k.selectedIndices,k.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:u,scores:p,maxOutputSize:h,iouThreshold:g,scoreThreshold:v}=m(o,n,c),_=(0,d.getParamValue)("padToMaxOutputSize",o,n,c),k=await l.image.nonMaxSuppressionPaddedAsync(u,p,h,g,v,_);return[k.selectedIndices,k.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:u,scores:p,maxOutputSize:h,iouThreshold:g,scoreThreshold:v}=m(o,n,c);return[await l.image.nonMaxSuppressionAsync(u,p,h,g,v)]}case"Where":{const u=l.cast((0,d.getParamValue)("condition",o,n,c),"bool"),p=[await l.whereAsync(u)];return u.dispose(),p}case"ListDiff":return l.setdiff1dAsync((0,d.getParamValue)("x",o,n,c),(0,d.getParamValue)("y",o,n,c));default:throw TypeError(`Node type ${o.op} is not implemented`)}},i="dynamic"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8wOdO":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"LowerBound":{const a=(0,d.getParamValue)("sortedSequence",i,o,n),l=(0,d.getParamValue)("values",i,o,n);return[c.lowerBound(a,l)]}case"TopKV2":{const a=(0,d.getParamValue)("x",i,o,n),l=(0,d.getParamValue)("k",i,o,n),u=(0,d.getParamValue)("sorted",i,o,n),p=c.topk(a,l,u);return[p.values,p.indices]}case"UpperBound":{const a=(0,d.getParamValue)("sortedSequence",i,o,n),l=(0,d.getParamValue)("values",i,o,n);return[c.upperBound(a,l)]}case"Unique":{const a=(0,d.getParamValue)("x",i,o,n),l=c.unique(a);return[l.values,l.indices]}case"UniqueV2":{const a=(0,d.getParamValue)("x",i,o,n),l=(0,d.getParamValue)("axis",i,o,n),u=c.unique(a,l);return[u.values,u.indices]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="evaluation"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lKiez:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"Const":return o[i.name];case"PlaceholderWithDefault":const a=(0,d.getParamValue)("default",i,o,n);return[(0,d.getTensor)(i.name,o,n)||a];case"Placeholder":return[(0,d.getTensor)(i.name,o,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const v=(0,d.getParamValue)("x",i,o,n);return[(0,d.cloneTensor)(v)]}case"IdentityN":return(0,d.getParamValue)("x",i,o,n).map(v=>(0,d.cloneTensor)(v));case"Snapshot":const l=(0,d.getParamValue)("x",i,o,n);return[(0,d.cloneTensor)(l)];case"Shape":return[c.tensor1d((0,d.getParamValue)("x",i,o,n).shape,"int32")];case"ShapeN":return(0,d.getParamValue)("x",i,o,n).map(v=>c.tensor1d(v.shape));case"Size":return[c.scalar((0,d.getParamValue)("x",i,o,n).size,"int32")];case"Rank":return[c.scalar((0,d.getParamValue)("x",i,o,n).rank,"int32")];case"NoOp":return[c.scalar(1)];case"Print":const u=(0,d.getParamValue)("x",i,o,n),p=(0,d.getParamValue)("data",i,o,n),h=(0,d.getParamValue)("message",i,o,n),g=(0,d.getParamValue)("summarize",i,o,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(h);for(let v=0;v<p.length;v++)console.log(Array.prototype.slice.call(p[v].dataSync()).slice(0,g));return[u];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="graph"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],oBFC6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("../../executor/hash_table"),d=e("./utils");const m=async(i,o,n,c)=>{switch(i.op){case"HashTable":case"HashTableV2":{const a=c.getHashTableHandleByName(i.name);if(a!=null)return[a];{const l=(0,d.getParamValue)("keyDType",i,o,n),u=(0,d.getParamValue)("valueDType",i,o,n),p=new r.HashTable(l,u);return c.addHashTable(i.name,p),[p.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=(0,d.getParamValue)("tableHandle",i,o,n,c),l=(0,d.getParamValue)("keys",i,o,n),u=(0,d.getParamValue)("values",i,o,n);return[await c.getHashTableById(a.id).import(l,u)]}case"LookupTableFind":case"LookupTableFindV2":{const a=(0,d.getParamValue)("tableHandle",i,o,n,c),l=(0,d.getParamValue)("keys",i,o,n),u=(0,d.getParamValue)("defaultValue",i,o,n);return[await c.getHashTableById(a.id).find(l,u)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=(0,d.getParamValue)("tableHandle",i,o,n,c);return[c.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="hash_table"},{"../../executor/hash_table":"cBQ86","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cBQ86:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"HashTable",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter");class m{get id(){return this.handle.id}constructor(i,o){this.keyDType=i,this.valueDType=o,this.handle=(0,r.scalar)(0),this.tensorMap=new Map,(0,r.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach(i=>i.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return d.scalar(this.size(),"int32")}async import(i,o){this.checkKeyAndValueTensor(i,o);const n=await i.data();return this.tensorMap.forEach(c=>c.dispose()),this.tensorMap.clear(),(0,r.tidy)(()=>{const c=(0,r.unstack)(o),a=n.length,l=c.length;r.util.assert(a===l,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${l} elements.`);for(let u=0;u<a;u++){const p=n[u],h=c[u];(0,r.keep)(h),this.tensorMap.set(p,h)}return this.handle})}async find(i,o){this.checkKeyAndValueTensor(i,o);const n=await i.data();return(0,r.tidy)(()=>{const c=[];for(let a=0;a<n.length;a++){const l=n[a],u=this.findWithDefault(l,o);c.push(u)}return(0,r.stack)(c)})}findWithDefault(i,o){const n=this.tensorMap.get(i);return n??o}checkKeyAndValueTensor(i,o){if(i.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${i.dtype}`);if(o.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${o.dtype}`)}}},{"@tensorflow/tfjs-core":"fqGP4","@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hZsCg:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"ResizeBilinear":{const a=(0,d.getParamValue)("images",i,o,n),l=(0,d.getParamValue)("size",i,o,n),u=(0,d.getParamValue)("alignCorners",i,o,n),p=(0,d.getParamValue)("halfPixelCenters",i,o,n);return[c.image.resizeBilinear(a,[l[0],l[1]],u,p)]}case"ResizeNearestNeighbor":{const a=(0,d.getParamValue)("images",i,o,n),l=(0,d.getParamValue)("size",i,o,n),u=(0,d.getParamValue)("alignCorners",i,o,n),p=(0,d.getParamValue)("halfPixelCenters",i,o,n);return[c.image.resizeNearestNeighbor(a,[l[0],l[1]],u,p)]}case"CropAndResize":{const a=(0,d.getParamValue)("image",i,o,n),l=(0,d.getParamValue)("boxes",i,o,n),u=(0,d.getParamValue)("boxInd",i,o,n),p=(0,d.getParamValue)("cropSize",i,o,n),h=(0,d.getParamValue)("method",i,o,n),g=(0,d.getParamValue)("extrapolationValue",i,o,n);return[c.image.cropAndResize(a,l,u,p,h,g)]}case"ImageProjectiveTransformV3":{const a=(0,d.getParamValue)("images",i,o,n),l=(0,d.getParamValue)("transforms",i,o,n),u=(0,d.getParamValue)("outputShape",i,o,n),p=(0,d.getParamValue)("fillValue",i,o,n),h=(0,d.getParamValue)("interpolation",i,o,n),g=(0,d.getParamValue)("fillMode",i,o,n);return[c.image.transform(a,l,h.toLowerCase(),g.toLowerCase(),p,u)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="image"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6DMRi":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"Equal":return[c.equal((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"NotEqual":return[c.notEqual((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"Greater":return[c.greater((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"GreaterEqual":return[c.greaterEqual((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"Less":return[c.less((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"LessEqual":return[c.lessEqual((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"LogicalAnd":return[c.logicalAnd((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"LogicalNot":return[c.logicalNot((0,d.getParamValue)("a",i,o,n))];case"LogicalOr":return[c.logicalOr((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"Select":case"SelectV2":return[c.where((0,d.getParamValue)("condition",i,o,n),(0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];case"BitwiseAnd":return[c.bitwiseAnd((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="logical"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gdRbg:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[c.matMul((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("b",i,o,n),(0,d.getParamValue)("transposeA",i,o,n),(0,d.getParamValue)("transposeB",i,o,n))];case"Einsum":return[c.einsum((0,d.getParamValue)("equation",i,o,n),...(0,d.getParamValue)("tensors",i,o,n))];case"Transpose":return[c.transpose((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("perm",i,o,n))];case"_FusedMatMul":const[a,l]=(0,d.getParamValue)("fusedOps",i,o,n),u=a==="biasadd",p=l==="prelu",h=(0,d.getParamValue)("numArgs",i,o,n),g=(0,d.getParamValue)("leakyreluAlpha",i,o,n);if(u){if(p&&h!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!p&&h!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[v,_]=(0,d.getParamValue)("args",i,o,n);return[c.fused.matMul({a:(0,d.getParamValue)("a",i,o,n),b:(0,d.getParamValue)("b",i,o,n),transposeA:(0,d.getParamValue)("transposeA",i,o,n),transposeB:(0,d.getParamValue)("transposeB",i,o,n),bias:v,activation:l,preluActivationWeights:_,leakyreluAlpha:g})];case"MatrixBandPart":return[c.linalg.bandPart((0,d.getParamValue)("a",i,o,n),(0,d.getParamValue)("numLower",i,o,n),(0,d.getParamValue)("numUpper",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="matrices"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],anmI3:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"EuclideanNorm":return[c.euclideanNorm((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("axis",i,o,n),(0,d.getParamValue)("keepDims",i,o,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[c.batchNorm((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("mean",i,o,n),(0,d.getParamValue)("variance",i,o,n),(0,d.getParamValue)("offset",i,o,n),(0,d.getParamValue)("scale",i,o,n),(0,d.getParamValue)("epsilon",i,o,n))];case"FusedBatchNormV3":return[c.batchNorm((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("mean",i,o,n),(0,d.getParamValue)("variance",i,o,n),(0,d.getParamValue)("offset",i,o,n),(0,d.getParamValue)("scale",i,o,n),(0,d.getParamValue)("epsilon",i,o,n))];case"LRN":return[c.localResponseNormalization((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("radius",i,o,n),(0,d.getParamValue)("bias",i,o,n),(0,d.getParamValue)("alpha",i,o,n),(0,d.getParamValue)("beta",i,o,n))];case"Softmax":return[c.softmax((0,d.getParamValue)("x",i,o,n))];case"LogSoftmax":return[c.logSoftmax((0,d.getParamValue)("x",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="normalization"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5lY3c":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:l}=c.raggedGather((0,d.getParamValue)("paramsNestedSplits",i,o,n),(0,d.getParamValue)("paramsDenseValues",i,o,n),(0,d.getParamValue)("indices",i,o,n),(0,d.getParamValue)("outputRaggedRank",i,o,n));return a.concat(l)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:l}=c.raggedRange((0,d.getParamValue)("starts",i,o,n),(0,d.getParamValue)("limits",i,o,n),(0,d.getParamValue)("splits",i,o,n));return[a,l]}case"RaggedTensorToTensor":return[c.raggedTensorToTensor((0,d.getParamValue)("shape",i,o,n),(0,d.getParamValue)("values",i,o,n),(0,d.getParamValue)("defaultValue",i,o,n),(0,d.getParamValue)("rowPartitionTensors",i,o,n),(0,d.getParamValue)("rowPartitionTypes",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="ragged"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lkb56:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"Max":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("keepDims",i,o,n);return[c.max((0,d.getParamValue)("x",i,o,n),p,h)]}case"Mean":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("keepDims",i,o,n);return[c.mean((0,d.getParamValue)("x",i,o,n),p,h)]}case"Min":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("keepDims",i,o,n);return[c.min((0,d.getParamValue)("x",i,o,n),p,h)]}case"Sum":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("keepDims",i,o,n);return[c.sum((0,d.getParamValue)("x",i,o,n),p,h)]}case"All":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("keepDims",i,o,n);return[c.all((0,d.getParamValue)("x",i,o,n),p,h)]}case"Any":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("keepDims",i,o,n);return[c.any((0,d.getParamValue)("x",i,o,n),p,h)]}case"ArgMax":{const p=(0,d.getParamValue)("axis",i,o,n);return[c.argMax((0,d.getParamValue)("x",i,o,n),p)]}case"ArgMin":{const p=(0,d.getParamValue)("axis",i,o,n);return[c.argMin((0,d.getParamValue)("x",i,o,n),p)]}case"Prod":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("keepDims",i,o,n);return[c.prod((0,d.getParamValue)("x",i,o,n),p,h)]}case"Cumprod":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("exclusive",i,o,n),g=(0,d.getParamValue)("reverse",i,o,n);return[c.cumprod((0,d.getParamValue)("x",i,o,n),p,h,g)]}case"Cumsum":{const p=(0,d.getParamValue)("axis",i,o,n),h=(0,d.getParamValue)("exclusive",i,o,n),g=(0,d.getParamValue)("reverse",i,o,n);return[c.cumsum((0,d.getParamValue)("x",i,o,n),p,h,g)]}case"Bincount":const a=(0,d.getParamValue)("x",i,o,n),l=(0,d.getParamValue)("weights",i,o,n),u=(0,d.getParamValue)("size",i,o,n);return[c.bincount(a,l,u)];case"DenseBincount":{const p=(0,d.getParamValue)("x",i,o,n),h=(0,d.getParamValue)("weights",i,o,n),g=(0,d.getParamValue)("size",i,o,n),v=(0,d.getParamValue)("binaryOutput",i,o,n);return[c.denseBincount(p,h,g,v)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="reduction"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7zCjY":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>f),t.export(s,"CATEGORY",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),m=e("./utils");const f=(o,n,c,a=d)=>{switch(o.op){case"ConcatV2":case"Concat":{const l=(0,m.getParamValue)("n",o,n,c),u=(0,m.getParamValue)("axis",o,n,c);let p=(0,m.getParamValue)("tensors",o,n,c);return p=p.slice(0,l),[a.concat(p,u)]}case"Gather":{const l=(0,m.getParamValue)("x",o,n,c),u=(0,m.getParamValue)("indices",o,n,c);return[a.gather(l,a.cast(u,"int32"),0)]}case"GatherV2":{const l=(0,m.getParamValue)("axis",o,n,c),u=(0,m.getParamValue)("batchDims",o,n,c),p=(0,m.getParamValue)("x",o,n,c),h=(0,m.getParamValue)("indices",o,n,c);return[a.gather(p,a.cast(h,"int32"),l,u)]}case"Reverse":{const l=(0,m.getParamValue)("dims",o,n,c),u=[];for(let h=0;h<l.length;h++)l[h]&&u.push(h);const p=(0,m.getParamValue)("x",o,n,c);return[a.reverse(p,u)]}case"ReverseV2":{const l=(0,m.getParamValue)("axis",o,n,c),u=(0,m.getParamValue)("x",o,n,c);return[a.reverse(u,l)]}case"Slice":{const l=(0,m.getParamValue)("begin",o,n,c),u=(0,m.getParamValue)("size",o,n,c);return[a.slice((0,m.getParamValue)("x",o,n,c),l,u)]}case"StridedSlice":{const l=(0,m.getParamValue)("begin",o,n,c),u=(0,m.getParamValue)("end",o,n,c),p=(0,m.getParamValue)("strides",o,n,c),h=(0,m.getParamValue)("beginMask",o,n,c),g=(0,m.getParamValue)("endMask",o,n,c),v=(0,m.getParamValue)("ellipsisMask",o,n,c),_=(0,m.getParamValue)("newAxisMask",o,n,c),k=(0,m.getParamValue)("shrinkAxisMask",o,n,c),y=(0,m.getParamValue)("x",o,n,c);return[a.stridedSlice(y,l,u,p,h,g,v,_,k)]}case"Pack":return(0,r.tidy)(()=>{const l=(0,m.getParamValue)("axis",o,n,c),u=(0,m.getParamValue)("tensors",o,n,c),p=u[0].shape,h=a.squeeze(u[0]).shape,g=u.map(v=>{const _=r.util.arraysEqual(v.shape,p);if(!_&&!r.util.arraysEqual(a.squeeze(v).shape,h))throw new Error("the input tensors shape does not match");return _?v:a.reshape(v,p)});return[a.stack(g,l)]});case"Unpack":{const l=(0,m.getParamValue)("axis",o,n,c),u=(0,m.getParamValue)("tensor",o,n,c);return a.unstack(u,l)}case"Tile":{const l=(0,m.getParamValue)("reps",o,n,c);return[a.tile((0,m.getParamValue)("x",o,n,c),l)]}case"Split":case"SplitV":{const l=(0,m.getParamValue)("axis",o,n,c),u=(0,m.getParamValue)("numOrSizeSplits",o,n,c),p=(0,m.getParamValue)("x",o,n,c);return a.split(p,u,l)}case"ScatterNd":{const l=(0,m.getParamValue)("indices",o,n,c),u=(0,m.getParamValue)("values",o,n,c),p=(0,m.getParamValue)("shape",o,n,c);return[a.scatterND(l,u,p)]}case"GatherNd":{const l=(0,m.getParamValue)("x",o,n,c),u=(0,m.getParamValue)("indices",o,n,c);return[a.gatherND(l,u)]}case"SparseToDense":{const l=(0,m.getParamValue)("sparseIndices",o,n,c),u=(0,m.getParamValue)("outputShape",o,n,c),p=(0,m.getParamValue)("sparseValues",o,n,c),h=(0,m.getParamValue)("defaultValue",o,n,c);return[a.sparseToDense(l,p,u,p.dtype===h.dtype?h:a.cast(h,p.dtype))]}case"TensorScatterUpdate":{const l=(0,m.getParamValue)("indices",o,n,c),u=(0,m.getParamValue)("values",o,n,c),p=(0,m.getParamValue)("tensor",o,n,c);return[a.tensorScatterUpdate(p,l,u)]}default:throw TypeError(`Node type ${o.op} is not implemented`)}},i="slice_join"},{"@tensorflow/tfjs-core":"fqGP4","@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9GN9q":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:l,emptyRowIndicator:u,reverseIndexMap:p}=c.sparse.sparseFillEmptyRows((0,d.getParamValue)("indices",i,o,n),(0,d.getParamValue)("values",i,o,n),(0,d.getParamValue)("denseShape",i,o,n),(0,d.getParamValue)("defaultValue",i,o,n));return[a,l,u,p]}case"SparseReshape":{const{outputIndices:a,outputShape:l}=c.sparse.sparseReshape((0,d.getParamValue)("inputIndices",i,o,n),(0,d.getParamValue)("inputShape",i,o,n),(0,d.getParamValue)("newShape",i,o,n));return[a,l]}case"SparseSegmentMean":return[c.sparse.sparseSegmentMean((0,d.getParamValue)("data",i,o,n),(0,d.getParamValue)("indices",i,o,n),(0,d.getParamValue)("segmentIds",i,o,n))];case"SparseSegmentSum":return[c.sparse.sparseSegmentSum((0,d.getParamValue)("data",i,o,n),(0,d.getParamValue)("indices",i,o,n),(0,d.getParamValue)("segmentIds",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="sparse"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],E9NGm:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"FFT":return[c.fft((0,d.getParamValue)("x",i,o,n))];case"IFFT":return[c.ifft((0,d.getParamValue)("x",i,o,n))];case"RFFT":return[c.rfft((0,d.getParamValue)("x",i,o,n))];case"IRFFT":return[c.irfft((0,d.getParamValue)("x",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="spectral"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1N5zb":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"StaticRegexReplace":return[c.string.staticRegexReplace((0,d.getParamValue)("input",i,o,n),(0,d.getParamValue)("pattern",i,o,n),(0,d.getParamValue)("rewrite",i,o,n),(0,d.getParamValue)("replaceGlobal",i,o,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:l}=c.string.stringNGrams((0,d.getParamValue)("data",i,o,n),(0,d.getParamValue)("dataSplits",i,o,n),(0,d.getParamValue)("separator",i,o,n),(0,d.getParamValue)("nGramWidths",i,o,n),(0,d.getParamValue)("leftPad",i,o,n),(0,d.getParamValue)("rightPad",i,o,n),(0,d.getParamValue)("padWidth",i,o,n),(0,d.getParamValue)("preserveShortSequences",i,o,n));return[a,l]}case"StringSplit":{const{indices:a,values:l,shape:u}=c.string.stringSplit((0,d.getParamValue)("input",i,o,n),(0,d.getParamValue)("delimiter",i,o,n),(0,d.getParamValue)("skipEmpty",i,o,n));return[a,l,u]}case"StringToHashBucketFast":return[c.string.stringToHashBucketFast((0,d.getParamValue)("input",i,o,n),(0,d.getParamValue)("numBuckets",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="string"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4Dj4S":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"executeOp",()=>m),t.export(s,"CATEGORY",()=>f);var r=e("@tensorflow/tfjs-core/dist/ops/ops_for_converter"),d=e("./utils");const m=(i,o,n,c=r)=>{switch(i.op){case"Cast":return[c.cast((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("dtype",i,o,n))];case"ExpandDims":{const a=(0,d.getParamValue)("axis",i,o,n);return[c.expandDims((0,d.getParamValue)("x",i,o,n),a)]}case"Squeeze":{const a=(0,d.getParamValue)("axis",i,o,n);return[c.squeeze((0,d.getParamValue)("x",i,o,n),a)]}case"Reshape":return[c.reshape((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("shape",i,o,n))];case"EnsureShape":return[c.ensureShape((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("shape",i,o,n))];case"MirrorPad":return[c.mirrorPad((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("padding",i,o,n),(0,d.getParamValue)("mode",i,o,n))];case"PadV2":case"Pad":return[c.pad((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("padding",i,o,n),(0,d.getParamValue)("constantValue",i,o,n))];case"SpaceToBatchND":{const a=(0,d.getParamValue)("blockShape",i,o,n),l=(0,d.getParamValue)("paddings",i,o,n);return[c.spaceToBatchND((0,d.getParamValue)("x",i,o,n),a,l)]}case"BatchToSpaceND":{const a=(0,d.getParamValue)("blockShape",i,o,n),l=(0,d.getParamValue)("crops",i,o,n);return[c.batchToSpaceND((0,d.getParamValue)("x",i,o,n),a,l)]}case"DepthToSpace":{const a=(0,d.getParamValue)("blockSize",i,o,n),l=(0,d.getParamValue)("dataFormat",i,o,n).toUpperCase();return[c.depthToSpace((0,d.getParamValue)("x",i,o,n),a,l)]}case"BroadcastTo":return[c.broadcastTo((0,d.getParamValue)("x",i,o,n),(0,d.getParamValue)("shape",i,o,n))];case"BroadcastArgs":return[c.broadcastArgs((0,d.getParamValue)("s0",i,o,n),(0,d.getParamValue)("s1",i,o,n))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},f="transformation"},{"@tensorflow/tfjs-core/dist/ops/ops_for_converter":"2aPja","./utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iEoQc:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ExecutionContext",()=>r);class r{constructor(m={},f={},i={},o={},n){this.weightMap=m,this.tensorArrayMap=f,this.tensorListMap=i,this.functionMap=o,this.parseNodeNameCache=n,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(m,f){return{id:m,frameName:f,iterationId:0}}set currentContext(m){this.contexts!==m&&(this.contexts=m,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const m=[];for(let f=0;f<this.contexts.length-1;f++){const i=this.contexts.slice(0,this.contexts.length-f);m.push(this.contextIdforContexts(i))}m.push(""),this._currentContextIds=m}contextIdforContexts(m){return m?m.map(f=>f.id===0&&f.iterationId===0?"":`${f.frameName}-${f.iterationId}`).join("/"):""}enterFrame(m){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,m)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const m=Object.assign({},this.contexts[this.contexts.length-1]);m.iterationId+=1,m.id=this.lastId,this.contexts.splice(-1,1,m),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(m){return this.weightMap[m]}addTensorArray(m){this.tensorArrayMap[m.id]=m}getTensorArray(m){return this.tensorArrayMap[m]}addTensorList(m){this.tensorListMap[m.id]=m}getTensorList(m){return this.tensorListMap[m]}dispose(m){for(const f in this.tensorArrayMap)this.tensorArrayMap[f].clearAndClose(m);for(const f in this.tensorListMap)this.tensorListMap[f].clearAndClose(m)}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"71o8q":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getExecutionSubgraph",()=>d),t.export(s,"getNodesInTopologicalOrder",()=>m),t.export(s,"getNodeLiveUntilMap",()=>n),t.export(s,"isControlFlow",()=>u),t.export(s,"isDynamicShape",()=>p),t.export(s,"isHashTable",()=>h);var r=e("../operations/executors/utils");function d(g,v,_,k){const y=new Set,x=[];let b=null,C=null;const w=new Set,N=new Set(Object.keys(g).map(S=>(0,r.parseNodeName)(S)[0]));k=k||[];const T=new Set(k.map(S=>(0,r.parseNodeName)(S.name)[0])),F=[...v];for(;F.length>0;){const S=F.pop();if((u(S)||p(S)||h(S))&&b==null&&(b=S,C=b.children.map(I=>I.name).filter(I=>y.has(I))),y.add(S.name),_[S.name]==null&&!N.has(S.name)&&!T.has(S.name)){if(S.inputs.length===0){x.push(S.name);continue}S.inputs.forEach(I=>{w.has(I.name)||(w.add(I.name),F.push(I))})}}return{inputs:g,outputs:v,usedNodes:y,missingInputs:x,dynamicNode:b,syncInputs:C}}function m(g,v){const{usedNodes:_,inputs:k}=v,y=Object.keys(k).map(O=>(0,r.parseNodeName)(O)[0]).map(O=>g.nodes[O]),x=g.initNodes||[],b=O=>_.has(typeof O=="string"?O:O.name);function C(O){return[...new Map(O.map($=>[$.name,$])).values()]}const w=C([...y,...g.weights,...x]).filter(b),N=C([...w,...Object.values(g.nodes)]).filter(b),T=new Map(N.map(O=>[O.name,O])),F={};for(const O of N){F[O.name]=F[O.name]||0;for(const $ of O.children)b($)||(F[$.name]=Number.POSITIVE_INFINITY),F[$.name]=(F[$.name]||0)+1}const S=Object.entries(F).filter(([,O])=>O===0).map(([O])=>O),I=[...S];for(;S.length>0;){const O=S.pop(),$=T.get(O);for(const P of $.children.filter(b))--F[P.name]==0&&(I.push(P.name),S.push(P.name))}const j=I.map(O=>T.get(O)),D=f(j,w);return o(D,w),D}function f(g,v){const _=new Map(g.map(b=>[b.name,b])),k=v.map(b=>b.name),y=new Set(k);for(;k.length>0;){const b=k.pop(),C=_.get(b);for(const w of C.children)!_.has(w.name)||y.has(w.name)||(y.add(w.name),k.push(w.name))}return g.filter(b=>y.has(b.name))}class i extends Error{constructor(v){super(`NodesExecutionOrderError: ${v}`)}}function o(g,v){const _=new Map(g.map((C,w)=>[C.name,w])),k=new Set(v.map(C=>C.name)),y=C=>k.has(typeof C=="string"?C:C.name),x=new Set(g.map(C=>C.name)),b=C=>x.has(typeof C=="string"?C:C.name);for(const C of g){for(const w of C.children.filter(b)){if(!_.has(w.name))throw new i(`Child ${w.name} of node ${C.name} is unreachable.`);if(_.get(C.name)>_.get(w.name))throw new i(`Node ${C.name} is scheduled to run after its child ${w.name}.`)}if(!y(C))for(const w of C.inputs){if(!_.has(w.name))throw new i(`Input ${w.name} of node ${C.name} is unreachable.`);if(_.get(w.name)>_.get(C.name))throw new i(`Node ${C.name} is scheduled to run before its input ${w.name}.`)}}}function n(g){const v=new Map(g.map((C,w)=>[C.name,w])),_=Number.MAX_SAFE_INTEGER,k=g.map((C,w)=>u(C)?_:w),y=C=>{const w=k[v.get(C.name)];return w??-1},x=g.map((C,w)=>C.children.map(y).reduce((N,T)=>Math.max(N,T),k[w])),b=new Map;for(let C=0;C<g.length;++C){const w=x[C];if(w===_)continue;const N=g[C],T=g[w];b.has(T.name)||b.set(T.name,[]),b.get(T.name).push(N)}return b}const c=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),a=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),l=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function u(g){return c.has(g.op)}function p(g){return a.has(g.op)}function h(g){return l.has(g.op)}},{"../operations/executors/utils":"8WeA1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7Rob1":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ResourceManager",()=>r);class r{constructor(m={},f={}){this.hashTableNameToHandle=m,this.hashTableMap=f}addHashTable(m,f){this.hashTableNameToHandle[m]=f.handle,this.hashTableMap[f.id]=f}getHashTableHandleByName(m){return this.hashTableNameToHandle[m]}getHashTableById(m){return this.hashTableMap[m]}dispose(){for(const m in this.hashTableMap)this.hashTableMap[m].clearAndClose(),delete this.hashTableMap[m];for(const m in this.hashTableNameToHandle)this.hashTableNameToHandle[m].dispose(),delete this.hashTableNameToHandle[m]}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hdTWU:[function(e,E,s){/** @license See the LICENSE file. */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"version",()=>r);const r="4.9.0"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dHH63:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"array",()=>r.array),t.export(s,"Dataset",()=>r.Dataset),t.export(s,"zip",()=>r.zip),t.export(s,"CSVDataset",()=>d.CSVDataset),t.export(s,"TextLineDataset",()=>m.TextLineDataset),t.export(s,"csv",()=>f.csv),t.export(s,"func",()=>f.func),t.export(s,"generator",()=>f.generator),t.export(s,"microphone",()=>f.microphone),t.export(s,"webcam",()=>f.webcam),t.export(s,"FileDataSource",()=>i.FileDataSource),t.export(s,"URLDataSource",()=>o.URLDataSource),t.export(s,"version_data",()=>n.version);var r=e("./dataset"),d=e("./datasets/csv_dataset"),m=e("./datasets/text_line_dataset"),f=e("./readers"),i=e("./sources/file_data_source"),o=e("./sources/url_data_source"),n=e("./version")},{"./dataset":"iGZp5","./datasets/csv_dataset":"k2kGb","./datasets/text_line_dataset":"kDAoR","./readers":"aoDPZ","./sources/file_data_source":"e2clH","./sources/url_data_source":"582sT","./version":"23j7a","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iGZp5:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Dataset",()=>i),t.export(s,"datasetFromIteratorFn",()=>o),t.export(s,"array",()=>n),t.export(s,"zip",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("seedrandom"),m=e("./iterators/lazy_iterator"),f=e("./util/deep_map");class i{constructor(){this.size=null}batch(p,h=!0){const g=this;r.util.assert(p>0,()=>`batchSize needs to be positive, but it is
      ${p}`);let v;return this.size===1/0||this.size==null?v=this.size:h?v=Math.ceil(this.size/p):v=Math.floor(this.size/p),o(async()=>(await g.iterator()).columnMajorBatch(p,h,a),v)}concatenate(p){const h=this;let g;return this.size===1/0||p.size===1/0?g=1/0:this.size!=null&&p.size!=null?g=this.size+p.size:g=null,o(async()=>(await h.iterator()).concatenate(await p.iterator()),g)}filter(p){const h=this;let g;return this.size===1/0?g=1/0:g=null,o(async()=>(await h.iterator()).filter(v=>r.tidy(()=>p(v))),g)}async forEachAsync(p){return(await this.iterator()).forEachAsync(p)}map(p){const h=this;return o(async()=>(await h.iterator()).map(g=>r.tidy(()=>p(g))),this.size)}mapAsync(p){const h=this;return o(async()=>(await h.iterator()).mapAsync(p),this.size)}prefetch(p){if(p==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const h=this;return o(async()=>(await h.iterator()).prefetch(p),this.size)}repeat(p){const h=this;let g;return this.size!=null&&p>0?g=this.size*p:p===0?g=0:this.size!=null&&(p===void 0||p<0)?g=1/0:g=null,o(async()=>{const v=(0,m.iteratorFromFunction)(async()=>({value:await h.iterator(),done:!1}));return(0,m.iteratorFromConcatenated)(v.take(p))},g)}skip(p){const h=this;let g;return this.size!=null&&p>=0&&this.size>=p?g=this.size-p:this.size!=null&&(this.size<p||p===void 0||p<0)?g=0:g=null,o(async()=>(await h.iterator()).skip(p),g)}shuffle(p,h,g=!0){if(p==null||p<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const v=this,_=d.alea(h||r.util.now().toString());return o(async()=>{let k=_.int32();return g&&(k+=_.int32()),(await v.iterator()).shuffle(p,k.toString())},this.size)}take(p){const h=this;let g;return this.size!=null&&this.size>p?g=p:this.size!=null&&this.size<=p?g=this.size:g=null,o(async()=>(await h.iterator()).take(p),g)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}i.MAX_BUFFER_SIZE=1e4;function o(u,p=null){return new class extends i{constructor(){super(...arguments);this.size=p}async iterator(){return u()}}}function n(u){return o(async()=>(0,m.iteratorFromItems)(u),u.length)}function c(u){if(!(0,f.isIterable)(u))throw new Error("The argument to zip() must be an object or array.");let p;if(Array.isArray(u))for(let h=0;h<u.length;h++)p=p==null?u[h].size:Math.min(p,u[h].size);else if(u instanceof Object)for(const h in u)p=p==null?u[h].size:Math.min(p,u[h].size);return o(async()=>{const h=await(0,f.deepMapAndAwaitAll)(u,g=>{if(g instanceof i)return{value:g.iterator(),recurse:!1};if((0,f.isIterable)(g))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return(0,m.iteratorFromZipped)(h,m.ZipMismatchMode.SHORTEST)},p)}function a(u){if(u===null)return null;const p=u[0];return(0,f.canTensorify)(p)?{value:l(u),recurse:!1}:{value:null,recurse:!0}}function l(u){if(u.length===0)throw new Error("Can't make a batch of zero elements.");return u[0]instanceof r.Tensor?r.stack(u):r.tensor(u)}},{"@tensorflow/tfjs-core":"fqGP4",seedrandom:"gjA5n","./iterators/lazy_iterator":"1Yg9n","./util/deep_map":"dCdIc","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1Yg9n":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"iteratorFromItems",()=>n),t.export(s,"iteratorFromIncrementing",()=>c),t.export(s,"iteratorFromFunction",()=>a),t.export(s,"iteratorFromConcatenated",()=>l),t.export(s,"iteratorFromConcatenatedFunction",()=>u),t.export(s,"iteratorFromZipped",()=>p),t.export(s,"LazyIterator",()=>h),t.export(s,"OneToManyIterator",()=>T),t.export(s,"ChainedIterator",()=>S),t.export(s,"ZipMismatchMode",()=>I),t.export(s,"PrefetchIterator",()=>D),t.export(s,"ShuffleIterator",()=>O);var r=e("@tensorflow/tfjs-core"),d=e("seedrandom"),m=e("../util/deep_clone"),f=e("../util/deep_map"),i=e("../util/growing_ring_buffer"),o=e("../util/ring_buffer");function n($){return new g($)}function c($){let P=$;return a(()=>({value:P++,done:!1}))}function a($){return new v($)}function l($,P){return new S($,P)}function u($,P,R){return l(a($).take(P),R)}function p($,P=I.FAIL){return new j($,P)}class h{async toArray(){const P=[];let R=await this.next();for(;!R.done;)P.push(R.value),R=await this.next();return P}async toArrayForTest(){const P=this.prefetch(100),R=[];let A=await P.next();for(;!A.done;)R.push(A.value),A=await P.next();return R}async resolveFully(){let P=await this.next();for(;!P.done;)P=await this.next()}async resolveWhile(P){let R=await this.next(),A=P(R.value);for(;!R.done&&A;)R=await this.next(),A=P(R.value)}handleErrors(P){return new w(this,P)}filter(P){return new b(this,P)}map(P){return new C(this,P)}mapAsync(P){return new N(this,P)}serialMapAsync(P){return new N(this,P).serial()}flatmap(P){return new F(this,P)}async forEachAsync(P){return this.map(P).resolveFully()}async serialForEach(P){return this.serialMapAsync(P).resolveWhile(R=>R===!0)}rowMajorBatch(P,R=!0){return new x(this,P,R)}columnMajorBatch(P,R=!0,A=f.zipToList){return this.rowMajorBatch(P,R).map(G=>(0,f.deepZip)(G,A))}concatenate(P,R){return new S(n([this,P]),R)}take(P){return P<0||P==null?this:new y(this,P)}skip(P){return P<0||P==null?this:new k(this,P)}prefetch(P){return new D(this,P)}shuffle(P,R){return new O(this,P,R)}serial(){return new _(this)}}class g extends h{constructor(P){super();this.items=P,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const P=this.items[this.trav];return this.trav++,{value:(0,m.deepClone)(P),done:!1}}}class v extends h{constructor(P){super();this.nextFn=P}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(P){throw P.message=`Error thrown while iterating through a dataset: ${P.message}`,P}}}class _ extends h{constructor(P){super();this.upstream=P,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class k extends h{constructor(P,R){super();this.upstream=P,this.maxCount=R,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const P=await this.upstream.next();if(P.done)return P;r.dispose(P.value)}return this.upstream.next()}}class y extends h{constructor(P,R){super();this.upstream=P,this.maxCount=R,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class x extends h{constructor(P,R,A=!0){super();this.upstream=P,this.batchSize=R,this.enableSmallLastBatch=A,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const P=[];for(;P.length<this.batchSize;){const R=await this.upstream.next();if(R.done)return this.enableSmallLastBatch&&P.length>0?{value:P,done:!1}:{value:null,done:!0};P.push(R.value)}return{value:P,done:!1}}}class b extends h{constructor(P,R){super();this.upstream=P,this.predicate=R,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const P=await this.upstream.next();if(P.done||this.predicate(P.value))return P;r.dispose(P.value)}}}class C extends h{constructor(P,R){super();this.upstream=P,this.transform=R}summary(){return`${this.upstream.summary()} -> Map`}async next(){const P=await this.upstream.next();if(P.done)return{value:null,done:!0};const R=r.tensor_util.getTensorsInContainer(P.value),A=this.transform(P.value),z=r.tensor_util.getTensorsInContainer(A);for(const G of R)r.tensor_util.isTensorInList(G,z)||G.dispose();return{value:A,done:!1}}}class w extends h{constructor(P,R){super();this.upstream=P,this.handler=R,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(P){if(!this.handler(P))return{value:null,done:!0}}}}class N extends h{constructor(P,R){super();this.upstream=P,this.transform=R}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const P=await this.upstream.next();if(P.done)return{value:null,done:!0};const R=r.tensor_util.getTensorsInContainer(P.value),A=await this.transform(P.value),z=r.tensor_util.getTensorsInContainer(A);for(const G of R)r.tensor_util.isTensorInList(G,z)||G.dispose();return{value:A,done:!1}}}class T extends h{constructor(){super();this.outputQueue=new i.GrowingRingBuffer,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class F extends T{constructor(P,R){super();this.upstream=P,this.transform=R}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const P=await this.upstream.next();if(P.done)return!1;const R=r.tensor_util.getTensorsInContainer(P.value),A=this.transform(P.value),z=r.tensor_util.getTensorsInContainer(A);this.outputQueue.pushAll(A);for(const G of R)r.tensor_util.isTensorInList(G,z)||G.dispose();return!0}}class S extends h{constructor(P,R){super();this.baseErrorHandler=R,this.lastRead=null,this.iterator=null,this.moreIterators=P}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(P){if(await P,this.iterator==null){const A=await this.moreIterators.next();if(A.done)return{value:null,done:!0};this.iterator=A.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const R=await this.iterator.next();return R.done?(this.iterator=null,this.readFromChain(P)):R}}var I;(function($){$[$.FAIL=0]="FAIL",$[$.SHORTEST=1]="SHORTEST",$[$.LONGEST=2]="LONGEST"})(I||(I={}));class j extends h{constructor(P,R=I.FAIL){super();this.iterators=P,this.mismatchMode=R,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(P){await P;let R=0,A=0;function z(L){return L instanceof h?{value:L.next().then(V=>(R++,V.done&&A++,V.value)),recurse:!1}:{value:null,recurse:!0}}const G=await(0,f.deepMapAndAwaitAll)(this.iterators,z);if(R===A)return{value:null,done:!0};if(A>0)switch(this.mismatchMode){case I.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case I.SHORTEST:return{value:null,done:!0};case I.LONGEST:default:}return this.count++,{value:G,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class D extends h{constructor(P,R){super();this.upstream=P,this.bufferSize=R,this.buffer=new o.RingBuffer(R)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const P=this.upstream.next();this.buffer.push(P)}}next(){return this.refill(),this.buffer.shift()}}class O extends D{constructor(P,R,A){super(P,R);this.upstream=P,this.windowSize=R,this.upstreamExhausted=!1,this.random=d.alea(A||r.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(P){return Math.floor(this.random()*P)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const P=this.chooseIndex(),R=await this.buffer.shuffleExcise(P);if(R.done)this.upstreamExhausted=!0;else return this.refill(),R}return{value:null,done:!0}}}},{"@tensorflow/tfjs-core":"fqGP4",seedrandom:"gjA5n","../util/deep_clone":"kjcvm","../util/deep_map":"dCdIc","../util/growing_ring_buffer":"1tnlA","../util/ring_buffer":"5SuYN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kjcvm:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"deepClone",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./deep_map");function m(i){return(0,d.deepMap)(i,f)}function f(i){return i instanceof r.Tensor?{value:i.clone(),recurse:!1}:(0,d.isIterable)(i)?{value:null,recurse:!0}:{value:i,recurse:!1}}},{"@tensorflow/tfjs-core":"fqGP4","./deep_map":"dCdIc","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dCdIc:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"deepMap",()=>d),t.export(s,"deepZip",()=>f),t.export(s,"zipToList",()=>o),t.export(s,"deepMapAndAwaitAll",()=>n),t.export(s,"isIterable",()=>c),t.export(s,"canTensorify",()=>a);var r=e("@tensorflow/tfjs-core");function d(u,p){return m(u,p)}function m(u,p,h=new Map,g=new Set){if(u==null)return null;if(typeof Blob=="function"&&u instanceof Blob)return u.slice();if(g.has(u))throw new Error("Circular references are not supported.");if(h.has(u))return h.get(u);const v=p(u);if(v.recurse&&v.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(v.recurse)if(c(u)){const _=Array.isArray(u)?[]:{};g.add(u);for(const k in u){const y=u[k],x=m(y,p,h,g);_[k]=x}return g.delete(u),u.__proto__&&(_.__proto__=u.__proto__),_}else throw new Error(`Can't recurse into non-iterable type: ${u}`);else return h.set(u,v.value),v.value}function f(u,p=o){return i(u,p)}function i(u,p,h=new Set){const g=u[0];if(h.has(g))throw new Error("Circular references are not supported.");const v=p(u);if(v.recurse&&v.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(v.recurse)if(c(g)){const _=Array.isArray(g)?[]:{};h.add(g);for(const k in g){const y=u.map(b=>b[k]),x=i(y,p,h);_[k]=x}return h.delete(g),_}else throw new Error(`Can't recurse into non-iterable type: ${g}`);else return v.value}function o(u){return u===null?null:c(u[0])?{value:null,recurse:!0}:{value:u,recurse:!1}}async function n(u,p){const h=new Map;m(u,p,h);for(const v of Array.from(h.keys())){const _=h.get(v);if(r.util.isPromise(_)){const k=await _;h.set(v,k)}}return m(u,p,h)}function c(u){let p=!1;if(r.env().get("IS_BROWSER"))p=u instanceof TextDecoder;else{const{StringDecoder:h}=e("b91b5d0c25819b27");p=u instanceof h}return u!=null&&!ArrayBuffer.isView(u)&&(Array.isArray(u)||typeof u=="object"&&!(u instanceof r.Tensor)&&!(u instanceof Promise)&&!p)}function a(u){return u==null||l(u)||Array.isArray(u)||typeof u=="object"&&u instanceof r.Tensor||r.util.isTypedArray(u)}function l(u){return u===null||typeof u!="object"&&typeof u!="function"}},{"@tensorflow/tfjs-core":"fqGP4",b91b5d0c25819b27:"34v0S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1tnlA":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"GrowingRingBuffer",()=>d);var r=e("./ring_buffer");class d extends r.RingBuffer{constructor(){super(d.INITIAL_CAPACITY)}isFull(){return!1}push(f){super.isFull()&&this.expand(),super.push(f)}unshift(f){super.isFull()&&this.expand(),super.unshift(f)}expand(){const f=this.capacity*2,i=new Array(f),o=this.length();for(let n=0;n<o;n++)i[n]=this.get(this.wrap(this.begin+n));this.data=i,this.capacity=f,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=o}}d.INITIAL_CAPACITY=32},{"./ring_buffer":"5SuYN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5SuYN":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"RingBuffer",()=>r);class r{constructor(m){if(this.capacity=m,this.begin=0,this.end=0,m==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(m<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(m),this.doubledCapacity=2*m}wrap(m){for(;m<0;)m+=this.doubledCapacity;return m%this.doubledCapacity}get(m){if(m<0)throw new RangeError("Can't get item at a negative index.");return this.data[m%this.capacity]}set(m,f){if(m<0)throw new RangeError("Can't set item at a negative index.");this.data[m%this.capacity]=f}length(){let m=this.end-this.begin;return m<0&&(m=this.doubledCapacity+m),m}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(m){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,m),this.end=this.wrap(this.end+1)}pushAll(m){for(const f of m)this.push(f)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const m=this.get(this.end);return this.set(this.end,void 0),m}unshift(m){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,m)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const m=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),m}shuffleExcise(m){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const f=this.wrap(this.begin+m),i=this.get(f);return this.set(f,this.pop()),i}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k2kGb:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CSVDataset",()=>l);var r=e("@tensorflow/tfjs-core"),d=e("../dataset"),m=e("./text_line_dataset");const f='"',i=Symbol("out"),o=Symbol("field"),n=Symbol("quote"),c=Symbol("quoteafterquote"),a=Symbol("quoteinquote");class l extends d.Dataset{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const p=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!p)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&p&&r.util.assert(p.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+p.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=p);const h=this.fullColumnNames.reduce((v,_)=>(v[_]=v[_]+1||1,v),{}),g=Object.keys(h).filter(v=>h[v]>1);if(r.util.assert(g.length===0,()=>"Duplicate column names found: "+g.toString()),this.columnConfigs){for(const v of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(v)===-1)throw new Error('The key "'+v+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const h=await(await this.base.iterator()).next();if(h.done)throw new Error("No data was found for CSV parsing.");const g=h.value;return this.parseRow(g,!1)}else return null}constructor(p,h){super();this.input=p,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new m.TextLineDataset(p),h||(h={}),this.hasHeader=h.hasHeader!==!1,this.fullColumnNames=h.columnNames,this.columnConfigs=h.columnConfigs,this.configuredColumnsOnly=h.configuredColumnsOnly,h.delimWhitespace?(r.util.assert(h.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=h.delimiter?h.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let p=await this.base.iterator();return this.hasHeader&&(p=p.skip(1)),p.map(h=>this.makeDataElement(h))}makeDataElement(p){const h=this.parseRow(p),g={},v={};for(let _=0;_<this.fullColumnNames.length;_++){const k=this.fullColumnNames[_],y=this.columnConfigs?this.columnConfigs[k]:null;if(!(this.configuredColumnsOnly&&!y)){const x=h[_];let b=null;if(x==="")if(y&&y.default!==void 0)b=y.default;else{if(y&&(y.required||y.isLabel))throw new Error(`Required column ${k} is empty in this line: ${p}`);b=void 0}else{const C=Number(x);if(isNaN(C))y&&y.dtype==="bool"?b=this.getBoolean(x):b=x;else if(!y||!y.dtype)b=C;else switch(y.dtype){case"float32":b=C;break;case"int32":b=Math.floor(C);break;case"bool":b=this.getBoolean(x);break;default:b=C}}y&&y.isLabel?v[k]=b:g[k]=b}}return Object.keys(v).length===0?g:{xs:g,ys:v}}getBoolean(p){return p==="1"||p.toLowerCase()==="true"?1:0}parseRow(p,h=!0){const g=[];let v=0;const _=p.length;let k=i;for(let y=0;y<_;y++)switch(k){case i:switch(p.charAt(y)){case f:v=y+1,k=n;break;case this.delimiter:if(v=y+1,this.delimiter===" "&&this.delimWhitespace)break;g.push(""),k=i;break;default:k=o,v=y;break}break;case o:switch(p.charAt(y)){case this.delimiter:g.push(p.substring(v,y)),k=i,v=y+1;break;default:}break;case n:switch(p.charAt(y)){case f:k=c;break;default:}break;case c:switch(p.charAt(y)){case this.delimiter:g.push(p.substring(v,y-1)),k=i,v=y+1;break;case f:k=n;break;default:k=a;break}break;case a:switch(p.charAt(y)){case f:k=n;break;default:}break;default:}if(k===c?g.push(p.substring(v,_-1)):g.push(p.substring(v)),h&&g.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${g}`);return g}}},{"@tensorflow/tfjs-core":"fqGP4","../dataset":"iGZp5","./text_line_dataset":"kDAoR","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kDAoR:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TextLineDataset",()=>d);var r=e("../dataset");class d extends r.Dataset{constructor(f){super();this.input=f}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(n=>(n.endsWith("\r")&&(n=n.slice(0,-1)),n))}}},{"../dataset":"iGZp5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aoDPZ:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"csv",()=>n),t.export(s,"func",()=>c),t.export(s,"generator",()=>a),t.export(s,"webcam",()=>l),t.export(s,"microphone",()=>u);var r=e("./dataset"),d=e("./datasets/csv_dataset"),m=e("./iterators/lazy_iterator"),f=e("./iterators/microphone_iterator"),i=e("./iterators/webcam_iterator"),o=e("./sources/url_data_source");function n(p,h={}){return new d.CSVDataset(new o.URLDataSource(p),h)}function c(p){const h=(0,m.iteratorFromFunction)(p);return(0,r.datasetFromIteratorFn)(async()=>h)}function a(p){return(0,r.datasetFromIteratorFn)(async()=>{const h=await p();return(0,m.iteratorFromFunction)(()=>h.next())})}async function l(p,h){return i.WebcamIterator.create(p,h)}async function u(p){return f.MicrophoneIterator.create(p)}},{"./dataset":"iGZp5","./datasets/csv_dataset":"k2kGb","./iterators/lazy_iterator":"1Yg9n","./iterators/microphone_iterator":"1GOP5","./iterators/webcam_iterator":"uYu3E","./sources/url_data_source":"582sT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1GOP5":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MicrophoneIterator",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./lazy_iterator");class m extends d.LazyIterator{constructor(i){super();this.microphoneConfig=i,this.isClosed=!1,this.fftSize=i.fftSize||1024;const o=Math.log2(this.fftSize);if(this.fftSize<0||o<4||o>14||!Number.isInteger(o))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=i.numFramesPerSpectrogram||43,this.sampleRateHz=i.sampleRateHz,this.columnTruncateLength=i.columnTruncateLength||this.fftSize,this.audioTrackConstraints=i.audioTrackConstraints,this.smoothingTimeConstant=i.smoothingTimeConstant||0,this.includeSpectrogram=i.includeSpectrogram!==!1,this.includeWaveform=i.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(i={}){if(!(0,r.env)().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const o=new m(i);return await o.start(),o}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const i=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new i,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const o=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,o.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let i,o;const n=await this.getAudioData();if(this.includeSpectrogram){const c=this.flattenQueue(n.freqDataQueue);i=this.getTensorFromAudioDataArray(c,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const c=this.flattenQueue(n.timeDataQueue);o=this.getTensorFromAudioDataArray(c,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:i,waveform:o},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const i=[],o=[];let n=0;return new Promise(c=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&c({freqDataQueue:i,timeDataQueue:o}),i.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),o.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),c({freqDataQueue:i,timeDataQueue:o}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(i){const o=i[0].length,n=new Float32Array(i.length*o);return i.forEach((c,a)=>n.set(c,a*o)),n}getTensorFromAudioDataArray(i,o){const n=new Float32Array(r.util.sizeFromShape(o));return n.set(i,n.length-i.length),(0,r.tensor)(n,o)}}},{"@tensorflow/tfjs-core":"fqGP4","./lazy_iterator":"1Yg9n","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],uYu3E:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"WebcamIterator",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./lazy_iterator");class m extends d.LazyIterator{constructor(i,o){super();if(this.webcamVideoElement=i,this.webcamConfig=o,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,r.tensor1d)([0],"int32"),this.webcamConfig.centerCrop){const n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,c=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-n)/2,l=(1-c)/2,u=a+n,p=c+l;this.cropBox=(0,r.tensor2d)([l,a,p,u],[1,4])}else this.cropBox=(0,r.tensor2d)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(i,o={}){if(!(0,r.env)().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!i){if(i=document.createElement("video"),!o.resizeWidth||!o.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");i.width=o.resizeWidth,i.height=o.resizeHeight}const n=new m(i,o);return await n.start(),n}async start(){this.webcamConfig.facingMode&&r.util.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(i){throw i.message=`Error thrown while initializing video stream: ${i.message}`,i}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(i){console.log(i),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(i=>{this.webcamVideoElement.onloadedmetadata=()=>{i()}})}async next(){if(this.isClosed)return{value:null,done:!0};let i;try{i=r.browser.fromPixels(this.webcamVideoElement)}catch(o){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(o)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(i),done:!1}}catch(o){throw new Error(`Error thrown cropping the video: ${o.message}`)}finally{i.dispose()}else return{value:i,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(i){return(0,r.tidy)(()=>{const o=(0,r.expandDims)((0,r.cast)(i,"float32"),0);let n;n=r.image.cropAndResize(o,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const c=n.shape;return(0,r.reshape)(n,c.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(o=>o.stop());try{this.webcamVideoElement.srcObject=null}catch(o){console.log(o),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}},{"@tensorflow/tfjs-core":"fqGP4","./lazy_iterator":"1Yg9n","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"582sT":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"URLDataSource",()=>i);var r=e("../datasource"),d=e("../iterators/url_chunk_iterator"),m=e("../util/source_util"),f=e("./file_data_source");class i extends r.DataSource{constructor(n,c={}){super();this.url=n,this.fileOptions=c}async iterator(){return(0,m.isLocalPath)(this.url)?new f.FileDataSource(this.url,this.fileOptions).iterator():(0,d.urlChunkIterator)(this.url,this.fileOptions)}}},{"../datasource":"fwAfn","../iterators/url_chunk_iterator":"9de35","../util/source_util":"bhsbG","./file_data_source":"e2clH","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fwAfn:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DataSource",()=>r);class r{}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9de35":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"urlChunkIterator",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./file_chunk_iterator");async function m(i,o={},n){let c,a;typeof i=="string"?c=i:(c=i.url,a=f(i));const l=await(n||r.util.fetch)(c,a);if(l.ok){const u=new Uint8Array(await l.arrayBuffer());return new d.FileChunkIterator(u,o)}else throw new Error(l.statusText)}const f=i=>({method:i.method,headers:i.headers,body:i.body,mode:i.mode,credentials:i.credentials,cache:i.cache,redirect:i.redirect,referrer:i.referrer,integrity:i.integrity})},{"@tensorflow/tfjs-core":"fqGP4","./file_chunk_iterator":"277S2","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"277S2":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"FileChunkIterator",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./byte_chunk_iterator");class m extends d.ByteChunkIterator{constructor(i,o={}){super();this.file=i,this.options=o,r.util.assert(i instanceof Uint8Array||((0,r.env)().get("IS_BROWSER")?i instanceof File||i instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=o.offset||0,this.chunkSize=o.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((o,n)=>{const c=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)o(new Uint8Array(this.file.slice(this.offset,c)));else{const a=new FileReader;a.onload=u=>{let p=a.result;if(p instanceof ArrayBuffer&&(p=new Uint8Array(p)),!(p instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));o(p)},a.onabort=u=>n(new Error("Aborted")),a.onerror=u=>n(new Error(u.type));const l=this.file.slice(this.offset,c);a.readAsArrayBuffer(l)}this.offset=c}),done:!1}}}},{"@tensorflow/tfjs-core":"fqGP4","./byte_chunk_iterator":"jW5a7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jW5a7:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ByteChunkIterator",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("./lazy_iterator"),m=e("./string_iterator"),f=e("69fc55d3335ce932").Buffer;class i extends d.LazyIterator{decodeUTF8(){return new o(this)}}class o extends m.StringIterator{constructor(a){super();this.upstream=a,this.impl=new n(a)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class n extends d.OneToManyIterator{constructor(a){super();if(this.upstream=a,(0,r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:l}=e("612ce43bcec9ac1");this.decoder=new l("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const a=await this.upstream.next();let l;if(a.done)return!1;l=a.value;let u;return(0,r.env)().get("IS_BROWSER")?u=this.decoder.decode(l,{stream:!0}):u=this.decoder.write(f.from(l.buffer)),this.outputQueue.push(u),!0}}},{"69fc55d3335ce932":"cPU1M","@tensorflow/tfjs-core":"fqGP4","./lazy_iterator":"1Yg9n","./string_iterator":"fGHQ3","612ce43bcec9ac1":"34v0S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fGHQ3:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"StringIterator",()=>d);var r=e("./lazy_iterator");class d extends r.LazyIterator{split(o){return new m(this,o)}}class m extends d{constructor(o,n){super();this.upstream=o,this.impl=new f(o,n)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class f extends r.OneToManyIterator{constructor(o,n){super();this.upstream=o,this.separator=n,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const o=await this.upstream.next();if(o.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const n=o.value.split(this.separator);n[0]=this.carryover+n[0];for(const c of n.slice(0,-1))this.outputQueue.push(c);return this.carryover=n[n.length-1],!0}}},{"./lazy_iterator":"1Yg9n","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bhsbG:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isLocalPath",()=>r);function r(d){return typeof d=="string"&&d.slice(0,7)==="file://"}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],e2clH:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"FileDataSource",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../datasource"),m=e("../iterators/file_chunk_iterator"),f=e("../util/source_util");class i extends d.DataSource{constructor(n,c={}){super();this.input=n,this.options=c}async iterator(){if((0,f.isLocalPath)(this.input)&&(0,r.env)().get("IS_NODE")){const n=e("9527430b37bc76c0");this.input=n.readFileSync(this.input.slice(7))}return new m.FileChunkIterator(this.input,this.options)}}},{"@tensorflow/tfjs-core":"fqGP4","../datasource":"fwAfn","../iterators/file_chunk_iterator":"277S2","../util/source_util":"bhsbG","9527430b37bc76c0":"34v0S","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"23j7a":[function(e,E,s){/** @license See the LICENSE file. */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"version",()=>r);const r="4.9.0"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5aFgU":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s);var r=e("./base");t.exportAll(r,s);var d=e("./register_all_kernels")},{"./base":"b926S","./register_all_kernels":"5sskX","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b926S:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MathBackendCPU",()=>d.MathBackendCPU),t.export(s,"version_cpu",()=>f.version),t.export(s,"shared",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./backend_cpu"),m=e("./shared"),f=e("./version");(0,r.registerBackend)("cpu",()=>new d.MathBackendCPU,1)},{"@tensorflow/tfjs-core":"fqGP4","./backend_cpu":"03o2V","./shared":"2aoP6","./version":"3ZoQK","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"03o2V":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MathBackendCPU",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./cpu_util");const m=r.kernel_impls.whereImpl;class f extends r.KernelBackend{nextDataId(){return f.nextDataId++}constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,(0,r.engine)())}write(o,n,c){this.firstUse&&(this.firstUse=!1,(0,r.env)().get("IS_NODE")&&r.backend_util.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:o,dtype:c,refCount:1}),a}makeTensorInfo(o,n,c){let a;if(n==="string"&&c!=null&&c.length>0&&r.util.isString(c[0])){const l=c.map(u=>r.util.encodeString(u));a=this.write(l,o,n)}else a=this.write(c,o,n);return{dataId:a,shape:o,dtype:n}}refCount(o){return this.data.has(o)?this.data.get(o).refCount:0}incRef(o){const n=this.data.get(o);n.refCount++}decRef(o){if(this.data.has(o)){const n=this.data.get(o);n.refCount--}}move(o,n,c,a,l){this.data.set(o,{values:n,dtype:a,refCount:l})}numDataIds(){return this.data.numDataIds()}async read(o){return this.readSync(o)}readSync(o){const{dtype:n,complexTensorInfos:c}=this.data.get(o);if(n==="complex64"){const a=this.readSync(c.real.dataId),l=this.readSync(c.imag.dataId);return r.backend_util.mergeRealAndImagArrays(a,l)}return r.util.convertBackendValuesAndArrayBuffer(this.data.get(o).values,n)}bufferSync(o){const n=this.readSync(o.dataId);if(o.dtype==="string")try{const c=n.map(a=>r.util.decodeString(a));return(0,r.buffer)(o.shape,o.dtype,c)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.buffer)(o.shape,o.dtype,n)}makeOutput(o,n,c){return(0,r.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(n,c,o),this)}disposeData(o,n=!1){if(this.data.has(o)){if(this.data.get(o).refCount--,!n&&this.data.get(o).refCount>0)return!1;const{complexTensorInfos:c}=this.data.get(o);c!=null&&(this.disposeData(c.real.dataId,!0),this.disposeData(c.imag.dataId,!0)),this.data.delete(o)}return!0}disposeIntermediateTensorInfo(o){this.disposeData(o.dataId)}async time(o){const n=r.util.now();return o(),{kernelMs:r.util.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(o){(0,d.assertNotComplex)([o],"where");const n=this.readSync(o.dataId);return m(o.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}f.nextDataId=0},{"@tensorflow/tfjs-core":"fqGP4","./cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iDDPS:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"assertNotComplex",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f){Array.isArray(m)||(m=[m]),m.forEach(i=>{i!=null&&r.util.assert(i.dtype!=="complex64",()=>`${f} does not support complex64 tensors in the CPU backend.`)})}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2aoP6":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"simpleAbsImpl",()=>r.simpleAbsImpl),t.export(s,"addImpl",()=>d.addImpl),t.export(s,"bincountImpl",()=>m.bincountImpl),t.export(s,"bincountReduceImpl",()=>m.bincountReduceImpl),t.export(s,"bitwiseAndImpl",()=>f.bitwiseAndImpl),t.export(s,"castImpl",()=>i.castImpl),t.export(s,"ceilImpl",()=>o.ceilImpl),t.export(s,"concatImpl",()=>n.concatImpl),t.export(s,"equalImpl",()=>c.equalImpl),t.export(s,"expImpl",()=>a.expImpl),t.export(s,"expm1Impl",()=>l.expm1Impl),t.export(s,"floorImpl",()=>u.floorImpl),t.export(s,"floorDivImpl",()=>p.floorDivImpl),t.export(s,"gatherNdImpl",()=>h.gatherNdImpl),t.export(s,"gatherV2Impl",()=>g.gatherV2Impl),t.export(s,"greaterImpl",()=>v.greaterImpl),t.export(s,"greaterEqualImpl",()=>_.greaterEqualImpl),t.export(s,"lessImpl",()=>k.lessImpl),t.export(s,"lessEqualImpl",()=>y.lessEqualImpl),t.export(s,"linSpaceImpl",()=>x.linSpaceImpl),t.export(s,"logImpl",()=>b.logImpl),t.export(s,"maxImpl",()=>C.maxImpl),t.export(s,"maximumImpl",()=>w.maximumImpl),t.export(s,"minimumImpl",()=>N.minimumImpl),t.export(s,"multiplyImpl",()=>T.multiplyImpl),t.export(s,"negImpl",()=>F.negImpl),t.export(s,"notEqualImpl",()=>S.notEqualImpl),t.export(s,"prodImpl",()=>I.prodImpl),t.export(s,"raggedGatherImpl",()=>j.raggedGatherImpl),t.export(s,"raggedRangeImpl",()=>D.raggedRangeImpl),t.export(s,"raggedTensorToTensorImpl",()=>O.raggedTensorToTensorImpl),t.export(s,"rangeImpl",()=>$.rangeImpl),t.export(s,"rsqrtImpl",()=>P.rsqrtImpl),t.export(s,"scatterImpl",()=>R.scatterImpl),t.export(s,"sigmoidImpl",()=>A.sigmoidImpl),t.export(s,"sliceImpl",()=>z.sliceImpl),t.export(s,"sparseFillEmptyRowsImpl",()=>G.sparseFillEmptyRowsImpl),t.export(s,"sparseReshapeImpl",()=>L.sparseReshapeImpl),t.export(s,"sparseSegmentReductionImpl",()=>M.sparseSegmentReductionImpl),t.export(s,"sqrtImpl",()=>V.sqrtImpl),t.export(s,"squaredDifferenceImpl",()=>K.squaredDifferenceImpl),t.export(s,"staticRegexReplaceImpl",()=>W.staticRegexReplaceImpl),t.export(s,"stridedSliceImpl",()=>H.stridedSliceImpl),t.export(s,"stringNGramsImpl",()=>Z.stringNGramsImpl),t.export(s,"stringSplitImpl",()=>Q.stringSplitImpl),t.export(s,"stringToHashBucketFastImpl",()=>te.stringToHashBucketFastImpl),t.export(s,"subImpl",()=>ee.subImpl),t.export(s,"tileImpl",()=>ne.tileImpl),t.export(s,"topKImpl",()=>se.topKImpl),t.export(s,"transposeImpl",()=>X.transposeImpl),t.export(s,"uniqueImpl",()=>U.uniqueImpl);var r=e("./kernels/Abs"),d=e("./kernels/Add"),m=e("./kernels/Bincount_impl"),f=e("./kernels/BitwiseAnd"),i=e("./kernels/Cast"),o=e("./kernels/Ceil"),n=e("./kernels/Concat_impl"),c=e("./kernels/Equal"),a=e("./kernels/Exp"),l=e("./kernels/Expm1"),u=e("./kernels/Floor"),p=e("./kernels/FloorDiv"),h=e("./kernels/GatherNd_Impl"),g=e("./kernels/GatherV2_impl"),v=e("./kernels/Greater"),_=e("./kernels/GreaterEqual"),k=e("./kernels/Less"),y=e("./kernels/LessEqual"),x=e("./kernels/LinSpace_impl"),b=e("./kernels/Log"),C=e("./kernels/Max_impl"),w=e("./kernels/Maximum"),N=e("./kernels/Minimum"),T=e("./kernels/Multiply"),F=e("./kernels/Neg"),S=e("./kernels/NotEqual"),I=e("./kernels/Prod"),j=e("./kernels/RaggedGather_impl"),D=e("./kernels/RaggedRange_impl"),O=e("./kernels/RaggedTensorToTensor_impl"),$=e("./kernels/Range_impl"),P=e("./kernels/Rsqrt"),R=e("./kernels/Scatter_impl"),A=e("./kernels/Sigmoid"),z=e("./kernels/Slice"),G=e("./kernels/SparseFillEmptyRows_impl"),L=e("./kernels/SparseReshape_impl"),M=e("./kernels/SparseSegmentReduction_impl"),V=e("./kernels/Sqrt"),K=e("./kernels/SquaredDifference"),W=e("./kernels/StaticRegexReplace"),H=e("./kernels/StridedSlice_impl"),Z=e("./kernels/StringNGrams_impl"),Q=e("./kernels/StringSplit_impl"),te=e("./kernels/StringToHashBucketFast_impl"),ee=e("./kernels/Sub"),ne=e("./kernels/Tile_impl"),se=e("./kernels/TopK_impl"),X=e("./kernels/Transpose_impl"),U=e("./kernels/Unique_impl")},{"./kernels/Abs":"d2Px3","./kernels/Add":"dFYRX","./kernels/Bincount_impl":"2wuj1","./kernels/BitwiseAnd":"57U9c","./kernels/Cast":"k2vAt","./kernels/Ceil":"frV9C","./kernels/Concat_impl":"fssKt","./kernels/Equal":"89MJf","./kernels/Exp":"lXEkv","./kernels/Expm1":"g5OU0","./kernels/Floor":"e8zMm","./kernels/FloorDiv":"ei44J","./kernels/GatherNd_Impl":"casw3","./kernels/GatherV2_impl":"eBXcj","./kernels/Greater":"586AK","./kernels/GreaterEqual":"6Qm9a","./kernels/Less":"eleCz","./kernels/LessEqual":"8jPwM","./kernels/LinSpace_impl":"3ZlVW","./kernels/Log":"fYJhh","./kernels/Max_impl":"1ZQAD","./kernels/Maximum":"9lI6M","./kernels/Minimum":"i4jP7","./kernels/Multiply":"4mqHO","./kernels/Neg":"2NkPj","./kernels/NotEqual":"ci6rN","./kernels/Prod":"le7Nq","./kernels/RaggedGather_impl":"7uHOQ","./kernels/RaggedRange_impl":"l1PV5","./kernels/RaggedTensorToTensor_impl":"gMfoE","./kernels/Range_impl":"gZQNV","./kernels/Rsqrt":"LbCMb","./kernels/Scatter_impl":"10lQI","./kernels/Sigmoid":"3FvEQ","./kernels/Slice":"89s7e","./kernels/SparseFillEmptyRows_impl":"7XFhg","./kernels/SparseReshape_impl":"gWWVU","./kernels/SparseSegmentReduction_impl":"3qUTi","./kernels/Sqrt":"7kJaA","./kernels/SquaredDifference":"fm7An","./kernels/StaticRegexReplace":"gtSyF","./kernels/StridedSlice_impl":"gAc1i","./kernels/StringNGrams_impl":"k9Izu","./kernels/StringSplit_impl":"2nF5e","./kernels/StringToHashBucketFast_impl":"lzmh5","./kernels/Sub":"bvhLI","./kernels/Tile_impl":"lFIsP","./kernels/TopK_impl":"fXmDb","./kernels/Transpose_impl":"2q0S1","./kernels/Unique_impl":"i7WoT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d2Px3:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"simpleAbsImpl",()=>m),t.export(s,"abs",()=>f),t.export(s,"absConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(o){const n=new Float32Array(o.length);for(let c=0;c<o.length;++c)n[c]=Math.abs(o[c]);return n}const f=o=>{const{x:n}=o.inputs,c=o.backend;(0,d.assertNotComplex)(n,"abs");let a=new Float32Array(r.util.sizeFromShape(n.shape));const l=c.data.get(n.dataId).values;return a=m(l),c.makeOutput(a,n.shape,n.dtype)},i={kernelName:r.Abs,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dFYRX:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"addImpl",()=>f),t.export(s,"addComplexImpl",()=>i),t.export(s,"add",()=>o),t.export(s,"addConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((c,a)=>c+a),i=(0,m.createComplexBinaryKernelImpl)((c,a,l,u)=>({real:c+l,imag:a+u})),o=(0,m.binaryKernelFunc)(r.Add,f,i),n={kernelName:r.Add,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1g9Al":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"createSimpleBinaryKernelImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m){return(f,i,o,n,c)=>{const a=r.backend_util.assertAndGetBroadcastShape(f,i),l=a.length,u=r.util.computeStrides(a),p=r.util.sizeFromShape(a),h=r.util.getTypedArrayFromDType(c,p),g=f.length,v=i.length,_=r.util.computeStrides(f),k=r.util.computeStrides(i),y=r.backend_util.getBroadcastDims(f,a),x=r.backend_util.getBroadcastDims(i,a);if(y.length+x.length===0)for(let b=0;b<h.length;++b)h[b]=m(o[b%o.length],n[b%n.length]);else for(let b=0;b<h.length;++b){const C=r.util.indexToLoc(b,l,u),w=C.slice(-g);y.forEach(S=>w[S]=0);const N=r.util.locToIndex(w,g,_),T=C.slice(-v);x.forEach(S=>T[S]=0);const F=r.util.locToIndex(T,v,k);h[b]=m(o[N],n[F])}return[h,a]}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8hyWb":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"binaryKernelFunc",()=>i),t.export(s,"createComplexBinaryKernelImpl",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../kernels/Cast"),f=e("../kernels/Complex");function i(n,c,a,l){return a==null?({inputs:u,backend:p})=>{const{a:h,b:g}=u,v=p;(0,d.assertNotComplex)([h,g],n);const _=v.data.get(h.dataId).values,k=v.data.get(g.dataId).values,y=h.dtype==="string"?r.backend_util.fromUint8ToStringArray(_):_,x=h.dtype==="string"?r.backend_util.fromUint8ToStringArray(k):k,b=l||h.dtype,[C,w]=c(h.shape,g.shape,y,x,b);return v.makeTensorInfo(w,b,C)}:({inputs:u,backend:p})=>{const{a:h,b:g}=u,v=p;if(h.dtype==="complex64"||g.dtype==="complex64"){const _=(0,m.cast)({inputs:{x:h},backend:v,attrs:{dtype:"complex64"}}),k=v.data.get(_.dataId),y=k.complexTensorInfos.real,x=k.complexTensorInfos.imag,b=v.data.get(y.dataId).values,C=v.data.get(x.dataId).values,w=(0,m.cast)({inputs:{x:g},backend:v,attrs:{dtype:"complex64"}}),N=v.data.get(w.dataId),T=N.complexTensorInfos.real,F=N.complexTensorInfos.imag,S=v.data.get(T.dataId).values,I=v.data.get(F.dataId).values,[j,D,O]=a(h.shape,g.shape,b,C,S,I),$=v.makeTensorInfo(O,"float32",j),P=v.makeTensorInfo(O,"float32",D),R=(0,f.complex)({inputs:{real:$,imag:P},backend:v});return v.disposeIntermediateTensorInfo(_),v.disposeIntermediateTensorInfo(w),v.disposeIntermediateTensorInfo($),v.disposeIntermediateTensorInfo(P),R}else{const _=v.data.get(h.dataId).values,k=v.data.get(g.dataId).values,y=l||h.dtype,[x,b]=c(h.shape,g.shape,_,k,y);return v.makeTensorInfo(b,y,x)}}}function o(n){return(c,a,l,u,p,h)=>{const g=r.backend_util.assertAndGetBroadcastShape(c,a),v=r.util.sizeFromShape(g),_=g.length,k=r.util.computeStrides(g),y=r.util.getTypedArrayFromDType("float32",v),x=r.util.getTypedArrayFromDType("float32",v),b=r.backend_util.getBroadcastDims(c,g),C=r.backend_util.getBroadcastDims(a,g),w=r.backend_util.mergeRealAndImagArrays(l,u),N=r.backend_util.mergeRealAndImagArrays(p,h),T=c.length,F=r.util.computeStrides(c),S=a.length,I=r.util.computeStrides(a);if(b.length+C.length===0)for(let j=0;j<y.length;j++){const D=j%w.length,O=j%N.length,$=n(w[D*2],w[D*2+1],N[O*2],N[O*2+1]);y[j]=$.real,x[j]=$.imag}else for(let j=0;j<y.length;j++){const D=r.util.indexToLoc(j,_,k),O=D.slice(-T);b.forEach(z=>O[z]=0);const $=r.util.locToIndex(O,T,F),P=D.slice(-S);C.forEach(z=>P[z]=0);const R=r.util.locToIndex(P,S,I),A=n(w[$*2],w[$*2+1],N[R*2],N[R*2+1]);y[j]=A.real,x[j]=A.imag}return[y,x,g]}}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../kernels/Cast":"k2vAt","../kernels/Complex":"f0JWF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k2vAt:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"castImpl",()=>n),t.export(s,"cast",()=>c),t.export(s,"castConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/zeros_impl"),f=e("./Complex"),i=e("./Identity"),o=e("./Real");function n(l,u,p,h){if(h==="int32"){const g=Int32Array.from(l);return[u,"int32",g]}if(h==="bool"){const g=r.util.toTypedArray([0],p),[v,_]=(0,d.createSimpleBinaryKernelImpl)((k,y)=>k!==y?1:0)(u,[],l,g,"bool");return[_,"bool",v]}throw new Error(`Error in Cast: failed to cast ${p} to ${h}`)}function c(l){const{inputs:u,backend:p,attrs:h}=l,{x:g}=u,{dtype:v}=h;if(v==="complex64"){if(g.dtype==="complex64")return(0,i.identity)({inputs:{x:g},backend:p});const b=(0,m.zeros)(p,g.shape,g.dtype),C=c({inputs:{x:g},backend:p,attrs:{dtype:"float32"}}),w=(0,f.complex)({inputs:{real:C,imag:b},backend:p});return p.disposeIntermediateTensorInfo(b),p.disposeIntermediateTensorInfo(C),w}if(g.dtype==="complex64"){const b=(0,o.real)({inputs:{input:g},backend:p}),C=c({inputs:{x:b},backend:p,attrs:{dtype:v}});return p.disposeIntermediateTensorInfo(b),C}if(!r.util.hasEncodingLoss(g.dtype,v)){const b=(0,i.identity)({inputs:{x:g},backend:p});return{dataId:b.dataId,shape:b.shape,dtype:v}}const _=p.data.get(g.dataId).values,[k,y,x]=n(_,g.shape,g.dtype,v);return p.makeTensorInfo(k,y,x)}const a={kernelName:r.Cast,backendName:"cpu",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/zeros_impl":"3e0Ul","./Complex":"f0JWF","./Identity":"dW73G","./Real":"bFwFI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3e0Ul":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"zeros",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("../kernels/Complex");function m(f,i,o="float32"){if(o==="complex64"){const c=m(f,i,"float32"),a=m(f,i,"float32");return(0,d.complex)({inputs:{real:c,imag:a},backend:f})}const n=r.util.makeZerosTypedArray(r.util.sizeFromShape(i),o);return f.makeTensorInfo(i,o,n)}},{"@tensorflow/tfjs-core":"fqGP4","../kernels/Complex":"f0JWF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],f0JWF:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"complex",()=>d),t.export(s,"complexConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o}=f,{real:n,imag:c}=i,a=o.data.get(n.dataId).values,l=o.data.get(c.dataId).values,u=o.makeTensorInfo(n.shape,"complex64"),p=o.data.get(u.dataId);return p.complexTensorInfos={real:o.makeTensorInfo(n.shape,"float32",a),imag:o.makeTensorInfo(c.shape,"float32",l)},u}const m={kernelName:r.Complex,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dW73G:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"identity",()=>d),t.export(s,"identityConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o}=f,{x:n}=i;return o.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const m={kernelName:r.Identity,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bFwFI:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"real",()=>d),t.export(s,"realConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o}=f,{input:n}=i,c=o.data.get(n.dataId).complexTensorInfos.real,a=o.data.get(c.dataId).values;return o.makeTensorInfo(c.shape,c.dtype,a)}const m={kernelName:r.Real,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2wuj1":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"bincountImpl",()=>d),t.export(s,"bincountReduceImpl",()=>m);var r=e("@tensorflow/tfjs-core");function d(f,i,o,n,c){const a=r.util.sizeFromShape(n),l=r.util.makeZerosTypedArray(c,o);for(let u=0;u<f.length;u++){const p=f[u];if(p<0)throw new Error("Input x must be non-negative!");p>=c||(a>0?l[p]+=i[u]:l[p]+=1)}return l}function m(f,i,o,n=!1){const c=f.shape[0],a=f.shape[1],l=(0,r.buffer)([c,o],i.dtype);for(let u=0;u<c;u++)for(let p=0;p<a;p++){const h=f.get(u,p);if(h<0)throw new Error("Input x must be non-negative!");h>=o||(n?l.set(1,u,h):i.size>0?l.set(l.get(u,h)+i.get(u,p),u,h):l.set(l.get(u,h)+1,u,h))}return l}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"57U9c":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"bitwiseAndImpl",()=>f),t.export(s,"bitwiseAnd",()=>i),t.export(s,"bitwiseAndConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n&c),i=(0,m.binaryKernelFunc)(r.BitwiseAnd,f),o={kernelName:r.BitwiseAnd,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],frV9C:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ceilImpl",()=>f),t.export(s,"ceil",()=>i),t.export(s,"ceilConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)(n=>Math.ceil(n)),i=(0,m.unaryKernelFuncFromImpl)(r.Ceil,f),o={kernelName:r.Ceil,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],czX7R:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"createSimpleUnaryImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m){return(f,i,o)=>{const n=r.util.getArrayFromDType(i,f.length);for(let c=0;c<f.length;++c)n[c]=m(f[c],o);return n}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"82OA7":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unaryKernelFunc",()=>f),t.export(s,"unaryKernelFuncFromImpl",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./unary_impl");function f(o,n,c){const a=(0,m.createSimpleUnaryImpl)(n);return i(o,a,c)}function i(o,n,c){return({inputs:a,attrs:l,backend:u})=>{const{x:p}=a;(0,d.assertNotComplex)(p,o);const h=u,g=h.data.get(p.dataId).values;let v;if(p.dtype==="string"){if(!Array.isArray(g))throw new Error("String tensor's value was not an instance of Array");v=r.backend_util.fromUint8ToStringArray(g)}else v=g;const _=c||p.dtype,k=n(v,_,l);return h.makeTensorInfo(p.shape,_,k)}}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./unary_impl":"czX7R","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fssKt:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concatImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o){const n=r.util.getArrayFromDType(i,r.util.sizeFromShape(f));if(o&&i!=="string"){let c=0;m.forEach(a=>{const l=r.util.sizeFromShape(a.shape);n.set(a.vals,c),c+=l})}else{let c=0;m.forEach(a=>{const l=i==="string"?r.backend_util.fromUint8ToStringArray(a.vals):a.vals;let u=0;for(let p=0;p<a.shape[0];++p){const h=p*f[1]+c;for(let g=0;g<a.shape[1];++g)n[h+g]=l[u++]}c+=a.shape[1]})}return n}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"89MJf":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"equalImpl",()=>f),t.export(s,"equal",()=>i),t.export(s,"equalConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n===c?1:0),i=(0,m.binaryKernelFunc)(r.Equal,f,null,"bool"),o={kernelName:r.Equal,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lXEkv:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expImpl",()=>f),t.export(s,"exp",()=>i),t.export(s,"expConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)(n=>Math.exp(n)),i=(0,m.unaryKernelFuncFromImpl)(r.Exp,f,"float32"),o={kernelName:r.Exp,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g5OU0:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expm1Impl",()=>f),t.export(s,"expm1",()=>i),t.export(s,"expm1Config",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)(n=>Math.expm1(n)),i=(0,m.unaryKernelFuncFromImpl)(r.Expm1,f),o={kernelName:r.Expm1,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],e8zMm:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"floorImpl",()=>f),t.export(s,"floor",()=>i),t.export(s,"floorConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)(n=>Math.floor(n)),i=(0,m.unaryKernelFuncFromImpl)(r.Floor,f),o={kernelName:r.Floor,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ei44J:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"floorDivImpl",()=>f),t.export(s,"floorDiv",()=>i),t.export(s,"floorDivConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>Math.floor(n/c)),i=(0,m.binaryKernelFunc)(r.FloorDiv,f,null,"int32"),o={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],casw3:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gatherNdImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o,n,c,a,l,u){const p=(0,r.buffer)([o,c],i);for(let h=0;h<o;h++){const g=[];let v=0;for(let _=0;_<n;_++){const k=m[h*n+_];v+=k*a[_],g.push(k)}if(v<0||v>=u/c)throw new Error(`Invalid indices: ${g} does not index into ${l}`);for(let _=0;_<c;_++)p.values[h*c+_]=f.get(...f.indexToLoc(v*c+_))}return p}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eBXcj:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gatherV2Impl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i){const o=(0,r.buffer)(i,m.dtype);for(let n=0;n<o.size;++n){const a=o.indexToLoc(n).slice(),l=a[0],u=a[2],p=f.locToIndex([l,u]);a[2]=f.values[p];const h=m.locToIndex(a);0<=h&&h<m.values.length&&(o.values[n]=m.values[h])}return o}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"586AK":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"greaterImpl",()=>f),t.export(s,"greater",()=>i),t.export(s,"greaterConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n>c?1:0),i=(0,m.binaryKernelFunc)(r.Greater,f,null,"bool"),o={kernelName:r.Greater,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6Qm9a":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"greaterEqualImpl",()=>f),t.export(s,"greaterEqual",()=>i),t.export(s,"greaterEqualConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n>=c?1:0),i=(0,m.binaryKernelFunc)(r.GreaterEqual,f,null,"bool"),o={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eleCz:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lessImpl",()=>f),t.export(s,"less",()=>i),t.export(s,"lessConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n<c?1:0),i=(0,m.binaryKernelFunc)(r.Less,f,null,"bool"),o={kernelName:r.Less,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8jPwM":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lessEqualImpl",()=>f),t.export(s,"lessEqual",()=>i),t.export(s,"lessEqualConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n<=c?1:0),i=(0,m.binaryKernelFunc)(r.LessEqual,f,null,"bool"),o={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3ZlVW":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"linSpaceImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i){const o=(f-m)/(i-1),n=r.util.makeZerosTypedArray(i,"float32");n[0]=m;for(let c=1;c<n.length;c++)n[c]=n[c-1]+o;return n}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fYJhh:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logImpl",()=>f),t.export(s,"log",()=>i),t.export(s,"logConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)(n=>Math.log(n)),i=(0,m.unaryKernelFuncFromImpl)(r.Log,f),o={kernelName:r.Log,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1ZQAD":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o){const n=r.util.getTypedArrayFromDType(o,r.util.sizeFromShape(i));for(let c=0;c<n.length;++c){const a=c*f;let l=m[a];for(let u=0;u<f;++u){const p=m[a+u];(Number.isNaN(p)||p>l)&&(l=p)}n[c]=l}return n}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9lI6M":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maximumImpl",()=>f),t.export(s,"maximum",()=>i),t.export(s,"maximumConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>Math.max(n,c)),i=(0,m.binaryKernelFunc)(r.Maximum,f),o={kernelName:r.Maximum,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],i4jP7:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"minimumImpl",()=>f),t.export(s,"minimum",()=>i),t.export(s,"minimumConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>Math.min(n,c)),i=(0,m.binaryKernelFunc)(r.Minimum,f),o={kernelName:r.Minimum,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4mqHO":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"multiplyImpl",()=>f),t.export(s,"multiplyComplexImpl",()=>i),t.export(s,"multiply",()=>o),t.export(s,"multiplyConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((c,a)=>c*a),i=(0,m.createComplexBinaryKernelImpl)((c,a,l,u)=>({real:c*l-a*u,imag:c*u+a*l})),o=(0,m.binaryKernelFunc)(r.Multiply,f,i),n={kernelName:r.Multiply,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2NkPj":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"negImpl",()=>f),t.export(s,"neg",()=>i),t.export(s,"negConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Multiply");function f(n,c,a){const l=r.util.createScalarValue(-1,a);return(0,m.multiplyImpl)([],c,l,n,a)}function i(n){const{inputs:c,backend:a}=n,{x:l}=c;(0,d.assertNotComplex)(l,"neg");const u=a.data.get(l.dataId).values,[p,h]=f(u,l.shape,l.dtype);return a.makeTensorInfo(h,l.dtype,p)}const o={kernelName:r.Neg,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Multiply":"4mqHO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ci6rN:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"notEqualImpl",()=>f),t.export(s,"notEqual",()=>i),t.export(s,"notEqualConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n!==c?1:0),i=(0,m.binaryKernelFunc)(r.NotEqual,f,null,"bool"),o={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],le7Nq:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"prodImpl",()=>f),t.export(s,"prod",()=>i),t.export(s,"prodConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Transpose");function f(n,c,a,l){const[u,p]=r.backend_util.computeOutAndReduceShapes(n,l),h=(0,r.upcastType)(c,"int32"),g=r.util.makeZerosTypedArray(r.util.sizeFromShape(u),h),v=r.util.sizeFromShape(p);for(let _=0;_<g.length;++_){const k=_*v;let y=1;for(let x=0;x<v;++x)y*=a[k+x];g[_]=y}return{outVals:g,outShape:u,outDtype:h}}function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{axis:p,keepDims:h}=l;(0,d.assertNotComplex)(u,"prod");const g=u.shape.length,v=r.util.parseAxisParam(p,u.shape),_=r.backend_util.getAxesPermutation(v,g);let k=v,y=u;const x=[];_!=null&&(y=(0,m.transpose)({inputs:{x:u},backend:a,attrs:{perm:_}}),x.push(y),k=r.backend_util.getInnerMostAxes(k.length,g));const b=a.data.get(y.dataId).values,{outVals:C,outShape:w,outDtype:N}=f(y.shape,y.dtype,b,k);let T=w;return h&&(T=r.backend_util.expandShapeToKeepDim(w,v)),x.forEach(F=>a.disposeIntermediateTensorInfo(F)),a.makeTensorInfo(T,N,C)}const o={kernelName:r.Prod,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9b6th":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transpose",()=>f),t.export(s,"transposeConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Transpose_impl");function f(o){const{inputs:n,attrs:c,backend:a}=o,{x:l}=n,{perm:u}=c;(0,d.assertNotComplex)(l,"transpose");const p=l.shape.length,h=new Array(p);for(let k=0;k<h.length;k++)h[k]=l.shape[u[k]];const g=a.data.get(l.dataId).values,v=(0,m.transposeImpl)(g,l.shape,l.dtype,u,h);return{dataId:a.write(v,h,l.dtype),shape:h,dtype:l.dtype}}const i={kernelName:r.Transpose,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Transpose_impl":"2q0S1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2q0S1":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transposeImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o,n){const c=f.length,a=r.util.sizeFromShape(f),l=r.util.computeStrides(f),u=r.util.computeStrides(n),p=r.util.getTypedArrayFromDType(i,r.util.sizeFromShape(n));for(let h=0;h<a;++h){const g=r.util.indexToLoc(h,c,l),v=new Array(g.length);for(let k=0;k<v.length;k++)v[k]=g[o[k]];const _=r.util.locToIndex(v,c,u);p[_]=m[h]}return p}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7uHOQ":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedGatherImpl",()=>a);var r=e("@tensorflow/tfjs-core");function d(l,u,p){l.forEach((h,g)=>{if(h<0||h>=p){const v=r.util.indexToLoc(g,u.length,r.util.computeStrides(u)).join(",");throw new Error(`indices[${v}] = ${h} is not in [0, ${p})`)}})}function m(l,u){for(let p=0;p<l.length;++p){const h=l[p],g=p===l.length-1?u:l[p+1].length;if(h.length===0)throw new Error("Ragged splits may not be empty");if(h[0]<0)throw new Error("Ragged splits must be non-negative");if(h[h.length-1]>g)throw new Error("Ragged splits must not point past values");for(let v=1;v<h.length;++v)if(h[v-1]>h[v])throw new Error("Ragged splits must be sorted in ascending order")}}function f(l,u,p,h){const g=[];let v=0;const _=u.length-1+p.length,k=new Array(_).fill(null).map(()=>[0]);m(p,h);let y=1;for(let x=0;x<u.length-1;++x){y*=u[x];const b=u[x+1];for(let C=1;C<y+1;++C)k[x].push(C*b)}for(let x=0;x<l.length;++x){let b=l[x],C=l[x]+1;for(let w=0;w<p.length;++w){const N=p[w],T=w+u.length-1;if(T>=0){const F=k[T],S=F[F.length-1]-N[b];for(let I=b;I<C;++I)k[T].push(N[I+1]+S)}b=N[b],C=N[C]}C!==b&&(g.push([b,C]),v+=C-b)}return{outSplits:k,valueSlices:g,numValues:v}}function i(l){const u=[];for(let p=0;p<l.length;++p){const h=l[p].length,g=r.util.getArrayFromDType("int32",h);u.push(g),l[p].forEach((v,_)=>g[_]=v)}return u}function o(l,u){const p=l.slice(0,u);for(;p.length<u;)p.push(1);for(let h=u;h<l.length;h++)p[u-1]*=l[h];return p}function n(l,u,p,h,g,v){const _=o(u,2)[1],k=o(v,2)[1];let y=0;for(const x of p)for(let b=x[0];b<x[1];++b){for(let C=0;C<h;++C)g[y*k+C]=l[b*_+C];++y}}function c(l,u,p,h,g){const v=u.slice();v[0]=g;const _=r.util.getArrayFromDType(p,r.util.sizeFromShape(v)),k=l.length,y=k===0?0:k/u[0];return n(l,u,h,y,_,v),[_,v]}function a(l,u,p,h,g,v,_,k){if(l.length===0)throw new Error("paramsNestedSplits must be non empty");if(u[0].length===0)throw new Error("Split tensors must not be scalars");const y=u[0][0]-1;if(d(v,_,y),h.length===0)throw new Error("params.rank must be nonzero");const x=h[0],{outSplits:b,valueSlices:C,numValues:w}=f(v,_,l,x),N=i(b),T=c(p,h,g,C,w);return[N,T[0],T[1]]}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],l1PV5:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedRangeImpl",()=>m);var r=e("@tensorflow/tfjs-core");const d=2147483647;function m(f,i,o,n,c,a,l){if(i.length>1)throw new Error("starts must be a scalar or vector");if(c.length>1)throw new Error("limits must be a scalar or vector");if(l.length>1)throw new Error("deltas must be a scalar or vector");const u=i.length===0,p=c.length===0,h=l.length===0,g=[];u||g.push(i[0]),p||g.push(c[0]),h||g.push(l[0]);for(let b=1;b<g.length;++b)if(g[b]!==g[b-1])throw new Error("starts, limits, and deltas must have the same shape");const v=g.length===0?1:g[0],_=r.util.getArrayFromDType("int32",v+1);_[0]=0;for(let b=0;b<v;++b){const C=u?f[0]:f[b],w=p?n[0]:n[b],N=h?a[0]:a[b];if(N===0)throw new Error("Requires delta != 0");let T;if(N>0&&w<C||N<0&&w>C)T=0;else if(T=Math.ceil(Math.abs((w-C)/N)),T>d)throw new Error(`Requires ((limit - start) / delta) <= ${d}`);_[b+1]=_[b]+T}const k=_[v],y=r.util.getArrayFromDType(o,k);let x=0;for(let b=0;b<v;++b){const C=_[b+1]-_[b];let w=u?f[0]:f[b];const N=h?a[0]:a[b];for(let T=0;T<C;++T)y[x++]=w,w+=N}return[_,y]}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gMfoE:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedTensorToTensorImpl",()=>o);var r=e("@tensorflow/tfjs-core"),d=r.backend_util.RowPartitionType;class m{constructor(c,a,l,u,p,h,g,v,_,k){this.shape=c,this.shapeShape=a,this.values=l,this.valuesShape=u,this.valuesDType=p,this.defaultValue=h,this.defaultValueShape=g,this.rowPartitionValues=v,this.rowPartitionValuesShapes=_,this.rowPartitionTypes=r.backend_util.getRowPartitionTypesHelper(k),this.raggedRank=r.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(c){return this.rowPartitionTypes[0]===d.FIRST_DIM_SIZE?this.rowPartitionTypes[c+1]:this.rowPartitionTypes[c]}getRowPartitionTensor(c){return this.rowPartitionTypes[0]===d.FIRST_DIM_SIZE?this.rowPartitionValues[c+1]:this.rowPartitionValues[c]}getMaxWidth(c){const a=this.getRowPartitionTensor(c-1);switch(this.getRowPartitionTypeByDimension(c-1)){case d.VALUE_ROWIDS:return m.getMaxWidthValueRowID(a);case d.ROW_SPLITS:return m.getMaxWidthRowSplit(a);default:throw new Error(`Cannot handle partition type ${d[this.getRowPartitionTypeByDimension(c-1)]}`)}}static getMaxWidthRowSplit(c){const a=c.length;if(a===0||a===1)return 0;let l=0;for(let u=0;u<a-1;++u){const p=c[u+1]-c[u];p>l&&(l=p)}return l}static getMaxWidthValueRowID(c){const a=c.length;if(a===0)return 0;let l=0,u=c[0],p=0;for(let h=1;h<a;++h){const g=c[h];g!==u&&(u=g,p=Math.max(h-l,p),l=h)}return Math.max(a-l,p)}tensorShapeFromTensor(c,a,l=!0){if(a.length===0){if(c[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return i(c,l)}calculateOutputSize(c){const a=this.valuesShape,l=this.defaultValueShape;r.backend_util.validateDefaultValueShape(l,a);const u=this.tensorShapeFromTensor(this.shape,this.shapeShape),h=r.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,u,a);h[0]<0&&(h[0]=c);for(let g=1;g<=this.raggedRank;++g)h[g]<0&&(h[g]=this.getMaxWidth(g));return h}calculateFirstParentOutputIndex(c,a,l){const u=Math.min(c,l),p=[];let h=0;for(let g=0;g<u;++g,h+=a)p.push(h);for(let g=u;g<c;++g)p.push(-1);return r.util.assert(p.length===c,()=>"Final length of result must be equal to firstDimension."),p}calculateOutputIndexRowSplit(c,a,l,u){const p=c.length,h=[];for(let g=0;g<p-1;++g){const v=c[g+1]-c[g];let _=Math.min(u,v),k=a[g];k===-1&&(_=0);for(let y=0;y<_;++y)h.push(k),k+=l;for(let y=0;y<v-_;++y)h.push(-1)}if(p>0&&h.length!==c[p-1])throw new Error("Invalid row split size.");return h}calculateOutputIndexValueRowID(c,a,l,u){const p=c.length,h=[];if(p===0)return[];let g=0,v=c[0];if(v>=a.length)throw new Error(`Got currentValueRowId=${v}, which is not less than ${a.length}`);let _=a[v];h.push(_);for(let k=1;k<p;++k){const y=c[k];if(y===v)_>=0&&(++g,g<u?_+=l:_=-1);else{if(g=0,v=y,y>=a.length)throw new Error(`Got nextValueRowId=${y} which is not less than ${a.length}`);_=a[y]}h.push(_)}if(h.length!==c.length)throw new Error("Invalid row ids.");return h}calculateOutputIndex(c,a,l,u){const p=this.getRowPartitionTensor(c),h=this.getRowPartitionTypeByDimension(c);switch(h){case d.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(p,a,l,u);case d.ROW_SPLITS:if(p.length-1>a.length)throw new Error(`Row partition size is greater than output size: ${p.length-1} > ${a.length}`);return this.calculateOutputIndexRowSplit(p,a,l,u);default:throw new Error(`Unsupported partition type: ${d[h]}`)}}getFirstDimensionSize(){const c=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const a=this.rowPartitionTypes[0];switch(a){case d.FIRST_DIM_SIZE:return c[0];case d.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case d.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${d[a]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const a=this.getFirstDimensionSize(),l=this.calculateOutputSize(a),u=new Array(this.raggedRank+1);u[u.length-1]=1;for(let v=u.length-2;v>=0;--v)u[v]=u[v+1]*l[v+1];const p=i(l,!1),h=r.util.getArrayFromDType(this.valuesDType,r.util.sizeFromShape(p));if(u[0]*l[0]>0){let v=this.calculateFirstParentOutputIndex(a,u[0],l[0]);for(let _=1;_<=this.raggedRank;++_)v=this.calculateOutputIndex(_-1,v,u[_],l[_]);this.setOutput(this.raggedRank,v,h,p)}return[p,h]}setOutput(c,a,l,u){if(l.length===0)return;const p=this.values,h=l;let g=u.slice();g=g.slice(c+1);const v=r.util.sizeFromShape(g),_=a.length;let k=this.defaultValue;if(k.length!==v&&k.length!==1){const C=this.defaultValueShape;(0,r.tidy)(()=>{const w=(0,r.reshape)(k,C);k=(0,r.broadcastTo)(w,g).dataSync()})}let y=0,x=0,b=0;for(let C=0;C<=_;++C){let w=C<_?a[C]:-1;if(w===b){++b;continue}if(x<b){const N=p.subarray(y*v),T=h.subarray(x*v),F=(b-x)*v;f(T,N,F)}if(C>=_){const N=l.length;w=Math.floor(N/v)}if(w>b)if(this.defaultValue.length===1)h.subarray(b*v,w*v).fill(this.defaultValue[0]),b=w;else for(;w>b;){const N=h.slice(b*v);f(N,k,v),++b}w<0?(y=C+1,x=b):(y=C,x=b,b=x+1)}}}function f(n,c,a){for(let l=0;l<a;l++)n[l]=c[l]}function i(n,c){const a=[];for(let l of n){if(l<0){if(!c)throw new Error(`Dimension ${l} must be >= 0`);if(l<-1)throw new Error(`Dimension ${l} must be >= -1`);l=-1}a.push(l)}return a}function o(n,c,a,l,u,p,h,g,v,_){return new m(n,c,a,l,u,p,h,g,v,_).compute()}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gZQNV:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rangeImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o){const n=m===f,c=m<f&&i<0,a=f<m&&i>1;if(n||c||a)return r.util.makeZerosTypedArray(0,o);const l=Math.abs(Math.ceil((f-m)/i)),u=r.util.makeZerosTypedArray(l,o);f<m&&i===1&&(i=-1),u[0]=m;for(let p=1;p<u.length;p++)u[p]=u[p-1]+i;return u}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],LbCMb:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rsqrtImpl",()=>f),t.export(s,"rsqrt",()=>i),t.export(s,"rsqrtConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)(n=>1/Math.sqrt(n)),i=(0,m.unaryKernelFuncFromImpl)(r.Rsqrt,f),o={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"10lQI":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"scatterImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o,n,c,a,l,u,p){const h=[o/n,n],g=m.values,v=f.values;if(o===0)return(0,r.buffer)(i,f.dtype);const _=u instanceof r.TensorBuffer?u:(0,r.buffer)(h,f.dtype);typeof u=="string"||typeof u=="number"?_.values.fill(u):typeof u=="boolean"&&_.values.fill(+u);for(let k=0;k<c;k++){const y=[];let x=0;for(let b=0;b<a;b++){const C=g[k*a+b];y.push(C),x+=C*l[b]}if(x<0||x>=o/n)throw new Error(`Invalid indices: ${y} does not index into ${i}`);for(let b=0;b<n;b++)p?_.values[x*n+b]+=v[k*n+b]:_.values[x*n+b]=f.rank===0?v[0]:v[k*n+b]}return _}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3FvEQ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sigmoidImpl",()=>f),t.export(s,"sigmoid",()=>i),t.export(s,"sigmoidConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)(n=>1/(1+Math.exp(-n))),i=(0,m.unaryKernelFunc)(r.Sigmoid,n=>1/(1+Math.exp(-n))),o={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"89s7e":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sliceImpl",()=>m),t.export(s,"slice",()=>f),t.export(s,"sliceConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(o,n,c,a,l){const u=r.slice_util.isSliceContinous(a,n,c),p=r.util.sizeFromShape(c),h=r.util.computeStrides(a);if(u){const k=r.slice_util.computeFlatOffset(n,h);return l==="string"?o.slice(k,k+p):o.subarray(k,k+p)}const g=l==="string"?r.backend_util.fromUint8ToStringArray(o):o,v=(0,r.buffer)(a,l,g),_=(0,r.buffer)(c,l);for(let k=0;k<_.size;++k){const y=_.indexToLoc(k),x=y.map((b,C)=>b+n[C]);_.set(v.get(...x),...y)}return l==="string"?r.backend_util.fromStringArrayToUint8(_.values):_.values}function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{begin:u,size:p}=a;(0,d.assertNotComplex)(l,"slice");const[h,g]=r.slice_util.parseSliceParams(l,u,p);r.slice_util.assertParamsValid(l,h,g);const v=c.data.get(l.dataId).values,_=m(v,h,g,l.shape,l.dtype);return c.makeTensorInfo(g,l.dtype,_)}const i={kernelName:r.Slice,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7XFhg":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseFillEmptyRowsImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o,n,c,a){const l=f[0],u=c[0],p=new Array(u),h=new Array(l),g=f[1];if(u===0){if(l!==0)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(l));const x=r.util.getArrayFromDType(i,0),b=r.util.getArrayFromDType(n,0);return[x,[0,g],b,p,h]}let v=!0,_=0;const k=new Array(u).fill(0);for(let x=0;x<l;++x){const b=m[x*g];if(b<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(x,b));if(b>=u)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(x,b,u));++k[b],v=v&&b>=_,_=b}let y=!0;for(let x=0;x<u;++x){const b=k[x]===0;p[x]=b,y=y&&!b,k[x]=Math.max(k[x],1),x>0&&(k[x]+=k[x-1])}if(y&&v){const x=m,b=o;for(let C=0;C<l;++C)h[C]=C;return[x,[l,g],b,p,h]}else{const x=k[u-1],b=r.util.getArrayFromDType(i,x*g),C=r.util.getArrayFromDType(n,x),w=new Array(u).fill(0);for(let N=0;N<l;++N){const T=m[N*g],F=w[T],S=(T===0?0:k[T-1])+F;w[T]++;for(let I=0;I<g;++I)b[S*g+I]=m[N*g+I];C[S]=o[N],h[N]=S}for(let N=0;N<u;++N)if(w[N]===0){const F=N===0?0:k[N-1];b[F*g+0]=N;for(let S=1;S<g;++S)b[F*g+S]=0;C[F]=a}return[b,[x,g],C,p,h]}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gWWVU:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseReshapeImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o,n){const c=r.util.sizeFromShape(o),a=f[0],l=n.length,u=[];let p=1,h=-1;for(let x=0;x<l;++x){const b=n[x];if(b===-1){if(h!==-1)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,x));h=x,u.push(1)}else{if(b<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(x,b));p*=b,u.push(b)}}if(h!==-1){if(p<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const x=Math.trunc(c/p);if(p*x!==c)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(o,u));u[h]=x}if(r.util.sizeFromShape(u)!==c)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(o,u));const v=o.length,_=[];if(v>0){_[v-1]=1;for(let x=v-2;x>=0;--x)_[x]=_[x+1]*o[x+1]}const k=[];if(l>0){k[l-1]=1;for(let x=l-2;x>=0;--x)k[x]=k[x+1]*u[x+1]}const y=r.util.getArrayFromDType(i,a*l);for(let x=0;x<a;++x){let b=0;for(let C=0;C<v;++C)b+=m[x*v+C]*_[C];for(let C=0;C<l;++C)y[x*l+C]=Math.trunc(b/k[C]),b%=k[C]}return[y,[a,l],u]}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3qUTi":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseSegmentReductionImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o,n,c=!1,a=0){const l=o.length,u=[f[0],m.length/f[0]],p=u[1],g=l>0?n[l-1]+1:0;if(g<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const v=f.slice();v[0]=g;const _=v.reduce((w,N)=>w*N,1),k=r.util.getArrayFromDType(i,_);if(l===0)return g>0&&k.fill(a),[k,v];if(g<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let y=0,x=1,b=0,C=n[y];for(;;){let w=0;if(x<l){if(w=n[x],C===w){++x;continue}if(C>=w)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(C<0||C>=g)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(C,g));C>b&&k.fill(a,b*p,C*p);for(let N=y;N<x;++N){const T=o[N];if(T<0||T>=u[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(N,o[N],u[0]));for(let F=0;F<p;F++)k[C*p+F]+=m[T*p+F]}if(c)for(let N=0;N<p;N++)k[C*p+N]/=x-y;if(y=x,++x,b=C+1,C=w,x>l)break}return b<g&&k.fill(a,b*p,g*p),[k,v]}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7kJaA":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sqrtImpl",()=>f),t.export(s,"sqrt",()=>i),t.export(s,"sqrtConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)(n=>Math.sqrt(n)),i=(0,m.unaryKernelFunc)(r.Sqrt,n=>Math.sqrt(n)),o={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fm7An:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"squaredDifferenceImpl",()=>f),t.export(s,"squaredDifference",()=>i),t.export(s,"squaredDifferenceConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>{const a=n-c;return a*a}),i=(0,m.binaryKernelFunc)(r.SquaredDifference,f),o={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gtSyF:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"staticRegexReplaceImpl",()=>f),t.export(s,"staticRegexReplaceConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_impl"),m=e("../utils/unary_utils");const f=(0,d.createSimpleUnaryImpl)((n,c)=>{const{pattern:a,replaceGlobal:l,rewrite:u}=c;return n.replace(new RegExp(a,l?"g":""),u)}),i=(0,m.unaryKernelFuncFromImpl)(r.StaticRegexReplace,f),o={kernelName:r.StaticRegexReplace,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_impl":"czX7R","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gAc1i:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stridedSliceImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o){const n=(0,r.buffer)(m,f.dtype);for(let c=0;c<n.size;c++){const a=n.indexToLoc(c),l=new Array(a.length);for(let u=0;u<l.length;u++)l[u]=a[u]*i[u]+o[u];n.set(f.get(...l),...a)}return n}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k9Izu:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringNGramsImpl",()=>m);var r=e("@tensorflow/tfjs-core");class d{constructor(i,o,n,c,a,l){this.separator=r.util.encodeString(i),this.nGramWidths=o,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(c),this.padWidth=a,this.preserveShort=l}getPadWidth(i){return Math.min(this.padWidth<0?i-1:this.padWidth,i-1)}getNumNGrams(i,o){const n=this.getPadWidth(o);return Math.max(0,i+2*n-o+1)}createNGrams(i,o,n,c,a,l){for(let u=0;u<a;++u){const p=this.getPadWidth(l),h=Math.max(0,p-u),g=Math.max(0,p-(a-(u+1))),v=l-(h+g),_=o+(h>0?0:u-p);let k=0;k+=h*this.leftPad.length;for(let w=0;w<v;++w)k+=i[_+w].length;k+=g*this.rightPad.length,k+=(h+g+v-1)*this.separator.length,n[c+u]=new Uint8Array(k);const x=n[c+u];let b=0;const C=w=>w.forEach(N=>x[b++]=N);for(let w=0;w<h;++w)C(this.leftPad),C(this.separator);for(let w=0;w<v-1;++w)C(i[_+w]),C(this.separator);if(v>0){C(i[_+v-1]);for(let w=0;w<g;++w)C(this.separator),C(this.rightPad)}else{for(let w=0;w<g-1;++w)C(this.rightPad),C(this.separator);C(this.rightPad)}}}compute(i,o){const n=i.length,c=o.length;if(c>0){let p=o[0];if(p!==0)throw new Error(`First split value must be 0, got ${p}`);for(let h=1;h<c;++h){let g=o[h]>=p;if(g=g&&o[h]<=n,!g)throw new Error(`Invalid split value ${o[h]}, must be in [${p}, ${n}]`);p=o[h]}if(p!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${p}`)}const a=c-1,l=r.util.getArrayFromDType("int32",c);if(n===0||c===0){const p=new Array(n);for(let h=0;h<=a;++h)l[h]=0;return[p,l]}l[0]=0;for(let p=1;p<=a;++p){const h=o[p]-o[p-1];let g=0;this.nGramWidths.forEach(v=>{g+=this.getNumNGrams(h,v)}),this.preserveShort&&h>0&&g===0&&(g=1),l[p]=l[p-1]+g}const u=new Array(l[a]);for(let p=0;p<a;++p){const h=o[p];let g=l[p];if(this.nGramWidths.forEach(v=>{const _=o[p+1]-o[p],k=this.getNumNGrams(_,v);this.createNGrams(i,h,u,g,k,v),g+=k}),this.preserveShort&&g===l[p]){const v=o[p+1]-o[p];if(v===0)continue;const _=v+2*this.padWidth,k=1;this.createNGrams(i,h,u,g,k,_)}}return[u,l]}}function m(f,i,o,n,c,a,l,u){return new d(o,n,c,a,l,u).compute(f,i)}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2nF5e":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringSplitImpl",()=>m);var r=e("@tensorflow/tfjs-core");function d(f,i,o,n){if(!f.length)return;if(i.length===0){for(let a=0;a<f.length;++a)n.push(f.subarray(a,a+1));return}if(i.length===1){const a=i[0];let l=f.indexOf(a);for(;l!==-1;){const u=f.subarray(0,l);(!o||u.length!==0)&&n.push(u),f=f.subarray(l+1),l=f.indexOf(a)}(!o||f.length!==0)&&n.push(f);return}let c=0;for(let a=0;a<f.length+1;a++)if(a===f.length||i.indexOf(f[a])!==-1){const l=f.subarray(c,a);(!o||l.length!==0)&&n.push(l),c=a+1}}function m(f,i,o){const n=f.length,c=[];let a=0,l=0;const u=new Array(n);for(let _=0;_<n;++_){const k=c.length;d(f[_],i,o,c);const y=c.length-k;u[_]=y,a+=y,l=Math.max(l,y)}const p=r.util.getArrayFromDType("int32",a*2),h=new Array(a),g=[n,l];let v=0;for(let _=0;_<n;++_)for(let k=0;k<u[_];++k)p[v*2]=_,p[v*2+1]=k,h[v]=c[v],++v;return[p,h,g]}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lzmh5:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringToHashBucketFastImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f){const i=r.util.getArrayFromDType("int32",m.length);for(let o=0;o<m.length;++o)i[o]=r.util.fingerPrint64(m[o]).modulo(f).getLowBitsUnsigned();return i}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bvhLI:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"subImpl",()=>f),t.export(s,"subComplexImpl",()=>i),t.export(s,"sub",()=>o),t.export(s,"subConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((c,a)=>c-a),i=(0,m.createComplexBinaryKernelImpl)((c,a,l,u)=>({real:c-l,imag:a-u})),o=(0,m.binaryKernelFunc)(r.Sub,f,i),n={kernelName:r.Sub,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lFIsP:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tileImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f){const i=new Array(m.rank);for(let n=0;n<i.length;n++)i[n]=m.shape[n]*f[n];const o=(0,r.buffer)(i,m.dtype);for(let n=0;n<o.values.length;++n){const c=o.indexToLoc(n),a=new Array(m.rank);for(let u=0;u<a.length;u++)a[u]=c[u]%m.shape[u];const l=m.locToIndex(a);o.values[n]=m.values[l]}return o}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fXmDb:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"topKImpl",()=>f);var r=e("@tensorflow/tfjs-core");const d=(i,o)=>{const n=o.value-i.value;return n===0?i.index-o.index:n};function m(i,o,n=0,c=i.length-1){for(;c>n;){if(c-n>600){const p=c-n+1,h=o-n+1,g=Math.log(p),v=.5*Math.exp(2*g/3),_=.5*Math.sqrt(g*v*(p-v)/p)*Math.sign(h-p/2),k=Math.max(n,Math.floor(o-h*v/p+_)),y=Math.min(c,Math.floor(o+(p-h)*v/p+_));m(i,o,k,y)}const a=i[o];let l=n,u=c;for(r.util.swap(i,n,o),d(i[c],a)>0&&r.util.swap(i,n,c);l<u;){for(r.util.swap(i,l,u),l++,u--;d(i[l],a)<0;)l=l+1;for(;d(i[u],a)>0;)u=u-1}d(i[n],a)===0?r.util.swap(i,n,u):(u=u+1,r.util.swap(i,u,c)),u<=o&&(n=u+1),o<=u&&(c=u-1)}}function f(i,o,n,c,a){const l=o[o.length-1],[u,p]=[i.length/l,l],h=r.util.getTypedArrayFromDType(n,u*c),g=r.util.getTypedArrayFromDType("int32",u*c);for(let _=0;_<u;_++){const k=_*p,y=i.subarray(k,k+p);let x=new Array(y.length);y.forEach((N,T)=>x[T]={value:N,index:T}),c<x.length&&(m(x,c),x=x.slice(0,c)),a&&x.sort(d);const b=_*c,C=h.subarray(b,b+c),w=g.subarray(b,b+c);for(let N=0;N<c;N++)C[N]=x[N].value,w[N]=x[N].index}const v=o.slice();return v[v.length-1]=c,[(0,r.buffer)(v,n,h),(0,r.buffer)(v,"int32",g)]}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],i7WoT:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"uniqueImpl",()=>d);var r=e("@tensorflow/tfjs-core");function d(m,f,i,o){const n=r.util.parseAxisParam(f,i)[0],c=[1,i[0],1];for(let k=0;k<n;k++)c[0]*=i[k];c[1]=i[n];for(let k=n+1;k<i.length;k++)c[2]*=i[k];const a=new Map,l=new Int32Array(i[n]),u=new r.TensorBuffer(c,o,m),p=[],h=c[0]===1&&c[2]===1;for(let k=0;k<i[n];k++){let y;if(h)y=m[k].toString();else{const b=[];for(let C=0;C<c[0];C++)for(let w=0;w<c[2];w++)b.push(u.get(C,k,w));y=b.join(",")}const x=a.get(y);if(x!=null)l[k]=x;else{const b=a.size;a.set(y,b),l[k]=b,p.push(k)}}const g=c.slice();g[1]=a.size;const v=new r.TensorBuffer(g,o);p.forEach((k,y)=>{for(let x=0;x<c[0];x++)for(let b=0;b<c[2];b++)v.set(u.get(x,k,b),x,y,b)});const _=i.slice();return _[n]=g[1],{outputValues:v.values,outputShape:_,indices:l}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3ZoQK":[function(e,E,s){/** @license See the LICENSE file. */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"version",()=>r);const r="4.9.0"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5sskX":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@tensorflow/tfjs-core"),r=e("./kernels/_FusedMatMul"),d=e("./kernels/Abs"),m=e("./kernels/Acos"),f=e("./kernels/Acosh"),i=e("./kernels/Add"),o=e("./kernels/AddN"),n=e("./kernels/All"),c=e("./kernels/Any"),a=e("./kernels/ArgMax"),l=e("./kernels/ArgMin"),u=e("./kernels/Asin"),p=e("./kernels/Asinh"),h=e("./kernels/Atan"),g=e("./kernels/Atan2"),v=e("./kernels/Atanh"),_=e("./kernels/AvgPool"),k=e("./kernels/AvgPool3D"),y=e("./kernels/AvgPool3DGrad"),x=e("./kernels/AvgPoolGrad"),b=e("./kernels/BatchMatMul"),C=e("./kernels/BatchNorm"),w=e("./kernels/BatchToSpaceND"),N=e("./kernels/Bincount"),T=e("./kernels/BitwiseAnd"),F=e("./kernels/BroadcastArgs"),S=e("./kernels/Cast"),I=e("./kernels/Ceil"),j=e("./kernels/ClipByValue"),D=e("./kernels/Complex"),O=e("./kernels/ComplexAbs"),$=e("./kernels/Concat"),P=e("./kernels/Conv2D"),R=e("./kernels/Conv2DBackpropFilter"),A=e("./kernels/Conv2DBackpropInput"),z=e("./kernels/Conv3D"),G=e("./kernels/Conv3DBackpropFilterV2"),L=e("./kernels/Conv3DBackpropInputV2"),M=e("./kernels/Cos"),V=e("./kernels/Cosh"),K=e("./kernels/CropAndResize"),W=e("./kernels/Cumprod"),H=e("./kernels/Cumsum"),Z=e("./kernels/DenseBincount"),Q=e("./kernels/DepthToSpace"),te=e("./kernels/DepthwiseConv2dNative"),ee=e("./kernels/DepthwiseConv2dNativeBackpropFilter"),ne=e("./kernels/DepthwiseConv2dNativeBackpropInput"),se=e("./kernels/Diag"),X=e("./kernels/Dilation2D"),U=e("./kernels/Dilation2DBackpropFilter"),Y=e("./kernels/Dilation2DBackpropInput"),J=e("./kernels/Draw"),q=e("./kernels/Einsum"),ae=e("./kernels/Elu"),ie=e("./kernels/EluGrad"),le=e("./kernels/Equal"),ue=e("./kernels/Erf"),B=e("./kernels/Exp"),re=e("./kernels/ExpandDims"),oe=e("./kernels/Expm1"),de=e("./kernels/FFT"),fe=e("./kernels/Fill"),pe=e("./kernels/FlipLeftRight"),me=e("./kernels/Floor"),he=e("./kernels/FloorDiv"),ge=e("./kernels/FusedConv2D"),ve=e("./kernels/FusedDepthwiseConv2D"),ke=e("./kernels/GatherNd"),_e=e("./kernels/GatherV2"),ye=e("./kernels/Greater"),be=e("./kernels/GreaterEqual"),Ce=e("./kernels/Identity"),we=e("./kernels/IFFT"),xe=e("./kernels/Imag"),Ne=e("./kernels/IsFinite"),Ie=e("./kernels/IsInf"),Te=e("./kernels/IsNaN"),Ee=e("./kernels/LeakyRelu"),Fe=e("./kernels/Less"),De=e("./kernels/LessEqual"),Ae=e("./kernels/LinSpace"),Pe=e("./kernels/Log"),Re=e("./kernels/Log1p"),$e=e("./kernels/LogicalAnd"),Oe=e("./kernels/LogicalNot"),Se=e("./kernels/LogicalOr"),je=e("./kernels/LRN"),ze=e("./kernels/LRNGrad"),Ge=e("./kernels/Max"),Le=e("./kernels/Maximum"),Me=e("./kernels/MaxPool"),Ve=e("./kernels/MaxPool3D"),Ue=e("./kernels/MaxPool3DGrad"),Be=e("./kernels/MaxPoolGrad"),He=e("./kernels/MaxPoolWithArgmax"),We=e("./kernels/Mean"),Ke=e("./kernels/Min"),ce=e("./kernels/Minimum"),Ye=e("./kernels/MirrorPad"),Xe=e("./kernels/Mod"),Ze=e("./kernels/Multinomial"),Qe=e("./kernels/Multiply"),Je=e("./kernels/Neg"),qe=e("./kernels/NonMaxSuppressionV3"),et=e("./kernels/NonMaxSuppressionV4"),tt=e("./kernels/NonMaxSuppressionV5"),st=e("./kernels/NotEqual"),rt=e("./kernels/OneHot"),nt=e("./kernels/OnesLike"),at=e("./kernels/Pack"),ot=e("./kernels/PadV2"),lt=e("./kernels/Pow"),it=e("./kernels/Prelu"),ct=e("./kernels/Prod"),ut=e("./kernels/RaggedGather"),pt=e("./kernels/RaggedRange"),dt=e("./kernels/RaggedTensorToTensor"),ft=e("./kernels/Range"),mt=e("./kernels/Real"),ht=e("./kernels/RealDiv"),gt=e("./kernels/Reciprocal"),vt=e("./kernels/Relu"),_t=e("./kernels/Relu6"),kt=e("./kernels/Reshape"),yt=e("./kernels/ResizeBilinear"),bt=e("./kernels/ResizeBilinearGrad"),xt=e("./kernels/ResizeNearestNeighbor"),Ct=e("./kernels/ResizeNearestNeighborGrad"),wt=e("./kernels/Reverse"),Nt=e("./kernels/RotateWithOffset"),It=e("./kernels/Round"),St=e("./kernels/Rsqrt"),jt=e("./kernels/ScatterNd"),Tt=e("./kernels/SearchSorted"),Et=e("./kernels/Select"),Ft=e("./kernels/Selu"),$t=e("./kernels/Sigmoid"),Ot=e("./kernels/Sign"),zt=e("./kernels/Sin"),Gt=e("./kernels/Sinh"),Lt=e("./kernels/Slice"),Mt=e("./kernels/Softmax"),Vt=e("./kernels/Softplus"),Ut=e("./kernels/SpaceToBatchND"),Bt=e("./kernels/SparseFillEmptyRows"),Ht=e("./kernels/SparseReshape"),Wt=e("./kernels/SparseSegmentMean"),Kt=e("./kernels/SparseSegmentSum"),Yt=e("./kernels/SparseToDense"),Xt=e("./kernels/SplitV"),Zt=e("./kernels/Sqrt"),Qt=e("./kernels/Square"),Jt=e("./kernels/SquaredDifference"),qt=e("./kernels/StaticRegexReplace"),es=e("./kernels/Step"),ts=e("./kernels/StridedSlice"),ss=e("./kernels/StringNGrams"),rs=e("./kernels/StringSplit"),ns=e("./kernels/StringToHashBucketFast"),Dt=e("./kernels/Sub"),At=e("./kernels/Sum"),Pt=e("./kernels/Tan"),Rt=e("./kernels/Tanh"),as=e("./kernels/TensorScatterUpdate"),os=e("./kernels/Tile"),ls=e("./kernels/TopK"),is=e("./kernels/Transform"),cs=e("./kernels/Transpose"),us=e("./kernels/Unique"),ps=e("./kernels/Unpack"),ds=e("./kernels/UnsortedSegmentSum"),fs=e("./kernels/ZerosLike");const hs=[r._fusedMatMulConfig,d.absConfig,m.acosConfig,f.acoshConfig,i.addConfig,o.addNConfig,n.allConfig,c.anyConfig,a.argMaxConfig,l.argMinConfig,u.asinConfig,p.asinhConfig,h.atanConfig,g.atan2Config,v.atanhConfig,_.avgPoolConfig,k.avgPool3DConfig,y.avgPool3DGradConfig,x.avgPoolGradConfig,b.batchMatMulConfig,C.batchNormConfig,w.batchToSpaceNDConfig,N.bincountConfig,T.bitwiseAndConfig,F.broadcastArgsConfig,S.castConfig,I.ceilConfig,j.clipByValueConfig,D.complexConfig,O.complexAbsConfig,$.concatConfig,P.conv2DConfig,R.conv2DBackpropFilterConfig,A.conv2DBackpropInputConfig,z.conv3DConfig,G.conv3DBackpropFilterV2Config,L.conv3DBackpropInputV2Config,M.cosConfig,V.coshConfig,K.cropAndResizeConfig,W.cumprodConfig,H.cumsumConfig,Z.denseBincountConfig,Q.depthToSpaceConfig,te.depthwiseConv2dNativeConfig,ee.depthwiseConv2dNativeBackpropFilterConfig,ne.depthwiseConv2dNativeBackpropInputConfig,se.diagConfig,X.dilation2DConfig,U.dilation2DBackpropFilterConfig,Y.dilation2DBackpropInputConfig,J.drawConfig,q.einsumConfig,ae.eluConfig,ie.eluGradConfig,le.equalConfig,ue.erfConfig,B.expConfig,re.expandDimsConfig,oe.expm1Config,de.fftConfig,fe.fillConfig,pe.flipLeftRightConfig,me.floorConfig,he.floorDivConfig,ge.fusedConv2DConfig,ve.fusedDepthwiseConv2DConfig,ke.gatherNdConfig,_e.gatherV2Config,ye.greaterConfig,be.greaterEqualConfig,Ce.identityConfig,we.ifftConfig,xe.imagConfig,Ne.isFiniteConfig,Ie.isInfConfig,Te.isNaNConfig,Ee.leakyReluConfig,Fe.lessConfig,De.lessEqualConfig,Ae.linSpaceConfig,Pe.logConfig,Re.log1pConfig,$e.logicalAndConfig,Oe.logicalNotConfig,Se.logicalOrConfig,je.LRNConfig,ze.LRNGradConfig,Ge.maxConfig,Le.maximumConfig,Me.maxPoolConfig,Ve.maxPool3DConfig,Ue.maxPool3DGradConfig,Be.maxPoolGradConfig,He.maxPoolWithArgmaxConfig,We.meanConfig,Ke.minConfig,ce.minimumConfig,Ye.mirrorPadConfig,Xe.modConfig,Ze.multinomialConfig,Qe.multiplyConfig,Je.negConfig,qe.nonMaxSuppressionV3Config,et.nonMaxSuppressionV4Config,tt.nonMaxSuppressionV5Config,st.notEqualConfig,rt.oneHotConfig,nt.onesLikeConfig,at.packConfig,ot.padV2Config,lt.powConfig,it.preluConfig,ct.prodConfig,ut.raggedGatherConfig,pt.raggedRangeConfig,dt.raggedTensorToTensorConfig,ft.rangeConfig,mt.realConfig,ht.realDivConfig,gt.reciprocalConfig,vt.reluConfig,_t.relu6Config,kt.reshapeConfig,yt.resizeBilinearConfig,bt.resizeBilinearGradConfig,xt.resizeNearestNeighborConfig,Ct.resizeNearestNeighborGradConfig,wt.reverseConfig,Nt.rotateWithOffsetConfig,It.roundConfig,St.rsqrtConfig,jt.scatterNdConfig,Tt.searchSortedConfig,Et.selectConfig,Ft.seluConfig,$t.sigmoidConfig,Ot.signConfig,zt.sinConfig,Gt.sinhConfig,Lt.sliceConfig,Mt.softmaxConfig,Vt.softplusConfig,Ut.spaceToBatchNDConfig,Bt.sparseFillEmptyRowsConfig,Ht.sparseReshapeConfig,Wt.sparseSegmentMeanConfig,Kt.sparseSegmentSumConfig,Yt.sparseToDenseConfig,Xt.splitVConfig,Zt.sqrtConfig,Qt.squareConfig,Jt.squaredDifferenceConfig,qt.staticRegexReplaceConfig,es.stepConfig,ts.stridedSliceConfig,ss.stringNGramsConfig,rs.stringSplitConfig,ns.stringToHashBucketFastConfig,Dt.subConfig,At.sumConfig,Pt.tanConfig,Rt.tanhConfig,as.tensorScatterUpdateConfig,os.tileConfig,ls.topKConfig,is.transformConfig,cs.transposeConfig,us.uniqueConfig,ps.unpackConfig,ds.unsortedSegmentSumConfig,fs.zerosLikeConfig];for(const gs of hs)(0,t.registerKernel)(gs)},{"@tensorflow/tfjs-core":"fqGP4","./kernels/_FusedMatMul":"ktIes","./kernels/Abs":"d2Px3","./kernels/Acos":"bey7W","./kernels/Acosh":"9TQ8S","./kernels/Add":"dFYRX","./kernels/AddN":"1wCi9","./kernels/All":"fzmke","./kernels/Any":"4Bzmg","./kernels/ArgMax":"2Uxa9","./kernels/ArgMin":"7mdNm","./kernels/Asin":"berE0","./kernels/Asinh":"lTOpB","./kernels/Atan":"4y3Wy","./kernels/Atan2":"Kset2","./kernels/Atanh":"99bYy","./kernels/AvgPool":"lwwme","./kernels/AvgPool3D":"gUiIV","./kernels/AvgPool3DGrad":"HBYNh","./kernels/AvgPoolGrad":"asJDB","./kernels/BatchMatMul":"kEdkk","./kernels/BatchNorm":"itP2j","./kernels/BatchToSpaceND":"bTJUC","./kernels/Bincount":"k6yRa","./kernels/BitwiseAnd":"57U9c","./kernels/BroadcastArgs":"bfgVj","./kernels/Cast":"k2vAt","./kernels/Ceil":"frV9C","./kernels/ClipByValue":"k0x1H","./kernels/Complex":"f0JWF","./kernels/ComplexAbs":"aeXX1","./kernels/Concat":"8apgO","./kernels/Conv2D":"4iY8C","./kernels/Conv2DBackpropFilter":"1Hb0P","./kernels/Conv2DBackpropInput":"h1WKI","./kernels/Conv3D":"3NPfP","./kernels/Conv3DBackpropFilterV2":"21fNb","./kernels/Conv3DBackpropInputV2":"kd5Z6","./kernels/Cos":"7U5fb","./kernels/Cosh":"hUNHR","./kernels/CropAndResize":"knyhj","./kernels/Cumprod":"6FMkn","./kernels/Cumsum":"lkuUe","./kernels/DenseBincount":"8XgTe","./kernels/DepthToSpace":"iYURE","./kernels/DepthwiseConv2dNative":"7CpMk","./kernels/DepthwiseConv2dNativeBackpropFilter":"6QMBA","./kernels/DepthwiseConv2dNativeBackpropInput":"fOcGD","./kernels/Diag":"aUulz","./kernels/Dilation2D":"jlJUh","./kernels/Dilation2DBackpropFilter":"10PUD","./kernels/Dilation2DBackpropInput":"2ajOJ","./kernels/Draw":"6AEPh","./kernels/Einsum":"6krjT","./kernels/Elu":"fssGs","./kernels/EluGrad":"g6PXg","./kernels/Equal":"89MJf","./kernels/Erf":"2Ck6B","./kernels/Exp":"lXEkv","./kernels/ExpandDims":"hO6vZ","./kernels/Expm1":"g5OU0","./kernels/FFT":"6KDkm","./kernels/Fill":"812rF","./kernels/FlipLeftRight":"frFfc","./kernels/Floor":"e8zMm","./kernels/FloorDiv":"ei44J","./kernels/FusedConv2D":"bmL9c","./kernels/FusedDepthwiseConv2D":"kbKrr","./kernels/GatherNd":"2M07U","./kernels/GatherV2":"VCmmN","./kernels/Greater":"586AK","./kernels/GreaterEqual":"6Qm9a","./kernels/Identity":"dW73G","./kernels/IFFT":"fJyCJ","./kernels/Imag":"esngK","./kernels/IsFinite":"1DcGS","./kernels/IsInf":"7zPtJ","./kernels/IsNaN":"3r3zt","./kernels/LeakyRelu":"lMqKL","./kernels/Less":"eleCz","./kernels/LessEqual":"8jPwM","./kernels/LinSpace":"WDW1x","./kernels/Log":"fYJhh","./kernels/Log1p":"kbwmz","./kernels/LogicalAnd":"lGRCQ","./kernels/LogicalNot":"7JG4n","./kernels/LogicalOr":"3svT6","./kernels/LRN":"4EMKl","./kernels/LRNGrad":"dWHxF","./kernels/Max":"kSheX","./kernels/Maximum":"9lI6M","./kernels/MaxPool":"dZs5Z","./kernels/MaxPool3D":"ifuoM","./kernels/MaxPool3DGrad":"kqEYV","./kernels/MaxPoolGrad":"jr21G","./kernels/MaxPoolWithArgmax":"568Zd","./kernels/Mean":"7sVsN","./kernels/Min":"bzQDP","./kernels/Minimum":"i4jP7","./kernels/MirrorPad":"1t9Pa","./kernels/Mod":"iia1F","./kernels/Multinomial":"cXgvn","./kernels/Multiply":"4mqHO","./kernels/Neg":"2NkPj","./kernels/NonMaxSuppressionV3":"j1dTA","./kernels/NonMaxSuppressionV4":"9PXaN","./kernels/NonMaxSuppressionV5":"9yMax","./kernels/NotEqual":"ci6rN","./kernels/OneHot":"3dnSY","./kernels/OnesLike":"d3Qms","./kernels/Pack":"leWqM","./kernels/PadV2":"csvoP","./kernels/Pow":"eBz3c","./kernels/Prelu":"0j6RV","./kernels/Prod":"le7Nq","./kernels/RaggedGather":"2TBWS","./kernels/RaggedRange":"herGg","./kernels/RaggedTensorToTensor":"hbjUo","./kernels/Range":"jynVg","./kernels/Real":"bFwFI","./kernels/RealDiv":"lYFnp","./kernels/Reciprocal":"1Qyja","./kernels/Relu":"dfaEo","./kernels/Relu6":"dUgNV","./kernels/Reshape":"7zDdd","./kernels/ResizeBilinear":"b487S","./kernels/ResizeBilinearGrad":"5wAGl","./kernels/ResizeNearestNeighbor":"kOw1E","./kernels/ResizeNearestNeighborGrad":"fCTvS","./kernels/Reverse":"ly0BB","./kernels/RotateWithOffset":"hjzL8","./kernels/Round":"g6uAb","./kernels/Rsqrt":"LbCMb","./kernels/ScatterNd":"564GL","./kernels/SearchSorted":"jhYax","./kernels/Select":"4yeyH","./kernels/Selu":"ggmmw","./kernels/Sigmoid":"3FvEQ","./kernels/Sign":"6Vfps","./kernels/Sin":"jJ9l5","./kernels/Sinh":"jWVpt","./kernels/Slice":"89s7e","./kernels/Softmax":"fYM8A","./kernels/Softplus":"3U9hr","./kernels/SpaceToBatchND":"hIEc6","./kernels/SparseFillEmptyRows":"lTk7y","./kernels/SparseReshape":"2tvLm","./kernels/SparseSegmentMean":"5yCCX","./kernels/SparseSegmentSum":"9WNNZ","./kernels/SparseToDense":"bR85A","./kernels/SplitV":"4DxuD","./kernels/Sqrt":"7kJaA","./kernels/Square":"3lBeP","./kernels/SquaredDifference":"fm7An","./kernels/StaticRegexReplace":"gtSyF","./kernels/Step":"45isu","./kernels/StridedSlice":"htl1r","./kernels/StringNGrams":"ckfKr","./kernels/StringSplit":"ez3Uv","./kernels/StringToHashBucketFast":"lVoai","./kernels/Sub":"bvhLI","./kernels/Sum":"fIX7J","./kernels/Tan":"aAJQq","./kernels/Tanh":"bUs7E","./kernels/TensorScatterUpdate":"4JdvO","./kernels/Tile":"eKaKj","./kernels/TopK":"1LLr8","./kernels/Transform":"hFaZq","./kernels/Transpose":"9b6th","./kernels/Unique":"6q6vb","./kernels/Unpack":"8FGKW","./kernels/UnsortedSegmentSum":"dMftS","./kernels/ZerosLike":"kjMQi"}],ktIes:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"_fusedMatMul",()=>i),t.export(s,"_fusedMatMulConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/fused_utils"),m=e("./Add"),f=e("./BatchMatMul");function i(n){const{inputs:c,backend:a,attrs:l}=n,{a:u,b:p,bias:h,preluActivationWeights:g}=c,{transposeA:v,transposeB:_,activation:k,leakyreluAlpha:y}=l;let x,b,C;const w=[];x=(0,f.batchMatMul)({inputs:{a:u,b:p},attrs:{transposeA:v,transposeB:_},backend:a}),h&&(b=(0,m.add)({inputs:{a:x,b:h},backend:a}),w.push(x),x=b),k&&(C=(0,d.applyActivation)(a,x,k,g,y),w.push(x),x=C);for(const T of w)a.disposeIntermediateTensorInfo(T);return x}const o={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/fused_utils":"dKjYi","./Add":"dFYRX","./BatchMatMul":"kEdkk","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dKjYi:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"applyActivation",()=>c);var r=e("../kernels/Elu"),d=e("../kernels/Identity"),m=e("../kernels/LeakyRelu"),f=e("../kernels/Prelu"),i=e("../kernels/Relu"),o=e("../kernels/Relu6"),n=e("../kernels/Sigmoid");function c(a,l,u,p,h){if(u==="linear")return(0,d.identity)({inputs:{x:l},backend:a});if(u==="relu")return(0,i.relu)({inputs:{x:l},backend:a});if(u==="elu")return(0,r.elu)({inputs:{x:l},backend:a});if(u==="relu6")return(0,o.relu6)({inputs:{x:l},backend:a});if(u==="prelu")return(0,f.prelu)({inputs:{x:l,alpha:p},backend:a});if(u==="leakyrelu")return(0,m.leakyRelu)({inputs:{x:l},backend:a,attrs:{alpha:h}});if(u==="sigmoid")return(0,n.sigmoid)({inputs:{x:l},backend:a});throw new Error(`Activation ${u} has not been implemented for the CPU backend.`)}},{"../kernels/Elu":"fssGs","../kernels/Identity":"dW73G","../kernels/LeakyRelu":"lMqKL","../kernels/Prelu":"0j6RV","../kernels/Relu":"dfaEo","../kernels/Relu6":"dUgNV","../kernels/Sigmoid":"3FvEQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fssGs:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"elu",()=>m),t.export(s,"eluConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Elu,i=>i>=0?i:Math.exp(i)-1),f={kernelName:r.Elu,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lMqKL:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"leakyRelu",()=>m),t.export(s,"leakyReluConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{alpha:l}=c;(0,d.assertNotComplex)([a],"leakyRelu");const u=r.util.sizeFromShape(a.shape),p=n.data.get(a.dataId).values,h=r.util.getTypedArrayFromDType("float32",u);for(let g=0;g<p.length;g++)h[g]=p[g]<0?l*p[g]:p[g];return n.makeTensorInfo(a.shape,"float32",h)}const f={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"0j6RV":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"prelu",()=>i),t.export(s,"preluConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../utils/binary_impl");const f=(0,m.createSimpleBinaryKernelImpl)((n,c)=>n<0?c*n:n);function i(n){const{inputs:c,backend:a}=n,{x:l,alpha:u}=c;(0,d.assertNotComplex)([l,u],"prelu");const p=a.data.get(l.dataId).values,h=a.data.get(u.dataId).values,[g,v]=f(l.shape,u.shape,p,h,"float32");return a.makeTensorInfo(v,"float32",g)}const o={kernelName:r.Prelu,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../utils/binary_impl":"1g9Al","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dfaEo:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"relu",()=>m),t.export(s,"reluConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Relu,i=>Math.max(0,i)),f={kernelName:r.Relu,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dUgNV:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"relu6",()=>m),t.export(s,"relu6Config",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Relu6,i=>Math.min(Math.max(0,i),6)),f={kernelName:r.Relu6,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kEdkk:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchMatMul",()=>f),t.export(s,"batchMatMulConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Reshape");function f(o){const{inputs:n,backend:c,attrs:a}=o,{a:l,b:u}=n,{transposeA:p,transposeB:h}=a;(0,d.assertNotComplex)([l,u],"matMul");const g=l.shape.length,v=u.shape.length,_=p?l.shape[g-2]:l.shape[g-1],k=h?u.shape[v-1]:u.shape[v-2],y=p?l.shape[g-1]:l.shape[g-2],x=h?u.shape[v-2]:u.shape[v-1],b=l.shape.slice(0,-2),C=u.shape.slice(0,-2),w=r.util.sizeFromShape(b),N=r.util.sizeFromShape(C),F=r.broadcast_util.assertAndGetBroadcastShape(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([y,x]);r.util.assert(_===k,()=>`Error in matMul: inner shapes (${_}) and (${k}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${p} and transposeB=${h} must match.`);const S=p?[w,_,y]:[w,y,_],I=h?[N,x,k]:[N,k,x],j=(0,m.reshape)({inputs:{x:l},backend:c,attrs:{shape:S}}),D=(0,m.reshape)({inputs:{x:u},backend:c,attrs:{shape:I}}),O=p?j.shape[1]:j.shape[2],$=p?j.shape[2]:j.shape[1],P=h?D.shape[1]:D.shape[2],R=Math.max(w,N),A=c.data.get(j.dataId).values,z=c.data.get(D.dataId).values,G=r.util.computeStrides(j.shape),L=r.util.computeStrides(D.shape),[M,V,K]=p?[G[0],1,G[1]]:[G[0],G[1],1],[W,H,Z]=h?[1,L[1],L[0]]:[L[1],1,L[0]],Q=$*P,te=(0,r.buffer)([R,$,P],j.dtype),ee=te.values,ne=c.blockSize;for(let se=0;se<R;se++){const X=se%w,U=se%N;for(let Y=0;Y<$;Y+=ne){const J=Math.min(Y+ne,$);for(let q=0;q<P;q+=ne){const ae=Math.min(q+ne,P);for(let ie=0;ie<O;ie+=ne){const le=Math.min(ie+ne,O);for(let ue=Y;ue<J;ue++)for(let B=q;B<ae;B++){let re=0;for(let oe=ie;oe<le;oe++){const de=A[X*M+ue*V+oe*K],fe=z[oe*W+B*H+U*Z];re+=de*fe}ee[se*Q+(ue*P+B)]+=re}}}}}return c.disposeIntermediateTensorInfo(j),c.disposeIntermediateTensorInfo(D),c.makeTensorInfo(F,te.dtype,te.values)}const i={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Reshape":"7zDdd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7zDdd":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reshape",()=>d),t.export(s,"reshapeConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o,attrs:n}=f,{x:c}=i,{shape:a}=n,l=r.util.sizeFromShape(c.shape),u=r.util.inferFromImplicitShape(a,l),p=r.util.sizeFromShape(u);r.util.assert(l===p,()=>`The new shape (${u}) has ${p} elements and the old shape (${c.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`),o.incRef(c.dataId);const h=o.data.get(c.dataId);if(h.complexTensorInfos!=null){const g=h.complexTensorInfos.real,v=h.complexTensorInfos.imag;g.shape=u,v.shape=u}return{dataId:c.dataId,shape:u,dtype:c.dtype}}const m={kernelName:r.Reshape,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bey7W:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"acos",()=>m),t.export(s,"acosConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Acos,i=>Math.acos(i)),f={kernelName:r.Acos,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9TQ8S":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"acosh",()=>m),t.export(s,"acoshConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Acosh,i=>Math.acosh(i)),f={kernelName:r.Acosh,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1wCi9":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"addN",()=>m),t.export(s,"addNConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n}=i,c=o;(0,d.assertNotComplex)(o,"addN");const a=c.map(p=>n.data.get(p.dataId).values),l=(0,r.buffer)(c[0].shape,c[0].dtype),u=l.values;for(let p=0;p<c.length;p++){const h=a[p];for(let g=0;g<u.length;g++)u[g]+=h[g]}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const f={kernelName:r.AddN,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fzmke:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"all",()=>i),t.export(s,"allConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Reshape"),f=e("./Transpose");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{axis:p,keepDims:h}=l;(0,d.assertNotComplex)(u,"all");const g=r.util.parseAxisParam(p,u.shape);let v=g;const _=r.backend_util.getAxesPermutation(v,u.shape.length);let k=u;_!=null&&(k=(0,f.transpose)({inputs:{x:u},backend:a,attrs:{perm:_}}),v=r.backend_util.getInnerMostAxes(v.length,u.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",v,k.shape.length);const[y,x]=r.backend_util.computeOutAndReduceShapes(k.shape,v),b=r.util.sizeFromShape(x),C=r.util.makeZerosTypedArray(r.util.sizeFromShape(y),k.dtype),w=a.data.get(k.dataId).values;for(let T=0;T<C.length;++T){const F=T*b;let S=w[F];for(let I=0;I<b;++I){const j=w[F+I];S=S&&j}C[T]=S}_!=null&&a.disposeIntermediateTensorInfo(k);const N=a.makeTensorInfo(y,k.dtype,C);if(h){const T=r.backend_util.expandShapeToKeepDim(y,g),F=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:T}});return a.disposeIntermediateTensorInfo(N),F}return N}const o={kernelName:r.All,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Reshape":"7zDdd","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4Bzmg":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"any",()=>i),t.export(s,"anyConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Reshape"),f=e("./Transpose");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{axis:p,keepDims:h}=l;(0,d.assertNotComplex)(u,"any");const g=r.util.parseAxisParam(p,u.shape);let v=g;const _=r.backend_util.getAxesPermutation(v,u.shape.length);let k=u;_!=null&&(k=(0,f.transpose)({inputs:{x:u},backend:a,attrs:{perm:_}}),v=r.backend_util.getInnerMostAxes(v.length,u.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",v,k.shape.length);const[y,x]=r.backend_util.computeOutAndReduceShapes(k.shape,v),b=r.util.sizeFromShape(x),C=r.util.makeZerosTypedArray(r.util.sizeFromShape(y),k.dtype),w=a.data.get(k.dataId).values;for(let T=0;T<C.length;++T){const F=T*b;let S=w[F];for(let I=0;I<b;++I){const j=w[F+I];S=S||j}C[T]=S}_!=null&&a.disposeIntermediateTensorInfo(k);const N=a.makeTensorInfo(y,k.dtype,C);if(h){const T=r.backend_util.expandShapeToKeepDim(y,g),F=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:T}});return a.disposeIntermediateTensorInfo(N),F}return N}const o={kernelName:r.Any,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Reshape":"7zDdd","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2Uxa9":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMax",()=>f),t.export(s,"argMaxConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Transpose");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{axis:u}=a;(0,d.assertNotComplex)(l,"argMax");let p=r.util.parseAxisParam(u,l.shape);const h=r.backend_util.getAxesPermutation(p,l.shape.length);let g=l;const v=[];h!=null&&(g=(0,m.transpose)({inputs:{x:l},backend:c,attrs:{perm:h}}),v.push(g),p=r.backend_util.getInnerMostAxes(p.length,g.shape.length)),p=[p[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",p,g.shape.length);const[_,k]=r.backend_util.computeOutAndReduceShapes(g.shape,p),y=r.util.sizeFromShape(_),x=r.util.makeZerosTypedArray(y,"int32"),b=r.util.sizeFromShape(k),C=c.data.get(g.dataId).values;for(let w=0;w<x.length;++w){const N=w*b;let T=C[N],F=0;for(let S=0;S<b;++S){const I=C[N+S];I>T&&(T=I,F=S)}x[w]=F}return v.forEach(w=>c.disposeIntermediateTensorInfo(w)),c.makeTensorInfo(_,"int32",x)}const i={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7mdNm":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMin",()=>f),t.export(s,"argMinConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Transpose");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{axis:u}=a;(0,d.assertNotComplex)(l,"argMin");let p=r.util.parseAxisParam(u,l.shape);const h=r.backend_util.getAxesPermutation(p,l.shape.length);let g=l;const v=[];h!=null&&(g=(0,m.transpose)({inputs:{x:l},backend:c,attrs:{perm:h}}),v.push(g),p=r.backend_util.getInnerMostAxes(p.length,g.shape.length)),p=[p[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",p,g.shape.length);const[_,k]=r.backend_util.computeOutAndReduceShapes(g.shape,p),y=r.util.sizeFromShape(_),x=r.util.makeZerosTypedArray(y,"int32"),b=r.util.sizeFromShape(k),C=c.data.get(g.dataId).values;for(let w=0;w<x.length;++w){const N=w*b;let T=C[N],F=0;for(let S=0;S<b;++S){const I=C[N+S];I<T&&(T=I,F=S)}x[w]=F}return v.forEach(w=>c.disposeIntermediateTensorInfo(w)),c.makeTensorInfo(_,"int32",x)}const i={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],berE0:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"asin",()=>m),t.export(s,"asinConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Asin,i=>Math.asin(i)),f={kernelName:r.Asin,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lTOpB:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"asinh",()=>m),t.export(s,"asinhConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Asinh,i=>Math.asinh(i)),f={kernelName:r.Asinh,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4y3Wy":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atan",()=>m),t.export(s,"atanConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Atan,i=>Math.atan(i)),f={kernelName:r.Atan,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],Kset2:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atan2Impl",()=>f),t.export(s,"atan2",()=>i),t.export(s,"atan2Config",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>Math.atan2(n,c)),i=(0,m.binaryKernelFunc)(r.Atan2,f),o={kernelName:r.Atan2,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"99bYy":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atanh",()=>m),t.export(s,"atanhConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Atanh,i=>Math.atanh(i)),f={kernelName:r.Atanh,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lwwme:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool",()=>i),t.export(s,"avgPoolConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../utils/pool_utils"),f=e("./Identity");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c;(0,d.assertNotComplex)(u,"avgPool");const{filterSize:p,strides:h,pad:g,dimRoundingMode:v}=l,_=1;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(h,_),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${_}'`);const k=r.backend_util.computePool2DInfo(u.shape,p,h,_,g,v);let y;if(k.filterWidth===1&&k.filterHeight===1&&r.util.arraysEqual(k.inShape,k.outShape))y=(0,f.identity)({inputs:{x:u},backend:a});else{const x=a.data.get(u.dataId).values,b=r.util.computeStrides(u.shape),C=(0,m.pool)(x,u.shape,u.dtype,b,k,"avg");y=a.makeTensorInfo(k.outShape,u.dtype,C.values)}return y}const o={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../utils/pool_utils":"aWNK4","./Identity":"dW73G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aWNK4:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pool",()=>d),t.export(s,"maxPoolPositions",()=>m),t.export(s,"pool3d",()=>f),t.export(s,"maxPool3dPositions",()=>i);var r=e("@tensorflow/tfjs-core");function d(o,n,c,a,l,u){const p=l.strideHeight,h=l.strideWidth,g=l.dilationHeight,v=l.dilationWidth,_=l.effectiveFilterHeight,k=l.effectiveFilterWidth,y=l.padInfo.top,x=l.padInfo.left,b=u==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=(0,r.buffer)(l.outShape,c),w=C.values,N=l.outShape[1]*l.outShape[2]*l.outShape[3],T=l.outShape[2]*l.outShape[3],F=l.outShape[3];for(let S=0;S<l.batchSize;++S){const I=S*N,j=S*a[0];for(let D=0;D<l.inChannels;++D)for(let O=0;O<l.outHeight;++O){const $=O*p-y,P=Math.max(0,$),R=Math.min(l.inHeight,_+$),A=I+O*T;for(let z=0;z<l.outWidth;++z){const G=z*h-x,L=Math.max(0,G),M=Math.min(l.inWidth,k+G);let V=b,K=0,W=0;for(let Z=P;Z<R;Z+=g){const Q=j+Z*a[1];for(let te=L;te<M;te+=v){const ee=Q+te*a[2],ne=o[ee+D];u==="max"&&ne>V?V=ne:u==="avg"&&(K+=ne,W++)}if(isNaN(V))break}const H=A+z*F+D;w[H]=u==="avg"?K/W:V}}}return C}function m(o,n,c,a,l=!1,u=!1){const p=(0,r.buffer)(a.outShape,"int32"),h=a.strideHeight,g=a.strideWidth,v=a.dilationHeight,_=a.dilationWidth,k=a.effectiveFilterHeight,y=a.effectiveFilterWidth,x=a.padInfo.top,b=a.padInfo.left,C=(0,r.buffer)(n,c,o);for(let w=0;w<a.batchSize;++w)for(let N=0;N<a.inChannels;++N)for(let T=0;T<a.outHeight;++T){const F=T*h-x;let S=F;for(;S<0;)S+=v;const I=Math.min(a.inHeight,k+F);for(let j=0;j<a.outWidth;++j){const D=j*g-b;let O=D;for(;O<0;)O+=_;const $=Math.min(a.inWidth,y+D);let P=Number.NEGATIVE_INFINITY,R=-1;for(let A=S;A<I;A+=v){const z=A-F;for(let G=O;G<$;G+=_){const L=G-D,M=C.get(w,A,G,N);M>P&&(P=M,l?R=u?((w*a.inHeight+A)*a.inWidth+G)*a.inChannels+N:(A*a.inWidth+G)*a.inChannels+N:R=z*y+L)}}p.set(R,w,T,j,N)}}return p}function f(o,n,c,a,l,u){const p=l.strideDepth,h=l.strideHeight,g=l.strideWidth,v=l.dilationDepth,_=l.dilationHeight,k=l.dilationWidth,y=l.effectiveFilterDepth,x=l.effectiveFilterHeight,b=l.effectiveFilterWidth,C=l.padInfo.front,w=l.padInfo.top,N=l.padInfo.left,T=u==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,F=(0,r.buffer)(l.outShape,c),S=F.values,I=l.outShape[1]*l.outShape[2]*l.outShape[3]*l.outShape[4],j=l.outShape[2]*l.outShape[3]*l.outShape[4],D=l.outShape[3]*l.outShape[4],O=l.outShape[4];for(let $=0;$<l.batchSize;++$){const P=$*I,R=$*a[0];for(let A=0;A<l.inChannels;++A)for(let z=0;z<l.outDepth;++z){const G=z*p-C;let L=G;for(;L<0;)L+=v;const M=Math.min(l.inDepth,y+G),V=P+z*j;for(let K=0;K<l.outHeight;++K){const W=K*h-w;let H=W;for(;H<0;)H+=_;const Z=Math.min(l.inHeight,x+W),Q=V+K*D;for(let te=0;te<l.outWidth;++te){const ee=te*g-N;let ne=ee;for(;ne<0;)ne+=k;const se=Math.min(l.inWidth,b+ee),X=Q+te*O;let U=T,Y=0,J=0;for(let ae=L;ae<M;ae+=v){const ie=R+ae*a[1];for(let le=H;le<Z;le+=_){const ue=ie+le*a[2];for(let B=ne;B<se;B+=k){const re=ue+B*a[3],oe=o[re+A];if(u==="max"&&oe>U?U=oe:u==="avg"&&(Y+=oe,J++),isNaN(U))break}if(isNaN(U))break}if(isNaN(U))break}const q=X+A;S[q]=u==="avg"?Y/Math.max(J,1):U}}}}return F}function i(o,n){const c=(0,r.buffer)(n.outShape,"int32"),a=n.strideDepth,l=n.strideHeight,u=n.strideWidth,p=n.dilationDepth,h=n.dilationHeight,g=n.dilationWidth,v=n.effectiveFilterDepth,_=n.effectiveFilterHeight,k=n.effectiveFilterWidth,y=n.padInfo.front,x=n.padInfo.top,b=n.padInfo.left;for(let C=0;C<n.batchSize;++C)for(let w=0;w<n.inChannels;++w)for(let N=0;N<n.outDepth;++N){const T=N*a-y;let F=T;for(;F<0;)F+=p;const S=Math.min(n.inDepth,v+T);for(let I=0;I<n.outHeight;++I){const j=I*l-x;let D=j;for(;D<0;)D+=h;const O=Math.min(n.inHeight,_+j);for(let $=0;$<n.outWidth;++$){const P=$*u-b;let R=P;for(;R<0;)R+=g;const A=Math.min(n.inWidth,k+P);let z=Number.NEGATIVE_INFINITY,G=-1;for(let L=F;L<S;L+=p){const M=L-T;for(let V=D;V<O;V+=h){const K=V-j;for(let W=R;W<A;W+=g){const H=W-P,Z=o.get(C,L,V,W,w);Z>=z&&(z=Z,G=M*_*k+K*_+H)}}}c.set(G,C,N,I,$,w)}}}return c}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gUiIV:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool3D",()=>f),t.export(s,"avgPool3DConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../utils/pool_utils");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{filterSize:u,strides:p,pad:h,dimRoundingMode:g,dataFormat:v}=a;(0,d.assertNotComplex)(l,"avgPool3d");const _=r.backend_util.computePool3DInfo(l.shape,u,p,1,h,g,v),k=c.data.get(l.dataId).values,y=(0,m.pool3d)(k,l.shape,l.dtype,r.util.computeStrides(l.shape),_,"avg");return c.makeTensorInfo(y.shape,"float32",y.values)}const i={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../utils/pool_utils":"aWNK4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],HBYNh:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool3DGrad",()=>m),t.export(s,"avgPool3DGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{dy:a,input:l}=o,{filterSize:u,strides:p,pad:h,dimRoundingMode:g}=c;(0,d.assertNotComplex)([a,l],"avgPool3DGrad");const v=r.backend_util.computePool3DInfo(l.shape,u,p,1,h,g),_=v.strideDepth,k=v.strideHeight,y=v.strideWidth,x=v.filterDepth,b=v.filterHeight,C=v.filterWidth,w=v.dilationDepth,N=v.dilationHeight,T=v.dilationWidth,F=v.effectiveFilterDepth,S=v.effectiveFilterHeight,I=v.effectiveFilterWidth,j=F-1-v.padInfo.front,D=I-1-v.padInfo.left,O=S-1-v.padInfo.top,$=(0,r.buffer)(l.shape,"float32"),P=1/(x*b*C),R=n.bufferSync(a);for(let A=0;A<v.batchSize;++A)for(let z=0;z<v.inChannels;++z)for(let G=0;G<v.inDepth;++G)for(let L=0;L<v.inHeight;++L)for(let M=0;M<v.inWidth;++M){const V=G-j,K=L-O,W=M-D;let H=0;for(let Z=0;Z<F;Z+=w){const Q=(V+Z)/_;if(!(Q<0||Q>=v.outDepth||Math.floor(Q)!==Q))for(let te=0;te<S;te+=N){const ee=(K+te)/k;if(!(ee<0||ee>=v.outHeight||Math.floor(ee)!==ee))for(let ne=0;ne<I;ne+=T){const se=(W+ne)/y;if(se<0||se>=v.outWidth||Math.floor(se)!==se)continue;H+=R.get(A,Q,ee,se,z)}}}$.set(H*P,A,G,L,M,z)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const f={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],asJDB:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPoolGrad",()=>m),t.export(s,"avgPoolGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{dy:a,input:l}=o,u=l;(0,d.assertNotComplex)([a,l],"avgPoolGrad");const{filterSize:p,strides:h,pad:g}=c,v=r.backend_util.computePool2DInfo(u.shape,p,h,1,g),_=v.strideHeight,k=v.strideWidth,y=v.filterHeight,x=v.filterWidth,b=v.dilationHeight,C=v.dilationWidth,w=v.effectiveFilterHeight,N=v.effectiveFilterWidth,T=N-1-v.padInfo.left,F=w-1-v.padInfo.top,S=(0,r.buffer)(u.shape,"float32"),I=1/(y*x),j=n.data.get(a.dataId).values,D=(0,r.buffer)(a.shape,"float32",j);for(let O=0;O<v.batchSize;++O)for(let $=0;$<v.inChannels;++$)for(let P=0;P<v.inHeight;++P)for(let R=0;R<v.inWidth;++R){const A=P-F,z=R-T;let G=0;for(let L=0;L<w;L+=b){const M=(A+L)/_;if(!(M<0||M>=v.outHeight||Math.floor(M)!==M))for(let V=0;V<N;V+=C){const K=(z+V)/k;if(K<0||K>=v.outWidth||Math.floor(K)!==K)continue;G+=D.get(O,M,K,$)}}S.set(G*I,O,P,R,$)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const f={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],itP2j:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchNorm",()=>m),t.export(s,"batchNormConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,scale:l,offset:u,mean:p,variance:h}=o;r.util.assert(p.shape.length===h.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(u==null||p.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(l==null||p.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),(0,d.assertNotComplex)([a,p,h,l,u],"batchNorm");let{varianceEpsilon:g}=c;g==null&&(g=.001);const v=n.data.get(a.dataId).values,_=n.data.get(p.dataId).values,k=n.data.get(h.dataId).values,y=l?n.data.get(l.dataId).values:new Float32Array([1]),x=u?n.data.get(u.dataId).values:new Float32Array([0]),b=new Float32Array(v.length),C=x.length,w=y.length,N=k.length,T=_.length;let F=0,S=0,I=0,j=0;for(let D=0;D<v.length;++D)b[D]=x[F++]+(v[D]-_[S++])*y[I++]/Math.sqrt(k[j++]+g),F>=C&&(F=0),S>=T&&(S=0),I>=w&&(I=0),j>=N&&(j=0);return n.makeTensorInfo(a.shape,a.dtype,b)}const f={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bTJUC:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchToSpaceND",()=>o),t.export(s,"batchToSpaceNDConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Reshape"),f=e("./Slice"),i=e("./Transpose");function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p}=a,{blockShape:h,crops:g}=u;(0,d.assertNotComplex)([p],"batchToSpaceND");const v=h.reduce((F,S)=>F*S),_=r.backend_util.getReshaped(p.shape,h,v),k=r.backend_util.getPermuted(_.length,h.length),y=r.backend_util.getReshapedPermuted(p.shape,h,v),x=r.backend_util.getSliceBeginCoords(g,h.length),b=r.backend_util.getSliceSize(y,g,h.length),C=(0,m.reshape)({inputs:{x:p},backend:l,attrs:{shape:_}}),w=(0,i.transpose)({inputs:{x:C},backend:l,attrs:{perm:k}}),N=(0,m.reshape)({inputs:{x:w},backend:l,attrs:{shape:y}}),T=(0,f.slice)({inputs:{x:N},backend:l,attrs:{begin:x,size:b}});return l.disposeIntermediateTensorInfo(C),l.disposeIntermediateTensorInfo(w),l.disposeIntermediateTensorInfo(N),T}const n={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Reshape":"7zDdd","./Slice":"89s7e","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k6yRa:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"bincount",()=>m),t.export(s,"bincountConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Bincount_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,weights:l}=o,{size:u}=c,p=n.data.get(a.dataId).values,h=n.data.get(l.dataId).values,g=(0,d.bincountImpl)(p,h,l.dtype,l.shape,u);return n.makeTensorInfo([u],l.dtype,g)}const f={kernelName:r.Bincount,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Bincount_impl":"2wuj1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bfgVj:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"broadcastArgs",()=>d),t.export(s,"broadcastArgsConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o}=f,{s0:n,s1:c}=i,a=o.data.get(n.dataId).values,l=o.data.get(c.dataId).values,u=r.backend_util.assertAndGetBroadcastShape(Array.from(a),Array.from(l));return o.makeTensorInfo([u.length],"int32",Int32Array.from(u))}const m={kernelName:r.BroadcastArgs,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k0x1H:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"clipByValue",()=>m),t.export(s,"clipByValueConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.ClipByValue,(i,o)=>{const n=o;return i>n.clipValueMax?n.clipValueMax:i<n.clipValueMin?n.clipValueMin:i}),f={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aeXX1:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"complexAbs",()=>d),t.export(s,"complexAbsConfig",()=>m);var r=e("@tensorflow/tfjs-core");const d=f=>{const{x:i}=f.inputs,o=f.backend,n=new Float32Array(r.util.sizeFromShape(i.shape)),c=o.data.get(i.dataId),a=c.complexTensorInfos.real,l=c.complexTensorInfos.imag,u=o.data.get(a.dataId).values,p=o.data.get(l.dataId).values;for(let h=0;h<u.length;h++){const g=u[h],v=p[h];n[h]=Math.hypot(g,v)}return o.makeOutput(n,i.shape,"float32")},m={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8apgO":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concat",()=>c),t.export(s,"concatConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("./Complex"),m=e("./Concat_impl"),f=e("./Identity"),i=e("./Imag"),o=e("./Real"),n=e("./Reshape");function c(l){const{inputs:u,backend:p,attrs:h}=l,{axis:g}=h,v=r.util.parseAxisParam(g,u[0].shape)[0],_=u.map(F=>F.shape);r.backend_util.assertParamsConsistent(_,v);let k=r.backend_util.computeOutShape(u.map(F=>F.shape),v);if(r.util.sizeFromShape(k)===0)return p.makeTensorInfo(k,u[0].dtype,[]);const y=u.filter(F=>r.util.sizeFromShape(F.shape)>0);if(y.length===1)return(0,f.identity)({inputs:{x:y[0]},backend:p});if(y[0].dtype==="complex64"){const F=y.map(O=>(0,o.real)({inputs:{input:O},backend:p})),S=y.map(O=>(0,i.imag)({inputs:{input:O},backend:p})),I=c({inputs:F,backend:p,attrs:{axis:v}}),j=c({inputs:S,backend:p,attrs:{axis:v}}),D=(0,d.complex)({inputs:{real:I,imag:j},backend:p});return F.forEach(O=>p.disposeIntermediateTensorInfo(O)),S.forEach(O=>p.disposeIntermediateTensorInfo(O)),p.disposeIntermediateTensorInfo(I),p.disposeIntermediateTensorInfo(j),D}const x=y.map(F=>{const S=r.util.sizeFromShape(F.shape.slice(v)),I=[-1,S];return(0,n.reshape)({inputs:{x:F},backend:p,attrs:{shape:I}})}),b=x.map(F=>({vals:p.data.get(F.dataId).values,shape:F.shape}));k=r.backend_util.computeOutShape(x.map(F=>F.shape),1);const C=x[0].shape[0]===1,w=(0,m.concatImpl)(b,k,u[0].dtype,C),N=r.backend_util.computeOutShape(y.map(F=>F.shape),v),T=p.makeTensorInfo(N,u[0].dtype,w);return x.forEach(F=>p.disposeIntermediateTensorInfo(F)),T}const a={kernelName:r.Concat,backendName:"cpu",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","./Complex":"f0JWF","./Concat_impl":"fssKt","./Identity":"dW73G","./Imag":"esngK","./Real":"bFwFI","./Reshape":"7zDdd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],esngK:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"imag",()=>d),t.export(s,"imagConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o}=f,{input:n}=i,c=o.data.get(n.dataId).complexTensorInfos.imag,a=o.data.get(c.dataId).values;return o.makeTensorInfo(c.shape,c.dtype,a)}const m={kernelName:r.Imag,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4iY8C":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2D",()=>m),t.export(s,"conv2DConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,filter:l}=o,{strides:u,pad:p,dataFormat:h,dilations:g,dimRoundingMode:v}=c;(0,d.assertNotComplex)([a,l],"conv2d");const _=r.backend_util.convertConv2DDataFormat(h),k=r.backend_util.computeConv2DInfo(a.shape,l.shape,u,g,p,v,!1,_),y=k.filterHeight,x=k.filterWidth,b=k.dilationHeight,C=k.dilationWidth,w=k.padInfo.left,N=k.padInfo.top,T=k.dataFormat==="channelsLast",F=new r.TensorBuffer(k.outShape,a.dtype),S=r.util.computeStrides(a.shape),I=r.util.computeStrides(l.shape),j=S[0],D=T?S[1]:S[2],O=T?S[2]:1,$=T?1:S[1],P=F.strides[0],R=T?F.strides[1]:F.strides[2],A=T?F.strides[2]:1,z=T?1:F.strides[1],G=n.data.get(a.dataId).values,L=n.data.get(l.dataId).values,M=F.values;for(let V=0;V<k.batchSize;++V){const K=V*j,W=V*P;for(let H=0;H<k.outHeight;++H){const Z=W+H*R,Q=H*k.strideHeight-N;for(let te=0;te<y;++te){const ee=Q+te*b;if(ee<0||ee>=k.inHeight)continue;const ne=te*I[0],se=K+ee*D;for(let X=0;X<k.outWidth;++X){const U=Z+X*A,Y=X*k.strideWidth-w;for(let J=0;J<x;++J){const q=Y+J*C;if(q<0||q>=k.inWidth)continue;const ae=ne+J*I[1],ie=se+q*O;let le=ae;for(let ue=0;ue<k.inChannels;++ue){const B=G[ie+ue*$];for(let re=0;re<k.outChannels;++re)M[U+re*z]+=B*L[le+re];le+=k.outChannels}}}}}}return n.makeTensorInfo(F.shape,F.dtype,M)}const f={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1Hb0P":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2DBackpropFilter",()=>m),t.export(s,"conv2DBackpropFilterConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,dy:l}=o,{strides:u,pad:p,dataFormat:h,dimRoundingMode:g,filterShape:v}=c;(0,d.assertNotComplex)([a,l],"conv2dBackpropFilter");const _=r.backend_util.convertConv2DDataFormat(h),k=r.backend_util.computeConv2DInfo(a.shape,v,u,1,p,g,!1,_),{strideHeight:y,strideWidth:x,filterHeight:b,filterWidth:C}=k,w=k.dataFormat==="channelsLast",N=new r.TensorBuffer(k.filterShape,"float32"),T=k.padInfo.left,F=k.padInfo.top,S=n.data.get(a.dataId).values,I=n.data.get(l.dataId).values,j=new r.TensorBuffer(a.shape,a.dtype,S),D=new r.TensorBuffer(l.shape,l.dtype,I);for(let O=0;O<b;++O){const $=Math.max(0,Math.ceil((F-O)/y)),P=Math.min(k.outHeight,(k.inHeight+F-O)/y);for(let R=0;R<C;++R){const A=Math.max(0,Math.ceil((T-R)/x)),z=Math.min(k.outWidth,(k.inWidth+T-R)/x);for(let G=0;G<k.inChannels;++G)for(let L=0;L<k.outChannels;++L){let M=0;for(let V=0;V<k.batchSize;++V)for(let K=$;K<P;++K){const W=O+K*y-F;for(let H=A;H<z;++H){const Z=R+H*x-T;w?M+=j.get(V,W,Z,G)*D.get(V,K,H,L):M+=j.get(V,G,W,Z)*D.get(V,L,K,H)}}N.set(M,O,R,G,L)}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const f={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],h1WKI:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2DBackpropInput",()=>m),t.export(s,"conv2DBackpropInputConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{dy:a,filter:l}=o,{inputShape:u,strides:p,pad:h,dataFormat:g,dimRoundingMode:v}=c;(0,d.assertNotComplex)([a,l],"conv2dBackpropInput");const _=r.util.computeStrides(l.shape),k=r.util.computeStrides(a.shape);let y=r.backend_util.convertConv2DDataFormat(g);const x=r.backend_util.computeConv2DInfo(u,l.shape,p,1,h,v,!1,y),b=new r.TensorBuffer(x.inShape,"float32"),C=b.values,w=n.data.get(a.dataId).values,N=n.data.get(l.dataId).values,[T,F,S]=_,{batchSize:I,filterHeight:j,filterWidth:D,inChannels:O,inHeight:$,inWidth:P,outChannels:R,outHeight:A,outWidth:z,strideHeight:G,strideWidth:L}=x;y=x.dataFormat;const M=j-1-x.padInfo.top,V=D-1-x.padInfo.left,K=y==="channelsLast",W=b.strides[0],H=K?b.strides[1]:b.strides[2],Z=K?b.strides[2]:1,Q=K?1:b.strides[1],te=k[0],ee=K?k[1]:k[2],ne=K?k[2]:1,se=K?1:k[1];for(let X=0;X<I;++X)for(let U=0;U<O;++U)for(let Y=0;Y<$;++Y){const J=Y-M,q=Math.max(0,Math.ceil(J/G)),ae=Math.min(A,(j+J)/G);for(let ie=0;ie<P;++ie){const le=ie-V,ue=Math.max(0,Math.ceil(le/L)),B=Math.min(z,(D+le)/L);let re=0;for(let de=q;de<ae;++de){const fe=de*G-J;for(let pe=ue;pe<B;++pe){const me=pe*L-le,he=te*X+ee*de+ne*pe,ge=T*(j-1-fe)+F*(D-1-me)+S*U;for(let ve=0;ve<R;++ve){const ke=w[he+se*ve],_e=N[ge+ve];re+=ke*_e}}}const oe=W*X+H*Y+Z*ie+Q*U;C[oe]=re}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const f={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3NPfP":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3D",()=>m),t.export(s,"conv3DConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,filter:l}=o,{strides:u,pad:p,dilations:h}=c;(0,d.assertNotComplex)([a,l],"conv3d");const g=r.backend_util.computeConv3DInfo(a.shape,l.shape,u,h,p),{filterDepth:v,filterHeight:_,filterWidth:k,dilationDepth:y,dilationHeight:x,dilationWidth:b,padInfo:C}=g,w=C.front,N=C.left,T=C.top,F=new r.TensorBuffer(g.outShape,a.dtype),S=n.data.get(a.dataId).values,I=n.data.get(l.dataId).values,j=F.values,D=r.util.computeStrides(a.shape),O=r.util.computeStrides(l.shape);for(let $=0;$<g.batchSize;++$){const P=$*D[0],R=$*F.strides[0];for(let A=0;A<g.outDepth;++A){const z=R+A*F.strides[1],G=A*g.strideDepth-w;for(let L=0;L<v;++L){const M=G+L*y;if(M<0||M>=g.inDepth)continue;const V=L*O[0],K=P+M*D[1];for(let W=0;W<g.outHeight;++W){const H=z+W*F.strides[2],Z=W*g.strideHeight-T;for(let Q=0;Q<_;++Q){const te=Z+Q*x;if(te<0||te>=g.inHeight)continue;const ee=V+Q*O[1],ne=K+te*D[2];for(let se=0;se<g.outWidth;++se){const X=H+se*g.outChannels,U=se*g.strideWidth-N;for(let Y=0;Y<k;++Y){const J=U+Y*b;if(J<0||J>=g.inWidth)continue;const q=ee+Y*O[2],ae=ne+J*g.inChannels;let ie=q;for(let le=0;le<g.inChannels;++le){const ue=S[ae+le];for(let B=0;B<g.outChannels;++B)j[X+B]+=ue*I[ie+B];ie+=g.outChannels}}}}}}}}return n.makeTensorInfo(F.shape,F.dtype,F.values)}const f={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"21fNb":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3DBackpropFilterV2",()=>m),t.export(s,"conv3DBackpropFilterV2Config",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,dy:l}=o,{strides:u,pad:p,filterShape:h}=c;(0,d.assertNotComplex)([a,l],"conv3dBackpropFilterV2");const g=r.util.computeStrides(a.shape),v=r.util.computeStrides(l.shape),_=r.backend_util.computeConv3DInfo(a.shape,h,u,1,p),k=_.strideDepth,y=_.strideHeight,x=_.strideWidth,b=_.filterDepth,C=_.filterHeight,w=_.filterWidth,N=new r.TensorBuffer(_.filterShape,"float32"),T=N.values,[F,S,I,j]=N.strides,D=n.data.get(l.dataId).values,[O,$,P,R]=v,A=n.data.get(a.dataId).values,[z,G,L,M]=g,V=_.padInfo.front,K=_.padInfo.left,W=_.padInfo.top;for(let H=0;H<b;++H){const Z=Math.max(0,Math.ceil((V-H)/k)),Q=Math.min(_.outDepth,(_.inDepth+V-H)/k),te=H*F;for(let ee=0;ee<C;++ee){const ne=Math.max(0,Math.ceil((W-ee)/y)),se=Math.min(_.outHeight,(_.inHeight+W-ee)/y),X=ee*S+te;for(let U=0;U<w;++U){const Y=Math.max(0,Math.ceil((K-U)/x)),J=Math.min(_.outWidth,(_.inWidth+K-U)/x),q=U*I+X;for(let ae=0;ae<_.inChannels;++ae){const ie=ae*j+q;for(let le=0;le<_.outChannels;++le){let ue=0;for(let B=0;B<_.batchSize;++B){const re=B*z,oe=B*O;for(let de=Z;de<Q;++de){const pe=(H+de*k-V)*G+re,me=de*$+oe;for(let he=ne;he<se;++he){const ve=(ee+he*y-W)*L+pe,ke=he*P+me;for(let _e=Y;_e<J;++_e){const be=(U+_e*x-K)*M+ve,Ce=_e*R+ke;ue+=A[be+ae]*D[Ce+le]}}}}T[ie+le]=ue}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const f={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kd5Z6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3DBackpropInputV2",()=>m),t.export(s,"conv3DBackpropInputV2Config",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{dy:a,filter:l}=o,{pad:u,strides:p,inputShape:h}=c;(0,d.assertNotComplex)([a],"conv3dBackpropInputV2");const g=r.util.computeStrides(a.shape),v=r.util.computeStrides(l.shape),_=r.backend_util.computeConv3DInfo(h,l.shape,p,1,u),k=new r.TensorBuffer(_.inShape,"float32"),y=k.values,[x,b,C,w]=k.strides,N=n.data.get(a.dataId).values,[T,F,S,I]=g,j=n.data.get(l.dataId).values,[D,O,$,P]=v,{batchSize:R,filterDepth:A,filterHeight:z,filterWidth:G,inChannels:L,inDepth:M,inHeight:V,inWidth:K,outChannels:W,outDepth:H,outHeight:Z,outWidth:Q,strideDepth:te,strideHeight:ee,strideWidth:ne}=_,se=A-1-_.padInfo.front,X=z-1-_.padInfo.top,U=G-1-_.padInfo.left;for(let Y=0;Y<R;++Y)for(let J=0;J<L;++J)for(let q=0;q<M;++q){const ae=q-se,ie=Math.max(0,Math.ceil(ae/te)),le=Math.min(H,(A+ae)/te);for(let ue=0;ue<V;++ue){const B=ue-X,re=Math.max(0,Math.ceil(B/ee)),oe=Math.min(Z,(z+B)/ee);for(let de=0;de<K;++de){const fe=de-U,pe=Math.max(0,Math.ceil(fe/ne)),me=Math.min(Q,(G+fe)/ne);let he=0;for(let ge=ie;ge<le;++ge){const ve=ge*te-ae;for(let ke=re;ke<oe;++ke){const _e=ke*ee-B;for(let ye=pe;ye<me;++ye){const be=ye*ne-fe,Ce=T*Y+F*ge+S*ke+I*ye,we=D*(A-1-ve)+O*(z-1-_e)+$*(G-1-be)+P*J;for(let xe=0;xe<W;++xe){const Ne=N[Ce+xe],Ie=j[we+xe];he+=Ne*Ie}}}}y[x*Y+b*q+C*ue+w*de+J]=he}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const f={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7U5fb":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cos",()=>m),t.export(s,"cosConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Cos,i=>Math.cos(i)),f={kernelName:r.Cos,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hUNHR:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cosh",()=>m),t.export(s,"coshConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Cosh,i=>Math.cosh(i)),f={kernelName:r.Cosh,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],knyhj:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cropAndResize",()=>d),t.export(s,"cropAndResizeConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o,attrs:n}=f,{image:c,boxes:a,boxInd:l}=i,{cropSize:u,method:p,extrapolationValue:h}=n,[g,v,_,k]=c.shape,y=a.shape[0],[x,b]=u,C=(0,r.buffer)([y,x,b,k],"float32"),w=o.data.get(a.dataId).values,N=o.data.get(l.dataId).values,T=o.data.get(c.dataId).values,F=r.util.computeStrides(c.shape),S=r.util.computeStrides(C.shape);for(let I=0;I<y;I++){const j=I*4,D=w[j],O=w[j+1],$=w[j+2],P=w[j+3],R=N[I];if(R>=g)continue;const A=x>1?($-D)*(v-1)/(x-1):0,z=b>1?(P-O)*(_-1)/(b-1):0;for(let G=0;G<x;G++){const L=x>1?D*(v-1)+G*A:.5*(D+$)*(v-1);if(L<0||L>v-1){for(let M=0;M<b;M++)for(let V=0;V<k;V++){const K=V+M*S[2]+G*S[1]+I*S[0];C.values[K]=h}continue}if(p==="bilinear"){const M=Math.floor(L),V=Math.ceil(L),K=L-M;for(let W=0;W<b;W++){const H=b>1?O*(_-1)+W*z:.5*(O+P)*(_-1);if(H<0||H>_-1){for(let ee=0;ee<k;ee++){const ne=ee+W*S[2]+G*S[1]+I*S[0];C.values[ne]=h}continue}const Z=Math.floor(H),Q=Math.ceil(H),te=H-Z;for(let ee=0;ee<k;ee++){let ne=ee+Z*F[2]+M*F[1]+R*F[0];const se=T[ne];ne=ee+Q*F[2]+M*F[1]+R*F[0];const X=T[ne];ne=ee+Z*F[2]+V*F[1]+R*F[0];const U=T[ne];ne=ee+Q*F[2]+V*F[1]+R*F[0];const Y=T[ne],J=se+(X-se)*te,q=U+(Y-U)*te;ne=ee+W*S[2]+G*S[1]+I*S[0],C.values[ne]=J+(q-J)*K}}}else for(let M=0;M<b;++M){const V=b>1?O*(_-1)+M*z:.5*(O+P)*(_-1);if(V<0||V>_-1){for(let H=0;H<k;H++){const Z=H+M*S[2]+G*S[1]+I*S[0];C.values[Z]=h}continue}const K=Math.round(V),W=Math.round(L);for(let H=0;H<k;H++){const Z=H+K*F[2]+W*F[1]+R*F[0],Q=H+M*S[2]+G*S[1]+I*S[0];C.values[Q]=T[Z]}}}}return o.makeTensorInfo(C.shape,C.dtype,C.values)}const m={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6FMkn":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cumprod",()=>f),t.export(s,"cumprodConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Transpose");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{axis:u,exclusive:p,reverse:h}=a;(0,d.assertNotComplex)(l,"cumprod");const g=r.backend_util.getAxesPermutation([u],l.shape.length);let v=l;g!=null&&(v=(0,m.transpose)({inputs:{x:l},backend:c,attrs:{perm:g}}));const _=r.backend_util.getInnerMostAxes(1,l.shape.length)[0];if(_!==v.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${v.shape.length-1} but got axis=${_}`);const k=(0,r.upcastType)(v.dtype,"int32"),y=r.util.makeOnesTypedArray(r.util.sizeFromShape(v.shape),k),x=c.data.get(v.dataId).values,b=v.shape[v.shape.length-1],C=h?(N,T)=>N+b-T-1:(N,T)=>N+T;for(let N=0;N<x.length;N+=b)for(let T=0;T<b;T++){const F=C(N,T);if(T===0)y[F]=p?1:x[F];else{const S=C(N,T-1);y[F]=p?x[S]*y[S]:x[F]*y[S]}}const w=c.makeTensorInfo(v.shape,k,y);if(g!=null){const N=r.backend_util.getUndoAxesPermutation(g),T=(0,m.transpose)({inputs:{x:w},backend:c,attrs:{perm:N}});return c.disposeIntermediateTensorInfo(w),c.disposeIntermediateTensorInfo(v),T}return w}const i={kernelName:r.Cumprod,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lkuUe:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cumsum",()=>f),t.export(s,"cumsumConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Transpose");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{axis:u,exclusive:p,reverse:h}=a;(0,d.assertNotComplex)(l,"cumsum");const g=r.backend_util.getAxesPermutation([u],l.shape.length);let v=l;g!=null&&(v=(0,m.transpose)({inputs:{x:l},backend:c,attrs:{perm:g}}));const _=r.backend_util.getInnerMostAxes(1,l.shape.length)[0];if(_!==v.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${v.shape.length-1} but got axis=${_}`);const k=(0,r.upcastType)(v.dtype,"int32"),y=r.util.makeZerosTypedArray(r.util.sizeFromShape(v.shape),k),x=c.data.get(v.dataId).values,b=v.shape[v.shape.length-1],C=h?(N,T)=>N+b-T-1:(N,T)=>N+T;for(let N=0;N<x.length;N+=b)for(let T=0;T<b;T++){const F=C(N,T);if(T===0)y[F]=p?0:x[F];else{const S=C(N,T-1);y[F]=p?x[S]+y[S]:x[F]+y[S]}}const w=c.makeTensorInfo(v.shape,k,y);if(g!=null){const N=r.backend_util.getUndoAxesPermutation(g),T=(0,m.transpose)({inputs:{x:w},backend:c,attrs:{perm:N}});return c.disposeIntermediateTensorInfo(w),c.disposeIntermediateTensorInfo(v),T}return w}const i={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8XgTe":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"denseBincount",()=>m),t.export(s,"denseBincountConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Bincount_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,weights:l}=o,{size:u,binaryOutput:p}=c;if(a.shape.length===1){const h=n.data.get(a.dataId).values,g=n.data.get(l.dataId).values,v=(0,d.bincountImpl)(h,g,l.dtype,l.shape,u);return n.makeTensorInfo([u],l.dtype,v)}else if(a.shape.length===2){const h=n.bufferSync(a),g=n.bufferSync(l),v=(0,d.bincountReduceImpl)(h,g,u,p);return n.makeTensorInfo(v.shape,l.dtype,v.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const f={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Bincount_impl":"2wuj1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iYURE:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthToSpace",()=>d),t.export(s,"depthToSpaceConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o,attrs:n}=f,{x:c}=i,{blockSize:a,dataFormat:l}=n;r.util.assert(l==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${l}`);const u=c.shape[0],p=c.shape[1],h=c.shape[2],g=c.shape[3],v=p*a,_=h*a,k=g/(a*a),y=o.data.get(c.dataId).values,x=new Float32Array(u*v*_*k);let b=0;for(let C=0;C<u;++C)for(let w=0;w<v;++w){const N=Math.floor(w/a),T=w%a;for(let F=0;F<_;++F){const S=Math.floor(F/a),I=F%a,j=(T*a+I)*k;for(let D=0;D<k;++D){const $=D+j+g*(S+h*(N+p*C));x[b++]=y[$]}}}return o.makeTensorInfo([u,v,_,k],c.dtype,x)}const m={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7CpMk":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNative",()=>m),t.export(s,"depthwiseConv2dNativeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,filter:l}=o,{strides:u,pad:p,dilations:h,dimRoundingMode:g}=c;(0,d.assertNotComplex)([a,l],"depthwiseConv2DNative");const v=r.util.computeStrides(a.shape),_=r.util.computeStrides(l.shape);let k=h;k==null&&(k=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,k),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${k}'`);const y=r.backend_util.computeConv2DInfo(a.shape,l.shape,u,k,p,g,!0),{filterHeight:x,filterWidth:b,dilationHeight:C,dilationWidth:w,padInfo:N}=y,T=N.left,F=N.top,S=y.outChannels/y.inChannels,I=new r.TensorBuffer(y.outShape,a.dtype),j=n.data.get(a.dataId).values,D=n.data.get(l.dataId).values,O=I.values;for(let $=0;$<y.batchSize;++$){const P=$*v[0],R=$*I.strides[0];for(let A=0;A<y.outHeight;++A){const z=R+A*I.strides[1],G=A*y.strideHeight-F;for(let L=0;L<x;++L){const M=G+L*C;if(M<0||M>=y.inHeight)continue;const V=L*_[0],K=P+M*v[1];for(let W=0;W<y.outWidth;++W){const H=z+W*I.strides[2],Z=W*y.strideWidth-T;for(let Q=0;Q<b;++Q){const te=Z+Q*w;if(te<0||te>=y.inWidth)continue;const ee=V+Q*_[1],ne=K+te*y.inChannels;let se=H,X=ee;for(let U=0;U<y.inChannels;++U){const Y=j[ne+U];for(let J=0;J<S;++J)O[se+J]+=Y*D[X+J];se+=S,X+=S}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const f={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6QMBA":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNativeBackpropFilter",()=>m),t.export(s,"depthwiseConv2dNativeBackpropFilterConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,dy:l}=o,{strides:u,dilations:p,pad:h,dimRoundingMode:g,filterShape:v}=c;(0,d.assertNotComplex)([a,l],"depthwiseConv2dNativeBackpropFilter");const _=r.backend_util.computeConv2DInfo(a.shape,v,u,p,h,g,!0),{strideHeight:k,strideWidth:y,filterHeight:x,filterWidth:b}=_,C=new r.TensorBuffer(_.filterShape,"float32"),w=_.padInfo.left,N=_.padInfo.top,T=_.outChannels/_.inChannels,F=n.data.get(a.dataId).values,S=new r.TensorBuffer(a.shape,a.dtype,F),I=n.data.get(l.dataId).values,j=new r.TensorBuffer(l.shape,l.dtype,I);for(let D=0;D<x;++D){const O=Math.max(0,Math.ceil((N-D)/k)),$=Math.min(_.outHeight,(_.inHeight+N-D)/k);for(let P=0;P<b;++P){const R=Math.max(0,Math.ceil((w-P)/y)),A=Math.min(_.outWidth,(_.inWidth+w-P)/y);for(let z=0;z<_.outChannels;++z){const G=Math.trunc(z/T),L=z%T;let M=0;for(let V=0;V<_.batchSize;++V)for(let K=O;K<$;++K){const W=D+K*k-N;for(let H=R;H<A;++H){const Z=P+H*y-w;M+=S.get(V,W,Z,G)*j.get(V,K,H,z)}}C.set(M,D,P,G,L)}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const f={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fOcGD:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNativeBackpropInput",()=>m),t.export(s,"depthwiseConv2dNativeBackpropInputConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{dy:a,filter:l}=o,{strides:u,dilations:p,pad:h,dimRoundingMode:g,inputShape:v}=c;(0,d.assertNotComplex)([a,l],"depthwiseConv2DNativeBackpropInput");const _=r.util.computeStrides(a.shape),k=r.util.computeStrides(l.shape),y=r.backend_util.computeConv2DInfo(v,l.shape,u,p,h,g,!0),x=new r.TensorBuffer(y.inShape,"float32"),b=x.values,[C,w,N]=x.strides,T=n.data.get(a.dataId).values,[F,S,I]=_,j=n.data.get(l.dataId).values,[D,O,$]=k,{batchSize:P,filterHeight:R,filterWidth:A,inChannels:z,inHeight:G,inWidth:L,outChannels:M,outHeight:V,outWidth:K,strideHeight:W,strideWidth:H}=y,Z=R-1-y.padInfo.top,Q=A-1-y.padInfo.left,te=M/z;for(let ee=0;ee<P;++ee)for(let ne=0;ne<z;++ne)for(let se=0;se<G;++se){const X=se-Z,U=Math.max(0,Math.ceil(X/W)),Y=Math.min(V,(R+X)/W);for(let J=0;J<L;++J){const q=J-Q,ae=Math.max(0,Math.ceil(q/H)),ie=Math.min(K,(A+q)/H);let le=0;for(let ue=U;ue<Y;++ue){const B=ue*W-X;for(let re=ae;re<ie;++re){const oe=re*H-q,de=F*ee+S*ue+I*re,fe=D*(R-1-B)+O*(A-1-oe)+$*ne;for(let pe=0;pe<te;++pe){const me=ne*te+pe,he=T[de+me],ge=j[fe+pe];le+=he*ge}}}b[C*ee+w*se+N*J+ne]=le}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const f={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aUulz:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"diag",()=>d),t.export(s,"diagConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o}=f,{x:n}=i,c=r.util.sizeFromShape(n.shape),a=o.data.get(n.dataId).values,l=(0,r.buffer)([c,c],n.dtype),u=l.values;for(let h=0;h<a.length;h++)u[h*c+h]=a[h];const p=[...n.shape,...n.shape];return o.makeTensorInfo(p,l.dtype,l.values)}const m={kernelName:r.Diag,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jlJUh:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"dilation2DConfig",()=>d);var r=e("@tensorflow/tfjs-core");const d={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:({inputs:m,backend:f,attrs:i})=>{const{x:o,filter:n}=m,{strides:c,pad:a,dilations:l}=i,u=f,p=u.data.get(o.dataId).values,h=o.shape.length,g=u.data.get(n.dataId).values,v=n.shape.length,{batchSize:_,inHeight:k,inWidth:y,inChannels:x,outHeight:b,outWidth:C,padInfo:w,strideHeight:N,strideWidth:T,filterHeight:F,filterWidth:S,dilationHeight:I,dilationWidth:j,outShape:D}=r.backend_util.computeDilation2DInfo(o.shape,n.shape,c,a,"NHWC",l),O=r.util.sizeFromShape(D),$=D.length,P=r.util.getArrayFromDType(o.dtype,O);for(let A=0;A<_;++A)for(let z=0;z<b;++z){const G=z*N-w.top;for(let L=0;L<C;++L){const M=L*T-w.left;for(let V=0;V<x;++V){let K=Number.MIN_SAFE_INTEGER;for(let H=0;H<F;++H){const Z=G+H*I;if(Z>=0&&Z<k)for(let Q=0;Q<S;++Q){const te=M+Q*j;if(te>=0&&te<y){const ee=r.util.locToIndex([A,Z,te,V],h,r.util.computeStrides(o.shape)),ne=r.util.locToIndex([H,Q,V],v,r.util.computeStrides(n.shape)),se=p[ee]+g[ne];se>K&&(K=se)}}}const W=r.util.locToIndex([A,z,L,V],$,r.util.computeStrides(D));P[W]=K}}}return{dataId:u.write(r.util.toTypedArray(P,o.dtype),D,o.dtype),shape:D,dtype:o.dtype}}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"10PUD":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"dilation2DBackpropFilterConfig",()=>d);var r=e("@tensorflow/tfjs-core");const d={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:m,backend:f,attrs:i})=>{const{x:o,filter:n,dy:c}=m,{strides:a,pad:l,dilations:u}=i,p=f,h=r.util.toNestedArray(o.shape,p.data.get(o.dataId).values),g=r.util.toNestedArray(n.shape,p.data.get(n.dataId).values),{batchSize:v,inHeight:_,inWidth:k,inChannels:y,outHeight:x,outWidth:b,padInfo:C,strideHeight:w,strideWidth:N,filterHeight:T,filterWidth:F,dilationHeight:S,dilationWidth:I,outShape:j}=r.backend_util.computeDilation2DInfo(o.shape,n.shape,a,l,"NHWC",u);r.util.assert(c.rank===j.length,()=>`Error in ${r.Dilation2DBackpropFilter}, dy must have the same rank as output ${j.length}, but got ${c.rank}`);const D=r.util.toNestedArray(j,p.data.get(c.dataId).values),O=r.util.makeZerosNestedTypedArray(n.shape,n.dtype);for(let P=0;P<v;++P)for(let R=0;R<x;++R){const A=R*w-C.top;for(let z=0;z<b;++z){const G=z*N-C.left;for(let L=0;L<y;++L){let M=Number.MIN_SAFE_INTEGER,V=0,K=0;for(let W=0;W<T;++W){const H=A+W*S;if(H>=0&&H<_)for(let Z=0;Z<F;++Z){const Q=G+Z*I;if(Q>=0&&Q<k){const te=h[P][H][Q][L]+g[W][Z][L];te>M&&(M=te,V=W,K=Z)}}}O[V][K][L]+=D[P][R][z][L]}}}return{dataId:p.write(r.util.toTypedArray(O,o.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2ajOJ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"dilation2DBackpropInputConfig",()=>d);var r=e("@tensorflow/tfjs-core");const d={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:m,backend:f,attrs:i})=>{const{x:o,filter:n,dy:c}=m,{strides:a,pad:l,dilations:u}=i,p=f,h=r.util.toNestedArray(o.shape,p.data.get(o.dataId).values),g=r.util.toNestedArray(n.shape,p.data.get(n.dataId).values),{batchSize:v,inHeight:_,inWidth:k,inChannels:y,outHeight:x,outWidth:b,padInfo:C,strideHeight:w,strideWidth:N,filterHeight:T,filterWidth:F,dilationHeight:S,dilationWidth:I,outShape:j}=r.backend_util.computeDilation2DInfo(o.shape,n.shape,a,l,"NHWC",u);r.util.assert(c.rank===j.length,()=>`Error in ${r.Dilation2DBackpropInput}, dy must have the same rank as output ${j.length}, but got ${c.rank}`);const D=r.util.toNestedArray(j,p.data.get(c.dataId).values),O=r.util.makeZerosNestedTypedArray(o.shape,o.dtype);for(let P=0;P<v;++P)for(let R=0;R<x;++R){const A=R*w-C.top;for(let z=0;z<b;++z){const G=z*N-C.left;for(let L=0;L<y;++L){let M=Number.MIN_SAFE_INTEGER,V=A<0?0:A,K=G<0?0:G;for(let W=0;W<T;++W){const H=A+W*S;if(H>=0&&H<_)for(let Z=0;Z<F;++Z){const Q=G+Z*I;if(Q>=0&&Q<k){const te=h[P][H][Q][L]+g[W][Z][L];te>M&&(M=te,V=H,K=Q)}}}O[P][V][K][L]+=D[P][R][z][L]}}}return{dataId:p.write(r.util.toTypedArray(O,o.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6AEPh":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"draw",()=>d),t.export(s,"drawConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o,attrs:n}=f,{image:c}=i,{canvas:a,options:l}=n,{contextOptions:u,imageOptions:p}=l||{},h=(p==null?void 0:p.alpha)||1,g=(u==null?void 0:u.contextType)||"2d";if(g!=="2d")throw new Error(`Context type ${u.contextType} is not supported by the CPU backend.`);const v=a.getContext(g,(u==null?void 0:u.contextAttributes)||{});if(v==null)throw new Error(`Could not get the context with ${g} type.`);const[_,k]=c.shape.slice(0,2),y=c.shape.length===2?1:c.shape[2],x=o.data.get(c.dataId).values,b=c.dtype==="float32"?255:1,C=new Uint8ClampedArray(k*_*4);for(let N=0;N<_*k;++N){const T=[0,0,0,255*h];for(let S=0;S<y;S++){const I=x[N*y+S];if(c.dtype==="float32"){if(I<0||I>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${I}.`)}else if(c.dtype==="int32"&&(I<0||I>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${I}.`);y===1?(T[0]=I*b,T[1]=I*b,T[2]=I*b):T[S]=I*b}const F=N*4;C[F+0]=Math.round(T[0]),C[F+1]=Math.round(T[1]),C[F+2]=Math.round(T[2]),C[F+3]=Math.round(T[3])}a.width=k,a.height=_;const w=new ImageData(C,k,_);return v.putImageData(w,0,0),c}const m={kernelName:r.Draw,backendName:"cpu",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6krjT":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"einsum",()=>o),t.export(s,"einsumConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("./Multiply"),m=e("./Reshape"),f=e("./Sum"),i=e("./Transpose");function o(c){const{inputs:a,backend:l,attrs:u}=c,{equation:p}=u,h=a,{allDims:g,summedDims:v,idDims:_}=r.backend_util.decodeEinsumEquation(p,h.length);r.backend_util.checkEinsumDimSizes(g.length,_,h);const{path:k,steps:y}=r.backend_util.getEinsumComputePath(v,_),x=y.length;let b=null,C=g.length;const w=[];for(let N=0;N<x;++N){for(const T of y[N]){const{permutationIndices:F,expandDims:S}=r.backend_util.getEinsumPermutation(C,_[T]);let I;r.backend_util.isIdentityPermutation(F)?I=h[T]:(I=(0,i.transpose)({inputs:{x:h[T]},backend:l,attrs:{perm:F}}),w.push(I));const j=I.shape.slice();for(let D=0;D<S.length;++D)j.splice(S[D],0,1);r.util.arraysEqual(I.shape,j)||(I=(0,m.reshape)({inputs:{x:I},backend:l,attrs:{shape:j}}),w.push(I)),b===null?b=I:(b=(0,d.multiply)({inputs:{a:I,b},backend:l}),w.push(b))}N<x-1&&(k[N]>=0&&(b=(0,f.sum)({inputs:{x:b},backend:l,attrs:{axis:k[N]-(g.length-C),keepDims:!1}}),w.push(b)),C--)}for(const N of w)N!==b&&l.disposeIntermediateTensorInfo(N);return b}const n={kernelName:r.Einsum,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","./Multiply":"4mqHO","./Reshape":"7zDdd","./Sum":"fIX7J","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fIX7J:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sum",()=>c),t.export(s,"sumConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../utils/zeros_impl"),f=e("./Cast"),i=e("./Identity"),o=e("./Reshape"),n=e("./Transpose");function c(l){const{inputs:u,backend:p,attrs:h}=l,{x:g}=u,{axis:v,keepDims:_}=h;(0,d.assertNotComplex)(g,"sum");let k;g.dtype==="bool"?k=(0,f.cast)({inputs:{x:g},backend:p,attrs:{dtype:"int32"}}):k=(0,i.identity)({inputs:{x:g},backend:p});const y=k.shape.length,x=r.util.parseAxisParam(v,k.shape),b=r.backend_util.getAxesPermutation(x,y);let C=x,w=k;b!=null&&(w=(0,n.transpose)({inputs:{x:k},backend:p,attrs:{perm:b}}),C=r.backend_util.getInnerMostAxes(C.length,y)),r.backend_util.assertAxesAreInnerMostDims("sum",C,w.shape.length);const[N,T]=r.backend_util.computeOutAndReduceShapes(w.shape,C),F=r.backend_util.upcastType(w.dtype,"int32");let S=(0,m.zeros)(p,N,F);const I=r.util.sizeFromShape(T),j=p.data.get(S.dataId).values,D=p.data.get(w.dataId).values;for(let O=0;O<j.length;++O){const $=O*I;let P=0;for(let R=0;R<I;++R)P+=D[$+R];j[O]=P}if(_){const O=r.backend_util.expandShapeToKeepDim(S.shape,x),$=S;S=(0,o.reshape)({inputs:{x:S},backend:p,attrs:{shape:O}}),p.disposeIntermediateTensorInfo($)}return p.disposeIntermediateTensorInfo(k),b!=null&&p.disposeIntermediateTensorInfo(w),S}const a={kernelName:r.Sum,backendName:"cpu",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../utils/zeros_impl":"3e0Ul","./Cast":"k2vAt","./Identity":"dW73G","./Reshape":"7zDdd","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g6PXg:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"eluGrad",()=>m),t.export(s,"eluGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n}=i,{dy:c,y:a}=o;(0,d.assertNotComplex)([c,a],"eluGrad");const l=new Float32Array(r.util.sizeFromShape(a.shape)),u=n.data.get(a.dataId).values,p=n.data.get(c.dataId).values;for(let h=0;h<u.length;++h){const g=u[h];g>=0?l[h]=p[h]:l[h]=p[h]*(g+1)}return n.makeTensorInfo(a.shape,"float32",l)}const f={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2Ck6B":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"erf",()=>a),t.export(s,"erfConfig",()=>l);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=r.backend_util.ERF_P,f=r.backend_util.ERF_A1,i=r.backend_util.ERF_A2,o=r.backend_util.ERF_A3,n=r.backend_util.ERF_A4,c=r.backend_util.ERF_A5,a=(0,d.unaryKernelFunc)(r.Erf,u=>{const p=Math.sign(u),h=Math.abs(u),g=1/(1+m*h);return p*(1-((((c*g+n)*g+o)*g+i)*g+f)*g*Math.exp(-h*h))}),l={kernelName:r.Erf,backendName:"cpu",kernelFunc:a}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hO6vZ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expandDims",()=>m),t.export(s,"expandDimsConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Reshape");function m(i){const{inputs:o,backend:n,attrs:c}=i,{input:a}=o,{dim:l}=c,u=a.shape.length,p=a.shape.slice();let h=l;return l<0&&(r.util.assert(-(u+1)<=l,()=>`Axis must be in the interval [${-(u+1)}, ${u}]`),h=u+l+1),p.splice(h,0,1),(0,d.reshape)({inputs:{x:a},backend:n,attrs:{shape:p}})}const f={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Reshape":"7zDdd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6KDkm":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fft",()=>f),t.export(s,"fftConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../utils/fft_utils"),m=e("./Reshape");function f(o){const{inputs:n,backend:c}=o,{input:a}=n,l=r.util.sizeFromShape(a.shape),u=a.shape[a.shape.length-1],p=l/u,h=(0,m.reshape)({inputs:{x:a},backend:c,attrs:{shape:[p,u]}}),g=(0,d.fftBatch)(h,!1,c),v=(0,m.reshape)({inputs:{x:g},backend:c,attrs:{shape:a.shape}});return c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(g),v}const i={kernelName:r.FFT,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../utils/fft_utils":"deJ4h","./Reshape":"7zDdd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],deJ4h:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fftBatch",()=>p),t.export(s,"fftImpl",()=>h);var r=e("@tensorflow/tfjs-core"),d=e("../kernels/Add"),m=e("../kernels/Complex"),f=e("../kernels/Concat"),i=e("../kernels/Identity"),o=e("../kernels/Imag"),n=e("../kernels/Multiply"),c=e("../kernels/Real"),a=e("../kernels/RealDiv"),l=e("../kernels/Slice"),u=e("../kernels/Sub");function p(k,y,x){const b=k.shape,C=b[0],w=b[1],N=x.data.get(k.dataId),T=N.complexTensorInfos.real,F=N.complexTensorInfos.imag,S=[C,w],I=r.util.sizeFromShape(S),j=r.util.getTypedArrayFromDType("float32",I),D=r.util.getTypedArrayFromDType("float32",I);for(let R=0;R<C;R++){const A=(0,l.slice)({inputs:{x:T},backend:x,attrs:{begin:[R,0],size:[1,w]}}),z=(0,l.slice)({inputs:{x:F},backend:x,attrs:{begin:[R,0],size:[1,w]}}),G=(0,m.complex)({inputs:{real:A,imag:z},backend:x}),{real:L,imag:M}=h(G,y,x),V=r.backend_util.mergeRealAndImagArrays(L,M);for(let K=0;K<w;K++){const W=r.backend_util.getComplexWithIndex(V,K);j[R*w+K]=W.real,D[R*w+K]=W.imag}x.disposeIntermediateTensorInfo(A),x.disposeIntermediateTensorInfo(z),x.disposeIntermediateTensorInfo(G)}const O=x.makeTensorInfo(S,"float32",j),$=x.makeTensorInfo(S,"float32",D),P=(0,m.complex)({inputs:{real:O,imag:$},backend:x});return x.disposeIntermediateTensorInfo(O),x.disposeIntermediateTensorInfo($),P}function h(k,y,x){const b=r.util.sizeFromShape(k.shape),C=x.data.get(k.dataId),w=x.data.get(C.complexTensorInfos.real.dataId).values,N=x.data.get(C.complexTensorInfos.imag.dataId).values;if(g(b)){const T=v(w,N,b,y,x),F=[k.shape[0],k.shape[1]];if(y){const S=x.makeTensorInfo(F,"float32",T.real),I=x.makeTensorInfo(F,"float32",T.imag),j=x.makeTensorInfo([],"float32",r.util.createScalarValue(b,"float32")),D=(0,i.identity)({inputs:{x:j},backend:x}),O=a.realDivConfig.kernelFunc({inputs:{a:S,b:j},backend:x}),$=a.realDivConfig.kernelFunc({inputs:{a:I,b:D},backend:x}),P=x.data.get(O.dataId).values,R=x.data.get($.dataId).values;return x.disposeIntermediateTensorInfo(S),x.disposeIntermediateTensorInfo(I),x.disposeIntermediateTensorInfo(j),x.disposeIntermediateTensorInfo(D),x.disposeIntermediateTensorInfo(O),x.disposeIntermediateTensorInfo($),{real:P,imag:R}}return T}else{const T=r.backend_util.mergeRealAndImagArrays(w,N),F=_(T,b,y);return r.backend_util.splitRealAndImagArrays(F)}}function g(k){return(k&k-1)==0}function v(k,y,x,b,C){if(x===1)return{real:k,imag:y};const w=r.backend_util.mergeRealAndImagArrays(k,y),N=x/2,T=r.backend_util.complexWithEvenIndex(w),F=T.real,S=T.imag,I=[F.length],j=C.makeTensorInfo(I,"float32",F),D=C.makeTensorInfo(I,"float32",S),O=(0,m.complex)({inputs:{real:j,imag:D},backend:C}),$=r.backend_util.complexWithOddIndex(w),P=$.real,R=$.imag,A=[P.length],z=C.makeTensorInfo(A,"float32",P),G=C.makeTensorInfo(A,"float32",R),L=(0,m.complex)({inputs:{real:z,imag:G},backend:C}),M=v(F,S,N,b,C),V=M.real,K=M.imag,W=[V.length],H=C.makeTensorInfo(W,"float32",V),Z=C.makeTensorInfo(W,"float32",K),Q=(0,m.complex)({inputs:{real:H,imag:Z},backend:C}),te=v(P,R,N,b,C),ee=te.real,ne=te.imag,se=[ee.length],X=C.makeTensorInfo(se,"float32",ee),U=C.makeTensorInfo(se,"float32",ne),Y=(0,m.complex)({inputs:{real:X,imag:U},backend:C}),J=r.backend_util.exponents(x,b),q=[J.real.length],ae=C.makeTensorInfo(q,"float32",J.real),ie=C.makeTensorInfo(q,"float32",J.imag),le=(0,m.complex)({inputs:{real:ae,imag:ie},backend:C}),ue=(0,n.multiply)({inputs:{a:le,b:Y},backend:C}),B=(0,d.add)({inputs:{a:Q,b:ue},backend:C}),re=(0,u.sub)({inputs:{a:Q,b:ue},backend:C}),oe=(0,c.real)({inputs:{input:B},backend:C}),de=(0,c.real)({inputs:{input:re},backend:C}),fe=(0,o.imag)({inputs:{input:B},backend:C}),pe=(0,o.imag)({inputs:{input:re},backend:C}),me=(0,f.concat)({inputs:[oe,de],backend:C,attrs:{axis:0}}),he=(0,f.concat)({inputs:[fe,pe],backend:C,attrs:{axis:0}}),ge=C.data.get(me.dataId).values,ve=C.data.get(he.dataId).values;return C.disposeIntermediateTensorInfo(j),C.disposeIntermediateTensorInfo(D),C.disposeIntermediateTensorInfo(O),C.disposeIntermediateTensorInfo(z),C.disposeIntermediateTensorInfo(G),C.disposeIntermediateTensorInfo(L),C.disposeIntermediateTensorInfo(H),C.disposeIntermediateTensorInfo(Z),C.disposeIntermediateTensorInfo(Q),C.disposeIntermediateTensorInfo(X),C.disposeIntermediateTensorInfo(U),C.disposeIntermediateTensorInfo(Y),C.disposeIntermediateTensorInfo(ae),C.disposeIntermediateTensorInfo(ie),C.disposeIntermediateTensorInfo(le),C.disposeIntermediateTensorInfo(ue),C.disposeIntermediateTensorInfo(B),C.disposeIntermediateTensorInfo(re),C.disposeIntermediateTensorInfo(oe),C.disposeIntermediateTensorInfo(fe),C.disposeIntermediateTensorInfo(de),C.disposeIntermediateTensorInfo(pe),C.disposeIntermediateTensorInfo(me),C.disposeIntermediateTensorInfo(he),{real:ge,imag:ve}}function _(k,y,x){const b=new Float32Array(y*2);for(let C=0;C<y;C++){let w=0,N=0;for(let T=0;T<y;T++){const F=r.backend_util.exponent(C*T,y,x),S=r.backend_util.getComplexWithIndex(k,T);w+=S.real*F.real-S.imag*F.imag,N+=S.real*F.imag+S.imag*F.real}x&&(w/=y,N/=y),r.backend_util.assignToTypedArray(b,w,N,C)}return b}},{"@tensorflow/tfjs-core":"fqGP4","../kernels/Add":"dFYRX","../kernels/Complex":"f0JWF","../kernels/Concat":"8apgO","../kernels/Identity":"dW73G","../kernels/Imag":"esngK","../kernels/Multiply":"4mqHO","../kernels/Real":"bFwFI","../kernels/RealDiv":"lYFnp","../kernels/Slice":"89s7e","../kernels/Sub":"bvhLI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lYFnp:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"realDivImpl",()=>f),t.export(s,"div",()=>i),t.export(s,"realDivConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n/c),i=(0,m.binaryKernelFunc)(r.RealDiv,f),o={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"812rF":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fill",()=>d),t.export(s,"fillConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(i){const{backend:o,attrs:n}=i,{shape:c,value:a,dtype:l}=n,u=l||r.util.inferDtype(a),p=r.util.getArrayFromDType(u,r.util.sizeFromShape(c));return f(p,a,u),o.makeTensorInfo(c,u,p)}const m={kernelName:r.Fill,backendName:"cpu",kernelFunc:d};function f(i,o,n){i.fill(o)}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],frFfc:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"flipLeftRightConfig",()=>d);var r=e("@tensorflow/tfjs-core");const d={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:m,attrs:f,backend:i})=>{const{image:o}=m,n=i,c=r.util.getTypedArrayFromDType(o.dtype,r.util.sizeFromShape(o.shape)),[a,l,u,p]=o.shape,h=n.data.get(o.dataId).values;for(let v=0;v<a;v++){const _=v*u*l*p;for(let k=0;k<l;k++){const y=k*(u*p);for(let x=0;x<u;x++){const b=x*p;for(let C=0;C<p;C++){const w=Math.round(u-x-1),N=_+y+b+C;let T=h[N];if(w>=0&&w<u){const F=w*p,S=_+y+F+C;T=h[S]}c[N]=T}}}}return{dataId:n.write(c,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bmL9c:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fusedConv2D",()=>o),t.export(s,"fusedConv2DConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../utils/fused_utils"),m=e("./Add"),f=e("./Conv2D"),i=e("./Reshape");function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p,filter:h,bias:g,preluActivationWeights:v}=a,{strides:_,pad:k,dataFormat:y,dilations:x,dimRoundingMode:b,activation:C,leakyreluAlpha:w}=u;let N=(0,f.conv2D)({inputs:{x:p,filter:h},backend:l,attrs:{strides:_,pad:k,dataFormat:y,dilations:x,dimRoundingMode:b}});if(g){const T=N;if(y==="NCHW"&&g.shape.length===1&&g.shape[0]!==1){const F=(0,i.reshape)({inputs:{x:g},backend:l,attrs:{shape:[g.shape[0],1,1]}});N=(0,m.add)({inputs:{a:N,b:F},backend:l}),l.disposeIntermediateTensorInfo(F)}else N=(0,m.add)({inputs:{a:N,b:g},backend:l});l.disposeIntermediateTensorInfo(T)}if(C){const T=N;if(y==="NCHW"&&C==="prelu"&&v.shape.length===1&&v.shape[0]!==1){const F=(0,i.reshape)({inputs:{x:v},backend:l,attrs:{shape:[v.shape[0],1,1]}});N=(0,d.applyActivation)(l,N,C,F,w),l.disposeIntermediateTensorInfo(F)}else N=(0,d.applyActivation)(l,N,C,v,w);l.disposeIntermediateTensorInfo(T)}return N}const n={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../utils/fused_utils":"dKjYi","./Add":"dFYRX","./Conv2D":"4iY8C","./Reshape":"7zDdd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kbKrr:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fusedDepthwiseConv2D",()=>i),t.export(s,"fusedDepthwiseConv2DConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/fused_utils"),m=e("./Add"),f=e("./DepthwiseConv2dNative");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u,filter:p,bias:h,preluActivationWeights:g}=c,{strides:v,pad:_,dataFormat:k,dilations:y,dimRoundingMode:x,activation:b,leakyreluAlpha:C}=l;let w=(0,f.depthwiseConv2dNative)({inputs:{x:u,filter:p},backend:a,attrs:{strides:v,pad:_,dataFormat:k,dilations:y,dimRoundingMode:x}});if(h){const N=w;w=(0,m.add)({inputs:{a:w,b:h},backend:a}),a.disposeIntermediateTensorInfo(N)}if(b){const N=w;w=(0,d.applyActivation)(a,w,b,g,C),a.disposeIntermediateTensorInfo(N)}return w}const o={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/fused_utils":"dKjYi","./Add":"dFYRX","./DepthwiseConv2dNative":"7CpMk","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2M07U":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gatherNd",()=>m),t.export(s,"gatherNdConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./GatherNd_Impl");function m(i){const{inputs:o,backend:n}=i,{params:c,indices:a}=o,l=r.util.sizeFromShape(c.shape),u=a.shape,p=u[u.length-1],[h,g,v,_]=r.backend_util.prepareAndValidate(c,a);if(g===0)return n.makeTensorInfo(h,c.dtype,[]);const k=n.data.get(a.dataId).values,y=n.bufferSync(c),x=(0,d.gatherNdImpl)(k,y,c.dtype,g,p,v,_,c.shape,l);return n.makeTensorInfo(h,c.dtype,x.values)}const f={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./GatherNd_Impl":"casw3","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],VCmmN:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gatherV2",()=>i),t.export(s,"gatherV2Config",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./GatherV2_impl"),f=e("./Reshape");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u,indices:p}=c,{axis:h,batchDims:g}=l;(0,d.assertNotComplex)([u,p],"gatherV2");const v=r.util.parseAxisParam(h,u.shape)[0],_=a.data.get(p.dataId).values,k=u.shape[v];for(let I=0;I<_.length;++I){const j=_[I];r.util.assert(j<=k-1&&j>=0,()=>`GatherV2: the index value ${j} is not in [0, ${k-1}]`)}let y=g;g==null&&(y=0);const x=r.util.sizeFromShape(p.shape),b=r.backend_util.segment_util.collectGatherOpShapeInfo(u,p,v,y),C=(0,f.reshape)({inputs:{x:u},backend:a,attrs:{shape:[b.batchSize,b.outerSize,b.dimSize,b.sliceSize]}}),w=(0,f.reshape)({inputs:{x:p},backend:a,attrs:{shape:[b.batchSize,x/b.batchSize]}}),N=[b.batchSize,b.outerSize,x/b.batchSize,b.sliceSize],T=a.bufferSync(w),F=a.bufferSync(C),S=(0,m.gatherV2Impl)(F,T,N);return a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(w),a.makeTensorInfo(b.outputShape,S.dtype,S.values)}const o={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./GatherV2_impl":"eBXcj","./Reshape":"7zDdd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fJyCJ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ifft",()=>f),t.export(s,"ifftConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../utils/fft_utils"),m=e("./Reshape");function f(o){const{inputs:n,backend:c}=o,{input:a}=n,l=r.util.sizeFromShape(a.shape),u=a.shape[a.shape.length-1],p=l/u,h=(0,m.reshape)({inputs:{x:a},backend:c,attrs:{shape:[p,u]}}),g=(0,d.fftBatch)(h,!0,c),v=(0,m.reshape)({inputs:{x:g},backend:c,attrs:{shape:a.shape}});return c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(g),v}const i={kernelName:r.IFFT,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../utils/fft_utils":"deJ4h","./Reshape":"7zDdd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1DcGS":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isFinite",()=>m),t.export(s,"isFiniteConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.IsFinite,i=>Number.isFinite(i)?1:0,"bool"),f={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7zPtJ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isInf",()=>m),t.export(s,"isInfConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.IsInf,i=>Math.abs(i)===1/0?1:0,"bool"),f={kernelName:r.IsInf,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3r3zt":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isNaN",()=>m),t.export(s,"isNaNConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.IsNan,i=>Number.isNaN(i)?1:0,"bool"),f={kernelName:r.IsNan,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],WDW1x:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"linSpace",()=>m),t.export(s,"linSpaceConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./LinSpace_impl");function m(i){const{backend:o,attrs:n}=i,{start:c,stop:a,num:l}=n,u=(0,d.linSpaceImpl)(c,a,l);return o.makeTensorInfo([u.length],"float32",u)}const f={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./LinSpace_impl":"3ZlVW","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kbwmz:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"log1p",()=>m),t.export(s,"log1pConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Log1p,i=>Math.log1p(i)),f={kernelName:r.Log1p,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lGRCQ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalAndImpl",()=>f),t.export(s,"logicalAnd",()=>i),t.export(s,"logicalAndConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n&&c),i=(0,m.binaryKernelFunc)(r.LogicalAnd,f,null,"bool"),o={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7JG4n":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalNot",()=>m),t.export(s,"logicalNotConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.LogicalNot,i=>i?0:1,"bool"),f={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3svT6":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalOrImpl",()=>f),t.export(s,"logicalOr",()=>i),t.export(s,"logicalOrConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>n||c),i=(0,m.binaryKernelFunc)(r.LogicalOr,f,null,"bool"),o={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4EMKl":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lRN",()=>m),t.export(s,"LRNConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{depthRadius:l,bias:u,alpha:p,beta:h}=c;(0,d.assertNotComplex)(a,"LRN");const g=a.shape[3],v=g-1,_=n.data.get(a.dataId).values,k=r.util.sizeFromShape(a.shape),y=new Float32Array(k);function x(b){const C=b%g;let w=b-C+Math.max(0,C-l);const N=b-C+Math.min(C+l,v);let T=0;for(;w<=N;w++){const F=_[w];T+=F*F}return T}for(let b=0;b<k;b++){const C=x(b),w=_[b]*Math.pow(u+p*C,-h);y[b]=w}return n.makeTensorInfo(a.shape,a.dtype,y)}const f={kernelName:r.LRN,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dWHxF:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lRNGrad",()=>m),t.export(s,"LRNGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,y:l,dy:u}=o,{depthRadius:p,bias:h,alpha:g,beta:v}=c;(0,d.assertNotComplex)(u,"LRNGrad");const _=r.util.sizeFromShape(u.shape),k=u.shape[3],y=n.data.get(u.dataId).values,x=n.data.get(a.dataId).values,b=n.data.get(l.dataId).values,C=new Float32Array(_),w=_;for(let N=0;N<w;N++){const T=N%k,F=N-T+Math.max(0,T-p),S=N-T+Math.min(k,T+p+1);let I=0;for(let j=F;j<S;j++)I+=Math.pow(x[j],2);I=g*I+h;for(let j=F;j<S;j++){let D=-2*g*v*x[j]*b[N]/I;N===j&&(D+=Math.pow(I,-v)),D*=y[N],C[j]+=D}}return n.makeTensorInfo(u.shape,a.dtype,C)}const f={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kSheX:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"max",()=>i),t.export(s,"maxConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Max_impl"),f=e("./Transpose_impl");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{reductionIndices:p,keepDims:h}=l,g=a;let v=u.shape;const _=v.length,k=r.util.parseAxisParam(p,v);let y=k;const x=r.backend_util.getAxesPermutation(y,_);let b=g.data.get(u.dataId).values;if(x!=null){const I=new Array(_);for(let j=0;j<I.length;j++)I[j]=v[x[j]];b=(0,f.transposeImpl)(b,v,u.dtype,x,I),y=r.backend_util.getInnerMostAxes(y.length,_),v=I}(0,d.assertNotComplex)(u,"max"),r.backend_util.assertAxesAreInnerMostDims("max",y,_);const[C,w]=r.backend_util.computeOutAndReduceShapes(v,y),N=r.util.sizeFromShape(w),T=(0,m.maxImpl)(b,N,C,u.dtype),F=g.write(T,C,u.dtype);let S=C;return h&&(S=r.backend_util.expandShapeToKeepDim(C,k)),{dataId:F,shape:S,dtype:u.dtype}}const o={kernelName:r.Max,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Max_impl":"1ZQAD","./Transpose_impl":"2q0S1","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dZs5Z:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool",()=>i),t.export(s,"maxPoolConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../utils/pool_utils"),f=e("./Identity");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c;(0,d.assertNotComplex)(u,"maxPool");const{filterSize:p,strides:h,pad:g,dimRoundingMode:v}=l,_=1;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(h,_),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${_}'`);const k=r.backend_util.computePool2DInfo(u.shape,p,h,_,g,v);let y;if(k.filterWidth===1&&k.filterHeight===1&&r.util.arraysEqual(k.inShape,k.outShape))y=(0,f.identity)({inputs:{x:u},backend:a});else{const x=a.data.get(u.dataId).values,b=r.util.computeStrides(u.shape),C=(0,m.pool)(x,u.shape,u.dtype,b,k,"max");y=a.makeTensorInfo(k.outShape,u.dtype,C.values)}return y}const o={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../utils/pool_utils":"aWNK4","./Identity":"dW73G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ifuoM:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool3D",()=>f),t.export(s,"maxPool3DConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../utils/pool_utils");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{filterSize:u,strides:p,pad:h,dimRoundingMode:g,dataFormat:v}=a;(0,d.assertNotComplex)(l,"maxPool3d");const _=r.backend_util.computePool3DInfo(l.shape,u,p,1,h,g,v),k=c.data.get(l.dataId).values,y=(0,m.pool3d)(k,l.shape,l.dtype,r.util.computeStrides(l.shape),_,"max");return c.makeTensorInfo(y.shape,"float32",y.values)}const i={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../utils/pool_utils":"aWNK4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kqEYV:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool3DGrad",()=>f),t.export(s,"maxPool3DGradConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../utils/pool_utils");function f(o){const{inputs:n,backend:c,attrs:a}=o,{dy:l,input:u}=n,{filterSize:p,strides:h,pad:g,dimRoundingMode:v}=a;(0,d.assertNotComplex)([l,u],"maxPool3DGrad");const _=r.backend_util.computePool3DInfo(u.shape,p,h,1,g,v),k=c.bufferSync(u),y=(0,m.maxPool3dPositions)(k,_),x=_.strideDepth,b=_.strideHeight,C=_.strideWidth,w=_.dilationDepth,N=_.dilationHeight,T=_.dilationWidth,F=_.effectiveFilterDepth,S=_.effectiveFilterHeight,I=_.effectiveFilterWidth,j=F-1-_.padInfo.front,D=I-1-_.padInfo.left,O=S-1-_.padInfo.top,$=(0,r.buffer)(u.shape,"float32"),P=c.bufferSync(l);for(let R=0;R<_.batchSize;++R)for(let A=0;A<_.inChannels;++A)for(let z=0;z<_.inDepth;++z)for(let G=0;G<_.inHeight;++G)for(let L=0;L<_.inWidth;++L){const M=z-j,V=G-O,K=L-D;let W=0;for(let H=0;H<F;H+=w){const Z=(M+H)/x;if(!(Z<0||Z>=_.outDepth||Math.floor(Z)!==Z))for(let Q=0;Q<S;Q+=N){const te=(V+Q)/b;if(!(te<0||te>=_.outHeight||Math.floor(te)!==te))for(let ee=0;ee<I;ee+=T){const ne=(K+ee)/C;if(ne<0||ne>=_.outWidth||Math.floor(ne)!==ne)continue;const se=F*S*I-1-y.get(R,Z,te,ne,A),X=H*S*I+Q*I+ee,U=se===X?1:0;if(U===0)continue;W+=P.get(R,Z,te,ne,A)*U}}}$.set(W,R,z,G,L,A)}return c.makeTensorInfo($.shape,$.dtype,$.values)}const i={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../utils/pool_utils":"aWNK4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jr21G:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolGrad",()=>f),t.export(s,"maxPoolGradConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("../utils/pool_utils");function f(o){const{inputs:n,backend:c,attrs:a}=o,{dy:l,input:u,output:p}=n,h=u;(0,d.assertNotComplex)([u,p],"maxPoolGrad");const{filterSize:g,strides:v,pad:_,dimRoundingMode:k}=a,y=r.backend_util.computePool2DInfo(h.shape,g,v,1,_,k),x=c.data.get(h.dataId).values,b=(0,r.buffer)(y.outShape,h.dtype,(0,m.maxPoolPositions)(x,h.shape,h.dtype,y).values),C=y.strideHeight,w=y.strideWidth,N=y.dilationHeight,T=y.dilationWidth,F=y.effectiveFilterHeight,S=y.effectiveFilterWidth,I=S-1-y.padInfo.left,j=F-1-y.padInfo.top,D=(0,r.buffer)(h.shape,"float32"),O=c.data.get(l.dataId).values,$=(0,r.buffer)(l.shape,"float32",O);for(let P=0;P<y.batchSize;++P)for(let R=0;R<y.inChannels;++R)for(let A=0;A<y.inHeight;++A)for(let z=0;z<y.inWidth;++z){const G=A-j,L=z-I;let M=0;for(let V=0;V<F;V+=N){const K=(G+V)/C;if(!(K<0||K>=y.outHeight||Math.floor(K)!==K))for(let W=0;W<S;W+=T){const H=(L+W)/w;if(H<0||H>=y.outWidth||Math.floor(H)!==H)continue;const Z=F*S-1-b.get(P,K,H,R),Q=V*S+W,te=Z===Q?1:0;if(te===0)continue;M+=$.get(P,K,H,R)*te}}D.set(M,P,A,z,R)}return c.makeTensorInfo(D.shape,D.dtype,D.values)}const i={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","../utils/pool_utils":"aWNK4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"568Zd":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolWithArgmaxConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./MaxPoolWithArgmax_impl");const f={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:i,attrs:o,backend:n})=>{const{x:c}=i,{filterSize:a,strides:l,pad:u,includeBatchInIndex:p}=o,h=n;(0,d.assertNotComplex)(c,"MaxPoolWithArgmax");const g=h.data.get(c.dataId).values,v=r.backend_util.computePool2DInfo(c.shape,a,l,[1,1],u),[_,k]=(0,m.maxPoolWithArgmaxImpl)(g,c.shape,c.dtype,p,v),y=h.write(_,v.outShape,c.dtype),x=h.write(k,v.outShape,c.dtype);return[{dataId:y,shape:v.outShape,dtype:c.dtype},{dataId:x,shape:v.outShape,dtype:"int32"}]}}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./MaxPoolWithArgmax_impl":"fwqsc","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fwqsc:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolWithArgmaxImpl",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("../utils/pool_utils");function m(f,i,o,n,c){const a=r.util.computeStrides(i),l=(0,d.pool)(f,i,o,a,c,"max"),u=(0,d.maxPoolPositions)(f,i,o,c,!0,n);return[l.values,u.values]}},{"@tensorflow/tfjs-core":"fqGP4","../utils/pool_utils":"aWNK4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7sVsN":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mean",()=>i),t.export(s,"meanConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("./Cast"),m=e("./RealDiv"),f=e("./Sum");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{axis:p,keepDims:h}=l,g=r.util.parseAxisParam(p,u.shape),_=r.backend_util.computeOutAndReduceShapes(u.shape,g)[1],k=r.util.sizeFromShape(_),y=[],x=a.makeTensorInfo([],"float32",new Float32Array([k]));y.push(x);const b=(0,d.cast)({inputs:{x:u},backend:a,attrs:{dtype:"float32"}});y.push(b);const C=(0,m.div)({inputs:{a:b,b:x},backend:a});y.push(C);const w=(0,f.sum)({inputs:{x:C},backend:a,attrs:{axis:p,keepDims:h}});return y.forEach(N=>a.disposeIntermediateTensorInfo(N)),w}const o={kernelName:r.Mean,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","./Cast":"k2vAt","./RealDiv":"lYFnp","./Sum":"fIX7J","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bzQDP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"min",()=>i),t.export(s,"minConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Reshape"),f=e("./Transpose");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{axis:p,keepDims:h}=l;(0,d.assertNotComplex)(u,"min");const g=r.util.parseAxisParam(p,u.shape);let v=g;const _=r.backend_util.getAxesPermutation(v,u.shape.length);let k=u;_!=null&&(k=(0,f.transpose)({inputs:{x:u},backend:a,attrs:{perm:_}}),v=r.backend_util.getInnerMostAxes(v.length,u.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",v,k.shape.length);const[y,x]=r.backend_util.computeOutAndReduceShapes(k.shape,v),b=r.util.sizeFromShape(x),C=r.util.makeZerosTypedArray(r.util.sizeFromShape(y),k.dtype),w=a.data.get(k.dataId).values;for(let T=0;T<C.length;++T){const F=T*b;let S=w[F];for(let I=0;I<b;++I){const j=w[F+I];(Number.isNaN(j)||j<S)&&(S=j)}C[T]=S}_!=null&&a.disposeIntermediateTensorInfo(k);const N=a.makeTensorInfo(y,k.dtype,C);if(h){const T=r.backend_util.expandShapeToKeepDim(y,g),F=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:T}});return a.disposeIntermediateTensorInfo(N),F}return N}const o={kernelName:r.Min,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Reshape":"7zDdd","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1t9Pa":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mirrorPad",()=>m),t.export(s,"mirrorPadConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{paddings:l,mode:u}=c;(0,d.assertNotComplex)(a,"mirrorPad");const p=l.map((T,F)=>T[0]+a.shape[F]+T[1]),h=l.map(T=>T[0]),g=l.map((T,F)=>T[0]+a.shape[F]),v=u==="reflect"?0:1,_=n.data.get(a.dataId).values,k=a.shape.length,y=r.util.computeStrides(a.shape),x=r.util.sizeFromShape(p),b=p.length,C=r.util.computeStrides(p),w=r.util.getTypedArrayFromDType(a.dtype,x);for(let T=0;T<x;T++){let F=r.util.indexToLoc(T,b,C);for(let I=0;I<b;I++)F[I]<h[I]?F[I]=h[I]*2-F[I]-v:F[I]>=g[I]&&(F[I]=(g[I]-1)*2-F[I]+v);F=F.map((I,j)=>I-h[j]);const S=r.util.locToIndex(F,k,y);w[T]=_[S]}return{dataId:n.write(w,p,a.dtype),shape:p,dtype:a.dtype}}const f={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iia1F:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"modImpl",()=>f),t.export(s,"mod",()=>i),t.export(s,"modConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>{const a=n%c;return n<0&&c<0||n>=0&&c>=0?a:(a+c)%c}),i=(0,m.binaryKernelFunc)(r.Mod,f),o={kernelName:r.Mod,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cXgvn:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"multinomial",()=>i),t.export(s,"multinomialConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("seedrandom"),m=e("../cpu_util"),f=e("./Softmax");function i(n){const{inputs:c,backend:a,attrs:l}=n,{logits:u}=c,{numSamples:p,seed:h,normalized:g}=l;(0,m.assertNotComplex)(u,"multinomial");const v=g?u:(0,f.softmax)({inputs:{logits:u},backend:a,attrs:{dim:-1}}),_=v.shape[0],k=v.shape[1],y=a.data.get(v.dataId).values,x=[_,p],b=r.util.makeZerosTypedArray(r.util.sizeFromShape(x),"int32");for(let C=0;C<_;++C){const w=C*k,N=new Float32Array(k-1);N[0]=y[w];for(let S=1;S<N.length;++S)N[S]=N[S-1]+y[w+S];const T=d.alea(h.toString()),F=C*p;for(let S=0;S<p;++S){const I=T();b[F+S]=N.length;for(let j=0;j<N.length;j++)if(I<N[j]){b[F+S]=j;break}}}return g||a.disposeIntermediateTensorInfo(v),a.makeTensorInfo(x,"int32",b)}const o={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4",seedrandom:"gjA5n","../cpu_util":"iDDPS","./Softmax":"fYM8A","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fYM8A:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softmax",()=>c),t.export(s,"softmaxConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("./Exp"),m=e("./Max"),f=e("./RealDiv"),i=e("./Reshape"),o=e("./Sub"),n=e("./Sum");function c(l){const{inputs:u,backend:p,attrs:h}=l,{logits:g}=u,{dim:v}=h,_=g.shape.length;let k=v;if(k===-1&&(k=_-1),k!==_-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${_} and dim was ${k}`);const y=r.util.parseAxisParam([k],g.shape),x=(0,m.max)({inputs:{x:g},backend:p,attrs:{reductionIndices:y,keepDims:!1}}),b=r.backend_util.expandShapeToKeepDim(x.shape,y),C=(0,i.reshape)({inputs:{x},backend:p,attrs:{shape:b}}),w=(0,o.sub)({inputs:{a:g,b:C},backend:p}),N=(0,d.exp)({inputs:{x:w},backend:p}),T=(0,n.sum)({inputs:{x:N},backend:p,attrs:{axis:y,keepDims:!1}}),F=(0,i.reshape)({inputs:{x:T},backend:p,attrs:{shape:b}}),S=(0,f.div)({inputs:{a:N,b:F},backend:p});return p.disposeIntermediateTensorInfo(x),p.disposeIntermediateTensorInfo(C),p.disposeIntermediateTensorInfo(w),p.disposeIntermediateTensorInfo(N),p.disposeIntermediateTensorInfo(T),p.disposeIntermediateTensorInfo(F),S}const a={kernelName:r.Softmax,backendName:"cpu",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","./Exp":"lXEkv","./Max":"kSheX","./RealDiv":"lYFnp","./Reshape":"7zDdd","./Sub":"bvhLI","./Sum":"fIX7J","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],j1dTA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionV3",()=>f),t.export(s,"nonMaxSuppressionV3Config",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");const m=r.kernel_impls.nonMaxSuppressionV3Impl;function f(o){const{inputs:n,backend:c,attrs:a}=o,{boxes:l,scores:u}=n,{maxOutputSize:p,iouThreshold:h,scoreThreshold:g}=a;(0,d.assertNotComplex)(l,"NonMaxSuppression");const v=c.data.get(l.dataId).values,_=c.data.get(u.dataId).values,{selectedIndices:k}=m(v,_,p,h,g);return c.makeTensorInfo([k.length],"int32",new Int32Array(k))}const i={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9PXaN":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionV4",()=>f),t.export(s,"nonMaxSuppressionV4Config",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");const m=r.kernel_impls.nonMaxSuppressionV4Impl;function f(o){const{inputs:n,backend:c,attrs:a}=o,{boxes:l,scores:u}=n,{maxOutputSize:p,iouThreshold:h,scoreThreshold:g,padToMaxOutputSize:v}=a;(0,d.assertNotComplex)(l,"NonMaxSuppressionPadded");const _=c.data.get(l.dataId).values,k=c.data.get(u.dataId).values,{selectedIndices:y,validOutputs:x}=m(_,k,p,h,g,v);return[c.makeTensorInfo([y.length],"int32",new Int32Array(y)),c.makeTensorInfo([],"int32",new Int32Array([x]))]}const i={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9yMax":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionV5",()=>f),t.export(s,"nonMaxSuppressionV5Config",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");const m=r.kernel_impls.nonMaxSuppressionV5Impl;function f(o){const{inputs:n,backend:c,attrs:a}=o,{boxes:l,scores:u}=n,{maxOutputSize:p,iouThreshold:h,scoreThreshold:g,softNmsSigma:v}=a;(0,d.assertNotComplex)(l,"NonMaxSuppressionWithScore");const _=c.data.get(l.dataId).values,k=c.data.get(u.dataId).values,y=p,x=h,b=g,C=v,{selectedIndices:w,selectedScores:N}=m(_,k,y,x,b,C);return[c.makeTensorInfo([w.length],"int32",new Int32Array(w)),c.makeTensorInfo([N.length],"float32",new Float32Array(N))]}const i={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3dnSY":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"oneHot",()=>m),t.export(s,"oneHotConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{indices:a}=o,{dtype:l,depth:u,onValue:p,offValue:h}=c;(0,d.assertNotComplex)(a,"oneHot");const g=r.util.sizeFromShape(a.shape),v=new Float32Array(g*u);v.fill(h);const _=n.data.get(a.dataId).values;for(let k=0;k<g;++k)_[k]>=0&&_[k]<u&&(v[k*u+_[k]]=p);return n.makeTensorInfo([...a.shape,u],l,v)}const f={kernelName:r.OneHot,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d3Qms:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"onesLike",()=>n),t.export(s,"onesLikeConfig",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("./Complex"),m=e("./Fill"),f=e("./Imag"),i=e("./Real"),o=e("./ZerosLike");function n(a){const{inputs:l,backend:u}=a,{x:p}=l;if(p.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(p.dtype==="complex64"){const h=(0,i.real)({inputs:{input:p},backend:u}),g=n({inputs:{x:h},backend:u}),v=(0,f.imag)({inputs:{input:p},backend:u}),_=(0,o.zerosLike)({inputs:{x:v},backend:u}),k=(0,d.complex)({inputs:{real:g,imag:_},backend:u});return u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(_),k}else return(0,m.fill)({backend:u,attrs:{shape:p.shape,value:1,dtype:p.dtype}})}const c={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:n}},{"@tensorflow/tfjs-core":"fqGP4","./Complex":"f0JWF","./Fill":"812rF","./Imag":"esngK","./Real":"bFwFI","./ZerosLike":"kjMQi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kjMQi:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"zerosLike",()=>o),t.export(s,"zerosLikeConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("./Complex"),m=e("./Fill"),f=e("./Imag"),i=e("./Real");function o(c){const{inputs:a,backend:l}=c,{x:u}=a;if(u.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(u.dtype==="complex64"){const p=(0,i.real)({inputs:{input:u},backend:l}),h=o({inputs:{x:p},backend:l}),g=(0,f.imag)({inputs:{input:u},backend:l}),v=o({inputs:{x:g},backend:l}),_=(0,d.complex)({inputs:{real:h,imag:v},backend:l});return l.disposeIntermediateTensorInfo(p),l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(v),_}else return(0,m.fill)({backend:l,attrs:{shape:u.shape,value:0,dtype:u.dtype}})}const n={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","./Complex":"f0JWF","./Fill":"812rF","./Imag":"esngK","./Real":"bFwFI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],leWqM:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pack",()=>f),t.export(s,"packConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("./Concat"),m=e("./ExpandDims");function f(o){const{inputs:n,backend:c,attrs:a}=o,{axis:l}=a;if(n.length===1)return(0,m.expandDims)({inputs:{input:n[0]},backend:c,attrs:{dim:l}});const u=n[0].shape,p=n[0].dtype;n.forEach(_=>{r.util.assertShapesMatch(u,_.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(p===_.dtype,()=>"All tensors passed to stack must have matching dtypes")});const h=[],g=n.map(_=>{const k=(0,m.expandDims)({inputs:{input:_},backend:c,attrs:{dim:l}});return h.push(k),k}),v=(0,d.concat)({inputs:g,backend:c,attrs:{axis:l}});return h.forEach(_=>c.disposeIntermediateTensorInfo(_)),v}const i={kernelName:r.Pack,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","./Concat":"8apgO","./ExpandDims":"hO6vZ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],csvoP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"padV2",()=>m),t.export(s,"padV2Config",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{paddings:l,constantValue:u}=c;(0,d.assertNotComplex)(a,"pad");const p=l.map((N,T)=>N[0]+a.shape[T]+N[1]),h=l.map(N=>N[0]),g=n.data.get(a.dataId).values,v=r.util.sizeFromShape(a.shape),_=a.shape.length,k=r.util.computeStrides(a.shape),y=r.util.sizeFromShape(p),x=p.length,b=r.util.computeStrides(p),C=r.util.getTypedArrayFromDType(a.dtype,y);u!==0&&C.fill(u);for(let N=0;N<v;N++){const F=r.util.indexToLoc(N,_,k).map((I,j)=>I+h[j]),S=r.util.locToIndex(F,x,b);C[S]=g[N]}return{dataId:n.write(C,p,a.dtype),shape:p,dtype:a.dtype}}const f={kernelName:r.PadV2,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eBz3c:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"powImpl",()=>f),t.export(s,"pow",()=>i),t.export(s,"powConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/binary_impl"),m=e("../utils/binary_utils");const f=(0,d.createSimpleBinaryKernelImpl)((n,c)=>Math.pow(n,c)),i=(0,m.binaryKernelFunc)(r.Pow,f),o={kernelName:r.Pow,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/binary_impl":"1g9Al","../utils/binary_utils":"8hyWb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2TBWS":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedGather",()=>m),t.export(s,"raggedGatherConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./RaggedGather_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{paramsNestedSplits:a,paramsDenseValues:l,indices:u}=o,{outputRaggedRank:p}=c,h=a.map(w=>n.data.get(w.dataId).values),g=a.map(w=>w.shape),v=n.data.get(l.dataId).values,_=n.data.get(u.dataId).values,[k,y,x]=(0,d.raggedGatherImpl)(h,g,v,l.shape,l.dtype,_,u.shape,p),b=k.map(w=>n.makeTensorInfo([w.length],"int32",w)),C=n.makeTensorInfo(x,l.dtype,y);return b.concat([C])}const f={kernelName:r.RaggedGather,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./RaggedGather_impl":"7uHOQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],herGg:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedRange",()=>m),t.export(s,"raggedRangeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./RaggedRange_impl");function m(i){const{inputs:o,backend:n}=i,{starts:c,limits:a,deltas:l}=o,u=n.data.get(c.dataId).values,p=n.data.get(a.dataId).values,h=n.data.get(l.dataId).values,[g,v]=(0,d.raggedRangeImpl)(u,c.shape,c.dtype,p,a.shape,h,l.shape),_=n.makeTensorInfo([g.length],"int32",g),k=n.makeTensorInfo([v.length],c.dtype,v);return[_,k]}const f={kernelName:r.RaggedRange,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./RaggedRange_impl":"l1PV5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hbjUo:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedTensorToTensor",()=>m),t.export(s,"raggedTensorToTensorConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./RaggedTensorToTensor_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{shape:a,values:l,defaultValue:u,rowPartitionTensors:p}=o,{rowPartitionTypes:h}=c,g=n.data.get(a.dataId).values,v=n.data.get(l.dataId).values,_=n.data.get(u.dataId).values,k=p.map(C=>n.data.get(C.dataId).values),y=p.map(C=>C.shape),[x,b]=(0,d.raggedTensorToTensorImpl)(g,a.shape,v,l.shape,l.dtype,_,u.shape,k,y,h);return n.makeTensorInfo(x,l.dtype,b)}const f={kernelName:r.RaggedTensorToTensor,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./RaggedTensorToTensor_impl":"gMfoE","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jynVg:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"range",()=>m),t.export(s,"rangeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Range_impl");function m(i){const{backend:o,attrs:n}=i,{start:c,stop:a,dtype:l,step:u}=n,p=(0,d.rangeImpl)(c,a,u,l);return o.makeTensorInfo([p.length],l,p)}const f={kernelName:r.Range,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Range_impl":"gZQNV","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1Qyja":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reciprocal",()=>m),t.export(s,"reciprocalConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Reciprocal,i=>1/i),f={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],b487S:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeBilinear",()=>m),t.export(s,"resizeBilinearConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{images:a}=o,{alignCorners:l,halfPixelCenters:u,size:p}=c;(0,d.assertNotComplex)(a,"resizeBilinear");const h=r.util.computeStrides(a.shape),[g,v]=p,[_,k,y,x]=a.shape,b=n.data.get(a.dataId).values,C=new Float32Array(r.util.sizeFromShape([_,g,v,x])),w=[l&&g>1?k-1:k,l&&v>1?y-1:y],N=[l&&g>1?g-1:g,l&&v>1?v-1:v];let T=0;const F=w[0]/N[0],S=w[1]/N[1];for(let I=0;I<_;I++)for(let j=0;j<g;j++){let D;u?D=F*(j+.5)-.5:D=F*j;const O=Math.max(0,Math.floor(D)),$=D-O,P=Math.min(k-1,Math.ceil(D)),R=I*h[0]+O*h[1],A=I*h[0]+P*h[1];for(let z=0;z<v;z++){let G;u?G=S*(z+.5)-.5:G=S*z;const L=Math.max(0,Math.floor(G)),M=G-L,V=Math.min(y-1,Math.ceil(G)),K=R+L*h[2],W=A+L*h[2],H=R+V*h[2],Z=A+V*h[2];for(let Q=0;Q<x;Q++){const te=b[K+Q],ee=b[W+Q],ne=b[H+Q],se=b[Z+Q],X=te+(ne-te)*M,U=ee+(se-ee)*M,Y=X+(U-X)*$;C[T++]=Y}}}return n.makeTensorInfo([_,g,v,x],"float32",C)}const f={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5wAGl":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeBilinearGrad",()=>m),t.export(s,"resizeBilinearGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{images:a,dy:l}=o,{alignCorners:u}=c;(0,d.assertNotComplex)([l,a],"resizeBilinearGrad");const p=r.util.computeStrides(a.shape),[h,g,v,_]=a.shape,[,k,y]=l.shape,x=new Float32Array(h*g*v*_),b=[u&&k>1?g-1:g,u&&y>1?v-1:v],C=[u&&k>1?k-1:k,u&&y>1?y-1:y],w=b[0]/C[0],N=b[1]/C[1],T=n.data.get(l.dataId).values;let F=0;for(let S=0;S<h;S++){const I=S*p[0];for(let j=0;j<k;j++){const D=j*w,O=Math.floor(D),$=Math.min(Math.ceil(D),g-1),P=I+O*p[1],R=I+$*p[1],A=D-O,z=1-A;for(let G=0;G<y;G++){const L=G*N,M=Math.floor(L),V=Math.min(Math.ceil(L),v-1),K=L-M,W=1-K,H=P+M*p[2],Z=P+V*p[2],Q=R+M*p[2],te=R+V*p[2],ee=z*W,ne=z*K,se=A*W,X=A*K;for(let U=0;U<_;U++){const Y=T[F++];x[H+U]+=Y*ee,x[Z+U]+=Y*ne,x[Q+U]+=Y*se,x[te+U]+=Y*X}}}}return n.makeTensorInfo([h,v,g,_],"float32",x)}const f={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kOw1E:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeNearestNeighbor",()=>m),t.export(s,"resizeNearestNeighborConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{images:a}=o,{alignCorners:l,halfPixelCenters:u,size:p}=c;(0,d.assertNotComplex)(a,"resizeNearestNeighbor");const h=r.util.computeStrides(a.shape),[g,v]=p,[_,k,y,x]=a.shape,b=n.data.get(a.dataId).values,C=new Float32Array(_*g*v*x),w=[l&&g>1?k-1:k,l&&v>1?y-1:y],N=[l&&g>1?g-1:g,l&&v>1?v-1:v],T=w[0]/N[0],F=w[1]/N[1];let S=0;for(let I=0;I<_;I++){const j=I*h[0];for(let D=0;D<g;D++){const O=u?T*(D+.5):T*D;let $=Math.min(k-1,l?Math.round(O):Math.floor(O));u&&($=Math.max(0,$));const P=j+$*h[1];for(let R=0;R<v;R++){const A=u?F*(R+.5):F*R;let z=Math.min(y-1,l?Math.round(A):Math.floor(A));u&&(z=Math.max(0,z));const G=P+z*h[2];for(let L=0;L<x;L++){const M=b[G+L];C[S++]=M}}}}return n.makeTensorInfo([_,g,v,x],a.dtype,C)}const f={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fCTvS:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeNearestNeighborGrad",()=>m),t.export(s,"resizeNearestNeighborGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n,attrs:c}=i,{images:a,dy:l}=o,{alignCorners:u}=c;(0,d.assertNotComplex)([l,a],"resizeNearestNeighborGrad");const p=r.util.computeStrides(a.shape),h=r.util.computeStrides(l.shape),[g,v,_,k]=a.shape,[,y,x]=l.shape,b=new Float32Array(g*v*_*k),C=n.data.get(l.dataId).values,w=[u&&y>1?v-1:v,u&&x>1?_-1:_],N=[u&&y>1?y-1:y,u&&x>1?x-1:x],T=w[0]/N[0],F=w[1]/N[1],S=1/T,I=1/F,j=Math.ceil(S)*2+2,D=Math.ceil(I)*2+2;for(let O=0;O<g;O++){const $=O*p[0];for(let P=0;P<v;P++){const R=$+P*p[1],A=Math.floor(P*S),z=Math.floor(A-j/2);for(let G=0;G<_;G++){const L=R+G*p[2],M=Math.floor(G*I),V=Math.floor(M-D/2);for(let K=0;K<k;K++){let W=0;for(let H=0;H<j;H++){const Z=H+z;if(Z<0||Z>=y)continue;const Q=$+Z*h[1],te=Z*T,ee=Math.min(v-1,u?Math.round(te):Math.floor(te));if(P===ee)for(let ne=0;ne<D;ne++){const se=ne+V;if(se<0||se>=x)continue;const X=Q+se*h[2],U=se*F,Y=Math.min(_-1,u?Math.round(U):Math.floor(U));G===Y&&(W+=C[X+K])}}b[L+K]=W}}}}return n.makeTensorInfo(a.shape,a.dtype,b)}const f={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ly0BB:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reverse",()=>f),t.export(s,"reverseConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Identity");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{dims:u}=a;(0,d.assertNotComplex)(l,"reverse");const p=l.shape.length,h=r.util.parseAxisParam(u,l.shape);if(p===0)return(0,m.identity)({inputs:{x:l},backend:c});const g=new r.TensorBuffer(l.shape,l.dtype),v=c.bufferSync(l);for(let _=0;_<g.size;_++){const k=g.indexToLoc(_),y=k.slice();h.forEach(x=>y[x]=l.shape[x]-1-y[x]),g.set(v.get(...y),...k)}return c.makeTensorInfo(g.shape,g.dtype,g.values)}const i={kernelName:r.Reverse,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Identity":"dW73G","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hjzL8:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rotateWithOffsetConfig",()=>d);var r=e("@tensorflow/tfjs-core");const d={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:m,attrs:f,backend:i})=>{const{image:o}=m,{radians:n,fillValue:c,center:a}=f,l=i,u=r.util.getTypedArrayFromDType(o.dtype,r.util.sizeFromShape(o.shape)),[p,h,g,v]=o.shape,[_,k]=r.backend_util.getImageCenter(a,h,g),y=255,x=Math.sin(n),b=Math.cos(n),C=l.data.get(o.dataId).values;for(let N=0;N<p;N++){const T=N*g*h*v;for(let F=0;F<h;F++){const S=F*(g*v);for(let I=0;I<g;I++){const j=I*v;for(let D=0;D<v;D++){const O=[p,F,I,D],$=O[2],P=O[1];let R=($-_)*b-(P-k)*x,A=($-_)*x+(P-k)*b;R=Math.round(R+_),A=Math.round(A+k);let z=c;if(typeof c!="number"&&(D===3?z=y:z=c[D]),R>=0&&R<g&&A>=0&&A<h){const L=A*(g*v),M=R*v,V=T+L+M+D;z=C[V]}const G=T+S+j+D;u[G]=z}}}}return{dataId:l.write(u,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g6uAb:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"round",()=>m),t.export(s,"roundConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Round,i=>{const o=Math.floor(i);return i-o<.5?Math.floor(i):i-o>.5?Math.ceil(i):o%2==0?o:o+1}),f={kernelName:r.Round,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"564GL":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"scatterNd",()=>m),t.export(s,"scatterNdConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Scatter_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{indices:a,updates:l}=o,{shape:u}=c,{sliceRank:p,numUpdates:h,sliceSize:g,strides:v,outputSize:_}=r.backend_util.calculateShapes(l,a,u),k=!0,y=n.bufferSync(a),x=n.bufferSync(l),b=(0,d.scatterImpl)(y,x,u,_,g,h,p,v,0,k);return n.makeTensorInfo(u,b.dtype,b.values)}const f={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Scatter_impl":"10lQI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jhYax:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"searchSorted",()=>m),t.export(s,"searchSortedConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./SearchSorted_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{sortedSequence:a,values:l}=o,{side:u}=c,p=n.data.get(a.dataId).values,h=n.data.get(l.dataId).values,g=(0,d.searchSortedImpl)(p,h,a.shape[0],a.shape[1],l.shape[1],u);return n.makeTensorInfo(l.shape,"int32",g)}const f={kernelName:r.SearchSorted,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./SearchSorted_impl":"34jec","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"34jec":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"searchSortedImpl",()=>f);var r=e("@tensorflow/tfjs-core");function d(i,o){let n=0,c=i.length,a=0;for(;n<c;)a=Math.floor((n+c)/2),i[a]<o?n=a+1:c=a;return c}function m(i,o){let n=0,c=i.length,a=0;for(;n<c;)a=Math.floor((n+c)/2),i[a]<=o?n=a+1:c=a;return c}function f(i,o,n,c,a,l){const u=r.util.getArrayFromDType("int32",n*a);for(let p=0;p<n;++p){const h=i.slice(p*c,(p+1)*c),g=p*a;for(let v=0;v<a;++v)u[g+v]=l==="left"?d(h,o[v+g]):m(h,o[v+g])}return u}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4yeyH":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"select",()=>m),t.export(s,"selectConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");function m(i){const{inputs:o,backend:n}=i,{condition:c,t:a,e:l}=o;(0,d.assertNotComplex)([c,a,l],"select");const u=c.shape.length,p=n.data.get(c.dataId).values,h=n.data.get(a.dataId).values,g=n.data.get(l.dataId).values,v=(0,r.upcastType)(a.dtype,l.dtype),_=r.util.makeZerosTypedArray(r.util.sizeFromShape(a.shape),v);let k=0;const y=u===0||u>1||a.shape.length===1?1:r.util.sizeFromShape(a.shape.slice(1));for(let x=0;x<p.length;x++)for(let b=0;b<y;b++)p[x]===1?_[k++]=h[x]:_[k++]=g[x];return n.makeTensorInfo(a.shape,v,_)}const f={kernelName:r.Select,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ggmmw:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"selu",()=>i),t.export(s,"seluConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=r.backend_util.SELU_SCALEALPHA,f=r.backend_util.SELU_SCALE,i=(0,d.unaryKernelFunc)(r.Selu,n=>n>=0?f*n:m*(Math.exp(n)-1)),o={kernelName:r.Selu,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6Vfps":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sign",()=>m),t.export(s,"signConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Sign,i=>i<0?-1:i>0?1:0),f={kernelName:r.Sign,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jJ9l5:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sin",()=>m),t.export(s,"sinConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Sin,i=>Math.sin(i)),f={kernelName:r.Sin,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jWVpt:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sinh",()=>m),t.export(s,"sinhConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Sinh,i=>Math.sinh(i)),f={kernelName:r.Sinh,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3U9hr":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softplus",()=>i),t.export(s,"softplusConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const f=Math.log(11920928955078125e-23)+2,i=(0,d.unaryKernelFunc)(r.Softplus,n=>{const c=n>-f,a=n<f,l=Math.exp(n);let u;return a?u=l:c?u=n:u=Math.log(1+l),u}),o={kernelName:r.Softplus,backendName:"cpu",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hIEc6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"spaceToBatchND",()=>o),t.export(s,"spaceToBatchNDConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./PadV2"),f=e("./Reshape"),i=e("./Transpose");function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p}=a,{blockShape:h,paddings:g}=u;(0,d.assertNotComplex)([p],"spaceToBatchND");const v=r.util.sizeFromShape(h),_=[[0,0]];_.push(...g);for(let O=1+h.length;O<p.shape.length;++O)_.push([0,0]);const k=m.padV2Config.kernelFunc({inputs:{x:p},backend:l,attrs:{paddings:_,constantValue:0}}),y=r.backend_util.getReshaped(k.shape,h,v,!1),x=r.backend_util.getPermuted(y.length,h.length,!1),b=r.backend_util.getReshapedPermuted(k.shape,h,v,!1),C={x:k},w={shape:y},N=(0,f.reshape)({inputs:C,backend:l,attrs:w}),T={x:N},F={perm:x},S=(0,i.transpose)({inputs:T,backend:l,attrs:F}),I={x:S},j={shape:b},D=(0,f.reshape)({inputs:I,backend:l,attrs:j});return l.disposeIntermediateTensorInfo(k),l.disposeIntermediateTensorInfo(N),l.disposeIntermediateTensorInfo(S),D}const n={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./PadV2":"csvoP","./Reshape":"7zDdd","./Transpose":"9b6th","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lTk7y:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseFillEmptyRows",()=>m),t.export(s,"sparseFillEmptyRowsConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./SparseFillEmptyRows_impl");function m(i){const{inputs:o,backend:n}=i,{indices:c,values:a,denseShape:l,defaultValue:u}=o;if(l.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${l.shape}`);if(c.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${c.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(u.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${u.shape}`);const p=n.data.get(c.dataId).values,h=n.data.get(a.dataId).values,g=n.data.get(l.dataId).values,v=n.data.get(u.dataId).values[0],[_,k,y,x,b]=(0,d.sparseFillEmptyRowsImpl)(p,c.shape,c.dtype,h,a.dtype,g,v);return[n.makeTensorInfo(k,c.dtype,_),n.makeTensorInfo([k[0]],a.dtype,y),n.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(C=>Number(C)))),n.makeTensorInfo([b.length],c.dtype,new Int32Array(b))]}const f={kernelName:r.SparseFillEmptyRows,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./SparseFillEmptyRows_impl":"7XFhg","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2tvLm":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseReshape",()=>m),t.export(s,"sparseReshapeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./SparseReshape_impl");function m(i){const{inputs:o,backend:n}=i,{inputIndices:c,inputShape:a,newShape:l}=o;if(c.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${c.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(l.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${l.shape}`);const u=Array.from(n.data.get(a.dataId).values),p=n.data.get(c.dataId).values,h=Array.from(n.data.get(l.dataId).values),[g,v,_]=(0,d.sparseReshapeImpl)(p,c.shape,c.dtype,u,h);return[n.makeTensorInfo(v,c.dtype,g),n.makeTensorInfo([_.length],l.dtype,new Int32Array(_))]}const f={kernelName:r.SparseReshape,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./SparseReshape_impl":"gWWVU","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5yCCX":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseSegmentMean",()=>m),t.export(s,"sparseSegmentMeanConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./SparseSegmentReduction_impl");function m(i){const{inputs:o,backend:n}=i,{data:c,indices:a,segmentIds:l}=o;if(c.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(l.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${l.shape}`);if(a.shape[0]!==l.shape[0])throw new Error("segmentIds and indices should have same size.");const u=n.data.get(c.dataId).values,p=n.data.get(a.dataId).values,h=n.data.get(l.dataId).values,[g,v]=(0,d.sparseSegmentReductionImpl)(u,c.shape,c.dtype,p,h,!0);return n.makeTensorInfo(v,c.dtype,g)}const f={kernelName:r.SparseSegmentMean,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./SparseSegmentReduction_impl":"3qUTi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9WNNZ":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseSegmentSum",()=>m),t.export(s,"sparseSegmentSumConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./SparseSegmentReduction_impl");function m(i){const{inputs:o,backend:n}=i,{data:c,indices:a,segmentIds:l}=o;if(c.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(l.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${l.shape}`);if(a.shape[0]!==l.shape[0])throw new Error("segmentIds and indices should have same size.");const u=n.data.get(c.dataId).values,p=n.data.get(a.dataId).values,h=n.data.get(l.dataId).values,[g,v]=(0,d.sparseSegmentReductionImpl)(u,c.shape,c.dtype,p,h);return n.makeTensorInfo(v,c.dtype,g)}const f={kernelName:r.SparseSegmentSum,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./SparseSegmentReduction_impl":"3qUTi","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bR85A:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseToDense",()=>m),t.export(s,"sparseToDenseConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Scatter_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{sparseIndices:a,sparseValues:l,defaultValue:u}=o,{outputShape:p}=c,{sliceRank:h,numUpdates:g,sliceSize:v,strides:_,outputSize:k}=r.backend_util.calculateShapes(l,a,p),y=!1,x=n.bufferSync(a);let b;switch(l.dtype){case"bool":{const C=n.bufferSync(l),w=Boolean(n.data.get(u.dataId).values[0]);b=(0,d.scatterImpl)(x,C,p,k,v,g,h,_,w,y);break}case"float32":{const C=n.bufferSync(l),w=n.data.get(u.dataId).values[0];b=(0,d.scatterImpl)(x,C,p,k,v,g,h,_,w,y);break}case"int32":{const C=n.bufferSync(l),w=n.data.get(u.dataId).values[0];b=(0,d.scatterImpl)(x,C,p,k,v,g,h,_,w,y);break}case"string":{const C=n.bufferSync(l),w=r.util.decodeString(n.data.get(u.dataId).values[0]);b=(0,d.scatterImpl)(x,C,p,k,v,g,h,_,w,y);break}default:throw new Error(`Unsupported type ${l.dtype}`)}return n.makeTensorInfo(p,b.dtype,b.values)}const f={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Scatter_impl":"10lQI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4DxuD":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"splitV",()=>m),t.export(s,"splitVConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Slice");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{numOrSizeSplits:l,axis:u}=c,p=r.util.parseAxisParam(u,a.shape)[0],h=r.backend_util.prepareSplitSize(a,l,p),g=new Array(a.shape.length).fill(0),v=a.shape.slice();return h.map(_=>{const k=[...v];k[p]=_;const y=(0,d.slice)({inputs:{x:a},backend:n,attrs:{begin:g,size:k}});return g[p]+=_,y})}const f={kernelName:r.SplitV,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Slice":"89s7e","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3lBeP":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"squareConfig",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util");const m={kernelName:r.Square,backendName:"cpu",kernelFunc:({inputs:f,backend:i})=>{const{x:o}=f,n=i;(0,d.assertNotComplex)(o,"square");const c=n.data.get(o.dataId).values,a=new Float32Array(c.length);for(let u=0;u<c.length;++u){const p=c[u];a[u]=p*p}return{dataId:n.write(a,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"45isu":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"step",()=>m),t.export(s,"stepConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Step,(i,o)=>{const n=o;return isNaN(i)?NaN:i>0?1:n.alpha}),f={kernelName:r.Step,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],htl1r:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stridedSlice",()=>o),t.export(s,"stridedSliceConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Reshape"),f=e("./Slice"),i=e("./StridedSlice_impl");function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p}=a,{begin:h,end:g,strides:v,beginMask:_,endMask:k,ellipsisMask:y,newAxisMask:x,shrinkAxisMask:b}=u;(0,d.assertNotComplex)(p,"stridedSlice");const{finalShapeSparse:C,finalShape:w,isIdentity:N,sliceDim0:T,isSimpleSlice:F,begin:S,end:I,strides:j}=r.slice_util.sliceInfo(p.shape,h,g,v,_,k,y,x,b);let D;if(N)D=(0,m.reshape)({inputs:{x:p},backend:l,attrs:{shape:w}});else if(T||F){r.util.assert(p.shape.length>=1,()=>`Input must have rank at least 1, got: ${p.shape.length}`);const O=r.slice_util.computeOutShape(S,I,j),$=(0,f.slice)({inputs:{x:p},backend:l,attrs:{begin:S,size:O}});D=(0,m.reshape)({inputs:{x:$},backend:l,attrs:{shape:w}}),l.disposeIntermediateTensorInfo($)}else{const O=l.bufferSync(p),$=(0,i.stridedSliceImpl)(C,O,j,S);D=l.makeTensorInfo(w,$.dtype,$.values)}return D}const n={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Reshape":"7zDdd","./Slice":"89s7e","./StridedSlice_impl":"gAc1i","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ckfKr:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringNGrams",()=>m),t.export(s,"stringNGramsConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./StringNGrams_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{separator:a,nGramWidths:l,leftPad:u,rightPad:p,padWidth:h,preserveShortSequences:g}=c,{data:v,dataSplits:_}=o,k=n.data.get(v.dataId).values,y=n.data.get(_.dataId).values,[x,b]=(0,d.stringNGramsImpl)(k,y,a,l,u,p,h,g);return[n.makeTensorInfo([x.length],"string",x),n.makeTensorInfo(_.shape,"int32",b)]}const f={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./StringNGrams_impl":"k9Izu","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ez3Uv:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringSplit",()=>m),t.export(s,"stringSplitConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./StringSplit_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{skipEmpty:a}=c,{input:l,delimiter:u}=o;if(l.dtype!=="string")throw new Error("Input must be of datatype string");if(l.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${l.shape}`);if(u.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${u.shape}`);const p=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values[0],[g,v,_]=(0,d.stringSplitImpl)(p,h,a),k=v.length;return[n.makeTensorInfo([k,2],"int32",g),n.makeTensorInfo([k],"string",v),n.makeTensorInfo([2],"int32",new Int32Array(_))]}const f={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./StringSplit_impl":"2nF5e","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lVoai:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringToHashBucketFast",()=>m),t.export(s,"stringToHashBucketFastConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./StringToHashBucketFast_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{numBuckets:a}=c,{input:l}=o;if(l.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const u=n.data.get(l.dataId).values,p=(0,d.stringToHashBucketFastImpl)(u,a);return n.makeTensorInfo(l.shape,"int32",p)}const f={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./StringToHashBucketFast_impl":"lzmh5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aAJQq:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tan",()=>m),t.export(s,"tanConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Tan,i=>Math.tan(i)),f={kernelName:r.Tan,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bUs7E:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tanh",()=>m),t.export(s,"tanhConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../utils/unary_utils");const m=(0,d.unaryKernelFunc)(r.Tanh,i=>Math.tanh(i)),f={kernelName:r.Tanh,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../utils/unary_utils":"82OA7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4JdvO":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensorScatterUpdate",()=>m),t.export(s,"tensorScatterUpdateConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Scatter_impl");function m(i){const{inputs:o,backend:n}=i,{tensor:c,indices:a,updates:l}=o,{sliceRank:u,numUpdates:p,sliceSize:h,strides:g,outputSize:v}=r.backend_util.calculateShapes(l,a,c.shape),_=!1,k=n.bufferSync(a),y=n.bufferSync(l),x=n.bufferSync(c),b=(0,d.scatterImpl)(k,y,c.shape,v,h,p,u,g,x,_);return n.makeTensorInfo(c.shape,b.dtype,b.values)}const f={kernelName:r.TensorScatterUpdate,backendName:"cpu",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Scatter_impl":"10lQI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eKaKj:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tile",()=>f),t.export(s,"tileConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Tile_impl");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{reps:u}=a;(0,d.assertNotComplex)(l,"tile");const p=(0,m.tileImpl)(c.bufferSync(l),u);return c.makeTensorInfo(p.shape,p.dtype,p.values)}const i={kernelName:r.Tile,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Tile_impl":"lFIsP","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1LLr8":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"topK",()=>f),t.export(s,"topKConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./TopK_impl");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{k:u,sorted:p}=a;(0,d.assertNotComplex)(l,"topk");const h=c.data.get(l.dataId).values,[g,v]=(0,m.topKImpl)(h,l.shape,l.dtype,u,p);return[c.makeTensorInfo(g.shape,g.dtype,g.values),c.makeTensorInfo(v.shape,v.dtype,v.values)]}const i={kernelName:r.TopK,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./TopK_impl":"fXmDb","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hFaZq:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transform",()=>d),t.export(s,"transformConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(p){const{inputs:h,attrs:g,backend:v}=p,{image:_,transforms:k}=h,{interpolation:y,fillMode:x,fillValue:b,outputShape:C}=g,[w,N,T,F]=_.shape,[S,I]=C??[N,T],j=[w,S,I,F],D=r.util.computeStrides(_.shape),O=D[0],$=D[1],P=D[2],R=r.util.computeStrides(j),A=R[0],z=R[1],G=R[2],L=r.util.getTypedArrayFromDType(_.dtype,r.util.sizeFromShape(j));L.fill(b);const M=v.data.get(_.dataId).values,V=v.data.get(k.dataId).values;for(let W=0;W<w;++W){const H=k.shape[0]===1?V:V.subarray(W*8,W*8+8);for(let Z=0;Z<S;++Z)for(let Q=0;Q<I;++Q)for(let te=0;te<F;++te){let ee;const ne=H[6]*Q+H[7]*Z+1;if(ne===0)continue;const se=(H[0]*Q+H[1]*Z+H[2])/ne,X=(H[3]*Q+H[4]*Z+H[5])/ne,U=f(se,T,x),Y=f(X,N,x);switch(y){case"nearest":ee=l(M,N,T,O,$,P,W,Y,U,te,b);break;case"bilinear":ee=u(M,N,T,O,$,P,W,Y,U,te,b);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${y}`)}const J=W*A+Z*z+Q*G+te;L[J]=ee}return v.makeTensorInfo(j,_.dtype,L)}return{dataId:v.write(L,j,_.dtype),shape:_.shape,dtype:_.dtype}}const m={kernelName:r.Transform,backendName:"cpu",kernelFunc:d};function f(p,h,g){switch(g){case"reflect":return i(p,h);case"wrap":return o(p,h);case"nearest":return c(p,h);case"constant":default:return n(p,h)}}function i(p,h){let g=p;if(g<0)if(h<=1)g=0;else{const v=2*h;g<v&&(g=v*Math.trunc(-g/v)+g),g=g<-h?g+v:-g-1}else if(g>h-1)if(h<=1)g=0;else{const v=2*h;g-=v*Math.trunc(g/v),g>=h&&(g=v-g-1)}return r.util.clamp(0,g,h-1)}function o(p,h){let g=p;if(g<0)if(h<=1)g=0;else{const v=h-1;g+=h*(Math.trunc(-g/v)+1)}else if(g>h-1)if(h<=1)g=0;else{const v=h-1;g-=h*Math.trunc(g/v)}return r.util.clamp(0,g,h-1)}function n(p,h){return p}function c(p,h){return r.util.clamp(0,p,h-1)}function a(p,h,g,v,_,k,y,x,b,C,w){const N=y*v+x*_+b*k+C;return 0<=x&&x<h&&0<=b&&b<g?p[N]:w}function l(p,h,g,v,_,k,y,x,b,C,w){const N=Math.round(x),T=Math.round(b);return a(p,h,g,v,_,k,y,N,T,C,w)}function u(p,h,g,v,_,k,y,x,b,C,w){const N=Math.floor(x),T=Math.floor(b),F=N+1,S=T+1,I=(S-b)*a(p,h,g,v,_,k,y,N,T,C,w)+(b-T)*a(p,h,g,v,_,k,y,N,S,C,w),j=(S-b)*a(p,h,g,v,_,k,y,F,T,C,w)+(b-T)*a(p,h,g,v,_,k,y,F,S,C,w);return(F-x)*I+(x-N)*j}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6q6vb":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unique",()=>f),t.export(s,"uniqueConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Unique_impl");function f(o){const{inputs:n,attrs:c,backend:a}=o,{axis:l}=c,{x:u}=n;(0,d.assertNotComplex)(u,"unique");const p=a.data.get(u.dataId).values,{outputValues:h,outputShape:g,indices:v}=(0,m.uniqueImpl)(p,l,u.shape,u.dtype);return[a.makeTensorInfo(g,u.dtype,h),a.makeTensorInfo([v.length],"int32",v)]}const i={kernelName:r.Unique,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Unique_impl":"i7WoT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8FGKW":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unpack",()=>f),t.export(s,"unpackConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("./Reshape"),m=e("./Slice");function f(o){const{inputs:n,backend:c,attrs:a}=o,{value:l}=n;let{axis:u}=a;u<0&&(u+=l.shape.length);const p=l.shape.length,h=l.shape[u],g=new Array(p-1);let v=0;for(let x=0;x<p;x++)x!==u&&(g[v++]=l.shape[x]);const _=new Array(p).fill(0),k=l.shape.slice();k[u]=1;const y=new Array(h);for(let x=0;x<y.length;x++){_[u]=x;const b=(0,m.slice)({inputs:{x:l},backend:c,attrs:{begin:_,size:k}});y[x]=(0,d.reshape)({inputs:{x:b},backend:c,attrs:{shape:g}}),c.disposeIntermediateTensorInfo(b)}return y}const i={kernelName:r.Unpack,backendName:"cpu",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","./Reshape":"7zDdd","./Slice":"89s7e","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dMftS:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unsortedSegmentSum",()=>a),t.export(s,"unsortedSegmentSumConfig",()=>l);var r=e("@tensorflow/tfjs-core"),d=e("../cpu_util"),m=e("./Cast"),f=e("./Equal"),i=e("./ExpandDims"),o=e("./Multiply"),n=e("./Pack"),c=e("./Sum");function a(u){const{inputs:p,backend:h,attrs:g}=u,{x:v,segmentIds:_}=p,{numSegments:k}=g;(0,d.assertNotComplex)(v,"unsortedSegmentSum");const y=v.shape.length,x=_.shape.length,b=[],C=[],w=y-x;let N=_;for(let F=0;F<w;++F){const S=(0,i.expandDims)({inputs:{input:N},backend:h,attrs:{dim:F+1}});N=S,C.push(S)}for(let F=0;F<k;++F){const S=r.util.createScalarValue(F,"int32"),I=h.makeTensorInfo([],"int32",S),j=(0,f.equal)({inputs:{a:I,b:N},backend:h}),D=(0,m.cast)({inputs:{x:j},backend:h,attrs:{dtype:"float32"}}),O=(0,o.multiply)({inputs:{a:D,b:v},backend:h}),$=(0,c.sum)({inputs:{x:O},backend:h,attrs:{axis:0,keepDims:!1}});b.push($),C.push(I),C.push(j),C.push(D),C.push(O),C.push($)}const T=(0,n.pack)({inputs:b,backend:h,attrs:{axis:0}});return C.forEach(F=>h.disposeIntermediateTensorInfo(F)),T}const l={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:a}},{"@tensorflow/tfjs-core":"fqGP4","../cpu_util":"iDDPS","./Cast":"k2vAt","./Equal":"89MJf","./ExpandDims":"hO6vZ","./Multiply":"4mqHO","./Pack":"leWqM","./Sum":"fIX7J","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],evSKx:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s);var r=e("./base");t.exportAll(r,s);var d=e("./register_all_kernels")},{"./base":"5XeZA","./register_all_kernels":"cCoDg","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5XeZA":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"version_webgl",()=>m.version),t.export(s,"webgl",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("./backend_webgl"),m=e("./version"),f=e("./webgl");t.exportAll(f,s),r.device_util.isBrowser()&&(0,r.registerBackend)("webgl",()=>new d.MathBackendWebGL,2);const i={forceHalfFloat:f.forceHalfFloat}},{"@tensorflow/tfjs-core":"fqGP4","./backend_webgl":"bnLDG","./version":"5CdBs","./webgl":"fPsVQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bnLDG:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"EPSILON_FLOAT32",()=>w),t.export(s,"EPSILON_FLOAT16",()=>N),t.export(s,"getBinaryCache",()=>F),t.export(s,"MathBackendWebGL",()=>D);var r=e("./flags_webgl"),d=e("@tensorflow/tfjs-core"),m=e("./canvas_util"),f=e("./decode_matrix_gpu"),i=e("./decode_matrix_packed_gpu"),o=e("./encode_float_gpu"),n=e("./encode_float_packed_gpu"),c=e("./encode_matrix_gpu"),a=e("./encode_matrix_packed_gpu"),l=e("./gpgpu_context"),u=e("./gpgpu_math"),p=e("./kernel_utils/shared"),h=e("./pack_gpu"),g=e("./reshape_packed_gpu"),v=e("./tex_util"),_=e("./texture_manager"),k=e("./unaryop_gpu"),y=e("./unaryop_packed_gpu"),x=e("./unpack_gpu"),b=e("./webgl_util");const C=d.kernel_impls.whereImpl,w=1e-7,N=1e-4,T={};function F($){return $ in T||(T[$]={}),T[$]}const S=(0,d.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),I=600;function j(){return(0,d.env)().global.screen==null?1024:(0,d.env)().global.screen.height*(0,d.env)().global.screen.width*window.devicePixelRatio*I/1024/1024}class D extends d.KernelBackend{nextDataId(){return D.nextDataId++}constructor(P){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,d.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let R;if(P!=null){if(P instanceof l.GPGPUContext)R=P;else{const A=(0,m.getWebGLContext)((0,d.env)().getNumber("WEBGL_VERSION"),P);R=new l.GPGPUContext(A)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const A=(0,m.getWebGLContext)((0,d.env)().getNumber("WEBGL_VERSION"));R=new l.GPGPUContext(A),this.binaryCache=F((0,d.env)().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=R,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new _.TextureManager(this.gpgpu),this.numMBBeforeWarning=j(),this.texData=new d.DataStorage(this,(0,d.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(P,R,A,z,G,L){const M=this.makeTensorInfo(R,A),V=this.texData.get(M.dataId);V.isPacked=!1,V.texture={texture:P,texShape:[z,G]},V.texShape=[z,G];const K=b.getShapeAs3D(R),W=new c.EncodeMatrixProgram(K,!1,L),H=this.runWebGLProgram(W,[M],A,[[z,G]]);return H.shape=R,V.texture=null,this.disposeIntermediateTensorInfo(M),H.dataId}write(P,R,A){if(((0,d.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,d.env)().getBool("DEBUG"))&&this.checkNumericalProblems(P),A==="complex64"&&P!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const z={id:this.nextDataId()};return this.texData.set(z,{shape:R,dtype:A,values:P,usage:v.TextureUsage.UPLOAD,refCount:1}),z}refCount(P){return this.texData.has(P)?this.texData.get(P).refCount:0}incRef(P){const R=this.texData.get(P);R.refCount++}decRef(P){if(this.texData.has(P)){const R=this.texData.get(P);R.refCount--}}move(P,R,A,z,G){if((0,d.env)().getBool("DEBUG")&&this.checkNumericalProblems(R),z==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(P,{shape:A,dtype:z,values:R,usage:v.TextureUsage.UPLOAD,refCount:G})}disposeIntermediateTensorInfo(P){this.disposeData(P.dataId)}readSync(P){const R=this.texData.get(P),{values:A,dtype:z,complexTensorInfos:G,slice:L,shape:M,isPacked:V}=R;if(L!=null){let Z;V?Z=new y.UnaryOpPackedProgram(M,k.CLONE):Z=new k.UnaryOpProgram(M,k.CLONE);const Q=this.runWebGLProgram(Z,[{dataId:P,shape:M,dtype:z}],z),te=this.readSync(Q.dataId);return this.disposeIntermediateTensorInfo(Q),te}if(A!=null)return this.convertAndCacheOnCPU(P);if(z==="string")return A;const K=this.activeTimers!=null;let W;K&&(W=d.util.now());let H;if(z==="complex64"){const Z=this.readSync(G.real.dataId),Q=this.readSync(G.imag.dataId);H=d.backend_util.mergeRealAndImagArrays(Z,Q)}else H=this.getValuesFromTexture(P);return K&&(this.downloadWaitMs+=d.util.now()-W),this.convertAndCacheOnCPU(P,H)}async read(P){if(this.pendingRead.has(P)){const te=this.pendingRead.get(P);return new Promise(ee=>te.push(ee))}const R=this.texData.get(P),{values:A,shape:z,slice:G,dtype:L,complexTensorInfos:M,isPacked:V}=R;if(G!=null){let te;V?te=new y.UnaryOpPackedProgram(z,k.CLONE):te=new k.UnaryOpProgram(z,k.CLONE);const ee=this.runWebGLProgram(te,[{dataId:P,shape:z,dtype:L}],L),ne=this.read(ee.dataId);return this.disposeIntermediateTensorInfo(ee),ne}if(A!=null)return this.convertAndCacheOnCPU(P);if((0,d.env)().getBool("DEBUG")&&!(0,d.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&(0,d.env)().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let K=null,W;if(L!=="complex64"&&(0,d.env)().get("WEBGL_BUFFER_SUPPORTED")){W=this.decode(P);const te=this.texData.get(W.dataId);K=this.gpgpu.createBufferFromTexture(te.texture.texture,...v.getDenseTexShape(z))}this.pendingRead.set(P,[]),L!=="complex64"&&await this.gpgpu.createAndWaitForFence();let H;if(L==="complex64"){const te=await Promise.all([this.read(M.real.dataId),this.read(M.imag.dataId)]),ee=te[0],ne=te[1];H=d.backend_util.mergeRealAndImagArrays(ee,ne)}else if(K==null)H=this.getValuesFromTexture(P);else{const te=d.util.sizeFromShape(z);H=this.gpgpu.downloadFloat32MatrixFromBuffer(K,te)}if(W!=null&&this.disposeIntermediateTensorInfo(W),K!=null){const te=this.gpgpu.gl;b.callAndCheck(te,()=>te.deleteBuffer(K))}const Z=this.convertAndCacheOnCPU(P,H),Q=this.pendingRead.get(P);return this.pendingRead.delete(P),Q.forEach(te=>te(Z)),this.pendingDisposal.has(P)&&(this.pendingDisposal.delete(P),this.disposeData(P)&&(0,d.engine)().removeDataId(P,this),this.pendingDeletes--),Z}readToGPU(P,R={}){const A=this.texData.get(P),{values:z,shape:G,slice:L,dtype:M,isPacked:V,texture:K}=A;if(M==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(L!=null){let Q;V?Q=new y.UnaryOpPackedProgram(G,k.CLONE):Q=new k.UnaryOpProgram(G,k.CLONE);const te=this.runWebGLProgram(Q,[{dataId:P,shape:G,dtype:M}],M),ee=this.readToGPU(te,R);return this.disposeIntermediateTensorInfo(te),ee}if(K==null)throw z!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const W=this.decode(P,R.customTexShape),H=(0,d.engine)().makeTensorFromTensorInfo(W),Z=this.texData.get(W.dataId);return Object.assign({tensorRef:H},Z.texture)}bufferSync(P){const R=this.readSync(P.dataId);if(P.dtype==="string")try{const A=R.map(z=>d.util.decodeString(z));return(0,d.buffer)(P.shape,P.dtype,A)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,d.buffer)(P.shape,P.dtype,R)}checkNumericalProblems(P){if(P!=null)for(let R=0;R<P.length;R++){const A=P[R];if(!b.canBeRepresented(A))throw(0,d.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${A} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${A} cannot be represented on this device.`)}}getValuesFromTexture(P){const{shape:R,dtype:A,isPacked:z}=this.texData.get(P),G=d.util.sizeFromShape(R);if((0,d.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const Z=this.decode(P),Q=this.texData.get(Z.dataId),te=this.gpgpu.downloadMatrixFromPackedTexture(Q.texture.texture,...v.getDenseTexShape(R)).subarray(0,G);return this.disposeIntermediateTensorInfo(Z),te}const L=(0,d.env)().getBool("WEBGL_PACK")&&z===!0,M=L?b.getShapeAs3D(R):R,V=L?new n.EncodeFloatPackedProgram(M):new o.EncodeFloatProgram(M),K=this.runWebGLProgram(V,[{shape:M,dtype:A,dataId:P}],"float32"),W=this.texData.get(K.dataId),H=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(W.texture.texture,W.texShape[0],W.texShape[1]).subarray(0,G);return this.disposeIntermediateTensorInfo(K),H}timerAvailable(){return(0,d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(P){const R=this.activeTimers,A=[];let z=!1;this.programTimersStack==null?(this.programTimersStack=A,z=!0):this.activeTimers.push(A),this.activeTimers=A,P();const G=d.util.flatten(this.activeTimers.map(V=>V.query)).filter(V=>V!=null),L=d.util.flatten(this.activeTimers.map(V=>V.name)).filter(V=>V!=null);this.activeTimers=R,z&&(this.programTimersStack=null);const M={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const V=await Promise.all(G);M.kernelMs=d.util.sum(V),M.getExtraProfileInfo=()=>V.map((K,W)=>({name:L[W],ms:K})).map(K=>`${K.name}: ${K.ms}`).join(", ")}else M.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,M})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:d.util.now(),endMs:null}}endTimer(P){return(0,d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),P):(P.endMs=d.util.now(),P)}async getQueryTime(P){if((0,d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(P);const R=P;return R.endMs-R.startMs}disposeData(P,R=!1){if(this.pendingDisposal.has(P))return!1;if(!this.texData.has(P))return!0;if(R?this.texData.get(P).refCount=0:this.texData.get(P).refCount--,!R&&this.texData.get(P).refCount>0)return!1;if(this.pendingRead.has(P))return this.pendingDisposal.add(P),this.pendingDeletes++,!1;this.releaseGPUData(P);const{complexTensorInfos:A}=this.texData.get(P);return A!=null&&(this.disposeData(A.real.dataId,R),this.disposeData(A.imag.dataId,R)),this.texData.delete(P),!0}releaseGPUData(P){const{texture:R,dtype:A,texShape:z,usage:G,isPacked:L,slice:M}=this.texData.get(P),V=M&&M.origDataId||P,K=this.dataRefCount.get(V);K>1?this.dataRefCount.set(V,K-1):(this.dataRefCount.delete(V),R!=null&&(this.numBytesInGPU-=this.computeBytes(z,A),this.textureManager.releaseTexture(R,z,G,L)));const W=this.texData.get(P);W.texture=null,W.texShape=null,W.isPacked=!1,W.slice=null}getTexture(P){return this.uploadToGPU(P),this.texData.get(P).texture.texture}getDataInfo(P){return this.texData.get(P)}shouldExecuteOnCPU(P,R=S){return(0,d.env)().getBool("WEBGL_CPU_FORWARD")&&P.every(A=>this.texData.get(A.dataId).texture==null&&d.util.sizeFromShape(A.shape)<R)}getGPGPUContext(){return this.gpgpu}where(P){d.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const R=P.dataSync();return C(P.shape,R)}packedUnaryOp(P,R,A){const z=new y.UnaryOpPackedProgram(P.shape,R),G=this.compileAndRun(z,[P],A);return(0,d.engine)().makeTensorFromTensorInfo(G)}abs(P){if(this.shouldExecuteOnCPU([P])&&P.dtype!=="complex64"){const z=(0,p.simpleAbsImplCPU)(this.texData.get(P.dataId).values);return this.makeOutput(P.shape,P.dtype,z)}if((0,d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(P,k.ABS,P.dtype);const R=new k.UnaryOpProgram(P.shape,k.ABS),A=this.compileAndRun(R,[P]);return(0,d.engine)().makeTensorFromTensorInfo(A)}makeTensorInfo(P,R,A){let z;if(R==="string"&&A!=null&&A.length>0&&d.util.isString(A[0])){const G=A.map(L=>d.util.encodeString(L));z=this.write(G,P,R)}else z=this.write(A,P,R);return this.texData.get(z).usage=null,{dataId:z,shape:P,dtype:R}}makeOutput(P,R,A){return(0,d.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(P,R,A),this)}unpackTensor(P){const R=new x.UnpackProgram(P.shape);return this.runWebGLProgram(R,[P],P.dtype)}packTensor(P){const R=new h.PackProgram(P.shape),A=!0;return this.runWebGLProgram(R,[P],P.dtype,null,A)}packedReshape(P,R){const A=[b.getBatchDim(P.shape),...b.getRowsCols(P.shape)],z={dtype:P.dtype,shape:A,dataId:P.dataId},G=[b.getBatchDim(R),...b.getRowsCols(R)],L=new g.ReshapePackedProgram(G,A),M=!0,V=[A],K=this.runWebGLProgram(L,[z],P.dtype,V,M);return{dataId:K.dataId,shape:R,dtype:K.dtype}}decode(P,R){const A=this.texData.get(P),{isPacked:z,shape:G,dtype:L}=A;if(R!=null){const Z=d.util.sizeFromShape(G),Q=R[0]*R[1]*4;d.util.assert(Z<=Q,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const M=b.getShapeAs3D(G);let V;z?V=new i.DecodeMatrixPackedProgram(M):V=new f.DecodeMatrixProgram(M);const K=!0,W=[R??v.getDenseTexShape(M)],H=this.runWebGLProgram(V,[{shape:M,dtype:L,dataId:P}],L,W,K,R);return{dtype:L,shape:G,dataId:H.dataId}}runWebGLProgram(P,R,A,z,G=!1,L){const M=this.makeTensorInfo(P.outputShape,A),V=this.texData.get(M.dataId);if(P.packedOutput&&(V.isPacked=!0),P.outPackingScheme===v.PackingScheme.DENSE){const se=L??v.getDenseTexShape(P.outputShape);V.texShape=se.map(X=>X*2)}if(P.outTexUsage!=null&&(V.usage=P.outTexUsage),d.util.sizeFromShape(M.shape)===0)return V.values=d.util.getTypedArrayFromDType(M.dtype,0),M;const K=[],W=R.map(se=>{if(se.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let X=this.texData.get(se.dataId);if(X.texture==null){if(!P.packedInputs&&d.util.sizeFromShape(se.shape)<=(0,d.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:se.shape,texData:null,isUniform:!0,uniformValues:X.values};P.packedInputs&&(X.isPacked=!0,X.shape=se.shape)}if(this.uploadToGPU(se.dataId),!!X.isPacked!=!!P.packedInputs)se=X.isPacked?this.unpackTensor(se):this.packTensor(se),K.push(se),X=this.texData.get(se.dataId);else if(X.isPacked&&!b.isReshapeFree(X.shape,se.shape)){const U=se,Y=se.shape;se.shape=X.shape,se=this.packedReshape(se,Y),K.push(se),X=this.texData.get(se.dataId),U.shape=Y}return{shape:se.shape,texData:X,isUniform:!1}});this.uploadToGPU(M.dataId);const H={shape:M.shape,texData:V,isUniform:!1},Z=u.makeShaderKey(P,W,H),Q=this.getAndSaveBinary(Z,()=>u.compileProgram(this.gpgpu,P,W,H)),te=this.activeTimers!=null;let ee;te&&(ee=this.startTimer()),(0,d.env)().get("ENGINE_COMPILE_ONLY")||u.runProgram(this.gpgpu,Q,W,H,z),K.forEach(se=>this.disposeIntermediateTensorInfo(se)),te&&(ee=this.endTimer(ee),this.activeTimers.push({name:P.constructor.name,query:this.getQueryTime(ee)}));const ne=(0,d.env)().get("WEBGL_FLUSH_THRESHOLD");if(ne>0){const se=d.util.now();se-this.lastGlFlushTime>ne&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=se)}if(!(0,d.env)().getBool("WEBGL_LAZILY_UNPACK")&&V.isPacked&&G===!1){const se=this.unpackTensor(M);return this.disposeIntermediateTensorInfo(M),se}return M}compileAndRun(P,R,A,z,G=!1){return A=A||R[0].dtype,this.runWebGLProgram(P,R,A,z,G)}getAndSaveBinary(P,R){return P in this.binaryCache||(this.binaryCache[P]=R()),this.binaryCache[P]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,d.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(R=>{this.gpgpu.deleteProgram(this.binaryCache[R].webGLProgram),delete this.binaryCache[R]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=(0,d.tidy)(()=>{if(!(0,d.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const P=(0,d.env)().getBool("DEBUG");(0,d.env)().set("DEBUG",!1);const R=this.abs((0,d.scalar)(1e-8)).dataSync()[0];if((0,d.env)().set("DEBUG",P),R>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?w:N}uploadToGPU(P){const R=this.texData.get(P),{shape:A,dtype:z,values:G,texture:L,usage:M,isPacked:V}=R;if(L!=null)return;const K=this.activeTimers!=null;let W;K&&(W=d.util.now());let H=R.texShape;if(H==null&&(H=b.getTextureShapeFromLogicalShape(A,V),R.texShape=H),G!=null){const Z=b.getShapeAs3D(A);let Q,te=H[1],ee=H[0];const ne=G instanceof Uint8Array||G instanceof Uint8ClampedArray;(V||!ne)&&([te,ee]=v.getPackedMatrixTextureShapeWidthHeight(H[0],H[1])),V?Q=new a.EncodeMatrixPackedProgram(Z,ne):Q=new c.EncodeMatrixProgram(Z,ne);const se=ne?[ee,te]:H,X=this.makeTensorInfo(se,z),U=this.texData.get(X.dataId);ne?U.usage=v.TextureUsage.PIXELS:U.usage=v.TextureUsage.UPLOAD,U.texShape=se,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(X.dataId),te,ee,G);const Y=[[ee,te]],J=!0,q=this.runWebGLProgram(Q,[X],z,Y,J),ae=this.texData.get(q.dataId);R.texShape=ae.texShape,R.isPacked=ae.isPacked,R.usage=ae.usage,(0,d.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(q.dataId):(R.texture=ae.texture,R.values=null,this.texData.delete(q.dataId)),this.disposeIntermediateTensorInfo(X),K&&(this.uploadWaitMs+=d.util.now()-W)}else{const Z=this.acquireTexture(H,M,z,V);R.texture=Z}}convertAndCacheOnCPU(P,R){const A=this.texData.get(P),{dtype:z}=A;return R!=null&&(A.values=O(R,z)),A.values}acquireTexture(P,R,A,z){if(this.numBytesInGPU+=this.computeBytes(P,A),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1048576){const G=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${G} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(P,R,z)}computeBytes(P,R){return P[0]*P[1]*d.util.bytesPerElement(R)}checkCompileCompletion(){for(const[,P]of Object.entries(this.binaryCache))this.checkCompletion_(P)}async checkCompileCompletionAsync(){const P=[];if(this.gpgpu.parallelCompilationExtension){for(const[,R]of Object.entries(this.binaryCache))P.push(this.checkCompletionAsync_(R));return Promise.all(P)}else{for(const[,R]of Object.entries(this.binaryCache)){const A=new Promise(z=>{try{this.checkCompletion_(R),z(!0)}catch(G){throw G}});P.push(A)}return Promise.all(P)}}async checkCompletionAsync_(P){return this.gpgpu.gl.getProgramParameter(P.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(P):(await(0,d.nextFrame)(),this.checkCompletionAsync_(P))}checkCompletion_(P){if(this.gpgpu.gl.getProgramParameter(P.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(P.webGLProgram)),this.gpgpu.gl.getShaderParameter(P.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(b.logShaderSourceAndInfoLog(P.source,this.gpgpu.gl.getShaderInfoLog(P.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const P of Object.values(this.binaryCache)){this.gpgpu.buildVao(P.webGLProgram);const{variablesLocations:R,customUniformLocations:A,infLoc:z,nanLoc:G,outShapeLocation:L,outShapeStridesLocation:M,outTexShapeLocation:V}=(0,u.getUniformLocations)(this.gpgpu,P.program,P.webGLProgram);P.variablesLocations=R,P.customUniformLocations=A,P.infLoc=z,P.nanLoc=G,P.outShapeLocation=L,P.outShapeStridesLocation=M,P.outTexShapeLocation=V}}createTensorFromGPUData(P,R,A){P.channels=P.channels||"RGBA";const{texture:z,height:G,width:L,channels:M}=P,V=(0,d.engine)().backend;if(!V.gpgpu.gl.isTexture(z))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const K=V.writeTexture(z,R,A,G,L,M);return(0,d.engine)().makeTensorFromDataId(K,R,A,V)}}D.nextDataId=0;function O($,P){if(P==="float32"||P==="complex64")return $;if(P==="int32"||P==="bool"){const R=P==="int32"?new Int32Array($.length):new Uint8Array($.length);for(let A=0;A<R.length;++A)R[A]=Math.round($[A]);return R}else throw new Error(`Unknown dtype ${P}`)}},{"./flags_webgl":"fOWeq","@tensorflow/tfjs-core":"fqGP4","./canvas_util":"kUG6y","./decode_matrix_gpu":"co3rV","./decode_matrix_packed_gpu":"gJTgY","./encode_float_gpu":"SeGsD","./encode_float_packed_gpu":"bLxvY","./encode_matrix_gpu":"3hOmg","./encode_matrix_packed_gpu":"aeIpP","./gpgpu_context":"dGqnM","./gpgpu_math":"axk0P","./kernel_utils/shared":"6qOzI","./pack_gpu":"7w4uB","./reshape_packed_gpu":"v57By","./tex_util":"6noJs","./texture_manager":"dFmnd","./unaryop_gpu":"7L5LN","./unaryop_packed_gpu":"iiBam","./unpack_gpu":"5vUUB","./webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fOWeq:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@tensorflow/tfjs-core"),r=e("./webgl_util");const d=(0,t.env)();d.registerFlag("HAS_WEBGL",()=>d.getNumber("WEBGL_VERSION")>0),d.registerFlag("WEBGL_VERSION",()=>(0,r.isWebGLVersionEnabled)(2)?2:(0,r.isWebGLVersionEnabled)(1)?1:0),d.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),d.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>d.get("WEBGL_VERSION")===2),d.registerFlag("WEBGL_CPU_FORWARD",()=>!0),d.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),d.registerFlag("WEBGL_PACK",()=>d.getBool("HAS_WEBGL")),d.registerFlag("WEBGL_PACK_NORMALIZATION",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_PACK_CLIP",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_PACK_REDUCE",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_LAZILY_UNPACK",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_CONV_IM2COL",()=>d.getBool("WEBGL_PACK")),d.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(0,r.getWebGLMaxTextureSize)(d.getNumber("WEBGL_VERSION"))),d.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(0,r.getMaxTexturesInShader)(d.getNumber("WEBGL_VERSION"))),d.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const m=d.getNumber("WEBGL_VERSION");return m===0?0:(0,r.getWebGLDisjointQueryTimerVersion)(m)}),d.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>d.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!t.device_util.isMobile()),d.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(0,r.isCapableOfRenderingToFloatTexture)(d.getNumber("WEBGL_VERSION"))),d.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>d.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:d.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),d.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(0,r.isDownloadFloatTextureEnabled)(d.getNumber("WEBGL_VERSION"))),d.registerFlag("WEBGL_FENCE_API_ENABLED",()=>(0,r.isWebGLFenceEnabled)(d.getNumber("WEBGL_VERSION"))),d.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>d.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),d.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,m=>{if(m<0&&m!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${m}.`)}),d.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>t.device_util.isMobile()?1:-1,m=>{if(m<0&&m!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${m}.`)}),d.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),d.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),d.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),d.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),d.registerFlag("WEBGL_EXP_CONV",()=>!1),d.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>d.getBool("IS_TEST")),d.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),d.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),d.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),d.registerFlag("ENGINE_COMPILE_ONLY",()=>!1)},{"@tensorflow/tfjs-core":"fqGP4","./webgl_util":"kgdHT"}],kgdHT:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"callAndCheck",()=>f),t.export(s,"canBeRepresented",()=>c),t.export(s,"getWebGLErrorMessage",()=>a),t.export(s,"getExtensionOrThrow",()=>l),t.export(s,"createVertexShader",()=>u),t.export(s,"createFragmentShader",()=>p),t.export(s,"logShaderSourceAndInfoLog",()=>g),t.export(s,"createProgram",()=>v),t.export(s,"linkProgram",()=>_),t.export(s,"validateProgram",()=>k),t.export(s,"createStaticVertexBuffer",()=>y),t.export(s,"createStaticIndexBuffer",()=>x),t.export(s,"getNumChannels",()=>b),t.export(s,"createTexture",()=>C),t.export(s,"validateTextureSize",()=>w),t.export(s,"createFramebuffer",()=>N),t.export(s,"bindVertexBufferToProgramAttribute",()=>T),t.export(s,"bindTextureUnit",()=>F),t.export(s,"unbindTextureUnit",()=>S),t.export(s,"getProgramUniformLocationOrThrow",()=>I),t.export(s,"getProgramUniformLocation",()=>j),t.export(s,"bindTextureToProgramUniformSampler",()=>D),t.export(s,"bindCanvasToFramebuffer",()=>O),t.export(s,"bindColorTextureToFramebuffer",()=>$),t.export(s,"unbindColorTextureFromFramebuffer",()=>P),t.export(s,"validateFramebuffer",()=>R),t.export(s,"getFramebufferErrorMessage",()=>A),t.export(s,"getBatchDim",()=>L),t.export(s,"getRowsCols",()=>M),t.export(s,"getShapeAs3D",()=>V),t.export(s,"getTextureShapeFromLogicalShape",()=>K),t.export(s,"isReshapeFree",()=>H),t.export(s,"getWebGLMaxTextureSize",()=>te),t.export(s,"resetMaxTextureSize",()=>ee),t.export(s,"resetMaxTexturesInShader",()=>ne),t.export(s,"getMaxTexturesInShader",()=>se),t.export(s,"getWebGLDisjointQueryTimerVersion",()=>X),t.export(s,"hasExtension",()=>U),t.export(s,"isWebGLVersionEnabled",()=>Y),t.export(s,"isCapableOfRenderingToFloatTexture",()=>J),t.export(s,"isDownloadFloatTextureEnabled",()=>q),t.export(s,"isWebGLFenceEnabled",()=>le),t.export(s,"assertNotComplex",()=>ue);var r=e("@tensorflow/tfjs-core"),d=e("./canvas_util"),m=e("./tex_util");function f(B,re){const oe=re();return(0,r.env)().getBool("DEBUG")&&i(B),oe}function i(B){const re=B.getError();if(re!==B.NO_ERROR)throw new Error("WebGL Error: "+a(B,re))}const o=596e-10,n=65504;function c(B){return!!((0,r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||B===0||o<Math.abs(B)&&Math.abs(B)<n)}function a(B,re){switch(re){case B.NO_ERROR:return"NO_ERROR";case B.INVALID_ENUM:return"INVALID_ENUM";case B.INVALID_VALUE:return"INVALID_VALUE";case B.INVALID_OPERATION:return"INVALID_OPERATION";case B.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case B.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case B.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${re}`}}function l(B,re){return z(B,()=>B.getExtension(re),'Extension "'+re+'" not supported on this browser.')}function u(B,re){const oe=z(B,()=>B.createShader(B.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(f(B,()=>B.shaderSource(oe,re)),f(B,()=>B.compileShader(oe)),B.getShaderParameter(oe,B.COMPILE_STATUS)===!1)throw console.log(B.getShaderInfoLog(oe)),new Error("Failed to compile vertex shader.");return oe}function p(B,re){const oe=z(B,()=>B.createShader(B.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(f(B,()=>B.shaderSource(oe,re)),f(B,()=>B.compileShader(oe)),(0,r.env)().get("ENGINE_COMPILE_ONLY"))return oe;if(B.getShaderParameter(oe,B.COMPILE_STATUS)===!1)throw g(re,B.getShaderInfoLog(oe)),new Error("Failed to compile fragment shader.");return oe}const h=/ERROR: [0-9]+:([0-9]+):/g;function g(B,re){const oe=h.exec(re);if(oe==null){console.log(`Couldn't parse line number in error: ${re}`),console.log(B);return}const de=+oe[1],fe=B.split(`
`),pe=fe.length.toString().length+2,me=fe.map((_e,ye)=>r.util.rightPad((ye+1).toString(),pe)+_e);let he=0;for(let _e=0;_e<me.length;_e++)he=Math.max(me[_e].length,he);const ge=me.slice(0,de-1),ve=me.slice(de-1,de),ke=me.slice(de);console.log(ge.join(`
`)),console.log(re.split(`
`)[0]),console.log(`%c ${r.util.rightPad(ve[0],he)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(ke.join(`
`))}function v(B){return z(B,()=>B.createProgram(),"Unable to create WebGLProgram.")}function _(B,re){if(f(B,()=>B.linkProgram(re)),!(0,r.env)().get("ENGINE_COMPILE_ONLY")&&B.getProgramParameter(re,B.LINK_STATUS)===!1)throw console.log(B.getProgramInfoLog(re)),new Error("Failed to link vertex and fragment shaders.")}function k(B,re){if(f(B,()=>B.validateProgram(re)),B.getProgramParameter(re,B.VALIDATE_STATUS)===!1)throw console.log(B.getProgramInfoLog(re)),new Error("Shader program validation failed.")}function y(B,re){const oe=z(B,()=>B.createBuffer(),"Unable to create WebGLBuffer");return f(B,()=>B.bindBuffer(B.ARRAY_BUFFER,oe)),f(B,()=>B.bufferData(B.ARRAY_BUFFER,re,B.STATIC_DRAW)),oe}function x(B,re){const oe=z(B,()=>B.createBuffer(),"Unable to create WebGLBuffer");return f(B,()=>B.bindBuffer(B.ELEMENT_ARRAY_BUFFER,oe)),f(B,()=>B.bufferData(B.ELEMENT_ARRAY_BUFFER,re,B.STATIC_DRAW)),oe}function b(){return(0,r.env)().getNumber("WEBGL_VERSION")===2?1:4}function C(B){return z(B,()=>B.createTexture(),"Unable to create WebGLTexture.")}function w(B,re){const oe=(0,r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(B<=0||re<=0){const de=`[${B}x${re}]`;throw new Error("Requested texture size "+de+" is invalid.")}if(B>oe||re>oe){const de=`[${B}x${re}]`,fe=`[${oe}x${oe}]`;throw new Error("Requested texture size "+de+" greater than WebGL maximum on this browser / GPU "+fe+".")}}function N(B){return z(B,()=>B.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function T(B,re,oe,de,fe,pe,me){const he=B.getAttribLocation(re,oe);return he===-1?!1:(f(B,()=>B.bindBuffer(B.ARRAY_BUFFER,de)),f(B,()=>B.vertexAttribPointer(he,fe,B.FLOAT,!1,pe,me)),f(B,()=>B.enableVertexAttribArray(he)),!0)}function F(B,re,oe){G(B,oe),f(B,()=>B.activeTexture(B.TEXTURE0+oe)),f(B,()=>B.bindTexture(B.TEXTURE_2D,re))}function S(B,re){G(B,re),f(B,()=>B.activeTexture(B.TEXTURE0+re)),f(B,()=>B.bindTexture(B.TEXTURE_2D,null))}function I(B,re,oe){return z(B,()=>B.getUniformLocation(re,oe),'uniform "'+oe+'" not present in program.')}function j(B,re,oe){return B.getUniformLocation(re,oe)}function D(B,re,oe,de){f(B,()=>F(B,re,de)),f(B,()=>B.uniform1i(oe,de))}function O(B){f(B,()=>B.bindFramebuffer(B.FRAMEBUFFER,null)),f(B,()=>B.viewport(0,0,B.canvas.width,B.canvas.height)),f(B,()=>B.scissor(0,0,B.canvas.width,B.canvas.height))}function $(B,re,oe){f(B,()=>B.bindFramebuffer(B.FRAMEBUFFER,oe)),f(B,()=>B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,re,0))}function P(B,re){f(B,()=>B.bindFramebuffer(B.FRAMEBUFFER,re)),f(B,()=>B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,null,0))}function R(B){const re=B.checkFramebufferStatus(B.FRAMEBUFFER);if(re!==B.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+A(B,re))}function A(B,re){switch(re){case B.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case B.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case B.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case B.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${re}`}}function z(B,re,oe){const de=f(B,()=>re());if(de==null)throw new Error(oe);return de}function G(B,re){const oe=B.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,de=re+B.TEXTURE0;if(de<B.TEXTURE0||de>oe){const fe=`[gl.TEXTURE0, gl.TEXTURE${oe}]`;throw new Error(`textureUnit must be in ${fe}.`)}}function L(B,re=2){return r.util.sizeFromShape(B.slice(0,B.length-re))}function M(B){if(B.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[B.length>1?B[B.length-2]:1,B[B.length-1]]}function V(B){let re=[1,1,1];return B.length===0||B.length===1&&B[0]===1||(re=[L(B),...M(B)]),re}function K(B,re=!1){let oe=(0,r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),de=(0,r.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");de===1/0&&(0,r.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(de=oe/2),re&&(oe=oe*2,de=de*2,B=B.map((he,ge)=>ge>=B.length-2?r.util.nearestLargerEven(B[ge]):B[ge]),B.length===1&&(B=[2,B[0]])),B.length!==2&&(B=r.util.squeezeShape(B).newShape);let fe=r.util.sizeFromShape(B),pe=null;B.length<=1&&fe<=oe?pe=[1,fe]:B.length===2&&B[0]<=oe&&B[1]<=oe?pe=B:B.length===3&&B[0]*B[1]<=oe&&B[2]<=oe?pe=[B[0]*B[1],B[2]]:B.length===3&&B[0]<=oe&&B[1]*B[2]<=oe?pe=[B[0],B[1]*B[2]]:B.length===4&&B[0]*B[1]*B[2]<=oe&&B[3]<=oe?pe=[B[0]*B[1]*B[2],B[3]]:B.length===4&&B[0]<=oe&&B[1]*B[2]*B[3]<=oe&&(pe=[B[0],B[1]*B[2]*B[3]]);const me=pe!=null&&Math.max(...pe)>de&&Math.min(...pe)<=(re?2:1)&&Math.min(...pe)>0;if(pe==null||me)if(re){const he=L(B);let ge=2,ve=2;B.length&&([ge,ve]=M(B)),fe=he*(ge/2)*(ve/2),pe=r.util.sizeToSquarishShape(fe).map(ke=>ke*2)}else pe=r.util.sizeToSquarishShape(fe);return pe}function W(B){return B%2==0}function H(B,re){if(B=B.slice(-2),re=re.slice(-2),r.util.arraysEqual(B,re)||!B.length||!re.length||B[0]===0||B[1]===0||re[0]===0||re[1]===0)return!0;if(B.length!==re.length){const oe=B[B.length-1],de=re[re.length-1];if(oe===de||W(oe)&&W(de)&&(B[0]===1||re[0]===1))return!0}return B[1]===re[1]&&W(B[0])&&W(re[0])}let Z,Q;function te(B){if(Z==null){const re=(0,d.getWebGLContext)(B);Z=re.getParameter(re.MAX_TEXTURE_SIZE)}return Z}function ee(){Z=null}function ne(){Q=null}function se(B){if(Q==null){const re=(0,d.getWebGLContext)(B);Q=re.getParameter(re.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Q)}function X(B){if(B===0)return 0;let re;const oe=(0,d.getWebGLContext)(B);return U(oe,"EXT_disjoint_timer_query_webgl2")&&B===2?re=2:U(oe,"EXT_disjoint_timer_query")?re=1:re=0,re}function U(B,re){return B.getExtension(re)!=null}function Y(B){try{if((0,d.getWebGLContext)(B)!=null)return!0}catch(re){return console.log("Error when getting WebGL context: ",re),!1}return!1}function J(B){if(B===0)return!1;const re=(0,d.getWebGLContext)(B);if(B===1){if(!U(re,"OES_texture_float"))return!1}else if(!U(re,"EXT_color_buffer_float"))return!1;return ae(re)}function q(B){if(B===0)return!1;const re=(0,d.getWebGLContext)(B);if(B===1){if(!U(re,"OES_texture_float")||!U(re,"WEBGL_color_buffer_float"))return!1}else{if(U(re,"EXT_color_buffer_float"))return ae(re);const de="EXT_color_buffer_half_float";if(U(re,de)){const fe=re.getExtension(de);return ie(re,fe)}return!1}return ae(re)}function ae(B){const re=(0,m.getTextureConfig)(B),oe=B.createTexture();B.bindTexture(B.TEXTURE_2D,oe);const de=1,fe=1;B.texImage2D(B.TEXTURE_2D,0,re.internalFormatFloat,de,fe,0,re.textureFormatFloat,re.textureTypeFloat,null);const pe=B.createFramebuffer();B.bindFramebuffer(B.FRAMEBUFFER,pe),B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,oe,0);const me=B.checkFramebufferStatus(B.FRAMEBUFFER)===B.FRAMEBUFFER_COMPLETE;return B.bindTexture(B.TEXTURE_2D,null),B.bindFramebuffer(B.FRAMEBUFFER,null),B.deleteTexture(oe),B.deleteFramebuffer(pe),me}function ie(B,re){const oe=(0,m.getTextureConfig)(B,re),de=B.createTexture();B.bindTexture(B.TEXTURE_2D,de);const fe=1,pe=1;B.texImage2D(B.TEXTURE_2D,0,oe.internalFormatHalfFloat,fe,pe,0,oe.textureFormatFloat,oe.textureTypeHalfFloat,null);const me=B.createFramebuffer();B.bindFramebuffer(B.FRAMEBUFFER,me),B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,de,0);const he=B.checkFramebufferStatus(B.FRAMEBUFFER)===B.FRAMEBUFFER_COMPLETE;return B.bindTexture(B.TEXTURE_2D,null),B.bindFramebuffer(B.FRAMEBUFFER,null),B.deleteTexture(de),B.deleteFramebuffer(me),he}function le(B){return B!==2?!1:(0,d.getWebGLContext)(B).fenceSync!=null}function ue(B,re){Array.isArray(B)||(B=[B]),B.forEach(oe=>{oe!=null&&r.util.assert(oe.dtype!=="complex64",()=>`${re} does not support complex64 tensors in the WebGL backend.`)})}},{"@tensorflow/tfjs-core":"fqGP4","./canvas_util":"kUG6y","./tex_util":"6noJs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kUG6y:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"clearWebGLContext",()=>f),t.export(s,"setWebGLContext",()=>i),t.export(s,"getWebGLContext",()=>o);var r=e("@tensorflow/tfjs-core");const d={},m={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function f(a){delete d[a]}function i(a,l){d[a]=l}function o(a,l){if(!(a in d)||l!=null){const p=c(a,l);if(p!==null)d[a]=p;else return console.log("Could not get context for WebGL version",a),null}const u=d[a];return u==null||u.isContextLost()?(delete d[a],o(a)):(u.disable(u.DEPTH_TEST),u.disable(u.STENCIL_TEST),u.disable(u.BLEND),u.disable(u.DITHER),u.disable(u.POLYGON_OFFSET_FILL),u.disable(u.SAMPLE_COVERAGE),u.enable(u.SCISSOR_TEST),u.enable(u.CULL_FACE),u.cullFace(u.BACK),d[a])}function n(a){if(!(0,r.env)().getBool("IS_SAFARI")&&typeof OffscreenCanvas!="undefined"&&a===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function c(a,l){if(a!==1&&a!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const u=l??n(a);return u.addEventListener("webglcontextlost",p=>{p.preventDefault(),delete d[a]},!1),(0,r.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(m.failIfMajorPerformanceCaveat=!1),a===1?u.getContext("webgl",m)||u.getContext("experimental-webgl",m):u.getContext("webgl2",m)}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6noJs":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"PackingScheme",()=>d),t.export(s,"TextureUsage",()=>m),t.export(s,"PhysicalTextureType",()=>f),t.export(s,"getUnpackedMatrixTextureShapeWidthHeight",()=>i),t.export(s,"getUnpackedArraySizeFromMatrixSize",()=>o),t.export(s,"getColorMatrixTextureShapeWidthHeight",()=>n),t.export(s,"getDenseTexShape",()=>c),t.export(s,"getMatrixSizeFromUnpackedArraySize",()=>a),t.export(s,"decodeMatrixFromUnpackedColorRGBAArray",()=>l),t.export(s,"getPackedMatrixTextureShapeWidthHeight",()=>u),t.export(s,"getPackedRGBAArraySizeFromMatrixShape",()=>p),t.export(s,"getTextureConfig",()=>h);var r=e("@tensorflow/tfjs-core"),d;(function(g){g[g.DENSE=0]="DENSE",g[g.SHARED_BATCH=1]="SHARED_BATCH"})(d||(d={}));var m;(function(g){g[g.RENDER=0]="RENDER",g[g.UPLOAD=1]="UPLOAD",g[g.PIXELS=2]="PIXELS",g[g.DOWNLOAD=3]="DOWNLOAD"})(m||(m={}));var f;(function(g){g[g.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",g[g.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",g[g.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",g[g.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",g[g.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(f||(f={}));function i(g,v){return[v,g]}function o(g,v){return g*v}function n(g,v){return[v*4,g]}function c(g){const v=r.util.sizeFromShape(g),_=Math.ceil(v/4);return r.util.sizeToSquarishShape(_)}function a(g,v){if(g%v!=0)throw new Error(`unpackedSize (${g}) must be a multiple of ${v}`);return g/v}function l(g,v,_){const k=g.length*_/4;if(v.length<k)throw new Error(`matrix length (${v.length}) must be >= ${k}`);let y=0;for(let x=0;x<g.length;x+=4)for(let b=0;b<_;b++)v[y++]=g[x+b]}function u(g,v){return[Math.max(1,Math.ceil(v/2)),Math.max(1,Math.ceil(g/2))]}function p(g,v){const[_,k]=u(g,v);return _*k*4}function h(g,v){const _=g;let k,y,x,b,C,w,N,T,F,S;return(0,r.env)().getNumber("WEBGL_VERSION")===2?(k=_.R32F,y=_.R16F,x=_.RGBA16F,b=_.RGBA32F,C=_.RED,N=4,T=1,F=_.HALF_FLOAT,S=_.FLOAT,w=_.RGBA8):(k=g.RGBA,y=g.RGBA,x=g.RGBA,b=_.RGBA,C=g.RGBA,N=4,T=4,F=v!=null?v.HALF_FLOAT_OES:null,S=g.FLOAT,w=g.RGBA),{internalFormatFloat:k,internalFormatHalfFloat:y,internalFormatPackedHalfFloat:x,internalFormatPackedFloat:b,textureFormatFloat:C,downloadTextureFormat:w,downloadUnpackNumChannels:N,defaultNumChannels:T,textureTypeHalfFloat:F,textureTypeFloat:S}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],co3rV:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DecodeMatrixProgram",()=>i);var r=e("./glsl_version"),d=e("./gpgpu_math"),m=e("./shader_compiler_util"),f=e("./tex_util");class i{constructor(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=f.PackingScheme.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const c=(0,r.getGlslDifferences)();this.outputShape=n,this.enableShapeUniforms=(0,d.useShapeUniforms)(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?m.getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],n):m.getLogicalCoordinatesFromFlatIndex(["r","c","d"],n)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${c.output} = result;
      }
    `}}},{"./glsl_version":"cgkMp","./gpgpu_math":"axk0P","./shader_compiler_util":"36SAg","./tex_util":"6noJs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cgkMp:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getGlslDifferences",()=>d);var r=e("@tensorflow/tfjs-core");function d(){let m,f,i,o,n,c,a,l,u,p;return(0,r.env)().getNumber("WEBGL_VERSION")===2?(m="#version 300 es",f="in",i="out",o="in",n="texture",c="outputColor",a="out vec4 outputColor;",l=(0,r.env)().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(m="",f="attribute",i="varying",o="varying",n="texture2D",c="gl_FragColor",a="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:m,attribute:f,varyingVs:i,varyingFs:o,texture2D:n,output:c,defineOutput:a,defineSpecialNaN:l,defineSpecialInf:u,defineRound:p}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],axk0P:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"compileProgram",()=>f),t.export(s,"getUniformLocations",()=>i),t.export(s,"runProgram",()=>n),t.export(s,"makeShaderKey",()=>c),t.export(s,"useShapeUniforms",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("./shader_compiler"),m=e("./webgl_util");function f(l,u,p,h){const g=p.map((b,C)=>{const w={logicalShape:b.shape,texShape:b.isUniform?null:b.texData.texShape,isUniform:b.isUniform,isPacked:b.isUniform?!1:b.texData.isPacked,flatOffset:null};return b.texData!=null&&b.texData.slice!=null&&b.texData.slice.flatOffset>0&&(w.flatOffset=b.texData.slice.flatOffset),{name:u.variableNames[C],shapeInfo:w}}),v=g.map(b=>b.shapeInfo),_={logicalShape:h.shape,texShape:h.texData.texShape,isUniform:!1,isPacked:h.texData.isPacked,flatOffset:null},k=d.makeShader(g,_,u),y=(0,m.createFragmentShader)(l.gl,k),x=l.createProgram(y);return(0,r.env)().get("ENGINE_COMPILE_ONLY")?{program:u,fragmentShader:y,source:k,webGLProgram:x,inShapeInfos:v,outShapeInfo:_,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(l.buildVao(x),Object.assign({program:u,fragmentShader:y,source:k,webGLProgram:x,inShapeInfos:v,outShapeInfo:_},i(l,u,x)))}function i(l,u,p){const h=[],g=[];let v,_,k,y=null,x=null;x=l.getUniformLocation(p,"NAN",!1),(0,r.env)().getNumber("WEBGL_VERSION")===1&&(y=l.getUniformLocation(p,"INFINITY",!1));const b=!1;for(const C of u.variableNames){const w={name:C,uniform:l.getUniformLocation(p,C,b),offset:l.getUniformLocation(p,`offset${C}`,b)};u.enableShapeUniforms&&(w.shape=l.getUniformLocation(p,`${C}Shape`,b),w.texShape=l.getUniformLocation(p,`${C}TexShape`,b)),h.push(w)}if(u.enableShapeUniforms&&(v=l.getUniformLocation(p,"outShape",b),k=l.getUniformLocation(p,"outShapeStrides",b),_=l.getUniformLocation(p,"outTexShape",b)),u.customUniforms)for(const C of u.customUniforms)g.push(l.getUniformLocation(p,C.name,b));return{variablesLocations:h,customUniformLocations:g,infLoc:y,nanLoc:x,outShapeLocation:v,outShapeStridesLocation:k,outTexShapeLocation:_}}function o(l,u){if(l.length!==u.length)throw Error(`Binary was compiled with ${l.length} inputs, but was executed with ${u.length} inputs`);l.forEach((p,h)=>{const g=p.logicalShape,v=u[h],_=v.shape;if(!r.util.arraysEqual(g,_))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${g} and ${_} must match`);if(p.isUniform&&v.isUniform)return;const k=p.texShape,y=v.isUniform?null:v.texData.texShape;if(!r.util.arraysEqual(k,y))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${k} and ${y} must match`)})}function n(l,u,p,h,g){u.program.enableShapeUniforms||(o(u.inShapeInfos,p),o([u.outShapeInfo],[h]));const v=h.texData.texture,_=h.texData.texShape;h.texData.isPacked?l.setOutputPackedMatrixTexture(v.texture,_[0],_[1]):l.setOutputMatrixTexture(v.texture,_[0],_[1]),l.setProgram(u.webGLProgram),l.bindVertexArray(u.webGLProgram.vao),(0,r.env)().getNumber("WEBGL_VERSION")===1&&u.infLoc!==null&&l.gl.uniform1f(u.infLoc,1/0),u.nanLoc!==null&&l.gl.uniform1f(u.nanLoc,NaN);for(let y=0;y<p.length;++y){const x=p[y],{uniform:b,offset:C,shape:w,texShape:N}=u.variablesLocations[y];if(w){const{uniformShape:T}=d.getUniformInfoFromShape(u.program.packedInputs,x.shape,x.texData.texShape);switch(T.length){case 1:l.gl.uniform1iv(w,new Int32Array(T));break;case 2:l.gl.uniform2iv(w,new Int32Array(T));break;case 3:l.gl.uniform3iv(w,new Int32Array(T));break;case 4:l.gl.uniform4iv(w,new Int32Array(T));break;default:break}}if(N&&l.gl.uniform2i(N,x.texData.texShape[0],x.texData.texShape[1]),b!=null){if(x.isUniform){if(r.util.sizeFromShape(x.shape)<2)l.gl.uniform1f(b,x.uniformValues[0]);else{let T=x.uniformValues;T instanceof Float32Array||(T=new Float32Array(T)),l.gl.uniform1fv(b,T)}continue}x.texData.slice!=null&&C!=null&&l.gl.uniform1i(C,x.texData.slice.flatOffset),l.setInputMatrixTexture(x.texData.texture.texture,b,y)}}const k=u.outShapeLocation;if(k)switch(h.shape.length){case 1:l.gl.uniform1iv(k,new Int32Array(h.shape));break;case 2:l.gl.uniform2iv(k,new Int32Array(h.shape));break;case 3:l.gl.uniform3iv(k,new Int32Array(h.shape));break;case 4:l.gl.uniform4iv(k,new Int32Array(h.shape));break;default:break}if(u.outShapeStridesLocation){const y=r.util.computeStrides(h.shape);switch(h.shape.length){case 2:l.gl.uniform1iv(u.outShapeStridesLocation,new Int32Array(y));break;case 3:l.gl.uniform2iv(u.outShapeStridesLocation,new Int32Array(y));break;case 4:l.gl.uniform3iv(u.outShapeStridesLocation,new Int32Array(y));break;default:break}}if(u.outTexShapeLocation&&l.gl.uniform2i(u.outTexShapeLocation,h.texData.texShape[0],h.texData.texShape[1]),u.program.customUniforms&&g)for(let y=0;y<u.program.customUniforms.length;++y){const x=u.program.customUniforms[y],b=u.customUniformLocations[y],C=g[y];if(x.type==="float")l.gl.uniform1fv(b,C);else if(x.type==="vec2")l.gl.uniform2fv(b,C);else if(x.type==="vec3")l.gl.uniform3fv(b,C);else if(x.type==="vec4")l.gl.uniform4fv(b,C);else if(x.type==="int")l.gl.uniform1iv(b,C);else if(x.type==="ivec2")l.gl.uniform2iv(b,C);else if(x.type==="ivec3")l.gl.uniform3iv(b,C);else if(x.type==="ivec4")l.gl.uniform4iv(b,C);else throw Error(`uniform type ${x.type} is not supported yet.`)}l.executeProgram()}function c(l,u,p){let h="";u.concat(p).forEach(_=>{const k=_.texData!=null&&_.texData.slice!=null&&_.texData.slice.flatOffset>0;if(l.enableShapeUniforms&&!_.isUniform){const y=_.texData.texShape,{useSqueezeShape:x,uniformShape:b,keptDims:C}=d.getUniformInfoFromShape(l.packedInputs,_.shape,y);let w="",N="",T="";if(b.length===1&&l.packedInputs){const $=[Math.ceil(y[0]/2),Math.ceil(y[1]/2)];w=`${$[0]>1}_${$[1]>1}`}else if(b.length===2&&!l.packedInputs)N=`${b[0]>1}_${b[1]>1}`;else if(b.length>2&&!l.packedInputs){const $=r.util.computeStrides(b);T=`${$[0]===y[1]}_${$[$.length-1]===y[1]}`}const F=_.shape.length,S=b.length===2&&r.util.arraysEqual(_.shape,y),I=r.util.sizeFromShape(_.shape)===1,j=r.backend_util.getBroadcastDims(_.shape,p.shape),D=!l.packedInputs&&F===p.shape.length&&r.util.arraysEqual(y,p.texData.texShape),O=l.packedInputs||b.length>2?"":`${y[0]>1}_${y[1]>1}`;h+=`${F}_${D}_${x?C:""}_${b.length}_${I}_${j}_${S}_${w}_${N}_${T}_${O}_${k}`}else{const y=_.isUniform?"uniform":_.texData.texShape;h+=`${_.shape}_${y}_${k}`}});const g=l.userCode;let v=l.constructor.name;return v+="_"+h+"_"+g+`${(0,r.env)().getNumber("WEBGL_VERSION")}`,v}function a(l){return(0,r.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&l<=4}},{"@tensorflow/tfjs-core":"fqGP4","./shader_compiler":"2GLDN","./webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2GLDN":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"makeShader",()=>i),t.export(s,"getCoordsDataType",()=>ee),t.export(s,"getUniformInfoFromShape",()=>ne),t.export(s,"squeezeInputInfo",()=>se);var r=e("@tensorflow/tfjs-core"),d=e("./glsl_version"),m=e("./shader_compiler_util");const{getBroadcastDims:f}=r.backend_util;function i(U,Y,J){const q=[];if(U.forEach(pe=>{const me=r.util.sizeFromShape(pe.shapeInfo.logicalShape);if(pe.shapeInfo.isUniform?q.push(`uniform float ${pe.name}${me>1?`[${me}]`:""};`):(q.push(`uniform sampler2D ${pe.name};`),q.push(`uniform int offset${pe.name};`)),J.enableShapeUniforms){const{uniformShape:he}=ne(J.packedInputs,pe.shapeInfo.logicalShape,pe.shapeInfo.texShape);switch(he.length){case 1:q.push(`uniform int ${pe.name}Shape;`);break;case 2:q.push(`uniform ivec2 ${pe.name}Shape;`);break;case 3:q.push(`uniform ivec3 ${pe.name}Shape;`);break;case 4:q.push(`uniform ivec4 ${pe.name}Shape;`);break;default:break}q.push(`uniform ivec2 ${pe.name}TexShape;`)}}),J.enableShapeUniforms){switch(Y.logicalShape.length){case 1:q.push("uniform int outShape;");break;case 2:q.push("uniform ivec2 outShape;"),q.push("uniform int outShapeStrides;");break;case 3:q.push("uniform ivec3 outShape;"),q.push("uniform ivec2 outShapeStrides;");break;case 4:q.push("uniform ivec4 outShape;"),q.push("uniform ivec3 outShapeStrides;");break;default:break}q.push("uniform ivec2 outTexShape;")}J.customUniforms&&J.customUniforms.forEach(pe=>{q.push(`uniform ${pe.type} ${pe.name}${pe.arrayIndex?`[${pe.arrayIndex}]`:""};`)});const ae=q.join(`
`),ie=U.map(pe=>c(pe,Y,J.packedInputs,J.enableShapeUniforms)).join(`
`),le=Y.texShape,ue=(0,d.getGlslDifferences)(),B=u(ue);let re,oe,de=g(ue);return Y.isPacked?(re=a(Y.logicalShape,le,J.enableShapeUniforms),oe=h(ue)):(re=l(Y.logicalShape,le,J.enableShapeUniforms),oe=p(ue)),J.packedInputs&&(de+=y),[de,B,oe,ae,re,ie,J.userCode].join(`
`)}function o(U,Y=!1){const J=U.shapeInfo.logicalShape;switch(J.length){case 0:return P(U,Y);case 1:return A(U,Y);case 2:return G(U,Y);case 3:return M(U,Y);case 4:return K(U,Y);case 5:return W(U);case 6:return H(U);default:throw new Error(`${J.length}-D input sampling is not yet supported`)}}function n(U,Y){switch(U.shapeInfo.logicalShape.length){case 0:return $(U);case 1:return R(U,Y);case 2:return z(U,Y);case 3:return L(U,Y);default:return V(U,Y)}}function c(U,Y,J=!1,q){let ae="";J?ae+=n(U,q):ae+=o(U,q);const ie=U.shapeInfo.logicalShape,le=Y.logicalShape;return ie.length<=le.length&&(J?ae+=Q(U,Y):ae+=te(U,Y)),ae}function a(U,Y,J){switch(U.length){case 0:return x();case 1:return b(U,Y,J);case 2:return j(U,Y,J);case 3:return w(U,Y,J);default:return T(U,Y,J)}}function l(U,Y,J){switch(U.length){case 0:return x();case 1:return C(U,Y,J);case 2:return D(U,Y,J);case 3:return N(U,Y,J);case 4:return F(U,Y,J);case 5:return S(U,Y);case 6:return I(U,Y);default:throw new Error(`${U.length}-D output sampling is not yet supported`)}}function u(U){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${U.texture2D}(textureSampler, uv).r;
    }
  `}function p(U){return`
    void setOutput(float val) {
      ${U.output} = vec4(val, 0, 0, 0);
    }
  `}function h(U){return`
    void setOutput(vec4 val) {
      ${U.output} = val;
    }
  `}function g(U){return`${U.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${U.varyingFs} vec2 resultUV;
    ${U.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${U.defineSpecialNaN}
    ${U.defineSpecialInf}
    ${U.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${v}
    ${_}
    ${k}
  `}const v=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,_=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,k=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,y=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function x(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function b(U,Y,J){const q=[Math.ceil(Y[0]/2),Math.ceil(Y[1]/2)];return q[0]===1?J?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${q[1]}.0);
      }
    `:q[1]===1?J?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${q[0]}.0);
      }
    `:J?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${q[0]}, ${q[1]}));
      return 2 * (resTexRC.x * ${q[1]} + resTexRC.y);
    }
  `}function C(U,Y,J){return Y[0]===1?J?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${Y[1]}.0);
      }
    `:Y[1]===1?J?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${Y[0]}.0);
      }
    `:J?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${Y[0]}, ${Y[1]}));
      return resTexRC.x * ${Y[1]} + resTexRC.y;
    }
  `}function w(U,Y,J){if(J)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const q=[Math.ceil(Y[0]/2),Math.ceil(Y[1]/2)],ae=Math.ceil(U[2]/2),ie=ae*Math.ceil(U[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${q[0]}, ${q[1]}));
      int index = resTexRC.x * ${q[1]} + resTexRC.y;

      int b = index / ${ie};
      index -= b * ${ie};

      int r = 2 * (index / ${ae});
      int c = imod(index, ${ae}) * 2;

      return ivec3(b, r, c);
    }
  `}function N(U,Y,J){if(J)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${m.getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],U)}
    return ivec3(r, c, d);
  }
`;const q=m.getLogicalCoordinatesFromFlatIndex(["r","c","d"],U);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${Y[0]}, ${Y[1]}));
      int index = resTexRC.x * ${Y[1]} + resTexRC.y;
      ${q}
      return ivec3(r, c, d);
    }
  `}function T(U,Y,J){if(J)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const q=[Math.ceil(Y[0]/2),Math.ceil(Y[1]/2)],ae=Math.ceil(U[U.length-1]/2),ie=ae*Math.ceil(U[U.length-2]/2);let le=ie,ue="",B="b, r, c";for(let re=2;re<U.length-1;re++)le*=U[U.length-re-1],ue=`
      int b${re} = index / ${le};
      index -= b${re} * ${le};
    `+ue,B=`b${re}, `+B;return`
    ivec${U.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${q[0]}, ${q[1]}));
      int index = resTexRC.x * ${q[1]} + resTexRC.y;

      ${ue}

      int b = index / ${ie};
      index -= b * ${ie};

      int r = 2 * (index / ${ae});
      int c = imod(index, ${ae}) * 2;

      return ivec${U.length}(${B});
    }
  `}function F(U,Y,J){if(J)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${m.getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d","d2"],U)}
      return ivec4(r, c, d, d2);
    }
  `;const q=m.getLogicalCoordinatesFromFlatIndex(["r","c","d","d2"],U);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${Y[0]}, ${Y[1]}));
      int index = resTexRC.x * ${Y[1]} + resTexRC.y;
      ${q}
      return ivec4(r, c, d, d2);
    }
  `}function S(U,Y){const J=m.getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3"],U);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${Y[0]},
                             ${Y[1]}));

      int index = resTexRC.x * ${Y[1]} + resTexRC.y;

      ${J}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function I(U,Y){const J=m.getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3","d4"],U);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${Y[0]}, ${Y[1]}));
      int index = resTexRC.x * ${Y[1]} + resTexRC.y;

      ${J}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function j(U,Y,J){const q=[Math.ceil(Y[0]/2),Math.ceil(Y[1]/2)];if(r.util.arraysEqual(U,Y))return J?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${q[0]}, ${q[1]}));
      }
    `;const ae=Math.ceil(U[1]/2);return J?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${q[0]}, ${q[1]}));

      int index = resTexRC.x * ${q[1]} + resTexRC.y;
      int r = 2 * (index / ${ae});
      int c = imod(index, ${ae}) * 2;

      return ivec2(r, c);
    }
  `}function D(U,Y,J){return r.util.arraysEqual(U,Y)?J?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${Y[0]}, ${Y[1]}));
      }
    `:U[1]===1?J?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${Y[0]}, ${Y[1]}));
        int index = resTexRC.x * ${Y[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:U[0]===1?J?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${Y[0]}, ${Y[1]}));
        int index = resTexRC.x * ${Y[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:J?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${Y[0]}, ${Y[1]}));
      int index = resTexRC.x * ${Y[1]} + resTexRC.y;
      int r = index / ${U[1]};
      int c = index - r * ${U[1]};
      return ivec2(r, c);
    }
  `}function O(U){return`offset${U}`}function $(U){const Y=U.name,J="get"+Y.charAt(0).toUpperCase()+Y.slice(1),q=(0,d.getGlslDifferences)();return`
    vec4 ${J}() {
      return ${q.texture2D}(${Y}, halfCR);
    }
  `}function P(U,Y){const J=U.name,q="get"+J.charAt(0).toUpperCase()+J.slice(1);if(U.shapeInfo.isUniform)return`float ${q}() {return ${J};}`;const[ae,ie]=U.shapeInfo.texShape;if(ae===1&&ie===1)return`
      float ${q}() {
        return sampleTexture(${J}, halfCR);
      }
    `;const le=O(J);if(Y)return`
    float ${q}() {
      vec2 uv = uvFromFlat(${J}TexShape[0], ${J}TexShape[1], ${le});
      return sampleTexture(${J}, uv);
    }
  `;const[ue,B]=U.shapeInfo.texShape;return`
    float ${q}() {
      vec2 uv = uvFromFlat(${ue}, ${B}, ${le});
      return sampleTexture(${J}, uv);
    }
  `}function R(U,Y){const J=U.name,q="get"+J.charAt(0).toUpperCase()+J.slice(1),ae=U.shapeInfo.texShape,ie=(0,d.getGlslDifferences)();if(Y)return`
    vec4 ${q}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${J}TexShape[0]) / 2.0), ceil(float(${J}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${ie.texture2D}(${J}, uv);
    }
  `;const le=[Math.ceil(ae[0]/2),Math.ceil(ae[1]/2)];return`
    vec4 ${q}(int index) {
      vec2 uv = packedUVfrom1D(
        ${le[0]}, ${le[1]}, index);
      return ${ie.texture2D}(${J}, uv);
    }
  `}function A(U,Y){const J=U.name,q="get"+J.charAt(0).toUpperCase()+J.slice(1);if(U.shapeInfo.isUniform)return`
      float ${q}(int index) {
        ${Z(U)}
      }
    `;const ae=U.shapeInfo.texShape,ie=ae[0],le=ae[1];if(le===1&&ie===1)return`
      float ${q}(int index) {
        return sampleTexture(${J}, halfCR);
      }
    `;const ue=O(J);return le===1?Y?`
      float ${q}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${ue}) + 0.5) / float(${J}TexShape[0]));
        return sampleTexture(${J}, uv);
      }
    `:`
      float ${q}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${ue}) + 0.5) / ${ie}.0);
        return sampleTexture(${J}, uv);
      }
    `:ie===1?Y?`
      float ${q}(int index) {
        vec2 uv = vec2((float(index + ${ue}) + 0.5) / float(${J}TexShape[1]), 0.5);
        return sampleTexture(${J}, uv);
      }
    `:`
      float ${q}(int index) {
        vec2 uv = vec2((float(index + ${ue}) + 0.5) / ${le}.0, 0.5);
        return sampleTexture(${J}, uv);
      }
    `:Y?`
    float ${q}(int index) {
      vec2 uv = uvFromFlat(${J}TexShape[0], ${J}TexShape[1], index + ${ue});
      return sampleTexture(${J}, uv);
    }
  `:`
    float ${q}(int index) {
      vec2 uv = uvFromFlat(${ie}, ${le}, index + ${ue});
      return sampleTexture(${J}, uv);
    }
  `}function z(U,Y){const J=U.shapeInfo.logicalShape,q=U.name,ae="get"+q.charAt(0).toUpperCase()+q.slice(1),ie=U.shapeInfo.texShape,le=ie[0],ue=ie[1],B=(0,d.getGlslDifferences)();if(ie!=null&&r.util.arraysEqual(J,ie))return Y?`
      vec4 ${ae}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${q}TexShape[1], ${q}TexShape[0]);

        return ${B.texture2D}(${q}, uv);
      }
    `:`
      vec4 ${ae}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${ue}.0, ${le}.0);

        return ${B.texture2D}(${q}, uv);
      }
    `;if(Y)return`
    vec4 ${ae}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${q}TexShape[0]) / 2.0), ceil(float(${q}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${q}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${B.texture2D}(${q}, uv);
    }
  `;const re=[Math.ceil(ie[0]/2),Math.ceil(ie[1]/2)],oe=Math.ceil(J[1]/2);return`
    vec4 ${ae}(int row, int col) {
      vec2 uv = packedUVfrom2D(${oe}, ${re[0]}, ${re[1]}, row, col);
      return ${B.texture2D}(${q}, uv);
    }
  `}function G(U,Y){const J=U.shapeInfo.logicalShape,q=U.name,ae="get"+q.charAt(0).toUpperCase()+q.slice(1),ie=U.shapeInfo.texShape;if(ie!=null&&r.util.arraysEqual(J,ie)){if(Y)return`
      float ${ae}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${q}TexShape[1], ${q}TexShape[0]);
        return sampleTexture(${q}, uv);
      }
    `;const fe=ie[0],pe=ie[1];return`
    float ${ae}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${pe}.0, ${fe}.0);
      return sampleTexture(${q}, uv);
    }
  `}const{newShape:le,keptDims:ue}=r.util.squeezeShape(J),B=le;if(B.length<J.length){const fe=se(U,B),pe=["row","col"];return`
      ${o(fe,Y)}
      float ${ae}(int row, int col) {
        return ${ae}(${X(pe,ue)});
      }
    `}if(U.shapeInfo.isUniform)return`
      float ${ae}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${J[1]}, 1)));
        ${Z(U)}
      }
    `;const re=ie[0],oe=ie[1],de=O(q);return oe===1?Y?`
      float ${ae}(int row, int col) {
        float index = dot(vec3(row, col, ${de}), vec3(${q}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${q}TexShape[0]));
        return sampleTexture(${q}, uv);
      }
    `:`
    float ${ae}(int row, int col) {
      float index = dot(vec3(row, col, ${de}), vec3(${J[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${re}.0);
      return sampleTexture(${q}, uv);
    }
  `:re===1?Y?`
      float ${ae}(int row, int col) {
        float index = dot(vec3(row, col, ${de}), vec3(${q}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${q}TexShape[1]), 0.5);
        return sampleTexture(${q}, uv);
      }
    `:`
    float ${ae}(int row, int col) {
      float index = dot(vec3(row, col, ${de}), vec3(${J[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${oe}.0, 0.5);
      return sampleTexture(${q}, uv);
    }
  `:Y?`
      float ${ae}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${q}Shape[1] + col + ${de};
        vec2 uv = uvFromFlat(${q}TexShape[0], ${q}TexShape[1], index);
        return sampleTexture(${q}, uv);
      }
    `:`
  float ${ae}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${J[1]} + col + ${de};
    vec2 uv = uvFromFlat(${re}, ${oe}, index);
    return sampleTexture(${q}, uv);
  }
`}function L(U,Y){const J=U.shapeInfo.logicalShape,q=U.name,ae="get"+q.charAt(0).toUpperCase()+q.slice(1),ie=U.shapeInfo.texShape,le=[Math.ceil(ie[0]/2),Math.ceil(ie[1]/2)];if(J[0]===1){const fe=J.slice(1),pe=[1,2],me=se(U,fe),he=["b","row","col"];return`
        ${n(me,Y)}
        vec4 ${ae}(int b, int row, int col) {
          return ${ae}(${X(he,pe)});
        }
      `}const ue=(0,d.getGlslDifferences)();if(Y)return`
    vec4 ${ae}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${q}TexShape[0]) / 2.0), ceil(float(${q}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${q}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${q}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${ue.texture2D}(${q}, uv);
    }
  `;const B=le[0],re=le[1],oe=Math.ceil(J[2]/2),de=oe*Math.ceil(J[1]/2);return`
    vec4 ${ae}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${B}, ${re}, ${de}, ${oe}, b, row, col);
      return ${ue.texture2D}(${q}, uv);
    }
  `}function M(U,Y){const J=U.shapeInfo.logicalShape,q=U.name,ae="get"+q.charAt(0).toUpperCase()+q.slice(1),ie=J[1]*J[2],le=J[2],{newShape:ue,keptDims:B}=r.util.squeezeShape(J),re=ue;if(re.length<J.length){const he=se(U,re),ge=["row","col","depth"];return`
        ${o(he,Y)}
        float ${ae}(int row, int col, int depth) {
          return ${ae}(${X(ge,B)});
        }
      `}if(U.shapeInfo.isUniform)return`
      float ${ae}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${ie}, ${le}, 1)));
        ${Z(U)}
      }
    `;const oe=U.shapeInfo.texShape,de=oe[0],fe=oe[1],pe=U.shapeInfo.flatOffset;if(fe===ie&&pe==null)return Y?`
      float ${ae}(int row, int col, int depth) {
        int stride1 = ${q}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${q}TexShape[1], ${q}TexShape[0]);
        return sampleTexture(${q}, uv);
      }
    `:`
        float ${ae}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${le}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${fe}.0, ${de}.0);
          return sampleTexture(${q}, uv);
        }
      `;if(fe===le&&pe==null)return Y?`
      float ${ae}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${q}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${q}TexShape[1], ${q}TexShape[0]);
        return sampleTexture(${q}, uv);
      }
    `:`
    float ${ae}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${J[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${fe}.0, ${de}.0);
      return sampleTexture(${q}, uv);
    }
  `;const me=O(q);return Y?`
    float ${ae}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${q}Shape[1] * ${q}Shape[2];
      int stride1 = ${q}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${me};
      vec2 uv = uvFromFlat(${q}TexShape[0], ${q}TexShape[1], index);
      return sampleTexture(${q}, uv);
    }
    `:`
      float ${ae}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${ie} + col * ${le} + depth + ${me};
        vec2 uv = uvFromFlat(${de}, ${fe}, index);
        return sampleTexture(${q}, uv);
      }
  `}function V(U,Y){const J=U.name,q="get"+J.charAt(0).toUpperCase()+J.slice(1),ae=(0,d.getGlslDifferences)();if(Y)return`
    vec4 ${q}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${J}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${J}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${J}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${J}TexShape[0]) / 2.0), ceil(float(${J}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${ae.texture2D}(${J}, uv);
    }
  `;const ie=U.shapeInfo.logicalShape,le=ie.length,ue=U.shapeInfo.texShape,B=[Math.ceil(ue[0]/2),Math.ceil(ue[1]/2)],re=B[0],oe=B[1],de=Math.ceil(ie[le-1]/2);let fe=de*Math.ceil(ie[le-2]/2),pe="int b, int row, int col",me=`b * ${fe} + (row / 2) * ${de} + (col / 2)`;for(let he=2;he<le-1;he++)pe=`int b${he}, `+pe,fe*=ie[le-he-1],me=`b${he} * ${fe} + `+me;return`
    vec4 ${q}(${pe}) {
      int index = ${me};
      int texR = index / ${oe};
      int texC = index - texR * ${oe};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${oe}, ${re});
      return ${ae.texture2D}(${J}, uv);
    }
  `}function K(U,Y){const J=U.shapeInfo.logicalShape,q=U.name,ae="get"+q.charAt(0).toUpperCase()+q.slice(1),ie=J[3],le=J[2]*ie,ue=J[1]*le,{newShape:B,keptDims:re}=r.util.squeezeShape(J);if(B.length<J.length){const ke=se(U,B),_e=["row","col","depth","depth2"];return`
      ${o(ke,Y)}
      float ${ae}(int row, int col, int depth, int depth2) {
        return ${ae}(${X(_e,re)});
      }
    `}if(U.shapeInfo.isUniform)return`
      float ${ae}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${ue}, ${le}, ${ie}, 1)));
        ${Z(U)}
      }
    `;const oe=U.shapeInfo.flatOffset,de=U.shapeInfo.texShape,fe=de[0],pe=de[1],me=`int stride2 = ${q}Shape[3];`,he=`int stride1 = ${q}Shape[2] * stride2;`,ge=`int stride0 = ${q}Shape[1] * stride1;`;if(pe===ue&&oe==null)return Y?`
      float ${ae}(int row, int col, int depth, int depth2) {
        ${me}
        ${he}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${q}TexShape[1], ${q}TexShape[0]);
        return sampleTexture(${q}, uv);
      }
    `:`
      float ${ae}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${le}, ${ie}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${pe}.0, ${fe}.0);
        return sampleTexture(${q}, uv);
      }
    `;if(pe===ie&&oe==null)return Y?`
      float ${ae}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${q}Shape[1] * ${q}Shape[2], ${q}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${q}TexShape[1], ${q}TexShape[0]);
        return sampleTexture(${q}, uv);
      }
    `:`
      float ${ae}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${J[1]*J[2]}, ${J[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${pe}.0, ${fe}.0);
        return sampleTexture(${q}, uv);
      }
    `;const ve=O(q);return Y?`
    float ${ae}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${me}
      ${he}
      ${ge}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${q}TexShape[0], ${q}TexShape[1], index + ${ve});
      return sampleTexture(${q}, uv);
    }
  `:`
    float ${ae}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${ue} + col * ${le} +
          depth * ${ie} + depth2;
      vec2 uv = uvFromFlat(${fe}, ${pe}, index + ${ve});
      return sampleTexture(${q}, uv);
    }
  `}function W(U){const Y=U.shapeInfo.logicalShape,J=U.name,q="get"+J.charAt(0).toUpperCase()+J.slice(1),ae=Y[4],ie=Y[3]*ae,le=Y[2]*ie,ue=Y[1]*le,{newShape:B,keptDims:re}=r.util.squeezeShape(Y);if(B.length<Y.length){const he=se(U,B),ge=["row","col","depth","depth2","depth3"];return`
      ${o(he)}
      float ${q}(int row, int col, int depth, int depth2, int depth3) {
        return ${q}(${X(ge,re)});
      }
    `}if(U.shapeInfo.isUniform)return`
      float ${q}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${ue}, ${le}, ${ie}, ${ae})) +
          depth3;
        ${Z(U)}
      }
    `;const oe=U.shapeInfo.flatOffset,de=U.shapeInfo.texShape,fe=de[0],pe=de[1];if(pe===ue&&oe==null)return`
      float ${q}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${le}, ${ie}, ${ae}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${pe}.0, ${fe}.0);
        return sampleTexture(${J}, uv);
      }
    `;if(pe===ae&&oe==null)return`
      float ${q}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${Y[1]*Y[2]*Y[3]},
               ${Y[2]*Y[3]}, ${Y[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${pe}.0, ${fe}.0);
        return sampleTexture(${J}, uv);
      }
    `;const me=O(J);return`
    float ${q}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${ue} + col * ${le} + depth * ${ie} +
          depth2 * ${ae} + depth3 + ${me};
      vec2 uv = uvFromFlat(${fe}, ${pe}, index);
      return sampleTexture(${J}, uv);
    }
  `}function H(U){const Y=U.shapeInfo.logicalShape,J=U.name,q="get"+J.charAt(0).toUpperCase()+J.slice(1),{newShape:ae,keptDims:ie}=r.util.squeezeShape(Y);if(ae.length<Y.length){const ge=se(U,ae),ve=["row","col","depth","depth2","depth3","depth4"];return`
      ${o(ge)}
      float ${q}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${q}(${X(ve,ie)});
      }
    `}const le=Y[5],ue=Y[4]*le,B=Y[3]*ue,re=Y[2]*B,oe=Y[1]*re;if(U.shapeInfo.isUniform)return`
      float ${q}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${oe}, ${re}, ${B}, ${ue})) +
          dot(
            vec2(depth3, depth4),
            vec2(${le}, 1)));
        ${Z(U)}
      }
    `;const de=U.shapeInfo.flatOffset,fe=U.shapeInfo.texShape,pe=fe[0],me=fe[1];if(me===oe&&de==null)return`
      float ${q}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${re}, ${B}, ${ue}, ${le})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${me}.0, ${pe}.0);
        return sampleTexture(${J}, uv);
      }
    `;if(me===le&&de==null)return`
      float ${q}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${Y[1]*Y[2]*Y[3]*Y[4]},
               ${Y[2]*Y[3]*Y[4]},
               ${Y[3]*Y[4]},
               ${Y[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${me}.0, ${pe}.0);
        return sampleTexture(${J}, uv);
      }
    `;const he=O(J);return`
    float ${q}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${oe} + col * ${re} + depth * ${B} +
          depth2 * ${ue} + depth3 * ${le} + depth4 + ${he};
      vec2 uv = uvFromFlat(${pe}, ${me}, index);
      return sampleTexture(${J}, uv);
    }
  `}function Z(U){const Y=U.name,J=r.util.sizeFromShape(U.shapeInfo.logicalShape);return J<2?`return ${Y};`:`
    for (int i = 0; i < ${J}; i++) {
      if (i == index) {
        return ${Y}[i];
      }
    }
  `}function Q(U,Y){const J=U.name,q=J.charAt(0).toUpperCase()+J.slice(1),ae="get"+q+"AtOutCoords",ie=U.shapeInfo.logicalShape.length,le=Y.logicalShape.length,ue=f(U.shapeInfo.logicalShape,Y.logicalShape),B=ee(le),re=le-ie;let oe;const de=["x","y","z","w","u","v"];ie===0?oe="":le<2&&ue.length>=1?oe="coords = 0;":oe=ue.map(ke=>`coords.${de[ke+re]} = 0;`).join(`
`);let fe="";le<2&&ie>0?fe="coords":fe=U.shapeInfo.logicalShape.map((ke,_e)=>`coords.${de[_e+re]}`).join(", ");let pe="return outputValue;";const he=r.util.sizeFromShape(U.shapeInfo.logicalShape)===1,ve=r.util.sizeFromShape(Y.logicalShape)===1;if(ie===1&&!he&&!ve)pe=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(he&&!ve)le===1?pe=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:pe=`
        return vec4(outputValue.x);
      `;else if(ue.length){const ke=ie-2,_e=ie-1;ue.indexOf(ke)>-1&&ue.indexOf(_e)>-1?pe="return vec4(outputValue.x);":ue.indexOf(ke)>-1?pe="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":ue.indexOf(_e)>-1&&(pe="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${ae}() {
      ${B} coords = getOutputCoords();
      ${oe}
      vec4 outputValue = get${q}(${fe});
      ${pe}
    }
  `}function te(U,Y){const J=U.name,q=J.charAt(0).toUpperCase()+J.slice(1),ae="get"+q+"AtOutCoords",ie=Y.texShape,le=U.shapeInfo.texShape,ue=U.shapeInfo.logicalShape.length,B=Y.logicalShape.length;if(!U.shapeInfo.isUniform&&ue===B&&U.shapeInfo.flatOffset==null&&r.util.arraysEqual(le,ie))return`
      float ${ae}() {
        return sampleTexture(${J}, resultUV);
      }
    `;const re=ee(B),oe=f(U.shapeInfo.logicalShape,Y.logicalShape),de=B-ue;let fe;const pe=["x","y","z","w","u","v"];ue===0?fe="":B<2&&oe.length>=1?fe="coords = 0;":fe=oe.map(he=>`coords.${pe[he+de]} = 0;`).join(`
`);let me="";return B<2&&ue>0?me="coords":me=U.shapeInfo.logicalShape.map((he,ge)=>`coords.${pe[ge+de]}`).join(", "),`
    float ${ae}() {
      ${re} coords = getOutputCoords();
      ${fe}
      return get${q}(${me});
    }
  `}function ee(U){if(U<=1)return"int";if(U===2)return"ivec2";if(U===3)return"ivec3";if(U===4)return"ivec4";if(U===5)return"ivec5";if(U===6)return"ivec6";throw Error(`GPU for rank ${U} is not yet supported`)}function ne(U,Y,J){const{newShape:q,keptDims:ae}=r.util.squeezeShape(Y),ie=Y.length,le=U&&ie===3&&Y[0]===1,ue=le?Y.slice(1):q,B=!U&&ie>1&&!r.util.arraysEqual(Y,J)&&q.length<ie||le;return{useSqueezeShape:B,uniformShape:B?ue:Y,keptDims:ae}}function se(U,Y){const J=JSON.parse(JSON.stringify(U));return J.shapeInfo.logicalShape=Y,J}function X(U,Y){return Y.map(J=>U[J]).join(", ")}},{"@tensorflow/tfjs-core":"fqGP4","./glsl_version":"cgkMp","./shader_compiler_util":"36SAg","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"36SAg":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getLogicalCoordinatesFromFlatIndex",()=>d),t.export(s,"getOutputLogicalCoordinatesFromFlatIndexByUniform",()=>m),t.export(s,"getLogicalCoordinatesFromFlatIndexByUniform",()=>i),t.export(s,"dotify",()=>n),t.export(s,"getFlatIndexFrom3D",()=>c),t.export(s,"getFlatIndexFrom3DOutput",()=>a),t.export(s,"ENCODE_FLOAT_SNIPPET",()=>l);var r=e("@tensorflow/tfjs-core");function d(u,p,h="index"){const g=r.util.computeStrides(p);return g.map((v,_)=>{const k=`int ${u[_]} = ${h} / ${v}`,y=_===g.length-1?`int ${u[_+1]} = ${h} - ${u[_]} * ${v}`:`index -= ${u[_]} * ${v}`;return`${k}; ${y};`}).join("")}function m(u,p,h="index"){const g=r.util.computeStrides(p);return g.map((v,_)=>{const k=`int ${u[_]} = ${h} / outShapeStrides[${_}]`,y=_===g.length-1?`int ${u[_+1]} = ${h} - ${u[_]} * outShapeStrides[${_}]`:`index -= ${u[_]} * outShapeStrides[${_}]`;return`${k}; ${y};`}).join("")}function f(u,p){const h=u.length,g=u.map(_=>`${p}[${_}]`),v=new Array(h-1);v[h-2]=g[h-1];for(let _=h-3;_>=0;--_)v[_]=`(${v[_+1]} * ${g[_+1]})`;return v}function i(u,p,h="index"){const g=u.map((_,k)=>k),v=f(g,p);return v.map((_,k)=>{const y=`int ${u[k]} = ${h} / ${v[k]}`,x=k===v.length-1?`int ${u[k+1]} = ${h} - ${u[k]} * ${v[k]}`:`index -= ${u[k]} * ${v[k]}`;return`${y}; ${x};`}).join("")}function o(u){return u.length===1?`${u[0]}`:`vec${u.length}(${u.join(",")})`}function n(u,p){if(u.length!==p.length)throw new Error(`Vectors to be dotted must be of the same length -got ${u.length} and ${p.length}`);const h=[],g=Math.floor(u.length/4),v=u.length%4;for(let _=0;_<g;_++){const k=u.slice(_*4,_*4+4),y=p.slice(_*4,_*4+4);h.push(`${o(k)}, ${o(y)}`)}if(v!==0){let _=u.slice(g*4),k=p.slice(g*4);_.length===1&&(_=_.map(y=>`float(${y})`),k=k.map(y=>`float(${y})`)),h.push(`${o(_)}, ${o(k)}`)}return h.map((_,k)=>`dot(${_})`).join("+")}function c(u){const p=r.util.computeStrides(u).map(h=>h.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${p[0]} + coords.y * ${p[1]} + coords.z;
  }
`}function a(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const l=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gJTgY:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DecodeMatrixPackedProgram",()=>i);var r=e("./glsl_version"),d=e("./gpgpu_math"),m=e("./shader_compiler_util"),f=e("./tex_util");class i{constructor(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=f.PackingScheme.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const c=(0,r.getGlslDifferences)();this.outputShape=n,this.enableShapeUniforms=(0,d.useShapeUniforms)(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?m.getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],n):m.getLogicalCoordinatesFromFlatIndex(["r","c","d"],n)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${c.output} = result;
      }
    `}}},{"./glsl_version":"cgkMp","./gpgpu_math":"axk0P","./shader_compiler_util":"36SAg","./tex_util":"6noJs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],SeGsD:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"EncodeFloatProgram",()=>f);var r=e("./glsl_version"),d=e("./shader_compiler_util"),m=e("./tex_util");class f{constructor(o){this.variableNames=["A"],this.outTexUsage=m.TextureUsage.DOWNLOAD;const n=(0,r.getGlslDifferences)();this.outputShape=o,this.userCode=`
      ${d.ENCODE_FLOAT_SNIPPET}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}},{"./glsl_version":"cgkMp","./shader_compiler_util":"36SAg","./tex_util":"6noJs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bLxvY:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"EncodeFloatPackedProgram",()=>f);var r=e("./glsl_version"),d=e("./shader_compiler_util"),m=e("./tex_util");class f{constructor(o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=m.TextureUsage.DOWNLOAD;const n=(0,r.getGlslDifferences)();this.outputShape=o,this.userCode=`
      ${d.ENCODE_FLOAT_SNIPPET}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}},{"./glsl_version":"cgkMp","./shader_compiler_util":"36SAg","./tex_util":"6noJs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3hOmg":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"EncodeMatrixProgram",()=>i);var r=e("./glsl_version"),d=e("./gpgpu_math"),m=e("./shader_compiler_util");const f={R:0,G:1,B:2,A:3};class i{constructor(n,c=!1,a="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const l=(0,r.getGlslDifferences)();this.outputShape=n,this.enableShapeUniforms=(0,d.useShapeUniforms)(this.outputShape.length);let u="result";c&&(u="floor(result * 255. + 0.5)");let p="";for(let h=0;h<a.length;h++){const g=a[h];p+=`
          if(offset == ${h}) {
            result = values[${f[g]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?m.getFlatIndexFrom3DOutput():m.getFlatIndexFrom3D(n)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${a.length});

        flatIndex = idiv(flatIndex, ${a.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${l.texture2D}(A, uv);
          ${p}
        }
        ${l.output} = vec4(${u}, 0., 0., 0.);
      }
    `}}},{"./glsl_version":"cgkMp","./gpgpu_math":"axk0P","./shader_compiler_util":"36SAg","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aeIpP:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"EncodeMatrixPackedProgram",()=>f);var r=e("./glsl_version"),d=e("./gpgpu_math"),m=e("./shader_compiler_util");class f{constructor(o,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const c=(0,r.getGlslDifferences)();this.outputShape=o,this.enableShapeUniforms=(0,d.useShapeUniforms)(this.outputShape.length);let a="",l="result";n&&(l="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let p=0;p<=1;p++){const h=u*2+p;a+=`
          localCoords = coords;
          if(localCoords[2] + ${p} < ${this.enableShapeUniforms?"outShape[2]":`${o[2]}`}) {
          localCoords[2] += ${p};
          if (localCoords[1] + ${u} < ${this.enableShapeUniforms?"outShape[1]":`${o[1]}`}) {
            localCoords[1] += ${u};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${c.texture2D}(A, uv);

            if (offset == 0) {
              result[${h}] = values[0];
            } else if (offset == 1) {
              result[${h}] = values[1];
            } else if (offset == 2) {
              result[${h}] = values[2];
            } else {
              result[${h}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?m.getFlatIndexFrom3DOutput():m.getFlatIndexFrom3D(o)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${c.output} = ${l};
        }
    `}}},{"./glsl_version":"cgkMp","./gpgpu_math":"axk0P","./shader_compiler_util":"36SAg","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dGqnM:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"GPGPUContext",()=>o),t.export(s,"linearSearchLastTrue",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("./canvas_util"),m=e("./gpgpu_util"),f=e("./tex_util"),i=e("./webgl_util");class o{constructor(a){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const l=(0,r.env)().getNumber("WEBGL_VERSION");if(a!=null?(this.gl=a,(0,d.setWebGLContext)(l,a)):this.gl=(0,d.getWebGLContext)(l),a=this.gl,(0,r.env)().getNumber("WEBGL_VERSION")===2){const h=a;this.createVertexArray=()=>i.callAndCheck(h,()=>h.createVertexArray()),this.bindVertexArray=g=>i.callAndCheck(h,()=>h.bindVertexArray(g)),this.deleteVertexArray=g=>i.callAndCheck(h,()=>h.deleteVertexArray(g)),this.getVertexArray=()=>i.callAndCheck(h,()=>h.getParameter(h.VERTEX_ARRAY_BINDING))}else if(a!=null){const h=a.getExtension("OES_vertex_array_object");if(h==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>i.callAndCheck(a,()=>h.createVertexArrayOES()),this.bindVertexArray=g=>i.callAndCheck(a,()=>h.bindVertexArrayOES(g)),this.deleteVertexArray=g=>i.callAndCheck(a,()=>h.deleteVertexArrayOES(g)),this.getVertexArray=()=>i.callAndCheck(a,()=>a.getParameter(h.VERTEX_ARRAY_BINDING_OES))}let u="WEBGL_color_buffer_float";const p="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),(0,r.env)().getNumber("WEBGL_VERSION")===1){const h="OES_texture_float",g="OES_texture_half_float";if(this.textureFloatExtension=i.getExtensionOrThrow(this.gl,h),i.hasExtension(this.gl,g))this.textureHalfFloatExtension=i.getExtensionOrThrow(this.gl,g);else if((0,r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(u),i.hasExtension(this.gl,p))this.colorBufferHalfFloatExtension=i.getExtensionOrThrow(this.gl,p);else if((0,r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(u="EXT_color_buffer_float",i.hasExtension(this.gl,u))this.colorBufferFloatExtension=this.gl.getExtension(u);else if(i.hasExtension(this.gl,p))this.colorBufferHalfFloatExtension=this.gl.getExtension(p);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=m.createVertexBuffer(this.gl),this.indexBuffer=m.createIndexBuffer(this.gl),this.framebuffer=i.createFramebuffer(this.gl),this.textureConfig=f.getTextureConfig(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const a=this.gl;i.callAndCheck(a,()=>a.finish()),i.callAndCheck(a,()=>a.bindFramebuffer(a.FRAMEBUFFER,null)),i.callAndCheck(a,()=>a.deleteFramebuffer(this.framebuffer)),i.callAndCheck(a,()=>a.bindBuffer(a.ARRAY_BUFFER,null)),i.callAndCheck(a,()=>a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,null)),i.callAndCheck(a,()=>a.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(a,l){return this.throwIfDisposed(),m.createFloat32MatrixTexture(this.gl,a,l,this.textureConfig)}createFloat16MatrixTexture(a,l){return this.throwIfDisposed(),m.createFloat16MatrixTexture(this.gl,a,l,this.textureConfig)}createUnsignedBytesMatrixTexture(a,l){return this.throwIfDisposed(),m.createUnsignedBytesMatrixTexture(this.gl,a,l,this.textureConfig)}uploadPixelDataToTexture(a,l){this.throwIfDisposed(),m.uploadPixelDataToTexture(this.gl,a,l)}uploadDenseMatrixToTexture(a,l,u,p){this.throwIfDisposed(),m.uploadDenseMatrixToTexture(this.gl,a,l,u,p,this.textureConfig)}createFloat16PackedMatrixTexture(a,l){return this.throwIfDisposed(),m.createFloat16PackedMatrixTexture(this.gl,a,l,this.textureConfig)}createPackedMatrixTexture(a,l){return this.throwIfDisposed(),m.createPackedMatrixTexture(this.gl,a,l,this.textureConfig)}deleteMatrixTexture(a){this.throwIfDisposed(),this.outputTexture===a&&(i.unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),i.callAndCheck(this.gl,()=>this.gl.deleteTexture(a))}downloadByteEncodedFloatMatrixFromOutputTexture(a,l,u){return this.downloadMatrixDriver(a,()=>m.downloadByteEncodedFloatMatrixFromOutputTexture(this.gl,l,u,this.textureConfig))}downloadPackedMatrixFromBuffer(a,l,u,p,h,g){return m.downloadPackedMatrixFromBuffer(this.gl,a,l,u,p,h,g,this.textureConfig)}downloadFloat32MatrixFromBuffer(a,l){return m.downloadFloat32MatrixFromBuffer(this.gl,a,l)}createBufferFromTexture(a,l,u){this.bindTextureToFrameBuffer(a);const p=m.createBufferFromOutputTexture(this.gl,l,u,this.textureConfig);return this.unbindTextureToFrameBuffer(),p}createAndWaitForFence(){const a=this.createFence(this.gl);return this.pollFence(a)}createFence(a){let l,u;if((0,r.env)().getBool("WEBGL_FENCE_API_ENABLED")){const p=a,h=p.fenceSync(p.SYNC_GPU_COMMANDS_COMPLETE,0);a.flush(),u=()=>{const g=p.clientWaitSync(h,0,0);return g===p.ALREADY_SIGNALED||g===p.CONDITION_SATISFIED},l=h}else(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(l=this.beginQuery(),this.endQuery(),u=()=>this.isQueryAvailable(l,(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):u=()=>!0;return{query:l,isFencePassed:u}}downloadMatrixFromPackedTexture(a,l,u){return this.downloadMatrixDriver(a,()=>m.downloadMatrixFromPackedOutputTexture(this.gl,l,u))}createProgram(a){this.throwIfDisposed();const l=this.gl;this.vertexShader==null&&(this.vertexShader=m.createVertexShader(l));const u=i.createProgram(l);i.callAndCheck(l,()=>l.attachShader(u,this.vertexShader)),i.callAndCheck(l,()=>l.attachShader(u,a)),i.linkProgram(l,u);const p=Object.assign(u,{vao:this.createVertexArray()});return this.debug&&i.validateProgram(l,p),p}buildVao(a){this.setProgram(a),this.bindVertexArray(a.vao);const l=this.gl;i.callAndCheck(l,()=>l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),m.bindVertexProgramAttributeStreams(l,a,this.vertexBuffer)}deleteProgram(a){this.throwIfDisposed(),a===this.program&&(this.program=null),a!=null&&(i.callAndCheck(this.gl,()=>this.gl.deleteProgram(a)),this.deleteVertexArray(a.vao))}setProgram(a){this.throwIfDisposed(),this.program=a,this.program!=null&&this.debug&&i.validateProgram(this.gl,this.program),i.callAndCheck(this.gl,()=>this.gl.useProgram(a))}getUniformLocation(a,l,u=!0){return this.throwIfDisposed(),u?i.getProgramUniformLocationOrThrow(this.gl,a,l):i.getProgramUniformLocation(this.gl,a,l)}getAttributeLocation(a,l){return this.throwIfDisposed(),i.callAndCheck(this.gl,()=>this.gl.getAttribLocation(a,l))}getUniformLocationNoThrow(a,l){return this.throwIfDisposed(),this.gl.getUniformLocation(a,l)}setInputMatrixTexture(a,l,u){this.throwIfDisposed(),this.throwIfNoProgram(),i.bindTextureToProgramUniformSampler(this.gl,a,l,u)}setOutputMatrixTexture(a,l,u){this.setOutputMatrixTextureDriver(a,u,l)}setOutputPackedMatrixTexture(a,l,u){this.throwIfDisposed();const[p,h]=f.getPackedMatrixTextureShapeWidthHeight(l,u);this.setOutputMatrixTextureDriver(a,p,h)}setOutputMatrixWriteRegion(a,l,u,p){this.setOutputMatrixWriteRegionDriver(u,a,p,l)}setOutputPackedMatrixWriteRegion(a,l,u,p){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&i.validateProgram(this.gl,this.program),i.validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const a=this.gl;if(this.debug){const l=this.getVertexArray();console.assert(l===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}i.callAndCheck(a,()=>a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),i.callAndCheck(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=i.getExtensionOrThrow(this.gl,(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if((0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const u=this.gl,p=this.getQueryTimerExtensionWebGL2(),h=u.createQuery();return u.beginQuery(p.TIME_ELAPSED_EXT,h),h}const a=this.getQueryTimerExtensionWebGL1(),l=a.createQueryEXT();return a.beginQueryEXT(a.TIME_ELAPSED_EXT,l),l}endQuery(){if((0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const l=this.gl,u=this.getQueryTimerExtensionWebGL2();l.endQuery(u.TIME_ELAPSED_EXT);return}const a=this.getQueryTimerExtensionWebGL1();a.endQueryEXT(a.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(a){return await r.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(a,(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(a,(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(a,l){if(l===0)return null;if(l===2){const u=this.gl;return u.getQueryParameter(a,u.QUERY_RESULT)/1e6}else{const u=this.getQueryTimerExtensionWebGL1();return u.getQueryObjectEXT(a,u.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(a,l){if(l===0)return!0;if(l===2){const u=this.gl,p=this.getQueryTimerExtensionWebGL2(),h=u.getQueryParameter(a,u.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(p.GPU_DISJOINT_EXT)),h&&!this.disjoint}else{const u=this.getQueryTimerExtensionWebGL1(),p=u.getQueryObjectEXT(a,u.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(u.GPU_DISJOINT_EXT)),p&&!this.disjoint}}pollFence(a){return new Promise(l=>{this.addItemToPoll(()=>a.isFencePassed(),()=>l())})}pollItems(){const a=n(this.itemsToPoll.map(l=>l.isDoneFn));for(let l=0;l<=a;++l){const{resolveFn:u}=this.itemsToPoll[l];u()}this.itemsToPoll=this.itemsToPoll.slice(a+1)}addItemToPoll(a,l){if(this.itemsToPoll.push({isDoneFn:a,resolveFn:l}),this.itemsToPoll.length>1)return;let u;"setTimeoutCustom"in(0,r.env)().platform&&(u=(0,r.env)().platform.setTimeoutCustom.bind((0,r.env)().platform)),r.util.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,u)}bindTextureToFrameBuffer(a){this.throwIfDisposed(),i.bindColorTextureToFramebuffer(this.gl,a,this.framebuffer),this.debug&&i.validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(i.bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&i.validateFramebuffer(this.gl)):i.unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(a,l){this.bindTextureToFrameBuffer(a);const u=l();return this.unbindTextureToFrameBuffer(),u}setOutputMatrixTextureDriver(a,l,u){this.throwIfDisposed();const p=this.gl;i.bindColorTextureToFramebuffer(p,a,this.framebuffer),this.debug&&i.validateFramebuffer(p),this.outputTexture=a,i.callAndCheck(p,()=>p.viewport(0,0,l,u)),i.callAndCheck(p,()=>p.scissor(0,0,l,u))}setOutputMatrixWriteRegionDriver(a,l,u,p){this.throwIfDisposed(),i.callAndCheck(this.gl,()=>this.gl.scissor(a,l,u,p))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function n(c){let a=0;for(;a<c.length&&c[a]();++a);return a-1}},{"@tensorflow/tfjs-core":"fqGP4","./canvas_util":"kUG6y","./gpgpu_util":"2objp","./tex_util":"6noJs","./webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2objp":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"createVertexShader",()=>i),t.export(s,"createVertexBuffer",()=>o),t.export(s,"createIndexBuffer",()=>n),t.export(s,"getInternalFormatForFloat32MatrixTexture",()=>a),t.export(s,"createFloat32MatrixTexture",()=>l),t.export(s,"getInternalFormatForFloat16MatrixTexture",()=>u),t.export(s,"createFloat16MatrixTexture",()=>p),t.export(s,"getInternalFormatForUnsignedBytesMatrixTexture",()=>h),t.export(s,"createUnsignedBytesMatrixTexture",()=>g),t.export(s,"getInternalFormatForPackedMatrixTexture",()=>v),t.export(s,"createPackedMatrixTexture",()=>_),t.export(s,"getInternalFormatForFloat16PackedMatrixTexture",()=>k),t.export(s,"createFloat16PackedMatrixTexture",()=>y),t.export(s,"bindVertexProgramAttributeStreams",()=>x),t.export(s,"uploadDenseMatrixToTexture",()=>b),t.export(s,"uploadPixelDataToTexture",()=>C),t.export(s,"createBufferFromOutputTexture",()=>w),t.export(s,"downloadFloat32MatrixFromBuffer",()=>N),t.export(s,"downloadByteEncodedFloatMatrixFromOutputTexture",()=>T),t.export(s,"downloadPackedMatrixFromBuffer",()=>F),t.export(s,"downloadMatrixFromPackedOutputTexture",()=>S);var r=e("@tensorflow/tfjs-core"),d=e("./glsl_version"),m=e("./tex_util"),f=e("./webgl_util");function i(I){const j=(0,d.getGlslDifferences)(),D=`${j.version}
    precision highp float;
    ${j.attribute} vec3 clipSpacePos;
    ${j.attribute} vec2 uv;
    ${j.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return f.createVertexShader(I,D)}function o(I){const j=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return f.createStaticVertexBuffer(I,j)}function n(I){const j=new Uint16Array([0,1,2,2,1,3]);return f.createStaticIndexBuffer(I,j)}function c(I,j,D,O,$,P){f.validateTextureSize(j,D);const R=f.createTexture(I),A=I.TEXTURE_2D;return f.callAndCheck(I,()=>I.bindTexture(A,R)),f.callAndCheck(I,()=>I.texParameteri(A,I.TEXTURE_WRAP_S,I.CLAMP_TO_EDGE)),f.callAndCheck(I,()=>I.texParameteri(A,I.TEXTURE_WRAP_T,I.CLAMP_TO_EDGE)),f.callAndCheck(I,()=>I.texParameteri(A,I.TEXTURE_MIN_FILTER,I.NEAREST)),f.callAndCheck(I,()=>I.texParameteri(A,I.TEXTURE_MAG_FILTER,I.NEAREST)),(0,r.env)().getNumber("WEBGL_VERSION")===1?f.callAndCheck(I,()=>I.texImage2D(A,0,O,j,D,0,$,P,null)):f.callAndCheck(I,()=>I.texStorage2D(A,1,O,j,D)),f.callAndCheck(I,()=>I.bindTexture(I.TEXTURE_2D,null)),{texture:R,texShape:[D,j]}}function a(I){return I.internalFormatFloat}function l(I,j,D,O){const[$,P]=m.getUnpackedMatrixTextureShapeWidthHeight(j,D);return c(I,$,P,a(O),O.textureFormatFloat,I.FLOAT)}function u(I){return I.internalFormatHalfFloat}function p(I,j,D,O){const[$,P]=m.getUnpackedMatrixTextureShapeWidthHeight(j,D);return c(I,$,P,u(O),O.textureFormatFloat,O.textureTypeHalfFloat)}function h(I){return I.downloadTextureFormat}function g(I,j,D,O){const[$,P]=m.getUnpackedMatrixTextureShapeWidthHeight(j,D);return c(I,$,P,h(O),I.RGBA,I.UNSIGNED_BYTE)}function v(I){return I.internalFormatPackedFloat}function _(I,j,D,O){const[$,P]=m.getPackedMatrixTextureShapeWidthHeight(j,D);return c(I,$,P,v(O),I.RGBA,I.FLOAT)}function k(I){return I.internalFormatPackedHalfFloat}function y(I,j,D,O){const[$,P]=m.getPackedMatrixTextureShapeWidthHeight(j,D);return c(I,$,P,k(O),I.RGBA,O.textureTypeHalfFloat)}function x(I,j,D){const O=0,$=12,P=20;return f.callAndCheck(I,()=>I.bindBuffer(I.ARRAY_BUFFER,D)),f.bindVertexBufferToProgramAttribute(I,j,"clipSpacePos",D,3,P,O)&&f.bindVertexBufferToProgramAttribute(I,j,"uv",D,2,P,$)}function b(I,j,D,O,$,P){f.callAndCheck(I,()=>I.bindTexture(I.TEXTURE_2D,j));let R,A,z;$ instanceof Uint8Array?(R=new Uint8Array(D*O*4),A=I.UNSIGNED_BYTE,z=I.RGBA):(R=new Float32Array(D*O*4),A=I.FLOAT,z=P.internalFormatPackedFloat),R.set($),(0,r.env)().getNumber("WEBGL_VERSION")===2?f.callAndCheck(I,()=>I.texSubImage2D(I.TEXTURE_2D,0,0,0,D,O,I.RGBA,A,R)):f.callAndCheck(I,()=>I.texImage2D(I.TEXTURE_2D,0,z,D,O,0,I.RGBA,A,R)),f.callAndCheck(I,()=>I.bindTexture(I.TEXTURE_2D,null))}function C(I,j,D){f.callAndCheck(I,()=>I.bindTexture(I.TEXTURE_2D,j)),D.data instanceof Uint8Array?(0,r.env)().getNumber("WEBGL_VERSION")===2?f.callAndCheck(I,()=>I.texSubImage2D(I.TEXTURE_2D,0,0,0,D.width,D.height,I.RGBA,I.UNSIGNED_BYTE,D.data)):f.callAndCheck(I,()=>I.texImage2D(I.TEXTURE_2D,0,I.RGBA,D.width,D.height,0,I.RGBA,I.UNSIGNED_BYTE,D.data)):(0,r.env)().getNumber("WEBGL_VERSION")===2?f.callAndCheck(I,()=>I.texSubImage2D(I.TEXTURE_2D,0,0,0,I.RGBA,I.UNSIGNED_BYTE,D)):f.callAndCheck(I,()=>I.texImage2D(I.TEXTURE_2D,0,I.RGBA,I.RGBA,I.UNSIGNED_BYTE,D)),f.callAndCheck(I,()=>I.bindTexture(I.TEXTURE_2D,null))}function w(I,j,D,O){const $=I.createBuffer();f.callAndCheck(I,()=>I.bindBuffer(I.PIXEL_PACK_BUFFER,$));const A=4*4*j*D;return f.callAndCheck(I,()=>I.bufferData(I.PIXEL_PACK_BUFFER,A,I.STREAM_READ)),f.callAndCheck(I,()=>I.readPixels(0,0,D,j,I.RGBA,I.FLOAT,0)),f.callAndCheck(I,()=>I.bindBuffer(I.PIXEL_PACK_BUFFER,null)),$}function N(I,j,D){const O=I,$=new Float32Array(D);return O.bindBuffer(O.PIXEL_PACK_BUFFER,j),O.getBufferSubData(O.PIXEL_PACK_BUFFER,0,$),O.bindBuffer(O.PIXEL_PACK_BUFFER,null),$}function T(I,j,D,O){const[$,P]=m.getUnpackedMatrixTextureShapeWidthHeight(j,D),R=4,A=new Uint8Array(m.getUnpackedArraySizeFromMatrixSize(j*D,R));return f.callAndCheck(I,()=>I.readPixels(0,0,$,P,O.downloadTextureFormat,I.UNSIGNED_BYTE,A)),new Float32Array(A.buffer)}function F(I,j,D,O,$,P,R,A){const z=I,G=new Float32Array(m.getPackedRGBAArraySizeFromMatrixShape(P,R));return z.bindBuffer(z.PIXEL_PACK_BUFFER,j),z.getBufferSubData(z.PIXEL_PACK_BUFFER,0,G),z.bindBuffer(z.PIXEL_PACK_BUFFER,null),G}function S(I,j,D){const O=new Float32Array(j*D*4);return f.callAndCheck(I,()=>I.readPixels(0,0,D,j,I.RGBA,I.FLOAT,O)),O}},{"@tensorflow/tfjs-core":"fqGP4","./glsl_version":"cgkMp","./tex_util":"6noJs","./webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6qOzI":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"addImplCPU",()=>d),t.export(s,"bincountImplCPU",()=>m),t.export(s,"bincountReduceImplCPU",()=>f),t.export(s,"bitwiseAndImplCPU",()=>i),t.export(s,"castImplCPU",()=>o),t.export(s,"ceilImplCPU",()=>n),t.export(s,"concatImplCPU",()=>c),t.export(s,"equalImplCPU",()=>a),t.export(s,"expImplCPU",()=>l),t.export(s,"expm1ImplCPU",()=>u),t.export(s,"floorImplCPU",()=>p),t.export(s,"gatherNdImplCPU",()=>h),t.export(s,"gatherV2ImplCPU",()=>g),t.export(s,"greaterEqualImplCPU",()=>_),t.export(s,"greaterImplCPU",()=>v),t.export(s,"lessEqualImplCPU",()=>y),t.export(s,"lessImplCPU",()=>k),t.export(s,"linSpaceImplCPU",()=>x),t.export(s,"logImplCPU",()=>b),t.export(s,"maxImplCPU",()=>C),t.export(s,"maximumImplCPU",()=>w),t.export(s,"minimumImplCPU",()=>N),t.export(s,"multiplyImplCPU",()=>T),t.export(s,"negImplCPU",()=>F),t.export(s,"notEqualImplCPU",()=>S),t.export(s,"prodImplCPU",()=>I),t.export(s,"raggedGatherImplCPU",()=>j),t.export(s,"raggedRangeImplCPU",()=>D),t.export(s,"raggedTensorToTensorImplCPU",()=>O),t.export(s,"scatterImplCPU",()=>R),t.export(s,"sigmoidImplCPU",()=>A),t.export(s,"simpleAbsImplCPU",()=>z),t.export(s,"sliceImplCPU",()=>G),t.export(s,"sparseFillEmptyRowsImplCPU",()=>L),t.export(s,"sparseReshapeImplCPU",()=>M),t.export(s,"sparseSegmentReductionImplCPU",()=>V),t.export(s,"sqrtImplCPU",()=>K),t.export(s,"staticRegexReplaceImplCPU",()=>W),t.export(s,"stridedSliceImplCPU",()=>H),t.export(s,"stringNGramsImplCPU",()=>Z),t.export(s,"stringSplitImplCPU",()=>Q),t.export(s,"stringToHashBucketFastImplCPU",()=>te),t.export(s,"subImplCPU",()=>ee),t.export(s,"rangeImplCPU",()=>$),t.export(s,"rsqrtImplCPU",()=>P),t.export(s,"tileImplCPU",()=>ne),t.export(s,"topKImplCPU",()=>se),t.export(s,"transposeImplCPU",()=>X),t.export(s,"uniqueImplCPU",()=>U);var r=e("@tensorflow/tfjs-backend-cpu/dist/shared");const{addImpl:d,bincountImpl:m,bincountReduceImpl:f,bitwiseAndImpl:i,castImpl:o,ceilImpl:n,concatImpl:c,equalImpl:a,expImpl:l,expm1Impl:u,floorImpl:p,gatherNdImpl:h,gatherV2Impl:g,greaterImpl:v,greaterEqualImpl:_,lessImpl:k,lessEqualImpl:y,linSpaceImpl:x,logImpl:b,maxImpl:C,maximumImpl:w,minimumImpl:N,multiplyImpl:T,negImpl:F,notEqualImpl:S,prodImpl:I,raggedGatherImpl:j,raggedRangeImpl:D,raggedTensorToTensorImpl:O,rangeImpl:$,rsqrtImpl:P,scatterImpl:R,sigmoidImpl:A,simpleAbsImpl:z,sliceImpl:G,sparseFillEmptyRowsImpl:L,sparseReshapeImpl:M,sparseSegmentReductionImpl:V,sqrtImpl:K,staticRegexReplaceImpl:W,stridedSliceImpl:H,stringNGramsImpl:Z,stringSplitImpl:Q,stringToHashBucketFastImpl:te,subImpl:ee,tileImpl:ne,topKImpl:se,transposeImpl:X,uniqueImpl:U}=r},{"@tensorflow/tfjs-backend-cpu/dist/shared":"2aoP6","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7w4uB":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"PackProgram",()=>f);var r=e("./gpgpu_math"),d=e("./packing_util"),m=e("./shader_compiler");class f{constructor(o){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=o,this.rank=o.length,this.enableShapeUniforms=(0,r.useShapeUniforms)(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=(0,d.getChannels)("rc",this.rank),c=(0,m.getCoordsDataType)(this.rank),a=this.getOutOfBoundsCondition(n),l=this.getSetup(n),u=this.getOutput(n);this.userCode=`
        void main() {
          ${c} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${l}

            setOutput(vec4(${u}));
          }
        }
      `}}getSourceCoordsArr(o){const n=[];for(let c=0;c<=1;c++)for(let a=0;a<=1;a++){let l=`${c===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let u=2;u<this.rank;u++)l=`${o[o.length-1-u]},`+l;n.push(l)}return n}getOutOfBoundsCondition(o){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let c=this.rank-2;c<this.rank;c++)n+=`${o[c]} >= ${this.enableShapeUniforms?`outShape[${c}]`:this.outputShape[c]}`,c<this.rank-1&&(n+="||");return n}getSetup(o){if(this.rank===1)return"";const n=o.slice(-2),c=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${c};
      bool rEdge = rp1 >= ${a};
    `}getOutput(o){const n=this.getSourceCoordsArr(o);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}},{"./gpgpu_math":"axk0P","./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5Yxmz":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"getVecChannels",()=>r),t.export(s,"getChannels",()=>d),t.export(s,"getSourceCoords",()=>m);function r(f,i){return["x","y","z","w","u","v"].slice(0,i).map(o=>`${f}.${o}`)}function d(f,i){return i===1?[f]:r(f,i)}function m(f,i){if(f===1)return"rc";let o="";for(let n=0;n<f;n++)o+=i[n],n<f-1&&(o+=",");return o}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],v57By:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ReshapePackedProgram",()=>m);var r=e("./gpgpu_math"),d=e("./shader_compiler_util");class m{constructor(o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=o,this.enableShapeUniforms=(0,r.useShapeUniforms)(this.outputShape.length);let c="";for(let a=0;a<4;a++){let l="thisRC = rc;";a%2==1&&(l+="thisRC.z += 1;"),a>1&&(l+="thisRC.y += 1;"),c+=`
        ${l}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${f(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?d.getFlatIndexFrom3DOutput():d.getFlatIndexFrom3D(o)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":o[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":o[2]};

        ${c}

        setOutput(result);
      }
    `}}function f(i,o){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${o?d.getLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],"inputShape"):d.getLogicalCoordinatesFromFlatIndex(["r","c","d"],i)}
      return ivec3(r, c, d);
    }
  `}},{"./gpgpu_math":"axk0P","./shader_compiler_util":"36SAg","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dFmnd:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TextureManager",()=>f),t.export(s,"computeBytes",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("./gpgpu_util"),m=e("./tex_util");class f{constructor(p){this.gpgpu=p,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(p,h,g){const v=a(h,g),_=l(p,v,g);_ in this.freeTextures||(this.freeTextures[_]=[]),_ in this.usedTextures||(this.usedTextures[_]=[]);const k=o(p,v,this.gpgpu.gl,this.gpgpu.textureConfig,g);if(this.freeTextures[_].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=k,this.log();const x=this.freeTextures[_].pop();return this.usedTextures[_].push(x),x}let y;return v===m.PhysicalTextureType.PACKED_2X2_FLOAT32?y=this.gpgpu.createPackedMatrixTexture(p[0],p[1]):v===m.PhysicalTextureType.PACKED_2X2_FLOAT16?y=this.gpgpu.createFloat16PackedMatrixTexture(p[0],p[1]):v===m.PhysicalTextureType.UNPACKED_FLOAT32?y=this.gpgpu.createFloat32MatrixTexture(p[0],p[1]):v===m.PhysicalTextureType.UNPACKED_FLOAT16?y=this.gpgpu.createFloat16MatrixTexture(p[0],p[1]):v===m.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&&(y=this.gpgpu.createUnsignedBytesMatrixTexture(p[0],p[1])),this.usedTextures[_].push(y),this.numUsedTextures++,this._numBytesAllocated+=k,this.log(),y}releaseTexture(p,h,g,v){if(this.freeTextures==null)return;const _=a(g,v),k=l(h,_,v);k in this.freeTextures||(this.freeTextures[k]=[]);const y=o(h,_,this.gpgpu.gl,this.gpgpu.textureConfig,v),x=(0,r.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");x!==-1&&this._numBytesAllocated>x?(this.gpgpu.deleteMatrixTexture(p.texture),this._numBytesAllocated-=y):(this.freeTextures[k].push(p),this.numFreeTextures++,this._numBytesFree+=y),this.numUsedTextures--;const b=this.usedTextures[k],C=b&&b.indexOf(p);if(C==null||C<0)throw new Error("Cannot release a texture that was never provided by this texture manager");b[C]=b[b.length-1],b.pop(),this.log()}log(){if(!this.logEnabled)return;const p=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${p})`);const h=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*h)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const p in this.freeTextures)this.freeTextures[p].forEach(h=>{this.gpgpu.deleteMatrixTexture(h.texture)});for(const p in this.usedTextures)this.usedTextures[p].forEach(h=>{this.gpgpu.deleteMatrixTexture(h.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function i(u,p){const h=u;if(p===h.R32F)return 4;if(p===h.R16F)return 2;if(p===h.RGBA32F)return 16;if(p===u.RGBA)return 16;if(p===h.RGBA16F)return 8;if(p===h.RGBA8)return 4;throw new Error(`Unknown internal format ${p}`)}function o(u,p,h,g,v){const _=n(p,g);let k;if(v){const[x,b]=(0,m.getPackedMatrixTextureShapeWidthHeight)(u[0],u[1]);k=x*b}else{const[x,b]=(0,m.getUnpackedMatrixTextureShapeWidthHeight)(u[0],u[1]);k=x*b}const y=i(h,_);return k*y}function n(u,p){switch(u){case m.PhysicalTextureType.PACKED_2X2_FLOAT32:return(0,d.getInternalFormatForPackedMatrixTexture)(p);case m.PhysicalTextureType.PACKED_2X2_FLOAT16:return(0,d.getInternalFormatForFloat16PackedMatrixTexture)(p);case m.PhysicalTextureType.UNPACKED_FLOAT32:return(0,d.getInternalFormatForFloat32MatrixTexture)(p);case m.PhysicalTextureType.UNPACKED_FLOAT16:return(0,d.getInternalFormatForFloat16MatrixTexture)(p);case m.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:return(0,d.getInternalFormatForUnsignedBytesMatrixTexture)(p);default:throw new Error(`Unknown physical texture type ${u}`)}}function c(u){return(0,r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?u?m.PhysicalTextureType.PACKED_2X2_FLOAT32:m.PhysicalTextureType.UNPACKED_FLOAT32:u?m.PhysicalTextureType.PACKED_2X2_FLOAT16:m.PhysicalTextureType.UNPACKED_FLOAT16}function a(u,p){if(u===m.TextureUsage.UPLOAD)return m.PhysicalTextureType.PACKED_2X2_FLOAT32;if(u===m.TextureUsage.RENDER||u==null)return c(p);if(u===m.TextureUsage.DOWNLOAD||u===m.TextureUsage.PIXELS)return m.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${u}`)}function l(u,p,h){return`${u[0]}_${u[1]}_${p}_${h}`}},{"@tensorflow/tfjs-core":"fqGP4","./gpgpu_util":"2objp","./tex_util":"6noJs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7L5LN":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"UnaryOpProgram",()=>d),t.export(s,"CHECK_NAN_SNIPPET",()=>m),t.export(s,"LINEAR",()=>f),t.export(s,"ABS",()=>i),t.export(s,"STEP",()=>o),t.export(s,"ELU",()=>n),t.export(s,"RELU",()=>c),t.export(s,"RELU6",()=>a),t.export(s,"CLONE",()=>l),t.export(s,"SIGMOID",()=>u);var r=e("./gpgpu_math");class d{constructor(h,g){this.variableNames=["A"],this.outputShape=h,this.enableShapeUniforms=(0,r.useShapeUniforms)(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${g}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const m="if (isnan(x)) return x;",f="return x;",i="return abs(x);";function o(p=0){return m+`
    return x > 0.0 ? 1.0 : float(${p});
  `}const n="return (x >= 0.0) ? x : (exp(x) - 1.0);",c=m+`
  return (x < 0.0) ? 0.0 : x;
`,a=m+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,l="return x;",u="return 1.0 / (1.0 + exp(-1.0 * x));"},{"./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iiBam:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"LINEAR",()=>d),t.export(s,"ELU",()=>m),t.export(s,"RELU",()=>f),t.export(s,"RELU6",()=>i),t.export(s,"SIGMOID",()=>o),t.export(s,"UnaryOpPackedProgram",()=>n);var r=e("./gpgpu_math");const d="return x;",m=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,f=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,i=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o="return 1.0 / (1.0 + exp(-1.0 * x));";class n{constructor(a,l){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=(0,r.useShapeUniforms)(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${l}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}},{"./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5vUUB":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"UnpackProgram",()=>f);var r=e("./gpgpu_math"),d=e("./packing_util"),m=e("./shader_compiler");class f{constructor(o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=o,this.enableShapeUniforms=(0,r.useShapeUniforms)(this.outputShape.length);const n=o.length,c=(0,d.getChannels)("rc",n),a=(0,m.getCoordsDataType)(n),l=(0,d.getSourceCoords)(n,c),u=c.slice(-2),p=n<=1?"rc":`vec2(${u.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${l});

        setOutput(getChannel(packedInput, ${p}));
      }
    `}}},{"./gpgpu_math":"axk0P","./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5CdBs":[function(e,E,s){/** @license See the LICENSE file. */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"version",()=>r);const r="4.9.0"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fPsVQ:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MathBackendWebGL",()=>f.MathBackendWebGL),t.export(s,"setWebGLContext",()=>i.setWebGLContext),t.export(s,"GPGPUContext",()=>o.GPGPUContext),t.export(s,"gpgpu_util",()=>d),t.export(s,"webgl_util",()=>m),t.export(s,"forceHalfFloat",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("./gpgpu_util"),m=e("./webgl_util"),f=e("./backend_webgl"),i=e("./canvas_util"),o=e("./gpgpu_context");function n(){(0,r.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}},{"@tensorflow/tfjs-core":"fqGP4","./gpgpu_util":"2objp","./webgl_util":"kgdHT","./backend_webgl":"bnLDG","./canvas_util":"kUG6y","./gpgpu_context":"dGqnM","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cCoDg:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@tensorflow/tfjs-core"),r=e("./kernels/_FusedMatMul"),d=e("./kernels/Abs"),m=e("./kernels/Acos"),f=e("./kernels/Acosh"),i=e("./kernels/Add"),o=e("./kernels/AddN"),n=e("./kernels/All"),c=e("./kernels/Any"),a=e("./kernels/ArgMax"),l=e("./kernels/ArgMin"),u=e("./kernels/Asin"),p=e("./kernels/Asinh"),h=e("./kernels/Atan"),g=e("./kernels/Atan2"),v=e("./kernels/Atanh"),_=e("./kernels/AvgPool"),k=e("./kernels/AvgPool3D"),y=e("./kernels/AvgPool3DGrad"),x=e("./kernels/AvgPoolGrad"),b=e("./kernels/BatchMatMul"),C=e("./kernels/BatchNorm"),w=e("./kernels/BatchToSpaceND"),N=e("./kernels/Bincount"),T=e("./kernels/BitwiseAnd"),F=e("./kernels/BroadcastArgs"),S=e("./kernels/Cast"),I=e("./kernels/Ceil"),j=e("./kernels/ClipByValue"),D=e("./kernels/Complex"),O=e("./kernels/ComplexAbs"),$=e("./kernels/Concat"),P=e("./kernels/Conv2D"),R=e("./kernels/Conv2DBackpropFilter"),A=e("./kernels/Conv2DBackpropInput"),z=e("./kernels/Conv3D"),G=e("./kernels/Conv3DBackpropFilterV2"),L=e("./kernels/Conv3DBackpropInputV2"),M=e("./kernels/Cos"),V=e("./kernels/Cosh"),K=e("./kernels/CropAndResize"),W=e("./kernels/Cumprod"),H=e("./kernels/Cumsum"),Z=e("./kernels/DenseBincount"),Q=e("./kernels/DepthToSpace"),te=e("./kernels/DepthwiseConv2dNative"),ee=e("./kernels/DepthwiseConv2dNativeBackpropFilter"),ne=e("./kernels/DepthwiseConv2dNativeBackpropInput"),se=e("./kernels/Diag"),X=e("./kernels/Dilation2D"),U=e("./kernels/Einsum"),Y=e("./kernels/Elu"),J=e("./kernels/EluGrad"),q=e("./kernels/Equal"),ae=e("./kernels/Erf"),ie=e("./kernels/Exp"),le=e("./kernels/ExpandDims"),ue=e("./kernels/Expm1"),B=e("./kernels/FFT"),re=e("./kernels/Fill"),oe=e("./kernels/FlipLeftRight"),de=e("./kernels/Floor"),fe=e("./kernels/FloorDiv"),pe=e("./kernels/FromPixels"),me=e("./kernels/FusedConv2D"),he=e("./kernels/FusedDepthwiseConv2D"),ge=e("./kernels/GatherNd"),ve=e("./kernels/GatherV2"),ke=e("./kernels/Greater"),_e=e("./kernels/GreaterEqual"),ye=e("./kernels/Identity"),be=e("./kernels/IFFT"),Ce=e("./kernels/Imag"),we=e("./kernels/IsFinite"),xe=e("./kernels/IsInf"),Ne=e("./kernels/IsNaN"),Ie=e("./kernels/LeakyRelu"),Te=e("./kernels/Less"),Ee=e("./kernels/LessEqual"),Fe=e("./kernels/LinSpace"),De=e("./kernels/Log"),Ae=e("./kernels/Log1p"),Pe=e("./kernels/LogicalAnd"),Re=e("./kernels/LogicalNot"),$e=e("./kernels/LogicalOr"),Oe=e("./kernels/LRN"),Se=e("./kernels/LRNGrad"),je=e("./kernels/Max"),ze=e("./kernels/Maximum"),Ge=e("./kernels/MaxPool"),Le=e("./kernels/MaxPool3D"),Me=e("./kernels/MaxPool3DGrad"),Ve=e("./kernels/MaxPoolGrad"),Ue=e("./kernels/MaxPoolWithArgmax"),Be=e("./kernels/Mean"),He=e("./kernels/Min"),We=e("./kernels/Minimum"),Ke=e("./kernels/MirrorPad"),ce=e("./kernels/Mod"),Ye=e("./kernels/Multinomial"),Xe=e("./kernels/Multiply"),Ze=e("./kernels/Neg"),Qe=e("./kernels/NonMaxSuppressionV3"),Je=e("./kernels/NonMaxSuppressionV4"),qe=e("./kernels/NonMaxSuppressionV5"),et=e("./kernels/NotEqual"),tt=e("./kernels/OneHot"),st=e("./kernels/OnesLike"),rt=e("./kernels/Pack"),nt=e("./kernels/PadV2"),at=e("./kernels/Pow"),ot=e("./kernels/Prelu"),lt=e("./kernels/Prod"),it=e("./kernels/RaggedGather"),ct=e("./kernels/RaggedRange"),ut=e("./kernels/RaggedTensorToTensor"),pt=e("./kernels/Range"),dt=e("./kernels/Real"),ft=e("./kernels/RealDiv"),mt=e("./kernels/Reciprocal"),ht=e("./kernels/Relu"),gt=e("./kernels/Relu6"),vt=e("./kernels/Reshape"),_t=e("./kernels/ResizeBilinear"),kt=e("./kernels/ResizeBilinearGrad"),yt=e("./kernels/ResizeNearestNeighbor"),bt=e("./kernels/ResizeNearestNeighborGrad"),xt=e("./kernels/Reverse"),Ct=e("./kernels/RotateWithOffset"),wt=e("./kernels/Round"),Nt=e("./kernels/Rsqrt"),It=e("./kernels/ScatterNd"),St=e("./kernels/SearchSorted"),jt=e("./kernels/Select"),Tt=e("./kernels/Selu"),Et=e("./kernels/Sigmoid"),Ft=e("./kernels/Sign"),$t=e("./kernels/Sin"),Ot=e("./kernels/Sinh"),zt=e("./kernels/Slice"),Gt=e("./kernels/Softmax"),Lt=e("./kernels/Softplus"),Mt=e("./kernels/SpaceToBatchND"),Vt=e("./kernels/SparseFillEmptyRows"),Ut=e("./kernels/SparseReshape"),Bt=e("./kernels/SparseSegmentMean"),Ht=e("./kernels/SparseSegmentSum"),Wt=e("./kernels/SparseToDense"),Kt=e("./kernels/SplitV"),Yt=e("./kernels/Sqrt"),Xt=e("./kernels/Square"),Zt=e("./kernels/SquaredDifference"),Qt=e("./kernels/StaticRegexReplace"),Jt=e("./kernels/Step"),qt=e("./kernels/StridedSlice"),es=e("./kernels/StringNGrams"),ts=e("./kernels/StringSplit"),ss=e("./kernels/StringToHashBucketFast"),rs=e("./kernels/Sub"),ns=e("./kernels/Sum"),Dt=e("./kernels/Tan"),At=e("./kernels/Tanh"),Pt=e("./kernels/TensorScatterUpdate"),Rt=e("./kernels/Tile"),as=e("./kernels/TopK"),os=e("./kernels/Transform"),ls=e("./kernels/Transpose"),is=e("./kernels/Unique"),cs=e("./kernels/Unpack"),us=e("./kernels/UnsortedSegmentSum"),ps=e("./kernels/ZerosLike");const ds=[r._fusedMatMulConfig,d.absConfig,m.acosConfig,f.acoshConfig,i.addConfig,o.addNConfig,n.allConfig,c.anyConfig,a.argMaxConfig,l.argMinConfig,u.asinConfig,p.asinhConfig,h.atanConfig,g.atan2Config,v.atanhConfig,_.avgPoolConfig,k.avgPool3DConfig,y.avgPool3DGradConfig,x.avgPoolGradConfig,b.batchMatMulConfig,C.batchNormConfig,w.batchToSpaceNDConfig,N.bincountConfig,T.bitwiseAndConfig,F.broadcastArgsConfig,S.castConfig,I.ceilConfig,j.clipByValueConfig,D.complexConfig,O.complexAbsConfig,$.concatConfig,P.conv2DConfig,R.conv2DBackpropFilterConfig,A.conv2DBackpropInputConfig,z.conv3DConfig,G.conv3DBackpropFilterV2Config,L.conv3DBackpropInputConfig,M.cosConfig,V.coshConfig,K.cropAndResizeConfig,W.cumprodConfig,H.cumsumConfig,Z.denseBincountConfig,Q.depthToSpaceConfig,te.depthwiseConv2dNativeConfig,ee.depthwiseConv2dNativeBackpropFilterConfig,ne.depthwiseConv2dNativeBackpropInputConfig,se.diagConfig,X.dilation2DConfig,U.einsumConfig,Y.eluConfig,J.eluGradConfig,q.equalConfig,ae.erfConfig,ie.expConfig,le.expandDimsConfig,ue.expm1Config,B.fftConfig,re.fillConfig,oe.flipLeftRightConfig,de.floorConfig,fe.floorDivConfig,pe.fromPixelsConfig,me.fusedConv2DConfig,he.fusedDepthwiseConv2DConfig,ge.gatherNdConfig,ve.gatherV2Config,ke.greaterConfig,_e.greaterEqualConfig,ye.identityConfig,be.ifftConfig,Ce.imagConfig,we.isFiniteConfig,xe.isInfConfig,Ne.isNaNConfig,Ie.leakyReluConfig,Te.lessConfig,Ee.lessEqualConfig,Fe.linSpaceConfig,De.logConfig,Ae.log1pConfig,Pe.logicalAndConfig,Re.logicalNotConfig,$e.logicalOrConfig,Oe.LRNConfig,Se.LRNGradConfig,je.maxConfig,ze.maximumConfig,Ge.maxPoolConfig,Le.maxPool3DConfig,Me.maxPool3DGradConfig,Ve.maxPoolGradConfig,Ue.maxPoolWithArgmaxConfig,Be.meanConfig,He.minConfig,We.minimumConfig,Ke.mirrorPadConfig,ce.modConfig,Ye.multinomialConfig,Xe.multiplyConfig,Ze.negConfig,Qe.nonMaxSuppressionV3Config,Je.nonMaxSuppressionV4Config,qe.nonMaxSuppressionV5Config,et.notEqualConfig,tt.oneHotConfig,st.onesLikeConfig,rt.packConfig,nt.padV2Config,at.powConfig,ot.preluConfig,lt.prodConfig,it.raggedGatherConfig,ct.raggedRangeConfig,ut.raggedTensorToTensorConfig,pt.rangeConfig,dt.realConfig,ft.realDivConfig,mt.reciprocalConfig,ht.reluConfig,gt.relu6Config,vt.reshapeConfig,_t.resizeBilinearConfig,kt.resizeBilinearGradConfig,yt.resizeNearestNeighborConfig,bt.resizeNearestNeighborGradConfig,xt.reverseConfig,Ct.rotateWithOffsetConfig,wt.roundConfig,Nt.rsqrtConfig,It.scatterNdConfig,St.searchSortedConfig,jt.selectConfig,Tt.seluConfig,Et.sigmoidConfig,Ft.signConfig,$t.sinConfig,Ot.sinhConfig,zt.sliceConfig,Gt.softmaxConfig,Lt.softplusConfig,Mt.spaceToBatchNDConfig,Vt.sparseFillEmptyRowsConfig,Ut.sparseReshapeConfig,Bt.sparseSegmentMeanConfig,Ht.sparseSegmentSumConfig,Wt.sparseToDenseConfig,Kt.splitVConfig,Yt.sqrtConfig,Xt.squareConfig,Zt.squaredDifferenceConfig,Qt.staticRegexReplaceConfig,Jt.stepConfig,qt.stridedSliceConfig,es.stringNGramsConfig,ts.stringSplitConfig,ss.stringToHashBucketFastConfig,rs.subConfig,ns.sumConfig,Dt.tanConfig,At.tanhConfig,Pt.tensorScatterUpdateConfig,Rt.tileConfig,as.topKConfig,os.transformConfig,ls.transposeConfig,is.uniqueConfig,cs.unpackConfig,us.unsortedSegmentSumConfig,ps.zerosLikeConfig];for(const fs of ds)(0,t.registerKernel)(fs)},{"@tensorflow/tfjs-core":"fqGP4","./kernels/_FusedMatMul":"aanbZ","./kernels/Abs":"lCM4O","./kernels/Acos":"9TyNe","./kernels/Acosh":"HHxdP","./kernels/Add":"djTkz","./kernels/AddN":"cyTBm","./kernels/All":"91Hgn","./kernels/Any":"fO3Bk","./kernels/ArgMax":"8NbCN","./kernels/ArgMin":"6dCxd","./kernels/Asin":"aYfzD","./kernels/Asinh":"eV45T","./kernels/Atan":"fNVgB","./kernels/Atan2":"l4UPD","./kernels/Atanh":"jDc3v","./kernels/AvgPool":"gZnBf","./kernels/AvgPool3D":"V6Dai","./kernels/AvgPool3DGrad":"MJxp6","./kernels/AvgPoolGrad":"2JSZ1","./kernels/BatchMatMul":"2Bhnr","./kernels/BatchNorm":"1b9x5","./kernels/BatchToSpaceND":"dRwmf","./kernels/Bincount":"cXs8L","./kernels/BitwiseAnd":"nWUQg","./kernels/BroadcastArgs":"burEr","./kernels/Cast":"badhd","./kernels/Ceil":"eNvOa","./kernels/ClipByValue":"aCmV9","./kernels/Complex":"6eJf7","./kernels/ComplexAbs":"7aDB3","./kernels/Concat":"4UO0b","./kernels/Conv2D":"lagdV","./kernels/Conv2DBackpropFilter":"bLuSA","./kernels/Conv2DBackpropInput":"bAyE0","./kernels/Conv3D":"kAnrn","./kernels/Conv3DBackpropFilterV2":"aiO99","./kernels/Conv3DBackpropInputV2":"1qfLS","./kernels/Cos":"gEHGh","./kernels/Cosh":"9ZRO1","./kernels/CropAndResize":"80ecx","./kernels/Cumprod":"9cMEu","./kernels/Cumsum":"j9vnd","./kernels/DenseBincount":"3FCc5","./kernels/DepthToSpace":"k3K1s","./kernels/DepthwiseConv2dNative":"5Nxgg","./kernels/DepthwiseConv2dNativeBackpropFilter":"lHgmY","./kernels/DepthwiseConv2dNativeBackpropInput":"6k0oH","./kernels/Diag":"bjnrl","./kernels/Dilation2D":"cFehT","./kernels/Einsum":"d7rhz","./kernels/Elu":"h7Ai4","./kernels/EluGrad":"bvoCO","./kernels/Equal":"1kSbv","./kernels/Erf":"aFhWT","./kernels/Exp":"fKo1O","./kernels/ExpandDims":"6TNeB","./kernels/Expm1":"5p9Jz","./kernels/FFT":"6oztV","./kernels/Fill":"cA4rO","./kernels/FlipLeftRight":"4to2B","./kernels/Floor":"dQ21E","./kernels/FloorDiv":"7nzz4","./kernels/FromPixels":"OYnzc","./kernels/FusedConv2D":"28BAd","./kernels/FusedDepthwiseConv2D":"ghBA0","./kernels/GatherNd":"lzd67","./kernels/GatherV2":"geLYj","./kernels/Greater":"2rjWO","./kernels/GreaterEqual":"oXgup","./kernels/Identity":"ctZJO","./kernels/IFFT":"fKr3Z","./kernels/Imag":"g6X0m","./kernels/IsFinite":"cDW7e","./kernels/IsInf":"7T4az","./kernels/IsNaN":"5FRGw","./kernels/LeakyRelu":"kw7nW","./kernels/Less":"a2wlL","./kernels/LessEqual":"bLjum","./kernels/LinSpace":"lWe9r","./kernels/Log":"ke1lf","./kernels/Log1p":"eYGsc","./kernels/LogicalAnd":"lCz7W","./kernels/LogicalNot":"iWFcL","./kernels/LogicalOr":"d5x0Z","./kernels/LRN":"3nW4Z","./kernels/LRNGrad":"gB9RA","./kernels/Max":"5QqBz","./kernels/Maximum":"8vRkL","./kernels/MaxPool":"2058D","./kernels/MaxPool3D":"etZ4F","./kernels/MaxPool3DGrad":"9nbW4","./kernels/MaxPoolGrad":"gS77c","./kernels/MaxPoolWithArgmax":"lHI0E","./kernels/Mean":"7Sotr","./kernels/Min":"d4qfa","./kernels/Minimum":"9W2ij","./kernels/MirrorPad":"12juQ","./kernels/Mod":"cDCnA","./kernels/Multinomial":"f2ZUA","./kernels/Multiply":"1IvtJ","./kernels/Neg":"aeohU","./kernels/NonMaxSuppressionV3":"8E3eH","./kernels/NonMaxSuppressionV4":"fIZVu","./kernels/NonMaxSuppressionV5":"4YOQC","./kernels/NotEqual":"gpDz7","./kernels/OneHot":"67VlA","./kernels/OnesLike":"kbSOm","./kernels/Pack":"f8n9c","./kernels/PadV2":"5u7fL","./kernels/Pow":"bUjDi","./kernels/Prelu":"6SpnO","./kernels/Prod":"avOxn","./kernels/RaggedGather":"1tC08","./kernels/RaggedRange":"7dwyN","./kernels/RaggedTensorToTensor":"aH7QI","./kernels/Range":"6CyBu","./kernels/Real":"dFXIe","./kernels/RealDiv":"cM0Gs","./kernels/Reciprocal":"8vANs","./kernels/Relu":"2sBIx","./kernels/Relu6":"eqhDD","./kernels/Reshape":"layh9","./kernels/ResizeBilinear":"iusy7","./kernels/ResizeBilinearGrad":"bbj9W","./kernels/ResizeNearestNeighbor":"g52Tv","./kernels/ResizeNearestNeighborGrad":"1tqgB","./kernels/Reverse":"iqpQ9","./kernels/RotateWithOffset":"lHF0L","./kernels/Round":"7ses5","./kernels/Rsqrt":"9wldr","./kernels/ScatterNd":"4d51i","./kernels/SearchSorted":"52NRO","./kernels/Select":"kHSJG","./kernels/Selu":"2nB3h","./kernels/Sigmoid":"4tTKW","./kernels/Sign":"flI9w","./kernels/Sin":"immaU","./kernels/Sinh":"2KiER","./kernels/Slice":"cwth9","./kernels/Softmax":"41u3j","./kernels/Softplus":"2gqRt","./kernels/SpaceToBatchND":"6DY70","./kernels/SparseFillEmptyRows":"5SC49","./kernels/SparseReshape":"aWr9g","./kernels/SparseSegmentMean":"2vkUh","./kernels/SparseSegmentSum":"5bQsS","./kernels/SparseToDense":"jKUtr","./kernels/SplitV":"isvQ9","./kernels/Sqrt":"8CSeq","./kernels/Square":"huoHS","./kernels/SquaredDifference":"94ulP","./kernels/StaticRegexReplace":"bl3sf","./kernels/Step":"ed9aU","./kernels/StridedSlice":"2cBAu","./kernels/StringNGrams":"d9mJm","./kernels/StringSplit":"grp3X","./kernels/StringToHashBucketFast":"JGfRq","./kernels/Sub":"fVrk1","./kernels/Sum":"2E1i9","./kernels/Tan":"dfnHO","./kernels/Tanh":"2PuWN","./kernels/TensorScatterUpdate":"8d8I1","./kernels/Tile":"e3Ttw","./kernels/TopK":"khskp","./kernels/Transform":"bylOA","./kernels/Transpose":"5xgne","./kernels/Unique":"eaaQn","./kernels/Unpack":"4MN8P","./kernels/UnsortedSegmentSum":"dDqWs","./kernels/ZerosLike":"1PWOe"}],aanbZ:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"_fusedMatMul",()=>m),t.export(s,"_fusedMatMulConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./BatchMatMul_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{a,b:l,bias:u,preluActivationWeights:p}=o,{transposeA:h,transposeB:g,activation:v,leakyreluAlpha:_}=c;return(0,d.batchMatMulImpl)({a,b:l,transposeA:h,transposeB:g,backend:n,bias:u,preluActivationWeights:p,leakyreluAlpha:_,activation:v})}const f={kernelName:r._FusedMatMul,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./BatchMatMul_impl":"3GI0n","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3GI0n":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MATMUL_SHARED_DIM_THRESHOLD",()=>c),t.export(s,"batchMatMulImpl",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../mulmat_packed_gpu"),f=e("./Multiply"),i=e("./Reshape"),o=e("./Sum"),n=e("./Transpose");const c=1e3;function a({a:l,b:u,transposeA:p,transposeB:h,backend:g,bias:v=null,preluActivationWeights:_=null,leakyreluAlpha:k=0,activation:y=null}){const x=l.shape.length,b=u.shape.length,C=p?l.shape[x-2]:l.shape[x-1],w=h?u.shape[b-1]:u.shape[b-2],N=p?l.shape[x-1]:l.shape[x-2],T=h?u.shape[b-2]:u.shape[b-1],F=l.shape.slice(0,-2),S=u.shape.slice(0,-2),I=r.util.sizeFromShape(F),j=r.util.sizeFromShape(S),O=r.broadcast_util.assertAndGetBroadcastShape(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([N,T]);r.util.assert(C===w,()=>`Error in matMul: inner shapes (${C}) and (${w}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${p} and transposeB=${h} must match.`);const $=p?[I,C,N]:[I,N,C],P=h?[j,T,w]:[j,w,T],R=(0,i.reshape)({inputs:{x:l},backend:g,attrs:{shape:$}}),A=(0,i.reshape)({inputs:{x:u},backend:g,attrs:{shape:P}}),z=[R,A],G=Math.max(I,j),L=p?R.shape[1]:R.shape[2],M=v!=null,V=_!=null,K=y==="leakyrelu",W=y!=null?(0,d.mapActivationToShaderProgram)(y,!0):null,H=M||V||K||W!=null;let Z;if((N===1||T===1)&&L>c&&H===!1){let te=R,ee=A;p&&(te=(0,n.transpose)({inputs:{x:R},backend:g,attrs:{perm:[0,2,1]}}),z.push(te)),h&&(ee=(0,n.transpose)({inputs:{x:A},backend:g,attrs:{perm:[0,2,1]}}),z.push(ee));const ne=T!==1,se=T===1;let X=te;ne&&(X=(0,i.reshape)({inputs:{x:te},backend:g,attrs:{shape:[G,L,1]}}),z.push(X));const U=T===1?2:1;let Y=ee;se&&(Y=(0,i.reshape)({inputs:{x:ee},backend:g,attrs:{shape:[G,1,L]}}),z.push(Y));const J=(0,f.multiply)({inputs:{a:X,b:Y},backend:g});Z=(0,o.sum)({inputs:{x:J},backend:g,attrs:{axis:U,keepDims:!0}}),z.push(J)}else{const te=(0,r.upcastType)(l.dtype,u.dtype),ee=new m.MatMulPackedProgram($,P,[G,N,T],p,h,M,W,V,K),ne=[R,A];if(v!=null&&ne.push(v),V&&ne.push(_),K){const se=g.makeTensorInfo([],"float32",r.util.createScalarValue(k,"float32"));ne.push(se),z.push(se)}Z=g.runWebGLProgram(ee,ne,te)}const Q=(0,i.reshape)({inputs:{x:Z},backend:g,attrs:{shape:O}});z.push(Z);for(const te of z)g.disposeIntermediateTensorInfo(te);return Q}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../mulmat_packed_gpu":"5l75P","./Multiply":"1IvtJ","./Reshape":"layh9","./Sum":"2E1i9","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aPZb5:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CHECK_NAN_SNIPPET_UNARY",()=>a),t.export(s,"unaryKernelFunc",()=>l),t.export(s,"binaryKernelFunc",()=>u),t.export(s,"mapActivationToShaderProgram",()=>p);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_gpu"),m=e("../binaryop_packed_gpu"),f=e("../kernels/Complex"),i=e("../kernels/LeakyRelu"),o=e("../kernels/Prelu"),n=e("../unaryop_gpu"),c=e("../unaryop_packed_gpu");const a="if (isnan(x)) return x;";function l({opSnippet:h,packedOpSnippet:g,cpuKernelImpl:v,dtype:_}){return({inputs:k,backend:y})=>{const{x}=k,b=y,C=_||x.dtype;if(b.shouldExecuteOnCPU([x])&&v!=null){const T=b.texData.get(x.dataId),F=v(T.values,C);return b.makeTensorInfo(x.shape,C,F)}const w=(0,r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&g!=null;let N;return w?N=new c.UnaryOpPackedProgram(x.shape,g):N=new n.UnaryOpProgram(x.shape,h),b.runWebGLProgram(N,[x],C)}}function u({opSnippet:h,packedOpSnippet:g,checkOutOfBounds:v=!1,supportsComplex:_=!1,cpuKernelImpl:k,dtype:y}){return({inputs:x,backend:b})=>{const{a:C,b:w}=x,N=b;if(_&&C.dtype==="complex64"){const I=N.texData.get(C.dataId),j=N.texData.get(w.dataId),[D,O]=[[I.complexTensorInfos.real,j.complexTensorInfos.real],[I.complexTensorInfos.imag,j.complexTensorInfos.imag]].map(P=>{const[R,A]=P,z={dataId:R.dataId,dtype:R.dtype,shape:C.shape},G={dataId:A.dataId,dtype:A.dtype,shape:w.shape},L=new d.BinaryOpProgram(h,C.shape,w.shape);return N.runWebGLProgram(L,[z,G],(0,r.upcastType)(R.dtype,A.dtype))}),$=(0,f.complex)({inputs:{real:D,imag:O},backend:N});return N.disposeIntermediateTensorInfo(D),N.disposeIntermediateTensorInfo(O),$}const T=y||(0,r.upcastType)(C.dtype,w.dtype);if((C.dtype==="string"||w.dtype==="string"||N.shouldExecuteOnCPU([C,w]))&&k!=null){const I=N.texData.get(C.dataId).values,j=N.texData.get(w.dataId).values,D=C.dtype==="string"?r.backend_util.fromUint8ToStringArray(I):I,O=C.dtype==="string"?r.backend_util.fromUint8ToStringArray(j):j,[$,P]=k(C.shape,w.shape,D,O,T),R=N.makeTensorInfo(P,T),A=N.texData.get(R.dataId);return A.values=$,R}const F=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&g!=null;let S;return F?S=new m.BinaryOpPackedProgram(g,C.shape,w.shape,v):S=new d.BinaryOpProgram(h,C.shape,w.shape),N.runWebGLProgram(S,[C,w],T)}}function p(h,g=!1){if(h==="linear")return g?c.LINEAR:n.LINEAR;if(h==="relu")return g?c.RELU:n.RELU;if(h==="elu")return g?c.ELU:n.ELU;if(h==="relu6")return g?c.RELU6:n.RELU6;if(h==="prelu")return g?o.PRELU_PACKED:o.PRELU;if(h==="leakyrelu")return g?i.LEAKYRELU_PACKED:i.LEAKYRELU;if(h==="sigmoid")return g?c.SIGMOID:n.SIGMOID;throw new Error(`Activation ${h} has not been implemented for the WebGL backend.`)}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","../kernels/Complex":"6eJf7","../kernels/LeakyRelu":"kw7nW","../kernels/Prelu":"6SpnO","../unaryop_gpu":"7L5LN","../unaryop_packed_gpu":"iiBam","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6OHKG":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CHECK_NAN_SNIPPET",()=>m),t.export(s,"SQUARED_DIFFERENCE",()=>f),t.export(s,"BinaryOpProgram",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("./gpgpu_math");const m=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,f="return (a - b) * (a - b);";class i{constructor(n,c,a){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(c,a),this.enableShapeUniforms=(0,d.useShapeUniforms)(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${n}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lSGsz:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CHECK_NAN_SNIPPET_PACKED",()=>i),t.export(s,"ELU_DER",()=>o),t.export(s,"NOT_EQUAL",()=>n),t.export(s,"BinaryOpPackedProgram",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("./gpgpu_math"),m=e("./packing_util"),f=e("./shader_compiler");const i=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,o=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,n=`
  return vec4(notEqual(a, b));
`;class c{constructor(l,u,p,h=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(u,p);const g=this.outputShape.length;this.enableShapeUniforms=(0,d.useShapeUniforms)(g);let v="";if(h)if(g===0||r.util.sizeFromShape(this.outputShape)===1)v=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(v=`
          ${(0,f.getCoordsDataType)(g)} coords = getOutputCoords();
        `,g===1)this.enableShapeUniforms?v+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:v+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const k=(0,m.getChannels)("coords",g);this.enableShapeUniforms?v+=`
            bool nextRowOutOfBounds =
              (${k[g-2]} + 1) >= outShape[${g} - 2];
            bool nextColOutOfBounds =
              (${k[g-1]} + 1) >= outShape[${g} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:v+=`
            bool nextRowOutOfBounds =
              (${k[g-2]} + 1) >= ${this.outputShape[g-2]};
            bool nextColOutOfBounds =
              (${k[g-1]} + 1) >= ${this.outputShape[g-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${l}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${v}

        setOutput(result);
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","./gpgpu_math":"axk0P","./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6eJf7":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"complex",()=>m),t.export(s,"complexConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Identity");function m(i){const{inputs:o,backend:n}=i,{real:c,imag:a}=o,l=n.makeTensorInfo(c.shape,"complex64"),u=n.texData.get(l.dataId),p=(0,d.identity)({inputs:{x:c},backend:n}),h=(0,d.identity)({inputs:{x:a},backend:n});return u.complexTensorInfos={real:p,imag:h},l}const f={kernelName:r.Complex,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Identity":"ctZJO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ctZJO:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"identity",()=>d),t.export(s,"identityConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o}=f,{x:n}=i;return o.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const m={kernelName:r.Identity,backendName:"webgl",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kw7nW:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"LEAKYRELU",()=>f),t.export(s,"LEAKYRELU_PACKED",()=>i),t.export(s,"leakyRelu",()=>o),t.export(s,"leakyReluConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_gpu"),m=e("../binaryop_packed_gpu");const f="return (a < 0.) ? b * a : a;",i=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p}=a,{alpha:h}=u,g=l.makeTensorInfo([],"float32",r.util.createScalarValue(h,"float32")),v=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new m.BinaryOpPackedProgram(i,p.shape,g.shape):new d.BinaryOpProgram(f,p.shape,g.shape),_=l.runWebGLProgram(v,[p,g],"float32");return l.disposeIntermediateTensorInfo(g),_}const n={kernelName:r.LeakyRelu,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6SpnO":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"PRELU",()=>f),t.export(s,"PRELU_PACKED",()=>i),t.export(s,"prelu",()=>o),t.export(s,"preluConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_gpu"),m=e("../binaryop_packed_gpu");const f="return (a < 0.) ? b * a : a;",i=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function o(c){const{inputs:a,backend:l}=c,{x:u,alpha:p}=a,h=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new m.BinaryOpPackedProgram(i,u.shape,p.shape):new d.BinaryOpProgram(f,u.shape,p.shape);return l.runWebGLProgram(h,[u,p],"float32")}const n={kernelName:r.Prelu,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5l75P":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MatMulPackedProgram",()=>d);var r=e("./gpgpu_math");class d{constructor(f,i,o,n=!1,c=!1,a=!1,l=null,u=!1,p=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=(0,r.useShapeUniforms)(this.outputShape.length);const h=n?f[1]:f[2],g=Math.ceil(h/2),v=n?"i * 2, rc.y":"rc.y, i * 2",_=c?"rc.z, i * 2":"i * 2, rc.z",k=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],y=c?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let x="",b="";l&&(u?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:p?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:x=`vec4 activation(vec4 x) {
          ${l}
        }`,b="result = activation(result);");const C=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),p&&this.variableNames.push("leakyreluAlpha");let w="rc.x",N="rc.x";f[0]<i[0]?w=`imod(rc.x, ${f[0]})`:i[0]<f[0]&&(N=`imod(rc.x, ${i[0]})`),this.userCode=`
      ${x}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${g}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${N};
        for (int i = 0; i < ${g}; i++) {
          vec4 a = getMatrixA(batchA, ${v});
          vec4 b = getMatrixB(batchB, ${_});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${k[0]} * ${y[0]});
          result += (${k[1]} * ${y[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${C}

        ${b}

        setOutput(result);
      }
    `}}},{"./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1IvtJ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"multiply",()=>c),t.export(s,"multiplyConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_complex_gpu"),m=e("../binaryop_gpu"),f=e("../binaryop_packed_gpu"),i=e("../kernel_utils/shared"),o=e("./Complex");const n="return a * b;";function c(l){const{inputs:u,backend:p}=l,{a:h,b:g}=u,v=r.backend_util.upcastType(h.dtype,g.dtype);if(h.dtype==="complex64"){const k=p.texData.get(h.dataId),y=p.texData.get(g.dataId),x=new d.BinaryOpComplexProgram(d.COMPLEX_MULTIPLY.REAL,h.shape,g.shape),b=new d.BinaryOpComplexProgram(d.COMPLEX_MULTIPLY.IMAG,h.shape,g.shape),C=[{dataId:k.complexTensorInfos.real.dataId,dtype:k.complexTensorInfos.real.dtype,shape:h.shape},{dataId:k.complexTensorInfos.imag.dataId,dtype:k.complexTensorInfos.imag.dtype,shape:h.shape},{dataId:y.complexTensorInfos.real.dataId,dtype:y.complexTensorInfos.real.dtype,shape:g.shape},{dataId:y.complexTensorInfos.imag.dataId,dtype:y.complexTensorInfos.imag.dtype,shape:g.shape}],w=p.runWebGLProgram(x,C,"float32"),N=p.runWebGLProgram(b,C,"float32"),T=(0,o.complex)({inputs:{real:w,imag:N},backend:p});return p.disposeIntermediateTensorInfo(w),p.disposeIntermediateTensorInfo(N),T}if(p.shouldExecuteOnCPU([h,g])){const k=p.texData.get(h.dataId),y=p.texData.get(g.dataId),[x,b]=(0,i.multiplyImplCPU)(h.shape,g.shape,k.values,y.values,v),C=p.makeTensorInfo(b,v),w=p.texData.get(C.dataId);return w.values=x,C}let _;return(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?_=new f.BinaryOpPackedProgram(n,h.shape,g.shape):_=new m.BinaryOpProgram(n,h.shape,g.shape),p.runWebGLProgram(_,[h,g],v)}const a={kernelName:r.Multiply,backendName:"webgl",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_complex_gpu":"bf7Sw","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","../kernel_utils/shared":"6qOzI","./Complex":"6eJf7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bf7Sw:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"COMPLEX_MULTIPLY",()=>d),t.export(s,"BinaryOpComplexProgram",()=>m);var r=e("@tensorflow/tfjs-core");const d={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class m{constructor(i,o,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(o,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${i}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],layh9:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reshape",()=>f),t.export(s,"reshapeConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/reshape"),m=e("../webgl_util");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{shape:u}=a,p=c,h=r.util.sizeFromShape(l.shape),g=r.util.inferFromImplicitShape(u,h),v=r.util.sizeFromShape(g);r.util.assert(h===v,()=>`The new shape (${g}) has ${v} elements and the old shape (${l.shape}) has ${h} elements. The new shape and old shape must have the same number of elements.`);const _=p.texData.get(l.dataId);return _.isPacked&&!(0,m.isReshapeFree)(l.shape,g)&&!(_.texture!==null&&(0,m.isReshapeFree)(_.shape,g))?(0,d.packedReshape)(l,g,p):(p.incRef(l.dataId),{dataId:l.dataId,shape:g,dtype:l.dtype})}const i={kernelName:r.Reshape,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/reshape":"gg5tE","../webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gg5tE:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"packedReshape",()=>m);var r=e("../reshape_packed_gpu"),d=e("../webgl_util");function m(f,i,o){const n=[(0,d.getBatchDim)(f.shape),...(0,d.getRowsCols)(f.shape)],c={dtype:f.dtype,shape:n,dataId:f.dataId},a=[(0,d.getBatchDim)(i),...(0,d.getRowsCols)(i)],l=new r.ReshapePackedProgram(a,n),u=!0,p=[n],h=o.runWebGLProgram(l,[c],f.dtype,p,u);return{dataId:h.dataId,shape:i,dtype:h.dtype}}},{"../reshape_packed_gpu":"v57By","../webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2E1i9":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sum",()=>m),t.export(s,"sumConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Sum_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{axis:l,keepDims:u}=c;return(0,d.sumImpl)(a,l,u,n)}const f={kernelName:r.Sum,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Sum_impl":"cDmnt","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cDmnt:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sumImpl",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/reduce"),m=e("./Reshape"),f=e("./Transpose_impl");function i(o,n,c,a){const l=n,u=o.shape.length,p=r.util.parseAxisParam(l,o.shape);let h=p;const g=r.backend_util.getAxesPermutation(h,u),v=g!=null;let _=o;v&&(_=(0,f.transposeImpl)(o,g,a),h=r.backend_util.getInnerMostAxes(h.length,u)),r.backend_util.assertAxesAreInnerMostDims("sum",h,u);const[k,y]=r.backend_util.computeOutAndReduceShapes(_.shape,h);let x=k;c&&(x=r.backend_util.expandShapeToKeepDim(k,p));const b=r.util.sizeFromShape(y),w=r.util.sizeFromShape(o.shape)/b,N=(0,m.reshape)({inputs:{x:_},attrs:{shape:[w,b]},backend:a}),T=(0,r.sumOutType)(o.dtype),F=(0,d.reduce)(N,T,"sum",a),S=(0,m.reshape)({inputs:{x:F},attrs:{shape:x},backend:a});return a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(F),v&&a.disposeIntermediateTensorInfo(_),S}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/reduce":"6iMLb","./Reshape":"layh9","./Transpose_impl":"488H7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6iMLb":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reduce",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../mean_gpu"),m=e("../reduce_gpu");function f(o){const n=[];for(;n.length===0||n[n.length-1].outSize!==1;){const c=n.length?n[n.length-1].outSize:o[1],a=r.backend_util.computeOptimalWindowSize(c);n.push({inSize:c,windowSize:a,outSize:Math.ceil(c/a)})}return n}function i(o,n,c,a){const l=f(o.shape);let u=o;for(let p=0;p<l.length;p++){const{inSize:h,windowSize:g,outSize:v}=l[p];let _,k;c==="mean"?_=p===0?new d.MeanProgram({windowSize:g,inSize:h,batchSize:o.shape[0],outSize:v},h):new d.MeanProgram({windowSize:g,inSize:h,batchSize:o.shape[0],outSize:v}):_=new m.ReduceProgram({windowSize:g,inSize:h,batchSize:o.shape[0],outSize:v},c),k=u,u=a.runWebGLProgram(_,[u],n),k.dataId!==o.dataId&&a.disposeIntermediateTensorInfo(k)}return u}},{"@tensorflow/tfjs-core":"fqGP4","../mean_gpu":"1MpOx","../reduce_gpu":"jxvtQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1MpOx":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MeanProgram",()=>d);var r=e("@tensorflow/tfjs-core");class d{constructor(f,i){this.variableNames=["x"];const{windowSize:o,batchSize:n,inSize:c,outSize:a}=f;this.outputShape=[n,a];const l=Math.floor(o/4)*4,u=o%4;let p="sumValue += dot(values, ones);";if(i!=null){const g=1/i;p=`sumValue += dot(values * ${r.util.isInt(g)?g.toPrecision(2):g}, ones);`}let h="";c%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${c}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${l};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${p}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${p}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${p}
        }
        setOutput(sumValue);
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jxvtQ:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ReduceProgram",()=>r);class r{constructor(m,f){this.variableNames=["x"];const{windowSize:i,batchSize:o,inSize:n,outSize:c}=m;this.outputShape=[o,c];let a="0.0",l="";f==="prod"?a="1.0":f==="min"?(a="1.0 / 1e-20",l="min"):f==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${f}(${f}(${f}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;f==="sum"?u="sumValue":f==="prod"?u="prodValue":f==="all"?u="allValue":f==="any"&&(u="anyValue");const p=Math.floor(i/4)*4,h=i%4;let g=`
      if (${f==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${f==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${f==="min"} || ${f==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,v="vec4";f==="all"?(a="1.0",g=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,v="bvec4"):f==="any"&&(a="0.0",g=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,v="bvec4");let _="";n%i>0&&(_=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${_}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${v} values = ${v}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${g}
        }

        int inIdx = inOffset + ${p};
        if (${h===1}) {
          ${v} values = ${v}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${g}
        } else if (${h===2}) {
          ${v} values = ${v}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${g}
        } else if (${h===3}) {
          ${v} values = ${v}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${g}
        }
        setOutput(${u});
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"488H7":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transposeImpl",()=>i),t.export(s,"transposeImplCPU",()=>d.transposeImplCPU);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../transpose_gpu"),f=e("../transpose_packed_gpu");function i(o,n,c){const a=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new f.TransposePackedProgram(o.shape,n):new m.TransposeProgram(o.shape,n);return c.runWebGLProgram(a,[o],o.dtype)}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../transpose_gpu":"4Z4I6","../transpose_packed_gpu":"gQtLN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4Z4I6":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TransposeProgram",()=>d);var r=e("./shader_compiler");class d{constructor(i,o){this.variableNames=["A"];const n=new Array(i.length);for(let l=0;l<n.length;l++)n[l]=i[o[l]];this.outputShape=n,this.rank=n.length;const c=(0,r.getCoordsDataType)(this.rank),a=m(o);this.userCode=`
    void main() {
      ${c} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}function m(f){const i=f.length;if(i>6)throw Error(`Transpose for rank ${i} is not yet supported`);const o=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(i);for(let c=0;c<f.length;c++)n[f[c]]=o[c];return n.join()}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gQtLN:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TransposePackedProgram",()=>m);var r=e("./packing_util"),d=e("./shader_compiler");class m{constructor(i,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(i.length);for(let g=0;g<n.length;g++)n[g]=i[o[g]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const c=(0,d.getCoordsDataType)(this.rank),a=(0,r.getVecChannels)("rc",this.rank),l=new Array(this.rank);for(let g=0;g<o.length;g++)l[o[g]]=a[g];const u=`vec2(${l.slice(-2).join()})`,p=`++${a[this.rank-1]} < ${n[this.rank-1]}`,h=`getChannel(getA(${l.join()}), ${u})`;this.userCode=`
    void main() {
      ${c} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${h};
      if(${p}) {
        result[1] = ${h};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${h};
        if(${p}) {
          result[3] = ${h};
        }
      }
      setOutput(result);
    }
    `}}},{"./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5xgne":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transpose",()=>m),t.export(s,"transposeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Transpose_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{perm:l}=c,u=n,p=a.shape.length,h=new Array(p);for(let v=0;v<h.length;v++)h[v]=a.shape[l[v]];let g;if(u.shouldExecuteOnCPU([a])){const _=u.texData.get(a.dataId).values,k=(0,d.transposeImplCPU)(_,a.shape,a.dtype,l,h);g=u.makeTensorInfo(h,a.dtype);const y=u.texData.get(g.dataId);y.values=k}else g=(0,d.transposeImpl)(a,l,u);return g}const f={kernelName:r.Transpose,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Transpose_impl":"488H7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lCM4O:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"abs",()=>o),t.export(s,"absConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../unaryop_gpu"),f=e("../unaryop_packed_gpu");const i="return abs(x);";function o(c){const{inputs:a,backend:l}=c,{x:u}=a;if(l.shouldExecuteOnCPU([u])&&u.dtype!=="complex64"){const h=l.texData.get(u.dataId),g=(0,d.simpleAbsImplCPU)(h.values);return l.makeTensorInfo(u.shape,u.dtype,g)}let p;return(0,r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?p=new f.UnaryOpPackedProgram(u.shape,i):p=new m.UnaryOpProgram(u.shape,i),l.runWebGLProgram(p,[u],u.dtype)}const n={kernelName:r.Abs,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../unaryop_gpu":"7L5LN","../unaryop_packed_gpu":"iiBam","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9TyNe":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"acos",()=>i),t.export(s,"acosConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../unaryop_gpu");const f=m.CHECK_NAN_SNIPPET+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,i=(0,d.unaryKernelFunc)({opSnippet:f}),o={kernelName:r.Acos,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],HHxdP:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"acosh",()=>i),t.export(s,"acoshConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../unaryop_gpu");const f=m.CHECK_NAN_SNIPPET+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,i=(0,d.unaryKernelFunc)({opSnippet:f}),o={kernelName:r.Acosh,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],djTkz:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"addKernelFunc",()=>i),t.export(s,"addConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return a + b;",i=(0,d.binaryKernelFunc)({opSnippet:f,packedOpSnippet:f,supportsComplex:!0,cpuKernelImpl:m.addImplCPU}),o={kernelName:r.Add,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cyTBm:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"addN",()=>i),t.export(s,"addNConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../addn_gpu"),m=e("../addn_packed_gpu"),f=e("./Identity");function i(n){const{inputs:c,backend:a}=n,l=c;if(l.length===1)return(0,f.identity)({inputs:{x:l[0]},backend:a});if(l.length>(0,r.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const v=Math.floor(l.length/2),_=i({inputs:l.slice(0,v),backend:a}),k=i({inputs:l.slice(v),backend:a});return i({inputs:[_,k],backend:a})}const u=l.map(v=>v.dtype).reduce((v,_)=>(0,r.upcastType)(v,_)),p=l.map(v=>v.shape),g=(0,r.env)().getBool("WEBGL_PACK")?new m.AddNPackedProgram(l[0].shape,p):new d.AddNProgram(l[0].shape,p);return a.runWebGLProgram(g,l,u)}const o={kernelName:r.AddN,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../addn_gpu":"dlhsd","../addn_packed_gpu":"djBBf","./Identity":"ctZJO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dlhsd:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AddNProgram",()=>r);class r{constructor(m,f){this.outputShape=[],this.outputShape=m,this.variableNames=f.map((n,c)=>`T${c}`);const i=[];this.variableNames.forEach(n=>{i.push(`float v${n} = get${n}AtOutCoords();`)});const o=this.variableNames.map(n=>`v${n}`).join(" + ");this.userCode=`
      void main() {
        ${i.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],djBBf:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AddNPackedProgram",()=>r);class r{constructor(m,f){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=m,this.variableNames=f.map((n,c)=>`T${c}`);const i=[];this.variableNames.forEach(n=>{i.push(`vec4 v${n} = get${n}AtOutCoords();`)});const o=this.variableNames.map(n=>`v${n}`).join(" + ");this.userCode=`
      void main() {
        ${i.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"91Hgn":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"all",()=>i),t.export(s,"allConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/reduce"),m=e("./Reshape"),f=e("./Transpose");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{axis:p,keepDims:h}=l,g=u.shape.length,v=r.util.parseAxisParam(p,u.shape);let _=v;const k=r.backend_util.getAxesPermutation(_,g);let y=u;k!=null&&(y=(0,f.transpose)({inputs:{x:u},backend:a,attrs:{perm:k}}),_=r.backend_util.getInnerMostAxes(_.length,g)),r.backend_util.assertAxesAreInnerMostDims("all",_,g);const[x,b]=r.backend_util.computeOutAndReduceShapes(y.shape,_),C=r.util.sizeFromShape(b),w=(0,m.reshape)({inputs:{x:y},backend:a,attrs:{shape:[-1,C]}}),N=(0,d.reduce)(w,w.dtype,"all",a);let T;if(h){const F=r.backend_util.expandShapeToKeepDim(x,v);T=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:F}})}else T=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:x}});return a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),k!=null&&a.disposeIntermediateTensorInfo(y),T}const o={kernelName:r.All,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/reduce":"6iMLb","./Reshape":"layh9","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fO3Bk:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"any",()=>i),t.export(s,"anyConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/reduce"),m=e("./Reshape"),f=e("./Transpose");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{axis:p,keepDims:h}=l,g=u.shape.length,v=r.util.parseAxisParam(p,u.shape);let _=v;const k=r.backend_util.getAxesPermutation(_,g);let y=u;k!=null&&(y=(0,f.transpose)({inputs:{x:u},backend:a,attrs:{perm:k}}),_=r.backend_util.getInnerMostAxes(_.length,g)),r.backend_util.assertAxesAreInnerMostDims("any",_,g);const[x,b]=r.backend_util.computeOutAndReduceShapes(y.shape,_),C=r.util.sizeFromShape(b),w=(0,m.reshape)({inputs:{x:y},backend:a,attrs:{shape:[-1,C]}}),N=(0,d.reduce)(w,w.dtype,"any",a);let T;if(h){const F=r.backend_util.expandShapeToKeepDim(x,v);T=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:F}})}else T=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:x}});return a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),k!=null&&a.disposeIntermediateTensorInfo(y),T}const o={kernelName:r.Any,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/reduce":"6iMLb","./Reshape":"layh9","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8NbCN":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMax",()=>f),t.export(s,"argMaxConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/arg_min_max"),m=e("./Transpose");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{axis:u}=a;let p=r.util.parseAxisParam(u,l.shape);const h=r.backend_util.getAxesPermutation(p,l.shape.length);let g=l;const v=[];h!=null&&(g=(0,m.transpose)({inputs:{x:l},backend:c,attrs:{perm:h}}),v.push(g),p=r.backend_util.getInnerMostAxes(p.length,g.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[p[0]],g.shape.length);const _=(0,d.argMinMaxReduce)(c,g,p[0],"max");return v.forEach(k=>c.disposeIntermediateTensorInfo(k)),_}const i={kernelName:r.ArgMax,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/arg_min_max":"6GRKv","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6GRKv":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMinMaxReduce",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../argminmax_gpu"),m=e("../argminmax_packed_gpu"),f=e("../kernels/Reshape");function i(c,a,l,u=null){let p=a.shape[0],h=a.shape[1];u!=null&&(p=u.shape[0],h=u.shape[1]);const g=r.backend_util.computeOptimalWindowSize(h),v={windowSize:g,inSize:h,batchSize:p,outSize:Math.ceil(h/g)},_=new d.ArgMinMaxProgram(v,l,u==null),k=[a];u!=null&&k.push(u);const y=c.runWebGLProgram(_,k,"int32");if(y.shape[1]===1)return y;const x=i(c,a,l,y);return c.disposeIntermediateTensorInfo(y),x}function o(c,a,l,u=null){const p=u!=null?u.shape:a.shape,h=p[p.length-1],g=r.backend_util.computeOptimalWindowSize(h),v=new m.ArgMinMaxPackedProgram(p,g,l,u==null),_=u==null?[a]:[a,u],k=c.runWebGLProgram(v,_,"int32");if(k.shape.length===a.shape.length){const y=o(c,a,l,k);return c.disposeIntermediateTensorInfo(k),y}return k}function n(c,a,l,u){const p=[l];if(r.backend_util.assertAxesAreInnerMostDims("arg"+u.charAt(0).toUpperCase()+u.slice(1),p,a.shape.length),!(0,r.env)().getBool("WEBGL_PACK_REDUCE")||a.shape.length<=2){const h=[],g=c.texData.get(a.dataId),v=g!==null&&g.isPacked;let _=a;v&&(_=c.unpackTensor(a),h.push(_));const[k,y]=r.backend_util.computeOutAndReduceShapes(_.shape,p),x=r.util.sizeFromShape(y),b=(0,f.reshape)({inputs:{x:_},backend:c,attrs:{shape:[-1,x]}});h.push(b);const C=i(c,b,u);h.push(C);const w=(0,f.reshape)({inputs:{x:C},backend:c,attrs:{shape:k}});return h.forEach(N=>c.disposeIntermediateTensorInfo(N)),w}return o(c,a,u)}},{"@tensorflow/tfjs-core":"fqGP4","../argminmax_gpu":"lICyn","../argminmax_packed_gpu":"8W9kh","../kernels/Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lICyn:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ArgMinMaxProgram",()=>r);class r{constructor(m,f,i){this.variableNames=["A"];const{windowSize:o,batchSize:n,outSize:c}=m;i||this.variableNames.push("bestIndicesA"),this.outputShape=[n,c];const a=f==="max"?">":"<",l=i?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8W9kh":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ArgMinMaxPackedProgram",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./packing_util"),m=e("./shader_compiler");class f{constructor(o,n,c,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.util.assert(o.length>2,()=>`Packed arg${c.charAt(0).toUpperCase()+c.slice(1)} supports only inputs with rank above 2.`);const l=o[o.length-1],u=Math.ceil(l/n);this.outputShape=o.slice(0,-1),u>1&&this.outputShape.push(u),a||this.variableNames.push("bestIndicesA");const p=this.outputShape,h=p.length,g=(0,m.getCoordsDataType)(h),v=(0,d.getChannels)("coords",h);let _,k;if(u===1){k=h+1;const D=(0,m.getCoordsDataType)(k);_=`
        ${D} sourceLocR = ${D}(${v.join()}, 0);
        ++${v[h-1]};
        ${D} sourceLocG = ${D}(${v.join()}, 0);
        ++${v[h-2]};
        ${D} sourceLocA = ${D}(${v.join()}, 0);
        --${v[h-1]};
        ${D} sourceLocB = ${D}(${v.join()}, 0);
        --${v[h-2]};`}else k=h,_=`
        ${g} sourceLocR = coords;
        ++${v[h-1]};
        ${g} sourceLocG = coords;
        ++${v[h-2]};
        ${g} sourceLocA = coords;
        --${v[h-1]};
        ${g} sourceLocB = coords;
        --${v[h-2]};`;const y=["x","y","z","w","u","v"].slice(0,k),x="."+y[k-1],b=y.map(D=>"int "+D),C=(0,d.getChannels)("sourceLocR",k-1).concat("inIdx.r"),w=(0,d.getChannels)("sourceLocG",k-1).concat("inIdx.g"),N=(0,d.getChannels)("sourceLocB",k-1).concat("inIdx.b"),T=(0,d.getChannels)("sourceLocA",k-1).concat("inIdx.a"),F=c==="max"?"greaterThan":"lessThan",S=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${C.join()}),
                             getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${N.join()}),
                             getBestIndicesAChannel(${T.join()})));`,I=`vec4(
            getAChannel(${C.join()}),
            hasNextCol ? getAChannel(${w.join()}) : 0.,
            hasNextRow ? getAChannel(${N.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,j=a?"":`
      float getBestIndicesAChannel(${b.join()}) {
        return getChannel(getBestIndicesA(${y.join()}),
                                          vec2(${y.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${b.join()}) {
        return getChannel(getA(${y.join()}),
                               vec2(${y.slice(-2).join()}));
      }
      ${j}
      void main() {
        ${g} coords = getOutputCoords();
        bool hasNextCol = ${v[h-1]} < ${p[h-1]-1};
        bool hasNextRow = ${v[h-2]} < ${p[h-2]-1};
        ${_}
        ivec4 srcIdx = ivec4(sourceLocR${x}, sourceLocG${x},
          sourceLocB${x}, sourceLocA${x}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${S}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${F}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6dCxd":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"argMin",()=>f),t.export(s,"argMinConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/arg_min_max"),m=e("./Transpose");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{axis:u}=a;let p=r.util.parseAxisParam(u,l.shape);const h=r.backend_util.getAxesPermutation(p,l.shape.length);let g=l;const v=[];h!=null&&(g=(0,m.transpose)({inputs:{x:l},backend:c,attrs:{perm:h}}),v.push(g),p=r.backend_util.getInnerMostAxes(p.length,g.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[p[0]],g.shape.length);const _=(0,d.argMinMaxReduce)(c,g,p[0],"min");return v.forEach(k=>c.disposeIntermediateTensorInfo(k)),_}const i={kernelName:r.ArgMin,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/arg_min_max":"6GRKv","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aYfzD:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"asin",()=>i),t.export(s,"asinConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../unaryop_gpu");const f=m.CHECK_NAN_SNIPPET+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,i=(0,d.unaryKernelFunc)({opSnippet:f}),o={kernelName:r.Asin,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eV45T:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"asinh",()=>i),t.export(s,"asinhConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../unaryop_gpu");const f=m.CHECK_NAN_SNIPPET+"return log(x + sqrt(x * x + 1.0));",i=(0,d.unaryKernelFunc)({opSnippet:f}),o={kernelName:r.Asinh,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fNVgB:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atan",()=>i),t.export(s,"atanConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../unaryop_gpu");const f=m.CHECK_NAN_SNIPPET+`
  return atan(x);
`,i=(0,d.unaryKernelFunc)({opSnippet:f}),o={kernelName:r.Atan,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],l4UPD:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atan2",()=>n),t.export(s,"atan2Config",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_gpu"),m=e("../binaryop_packed_gpu"),f=e("../kernel_utils/kernel_funcs_utils");const i=d.CHECK_NAN_SNIPPET+`
  return atan(a, b);
`,o=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+m.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,n=(0,f.binaryKernelFunc)({opSnippet:i,packedOpSnippet:o}),c={kernelName:r.Atan2,backendName:"webgl",kernelFunc:n}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jDc3v:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"atanh",()=>i),t.export(s,"atanhConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../unaryop_gpu");const f=m.CHECK_NAN_SNIPPET+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,i=(0,d.unaryKernelFunc)({opSnippet:f}),o={kernelName:r.Atanh,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gZnBf:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool",()=>i),t.export(s,"avgPoolConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../pool_gpu"),m=e("../webgl_util"),f=e("./Identity");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c;(0,m.assertNotComplex)(u,"avgPool");const{filterSize:p,strides:h,pad:g,dimRoundingMode:v}=l,_=1;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(h,_),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${_}'`);const k=r.backend_util.computePool2DInfo(u.shape,p,h,_,g,v);if(k.filterWidth===1&&k.filterHeight===1&&r.util.arraysEqual(k.inShape,k.outShape))return(0,f.identity)({inputs:{x:u},backend:a});const y=new d.Pool2DProgram(k,"avg",!1);return a.runWebGLProgram(y,[u],"float32")}const o={kernelName:r.AvgPool,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../pool_gpu":"bdv90","../webgl_util":"kgdHT","./Identity":"ctZJO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bdv90:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Pool2DProgram",()=>r),t.export(s,"Pool3DProgram",()=>d);class r{constructor(f,i,o,n=!1,c=!1){if(this.variableNames=["x"],i==="avg"&&o)throw new Error("Cannot compute positions for average pool.");const a=f.filterWidth,l=f.strideHeight,u=f.strideWidth,p=f.dilationHeight,h=f.dilationWidth,g=f.effectiveFilterHeight,v=f.effectiveFilterWidth,_=f.padInfo.top,k=f.padInfo.left;this.outputShape=f.outShape;const y=i==="avg",x=`((batch  * ${f.inHeight} + xR) * ${f.inWidth} + xC) * ${f.inChannels} + d`,b=`(xR * ${f.inWidth} + xC) * ${f.inChannels} + d`;let C="0.0";if(y||(C="-1.0 / 1e-20"),o){const I=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${u});
        const ivec2 pads = ivec2(${_}, ${k});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${g};
              wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${f.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${v};
                wC += ${h}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${f.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?c?x:b:`wR * ${v} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let N=`${i}(${i}(${i}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;i==="avg"&&(N="avgValue / max(count, 1.0)");const T=Math.floor(a/4)*4,F=a%4,S=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${_}, ${k});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${f.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${g};
            wR += ${p}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${f.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${T}; wC += 4) {
            int xC = xCCorner + wC * ${h};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              getValue(batch, xR, xC + 3 * ${h}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${T};
          if (${F===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${F===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${F===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${N});
      }
    `}}class d{constructor(f,i,o,n=!1,c=!1){if(this.variableNames=["x"],i==="avg"&&o)throw new Error("Cannot compute positions for average pool.");const a=f.filterWidth,l=f.strideDepth,u=f.strideHeight,p=f.strideWidth,h=f.dilationDepth,g=f.dilationHeight,v=f.dilationWidth,_=f.effectiveFilterDepth,k=f.effectiveFilterHeight,y=f.effectiveFilterWidth,x=f.padInfo.front,b=f.padInfo.top,C=f.padInfo.left;this.outputShape=f.outShape;const w=i==="avg";let N="0.0";if(w||(N="-1.0 / 1e-20"),o){const D=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${u}, ${p});
        const ivec3 pads = ivec3(${x}, ${b}, ${C});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${_};
              wD += ${h}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${f.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${k};
                wR += ${g}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${f.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${y};
                  wC += ${v}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${f.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${D} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?c?`(((batch * ${f.inDepth} + xD) * ${f.inHeight} + xR) * ${f.inWidth} + xC) * ${f.inChannels} + ch`:`((xD * ${f.inHeight} + xR) * ${f.inWidth} + xC) * ${f.inChannels} + ch`:`wD * ${k} * ${y} +
                      wR * ${y} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const T="max";let F=`${i}(${i}(${i}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;i==="avg"&&(F="avgValue / max(count, 1.0)");const S=Math.floor(a/4)*4,I=a%4,j=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${u}, ${p});
      const ivec3 pads = ivec3(${x}, ${b}, ${C});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${f.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${_};
            wD += ${h}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${f.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${k};
            wR += ${g}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${f.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${v};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${v}, ch),
                getValue(batch, xD, xR, xC + 2 * ${v}, ch),
                getValue(batch, xD, xR, xC + 3 * ${v}, ch)
              );

              ${j}
            }

            int xC = xCCorner + ${S};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${j}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${v}, ch),
                initializationValue,
                initializationValue
              );

              ${j}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${v}, ch),
                getValue(batch, xD, xR, xC + 2 * ${v}, ch),
                initializationValue
              );

              ${j}
            }
          }
        }
        setOutput(${F});
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],V6Dai:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool3D",()=>m),t.export(s,"avgPool3DConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../pool_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{filterSize:l,strides:u,pad:p,dimRoundingMode:h,dataFormat:g}=c,v=[1,1,1],_=r.backend_util.computePool3DInfo(a.shape,l,u,v,p,h,g),k=new d.Pool3DProgram(_,"avg",!1);return n.runWebGLProgram(k,[a],"float32")}const f={kernelName:r.AvgPool3D,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../pool_gpu":"bdv90","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],MJxp6:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPool3DGrad",()=>m),t.export(s,"avgPool3DGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../avg_pool_backprop_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{dy:a,input:l}=o,u=l,{filterSize:p,strides:h,pad:g,dimRoundingMode:v}=c,_=[1,1,1],k=r.backend_util.computePool3DInfo(u.shape,p,h,_,g,v),y=new d.AvgPool3DBackpropProgram(k);return n.runWebGLProgram(y,[a],u.dtype)}const f={kernelName:r.AvgPool3DGrad,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../avg_pool_backprop_gpu":"jZ5PX","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jZ5PX:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"AvgPool2DBackpropProgram",()=>r),t.export(s,"AvgPool3DBackpropProgram",()=>d);class r{constructor(f){this.variableNames=["dy"],this.outputShape=f.inShape;const i=f.filterHeight,o=f.filterWidth,n=f.strideHeight,c=f.strideWidth,a=f.dilationHeight,l=f.dilationWidth,u=f.effectiveFilterHeight,p=f.effectiveFilterWidth,h=u-1-f.padInfo.top,g=p-1-f.padInfo.left,v=1/(i*o);this.userCode=`
      const ivec2 pads = ivec2(${h}, ${g});
      const float avgMultiplier = float(${v});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${f.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${p};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${c}.0;

            if (dyC < 0.0 || dyC >= ${f.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class d{constructor(f){this.variableNames=["dy"],this.outputShape=f.inShape;const i=f.filterDepth,o=f.filterHeight,n=f.filterWidth,c=f.strideDepth,a=f.strideHeight,l=f.strideWidth,u=f.dilationDepth,p=f.dilationHeight,h=f.dilationWidth,g=f.effectiveFilterDepth,v=f.effectiveFilterHeight,_=f.effectiveFilterWidth,k=g-1-f.padInfo.front,y=v-1-f.padInfo.top,x=_-1-f.padInfo.left,b=1/(i*o*n);this.userCode=`
      const ivec3 pads = ivec3(${k}, ${y}, ${x});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${g};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${c}.0;

          if (dyD < 0.0 || dyD >= ${f.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${v};
              wR += ${p}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${f.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${_};
                wC += ${h}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${f.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2JSZ1":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"avgPoolGrad",()=>f),t.export(s,"avgPoolGradConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../avg_pool_backprop_gpu"),m=e("../webgl_util");function f(o){const{inputs:n,backend:c,attrs:a}=o,{dy:l,input:u}=n,p=u;(0,m.assertNotComplex)([l,u],"avgPoolGrad");const{filterSize:h,strides:g,pad:v}=a,_=r.backend_util.computePool2DInfo(p.shape,h,g,1,v),k=new d.AvgPool2DBackpropProgram(_);return c.runWebGLProgram(k,[l],p.dtype)}const i={kernelName:r.AvgPoolGrad,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../avg_pool_backprop_gpu":"jZ5PX","../webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2Bhnr":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchMatMul",()=>m),t.export(s,"batchMatMulConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./BatchMatMul_impl");function m(i){const{inputs:o,backend:n,attrs:c}=i,{a,b:l}=o,{transposeA:u,transposeB:p}=c;return(0,d.batchMatMulImpl)({a,b:l,transposeA:u,transposeB:p,backend:n})}const f={kernelName:r.BatchMatMul,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./BatchMatMul_impl":"3GI0n","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1b9x5":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchNorm",()=>f),t.export(s,"batchNormConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../batchnorm_gpu"),m=e("../batchnorm_packed_gpu");const f=({inputs:o,backend:n,attrs:c})=>{const{x:a,mean:l,variance:u,offset:p,scale:h}=o;r.util.assert(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(p==null||l.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(h==null||l.shape.length===h.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:g}=c;g==null&&(g=.001);const v=[a,l,u];let _=null;p!=null&&(_=p.shape,v.push(p));let k=null;h!=null&&(k=h.shape,v.push(h));const y=(0,r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new m.BatchNormPackedProgram(a.shape,l.shape,u.shape,_,k,g):new d.BatchNormProgram(a.shape,l.shape,u.shape,_,k,g);return n.runWebGLProgram(y,v,v[0].dtype)},i={kernelName:r.FusedBatchNorm,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../batchnorm_gpu":"fYofs","../batchnorm_packed_gpu":"jPC0U","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fYofs:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"BatchNormProgram",()=>d);var r=e("@tensorflow/tfjs-core");class d{constructor(f,i,o,n,c,a){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(f,i),r.backend_util.assertAndGetBroadcastShape(f,o);let l="0.0";n!=null&&(r.backend_util.assertAndGetBroadcastShape(f,n),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="1.0";c!=null&&(r.backend_util.assertAndGetBroadcastShape(f,c),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=f,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jPC0U:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"BatchNormPackedProgram",()=>d);var r=e("@tensorflow/tfjs-core");class d{constructor(f,i,o,n,c,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(f,i),r.backend_util.assertAndGetBroadcastShape(f,o);let l="vec4(0.0)";n!=null&&(r.backend_util.assertAndGetBroadcastShape(f,n),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="vec4(1.0)";c!=null&&(r.backend_util.assertAndGetBroadcastShape(f,c),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=f,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dRwmf:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"batchToSpaceND",()=>i),t.export(s,"batchToSpaceNDConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("./Reshape"),m=e("./Slice"),f=e("./Transpose");const i=n=>{const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{blockShape:p,crops:h}=l;r.util.assert(u.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const g=p.reduce((F,S)=>F*S),v=r.backend_util.getReshaped(u.shape,p,g),_=r.backend_util.getPermuted(v.length,p.length),k=r.backend_util.getReshapedPermuted(u.shape,p,g),y=r.backend_util.getSliceBeginCoords(h,p.length),x=r.backend_util.getSliceSize(k,h,p.length),b=[],C=(0,d.reshape)({inputs:{x:u},backend:a,attrs:{shape:v}}),w=(0,f.transpose)({inputs:{x:C},backend:a,attrs:{perm:_}}),N=(0,d.reshape)({inputs:{x:w},backend:a,attrs:{shape:k}}),T=(0,m.slice)({inputs:{x:N},backend:a,attrs:{begin:y,size:x}});return b.push(C),b.push(w),b.push(N),b.forEach(F=>a.disposeIntermediateTensorInfo(F)),T},o={kernelName:r.BatchToSpaceND,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","./Reshape":"layh9","./Slice":"cwth9","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cwth9:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"slice",()=>o),t.export(s,"sliceConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../slice_gpu"),f=e("../slice_packed_gpu");function i(c,a,l,u){const p=u.texData.get(c.dataId),h=u.makeTensorInfo(l,c.dtype),g=u.texData.get(h.dataId);Object.assign(g,p),g.refCount=1,g.shape=l,g.dtype=c.dtype;let v=r.slice_util.computeFlatOffset(a,r.util.computeStrides(c.shape));p.slice&&(v+=p.slice.flatOffset),g.slice={flatOffset:v,origDataId:p.slice&&p.slice.origDataId||c.dataId};const _=u.dataRefCount.get(g.slice.origDataId)||1;return u.dataRefCount.set(g.slice.origDataId,_+1),h}function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p}=a,{begin:h,size:g}=u,[v,_]=r.slice_util.parseSliceParams(p,h,g);if(r.slice_util.assertParamsValid(p,v,_),r.util.sizeFromShape(_)===0)return l.makeTensorInfo(_,p.dtype,[]);if(l.shouldExecuteOnCPU([p])||p.dtype==="string"){const x=l.texData.get(p.dataId),b=(0,d.sliceImplCPU)(x.values,v,_,p.shape,p.dtype);return l.makeTensorInfo(_,p.dtype,b)}const{isPacked:k}=l.texData.get(p.dataId),y=r.slice_util.isSliceContinous(p.shape,v,_);if(k||!y){const x=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new f.SlicePackedProgram(_):new m.SliceProgram(_),b=[v];return l.runWebGLProgram(x,[p],p.dtype,b)}return l.uploadToGPU(p.dataId),i(p,v,_,l)}const n={kernelName:r.Slice,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../slice_gpu":"cosxe","../slice_packed_gpu":"jedWF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cosxe:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"SliceProgram",()=>d);var r=e("./shader_compiler");class d{constructor(o){this.variableNames=["source"],this.outputShape=o,this.rank=o.length;const n=(0,r.getCoordsDataType)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const c=f(this.rank);let a;const l=o.map((u,p)=>`sourceLoc.${m[p]} = start[${p}] + coords.${m[p]};`);a=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${l.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${c}));
      }
    `}}const m=["x","y","z","w","u","v"];function f(i){if(i===1)return"sourceLoc";if(i<=6)return m.slice(0,i).map(o=>"sourceLoc."+o).join(",");throw Error(`Slicing for rank ${i} is not yet supported`)}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jedWF:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"SlicePackedProgram",()=>m);var r=e("./packing_util"),d=e("./shader_compiler");class m{constructor(i){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i,this.rank=i.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const o=(0,d.getCoordsDataType)(this.rank),n=(0,r.getChannels)("coords",this.rank),c=(0,r.getChannels)("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${c.slice(-2).join()})`,l=`getChannel(getSource(${c.join()}), ${a})`,u=`
      result.x = ${l};
      if (++${n[this.rank-1]} < ${i[this.rank-1]}) {
        ++${c[this.rank-1]};
        result.y = ${l};
        --${c[this.rank-1]};
      }
    `,p=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${i[this.rank-2]}) {
        ++${c[this.rank-2]};
        result.z = ${l};
        if (++${n[this.rank-1]} < ${i[this.rank-1]}) {
          ++${c[this.rank-1]};
          result.w = ${l};
        }
      }
    `,h=this.rank<=4?`sourceLoc = coords +
            ${o}(${i.map((g,v)=>`start[${v}]`).join()});`:i.map((g,v)=>`${c[v]} = ${n[v]} + start[${v}];`).join(`
`);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        ${o} sourceLoc;
        ${h}
        vec4 result = vec4(0.);
        ${u}
        ${p}
        setOutput(result);
      }
    `}}},{"./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cXs8L:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"bincount",()=>m),t.export(s,"bincountConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,weights:l}=o,{size:u}=c,p=n.readSync(a.dataId),h=n.readSync(l.dataId),g=(0,d.bincountImplCPU)(p,h,l.dtype,l.shape,u);return n.makeTensorInfo([u],l.dtype,g)}const f={kernelName:r.Bincount,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],nWUQg:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"BITWISEAND",()=>i),t.export(s,"BITWISEAND_UNPACKED",()=>o),t.export(s,"bitwiseAnd",()=>n),t.export(s,"bitwiseAndConfig",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_gpu"),m=e("../binaryop_packed_gpu"),f=e("../kernel_utils/shared");const i=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,o=`
  return float(int(a.r) & int(b.r));
`;function n(a){const{inputs:l,backend:u}=a,{a:p,b:h}=l,g=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),v=(0,r.env)().getNumber("WEBGL_VERSION");if(u.shouldExecuteOnCPU([p,h])||v===1){const k=u.texData.get(p.dataId).values,y=u.texData.get(h.dataId).values,[x,b]=(0,f.bitwiseAndImplCPU)(p.shape,h.shape,k,y,p.dtype),C=u.makeTensorInfo(b,p.dtype),w=u.texData.get(C.dataId);return w.values=x,C}let _;return g?_=new m.BinaryOpPackedProgram(i,p.shape,h.shape,!1):_=new d.BinaryOpProgram(o,p.shape,h.shape),u.runWebGLProgram(_,[p,h],p.dtype)}const c={kernelName:r.BitwiseAnd,backendName:"webgl",kernelFunc:n}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],burEr:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"broadcastArgs",()=>d),t.export(s,"broadcastArgsConfig",()=>m);var r=e("@tensorflow/tfjs-core");function d(f){const{inputs:i,backend:o}=f,{s0:n,s1:c}=i,a=o.readSync(n.dataId),l=o.readSync(c.dataId),u=r.backend_util.assertAndGetBroadcastShape(Array.from(a),Array.from(l));return o.makeTensorInfo([u.length],"int32",Int32Array.from(u))}const m={kernelName:r.BroadcastArgs,backendName:"webgl",kernelFunc:d}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],badhd:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cast",()=>c),t.export(s,"castConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("./Complex"),f=e("./Identity"),i=e("./NotEqual"),o=e("./Real"),n=e("../kernel_utils/int");function c(l){const{inputs:u,backend:p,attrs:h}=l,{x:g}=u,{dtype:v}=h;if(v==="complex64"){if(g.dtype==="complex64")return(0,f.identity)({inputs:{x:g},backend:p});const _=r.zeros(g.shape),k=c({inputs:{x:g},backend:p,attrs:{dtype:"float32"}}),y=(0,m.complex)({inputs:{real:k,imag:_},backend:p});return _.dispose(),p.disposeIntermediateTensorInfo(k),y}if(g.dtype==="complex64"){const _=(0,o.real)({inputs:{input:g},backend:p}),k=c({inputs:{x:_},backend:p,attrs:{dtype:v}});return p.disposeIntermediateTensorInfo(_),k}if(!r.util.hasEncodingLoss(g.dtype,v)){const _=(0,f.identity)({inputs:{x:g},backend:p});return{dataId:_.dataId,shape:_.shape,dtype:v}}if(p.shouldExecuteOnCPU([g])){const _=p.texData.get(g.dataId).values,[k,y,x]=(0,d.castImplCPU)(_,g.shape,g.dtype,v);return p.makeTensorInfo(k,y,x)}if(v==="int32")return(0,n.int)(g,p);if(v==="bool"){const _=p.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),k={a:g,b:_},y=(0,i.notEqual)({inputs:k,backend:p});return p.disposeIntermediateTensorInfo(_),y}throw new Error(`Error in Cast: failed to cast ${g.dtype} to ${v}`)}const a={kernelName:r.Cast,backendName:"webgl",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","./Complex":"6eJf7","./Identity":"ctZJO","./NotEqual":"gpDz7","./Real":"dFXIe","../kernel_utils/int":"7dxHf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gpDz7:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"notEqual",()=>i),t.export(s,"notEqualConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return float(a != b);",i=(0,d.binaryKernelFunc)({opSnippet:f,cpuKernelImpl:m.notEqualImplCPU,dtype:"bool"}),o={kernelName:r.NotEqual,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dFXIe:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"real",()=>m),t.export(s,"realConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Identity");function m(i){const{inputs:o,backend:n}=i,{input:c}=o,a=n.texData.get(c.dataId);return(0,d.identity)({inputs:{x:a.complexTensorInfos.real},backend:n})}const f={kernelName:r.Real,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Identity":"ctZJO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7dxHf":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"int",()=>m);var r=e("../unaryop_gpu");const d="return float(int(x));";function m(f,i){const o=new r.UnaryOpProgram(f.shape,d),n=i.runWebGLProgram(o,[f],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}},{"../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eNvOa:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ceil",()=>i),t.export(s,"ceilConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return ceil(x);",i=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:f,cpuKernelImpl:m.ceilImplCPU}),o={kernelName:r.Ceil,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aCmV9:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"clipByValue",()=>f),t.export(s,"clipByValueConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../clip_gpu"),m=e("../clip_packed_gpu");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{clipValueMin:u,clipValueMax:p}=a;let h;(0,r.env)().getBool("WEBGL_PACK_CLIP")?h=new m.ClipPackedProgram(l.shape):h=new d.ClipProgram(l.shape);const g=[[u],[p]];return c.runWebGLProgram(h,[l],l.dtype,g)}const i={kernelName:r.ClipByValue,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../clip_gpu":"5k4kt","../clip_packed_gpu":"idsSd","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5k4kt":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ClipProgram",()=>r);class r{constructor(m){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=m,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],idsSd:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ClipPackedProgram",()=>r);class r{constructor(m){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=m,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7aDB3":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"complexAbs",()=>f),t.export(s,"complexAbsConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../complex_abs_gpu");function m(o,n){return{dataId:n.dataId,dtype:n.dtype,shape:o.shape}}function f(o){const{inputs:n,backend:c}=o,{x:a}=n,l=c.texData.get(a.dataId),u=new d.ComplexAbsProgram(a.shape),p=[m(a,l.complexTensorInfos.real),m(a,l.complexTensorInfos.imag)];return c.runWebGLProgram(u,p,p[0].dtype)}const i={kernelName:r.ComplexAbs,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../complex_abs_gpu":"4T38q","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4T38q":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ComplexAbsProgram",()=>r);class r{constructor(m){this.variableNames=["real","imag"],this.outputShape=m,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4UO0b":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concat",()=>f),t.export(s,"concatConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("./Concat_impl"),m=e("./Identity");function f(o){const{inputs:n,backend:c,attrs:a}=o,{axis:l}=a,u=r.util.parseAxisParam(l,n[0].shape)[0],p=n.map(v=>v.shape);r.backend_util.assertParamsConsistent(p,u);const h=r.backend_util.computeOutShape(n.map(v=>v.shape),u);if(r.util.sizeFromShape(h)===0)return c.makeTensorInfo(h,n[0].dtype,[]);const g=n.filter(v=>r.util.sizeFromShape(v.shape)>0);return g.length===1?(0,m.identity)({inputs:{x:g[0]},backend:c}):(0,d.concatImpl)(g,u,c)}const i={kernelName:r.Concat,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","./Concat_impl":"1LJUh","./Identity":"ctZJO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1LJUh":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"concatImpl",()=>u);var r=e("@tensorflow/tfjs-core"),d=e("../concat_gpu"),m=e("../concat_packed_gpu"),f=e("../kernel_utils/shared"),i=e("../unaryop_gpu"),o=e("../unaryop_packed_gpu"),n=e("./Complex"),c=e("./Imag"),a=e("./Real"),l=e("./Reshape");function u(h,g,v){const _=h[0].dtype;if(_==="complex64"){const S=h.map($=>(0,a.real)({inputs:{input:$},backend:v})),I=h.map($=>(0,c.imag)({inputs:{input:$},backend:v})),j=u(S,g,v),D=u(I,g,v),O=(0,n.complex)({inputs:{real:j,imag:D},backend:v});return S.forEach($=>v.disposeIntermediateTensorInfo($)),I.forEach($=>v.disposeIntermediateTensorInfo($)),v.disposeIntermediateTensorInfo(j),v.disposeIntermediateTensorInfo(D),O}let k=v.shouldExecuteOnCPU(h);if(_==="string"&&(k=!0),k){const S=h.map(R=>{const A=r.util.sizeFromShape(R.shape.slice(g)),z=[-1,A];return(0,l.reshape)({inputs:{x:R},backend:v,attrs:{shape:z}})}),I=S.map(R=>({vals:v.readSync(R.dataId),shape:R.shape})),j=r.backend_util.computeOutShape(S.map(R=>R.shape),1),D=S[0].shape[0]===1,O=(0,f.concatImplCPU)(I,j,_,D),$=r.backend_util.computeOutShape(h.map(R=>R.shape),g),P=v.makeTensorInfo($,_,O);return S.forEach(R=>v.disposeIntermediateTensorInfo(R)),P}const y=h.filter(S=>r.util.sizeFromShape(S.shape)>0),x=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&y[0].shape.length>1;if(y.length===1){const S=x?new i.UnaryOpProgram(h[0].shape,i.CLONE):new o.UnaryOpPackedProgram(h[0].shape,i.CLONE);return v.runWebGLProgram(S,h,_)}const b=(0,r.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(y.length>b){const S=[];for(let j=0;j<y.length;j+=b){const D=y.slice(j,j+b);S.push(u(D,g,v))}const I=u(S,g,v);for(const j of S)v.disposeIntermediateTensorInfo(j);return I}if(x){const S=new m.ConcatPackedProgram(y.map(I=>I.shape),g);return v.runWebGLProgram(S,y,_)}const{tensors2D:C,outShape:w}=p(y,g,v),N=new d.ConcatProgram(C.map(S=>S.shape)),T=v.runWebGLProgram(N,C,_);C.forEach(S=>v.disposeIntermediateTensorInfo(S));const F=(0,l.reshape)({inputs:{x:T},attrs:{shape:w},backend:v});return v.disposeIntermediateTensorInfo(T),F}function p(h,g,v){const _=r.backend_util.computeOutShape(h.map(y=>y.shape),g);return{tensors2D:h.map(y=>(0,l.reshape)({inputs:{x:y},attrs:{shape:[-1,r.util.sizeFromShape(y.shape.slice(g))]},backend:v})),outShape:_}}},{"@tensorflow/tfjs-core":"fqGP4","../concat_gpu":"7MqOs","../concat_packed_gpu":"4qmTt","../kernel_utils/shared":"6qOzI","../unaryop_gpu":"7L5LN","../unaryop_packed_gpu":"iiBam","./Complex":"6eJf7","./Imag":"g6X0m","./Real":"dFXIe","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7MqOs":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ConcatProgram",()=>d);var r=e("@tensorflow/tfjs-core");class d{constructor(f){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(f,1),this.variableNames=f.map((a,l)=>`T${l}`);const i=new Array(f.length-1);i[0]=f[0][1];for(let a=1;a<i.length;a++)i[a]=i[a-1]+f[a][1];const o=[`if (yC < ${i[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<i.length;a++){const l=i[a-1];o.push(`else if (yC < ${i[a]}) setOutput(getT${a}(yR, yC-${l}));`)}const n=i.length,c=i[i.length-1];o.push(`else setOutput(getT${n}(yR, yC-${c}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4qmTt":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ConcatPackedProgram",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./packing_util"),m=e("./shader_compiler");class f{constructor(n,c){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(n,c);const a=this.outputShape,l=a.length,u=(0,m.getCoordsDataType)(l),p=(0,d.getChannels)("coords",l),h=["x","y","z","w","u","v"].slice(0,l);this.variableNames=n.map((C,w)=>`T${w}`);const g=new Array(n.length-1);g[0]=n[0][c];for(let C=1;C<g.length;C++)g[C]=g[C-1]+n[C][c];const v=h[c],_=h.slice(-2),k=h.join();let y=`if (${v} < ${g[0]}) {
        return getChannel(
            getT0(${k}), vec2(${_.join()}));
        }`;for(let C=1;C<g.length;C++){const w=g[C-1];y+=`
        if (${v} < ${g[C]}  && ${v} >= ${g[C-1]}) {
          return getChannel(
            getT${C}(${i(h,v,w)}),
            vec2(${i(_,v,w)}));
        }`}const x=g.length,b=g[g.length-1];y+=`
        return getChannel(
          getT${x}(${i(h,v,b)}),
          vec2(${i(_,v,b)}));`,this.userCode=`
      float getValue(${h.map(C=>"int "+C)}) {
        ${y}
      }

      void main() {
        ${u} coords = getOutputCoords();
        vec4 result = vec4(getValue(${p}), 0., 0., 0.);

        ${p[l-1]} = ${p[l-1]} + 1;
        if (${p[l-1]} < ${a[l-1]}) {
          result.g = getValue(${p});
        }

        ${p[l-2]} = ${p[l-2]} + 1;
        if (${p[l-2]} < ${a[l-2]}) {
          result.a = getValue(${p});
        }

        ${p[l-1]} = ${p[l-1]} - 1;
        if (${p[l-2]} < ${a[l-2]} &&
            ${p[l-1]} < ${a[l-1]}) {
          result.b = getValue(${p});
        }
        setOutput(result);
      }
    `}}function i(o,n,c){const a=o.indexOf(n);return o.map((u,p)=>p===a?`${u} - ${c}`:u).join()}},{"@tensorflow/tfjs-core":"fqGP4","./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g6X0m:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"imag",()=>m),t.export(s,"imagConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Identity");function m(i){const{inputs:o,backend:n}=i,{input:c}=o,a=n.texData.get(c.dataId);return(0,d.identity)({inputs:{x:a.complexTensorInfos.imag},backend:n})}const f={kernelName:r.Imag,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Identity":"ctZJO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lagdV:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2d",()=>o),t.export(s,"conv2DConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../conv_gpu"),m=e("../conv_packed_gpu"),f=e("./Conv2D_impl"),i=e("./Reshape");function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p,filter:h}=a,{strides:g,pad:v,dataFormat:_,dilations:k,dimRoundingMode:y}=u,x=r.backend_util.convertConv2DDataFormat(_),b=r.backend_util.computeConv2DInfo(p.shape,h.shape,g,k,v,y,!1,x);let C;if(b.filterHeight===1&&b.filterWidth===1&&b.dilationHeight===1&&b.dilationWidth===1&&b.strideHeight===1&&b.strideWidth===1&&(b.padInfo.type==="SAME"||b.padInfo.type==="VALID"))C=(0,f.conv2dByMatMul)({x:p,filter:h,convInfo:b,backend:l});else if(b.strideWidth<=2&&x==="channelsLast"&&(0,r.env)().getBool("WEBGL_EXP_CONV")){const N=new m.Conv2DPackedProgram(b),T=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]];C=l.runWebGLProgram(N,[p,h],"float32",T)}else if((0,r.env)().getBool("WEBGL_CONV_IM2COL"))C=(0,f.conv2dWithIm2Row)({x:p,filter:h,convInfo:b,backend:l});else{const N=new d.Conv2DProgram(b);C=l.runWebGLProgram(N,[p,h],"float32")}const w=(0,i.reshape)({inputs:{x:C},backend:l,attrs:{shape:b.outShape}});return l.disposeIntermediateTensorInfo(C),w}const n={kernelName:r.Conv2D,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../conv_gpu":"cpHaX","../conv_packed_gpu":"eaTqN","./Conv2D_impl":"47nsB","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cpHaX:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Conv2DProgram",()=>r),t.export(s,"Conv3DProgram",()=>d);class r{constructor(f,i=!1,o=null,n=!1,c=!1){this.variableNames=["x","W"],this.outputShape=f.outShape;const a=f.padInfo.top,l=f.padInfo.left,u=f.strideHeight,p=f.strideWidth,h=f.dilationHeight,g=f.dilationWidth,v=f.filterHeight,_=f.filterWidth,k=Math.floor(f.inChannels/4)*4,y=f.inChannels%4,x=f.dataFormat==="channelsLast",b=x?1:2,C=x?2:3,w=x?3:1;let N="",T="";o&&(n?N=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:c?N=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:N=`
          float activation(float x) {
            ${o}
          }
        `,T="result = activation(result);");const F=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${N}

      const ivec2 strides = ivec2(${u}, ${p});
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${C}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${v}; wR++) {
          int xR = xRCorner + wR * ${h};

          if (xR < 0 || xR >= ${f.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${_}; wC++) {
            int xC = xCCorner + wC * ${g};

            if (xC < 0 || xC >= ${f.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${k}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${x}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${y===1}) {

              if (${x}) {
                dotProd +=
                    getX(batch, xR, xC, ${k}) *
                    getW(wR, wC, ${k}, d2);
              } else {
                dotProd +=
                    getX(batch, ${k}, xR, xC) *
                    getW(wR, wC, ${k}, d2);
              }

            } else if (${y===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${k}, d2),
                getW(wR, wC, ${k} + 1, d2)
              );

              if (${x}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${k}),
                  getX(batch, xR, xC, ${k} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${k}, xR, xC),
                  getX(batch, ${k} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${y===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${k}, d2),
                getW(wR, wC, ${k} + 1, d2),
                getW(wR, wC, ${k} + 2, d2)
              );

              if (${x}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${k}),
                  getX(batch, xR, xC, ${k} + 1),
                  getX(batch, xR, xC, ${k} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${k}, xR, xC),
                  getX(batch, ${k} + 1, xR, xC),
                  getX(batch, ${k} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${F}
        ${T}
        setOutput(result);
      }
    `}}class d{constructor(f){this.variableNames=["x","W"],this.outputShape=f.outShape;const i=f.padInfo.front,o=f.padInfo.top,n=f.padInfo.left,c=f.strideDepth,a=f.strideHeight,l=f.strideWidth,u=f.dilationDepth,p=f.dilationHeight,h=f.dilationWidth,g=f.filterDepth,v=f.filterHeight,_=f.filterWidth,k=Math.floor(f.inChannels/4)*4,y=f.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${c}, ${a}, ${l});
      const ivec3 pads = ivec3(${i}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${g}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${f.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${v}; wR++) {
            int xR = xRCorner + wR * ${p};

            if (xR < 0 || xR >= ${f.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${_}; wC++) {
              int xC = xCCorner + wC * ${h};

              if (xC < 0 || xC >= ${f.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${k}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${y===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${k}) *
                  getW(wF, wR, wC, ${k}, d2);
              } else if (${y===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${k}),
                  getX(batch, xF, xR, xC, ${k} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${k}, d2),
                  getW(wF, wR, wC, ${k} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${y===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${k}),
                  getX(batch, xF, xR, xC, ${k} + 1),
                  getX(batch, xF, xR, xC, ${k} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${k}, d2),
                  getW(wF, wR, wC, ${k} + 1, d2),
                  getW(wF, wR, wC, ${k} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eaTqN:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Conv2DPackedProgram",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./gpgpu_math");class m{constructor(i,o=!1,n=null,c=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=i.outShape,this.enableShapeUniforms=(0,d.useShapeUniforms)(this.outputShape.length);const l=i.padInfo.left,u=i.strideWidth,p=i.dilationWidth,h=i.filterHeight,g=i.filterWidth,v=g;let _=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<g;b++)_+=`
           vec4 xTexelC${b*2};
           int xTexelC${b*2}Ready;
           vec4 xTexelC${b*2+1};
           int xTexelC${b*2+1}Ready;
           vec4 xC${b};`;_+=`
     for (int r = 0; r < ${h}; r++) {
      for (int d1 = 0; d1 < ${i.inChannels}; d1 += 2) {
       `;for(let b=0;b<g;b++)_+=`
           xTexelC${b*2} = vec4(0.0);
           xTexelC${b*2}Ready = 0;
           xTexelC${b*2+1} = vec4(0.0);
           xTexelC${b*2+1}Ready = 0;
           xC${b} = vec4(0.0);`;_+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let b=0;b<(v+1)/2;b++){const C=b*2;if(_+=`
           xC = xCCorner + ${C*p};
           `,u===1){if(C<g&&(l%2==1?(_+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C}Ready == 0) {
                   xTexelC${C} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${C}.zw = vec2(0.0);
                   }
                   xTexelC${C}Ready = 1;
                 }
               `,p===1&&C>0?_+=`
                 xC${C} = vec4(xTexelC${C-2}.zw, xTexelC${C}.xy);
                 `:_+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${C} = vec4(previous.zw, xTexelC${C}.xy);
                   } else {
                     xC${C} = vec4(0.0, 0.0, xTexelC${C}.xy);
                   }
                   `):_+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${C}Ready == 0) {
                   xTexelC${C} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${C}.zw = vec2(0.0);
                   }
                   xTexelC${C}Ready = 1;
                 }

                 xC${C} = xTexelC${C};
                 `,C+1<g)){const w=l%2==0?r.util.nearestLargerEven(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(_+=`
                   xCOffset = xC + imod(pads[1], 2) + ${w};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                     xTexelC${C+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${C+1}.zw = vec2(0.0);
                     }
                     xTexelC${C+1}Ready = 1;
                   }
                   `,p>1?_+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${C+1} = vec4(previous.zw, xTexelC${C+1}.xy);
                     } else {
                      xC${C+1} = vec4(0.0, 0.0, xTexelC${C+1}.xy);
                     }
                     `:_+=`
                     xC${C+1} = vec4(xTexelC${C}.zw, xTexelC${C+1}.xy);
                     `):w===1?_+=`
                     xC${C+1} = xTexelC${C};
                     `:_+=`
                     xCOffset = xC + ${w};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                       xTexelC${C+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${C+1}.zw = vec2(0.0);
                       }
                       xTexelC${C+1}Ready = 1;
                     }

                     xC${C+1} = xTexelC${C+1};
                     `}}else C<g&&(l%2==1?(_+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C}Ready == 0) {
                   xTexelC${C} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${C}.zw = vec2(0.0);
                   }
                   xTexelC${C}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${C+1}Ready == 0) {
                   xTexelC${C+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${C+1}.zw = vec2(0.0);
                   }
                   xTexelC${C+1}Ready = 1;
                 }

                 xC${C} = vec4(xTexelC${C}.zw, xTexelC${C+1}.zw);
               `,C+1<g&&(_+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${C+1} = vec4(xTexelC${C+1}.xy, final.xy);
                 `)):(_+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${C}Ready == 0) {
                   xTexelC${C} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${C}.zw = vec2(0.0);
                   }
                   xTexelC${C}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${C+1}Ready == 0) {
                   xTexelC${C+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${C+1}.zw = vec2(0.);
                   }
                   xTexelC${C+1}Ready = 1;
                 }

                 xC${C} = vec4(
                   xTexelC${C}.xy, xTexelC${C+1}.xy);
               `,C+1<g&&(_+=`
                   xC${C+1} = vec4(xTexelC${C}.zw, xTexelC${C+1}.zw);
                 `)));C<g&&(_+=`
             wTexel = getW(r, ${C}, d1, d2);
             dotProd += xC${C}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${i.inChannels}) {
               dotProd += xC${C}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,C+1<g&&(_+=`
               wTexel = getW(r, ${C+1}, d1, d2);
               dotProd += xC${C+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${i.inChannels}) {
                 dotProd += xC${C+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}_+=`
     }
   `,_+=`
     }
   `,_+=`
     }
   `;let k="",y="";n&&(c?k=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?k=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:k=`vec4 activation(vec4 x) {
           ${n}
         }`,y="result = activation(result);");const x=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${k}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${_}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${x}
         ${y}
         setOutput(result);
       }
     `}}},{"@tensorflow/tfjs-core":"fqGP4","./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"47nsB":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2dByMatMul",()=>l),t.export(s,"conv2dWithIm2Row",()=>u);var r=e("@tensorflow/tfjs-core"),d=e("../im2col_packed_gpu"),m=e("../kernel_utils/kernel_funcs_utils"),f=e("../mulmat_packed_gpu"),i=e("../webgl_util"),o=e("./BatchMatMul_impl"),n=e("./Identity"),c=e("./Reshape");function a(p,h){const g=p.length;return g>=3?h?[...p.slice(0,-3),p[g-3]*p[g-2],p[g-1]]:[...p.slice(0,-3),p[g-3],p[g-2]*p[g-1]]:!h&&g===1&&p[0]>1?[p[0],1]:null}function l({x:p,filter:h,convInfo:g,backend:v,bias:_=null,preluActivationWeights:k=null,leakyreluAlpha:y=0,activation:x=null}){const b=p.shape,C=v.texData.get(p.dataId),w=g.inChannels,N=b[0]*b[1]*b[2],T=g.outChannels,F=g.dataFormat==="channelsLast",S=!1,I=!1;let j;const D=[];if(k!=null){const P=a(k.shape,F);P!=null&&(k=(0,c.reshape)({inputs:{x:k},backend:v,attrs:{shape:P}}),D.push(k))}if(_!=null){const P=a(_.shape,F);P!=null&&(_=(0,c.reshape)({inputs:{x:_},backend:v,attrs:{shape:P}}),D.push(_))}if(!((N===1||T===1)&&w>o.MATMUL_SHARED_DIM_THRESHOLD)&&C.isPacked&&F&&C.texture!=null&&b[2]%2!=0&&r.util.arraysEqual(C.shape.slice(-3),b.slice(-3))){const P=b[0]*b[1]*(b[2]+1),R={dataId:p.dataId,shape:[1,P,g.inChannels],dtype:p.dtype},A=C.shape;C.shape=C.shape.slice(),C.shape[C.shape.length-2]++,r.util.assert(i.isReshapeFree(C.shape,R.shape),()=>`packed reshape ${C.shape} to ${R.shape} isn't free`);const z=(0,c.reshape)({inputs:{x:h},backend:v,attrs:{shape:[1,g.inChannels,g.outChannels]}});D.push(z);const G=(0,o.batchMatMulImpl)({a:R,b:z,backend:v,transposeA:S,transposeB:I,bias:_,activation:x,preluActivationWeights:k,leakyreluAlpha:y}),L=v.texData.get(G.dataId);r.util.assert(L.isPacked,()=>"batchMatMul result is expected to be packed"),C.shape=A,L.shape=g.outShape,j=(0,n.identity)({inputs:{x:G},backend:v}),j.shape=g.outShape,D.push(G)}else{const P=g.outHeight*g.outWidth,R=(0,c.reshape)({inputs:{x:p},backend:v,attrs:{shape:F?[g.batchSize,P,g.inChannels]:[g.batchSize,g.inChannels,P]}}),A=(0,c.reshape)({inputs:{x:h},backend:v,attrs:{shape:[1,g.inChannels,g.outChannels]}}),z=(0,o.batchMatMulImpl)({a:F?R:A,b:F?A:R,transposeA:!F,transposeB:I,backend:v,bias:_,activation:x,preluActivationWeights:k,leakyreluAlpha:y});j=(0,c.reshape)({inputs:{x:z},backend:v,attrs:{shape:g.outShape}}),D.push(R),D.push(A),D.push(z)}for(const P of D)v.disposeIntermediateTensorInfo(P);return j}function u({x:p,filter:h,convInfo:g,backend:v,bias:_=null,preluActivationWeights:k=null,leakyreluAlpha:y=0,activation:x=null}){const{filterWidth:b,filterHeight:C,inChannels:w,outWidth:N,outHeight:T,dataFormat:F}=g,S=F==="channelsLast",I=b*C*w,j=T*N,D=[g.batchSize,I,j],O=!0,$=!1,P=[];if(k!=null){const ee=a(k.shape,S);ee!=null&&(k=(0,c.reshape)({inputs:{x:k},backend:v,attrs:{shape:ee}}),P.push(k))}if(_!=null){const ee=a(_.shape,S);ee!=null&&(_=(0,c.reshape)({inputs:{x:_},backend:v,attrs:{shape:ee}}),P.push(_))}const R=(0,c.reshape)({inputs:{x:h},backend:v,attrs:{shape:[1,I,r.util.sizeFromShape(h.shape)/I]}});P.push(R);const A=new d.Im2ColPackedProgram(D,g),z=[p.shape,[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inChannels],[g.filterWidth*g.inChannels],[g.outWidth]],G=v.runWebGLProgram(A,[p],"float32",z),L=(0,c.reshape)({inputs:{x:G},backend:v,attrs:{shape:D}});P.push(G),P.push(L);const M=_!=null,V=k!=null,K=x==="leakyrelu",W=x?(0,m.mapActivationToShaderProgram)(x,!0):null,H=new f.MatMulPackedProgram(S?L.shape:R.shape,S?R.shape:L.shape,S?[g.batchSize,j,g.outChannels]:[g.batchSize,g.outChannels,j],O,$,M,W,V,K),Z=S?[L,R]:[R,L];if(_&&Z.push(_),V&&Z.push(k),K){const ee=v.makeTensorInfo([],"float32",r.util.createScalarValue(y,"float32"));Z.push(ee),P.push(ee)}const Q=v.runWebGLProgram(H,Z,"float32"),te=(0,c.reshape)({inputs:{x:Q},backend:v,attrs:{shape:g.outShape}});P.push(Q);for(const ee of P)v.disposeIntermediateTensorInfo(ee);return te}},{"@tensorflow/tfjs-core":"fqGP4","../im2col_packed_gpu":"4j02x","../kernel_utils/kernel_funcs_utils":"aPZb5","../mulmat_packed_gpu":"5l75P","../webgl_util":"kgdHT","./BatchMatMul_impl":"3GI0n","./Identity":"ctZJO","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4j02x":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Im2ColPackedProgram",()=>m);var r=e("./glsl_version"),d=e("./gpgpu_math");class m{constructor(i,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=i,this.enableShapeUniforms=(0,d.useShapeUniforms)(this.outputShape.length);const{dataFormat:n}=o,c=(0,r.getGlslDifferences)(),a=n==="channelsLast",l=a?1:2,u=a?2:3,p=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${i[2]} && pos < ${i[1]}) {`;let h="";for(let g=0;g<=1;g++)for(let v=0;v<=1;v++)h+=`
          blockIndex = rc.z + ${v};
          pos = rc.y + ${g};

          ${p}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${l}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${u}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${g*2+v}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${g*2+v}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${h}

        ${c.output} = result;
      }
    `}}},{"./glsl_version":"cgkMp","./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bLuSA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2DBackpropFilter",()=>m),t.export(s,"conv2DBackpropFilterConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../conv_backprop_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,dy:l}=o,{strides:u,pad:p,dataFormat:h,dimRoundingMode:g,filterShape:v}=c,_=r.backend_util.convertConv2DDataFormat(h),k=r.backend_util.computeConv2DInfo(a.shape,v,u,1,p,g,!1,_),y=new d.Conv2DDerFilterProgram(k);return n.runWebGLProgram(y,[a,l],"float32")}const f={kernelName:r.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../conv_backprop_gpu":"eBTTs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eBTTs:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Conv2DDerFilterProgram",()=>r),t.export(s,"Conv2DDerInputProgram",()=>d),t.export(s,"Conv3DDerFilterProgram",()=>m),t.export(s,"Conv3DDerInputProgram",()=>f);class r{constructor(o){this.variableNames=["x","dy"],this.outputShape=o.filterShape;const n=o.strideHeight,c=o.strideWidth,a=o.padInfo.top,l=o.padInfo.left,u=o.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${o.batchSize}; b++) {
          for (int yR = 0; yR < ${o.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${a};

            if (xR < 0 || xR >= ${o.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${o.outWidth}; yC++) {
              int xC = wC + yC * ${c} - ${l};

              if (xC < 0 || xC >= ${o.inWidth}) {
                continue;
              }

              ${u?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class d{constructor(o){this.variableNames=["dy","W"],this.outputShape=o.inShape;const n=o.filterHeight,c=o.filterWidth,a=o.strideHeight,l=o.strideWidth,u=o.dataFormat==="channelsLast",p=n-1-o.padInfo.top,h=c-1-o.padInfo.left,g=u?1:2,v=u?2:3,_=u?3:1;this.userCode=`
      const ivec2 pads = ivec2(${p}, ${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${_}];

        ivec2 dyCorner = ivec2(coords[${g}], coords[${v}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${o.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${c}; wC++) {
            float dyC = float(dyCCorner + wC) / ${l}.0;

            if (dyC < 0.0 || dyC >= ${o.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${c} - 1 - wC;

            for (int d2 = 0; d2 < ${o.outChannels}; d2++) {

              if (${u}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class m{constructor(o){this.variableNames=["x","dy"],this.outputShape=o.filterShape;const n=o.strideDepth,c=o.strideHeight,a=o.strideWidth,l=o.padInfo.front,u=o.padInfo.top,p=o.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${o.batchSize}; b++) {
          for (int yF = 0; yF < ${o.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${l};

            if (xF < 0 || xF >= ${o.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${o.outHeight}; yR++) {
              int xR = wR + yR * ${c} - ${u};

              if (xR < 0 || xR >= ${o.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${o.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${p};

                if (xC < 0 || xC >= ${o.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class f{constructor(o){this.variableNames=["dy","W"],this.outputShape=o.inShape;const n=o.filterDepth,c=o.filterHeight,a=o.filterWidth,l=o.strideDepth,u=o.strideHeight,p=o.strideWidth,h=n-1-o.padInfo.front,g=c-1-o.padInfo.top,v=a-1-o.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${g}, ${v});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${l}.0;

          if (dyF < 0.0 || dyF >= ${o.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${c}; wR++) {
            float dyR = float(dyRCorner + wR) / ${u}.0;

            if (dyR < 0.0 || dyR >= ${o.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${c} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${p}.0;

              if (dyC < 0.0 || dyC >= ${o.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${o.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bAyE0:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv2DBackpropInput",()=>f),t.export(s,"conv2DBackpropInputConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../conv_backprop_gpu"),m=e("../conv_backprop_packed_gpu");function f(o){const{inputs:n,backend:c,attrs:a}=o,{dy:l,filter:u}=n,{inputShape:p,strides:h,pad:g,dataFormat:v,dimRoundingMode:_}=a,k=r.backend_util.convertConv2DDataFormat(v),y=r.backend_util.computeConv2DInfo(p,u.shape,h,1,g,_,!1,k);if((0,r.env)().getBool("WEBGL_PACK")&&k==="channelsLast"){const x=[[y.strideHeight,y.strideWidth]],b=new m.Conv2DDerInputPackedProgram(y);return c.runWebGLProgram(b,[l,u],"float32",x)}else{const x=new d.Conv2DDerInputProgram(y);return c.runWebGLProgram(x,[l,u],"float32")}}const i={kernelName:r.Conv2DBackpropInput,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../conv_backprop_gpu":"eBTTs","../conv_backprop_packed_gpu":"6gDvt","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6gDvt":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Conv2DDerInputPackedProgram",()=>d);var r=e("./gpgpu_math");class d{constructor(f){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=f.inShape,this.enableShapeUniforms=(0,r.useShapeUniforms)(this.outputShape.length);const i=f.filterHeight,o=f.filterWidth,n=i-1-f.padInfo.top,c=o-1-f.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${i}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${f.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${i} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            int wCPerm = ${o} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${f.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${f.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${f.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${f.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${f.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}},{"./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kAnrn:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3D",()=>m),t.export(s,"conv3DConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../conv_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,filter:l}=o,{strides:u,pad:p,dilations:h}=c,g=r.backend_util.computeConv3DInfo(a.shape,l.shape,u,h,p),v=new d.Conv3DProgram(g);return n.runWebGLProgram(v,[a,l],"float32")}const f={kernelName:r.Conv3D,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../conv_gpu":"cpHaX","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aiO99:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3DBackpropFilterV2",()=>m),t.export(s,"conv3DBackpropFilterV2Config",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../conv_backprop_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,dy:l}=o,{strides:u,pad:p,filterShape:h}=c,g=r.backend_util.computeConv3DInfo(a.shape,h,u,1,p),v=new d.Conv3DDerFilterProgram(g);return n.runWebGLProgram(v,[a,l],"float32")}const f={kernelName:r.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../conv_backprop_gpu":"eBTTs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1qfLS":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"conv3DBackpropInput",()=>m),t.export(s,"conv3DBackpropInputConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../conv_backprop_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{dy:a,filter:l}=o,{pad:u,strides:p,inputShape:h}=c,g=r.backend_util.computeConv3DInfo(h,l.shape,p,1,u),v=new d.Conv3DDerInputProgram(g);return n.runWebGLProgram(v,[a,l],"float32")}const f={kernelName:r.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../conv_backprop_gpu":"eBTTs","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gEHGh:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cos",()=>o),t.export(s,"cosConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_packed_gpu"),m=e("../kernel_utils/kernel_funcs_utils");const f=m.CHECK_NAN_SNIPPET_UNARY+`
  return cos(x);
`,i=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${d.CHECK_NAN_SNIPPET_PACKED}
  return result;
`,o=(0,m.unaryKernelFunc)({opSnippet:f,packedOpSnippet:i}),n={kernelName:r.Cos,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_packed_gpu":"lSGsz","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9ZRO1":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cosh",()=>f),t.export(s,"coshConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Cosh,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"80ecx":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cropAndResize",()=>m),t.export(s,"cropAndResizeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../crop_and_resize_gpu");const m=i=>{const{inputs:o,backend:n,attrs:c}=i,{image:a,boxes:l,boxInd:u}=o,{cropSize:p,method:h,extrapolationValue:g}=c,v=new d.CropAndResizeProgram(a.shape,l.shape,p,h,g);return n.runWebGLProgram(v,[a,l,u],"float32")},f={kernelName:r.CropAndResize,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../crop_and_resize_gpu":"dX71B","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dX71B:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CropAndResizeProgram",()=>r);class r{constructor(m,f,i,o,n){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[c,a,l,u]=m,[p]=f,[h,g]=i;this.outputShape=[p,h,g,u];const v=o==="bilinear"?1:0,[_,k]=[`${a-1}.0`,`${l-1}.0`],[y,x,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${_} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${_}`],[C,w,N]=g>1?[`${(l-1)/(g-1)}`,"(x2-x1) * width_ratio",`x1*${k} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${k}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${C});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${c}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${w};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${_} ) {
          setOutput(float(${n}));
          return;
        }
        float in_x = ${N};
        if( in_x < 0.0 || in_x > ${k} ) {
          setOutput(float(${n}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${v} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9cMEu":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cumprod",()=>f),t.export(s,"cumprodConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cum_gpu"),m=e("./Cum_impl");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{axis:u,exclusive:p,reverse:h}=a;return(0,m.cumImpl)(d.CumOpType.Prod,l,c,u,p,h)}const i={kernelName:r.Cumprod,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cum_gpu":"kUY14","./Cum_impl":"bWvvL","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kUY14:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"CumOpType",()=>d),t.export(s,"CumProgram",()=>m);var r=e("./shader_compiler"),d;(function(o){o.Prod="*",o.Sum="+"})(d||(d={}));class m{constructor(n,c,a,l){this.op=n,this.outputShape=c,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const u=this.outputShape.length,p=this.op===d.Prod?"1.0":"0.0",h=a?p:`getX(${f(u,"coords",this.op)})`,g=this.outputShape[this.outputShape.length-1];let v="",_="";a?(v=l?`end != ${g-1}`:"end != 0",_=l?"end + 1":"end - 1"):(v=l?`end + pow2 < ${g}`:"end >= pow2",_=l?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${(0,r.getCoordsDataType)(u)} coords = getOutputCoords();
        int end = ${i(u,"coords",this.op)};
        float val = ${h};
        int pow2 = int(pow(2.0, index));
        if (${v}) {
          int idx = ${_};
          ${i(u,"coords",this.op)} = idx;
          val ${this.op}= getX(${f(u,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function f(o,n,c){if(o===1)return`${n}`;if(o===2)return`${n}.x, ${n}.y`;if(o===3)return`${n}.x, ${n}.y, ${n}.z`;if(o===4)return`${n}.x, ${n}.y, ${n}.z, ${n}.w`;throw new Error(`Cumulative ${c} for rank ${o} is not yet supported`)}function i(o,n,c){if(o===1)return`${n}`;if(o===2)return`${n}.y`;if(o===3)return`${n}.z`;if(o===4)return`${n}.w`;throw new Error(`Cumulative ${c} for rank ${o} is not yet supported`)}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bWvvL:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cumImpl",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cum_gpu"),m=e("./Identity"),f=e("./Transpose");function i(o,n,c,a,l,u){const p=n.shape.length,h=r.backend_util.getAxesPermutation([a],p);let g=n;h!=null&&(g=(0,f.transpose)({inputs:{x:n},backend:c,attrs:{perm:h}}));const v=r.backend_util.getInnerMostAxes(1,p)[0];if(v!==p-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${n.shape.length-1} but got axis=${a}`);const _=g.shape[v];let k=(0,m.identity)({inputs:{x:g},backend:c});for(let y=0;y<=Math.ceil(Math.log2(_))-1;y++){const x=new d.CumProgram(o,g.shape,!1,u),b=[[y]],C=k;k=c.runWebGLProgram(x,[k],k.dtype,b),c.disposeIntermediateTensorInfo(C)}if(l){const y=new d.CumProgram(o,g.shape,l,u),x=k;k=c.runWebGLProgram(y,[k],k.dtype),c.disposeIntermediateTensorInfo(x)}if(h!=null){const y=r.backend_util.getUndoAxesPermutation(h),x=(0,f.transpose)({inputs:{x:k},backend:c,attrs:{perm:y}});return c.disposeIntermediateTensorInfo(k),c.disposeIntermediateTensorInfo(g),x}return k}},{"@tensorflow/tfjs-core":"fqGP4","../cum_gpu":"kUY14","./Identity":"ctZJO","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],j9vnd:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"cumsum",()=>f),t.export(s,"cumsumConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../cum_gpu"),m=e("./Cum_impl");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{axis:u,exclusive:p,reverse:h}=a;return(0,m.cumImpl)(d.CumOpType.Sum,l,c,u,p,h)}const i={kernelName:r.Cumsum,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../cum_gpu":"kUY14","./Cum_impl":"bWvvL","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3FCc5":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"denseBincount",()=>m),t.export(s,"denseBincountConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,weights:l}=o,{size:u,binaryOutput:p}=c;if(a.shape.length===1){const h=n.readSync(a.dataId),g=n.readSync(l.dataId),v=(0,d.bincountImplCPU)(h,g,l.dtype,l.shape,u);return n.makeTensorInfo([u],l.dtype,v)}else if(a.shape.length===2){const h=n.bufferSync(a),g=n.bufferSync(l),v=(0,d.bincountReduceImplCPU)(h,g,u,p);return n.makeTensorInfo(v.shape,l.dtype,v.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const f={kernelName:r.DenseBincount,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],k3K1s:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthToSpace",()=>m),t.export(s,"depthToSpaceConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../depth_to_space_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{blockSize:l,dataFormat:u}=c,p=a.shape[0],h=u==="NHWC"?a.shape[1]:a.shape[2],g=u==="NHWC"?a.shape[2]:a.shape[3],v=u==="NHWC"?a.shape[3]:a.shape[1],_=h*l,k=g*l,y=v/(l*l),x=u==="NHWC"?[p,_,k,y]:[p,y,_,k],b=new d.DepthToSpaceProgram(x,l,u);return n.runWebGLProgram(b,[a],a.dtype)}const f={kernelName:r.DepthToSpace,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../depth_to_space_gpu":"jNLJ5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jNLJ5:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DepthToSpaceProgram",()=>r);class r{constructor(m,f,i){this.variableNames=["x"],this.outputShape=[],this.outputShape=m,this.blockSize=f,this.dataFormat=i,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${f};
      int offset_h = imod(h, ${f});
      int in_w = w / ${f};
      int offset_w = imod(w, ${f});
      int offset_d = (offset_h * ${f} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5Nxgg":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNative",()=>f),t.export(s,"depthwiseConv2dNativeConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../conv_gpu_depthwise"),m=e("../conv_packed_gpu_depthwise");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l,filter:u}=n,{strides:p,pad:h,dilations:g,dimRoundingMode:v}=a;let _=g;_==null&&(_=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(p,_),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${_}'`);const k=r.backend_util.computeConv2DInfo(l.shape,u.shape,p,_,h,v,!0);let y;(0,r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&k.strideWidth<=2&&k.outChannels/k.inChannels==1?y=new m.DepthwiseConvPacked2DProgram(k):y=new d.DepthwiseConv2DProgram(k);const x=[[k.padInfo.top,k.padInfo.left],[k.strideHeight,k.strideWidth],[k.dilationHeight,k.dilationWidth],[k.inHeight,k.inWidth]];return c.runWebGLProgram(y,[l,u],"float32",x)}const i={kernelName:r.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../conv_gpu_depthwise":"gnoUb","../conv_packed_gpu_depthwise":"fObTM","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gnoUb:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DepthwiseConv2DProgram",()=>d);var r=e("./gpgpu_math");class d{constructor(f,i=!1,o=null,n=!1,c=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=f.outShape,this.enableShapeUniforms=(0,r.useShapeUniforms)(this.outputShape.length);const a=f.filterHeight,l=f.filterWidth,u=f.outChannels/f.inChannels;let p="",h="";o&&(n?p=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:c?p=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:p=`
          float activation(float x) {
            ${o}
          }
        `,h="result = activation(result);");const g=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${g}
        ${h}
        setOutput(result);
      }
    `}}},{"./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fObTM:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DepthwiseConvPacked2DProgram",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./gpgpu_math");class m{constructor(i,o=!1,n=null,c=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=i.outShape,this.enableShapeUniforms=(0,d.useShapeUniforms)(this.outputShape.length);const l=i.outChannels/i.inChannels,u=i.padInfo.left,p=i.strideWidth,h=i.dilationWidth,g=i.filterHeight,v=i.filterWidth,_=v;let k=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let C=0;C<v;C++)k+=`
          vec4 xTexelC${C*2};
          int xTexelC${C*2}Ready;
          vec4 xTexelC${C*2+1};
          int xTexelC${C*2+1}Ready;
          vec4 xC${C};`;k+=`
    for (int r = 0; r < ${g}; r++) {
      `;for(let C=0;C<v;C++)k+=`
          xTexelC${C*2} = vec4(0.0);
          xTexelC${C*2}Ready = 0;
          xTexelC${C*2+1} = vec4(0.0);
          xTexelC${C*2+1}Ready = 0;
          xC${C} = vec4(0.0);`;k+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let C=0;C<(_+1)/2;C++){const w=C*2;if(k+=`
          xC = xCCorner + ${w*h};
          `,p===1){if(w<v&&(u%2==1?(k+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }
              `,h===1&&w>0?k+=`
                xC${w} = vec4(xTexelC${w-2}.zw, xTexelC${w}.xy);
                `:k+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${w} = vec4(previous.zw, xTexelC${w}.xy);
                  } else {
                    xC${w} = vec4(0.0, 0.0, xTexelC${w}.xy);
                  }
                  `):k+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xC${w} = xTexelC${w};
                `,w+1<v)){const N=u%2==0?r.util.nearestLargerEven(h):h;h%2==0&&u%2==1||h%2!=0&&u%2!=1?(k+=`
                  xCOffset = xC + imod(pads[1], 2) + ${N};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                    xTexelC${w+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${w+1}.zw = vec2(0.0);
                    }
                    xTexelC${w+1}Ready = 1;
                  }
                  `,h>1?k+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${w+1} = vec4(previous.zw, xTexelC${w+1}.xy);
                    } else {
                     xC${w+1} = vec4(0.0, 0.0, xTexelC${w+1}.xy);
                    }
                    `:k+=`
                    xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.xy);
                    `):N===1?k+=`
                    xC${w+1} = xTexelC${w};
                    `:k+=`
                    xCOffset = xC + ${N};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                      xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${w+1}.zw = vec2(0.0);
                      }
                      xTexelC${w+1}Ready = 1;
                    }

                    xC${w+1} = xTexelC${w+1};
                    `}}else w<v&&(u%2==1?(k+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.0);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
              `,w+1<v&&(k+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${w+1} = vec4(xTexelC${w+1}.xy, final.xy);
                `)):(k+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(
                  xTexelC${w}.xy, xTexelC${w+1}.xy);
              `,w+1<v&&(k+=`
                  xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
                `)));w<v&&(k+=`
            wTexel = getW(r, ${w}, d1, q);
            dotProd += xC${w} * vec4(wTexel.xz, wTexel.xz);
          `,w+1<v&&(k+=`
              wTexel = getW(r, ${w+1}, d1, q);
              dotProd += xC${w+1} * vec4(wTexel.xz, wTexel.xz);
            `))}k+=`
    }
  `,k+=`
      }
    `;let y="",x="";n&&(c?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`vec4 activation(vec4 x) {
          ${n}
        }`,x="result = activation(result);");const b=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${k}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${b}
        ${x}
        setOutput(result);
      }
    `}}},{"@tensorflow/tfjs-core":"fqGP4","./gpgpu_math":"axk0P","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lHgmY:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNativeBackpropFilter",()=>m),t.export(s,"depthwiseConv2dNativeBackpropFilterConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../conv_backprop_gpu_depthwise");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a,dy:l}=o,{strides:u,dilations:p,pad:h,dimRoundingMode:g,filterShape:v}=c,_=r.backend_util.computeConv2DInfo(a.shape,v,u,p,h,g,!0),k=new d.DepthwiseConv2DDerFilterProgram(_);return n.runWebGLProgram(k,[a,l],"float32")}const f={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../conv_backprop_gpu_depthwise":"kpI2V","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kpI2V:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DepthwiseConv2DDerFilterProgram",()=>r),t.export(s,"DepthwiseConv2DDerInputProgram",()=>d);class r{constructor(f){this.variableNames=["x","dy"],this.outputShape=f.filterShape;const i=f.strideHeight,o=f.strideWidth,n=f.padInfo.top,c=f.padInfo.left,a=f.outChannels/f.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${f.batchSize}; b++) {
          for (int yR = 0; yR < ${f.outHeight}; yR++) {
            int xR = wR + yR * ${i} - ${n};

            if (xR < 0 || xR >= ${f.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${f.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${c};

              if (xC < 0 || xC >= ${f.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class d{constructor(f){this.variableNames=["dy","W"],this.outputShape=f.inShape;const i=f.filterHeight,o=f.filterWidth,n=f.strideHeight,c=f.strideWidth,a=i-1-f.padInfo.top,l=o-1-f.padInfo.left,u=f.outChannels/f.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${i}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${f.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${i} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${c}.0;

            if (dyC < 0.0 || dyC >= ${f.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6k0oH":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"depthwiseConv2dNativeBackpropInput",()=>m),t.export(s,"depthwiseConv2dNativeBackpropInputConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../conv_backprop_gpu_depthwise");function m(i){const{inputs:o,backend:n,attrs:c}=i,{dy:a,filter:l}=o,{strides:u,dilations:p,pad:h,dimRoundingMode:g,inputShape:v}=c,_=r.backend_util.computeConv2DInfo(v,l.shape,u,p,h,g,!0),k=new d.DepthwiseConv2DDerInputProgram(_);return n.runWebGLProgram(k,[a,l],"float32")}const f={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../conv_backprop_gpu_depthwise":"kpI2V","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bjnrl:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"diag",()=>f),t.export(s,"diagConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../diag_gpu"),m=e("./Reshape");function f(o){const{inputs:n,backend:c}=o,{x:a}=n,l=[...a.shape,...a.shape],u=r.util.sizeFromShape(a.shape),p=(0,m.reshape)({inputs:{x:a},backend:c,attrs:{shape:[u]}}),h=new d.DiagProgram(u),g=c.runWebGLProgram(h,[p],p.dtype),v=(0,m.reshape)({inputs:{x:g},backend:c,attrs:{shape:l}});return c.disposeIntermediateTensorInfo(p),c.disposeIntermediateTensorInfo(g),v}const i={kernelName:r.Diag,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../diag_gpu":"3YBbu","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3YBbu":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"DiagProgram",()=>r);class r{constructor(m){this.variableNames=["X"],this.outputShape=[m,m],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cFehT:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"dilation2D",()=>f),t.export(s,"dilation2DConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../dilation_gpu"),m=e("./Reshape");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l,filter:u}=n,{strides:p,pad:h,dilations:g}=a,v=r.backend_util.computeDilation2DInfo(l.shape,u.shape,p,h,"NHWC",g);let _;const k=new d.Dilation2DProgram(v);_=c.runWebGLProgram(k,[l,u],"float32");const y=(0,m.reshape)({inputs:{x:_},backend:c,attrs:{shape:v.outShape}});return c.disposeIntermediateTensorInfo(_),y}const i={kernelName:r.Dilation2D,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../dilation_gpu":"1E02x","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1E02x":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"Dilation2DProgram",()=>r);class r{constructor(m){this.variableNames=["x","W"],this.outputShape=m.outShape;const{inHeight:f,inWidth:i,padInfo:o,strideHeight:n,strideWidth:c,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:p}=m,{top:h,left:g}=o;this.userCode=`
      const ivec2 strides = ivec2(${n}, ${c});
      const ivec2 pads = ivec2(${h}, ${g});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${f}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${i}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d7rhz:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"einsum",()=>o),t.export(s,"einsumConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("./Multiply"),m=e("./Reshape"),f=e("./Sum"),i=e("./Transpose");function o(c){const{inputs:a,backend:l,attrs:u}=c,{equation:p}=u,h=a,{allDims:g,summedDims:v,idDims:_}=r.backend_util.decodeEinsumEquation(p,h.length);r.backend_util.checkEinsumDimSizes(g.length,_,h);const{path:k,steps:y}=r.backend_util.getEinsumComputePath(v,_),x=y.length;let b=null,C=g.length;const w=[];for(let N=0;N<x;++N){for(const T of y[N]){const{permutationIndices:F,expandDims:S}=r.backend_util.getEinsumPermutation(C,_[T]);let I;r.backend_util.isIdentityPermutation(F)?I=h[T]:(I=(0,i.transpose)({inputs:{x:h[T]},backend:l,attrs:{perm:F}}),w.push(I));const j=I.shape.slice();for(let D=0;D<S.length;++D)j.splice(S[D],0,1);r.util.arraysEqual(I.shape,j)||(I=(0,m.reshape)({inputs:{x:I},backend:l,attrs:{shape:j}}),w.push(I)),b===null?b=I:(b=(0,d.multiply)({inputs:{a:I,b},backend:l}),w.push(b))}N<x-1&&(k[N]>=0&&(b=(0,f.sum)({inputs:{x:b},backend:l,attrs:{axis:k[N]-(g.length-C),keepDims:!1}}),w.push(b)),C--)}for(const N of w)N!==b&&l.disposeIntermediateTensorInfo(N);return b}const n={kernelName:r.Einsum,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","./Multiply":"1IvtJ","./Reshape":"layh9","./Sum":"2E1i9","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],h7Ai4:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"eluConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return (x >= 0.0) ? x : (exp(x) - 1.0);",f=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,i=(0,d.unaryKernelFunc)({opSnippet:m,packedOpSnippet:f}),o={kernelName:r.Elu,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bvoCO:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"eluGrad",()=>o),t.export(s,"eluGradConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_gpu"),m=e("../binaryop_packed_gpu");const f="return (b >= 0.0) ? a : a * (b + 1.0);",i=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,o=c=>{const{inputs:a,backend:l}=c,{dy:u,y:p}=a,h=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new m.BinaryOpPackedProgram(i,u.shape,p.shape):new d.BinaryOpProgram(f,u.shape,p.shape);return l.runWebGLProgram(h,[u,p],u.dtype)},n={kernelName:r.EluGrad,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1kSbv":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"equal",()=>o),t.export(s,"equalConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f=`
  return vec4(equal(a, b));
`,i="return float(a == b);",o=(0,d.binaryKernelFunc)({opSnippet:i,packedOpSnippet:f,dtype:"bool",cpuKernelImpl:m.equalImplCPU}),n={kernelName:r.Equal,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aFhWT:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"erf",()=>f),t.export(s,"erfConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${r.backend_util.ERF_P};
  float a1 = ${r.backend_util.ERF_A1};
  float a2 = ${r.backend_util.ERF_A2};
  float a3 = ${r.backend_util.ERF_A3};
  float a4 = ${r.backend_util.ERF_A4};
  float a5 = ${r.backend_util.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Erf,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fKo1O:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"EXP",()=>f),t.export(s,"exp",()=>o),t.export(s,"expConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f=d.CHECK_NAN_SNIPPET_UNARY+`
  return exp(x);
`,i=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:i,cpuKernelImpl:m.expImplCPU,dtype:"float32"}),n={kernelName:r.Exp,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6TNeB":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expandDims",()=>m),t.export(s,"expandDimsConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Reshape");function m(i){const{inputs:o,attrs:n,backend:c}=i,{dim:a}=n,{input:l}=o,u=l.shape.length,p=l.shape.slice();let h=a;return a<0&&(r.util.assert(-(u+1)<=a,()=>`Axis must be in the interval [${-(u+1)}, ${u}]`),h=u+a+1),p.splice(h,0,1),(0,d.reshape)({inputs:{x:l},backend:c,attrs:{shape:p}})}const f={kernelName:r.ExpandDims,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5p9Jz":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"expm1",()=>i),t.export(s,"expm1Config",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return exp(x) - 1.0;",i=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:f,cpuKernelImpl:m.expm1ImplCPU}),o={kernelName:r.Expm1,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6oztV":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fft",()=>m),t.export(s,"fftConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./FFT_impl");function m(i){const{inputs:o,backend:n}=i,{input:c}=o;return(0,d.fftImpl)(c,!1,n)}const f={kernelName:r.FFT,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./FFT_impl":"gV4sw","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gV4sw:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fftImpl",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../fft_gpu"),m=e("./Complex"),f=e("./Reshape");function i(o,n,c){const a=c.texData.get(o.dataId),l=r.util.sizeFromShape(o.shape),u=o.shape[o.shape.length-1],p=l/u,h=(0,f.reshape)({inputs:{x:o},backend:c,attrs:{shape:[p,u]}}),g=h.shape,v=new d.FFTProgram("real",g,n),_=new d.FFTProgram("imag",g,n),k=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:g},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:g}],y=c.runWebGLProgram(v,k,"float32"),x=c.runWebGLProgram(_,k,"float32"),b=(0,m.complex)({inputs:{real:y,imag:x},backend:c});c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(x);const C=(0,f.reshape)({inputs:{x:b},backend:c,attrs:{shape:o.shape}});return c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(b),C}},{"@tensorflow/tfjs-core":"fqGP4","../fft_gpu":"dJApI","./Complex":"6eJf7","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dJApI:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"FFTProgram",()=>r);class r{constructor(m,f,i){this.variableNames=["real","imag"];const o=f[1];this.outputShape=f;const n=i?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,c=i?`${o}.0`:"1.0";let a;if(m==="real")a="return real * expR - imag * expI;";else if(m==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${m}.`);this.userCode=`
      const float exponentMultiplier = ${n};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${c};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cA4rO:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fill",()=>m),t.export(s,"fillConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../fill_gpu");function m(i){const{backend:o,attrs:n}=i,{shape:c,value:a}=n;let{dtype:l}=n;if(l=l||r.util.inferDtype(a),l==="string"){const u=r.util.getArrayFromDType(l,r.util.sizeFromShape(c));return u.fill(a),o.makeTensorInfo(c,l,u)}else{const u=new d.FillProgram(c,a),p=[[a]];return o.runWebGLProgram(u,[],l,p)}}const f={kernelName:r.Fill,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../fill_gpu":"50Kq3","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"50Kq3":[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"FillProgram",()=>r);class r{constructor(m,f){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=m,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4to2B":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"flipLeftRightConfig",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("../flip_left_right_gpu");const m={kernelName:r.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:f,backend:i})=>{const{image:o}=f,n=i,c=new d.FlipLeftRightProgram(o.shape);return n.runWebGLProgram(c,[o],o.dtype)}}},{"@tensorflow/tfjs-core":"fqGP4","../flip_left_right_gpu":"8bzAS","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8bzAS":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"FlipLeftRightProgram",()=>r);class r{constructor(m){this.variableNames=["Image"],this.outputShape=[];const f=m[2];this.outputShape=m,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${f} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${f}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dQ21E:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"floor",()=>i),t.export(s,"floorConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return floor(x);",i=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:f,cpuKernelImpl:m.floorImplCPU}),o={kernelName:r.Floor,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7nzz4":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"floorDiv",()=>i),t.export(s,"floorDivConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,f=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,i=(0,d.binaryKernelFunc)({opSnippet:m,packedOpSnippet:f,dtype:"int32"}),o={kernelName:r.FloorDiv,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],OYnzc:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fromPixelsConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../tex_util"),m=e("./FromPixels_utils/from_pixels_gpu"),f=e("./FromPixels_utils/from_pixels_packed_gpu");const i={kernelName:r.FromPixels,backendName:"webgl",kernelFunc:c};let o,n=(0,r.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function c(a){const{inputs:l,backend:u,attrs:p}=a;let{pixels:h}=l;const{numChannels:g}=p,v=typeof HTMLVideoElement!="undefined"&&h instanceof HTMLVideoElement,_=typeof HTMLImageElement!="undefined"&&h instanceof HTMLImageElement,[k,y]=v?[h.videoWidth,h.videoHeight]:[h.width,h.height],x=[y,k],b=[y,k,g];if(_||v){const T=(0,r.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(o==null||T!==n)&&(n=T,o=document.createElement("canvas").getContext("2d",{willReadFrequently:n})),o.canvas.width=k,o.canvas.height=y,o.drawImage(h,0,0,k,y),h=o.canvas}const C=u.makeTensorInfo(x,"int32");u.texData.get(C.dataId).usage=d.TextureUsage.PIXELS,u.gpgpu.uploadPixelDataToTexture(u.getTexture(C.dataId),h);const w=(0,r.env)().getBool("WEBGL_PACK")?new f.FromPixelsPackedProgram(b):new m.FromPixelsProgram(b),N=u.runWebGLProgram(w,[C],"int32");return u.disposeData(C.dataId),N}},{"@tensorflow/tfjs-core":"fqGP4","../tex_util":"6noJs","./FromPixels_utils/from_pixels_gpu":"18Tdj","./FromPixels_utils/from_pixels_packed_gpu":"6GAgt","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"18Tdj":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"FromPixelsProgram",()=>d);var r=e("../../glsl_version");class d{constructor(f){this.variableNames=["A"];const i=(0,r.getGlslDifferences)(),[o,n]=f;this.outputShape=f,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${i.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}},{"../../glsl_version":"cgkMp","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6GAgt":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"FromPixelsPackedProgram",()=>d);var r=e("../../glsl_version");class d{constructor(f){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const i=(0,r.getGlslDifferences)(),[o,n]=f;this.outputShape=f,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${i.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${i.output} = result;
      }
    `}}},{"../../glsl_version":"cgkMp","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"28BAd":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fusedConv2d",()=>n),t.export(s,"fusedConv2DConfig",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("../conv_gpu"),m=e("../conv_packed_gpu"),f=e("../kernel_utils/kernel_funcs_utils"),i=e("./Conv2D_impl"),o=e("./Reshape");function n(a){const{inputs:l,backend:u,attrs:p}=a,{x:h,filter:g,bias:v,preluActivationWeights:_}=l,{strides:k,pad:y,dataFormat:x,dilations:b,dimRoundingMode:C,activation:w,leakyreluAlpha:N}=p,T=r.backend_util.convertConv2DDataFormat(x),F=r.backend_util.computeConv2DInfo(h.shape,g.shape,k,b,y,C,!1,T);let S;const I=[],j=v!=null,D=_!=null,O=w==="leakyrelu",$=()=>{const R=[h,g],A=(z,G)=>{if(G==="NCHW"&&z.shape.length===1&&z.shape[0]!==1){const L=(0,o.reshape)({inputs:{x:z},backend:u,attrs:{shape:[z.shape[0],1,1]}});return I.push(L),L}return z};if(j&&R.push(A(v,x)),D&&R.push(A(_,x)),O){const z=u.makeTensorInfo([],"float32",r.util.createScalarValue(N,"float32"));R.push(z),I.push(z)}return R};if(F.filterHeight===1&&F.filterWidth===1&&F.dilationHeight===1&&F.dilationWidth===1&&F.strideHeight===1&&F.strideWidth===1&&(F.padInfo.type==="SAME"||F.padInfo.type==="VALID"))S=(0,i.conv2dByMatMul)({x:h,filter:g,convInfo:F,backend:u,bias:v,activation:w,preluActivationWeights:_,leakyreluAlpha:N});else if(F.strideWidth<=2&&T==="channelsLast"&&(0,r.env)().getBool("WEBGL_EXP_CONV")){const R=w?(0,f.mapActivationToShaderProgram)(w,!0):null,A=new m.Conv2DPackedProgram(F,j,R,D,O),z=[[F.padInfo.top,F.padInfo.left],[F.strideHeight,F.strideWidth],[F.dilationHeight,F.dilationWidth],[F.inHeight,F.inWidth]],G=$();S=u.runWebGLProgram(A,G,"float32",z)}else if((0,r.env)().getBool("WEBGL_CONV_IM2COL"))S=(0,i.conv2dWithIm2Row)({x:h,filter:g,convInfo:F,backend:u,bias:v,activation:w,preluActivationWeights:_,leakyreluAlpha:N});else{const R=w?(0,f.mapActivationToShaderProgram)(w,!1):null,A=new d.Conv2DProgram(F,j,R,D,O),z=$();S=u.runWebGLProgram(A,z,"float32")}const P=(0,o.reshape)({inputs:{x:S},backend:u,attrs:{shape:F.outShape}});return I.push(S),I.forEach(R=>u.disposeIntermediateTensorInfo(R)),P}const c={kernelName:r.FusedConv2D,backendName:"webgl",kernelFunc:n}},{"@tensorflow/tfjs-core":"fqGP4","../conv_gpu":"cpHaX","../conv_packed_gpu":"eaTqN","../kernel_utils/kernel_funcs_utils":"aPZb5","./Conv2D_impl":"47nsB","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ghBA0:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"fusedDepthwiseConv2D",()=>i),t.export(s,"fusedDepthwiseConv2DConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../conv_gpu_depthwise"),m=e("../conv_packed_gpu_depthwise"),f=e("../kernel_utils/kernel_funcs_utils");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u,filter:p,bias:h,preluActivationWeights:g}=c,{strides:v,pad:_,dilations:k,dimRoundingMode:y,activation:x,leakyreluAlpha:b}=l,C=[];let w=k;w==null&&(w=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(v,w),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${v} and dilations '${w}'`);const N=r.backend_util.computeConv2DInfo(u.shape,p.shape,v,w,_,y,!0),T=(0,r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&N.strideWidth<=2&&N.outChannels/N.inChannels==1,F=x?(0,f.mapActivationToShaderProgram)(x,T):null,S=[u,p],I=h!=null,j=g!=null,D=x==="leakyrelu";if(I&&S.push(h),j&&S.push(g),D){const R=a.makeTensorInfo([],"float32",r.util.createScalarValue(b,"float32"));S.push(R),C.push(R)}let O;T?O=new m.DepthwiseConvPacked2DProgram(N,I,F,j,D):O=new d.DepthwiseConv2DProgram(N,I,F,j,D);const $=[[N.padInfo.top,N.padInfo.left],[N.strideHeight,N.strideWidth],[N.dilationHeight,N.dilationWidth],[N.inHeight,N.inWidth]],P=a.runWebGLProgram(O,S,"float32",$);return C.forEach(R=>a.disposeIntermediateTensorInfo(R)),P}const o={kernelName:r.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../conv_gpu_depthwise":"gnoUb","../conv_packed_gpu_depthwise":"fObTM","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lzd67:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gatherNd",()=>i),t.export(s,"gatherNdConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../gather_nd_gpu"),m=e("../kernel_utils/shared"),f=e("./Reshape");function i(n){const{inputs:c,backend:a}=n,{params:l,indices:u}=c,p=u.shape,h=p[p.length-1],g=r.util.sizeFromShape(l.shape),[v,_,k,y]=r.backend_util.prepareAndValidate(l,u),x=(0,f.reshape)({inputs:{x:u},backend:a,attrs:{shape:[_,h]}}),b=(0,f.reshape)({inputs:{x:l},backend:a,attrs:{shape:[r.util.sizeFromShape(l.shape)/k,k]}});if(a.shouldExecuteOnCPU([l,u])||l.dtype==="string"){const T=a.readSync(u.dataId),F=a.bufferSync(l),S=(0,m.gatherNdImplCPU)(T,F,l.dtype,_,h,k,y,l.shape,g);return a.makeTensorInfo(v,l.dtype,S.values)}const C=new d.GatherNDProgram(h,y,[_,k],l.shape),w=a.runWebGLProgram(C,[b,x],b.dtype),N=(0,f.reshape)({inputs:{x:w},backend:a,attrs:{shape:v}});return a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(w),N}const o={kernelName:r.GatherNd,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../gather_nd_gpu":"1zEto","../kernel_utils/shared":"6qOzI","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1zEto":[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"GatherNDProgram",()=>d);var r=e("./shader_compiler");class d{constructor(f,i,o,n){this.sliceDim=f,this.strides=i,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;const c=(0,r.getCoordsDataType)(o.length);let a=`
    int index;`;for(let l=0;l<this.sliceDim;l++)a+=`
          index = round(getIndices(coords[0], ${l}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[l]};
          flattenIndex += index * ${this.strides[l]};`;this.userCode=`
         void main() {
          ${c} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],geLYj:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"gatherV2",()=>i),t.export(s,"gatherV2Config",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../gather_gpu"),m=e("../kernel_utils/shared"),f=e("./Reshape");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u,indices:p}=c,{axis:h,batchDims:g}=l,v=r.util.parseAxisParam(h,u.shape)[0];if((0,r.env)().get("DEBUG")){const F=a.readSync(p.dataId),S=u.shape[v];for(let I=0;I<F.length;++I){const j=F[I];r.util.assert(j<=S-1&&j>=0,()=>`GatherV2: the index value ${j} is not in [0, ${S-1}]`)}}const _=r.backend_util.segment_util.collectGatherOpShapeInfo(u,p,v,g),k=r.util.sizeFromShape(p.shape),y=[],x=(0,f.reshape)({inputs:{x:u},backend:a,attrs:{shape:[_.batchSize,_.outerSize,_.dimSize,_.sliceSize]}}),b=(0,f.reshape)({inputs:{x:p},backend:a,attrs:{shape:[_.batchSize,k/_.batchSize]}});y.push(x),y.push(b);const C=[_.batchSize,_.outerSize,k/_.batchSize,_.sliceSize];if(a.shouldExecuteOnCPU([u,p])||u.dtype==="string"){const F=a.bufferSync(b),S=a.bufferSync(x),I=(0,m.gatherV2ImplCPU)(S,F,C);return y.forEach(j=>a.disposeIntermediateTensorInfo(j)),a.makeTensorInfo(_.outputShape,I.dtype,I.values)}const w=new d.GatherProgram(x.shape,C),N=a.runWebGLProgram(w,[x,b],x.dtype);y.push(N);const T=(0,f.reshape)({inputs:{x:N},backend:a,attrs:{shape:_.outputShape}});return y.forEach(F=>a.disposeIntermediateTensorInfo(F)),T}const o={kernelName:r.GatherV2,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../gather_gpu":"hJveQ","../kernel_utils/shared":"6qOzI","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hJveQ:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"GatherProgram",()=>d);var r=e("./shader_compiler");class d{constructor(i,o){this.variableNames=["A","indices"],this.outputShape=o,this.rank=o.length;const n=(0,r.getCoordsDataType)(this.rank),c=m(i,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${i[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${c}));
      }
    `}}function m(f,i){const o=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let c=0;c<f.length;c++)c===2?n.push("index"):n.push(`${o[c]}`);return n.join()}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2rjWO":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"greater",()=>o),t.export(s,"greaterConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return float(a > b);",i=`
  return vec4(greaterThan(a, b));
`,o=(0,d.binaryKernelFunc)({opSnippet:f,packedOpSnippet:i,cpuKernelImpl:m.greaterImplCPU,dtype:"bool"}),n={kernelName:r.Greater,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],oXgup:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"greaterEqual",()=>o),t.export(s,"greaterEqualConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return float(a >= b);",i=`
  return vec4(greaterThanEqual(a, b));
`,o=(0,d.binaryKernelFunc)({opSnippet:f,packedOpSnippet:i,dtype:"bool",cpuKernelImpl:m.greaterEqualImplCPU}),n={kernelName:r.GreaterEqual,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fKr3Z:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ifft",()=>m),t.export(s,"ifftConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./FFT_impl");function m(i){const{inputs:o,backend:n}=i,{input:c}=o;return(0,d.fftImpl)(c,!0,n)}const f={kernelName:r.IFFT,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./FFT_impl":"gV4sw","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cDW7e:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isFinite",()=>f),t.export(s,"isFiniteConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return float(!isnan(x) && !isinf(x));",f=(0,d.unaryKernelFunc)({opSnippet:m,dtype:"bool"}),i={kernelName:r.IsFinite,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7T4az":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isInf",()=>f),t.export(s,"isInfConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return float(isinf(x));",f=(0,d.unaryKernelFunc)({opSnippet:m,dtype:"bool"}),i={kernelName:r.IsInf,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5FRGw":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"isNaN",()=>f),t.export(s,"isNaNConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return float(isnan(x));",f=(0,d.unaryKernelFunc)({opSnippet:m,dtype:"bool"}),i={kernelName:r.IsNan,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],a2wlL:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"less",()=>o),t.export(s,"lessConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return float(a < b);",i=`
  return vec4(lessThan(a, b));
`,o=(0,d.binaryKernelFunc)({opSnippet:f,packedOpSnippet:i,cpuKernelImpl:m.lessImplCPU,dtype:"bool"}),n={kernelName:r.Less,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bLjum:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"LESS_EQUAL",()=>f),t.export(s,"LESS_EQUAL_PACKED",()=>i),t.export(s,"lessEqual",()=>o),t.export(s,"lessEqualConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return float(a <= b);",i=`
  return vec4(lessThanEqual(a, b));
`,o=(0,d.binaryKernelFunc)({opSnippet:f,packedOpSnippet:i,cpuKernelImpl:m.lessEqualImplCPU,dtype:"bool"}),n={kernelName:r.LessEqual,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lWe9r:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"linSpace",()=>m),t.export(s,"linSpaceConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{backend:o,attrs:n}=i,{start:c,stop:a,num:l}=n,u=(0,d.linSpaceImplCPU)(c,a,l);return o.makeTensorInfo([u.length],"float32",u)}const f={kernelName:r.LinSpace,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ke1lf:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"log",()=>o),t.export(s,"logConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f=d.CHECK_NAN_SNIPPET_UNARY+`
  return x < 0.0 ? 0./0. : log(x);
`,i=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,o=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:i,cpuKernelImpl:m.logImplCPU}),n={kernelName:r.Log,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eYGsc:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"log1p",()=>f),t.export(s,"log1pConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=d.CHECK_NAN_SNIPPET_UNARY+`
  return log(1.0 + x);
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Log1p,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lCz7W:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalAnd",()=>i),t.export(s,"logicalAndConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return float(a >= 1.0 && b >= 1.0);",f=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,i=(0,d.binaryKernelFunc)({opSnippet:m,packedOpSnippet:f,dtype:"bool"}),o={kernelName:r.LogicalAnd,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iWFcL:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalNot",()=>f),t.export(s,"logicalNotConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return float(!(x >= 1.0));",f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.LogicalNot,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d5x0Z:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"logicalOr",()=>i),t.export(s,"logicalOrConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return float(a >= 1.0 || b >= 1.0);",f=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,i=(0,d.binaryKernelFunc)({opSnippet:m,packedOpSnippet:f,dtype:"bool"}),o={kernelName:r.LogicalOr,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3nW4Z":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lrn",()=>f),t.export(s,"LRNConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../lrn_gpu"),m=e("../lrn_packed_gpu");const f=o=>{const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{depthRadius:u,bias:p,alpha:h,beta:g}=a,v=(0,r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new m.LRNPackedProgram(l.shape,u,p,h,g):new d.LRNProgram(l.shape,u,p,h,g);return c.runWebGLProgram(v,[l],l.dtype)},i={kernelName:r.LRN,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../lrn_gpu":"aVygP","../lrn_packed_gpu":"eORAU","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aVygP:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"LRNProgram",()=>r);class r{constructor(m,f,i,o,n){this.variableNames=["x"],this.outputShape=[];const c=f,a=m[3]-1;this.outputShape=m;let l;const u=`float(${i}) + float(${o}) * sum`;n===.5?l=`inversesqrt(${u})`:n===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${c}; j <= ${c}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eORAU:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"LRNPackedProgram",()=>r);class r{constructor(m,f,i,o,n){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const c=f,a=m[3]-1;this.outputShape=m;let l;const u=`float(${i}) + float(${o}) * sum`;n===.5?l=`inversesqrt(${u})`:n===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${c};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${c}; j <= ${c}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gB9RA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"lrnGrad",()=>m),t.export(s,"LRNGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../lrn_grad_gpu");const m=i=>{const{inputs:o,backend:n,attrs:c}=i,{x:a,y:l,dy:u}=o,{depthRadius:p,bias:h,alpha:g,beta:v}=c,_=new d.LRNGradProgram(a.shape,p,h,g,v);return n.runWebGLProgram(_,[a,l,u],a.dtype)},f={kernelName:r.LRNGrad,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../lrn_grad_gpu":"1S7Pw","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1S7Pw":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"LRNGradProgram",()=>r);class r{constructor(m,f,i,o,n){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=m,this.depth=m[3],this.depthRadius=f,this.bias=i,this.alpha=o,this.beta=n,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${f})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${f} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${i});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${n})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${n});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5QqBz":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"max",()=>i),t.export(s,"maxConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("./Max_impl"),f=e("./Transpose_impl");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{reductionIndices:p,keepDims:h}=l,g=u.shape.length,v=r.util.parseAxisParam(p,u.shape);let _=v;const k=r.backend_util.getAxesPermutation(_,g),y=k!=null,x=a.shouldExecuteOnCPU([u]);let b=u;if(y){if(x){const S=a.texData.get(b.dataId).values,I=new Array(g);for(let O=0;O<I.length;O++)I[O]=u.shape[k[O]];const j=(0,f.transposeImplCPU)(S,u.shape,u.dtype,k,I);b=a.makeTensorInfo(I,u.dtype);const D=a.texData.get(b.dataId);D.values=j}else b=(0,f.transposeImpl)(u,k,a);_=r.backend_util.getInnerMostAxes(_.length,g)}r.backend_util.assertAxesAreInnerMostDims("max",_,g);const[C,w]=r.backend_util.computeOutAndReduceShapes(b.shape,_);let N=C;h&&(N=r.backend_util.expandShapeToKeepDim(C,v));let T;if(x){const S=a.texData.get(b.dataId).values,I=(0,d.maxImplCPU)(S,r.util.sizeFromShape(w),N,u.dtype);T=a.makeTensorInfo(N,u.dtype);const j=a.texData.get(T.dataId);j.values=I}else T=(0,m.maxImpl)(b,w,N,a);return y&&a.disposeIntermediateTensorInfo(b),T}const o={kernelName:r.Max,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","./Max_impl":"ckkNi","./Transpose_impl":"488H7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ckkNi:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxImpl",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/reduce"),m=e("../kernels/Reshape");function f(i,o,n,c){const a=r.util.sizeFromShape(o),u=r.util.sizeFromShape(i.shape)/a,p=(0,m.reshape)({inputs:{x:i},attrs:{shape:[u,a]},backend:c}),h=(0,d.reduce)(p,i.dtype,"max",c),g=(0,m.reshape)({inputs:{x:h},attrs:{shape:n},backend:c});return c.disposeIntermediateTensorInfo(p),c.disposeIntermediateTensorInfo(h),g}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/reduce":"6iMLb","../kernels/Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8vRkL":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maximum",()=>c),t.export(s,"maximumConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_gpu"),m=e("../binaryop_packed_gpu"),f=e("../kernel_utils/kernel_funcs_utils"),i=e("../kernel_utils/shared");const o=d.CHECK_NAN_SNIPPET+`
  return max(a, b);
`,n=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+m.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,c=(0,f.binaryKernelFunc)({opSnippet:o,packedOpSnippet:n,cpuKernelImpl:i.maximumImplCPU}),a={kernelName:r.Maximum,backendName:"webgl",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2058D":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool",()=>i),t.export(s,"maxPoolConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../pool_gpu"),m=e("../webgl_util"),f=e("./Identity");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c;(0,m.assertNotComplex)(u,"maxPool");const{filterSize:p,strides:h,pad:g,dimRoundingMode:v}=l,_=1;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(h,_),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${_}'`);const k=r.backend_util.computePool2DInfo(u.shape,p,h,_,g,v);if(k.filterWidth===1&&k.filterHeight===1&&r.util.arraysEqual(k.inShape,k.outShape))return(0,f.identity)({inputs:{x:u},backend:a});const y=new d.Pool2DProgram(k,"max",!1);return a.runWebGLProgram(y,[u],u.dtype)}const o={kernelName:r.MaxPool,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../pool_gpu":"bdv90","../webgl_util":"kgdHT","./Identity":"ctZJO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],etZ4F:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool3d",()=>m),t.export(s,"maxPool3DConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../pool_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{filterSize:l,strides:u,pad:p,dataFormat:h,dimRoundingMode:g}=c,v=[1,1,1],_=r.backend_util.computePool3DInfo(a.shape,l,u,v,p,g,h),k=new d.Pool3DProgram(_,"max",!1);return n.runWebGLProgram(k,[a],a.dtype)}const f={kernelName:r.MaxPool3D,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../pool_gpu":"bdv90","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9nbW4":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPool3DGrad",()=>f),t.export(s,"maxPool3DGradConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../max_pool_backprop_gpu"),m=e("../pool_gpu");function f(o){const{inputs:n,backend:c,attrs:a}=o,{dy:l,input:u}=n,p=u,{filterSize:h,strides:g,pad:v,dimRoundingMode:_}=a,k=[1,1,1],y=r.backend_util.computePool3DInfo(p.shape,h,g,k,v,_),x=new m.Pool3DProgram(y,"max",!0),b=c.runWebGLProgram(x,[p],p.dtype),C=new d.MaxPool3DBackpropProgram(y),w=c.runWebGLProgram(C,[l,b],p.dtype);return c.disposeIntermediateTensorInfo(b),w}const i={kernelName:r.MaxPool3DGrad,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../max_pool_backprop_gpu":"kEQDI","../pool_gpu":"bdv90","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kEQDI:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MaxPool2DBackpropProgram",()=>r),t.export(s,"MaxPool3DBackpropProgram",()=>d);class r{constructor(f){this.variableNames=["dy","maxPos"],this.outputShape=f.inShape;const i=f.strideHeight,o=f.strideWidth,n=f.dilationHeight,c=f.effectiveFilterHeight,a=f.effectiveFilterWidth,l=c-1-f.padInfo.top,u=a-1-f.padInfo.left,p=c*a-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${f.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${f.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${p} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class d{constructor(f){this.variableNames=["dy","maxPos"],this.outputShape=f.inShape;const i=f.strideDepth,o=f.strideHeight,n=f.strideWidth,c=f.dilationDepth,a=f.dilationHeight,l=f.dilationWidth,u=f.effectiveFilterDepth,p=f.effectiveFilterHeight,h=f.effectiveFilterWidth,g=u-1-f.padInfo.front,v=p-1-f.padInfo.top,_=h-1-f.padInfo.left,k=u*p*h-1;this.userCode=`
      const ivec3 pads = ivec3(${g}, ${v}, ${_});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${f.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${f.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${f.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${k} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${p} * ${h} +
                  wR * ${h} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],gS77c:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolGrad",()=>i),t.export(s,"maxPoolGradConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../max_pool_backprop_gpu"),m=e("../pool_gpu"),f=e("../webgl_util");function i(n){const{inputs:c,backend:a,attrs:l}=n,{dy:u,input:p,output:h}=c,g=p;(0,f.assertNotComplex)([p,h],"maxPoolGrad");const{filterSize:v,strides:_,pad:k,dimRoundingMode:y}=l,x=r.backend_util.computePool2DInfo(g.shape,v,_,1,k,y),b=!0,C=new m.Pool2DProgram(x,"max",b),w=a.runWebGLProgram(C,[g],g.dtype),N=new d.MaxPool2DBackpropProgram(x),T=a.runWebGLProgram(N,[u,w],g.dtype);return a.disposeIntermediateTensorInfo(w),T}const o={kernelName:r.MaxPoolGrad,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../max_pool_backprop_gpu":"kEQDI","../pool_gpu":"bdv90","../webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lHI0E:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolWithArgmaxConfig",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("./MaxPoolWithArgmax_impl");const m={kernelName:r.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:f,attrs:i,backend:o})=>{const{x:n}=f,{filterSize:c,strides:a,pad:l,includeBatchInIndex:u}=i,p=o;r.util.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);const h=[1,1];r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(a,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const g=r.backend_util.computePool2DInfo(n.shape,c,a,h,l),[v,_]=(0,d.maxPoolWithArgmaxImpl)(n,u,g,p);return[v,_]}}},{"@tensorflow/tfjs-core":"fqGP4","./MaxPoolWithArgmax_impl":"kDpa7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kDpa7:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"maxPoolWithArgmaxImpl",()=>d);var r=e("../pool_gpu");function d(m,f,i,o){let n=new r.Pool2DProgram(i,"max",!1);const c=o.runWebGLProgram(n,[m],"float32");n=new r.Pool2DProgram(i,"max",!0,!0,f);const a=o.runWebGLProgram(n,[m],"float32");return[c,a]}},{"../pool_gpu":"bdv90","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7Sotr":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"meanConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Mean_impl"),m=e("./Transpose_impl");const f={kernelName:r.Mean,backendName:"webgl",kernelFunc:({inputs:i,attrs:o,backend:n})=>{const{x:c}=i,{keepDims:a,axis:l}=o,u=n,p=c.shape.length,h=r.util.parseAxisParam(l,c.shape);let g=h;const v=r.backend_util.getAxesPermutation(g,p),_=v!=null,k=u.shouldExecuteOnCPU([c]),y=[];let x=c;if(_){if(k){const F=u.texData.get(x.dataId).values,S=new Array(p);for(let D=0;D<S.length;D++)S[D]=c.shape[v[D]];const I=(0,m.transposeImplCPU)(F,c.shape,c.dtype,v,S);x=u.makeTensorInfo(S,c.dtype);const j=u.texData.get(x.dataId);j.values=I}else x=(0,m.transposeImpl)(c,v,u);y.push(x),g=r.backend_util.getInnerMostAxes(g.length,p)}r.backend_util.assertAxesAreInnerMostDims("sum",g,p);const[b,C]=r.backend_util.computeOutAndReduceShapes(x.shape,g);let w=b;a&&(w=r.backend_util.expandShapeToKeepDim(b,h));const N=(0,d.meanImpl)(x,C,w,u);for(const T of y)u.disposeIntermediateTensorInfo(T);return N}}},{"@tensorflow/tfjs-core":"fqGP4","./Mean_impl":"2ZC0A","./Transpose_impl":"488H7","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2ZC0A":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"meanImpl",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/reduce"),m=e("../kernels/Reshape");function f(i,o,n,c){const a=r.util.sizeFromShape(o),u=r.util.sizeFromShape(i.shape)/a,p=(0,m.reshape)({inputs:{x:i},attrs:{shape:[u,a]},backend:c}),h=(0,d.reduce)(p,"float32","mean",c),g=(0,m.reshape)({inputs:{x:h},attrs:{shape:n},backend:c});return c.disposeIntermediateTensorInfo(p),c.disposeIntermediateTensorInfo(h),g}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/reduce":"6iMLb","../kernels/Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d4qfa:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"min",()=>i),t.export(s,"minConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/reduce"),m=e("./Reshape"),f=e("./Transpose");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{axis:p,keepDims:h}=l,g=u.shape.length,v=r.util.parseAxisParam(p,u.shape);let _=v;const k=r.backend_util.getAxesPermutation(_,g);let y=u;k!=null&&(y=(0,f.transpose)({inputs:{x:u},backend:a,attrs:{perm:k}}),_=r.backend_util.getInnerMostAxes(_.length,u.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",_,g);const[x,b]=r.backend_util.computeOutAndReduceShapes(y.shape,_),C=r.util.sizeFromShape(b),w=(0,m.reshape)({inputs:{x:y},backend:a,attrs:{shape:[-1,C]}}),N=(0,d.reduce)(w,w.dtype,"min",a);let T;if(h){const F=r.backend_util.expandShapeToKeepDim(x,v);T=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:F}})}else T=(0,m.reshape)({inputs:{x:N},backend:a,attrs:{shape:x}});return a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),k!=null&&a.disposeIntermediateTensorInfo(y),T}const o={kernelName:r.Min,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/reduce":"6iMLb","./Reshape":"layh9","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9W2ij":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"minimum",()=>c),t.export(s,"minimumConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_gpu"),m=e("../binaryop_packed_gpu"),f=e("../kernel_utils/kernel_funcs_utils"),i=e("../kernel_utils/shared");const o=d.CHECK_NAN_SNIPPET+`
  return min(a, b);
`,n=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+m.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,c=(0,f.binaryKernelFunc)({opSnippet:o,packedOpSnippet:n,cpuKernelImpl:i.minimumImplCPU}),a={kernelName:r.Minimum,backendName:"webgl",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_gpu":"6OHKG","../binaryop_packed_gpu":"lSGsz","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"12juQ":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mirrorPadKernelFunc",()=>f),t.export(s,"mirrorPadConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../mirror_pad_gpu"),m=e("../mirror_pad_packed_gpu");const f=({inputs:o,backend:n,attrs:c})=>{const{x:a}=o,{paddings:l,mode:u}=c,p=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new m.MirrorPadPackedProgram(a.shape,l,u):new d.MirrorPadProgram(a.shape,l,u);return n.runWebGLProgram(p,[a],a.dtype)},i={kernelName:r.MirrorPad,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../mirror_pad_gpu":"Q9FEF","../mirror_pad_packed_gpu":"cJm44","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],Q9FEF:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MirrorPadProgram",()=>d);var r=e("./shader_compiler");class d{constructor(f,i,o){this.variableNames=["x"],this.outputShape=i.map((h,g)=>h[0]+f[g]+h[1]);const n=f.length,c=(0,r.getCoordsDataType)(n),a=i.map(h=>h[0]).join(","),l=i.map((h,g)=>h[0]+f[g]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),p=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${a};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${p};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${p};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${c} start = ${c}(${a});
      ${c} end = ${c}(${l});

      void main() {
        ${c} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${p};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${p};
          }
        }
        ${c} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cJm44:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MirrorPadPackedProgram",()=>m);var r=e("./packing_util"),d=e("./shader_compiler");class m{constructor(i,o,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.map((y,x)=>y[0]+i[x]+y[1]);const c=i.length,a=(0,d.getCoordsDataType)(c),l=o.map(y=>y[0]).join(","),u=o.map((y,x)=>y[0]+i[x]).join(","),p=(0,r.getChannels)("rc",c),h=(0,r.getChannels)("source",c),g=`${p[c-1]} < ${this.outputShape[c-1]}`,v=c===1?"source":`vec2(${h.slice(-2).join()})`,_=n==="reflect"?0:1;let k="";if(c===1){const y=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${_};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${_};
        }
        source -= start;
      `;k=`
        ${a} rc = outputLoc;
        ${y}
        result[0] = getChannel(getX(${h.join()}), ${v});
        ${p[c-1]} += 1;
        if(${g}) {
          ${y}
          result[1] = getChannel(getX(${h.join()}), ${v});
        }
      `}else{const y=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${_}) +
                gte * ((end - 1) * 2 - source + ${_});
        source -= start;
      `;k=`
        ${a} rc = outputLoc;
        ${y}
        result[0] = getChannel(getX(${h.join()}), ${v});
        ${p[c-1]} += 1;
        if(${g}) {
          ${y}
          result[1] = getChannel(getX(${h.join()}), ${v});
        }
        rc = outputLoc;
        ${p[c-2]} += 1;
        if(${p[c-2]} < ${this.outputShape[c-2]}) {
          ${y}
          result[2] = getChannel(getX(${h.join()}), ${v});
          ${p[c-1]} += 1;
          if(${g}) {
            ${y}
            result[3] = getChannel(getX(${h.join()}), ${v});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${l});
      const ${a} end = ${a}(${u});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${k}
        setOutput(result);
      }
    `}}},{"./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cDCnA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"mod",()=>o),t.export(s,"modConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_packed_gpu"),m=e("../kernel_utils/kernel_funcs_utils");const f=`if (b == 0.0) return NAN;
  return mod(a, b);`,i=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+d.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,o=(0,m.binaryKernelFunc)({opSnippet:f,packedOpSnippet:i}),n={kernelName:r.Mod,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_packed_gpu":"lSGsz","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],f2ZUA:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"multinomial",()=>f),t.export(s,"multinomialConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../multinomial_gpu"),m=e("./Softmax");function f(o){const{inputs:n,backend:c,attrs:a}=o,{logits:l}=n,{numSamples:u,seed:p,normalized:h}=a,g=h?l:(0,m.softmax)({inputs:{logits:l},backend:c,attrs:{dim:l.shape.length-1}}),v=g.shape[0],_=g.shape[1],k=new d.MultinomialProgram(v,_,u),y=[[p]],x=c.runWebGLProgram(k,[g],"int32",y);return h||c.disposeIntermediateTensorInfo(g),x}const i={kernelName:r.Multinomial,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../multinomial_gpu":"7oMyL","./Softmax":"41u3j","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7oMyL":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"MultinomialProgram",()=>r);class r{constructor(m,f,i){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[m,i],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${f-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${f-1}));
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"41u3j":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softmax",()=>c),t.export(s,"softmaxConfig",()=>a);var r=e("@tensorflow/tfjs-core"),d=e("./Exp"),m=e("./Max"),f=e("./RealDiv"),i=e("./Reshape"),o=e("./Sub"),n=e("./Sum");function c(l){const{inputs:u,backend:p,attrs:h}=l,{logits:g}=u,{dim:v}=h,_=r.util.parseAxisParam([v],g.shape),k=(0,m.max)({inputs:{x:g},backend:p,attrs:{reductionIndices:_,keepDims:!1}}),y=r.backend_util.expandShapeToKeepDim(k.shape,_),x=(0,i.reshape)({inputs:{x:k},backend:p,attrs:{shape:y}}),b=(0,o.sub)({inputs:{a:g,b:x},backend:p}),C=(0,d.exp)({inputs:{x:b},backend:p}),w=(0,n.sum)({inputs:{x:C},backend:p,attrs:{axis:_,keepDims:!1}}),N=(0,i.reshape)({inputs:{x:w},backend:p,attrs:{shape:y}}),T=(0,f.realDiv)({inputs:{a:C,b:N},backend:p});return p.disposeIntermediateTensorInfo(k),p.disposeIntermediateTensorInfo(x),p.disposeIntermediateTensorInfo(b),p.disposeIntermediateTensorInfo(C),p.disposeIntermediateTensorInfo(w),p.disposeIntermediateTensorInfo(N),T}const a={kernelName:r.Softmax,backendName:"webgl",kernelFunc:c}},{"@tensorflow/tfjs-core":"fqGP4","./Exp":"fKo1O","./Max":"5QqBz","./RealDiv":"cM0Gs","./Reshape":"layh9","./Sub":"fVrk1","./Sum":"2E1i9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cM0Gs:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"realDiv",()=>i),t.export(s,"realDivConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
if (a == b) {
  return 1.0;
};
return a / b;`,f=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,i=(0,d.binaryKernelFunc)({opSnippet:m,packedOpSnippet:f,checkOutOfBounds:!0}),o={kernelName:r.RealDiv,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fVrk1:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sub",()=>i),t.export(s,"subConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return a - b;",i=(0,d.binaryKernelFunc)({opSnippet:f,packedOpSnippet:f,supportsComplex:!0,cpuKernelImpl:m.subImplCPU}),o={kernelName:r.Sub,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aeohU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"neg",()=>n),t.export(s,"negConfig",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../unaryop_gpu"),f=e("../unaryop_packed_gpu");const i=m.CHECK_NAN_SNIPPET+`
  return -x;
`,o=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function n(a){const{inputs:l,backend:u}=a,{x:p}=l;if(u.shouldExecuteOnCPU([p])){const g=u.texData.get(p.dataId),[v,_]=(0,d.negImplCPU)(g.values,p.shape,p.dtype);return u.makeTensorInfo(_,p.dtype,v)}let h;return(0,r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?h=new f.UnaryOpPackedProgram(p.shape,o):h=new m.UnaryOpProgram(p.shape,i),u.runWebGLProgram(h,[p],p.dtype)}const c={kernelName:r.Neg,backendName:"webgl",kernelFunc:n}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../unaryop_gpu":"7L5LN","../unaryop_packed_gpu":"iiBam","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8E3eH":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionV3",()=>m),t.export(s,"nonMaxSuppressionV3Config",()=>f);var r=e("@tensorflow/tfjs-core");const d=r.kernel_impls.nonMaxSuppressionV3Impl;function m(i){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:o,backend:n,attrs:c}=i,{boxes:a,scores:l}=o,{maxOutputSize:u,iouThreshold:p,scoreThreshold:h}=c,g=n.readSync(a.dataId),v=n.readSync(l.dataId),{selectedIndices:_}=d(g,v,u,p,h);return n.makeTensorInfo([_.length],"int32",new Int32Array(_))}const f={kernelName:r.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fIZVu:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionV4",()=>m),t.export(s,"nonMaxSuppressionV4Config",()=>f);var r=e("@tensorflow/tfjs-core");const d=r.kernel_impls.nonMaxSuppressionV4Impl;function m(i){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:o,backend:n,attrs:c}=i,{boxes:a,scores:l}=o,{maxOutputSize:u,iouThreshold:p,scoreThreshold:h,padToMaxOutputSize:g}=c,v=n.readSync(a.dataId),_=n.readSync(l.dataId),{selectedIndices:k,validOutputs:y}=d(v,_,u,p,h,g);return[n.makeTensorInfo([k.length],"int32",new Int32Array(k)),n.makeTensorInfo([],"int32",new Int32Array([y]))]}const f={kernelName:r.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4YOQC":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"nonMaxSuppressionV5",()=>m),t.export(s,"nonMaxSuppressionV5Config",()=>f);var r=e("@tensorflow/tfjs-core");const d=r.kernel_impls.nonMaxSuppressionV5Impl;function m(i){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:o,backend:n,attrs:c}=i,{boxes:a,scores:l}=o,{maxOutputSize:u,iouThreshold:p,scoreThreshold:h,softNmsSigma:g}=c,v=n.readSync(a.dataId),_=n.readSync(l.dataId),k=u,y=p,x=h,b=g,{selectedIndices:C,selectedScores:w}=d(v,_,k,y,x,b);return[n.makeTensorInfo([C.length],"int32",new Int32Array(C)),n.makeTensorInfo([w.length],"float32",new Float32Array(w))]}const f={kernelName:r.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"67VlA":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"oneHot",()=>f),t.export(s,"oneHotConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../onehot_gpu"),m=e("./Reshape");const f=o=>{const{inputs:n,backend:c,attrs:a}=o,{indices:l}=n,{dtype:u,depth:p,onValue:h,offValue:g}=a,v=r.util.sizeFromShape(l.shape),_=new d.OneHotProgram(v,p,h,g),k=(0,m.reshape)({inputs:{x:l},backend:c,attrs:{shape:[v]}}),y=c.runWebGLProgram(_,[k],u);c.disposeIntermediateTensorInfo(k);const x=[...l.shape,p],b=(0,m.reshape)({inputs:{x:y},backend:c,attrs:{shape:x}});return c.disposeIntermediateTensorInfo(y),b},i={kernelName:r.OneHot,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../onehot_gpu":"lVnnS","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lVnnS:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"OneHotProgram",()=>r);class r{constructor(m,f,i,o){this.variableNames=["indices"],this.outputShape=[m,f],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${i}),
                      float(index == coords.y)));
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kbSOm:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"onesLike",()=>n),t.export(s,"onesLikeConfig",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("./Complex"),m=e("./Fill"),f=e("./Imag"),i=e("./Real"),o=e("./ZerosLike");function n(a){const{inputs:l,backend:u}=a,{x:p}=l;if(p.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(p.dtype==="complex64"){const h=(0,i.real)({inputs:{input:p},backend:u}),g=n({inputs:{x:h},backend:u}),v=(0,f.imag)({inputs:{input:p},backend:u}),_=(0,o.zerosLike)({inputs:{x:v},backend:u}),k=(0,d.complex)({inputs:{real:g,imag:_},backend:u});return u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(_),k}else return(0,m.fill)({attrs:{shape:p.shape,dtype:p.dtype,value:1},backend:u})}const c={kernelName:r.OnesLike,backendName:"webgl",kernelFunc:n}},{"@tensorflow/tfjs-core":"fqGP4","./Complex":"6eJf7","./Fill":"cA4rO","./Imag":"g6X0m","./Real":"dFXIe","./ZerosLike":"1PWOe","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1PWOe":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"zerosLike",()=>o),t.export(s,"zerosLikeConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("./Complex"),m=e("./Fill"),f=e("./Imag"),i=e("./Real");function o(c){const{inputs:a,backend:l}=c,{x:u}=a;if(u.dtype==="complex64"){const p=(0,i.real)({inputs:{input:u},backend:l}),h=o({inputs:{x:p},backend:l}),g=(0,f.imag)({inputs:{input:u},backend:l}),v=o({inputs:{x:g},backend:l}),_=(0,d.complex)({inputs:{real:h,imag:v},backend:l});return l.disposeIntermediateTensorInfo(p),l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(v),_}else return(0,m.fill)({attrs:{shape:u.shape,dtype:u.dtype,value:u.dtype==="string"?"":0},backend:l})}const n={kernelName:r.ZerosLike,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","./Complex":"6eJf7","./Fill":"cA4rO","./Imag":"g6X0m","./Real":"dFXIe","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],f8n9c:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pack",()=>f),t.export(s,"packConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("./Concat"),m=e("./ExpandDims");function f(o){const{inputs:n,backend:c,attrs:a}=o,{axis:l}=a;if(n.length===1)return(0,m.expandDims)({inputs:{input:n[0]},backend:c,attrs:{dim:l}});const u=n[0].shape,p=n[0].dtype;n.forEach(_=>{r.util.assertShapesMatch(u,_.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(p===_.dtype,()=>"All tensors passed to stack must have matching dtypes")});const h=[],g=n.map(_=>{const k=(0,m.expandDims)({inputs:{input:_},backend:c,attrs:{dim:l}});return h.push(k),k}),v=(0,d.concat)({inputs:g,backend:c,attrs:{axis:l}});return h.forEach(_=>c.disposeIntermediateTensorInfo(_)),v}const i={kernelName:r.Pack,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","./Concat":"4UO0b","./ExpandDims":"6TNeB","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5u7fL":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"padV2",()=>i),t.export(s,"padV2Config",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../pad_gpu"),m=e("../pad_packed_gpu"),f=e("./Fill");const i=n=>{const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{paddings:p,constantValue:h}=l;if(r.util.sizeFromShape(u.shape)===0){const _=p.map((k,y)=>k[0]+u.shape[y]+k[1]);return(0,f.fill)({backend:a,attrs:{shape:_,value:h,dtype:u.dtype}})}const g=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new m.PadPackedProgram(u.shape,p,h):new d.PadProgram(u.shape,p,h),v=[[h]];return a.runWebGLProgram(g,[u],u.dtype,v)},o={kernelName:r.PadV2,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../pad_gpu":"dE0Vf","../pad_packed_gpu":"dAAVz","./Fill":"cA4rO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dE0Vf:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"PadProgram",()=>d);var r=e("./shader_compiler");class d{constructor(f,i,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=i.map((p,h)=>p[0]+f[h]+p[1]);const n=f.length,c=(0,r.getCoordsDataType)(n),a=i.map(p=>p[0]).join(","),l=i.map((p,h)=>p[0]+f[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${a};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${c} start = ${c}(${a});
      ${c} end = ${c}(${l});

      void main() {
        ${c} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${c} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dAAVz:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"PadPackedProgram",()=>m);var r=e("./packing_util"),d=e("./shader_compiler");class m{constructor(i,o,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=o.map((x,b)=>x[0]+i[b]+x[1]);const c=i.length,a=(0,d.getCoordsDataType)(c),l=o.map(x=>x[0]).join(","),u=o.map((x,b)=>x[0]+i[b]).join(","),p=(0,r.getChannels)("rc",c),h=(0,r.getChannels)("source",c),g=`${p[c-1]} < ${this.outputShape[c-1]}`,v=c===1?"source":`vec2(${h.slice(-2).join()})`,_=[`${a} rc = outputLoc;`,`${p[c-1]} += 1;
       if(${g}) {
      `,c===1?"":`}
       rc = outputLoc;
       ${p[c-2]} += 1;
       if(${p[c-2]} < ${this.outputShape[c-2]}) {`,c===1?"":`  ${p[c-1]} += 1;
         if(${g}) {`],k=c===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let y="";for(let x=0,b=c===1?2:4;x<b;x++)y+=`
        ${_[x]}
        if (${k}) {
          result[${x}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${x}] = getChannel(getX(${h.join()}), ${v});
        }
      `;y+=c===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${l});
      const ${a} end = ${a}(${u});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}},{"./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bUjDi:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"pow",()=>o),t.export(s,"powConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_packed_gpu"),m=e("../kernel_utils/kernel_funcs_utils");const f=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,i=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+d.CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,o=(0,m.binaryKernelFunc)({opSnippet:f,packedOpSnippet:i}),n={kernelName:r.Pow,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_packed_gpu":"lSGsz","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],avOxn:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"prod",()=>o),t.export(s,"prodConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/reduce"),m=e("../kernel_utils/shared"),f=e("./Reshape"),i=e("./Transpose");function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p}=a,{axis:h,keepDims:g}=u,v=p.shape.length,_=[],k=r.util.parseAxisParam(h,p.shape);let y=k;const x=r.backend_util.getAxesPermutation(y,v);let b=p;x!=null&&(b=(0,i.transpose)({inputs:{x:p},backend:l,attrs:{perm:x}}),y=r.backend_util.getInnerMostAxes(y.length,v),_.push(b)),r.backend_util.assertAxesAreInnerMostDims("prod",y,v);let C;if(l.shouldExecuteOnCPU([b])){const w=l.texData.get(b.dataId).values,{outVals:N,outShape:T,outDtype:F}=(0,m.prodImplCPU)(b.shape,b.dtype,w,y);C=l.makeTensorInfo(T,F,N)}else{const[w,N]=r.backend_util.computeOutAndReduceShapes(b.shape,y),T=r.util.sizeFromShape(N),F=(0,f.reshape)({inputs:{x:b},backend:l,attrs:{shape:[-1,T]}}),S=(0,r.sumOutType)(p.dtype),I=(0,d.reduce)(F,S,"prod",l);C=(0,f.reshape)({inputs:{x:I},backend:l,attrs:{shape:w}}),_.push(F),_.push(I)}if(g){_.push(C);const w=r.backend_util.expandShapeToKeepDim(C.shape,k);C=(0,f.reshape)({inputs:{x:C},backend:l,attrs:{shape:w}})}return _.forEach(w=>l.disposeIntermediateTensorInfo(w)),C}const n={kernelName:r.Prod,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/reduce":"6iMLb","../kernel_utils/shared":"6qOzI","./Reshape":"layh9","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1tC08":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedGather",()=>m),t.export(s,"raggedGatherConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n,attrs:c}=i,{paramsNestedSplits:a,paramsDenseValues:l,indices:u}=o,{outputRaggedRank:p}=c,h=a.map(w=>n.readSync(w.dataId)),g=a.map(w=>w.shape),v=n.readSync(l.dataId),_=n.readSync(u.dataId),[k,y,x]=(0,d.raggedGatherImplCPU)(h,g,v,l.shape,l.dtype,_,u.shape,p),b=k.map(w=>n.makeTensorInfo([w.length],"int32",w)),C=n.makeTensorInfo(x,l.dtype,y);return b.concat([C])}const f={kernelName:r.RaggedGather,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7dwyN":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedRange",()=>m),t.export(s,"raggedRangeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n}=i,{starts:c,limits:a,deltas:l}=o,u=n.readSync(c.dataId),p=n.readSync(a.dataId),h=n.readSync(l.dataId),[g,v]=(0,d.raggedRangeImplCPU)(u,c.shape,c.dtype,p,a.shape,h,l.shape),_=n.makeTensorInfo([g.length],"int32",g),k=n.makeTensorInfo([v.length],c.dtype,v);return[_,k]}const f={kernelName:r.RaggedRange,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aH7QI:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"raggedTensorToTensor",()=>m),t.export(s,"raggedTensorToTensorConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n,attrs:c}=i,{shape:a,values:l,defaultValue:u,rowPartitionTensors:p}=o,{rowPartitionTypes:h}=c,g=n.readSync(a.dataId),v=n.readSync(l.dataId),_=n.readSync(u.dataId),k=p.map(C=>n.readSync(C.dataId)),y=p.map(C=>C.shape),[x,b]=(0,d.raggedTensorToTensorImplCPU)(g,a.shape,v,l.shape,l.dtype,_,u.shape,k,y,h);return n.makeTensorInfo(x,l.dtype,b)}const f={kernelName:r.RaggedTensorToTensor,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6CyBu":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"range",()=>m),t.export(s,"rangeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");const m=i=>{const{backend:o,attrs:n}=i,{start:c,stop:a,step:l,dtype:u}=n,p=(0,d.rangeImplCPU)(c,a,l,u);return o.makeTensorInfo([p.length],u,p)},f={kernelName:r.Range,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8vANs":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reciprocal",()=>f),t.export(s,"reciprocalConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return 1.0 / x;",f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Reciprocal,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2sBIx":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"relu",()=>o),t.export(s,"reluConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../unaryop_gpu");const f=m.CHECK_NAN_SNIPPET+`
  return (x < 0.0) ? 0.0 : x;
`,i=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:i}),n={kernelName:r.Relu,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eqhDD:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"relu6",()=>o),t.export(s,"relu6Config",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../unaryop_gpu");const f=m.CHECK_NAN_SNIPPET+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,i=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:i}),n={kernelName:r.Relu6,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iusy7:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeBilinear",()=>f),t.export(s,"resizeBilinearConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../resize_bilinear_gpu"),m=e("../resize_bilinear_packed_gpu");function f(o){const{inputs:n,backend:c,attrs:a}=o,{images:l}=n,{alignCorners:u,halfPixelCenters:p,size:h}=a,[g,v]=h,_=(0,r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new m.ResizeBilinearPackedProgram(l.shape,g,v,u,p):new d.ResizeBilinearProgram(l.shape,g,v,u,p);return c.runWebGLProgram(_,[l],"float32")}const i={kernelName:r.ResizeBilinear,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../resize_bilinear_gpu":"9ITnq","../resize_bilinear_packed_gpu":"aAJJf","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9ITnq":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ResizeBilinearProgram",()=>r);class r{constructor(m,f,i,o,n){this.variableNames=["A"],this.outputShape=[];const[c,a,l,u]=m;this.outputShape=[c,f,i,u];const p=[o&&f>1?a-1:a,o&&i>1?l-1:l],h=[o&&f>1?f-1:f,o&&i>1?i-1:i];let g;n?g="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":g="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/h[0]},
          ${p[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${g};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aAJJf:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ResizeBilinearPackedProgram",()=>r);class r{constructor(m,f,i,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,a,l,u]=m;this.outputShape=[c,f,i,u];const p=[o&&f>1?a-1:a,o&&i>1?l-1:l],h=[o&&f>1?f-1:f,o&&i>1?i-1:i];let g;n?g="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":g="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/h[0]},
          ${p[1]/h[1]},
          ${p[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${g};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${i-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bbj9W:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeBilinearGrad",()=>m),t.export(s,"resizeBilinearGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../resize_bilinear_backprop_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{images:a,dy:l}=o,{alignCorners:u}=c,p=new d.ResizeBilinearBackpropProgram(l.shape,a.shape,u);return n.runWebGLProgram(p,[l],l.dtype)}const f={kernelName:r.ResizeBilinearGrad,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../resize_bilinear_backprop_gpu":"iFnAD","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iFnAD:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ResizeBilinearBackpropProgram",()=>r);class r{constructor(m,f,i){this.variableNames=["dy"],this.outputShape=[],this.outputShape=f;const[,o,n]=f,[,c,a]=m,l=[i&&c>1?o-1:o,i&&a>1?n-1:n],u=[i&&c>1?c-1:c,i&&a>1?a-1:a],p=l[0]/u[0],h=l[1]/u[1],g=1/p,v=1/h,_=Math.ceil(g)*2+2,k=Math.ceil(v)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${h});

        const float invHeightScale = float(${g});
        const float invWidthScale = float(${v});

        const int winHeight = int(${_});
        const int winWidth = int(${k});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${c}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${n-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g52Tv:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeNearestNeighbor",()=>f),t.export(s,"resizeNearestNeighborConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../resize_nearest_neighbor_gpu"),m=e("../resize_nearest_neighbor_packed_gpu");function f(o){const{inputs:n,backend:c,attrs:a}=o,{images:l}=n,{alignCorners:u,halfPixelCenters:p,size:h}=a,[g,v]=h,_=(0,r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new m.ResizeNearestNeighborPackedProgram(l.shape,g,v,u,p):new d.ResizeNearestNeighborProgram(l.shape,g,v,u,p);return c.runWebGLProgram(_,[l],l.dtype)}const i={kernelName:r.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../resize_nearest_neighbor_gpu":"3PE6y","../resize_nearest_neighbor_packed_gpu":"hVbaI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"3PE6y":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ResizeNearestNeighborProgram",()=>r);class r{constructor(m,f,i,o,n){this.variableNames=["A"],this.outputShape=[];const[c,a,l,u]=m;this.outputShape=[c,f,i,u];const p=[o&&f>1?a-1:a,o&&i>1?l-1:l],h=[o&&f>1?f-1:f,o&&i>1?i-1:i],g=o?"0.5":"0.0";let v;n?v="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":v="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/h[0]},
          ${p[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${v};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${g})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],hVbaI:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ResizeNearestNeighborPackedProgram",()=>r);class r{constructor(m,f,i,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,a,l,u]=m;this.outputShape=[c,f,i,u];const p=[o&&f>1?a-1:a,o&&i>1?l-1:l],h=[o&&f>1?f-1:f,o&&i>1?i-1:i],g=o?"0.5":"0.0";let v;n?v="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":v="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/h[0]},
          ${p[1]/h[1]},
          ${p[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${v};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${g})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${i-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1tqgB":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"resizeNearestNeighborGrad",()=>m),t.export(s,"resizeNearestNeighborGradConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../resize_nearest_neighbor_backprop_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{images:a,dy:l}=o,{alignCorners:u}=c,p=new d.ResizeNearestNeigborBackpropProgram(l.shape,a.shape,u);return n.runWebGLProgram(p,[l],l.dtype)}const f={kernelName:r.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../resize_nearest_neighbor_backprop_gpu":"1tAGx","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1tAGx":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ResizeNearestNeigborBackpropProgram",()=>r);class r{constructor(m,f,i){this.variableNames=["dy"],this.outputShape=[],this.outputShape=f;const[,o,n]=f,[,c,a]=m,l=[i&&c>1?o-1:o,i&&a>1?n-1:n],u=[i&&c>1?c-1:c,i&&a>1?a-1:a],p=l[0]/u[0],h=l[1]/u[1],g=1/p,v=1/h,_=Math.ceil(g)*2+2,k=Math.ceil(v)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${h});

        const float invHeightScale = float(${g});
        const float invWidthScale = float(${v});

        const int winHeight = int(${_});
        const int winWidth = int(${k});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${c}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${i} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${n}) - 1),
                ${i} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iqpQ9:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"reverse",()=>i),t.export(s,"reverseConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../reverse_gpu"),m=e("../reverse_packed_gpu"),f=e("./Identity");function i(n){const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{dims:p}=l,h=u.shape.length,g=r.util.parseAxisParam(p,u.shape);if(h===0)return(0,f.identity)({inputs:{x:u},backend:a});const v=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new m.ReversePackedProgram(u.shape,g):new d.ReverseProgram(u.shape,g);return a.runWebGLProgram(v,[u],u.dtype)}const o={kernelName:r.Reverse,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../reverse_gpu":"lprHA","../reverse_packed_gpu":"lXiSB","./Identity":"ctZJO","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lprHA:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ReverseProgram",()=>d);var r=e("./shader_compiler");class d{constructor(f,i){this.variableNames=["x"];const o=f.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=f,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${f[0]} - coord - 1));
        }
      `;return}const n=l=>i.indexOf(l)!==-1&&f[l]!==1?`${f[l]} - coords[${l}] - 1`:`coords[${l}]`,c=f.map((l,u)=>n(u)).join(","),a=(0,r.getCoordsDataType)(o);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${c}));
      }
    `}}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lXiSB:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ReversePackedProgram",()=>m);var r=e("./packing_util"),d=e("./shader_compiler");class m{constructor(i,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=i.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=i;const c=(0,r.getChannels)("rc",n),a=`${c[n-1]} + 1 < ${this.outputShape[n-1]}`,l=`${c[n-2]} + 1 < ${this.outputShape[n-2]}`,u=(0,d.getCoordsDataType)(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${i[0]} - rc - 1),
            ${i[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${i[0]} - (rc  + 1) - 1),
                ${i[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${u} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${p(c.slice())};
          if(${a}){
            result.g = ${h(c.slice())};
          }
          if(${l}) {
            result.b = ${g(c.slice())};
            if(${a}) {
              result.a = ${v(c.slice())};
            }
          }
          setOutput(result);
        }
    `;function p(y){return _(y)}function h(y){return y[n-1]="("+y[n-1]+" + 1)",_(y)}function g(y){return y[n-2]="("+y[n-2]+" + 1)",_(y)}function v(y){return y[n-1]="("+y[n-1]+" + 1)",y[n-2]="("+y[n-2]+" + 1)",_(y)}function _(y){const x=i.map((w,N)=>k(N,y)),b=x.join(","),C=x.slice(-2).join(",");return`getChannel(getX(${b}), vec2(${C}))`}function k(y,x){return o.indexOf(y)!==-1&&i[y]!==1?`${i[y]} - ${x[y]} - 1`:`${x[y]}`}}}},{"./packing_util":"5Yxmz","./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],lHF0L:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rotateWithOffsetConfig",()=>m);var r=e("@tensorflow/tfjs-core"),d=e("../rotate_gpu");const m={kernelName:r.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:f,attrs:i,backend:o})=>{const{image:n}=f,{radians:c,fillValue:a,center:l}=i,u=o,p=new d.RotateProgram(n.shape,a),[h,g]=r.backend_util.getImageCenter(l,n.shape[1],n.shape[2]),v=[[h,g,Math.sin(c),Math.cos(c)]];return u.runWebGLProgram(p,[n],n.dtype,v)}}},{"@tensorflow/tfjs-core":"fqGP4","../rotate_gpu":"1GTjR","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1GTjR":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"RotateProgram",()=>r);class r{constructor(m,f){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const i=m[1],o=m[2];this.outputShape=m;let n="";typeof f=="number"?n=`float outputValue = ${f.toFixed(2)};`:n=`
        vec3 fill = vec3(${f.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${n}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${i}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7ses5":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"round",()=>f),t.export(s,"roundConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Round,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"9wldr":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"rsqrt",()=>i),t.export(s,"rsqrtConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return inversesqrt(x);",i=(0,d.unaryKernelFunc)({opSnippet:f,cpuKernelImpl:m.rsqrtImplCPU}),o={kernelName:r.Rsqrt,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4d51i":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"scatterNd",()=>i),t.export(s,"scatterNdConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../scatter_gpu"),m=e("../scatter_packed_gpu"),f=e("./Reshape");function i(n){const{inputs:c,backend:a,attrs:l}=n,{indices:u,updates:p}=c,{shape:h}=l,{sliceRank:g,numUpdates:v,sliceSize:_,strides:k,outputSize:y}=r.backend_util.calculateShapes(p,u,h),x=[y/_,_];if(y===0)return a.makeTensorInfo(h,u.dtype);const b=(0,f.reshape)({inputs:{x:u},backend:a,attrs:{shape:[v,g]}}),C=(0,f.reshape)({inputs:{x:p},backend:a,attrs:{shape:[v,_]}}),w=a.makeTensorInfo([],"float32",new Float32Array([0]));let N;(0,r.env)().getBool("WEBGL_PACK")?N=new m.ScatterPackedProgram(v,g,b.shape.length,C.shape.length,k,x):N=new d.ScatterProgram(v,g,b.shape.length,C.shape.length,k,x);const T=a.runWebGLProgram(N,[C,b,w],C.dtype),F=(0,f.reshape)({inputs:{x:T},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(w),F}const o={kernelName:r.ScatterNd,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../scatter_gpu":"73EIT","../scatter_packed_gpu":"7rjw3","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"73EIT":[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ScatterProgram",()=>d);var r=e("./shader_compiler");class d{constructor(f,i,o,n,c,a,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const p=(0,r.getCoordsDataType)(c.length),h=(0,r.getCoordsDataType)(a.length);let g="";o===1?g="i":o===2&&(g="i, j");const v=`getIndices(${g})`;let _="";n===1?_="i":n===2&&(_="i, coords[1]");const k=`getUpdates(${_})`;let y="";u&&(y="coords[0], coords[1]");const x=`getDefaultValue(${y})`,b=i>1?"strides[j]":"strides";this.userCode=`
        ${p} strides = ${p}(${c});

        void main() {
          ${h} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${f}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${i}; j++) {
              int index = round(${v});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${k};
              found = true;
            }
          }
          setOutput(mix(${x}, sum, float(found)));
        }
      `}}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"7rjw3":[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"ScatterPackedProgram",()=>d);var r=e("./shader_compiler");class d{constructor(f,i,o,n,c,a,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const p=(0,r.getCoordsDataType)(c.length),h=(0,r.getCoordsDataType)(a.length);let g="";o===1?g="i":o===2&&(g="i, j");const v=`getIndices(${g})`;let _="";n===1?_="i":n===2&&(_="i, coords[1]");const k=`getUpdates(${_})`;let y="";u&&(y="coords[0], coords[1]");const x=`getDefaultValue(${y})`,b=i>1?"strides[j]":"strides",C=i>1?"strides[j + 1]":"strides";this.userCode=`
        ${p} strides = ${p}(${c});

        void main() {
          ${h} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${f}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${i}; j+=2) {
              ivec4 index = round(${v});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${i}) {
                flattenedIndex += index.yw * ${C};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${k};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${x}, sum, found));
        }
      `}}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"52NRO":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"searchSorted",()=>m),t.export(s,"searchSortedConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../search_sorted_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{sortedSequence:a,values:l}=o,{side:u}=c,p=new d.SearchSortedProgram(a.shape[0],a.shape[1],l.shape[1],u),h=[[a.shape[1]]];return n.runWebGLProgram(p,[a,l],"int32",h)}const f={kernelName:r.SearchSorted,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../search_sorted_gpu":"juTqn","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],juTqn:[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"SearchSortedProgram",()=>d);var r=e("@tensorflow/tfjs-core");class d{constructor(f,i,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[f,o];const c="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(i+1))}; ++i) { if (left >= right) break;`,l=(0,r.env)().getNumber("WEBGL_VERSION")===2?c:a,u=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${l}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}},{"@tensorflow/tfjs-core":"fqGP4","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],kHSJG:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"select",()=>m),t.export(s,"selectConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../select_gpu");function m(i){const{inputs:o,backend:n}=i,{condition:c,t:a,e:l}=o,u=new d.SelectProgram(c.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(u,[c,a,l],(0,r.upcastType)(a.dtype,l.dtype))}const f={kernelName:r.Select,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../select_gpu":"bjMEM","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bjMEM:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"SelectProgram",()=>d);var r=e("./shader_compiler");class d{constructor(f,i,o){this.variableNames=["c","a","b"],this.outputShape=i;let n,c;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)c="resRC",n="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],p=[];for(let h=0;h<i.length;h++)p.push(`${l[h]}`),h<f&&u.push(`${l[h]}`);n=u.join(),c=p.join()}const a=(0,r.getCoordsDataType)(o);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${c}));
        } else {
          setOutput(getB(${c}));
        }
      }
    `}}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2nB3h":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"selu",()=>f),t.export(s,"seluConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${r.backend_util.SELU_SCALEALPHA};
  float scale = ${r.backend_util.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Selu,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4tTKW":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sigmoid",()=>o),t.export(s,"sigmoidConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f=d.CHECK_NAN_SNIPPET_UNARY+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,i=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:i,cpuKernelImpl:m.sigmoidImplCPU}),n={kernelName:r.Sigmoid,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],flI9w:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sign",()=>f),t.export(s,"signConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Sign,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],immaU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sin",()=>o),t.export(s,"sinConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../binaryop_packed_gpu"),m=e("../kernel_utils/kernel_funcs_utils");const f=m.CHECK_NAN_SNIPPET_UNARY+`
  return sin(x);
`,i=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${d.CHECK_NAN_SNIPPET_PACKED}
  return result;
`,o=(0,m.unaryKernelFunc)({opSnippet:f,packedOpSnippet:i}),n={kernelName:r.Sin,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../binaryop_packed_gpu":"lSGsz","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2KiER":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sinh",()=>f),t.export(s,"sinhConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Sinh,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2gqRt":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"softplus",()=>f),t.export(s,"softplusConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Softplus,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6DY70":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"spaceToBatchND",()=>i),t.export(s,"spaceToBatchNDConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("./PadV2"),m=e("./Reshape"),f=e("./Transpose");const i=n=>{const{inputs:c,backend:a,attrs:l}=n,{x:u}=c,{blockShape:p,paddings:h}=l;r.util.assert(u.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const g=p.reduce((T,F)=>T*F),v=[[0,0]];v.push(...h);for(let T=1+p.length;T<u.shape.length;++T)v.push([0,0]);const _=[],k=(0,d.padV2)({inputs:{x:u},backend:a,attrs:{paddings:v,constantValue:0}}),y=r.backend_util.getReshaped(k.shape,p,g,!1),x=r.backend_util.getPermuted(y.length,p.length,!1),b=r.backend_util.getReshapedPermuted(k.shape,p,g,!1),C=(0,m.reshape)({inputs:{x:k},backend:a,attrs:{shape:y}}),w=(0,f.transpose)({inputs:{x:C},backend:a,attrs:{perm:x}}),N=(0,m.reshape)({inputs:{x:w},backend:a,attrs:{shape:b}});return _.push(k),_.push(C),_.push(w),_.forEach(T=>a.disposeIntermediateTensorInfo(T)),N},o={kernelName:r.SpaceToBatchND,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","./PadV2":"5u7fL","./Reshape":"layh9","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5SC49":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseFillEmptyRows",()=>m),t.export(s,"sparseFillEmptyRowsConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n}=i,{indices:c,values:a,denseShape:l,defaultValue:u}=o;if(l.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${l.shape}`);if(c.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${c.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(u.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${u.shape}`);const p=n.readSync(c.dataId),h=n.readSync(a.dataId),g=n.readSync(l.dataId),v=n.readSync(u.dataId)[0],[_,k,y,x,b]=(0,d.sparseFillEmptyRowsImplCPU)(p,c.shape,c.dtype,h,a.dtype,g,v);return[n.makeTensorInfo(k,c.dtype,_),n.makeTensorInfo([k[0]],a.dtype,y),n.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(C=>Number(C)))),n.makeTensorInfo([b.length],c.dtype,new Int32Array(b))]}const f={kernelName:r.SparseFillEmptyRows,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],aWr9g:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseReshape",()=>m),t.export(s,"sparseReshapeConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n}=i,{inputIndices:c,inputShape:a,newShape:l}=o;if(c.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${c.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(l.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${l.shape}`);const u=Array.from(n.readSync(a.dataId)),p=n.readSync(c.dataId),h=Array.from(n.readSync(l.dataId)),[g,v,_]=(0,d.sparseReshapeImplCPU)(p,c.shape,c.dtype,u,h);return[n.makeTensorInfo(v,c.dtype,g),n.makeTensorInfo([_.length],l.dtype,new Int32Array(_))]}const f={kernelName:r.SparseReshape,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2vkUh":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseSegmentMean",()=>m),t.export(s,"sparseSegmentMeanConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n}=i,{data:c,indices:a,segmentIds:l}=o;if(c.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(l.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${l.shape}`);const u=n.readSync(c.dataId),p=n.readSync(a.dataId),h=n.readSync(l.dataId),[g,v]=(0,d.sparseSegmentReductionImplCPU)(u,c.shape,c.dtype,p,h,!0);return n.makeTensorInfo(v,c.dtype,g)}const f={kernelName:r.SparseSegmentMean,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"5bQsS":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseSegmentSum",()=>m),t.export(s,"sparseSegmentSumConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n}=i,{data:c,indices:a,segmentIds:l}=o;if(c.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(l.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${l.shape}`);const u=n.readSync(c.dataId),p=n.readSync(a.dataId),h=n.readSync(l.dataId),[g,v]=(0,d.sparseSegmentReductionImplCPU)(u,c.shape,c.dtype,p,h);return n.makeTensorInfo(v,c.dtype,g)}const f={kernelName:r.SparseSegmentSum,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],jKUtr:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sparseToDense",()=>i),t.export(s,"sparseToDenseConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../scatter_gpu"),f=e("./Reshape");function i(n){const{inputs:c,backend:a,attrs:l}=n,{sparseIndices:u,sparseValues:p,defaultValue:h}=c,{outputShape:g}=l,{sliceRank:v,numUpdates:_,sliceSize:k,strides:y,outputSize:x}=r.backend_util.calculateShapes(p,u,g),b=!1;if(p.dtype==="string"){const T=a.bufferSync(u),F=a.bufferSync(p),S=r.util.decodeString(a.readSync(h.dataId)[0]),I=(0,d.scatterImplCPU)(T,F,g,x,k,_,v,y,S,b);return a.makeTensorInfo(g,I.dtype,I.values)}const C=new m.ScatterProgram(_,v,u.shape.length,p.shape.length,y,[x,1],b),w=a.runWebGLProgram(C,[p,u,h],p.dtype),N=(0,f.reshape)({inputs:{x:w},backend:a,attrs:{shape:g}});return a.disposeIntermediateTensorInfo(w),N}const o={kernelName:r.SparseToDense,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../scatter_gpu":"73EIT","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],isvQ9:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"splitV",()=>m),t.export(s,"splitVConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("./Slice");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o,{numOrSizeSplits:l,axis:u}=c,p=r.util.parseAxisParam(u,a.shape)[0],h=r.backend_util.prepareSplitSize(a,l,p),g=a.shape.length,v=new Array(g).fill(0),_=a.shape.slice();return h.map(k=>{const y=[..._];y[p]=k;const x=(0,d.slice)({inputs:{x:a},backend:n,attrs:{begin:v,size:y}});return v[p]+=k,x})}const f={kernelName:r.SplitV,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","./Slice":"cwth9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8CSeq":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"sqrt",()=>i),t.export(s,"sqrtConfig",()=>o);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils"),m=e("../kernel_utils/shared");const f="return sqrt(x);",i=(0,d.unaryKernelFunc)({opSnippet:f,packedOpSnippet:f,cpuKernelImpl:m.sqrtImplCPU}),o={kernelName:r.Sqrt,backendName:"webgl",kernelFunc:i}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],huoHS:[function(e,E,s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"square",()=>f),t.export(s,"squareConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return x * x;",f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Square,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"94ulP":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"squaredDifference",()=>f),t.export(s,"squaredDifferenceConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return (a - b) * (a - b);",f=(0,d.binaryKernelFunc)({opSnippet:m,packedOpSnippet:m}),i={kernelName:r.SquaredDifference,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bl3sf:[function(e,E,s){/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"staticRegexReplace",()=>m),t.export(s,"staticRegexReplaceConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n,attrs:c}=i,{x:a}=o;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const l=n.readSync(a.dataId),u=r.backend_util.fromUint8ToStringArray(l),p=(0,d.staticRegexReplaceImplCPU)(u,"string",c);return n.makeTensorInfo(a.shape,"string",p)}const f={kernelName:r.StaticRegexReplace,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],ed9aU:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"step",()=>m),t.export(s,"stepConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../unaryop_gpu");function m({inputs:i,attrs:o,backend:n}){const{x:c}=i,a=d.CHECK_NAN_SNIPPET+`
    return x > 0.0 ? 1.0 : float(${o.alpha});
  `,l=new d.UnaryOpProgram(c.shape,a);return n.runWebGLProgram(l,[c],c.dtype)}const f={kernelName:r.Step,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../unaryop_gpu":"7L5LN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2cBAu":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stridedSlice",()=>o),t.export(s,"stridedSliceConfig",()=>n);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../strided_slice_gpu"),f=e("./Reshape"),i=e("./Slice");function o(c){const{inputs:a,backend:l,attrs:u}=c,{x:p}=a,{begin:h,end:g,strides:v,beginMask:_,endMask:k,ellipsisMask:y,newAxisMask:x,shrinkAxisMask:b}=u,{finalShapeSparse:C,finalShape:w,isIdentity:N,sliceDim0:T,isSimpleSlice:F,begin:S,end:I,strides:j}=r.slice_util.sliceInfo(p.shape,h,g,v,_,k,y,x,b);let D;if(N)D=(0,f.reshape)({inputs:{x:p},backend:l,attrs:{shape:w}});else if(T||F){r.util.assert(p.shape.length>=1,()=>`Input must have rank at least 1, got: ${p.shape.length}`);const $=r.slice_util.computeOutShape(S,I,j),P=(0,i.slice)({inputs:{x:p},backend:l,attrs:{begin:S,size:$}});D=(0,f.reshape)({inputs:{x:P},backend:l,attrs:{shape:w}}),l.disposeIntermediateTensorInfo(P)}else if(l.shouldExecuteOnCPU([p])){const P=l.readSync(p.dataId),R=(0,r.buffer)(p.shape,p.dtype,P),A=(0,d.stridedSliceImplCPU)(C,R,j,S);D=l.makeTensorInfo(w,p.dtype,A.values)}else{const P=new m.StridedSliceProgram(S,j,C);D=l.runWebGLProgram(P,[p],p.dtype)}const O=(0,f.reshape)({inputs:{x:D},backend:l,attrs:{shape:w}});return l.disposeIntermediateTensorInfo(D),O}const n={kernelName:r.StridedSlice,backendName:"webgl",kernelFunc:o}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../strided_slice_gpu":"bHPLb","./Reshape":"layh9","./Slice":"cwth9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bHPLb:[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"StridedSliceProgram",()=>d);var r=e("./shader_compiler");class d{constructor(f,i,o){this.variableNames=["x"],this.outputShape=o;const n=o.length,c=(0,r.getCoordsDataType)(o.length),a=(0,r.getCoordsDataType)(o.length);let l="";if(n===1)l="coords * strides + begin";else{let u=0;l=o.map((p,h)=>(u++,o.length===1?`coords * strides[${h}] + begin[${h}]`:`coords[${u-1}] * strides[${h}] + begin[${h}]`)).join(",")}this.userCode=`
      ${c} begin = ${c}(${f});
      ${c} strides = ${c}(${i});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],d9mJm:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringNGrams",()=>m),t.export(s,"stringNGramsConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n,attrs:c}=i,{separator:a,nGramWidths:l,leftPad:u,rightPad:p,padWidth:h,preserveShortSequences:g}=c,{data:v,dataSplits:_}=o,k=n.readSync(v.dataId),y=n.readSync(_.dataId),[x,b]=(0,d.stringNGramsImplCPU)(k,y,a,l,u,p,h,g);return[n.makeTensorInfo([x.length],"string",x),n.makeTensorInfo(_.shape,"int32",b)]}const f={kernelName:r.StringNGrams,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],grp3X:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringSplit",()=>m),t.export(s,"stringSplitConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n,attrs:c}=i,{skipEmpty:a}=c,{input:l,delimiter:u}=o;if(l.dtype!=="string")throw new Error("Input must be of datatype string");if(l.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${l.shape}`);if(u.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${u.shape}`);const p=n.readSync(l.dataId),h=n.readSync(u.dataId)[0],[g,v,_]=(0,d.stringSplitImplCPU)(p,h,a),k=v.length;return[n.makeTensorInfo([k,2],"int32",g),n.makeTensorInfo([k],"string",v),n.makeTensorInfo([2],"int32",new Int32Array(_))]}const f={kernelName:r.StringSplit,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],JGfRq:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"stringToHashBucketFast",()=>m),t.export(s,"stringToHashBucketFastConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared");function m(i){const{inputs:o,backend:n,attrs:c}=i,{numBuckets:a}=c,{input:l}=o;if(l.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const u=n.readSync(l.dataId),p=(0,d.stringToHashBucketFastImplCPU)(u,a);return n.makeTensorInfo(l.shape,"int32",p)}const f={kernelName:r.StringToHashBucketFast,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dfnHO:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tan",()=>f),t.export(s,"tanConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m="return tan(x);",f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Tan,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"2PuWN":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tanh",()=>f),t.export(s,"tanhConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/kernel_funcs_utils");const m=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,f=(0,d.unaryKernelFunc)({opSnippet:m}),i={kernelName:r.Tanh,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/kernel_funcs_utils":"aPZb5","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"8d8I1":[function(e,E,s){/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tensorScatterUpdate",()=>f),t.export(s,"tensorScatterUpdateConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../scatter_gpu"),m=e("./Reshape");function f(o){const{inputs:n,backend:c,attrs:a}=o,{tensor:l,indices:u,updates:p}=n,{}=a,{sliceRank:h,numUpdates:g,sliceSize:v,strides:_,outputSize:k}=r.backend_util.calculateShapes(p,u,l.shape),y=[k/v,v];if(k===0)return c.makeTensorInfo(l.shape,u.dtype);const x=(0,m.reshape)({inputs:{x:u},backend:c,attrs:{shape:[g,h]}}),b=(0,m.reshape)({inputs:{x:p},backend:c,attrs:{shape:[g,v]}}),C=(0,m.reshape)({inputs:{x:l},backend:c,attrs:{shape:y}}),w=new d.ScatterProgram(g,h,x.shape.length,b.shape.length,_,y,!1,!0),N=c.runWebGLProgram(w,[b,x,C],C.dtype),T=(0,m.reshape)({inputs:{x:N},backend:c,attrs:{shape:l.shape}});return c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(b),c.disposeIntermediateTensorInfo(C),c.disposeIntermediateTensorInfo(N),T}const i={kernelName:r.TensorScatterUpdate,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../scatter_gpu":"73EIT","./Reshape":"layh9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],e3Ttw:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"tile",()=>f),t.export(s,"tileConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../tile_gpu");function f(o){const{inputs:n,backend:c,attrs:a}=o,{x:l}=n,{reps:u}=a;if(l.dtype==="string"||l.shape.length>5){const g=c.readSync(l.dataId),v=l.dtype==="string"?g.map(y=>r.util.decodeString(y)):g,_=(0,r.buffer)(l.shape,l.dtype,v),k=(0,d.tileImplCPU)(_,u);return c.makeTensorInfo(k.shape,k.dtype,k.values)}const p=new m.TileProgram(l.shape,u);return c.runWebGLProgram(p,[l],l.dtype)}const i={kernelName:r.Tile,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../tile_gpu":"1Ojve","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"1Ojve":[function(e,E,s){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TileProgram",()=>d);var r=e("./shader_compiler");class d{constructor(i,o){this.variableNames=["A"];const n=new Array(i.length);for(let l=0;l<n.length;l++)n[l]=i[l]*o[l];this.outputShape=n,this.rank=n.length;const c=(0,r.getCoordsDataType)(this.rank),a=m(i);this.userCode=`
      void main() {
        ${c} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function m(f){const i=f.length;if(i>5)throw Error(`Tile for rank ${i} is not yet supported`);if(i===1)return`imod(resRC, ${f[0]})`;const o=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let c=0;c<f.length;c++)n.push(`imod(${o[c]}, ${f[c]})`);return n.join()}},{"./shader_compiler":"2GLDN","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],khskp:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"topK",()=>l),t.export(s,"topKConfig",()=>u);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../top_k_gpu"),f=e("./Fill"),i=e("./GatherV2"),o=e("./Reshape"),n=e("./Slice");function c(p,h){h!==null&&p.disposeIntermediateTensorInfo(h)}function a(p){let h=1;for(;h<p;)h*=2;return h}function l(p){const{inputs:h,backend:g,attrs:v}=p,{x:_}=h,{k,sorted:y}=v,x=(0,r.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),b=(0,r.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),C=_.shape,w=C[C.length-1];if(g.shouldExecuteOnCPU([_])||w<x||k>b){const M=g.readSync(_.dataId),[V,K]=(0,d.topKImplCPU)(M,C,_.dtype,k,y);return[g.makeTensorInfo(V.shape,V.dtype,V.values),g.makeTensorInfo(K.shape,K.dtype,K.values)]}if(k===0)return C[C.length-1]=0,[g.makeTensorInfo(C,_.dtype,[]),g.makeTensorInfo(C,"int32",[])];if(w===1)return[_,(0,f.fill)({attrs:{shape:C,dtype:"int32",value:0},backend:g})];const N=g.texData.get(_.dataId),T=N!==null&&N.isPacked,F=T?g.unpackTensor(_):_,I=r.util.sizeFromShape(C)/w,j=(0,o.reshape)({inputs:{x:F},attrs:{shape:[I,w]},backend:g});T&&c(g,F);const D=a(k),O=a(w);let $=null;const P=()=>$===null?[j,j]:[j,$],R=(M,V,K)=>{const W=P(),H=new m.SwapProgram(K),Q=[[w],[$===null?1:0],[Number.NEGATIVE_INFINITY],[M],[V]],te=$;$=g.runWebGLProgram(H,W,"int32",Q),c(g,te)};for(let M=1;M<D;M*=2){const V=M*2;for(let K=M;K>=1;K/=2)R(V,K,[I,O])}for(let M=O;M>D;M/=2){const V=P(),K=new m.MergeProgram([I,M/2]),H=[[w],[$===null?1:0],[D]],Z=$;$=g.runWebGLProgram(K,V,"int32",H),c(g,Z);const Q=D/2,te=Q*2;for(let ee=Q;ee>=1;ee/=2)R(te,ee,$.shape)}let A=$;$=(0,n.slice)({inputs:{x:$},backend:g,attrs:{begin:0,size:[I,k]}}),c(g,A);let z=(0,i.gatherV2)({inputs:{x:j,indices:$},backend:g,attrs:{axis:1,batchDims:1}});c(g,j);const G=C.slice(0,-1);G.push(k),A=$,$=(0,o.reshape)({inputs:{x:$},attrs:{shape:G},backend:g}),c(g,A);const L=z;return z=(0,o.reshape)({inputs:{x:z},attrs:{shape:G},backend:g}),c(g,L),[z,$]}const u={kernelName:r.TopK,backendName:"webgl",kernelFunc:l}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../top_k_gpu":"cUm0e","./Fill":"cA4rO","./GatherV2":"geLYj","./Reshape":"layh9","./Slice":"cwth9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],cUm0e:[function(e,E,s){var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"SwapProgram",()=>r),t.export(s,"MergeProgram",()=>d);class r{constructor(f){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=f,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class d{constructor(f){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=f,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],bylOA:[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"transform",()=>m),t.export(s,"transformConfig",()=>f);var r=e("@tensorflow/tfjs-core"),d=e("../transform_gpu");function m(i){const{inputs:o,backend:n,attrs:c}=i,{image:a,transforms:l}=o,{interpolation:u,fillMode:p,fillValue:h,outputShape:g}=c,[v,_,k,y]=a.shape,[x,b]=g??[_,k],C=[v,x,b,y],w=new d.TransformProgram(_,k,u,p,h,C);return n.runWebGLProgram(w,[a,l],"float32")}const f={kernelName:r.Transform,backendName:"webgl",kernelFunc:m}},{"@tensorflow/tfjs-core":"fqGP4","../transform_gpu":"6T8VK","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"6T8VK":[function(e,E,s){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"TransformProgram",()=>r);class r{constructor(m,f,i,o,n,c){this.variableNames=["Image","Transforms"],this.outputShape=c;const a=i==="nearest"?1:2;let l;switch(o){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${m} && 0 <= coordX && coordX < ${f}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${n});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${n});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${f}));
                float mapY = mapCoord(inY, float(${m}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],eaaQn:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unique",()=>f),t.export(s,"uniqueConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("../kernel_utils/shared"),m=e("../webgl_util");function f(o){const{inputs:n,attrs:c,backend:a}=o,{axis:l}=c,{x:u}=n;(0,m.assertNotComplex)(u,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const p=a.readSync(u.dataId),{outputValues:h,outputShape:g,indices:v}=(0,d.uniqueImplCPU)(p,l,u.shape,u.dtype);return[a.makeTensorInfo(g,u.dtype,h),a.makeTensorInfo([v.length],"int32",v)]}const i={kernelName:r.Unique,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","../kernel_utils/shared":"6qOzI","../webgl_util":"kgdHT","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],"4MN8P":[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unpack",()=>f),t.export(s,"unpackConfig",()=>i);var r=e("@tensorflow/tfjs-core"),d=e("./Reshape"),m=e("./Slice");function f(o){const{inputs:n,backend:c,attrs:a}=o,{value:l}=n;let{axis:u}=a;u<0&&(u+=l.shape.length);const p=l,h=p.shape.length,g=l.shape[u],v=new Array(h-1);let _=0;for(let C=0;C<h;C++)C!==u&&(v[_++]=p.shape[C]);const k=[],y=new Array(h).fill(0),x=p.shape.slice();x[u]=1;const b=new Array(g);for(let C=0;C<b.length;C++){y[u]=C;const w=(0,m.slice)({inputs:{x:p},backend:c,attrs:{begin:y,size:x}}),N=(0,d.reshape)({inputs:{x:w},backend:c,attrs:{shape:v}});b[C]=N,k.push(w)}return k.forEach(C=>c.disposeIntermediateTensorInfo(C)),b}const i={kernelName:r.Unpack,backendName:"webgl",kernelFunc:f}},{"@tensorflow/tfjs-core":"fqGP4","./Reshape":"layh9","./Slice":"cwth9","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],dDqWs:[function(e,E,s){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"unsortedSegmentSum",()=>n),t.export(s,"unsortedSegmentSumConfig",()=>c);var r=e("@tensorflow/tfjs-core"),d=e("../segment_gpu"),m=e("./Range"),f=e("./Reshape"),i=e("./Tile"),o=e("./Transpose");function n(a){const{inputs:l,backend:u,attrs:p}=a,{x:h,segmentIds:g}=l,{numSegments:v}=p,_=h.shape.length,k=[];let y=0;const x=r.backend_util.getAxesPermutation([y],_);let b=h;x!=null&&(b=(0,o.transpose)({inputs:{x:h},backend:u,attrs:{perm:x}}),k.push(b),y=r.backend_util.getInnerMostAxes(1,_)[0]);const C=r.backend_util.segment_util.computeOutShape(b.shape,y,v),w=r.util.sizeFromShape([b.shape[y]]),N=(0,f.reshape)({inputs:{x:b},backend:u,attrs:{shape:[-1,w]}});k.push(N);const T=(0,r.sumOutType)(h.dtype),F=(D,O,$,P,R)=>{const A=D.shape[0],z=D.shape[1],G=r.backend_util.segment_util.segOpComputeOptimalWindowSize(z,R),L={windowSize:G,inSize:z,batchSize:A,numSegments:R},M=new d.SegmentOpProgram(L,O),V=u.compileAndRun(M,[D,$],P);if(k.push(V),V.shape[1]===R)return V;const K=(0,m.range)({backend:u,attrs:{start:0,stop:R,step:1,dtype:"float32"}}),W=(0,i.tile)({inputs:{x:K},backend:u,attrs:{reps:[z/G]}});return k.push(K),k.push(W),F(V,O,W,P,R)},S=F(N,"unsortedSegmentSum",g,T,v),I=(0,f.reshape)({inputs:{x:S},backend:u,attrs:{shape:C}});let j=I;if(x!=null){k.push(I);const D=r.backend_util.getUndoAxesPermutation(x);j=(0,o.transpose)({inputs:{x:j},backend:u,attrs:{perm:D}})}return k.forEach(D=>u.disposeIntermediateTensorInfo(D)),j}const c={kernelName:r.UnsortedSegmentSum,backendName:"webgl",kernelFunc:n}},{"@tensorflow/tfjs-core":"fqGP4","../segment_gpu":"W6nQt","./Range":"6CyBu","./Reshape":"layh9","./Tile":"e3Ttw","./Transpose":"5xgne","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],W6nQt:[function(e,E,s){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"SegmentOpProgram",()=>r);class r{constructor(m,f){this.variableNames=["x","segmentIds"];const i=m.windowSize,o=m.batchSize,n=m.inSize,c=m.numSegments,a=c*Math.ceil(n/i);this.outputShape=[o,a];const l="0.0",u="sumValue",p=Math.floor(i/4)*4,h=i%4,g=`
        sumValue += dot(values, segFilter);
    `;let v="";n%i>0&&(v=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `);let _="";n%i>0&&(_=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${v}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${_}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${c})) * float(${i}));
        int currentSeg = int(mod(float(outIdx), float(${c})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${g}
        }

        int inIdx = inOffset + ${p};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${g}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${g}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${g}
        }
        setOutput(${u});
      }
    `}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],iQWKC:[function(e,E,s){/** @license See the LICENSE file. */var t=e("@parcel/transformer-js/src/esmodule-helpers.js");t.defineInteropFlag(s),t.export(s,"version",()=>r);const r="4.9.0"},{"@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}]},[],null,"parcelRequireaaed")});export default Hr();
