!function(){var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};!function(){function e(t,e,n){Object.defineProperty(t,e,{get:n,enumerable:!0})}var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==t?t:{},r={};class s{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{time(t){return i("time")}read(t){return i("read")}readSync(t){return i("readSync")}numDataIds(){return i("numDataIds")}disposeData(t){return i("disposeData")}write(t,e,n){return i("write")}move(t,e,n,r){return i("move")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return i("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:o}){return i("fusedBatchMatMul")}slice(t,e,n){return i("slice")}stridedSlice(t,e,n,r){return i("stridedSlice")}unstack(t,e){return i("unstack")}reverse(t,e){return i("reverse")}concat(t,e){return i("concat")}neg(t){return i("neg")}add(t,e){return i("add")}addN(t){return i("addN")}subtract(t,e){return i("subtract")}multiply(t,e){return i("multiply")}realDivide(t,e){return i("realDivide")}floorDiv(t,e){return i("floorDiv")}sum(t,e){return i("sum")}prod(t,e){return i("prod")}unsortedSegmentSum(t,e,n){return i("unsortedSegmentSum")}argMin(t,e){return i("argMin")}argMax(t,e){return i("argMax")}equal(t,e){return i("equal")}notEqual(t,e){return i("notEqual")}less(t,e){return i("less")}lessEqual(t,e){return i("lessEqual")}greater(t,e){return i("greater")}greaterEqual(t,e){return i("greaterEqual")}logicalNot(t){return i("logicalNot")}logicalAnd(t,e){return i("logicalAnd")}logicalOr(t,e){return i("logicalOr")}where(t){return i("where")}select(t,e,n){return i("select")}topk(t,e,n){return i("topk")}min(t,e){return i("min")}minimum(t,e){return i("minimum")}mod(t,e){return i("mod")}max(t,e){return i("max")}maximum(t,e){return i("maximum")}all(t,e){return i("all")}any(t,e){return i("any")}squaredDifference(t,e){return i("squaredDifference")}ceil(t){return i("ceil")}floor(t){return i("floor")}round(t){return i("round")}sign(t){return i("sign")}isNaN(t){return i("isNaN")}isInf(t){return i("isInf")}isFinite(t){return i("isFinite")}pow(t,e){return i("pow")}exp(t){return i("exp")}expm1(t){return i("expm1")}softmax(t,e){return i("softmax")}log(t){return i("log")}log1p(t){return i("log1p")}sqrt(t){return i("sqrt")}rsqrt(t){return i("rsqrt")}square(t){return i("square")}reciprocal(t){return i("reciprocal")}relu(t){return i("relu")}relu6(t){return i("relu6")}prelu(t,e){return i("prelu")}elu(t){return i("elu")}eluDer(t,e){return i("eluDer")}selu(t){return i("selu")}int(t){return i("int")}clip(t,e,n){return i("clip")}abs(t){return i("abs")}complexAbs(t){return i("complexAbs")}sigmoid(t){return i("sigmoid")}softplus(t){return i("softplus")}sin(t){return i("sin")}cos(t){return i("cos")}tan(t){return i("tan")}asin(t){return i("asin")}acos(t){return i("acos")}atan(t){return i("atan")}atan2(t,e){return i("atan2")}sinh(t){return i("sinh")}cosh(t){return i("cosh")}tanh(t){return i("tanh")}asinh(t){return i("asinh")}acosh(t){return i("acosh")}atanh(t){return i("atanh")}erf(t){return i("erf")}step(t,e){return i("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return i("fusedConv2d")}conv2d(t,e,n){return i("conv2d")}conv2dDerInput(t,e,n){return i("conv2dDerInput")}conv2dDerFilter(t,e,n){return i("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return i("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return i("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return i("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return i("depthwiseConv2DDerFilter")}conv3d(t,e,n){return i("conv3d")}conv3dDerInput(t,e,n){return i("conv3dDerInput")}conv3dDerFilter(t,e,n){return i("conv3dDerFilter")}maxPool(t,e){return i("maxPool")}maxPoolBackprop(t,e,n,r){return i("maxPoolBackprop")}avgPool(t,e){return i("avgPool")}avgPoolBackprop(t,e,n){return i("avgPoolBackprop")}avgPool3d(t,e){return i("avgPool3d")}avgPool3dBackprop(t,e,n){return i("avgPool3dBackprop")}maxPool3d(t,e){return i("maxPool3d")}maxPool3dBackprop(t,e,n,r){return i("maxPool3dBackprop")}reshape(t,e){return i("reshape")}cast(t,e){return i("cast")}tile(t,e){return i("tile")}pad(t,e,n){return i("pad")}transpose(t,e){return i("transpose")}gather(t,e,n){return i("gather")}gatherND(t,e){return i("gatherND")}scatterND(t,e,n){return i("scatterND")}batchToSpaceND(t,e,n){return i("batchToSpaceND")}spaceToBatchND(t,e,n){return i("spaceToBatchND")}resizeBilinear(t,e,n,r){return i("resizeBilinear")}resizeBilinearBackprop(t,e,n){return i("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return i("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return i("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,a){return i("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return i("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,a,o){return i("LRNGrad")}multinomial(t,e,n,r){return i("multinomial")}oneHot(t,e,n,r){return i("oneHot")}cumsum(t,e,n,r){return i("cumsum")}nonMaxSuppression(t,e,n,r,s){return i("nonMaxSuppression")}fft(t){return i("fft")}ifft(t){return i("ifft")}complex(t,e){return i("complex")}real(t){return i("real")}imag(t){return i("imag")}cropAndResize(t,e,n,r,s,a){return i("cropAndResize")}depthToSpace(t,e,n){return i("depthToSpace")}split(t,e,n){return i("split")}sparseToDense(t,e,n,r){return i("sparseToDense")}diag(t){return i("diag")}fill(t,e,n){return i("fill")}onesLike(t){return i("onesLike")}zerosLike(t){return i("zerosLike")}linspace(t,e,n){return i("linspace")}dispose(){return i("dispose")}}function i(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function o(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function u(t,e,n){return Math.max(t,Math.min(e,n))}function l(t){return t%2==0?t:t+1}function c(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function h(t,e,n=""){c(m(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function p(t){c(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function d(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||C(t)&&!n)for(let r=0;r<t.length;++r)d(t[r],e,n);else e.push(t);return e}function f(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function g(t){return t%1==0}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function b(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function x(t,e=(t=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(t())return void r();a++;const o=e(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function w(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function v(t,e){const n=e.length;return c((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),c(t.every((t=>g(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function k(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:v(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function I(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function $(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function C(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function S(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function T(t){return"string"==typeof t||t instanceof String}function E(t){return"number"==typeof t}function A(t){return Array.isArray(t)?A(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":E(t)?"float32":T(t)?"string":"boolean"==typeof t?"bool":"float32"}function R(t){return!!(t&&t.constructor&&t.call&&t.apply)}function D(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function _(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function F(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],a=e.slice(1),i=a.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=F(t+e*i,a,n)}return r}function O(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return F(0,t,e)}function M(t,e){const n=L(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function L(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function z(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return O(t,new Float32Array(n));if("int32"===e)return O(t,new Int32Array(n));if("bool"===e)return O(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function B(t){t.forEach((e=>{c(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function P(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function W(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function V(t){return t&&t.then&&"function"==typeof t.then}class U{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(V(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function G(){return H}let H=null;var j,q,K={},X=K={};function Y(){throw new Error("setTimeout has not been defined")}function J(){throw new Error("clearTimeout has not been defined")}function Z(t){if(j===setTimeout)return setTimeout(t,0);if((j===Y||!j)&&setTimeout)return j=setTimeout,setTimeout(t,0);try{return j(t,0)}catch(e){try{return j.call(null,t,0)}catch(e){return j.call(this,t,0)}}}!function(){try{j="function"==typeof setTimeout?setTimeout:Y}catch(t){j=Y}try{q="function"==typeof clearTimeout?clearTimeout:J}catch(t){q=J}}();var Q,tt=[],et=!1,nt=-1;function rt(){et&&Q&&(et=!1,Q.length?tt=Q.concat(tt):nt=-1,tt.length&&st())}function st(){if(!et){var t=Z(rt);et=!0;for(var e=tt.length;e;){for(Q=tt,tt=[];++nt<e;)Q&&Q[nt].run();nt=-1,e=tt.length}Q=null,et=!1,function(t){if(q===clearTimeout)return clearTimeout(t);if((q===J||!q)&&clearTimeout)return q=clearTimeout,clearTimeout(t);try{q(t)}catch(e){try{return q.call(null,t)}catch(e){return q.call(this,t)}}}(t)}}function at(t,e){this.fun=t,this.array=e}function it(){}let ot;function ut(){if(null==ot){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n)t=n;else if(void 0!==K)t=K;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}ot=t}return ot}function lt(t,e){const n=function(){const t=ut();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}X.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];tt.push(new at(t,e)),1!==tt.length||et||Z(st)},at.prototype.run=function(){this.fun.apply(null,this.array)},X.title="browser",X.browser=!0,X.env={},X.argv=[],X.version="",X.versions={},X.on=it,X.addListener=it,X.once=it,X.off=it,X.removeListener=it,X.removeAllListeners=it,X.emit=it,X.prependListener=it,X.prependOnceListener=it,X.listeners=function(t){return[]},X.binding=function(t){throw new Error("process.binding is not supported")},X.cwd=function(){return"/"},X.chdir=function(t){throw new Error("process.chdir is not supported")},X.umask=function(){return 0};const ct="Abs",ht="Acos",pt="Acosh",dt="Add",ft="AddN",mt="ArgMax",gt="ArgMin",yt="Asin",bt="Asinh",xt="Atan",wt="Atanh",vt="Atan2",kt="AvgPool",Nt="AvgPoolBackprop",It="AvgPool3D",$t="BatchMatMul",Ct="BatchToSpaceND",St="BroadcastTo",Tt="Cast",Et="Ceil",At="ClipByValue",Rt="Complex",Dt="Concat",_t="Conv2D",Ft="Conv2DBackpropFilter",Ot="Conv2DBackpropInput",Mt="Conv3D",Lt="Conv3DBackpropFilterV2",zt="Conv3DBackpropInputV2",Bt="Cos",Pt="Cosh",Wt="Cumsum",Vt="DepthwiseConv2dNative",Ut="DepthwiseConv2dNativeBackpropFilter",Gt="DepthwiseConv2dNativeBackpropInput",Ht="Dilation2D",jt="Dilation2DBackpropInput",qt="Dilation2DBackpropFilter",Kt="Div",Xt="Elu",Yt="Erf",Jt="Exp",Zt="Expm1",Qt="FFT",te="Fill",ee="FlipLeftRight",ne="Floor",re="FloorDiv",se="FusedBatchNorm",ae="GatherV2",ie="GreaterEqual",oe="Identity",ue="IFFT",le="Imag",ce="IsFinite",he="IsInf",pe="IsNan",de="Log",fe="Log1p",me="LogicalNot",ge="LogSoftmax",ye="Max",be="Maximum",xe="MaxPool",we="MaxPoolBackprop",ve="MaxPool3D",ke="MaxPoolWithArgmax",Ne="Mean",Ie="Minimum",$e="MirrorPad",Ce="Multiply",Se="Negate",Te="NotEqual",Ee="NonMaxSuppressionV3",Ae="NonMaxSuppressionV4",Re="NonMaxSuppressionV5",De="OnesLike",_e="OneHot",Fe="PadV2",Oe="Prelu",Me="Real",Le="Reciprocal",ze="Relu",Be="Reshape",Pe="ResizeNearestNeighbor",We="ResizeBilinear",Ve="Relu6",Ue="Reverse",Ge="Round",He="Rsqrt",je="SelectV2",qe="Selu",Ke="Slice",Xe="Sin",Ye="Sinh",Je="Sign",Ze="Sigmoid",Qe="Softplus",tn="Sqrt",en="SpaceToBatchND",nn="SplitV",rn="Softmax",sn="SquaredDifference",an="Square",on="Sub",un="Tan",ln="Tanh",cn="Tile",hn="Transpose",pn="Unique",dn="Unpack",fn="UnsortedSegmentSum",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",xn="_FusedMatMul",wn="FusedConv2D",vn="FusedDepthwiseConv2D",kn=lt("kernelRegistry",(()=>new Map)),Nn=lt("gradRegistry",(()=>new Map));function In(t,e){const n=En(t,e);return kn.get(n)}function $n(t){return Nn.get(t)}function Cn(t){const e=kn.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===t&&n.push(i)}return n}function Sn(t){const{kernelName:e,backendName:n}=t,r=En(e,n);kn.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),kn.set(r,t)}function Tn(t){const{kernelName:e}=t;Nn.has(e)&&G().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),Nn.set(e,t)}function En(t,e){return`${e}_${t}`}function An(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=d(t)),G().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Rn(){return G().platform.now()}function Dn(t,e="utf-8"){return e=e||"utf-8",G().platform.encode(t,e)}function _n(t,e="utf-8"){return e=e||"utf-8",G().platform.decode(t,e)}class Fn{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Mn)}profileKernel(t,e,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{On(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),r,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function On(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Mn{logKernelProfile(t,e,n,r,s,a){const i="number"==typeof r?b(`${r}ms`,9):r.error,o=b(t,25),u=e.rank,l=e.size,c=b(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ln(t,e,n,r){const s=_(e),a=function(t,e,n,r){const s=f(e),a=r[r.length-1],i=new Array(a).fill(0),o=e.length,u="complex64"===n?Wn(t):t;if(o>1)for(let t=0;t<s/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],zn(u[e+t],0,n).length)}return i}(t,e,n,s),i=e.length,o=Pn(t,e,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(o.map((t=>"    "+t)).join("\n")),u.join("\n")}function zn(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:T(t)?`'${t}'`:"bool"===n?Bn(t):parseFloat(t.toFixed(7)).toString(),b(r,e)}function Bn(t){return 0===t?"false":"true"}function Pn(t,e,n,r,s,a=!0){const i="complex64"===n?2:1,o=e[0],u=e.length;if(0===u)return"complex64"===n?[zn(Wn(t)[0],0,n)]:"bool"===n?[Bn(t[0])]:[t[0].toString()];if(1===u){if(o>20){const e=3*i;let r=Array.from(t.slice(0,e)),a=Array.from(t.slice((o-3)*i,o*i));return"complex64"===n&&(r=Wn(r),a=Wn(a)),["["+r.map(((t,e)=>zn(t,s[e],n))).join(", ")+", ..., "+a.map(((t,e)=>zn(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Wn(t):Array.from(t)).map(((t,e)=>zn(t,s[e],n))).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,a=r+h;p.push(...Pn(t.slice(r,a),l,n,c,s,!1))}p.push("...");for(let e=o-3;e<o;e++){const r=e*h,a=r+h;p.push(...Pn(t.slice(r,a),l,n,c,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,a=r+h;p.push(...Pn(t.slice(r,a),l,n,c,s,e===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<u;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Wn(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Vn{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=f(t),null!=n){const t=n.length;c(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||I(e,this.size),this.strides=_(t)}set(t,...e){0===e.length&&(e=[0]),c(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Un().makeTensor(this.values,this.shape,this.dtype)}}let Un=null,Gn=null,Hn=null;class jn{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=f(t),this.strides=_(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Gn.buffer(this.shape,this.dtype,t)}bufferSync(){return Gn.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return O(this.shape,t)}arraySync(){return O(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=Un().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>_n(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Un().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>_n(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Un().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Un().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Gn.print(this,t)}clone(){return this.throwIfDisposed(),Gn.clone(this)}toString(t=!1){return Ln(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Gn.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Un().makeVariable(this,t,e,n)}}Object.defineProperty(jn,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class qn extends jn{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!m(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Un().disposeTensor(this),this.dataId=t.dataId,Un().incRef(this,null)}dispose(){Un().disposeVariable(this),this.isDisposedInternal=!0}}var Kn,Xn,Yn,Jn,Zn,Qn,tr,er,nr,rr;Object.defineProperty(qn,Symbol.hasInstance,{value:t=>t instanceof jn&&null!=t.assign&&t.assign instanceof Function}),(Xn=Kn||(Kn={})).R0="R0",Xn.R1="R1",Xn.R2="R2",Xn.R3="R3",Xn.R4="R4",Xn.R5="R5",Xn.R6="R6",(Jn=Yn||(Yn={})).float32="float32",Jn.int32="int32",Jn.bool="int32",Jn.complex64="complex64",(Qn=Zn||(Zn={})).float32="float32",Qn.int32="int32",Qn.bool="bool",Qn.complex64="complex64",(er=tr||(tr={})).float32="float32",er.int32="float32",er.bool="float32",er.complex64="complex64",(rr=nr||(nr={})).float32="complex64",rr.int32="complex64",rr.bool="complex64",rr.complex64="complex64";const sr={float32:tr,int32:Yn,bool:Zn,complex64:nr};function ar(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return sr[t][e]}function ir(t){return ar(t,"int32")}function or(t,e){if(t.dtype===e.dtype)return[t,e];const n=ar(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function ur(t,e){return e.some((e=>e.id===t.id))}function lr(t){const e=[];return cr(t,e,new Set),e}function cr(t,e,n){if(null==t)return;if(t instanceof jn)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),cr(r,e,n))}}class hr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class pr{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new hr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Fn(this.backendInstance),!0}setupRegisteredKernels(){Cn(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Cn(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof a||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return pr.nextTensorId++}nextVariableId(){return pr.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return fr.runKernelFunc((n=>n.cast(t,e)),n,null,Tt,r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,a,i){let o,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const d=In(r,this.backendName);let f,m;if(null!=d)p=()=>{const t=this.backend.numDataIds();f=d.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(l){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==i&&(i=[]);const e=o.filter(((t,e)=>i[e]));t=(a||[]).slice().concat(e)}u=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{l&&(u=t.map((t=>this.keep(this.clone(t)))))};p=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,e,(()=>p())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=p()})),l&&this.addTapeNode(r,e,o,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=$n(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(c(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const i=n.filter(((t,e)=>s[e]));return a.concat(i)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&T(t[0])&&(s=t.map((t=>Dn(t))));const a=r.write(s,e,n),i=new jn(e,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const t=this.state.tensorInfo.get(a),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){const s=new jn(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new qn(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*S(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof qn||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=$n(t);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=L(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=lr(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(c(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));c(s instanceof jn,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){a.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in r)a[r[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=M(f(t),"float32");return fr.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const a=e[s],i=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const e in a.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[e];if(!m(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=s;else{const e=t[i.id];t[i.id]=r(e,s),e.dispose()}}}}(t,a,(t=>this.tidy(t)),mr);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return c(R(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;c(e.every((t=>t instanceof jn)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),c(n.value instanceof jn,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c(R(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];c(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c(a.every((t=>t instanceof jn)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((t,e)=>{i[e]=()=>t})),i}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Rn(),n=await this.backend.time(t);return n.wallMs=Rn()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new hr;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function dr(){const t=ut();if(null==t._tfengine){const e=new U(t);t._tfengine=new pr(e)}var e;return e=t._tfengine.ENV,H=e,Un=()=>t._tfengine,t._tfengine}pr.nextTensorId=0,pr.nextVariableId=0;const fr=dr();function mr(t,e){const n={a:t,b:e};return fr.runKernelFunc(((n,r)=>{const s=n.add(t,e);return r([t,e]),s}),n,null,dt)}function gr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const yr=G();yr.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),yr.registerFlag("IS_BROWSER",(()=>gr())),yr.registerFlag("IS_NODE",(()=>void 0!==K&&void 0!==K.versions&&void 0!==K.versions.node)),yr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),yr.registerFlag("PROD",(()=>!1)),yr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>yr.getBool("DEBUG"))),yr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),yr.registerFlag("IS_TEST",(()=>!1));for(var br=function(t){for(var e,n=t.length,r=n%3,s=[],a=16383,i=0,o=n-r;i<o;i+=a)s.push($r(t,i,i+a>o?o:i+a));return 1===r?(e=t[n-1],s.push(xr[e>>2]+xr[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],s.push(xr[e>>10]+xr[e>>4&63]+xr[e<<2&63]+"=")),s.join("")},xr=[],wr=[],vr="undefined"!=typeof Uint8Array?Uint8Array:Array,kr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Nr=0,Ir=kr.length;Nr<Ir;++Nr)xr[Nr]=kr[Nr],wr[kr.charCodeAt(Nr)]=Nr;function $r(t,e,n){for(var r,s,a=[],i=e;i<n;i+=3)r=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),a.push(xr[(s=r)>>18&63]+xr[s>>12&63]+xr[s>>6&63]+xr[63&s]);return a.join("")}wr["-".charCodeAt(0)]=62,wr["_".charCodeAt(0)]=63;var Cr=function(t,e,n,r,s){var a,i,o=8*s-r-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?s-1:0,p=n?-1:1,d=t[e+h];for(h+=p,a=d&(1<<-c)-1,d>>=-c,c+=o;c>0;a=256*a+t[e+h],h+=p,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+t[e+h],h+=p,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=l}return(d?-1:1)*i*Math.pow(2,a-r)},Sr=function(t,e,n,r,s,a){var i,o,u,l=8*a-s-1,c=(1<<l)-1,h=c>>1,p=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=c):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),(e+=i+h>=1?p/u:p*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(e*u-1)*Math.pow(2,s),i+=h):(o=e*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;t[n+d]=255&o,d+=f,o/=256,s-=8);for(i=i<<s|o,l+=s;l>0;t[n+d]=255&i,d+=f,i/=256,l-=8);t[n+d-f]|=128*m},Tr="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null,Er=Dr,Ar=2147483647;function Rr(t){if(t>Ar)throw new RangeError('The value "'+t+'" is invalid for option "size"');var e=new Uint8Array(t);return Object.setPrototypeOf(e,Dr.prototype),e}function Dr(t,e,n){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return Or(t)}return _r(t,e,n)}function _r(t,e,n){if("string"==typeof t)return function(t,e){if("string"==typeof e&&""!==e||(e="utf8"),!Dr.isEncoding(e))throw new TypeError("Unknown encoding: "+e);var n=0|Br(t,e),r=Rr(n),s=r.write(t,e);return s!==n&&(r=r.slice(0,s)),r}(t,e);if(ArrayBuffer.isView(t))return function(t){if(hs(t,Uint8Array)){var e=new Uint8Array(t);return Lr(e.buffer,e.byteOffset,e.byteLength)}return Mr(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(hs(t,ArrayBuffer)||t&&hs(t.buffer,ArrayBuffer))return Lr(t,e,n);if("undefined"!=typeof SharedArrayBuffer&&(hs(t,SharedArrayBuffer)||t&&hs(t.buffer,SharedArrayBuffer)))return Lr(t,e,n);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=t.valueOf&&t.valueOf();if(null!=r&&r!==t)return Dr.from(r,e,n);var s=function(t){if(Dr.isBuffer(t)){var e=0|zr(t.length),n=Rr(e);return 0===n.length||t.copy(n,0,0,e),n}return void 0!==t.length?"number"!=typeof t.length||ps(t.length)?Rr(0):Mr(t):"Buffer"===t.type&&Array.isArray(t.data)?Mr(t.data):void 0}(t);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return Dr.from(t[Symbol.toPrimitive]("string"),e,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function Fr(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function Or(t){return Fr(t),Rr(t<0?0:0|zr(t))}function Mr(t){for(var e=t.length<0?0:0|zr(t.length),n=Rr(e),r=0;r<e;r+=1)n[r]=255&t[r];return n}function Lr(t,e,n){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(n||0))throw new RangeError('"length" is outside of buffer bounds');var r;return r=void 0===e&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,e):new Uint8Array(t,e,n),Object.setPrototypeOf(r,Dr.prototype),r}function zr(t){if(t>=Ar)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Ar.toString(16)+" bytes");return 0|t}function Br(t,e){if(Dr.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||hs(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var n=t.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;for(var s=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return us(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return ls(t).length;default:if(s)return r?-1:us(t).length;e=(""+e).toLowerCase(),s=!0}}function Pr(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return ts(this,e,n);case"utf8":case"utf-8":return Yr(this,e,n);case"ascii":return Zr(this,e,n);case"latin1":case"binary":return Qr(this,e,n);case"base64":return Xr(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return es(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function Wr(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function Vr(t,e,n,r,s){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),ps(n=+n)&&(n=s?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(s)return-1;n=t.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof e&&(e=Dr.from(e,r)),Dr.isBuffer(e))return 0===e.length?-1:Ur(t,e,n,r,s);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):Ur(t,[e],n,r,s);throw new TypeError("val must be string, number or Buffer")}function Ur(t,e,n,r,s){var a,i=1,o=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(s){var c=-1;for(a=n;a<o;a++)if(l(t,a)===l(e,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){for(var h=!0,p=0;p<u;p++)if(l(t,a+p)!==l(e,p)){h=!1;break}if(h)return a}return-1}function Gr(t,e,n,r){n=Number(n)||0;var s=t.length-n;r?(r=Number(r))>s&&(r=s):r=s;var a=e.length;r>a/2&&(r=a/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(ps(o))return i;t[n+i]=o}return i}function Hr(t,e,n,r){return cs(us(e,t.length-n),t,n,r)}function jr(t,e,n,r){return cs(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function qr(t,e,n,r){return cs(ls(e),t,n,r)}function Kr(t,e,n,r){return cs(function(t,e){for(var n,r,s,a=[],i=0;i<t.length&&!((e-=2)<0);++i)r=(n=t.charCodeAt(i))>>8,s=n%256,a.push(s),a.push(r);return a}(e,t.length-n),t,n,r)}function Xr(t,e,n){return 0===e&&n===t.length?br(t):br(t.slice(e,n))}function Yr(t,e,n){n=Math.min(t.length,n);for(var r=[],s=e;s<n;){var a,i,o,u,l=t[s],c=null,h=l>239?4:l>223?3:l>191?2:1;if(s+h<=n)switch(h){case 1:l<128&&(c=l);break;case 2:128==(192&(a=t[s+1]))&&(u=(31&l)<<6|63&a)>127&&(c=u);break;case 3:a=t[s+1],i=t[s+2],128==(192&a)&&128==(192&i)&&(u=(15&l)<<12|(63&a)<<6|63&i)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=t[s+1],i=t[s+2],o=t[s+3],128==(192&a)&&128==(192&i)&&128==(192&o)&&(u=(15&l)<<18|(63&a)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),s+=h}return function(t){var e=t.length;if(e<=Jr)return String.fromCharCode.apply(String,t);for(var n="",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=Jr));return n}(r)}Dr.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),Dr.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Dr.prototype,"parent",{enumerable:!0,get:function(){if(Dr.isBuffer(this))return this.buffer}}),Object.defineProperty(Dr.prototype,"offset",{enumerable:!0,get:function(){if(Dr.isBuffer(this))return this.byteOffset}}),Dr.poolSize=8192,Dr.from=function(t,e,n){return _r(t,e,n)},Object.setPrototypeOf(Dr.prototype,Uint8Array.prototype),Object.setPrototypeOf(Dr,Uint8Array),Dr.alloc=function(t,e,n){return function(t,e,n){return Fr(t),t<=0?Rr(t):void 0!==e?"string"==typeof n?Rr(t).fill(e,n):Rr(t).fill(e):Rr(t)}(t,e,n)},Dr.allocUnsafe=function(t){return Or(t)},Dr.allocUnsafeSlow=function(t){return Or(t)},Dr.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==Dr.prototype},Dr.compare=function(t,e){if(hs(t,Uint8Array)&&(t=Dr.from(t,t.offset,t.byteLength)),hs(e,Uint8Array)&&(e=Dr.from(e,e.offset,e.byteLength)),!Dr.isBuffer(t)||!Dr.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var n=t.length,r=e.length,s=0,a=Math.min(n,r);s<a;++s)if(t[s]!==e[s]){n=t[s],r=e[s];break}return n<r?-1:r<n?1:0},Dr.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Dr.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return Dr.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=Dr.allocUnsafe(e),s=0;for(n=0;n<t.length;++n){var a=t[n];if(hs(a,Uint8Array))s+a.length>r.length?Dr.from(a).copy(r,s):Uint8Array.prototype.set.call(r,a,s);else{if(!Dr.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,s)}s+=a.length}return r},Dr.byteLength=Br,Dr.prototype._isBuffer=!0,Dr.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)Wr(this,e,e+1);return this},Dr.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)Wr(this,e,e+3),Wr(this,e+1,e+2);return this},Dr.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)Wr(this,e,e+7),Wr(this,e+1,e+6),Wr(this,e+2,e+5),Wr(this,e+3,e+4);return this},Dr.prototype.toString=function(){var t=this.length;return 0===t?"":0===arguments.length?Yr(this,0,t):Pr.apply(this,arguments)},Dr.prototype.toLocaleString=Dr.prototype.toString,Dr.prototype.equals=function(t){if(!Dr.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===Dr.compare(this,t)},Dr.prototype.inspect=function(){var t="";return t=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(t+=" ... "),"<Buffer "+t+">"},Tr&&(Dr.prototype[Tr]=Dr.prototype.inspect),Dr.prototype.compare=function(t,e,n,r,s){if(hs(t,Uint8Array)&&(t=Dr.from(t,t.offset,t.byteLength)),!Dr.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),e<0||n>t.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&e>=n)return 0;if(r>=s)return-1;if(e>=n)return 1;if(this===t)return 0;for(var a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),o=Math.min(a,i),u=this.slice(r,s),l=t.slice(e,n),c=0;c<o;++c)if(u[c]!==l[c]){a=u[c],i=l[c];break}return a<i?-1:i<a?1:0},Dr.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},Dr.prototype.indexOf=function(t,e,n){return Vr(this,t,e,n,!0)},Dr.prototype.lastIndexOf=function(t,e,n){return Vr(this,t,e,n,!1)},Dr.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return Gr(this,t,e,n);case"utf8":case"utf-8":return Hr(this,t,e,n);case"ascii":case"latin1":case"binary":return jr(this,t,e,n);case"base64":return qr(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Kr(this,t,e,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},Dr.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Jr=4096;function Zr(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(127&t[s]);return r}function Qr(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(t[s]);return r}function ts(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var s="",a=e;a<n;++a)s+=ds[t[a]];return s}function es(t,e,n){for(var r=t.slice(e,n),s="",a=0;a<r.length-1;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function ns(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function rs(t,e,n,r,s,a){if(!Dr.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>s||e<a)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function ss(t,e,n,r,s,a){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function as(t,e,n,r,s){return e=+e,n>>>=0,s||ss(t,0,n,4),Sr(t,e,n,r,23,4),n+4}function is(t,e,n,r,s){return e=+e,n>>>=0,s||ss(t,0,n,8),Sr(t,e,n,r,52,8),n+8}Dr.prototype.slice=function(t,e){var n=this.length;(t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(e=void 0===e?n:~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r=this.subarray(t,e);return Object.setPrototypeOf(r,Dr.prototype),r},Dr.prototype.readUintLE=Dr.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||ns(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r},Dr.prototype.readUintBE=Dr.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||ns(t,e,this.length);for(var r=this[t+--e],s=1;e>0&&(s*=256);)r+=this[t+--e]*s;return r},Dr.prototype.readUint8=Dr.prototype.readUInt8=function(t,e){return t>>>=0,e||ns(t,1,this.length),this[t]},Dr.prototype.readUint16LE=Dr.prototype.readUInt16LE=function(t,e){return t>>>=0,e||ns(t,2,this.length),this[t]|this[t+1]<<8},Dr.prototype.readUint16BE=Dr.prototype.readUInt16BE=function(t,e){return t>>>=0,e||ns(t,2,this.length),this[t]<<8|this[t+1]},Dr.prototype.readUint32LE=Dr.prototype.readUInt32LE=function(t,e){return t>>>=0,e||ns(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},Dr.prototype.readUint32BE=Dr.prototype.readUInt32BE=function(t,e){return t>>>=0,e||ns(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},Dr.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||ns(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*e)),r},Dr.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||ns(t,e,this.length);for(var r=e,s=1,a=this[t+--r];r>0&&(s*=256);)a+=this[t+--r]*s;return a>=(s*=128)&&(a-=Math.pow(2,8*e)),a},Dr.prototype.readInt8=function(t,e){return t>>>=0,e||ns(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},Dr.prototype.readInt16LE=function(t,e){t>>>=0,e||ns(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},Dr.prototype.readInt16BE=function(t,e){t>>>=0,e||ns(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},Dr.prototype.readInt32LE=function(t,e){return t>>>=0,e||ns(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},Dr.prototype.readInt32BE=function(t,e){return t>>>=0,e||ns(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},Dr.prototype.readFloatLE=function(t,e){return t>>>=0,e||ns(t,4,this.length),Cr(this,t,!0,23,4)},Dr.prototype.readFloatBE=function(t,e){return t>>>=0,e||ns(t,4,this.length),Cr(this,t,!1,23,4)},Dr.prototype.readDoubleLE=function(t,e){return t>>>=0,e||ns(t,8,this.length),Cr(this,t,!0,52,8)},Dr.prototype.readDoubleBE=function(t,e){return t>>>=0,e||ns(t,8,this.length),Cr(this,t,!1,52,8)},Dr.prototype.writeUintLE=Dr.prototype.writeUIntLE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||rs(this,t,e,n,Math.pow(2,8*n)-1,0);var s=1,a=0;for(this[e]=255&t;++a<n&&(s*=256);)this[e+a]=t/s&255;return e+n},Dr.prototype.writeUintBE=Dr.prototype.writeUIntBE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||rs(this,t,e,n,Math.pow(2,8*n)-1,0);var s=n-1,a=1;for(this[e+s]=255&t;--s>=0&&(a*=256);)this[e+s]=t/a&255;return e+n},Dr.prototype.writeUint8=Dr.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,1,255,0),this[e]=255&t,e+1},Dr.prototype.writeUint16LE=Dr.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},Dr.prototype.writeUint16BE=Dr.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},Dr.prototype.writeUint32LE=Dr.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},Dr.prototype.writeUint32BE=Dr.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},Dr.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var s=Math.pow(2,8*n-1);rs(this,t,e,n,s-1,-s)}var a=0,i=1,o=0;for(this[e]=255&t;++a<n&&(i*=256);)t<0&&0===o&&0!==this[e+a-1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},Dr.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var s=Math.pow(2,8*n-1);rs(this,t,e,n,s-1,-s)}var a=n-1,i=1,o=0;for(this[e+a]=255&t;--a>=0&&(i*=256);)t<0&&0===o&&0!==this[e+a+1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},Dr.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},Dr.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},Dr.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},Dr.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},Dr.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||rs(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},Dr.prototype.writeFloatLE=function(t,e,n){return as(this,t,e,!0,n)},Dr.prototype.writeFloatBE=function(t,e,n){return as(this,t,e,!1,n)},Dr.prototype.writeDoubleLE=function(t,e,n){return is(this,t,e,!0,n)},Dr.prototype.writeDoubleBE=function(t,e,n){return is(this,t,e,!1,n)},Dr.prototype.copy=function(t,e,n,r){if(!Dr.isBuffer(t))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var s=r-n;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,n,r):Uint8Array.prototype.set.call(t,this.subarray(n,r),e),s},Dr.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Dr.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===t.length){var s=t.charCodeAt(0);("utf8"===r&&s<128||"latin1"===r)&&(t=s)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var i=Dr.isBuffer(t)?t:Dr.from(t,r),o=i.length;if(0===o)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(a=0;a<n-e;++a)this[a+e]=i[a%o]}return this};var os=/[^+/0-9A-Za-z-_]/g;function us(t,e){var n;e=e||1/0;for(var r=t.length,s=null,a=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!s){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(e-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function ls(t){return function(t){var e,n,r=function(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}(t),s=r[0],a=r[1],i=new vr(function(t,e,n){return 3*(e+n)/4-n}(0,s,a)),o=0,u=a>0?s-4:s;for(n=0;n<u;n+=4)e=wr[t.charCodeAt(n)]<<18|wr[t.charCodeAt(n+1)]<<12|wr[t.charCodeAt(n+2)]<<6|wr[t.charCodeAt(n+3)],i[o++]=e>>16&255,i[o++]=e>>8&255,i[o++]=255&e;return 2===a&&(e=wr[t.charCodeAt(n)]<<2|wr[t.charCodeAt(n+1)]>>4,i[o++]=255&e),1===a&&(e=wr[t.charCodeAt(n)]<<10|wr[t.charCodeAt(n+1)]<<4|wr[t.charCodeAt(n+2)]>>2,i[o++]=e>>8&255,i[o++]=255&e),i}(function(t){if((t=(t=t.split("=")[0]).trim().replace(os,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function cs(t,e,n,r){for(var s=0;s<r&&!(s+n>=e.length||s>=t.length);++s)e[s+n]=t[s];return s}function hs(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function ps(t){return t!=t}var ds=function(){for(var t="0123456789abcdef",e=new Array(256),n=0;n<16;++n)for(var r=16*n,s=0;s<16;++s)e[r+s]=t[n]+t[s];return e}();function fs(t,e){let n=t;if(C(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||C(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ms(t,r,[]),r}function ms(t,e,n){if(n=n||[],!Array.isArray(t)&&!C(t))return void c(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));c(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),c(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)ms(t[e],r,n.concat(e))}function gs(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function ys(t,e,n,r="numeric"){if(t instanceof jn)return gs(r,t.dtype,e,n),t;let s=A(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),gs(r,s,e,n),null==t||!C(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=fs(t,s);C(t)||Array.isArray(t)||(t=[t]);const i="string"!==s?An(t,s):d(t,[],!0);return fr.makeTensor(i,a,s)}function bs(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>ys(t,`${e}[${r}]`,n)),r)}function xs(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{fr.startScope(n);try{const e=r(...t);return V(e)&&console.error("Cannot return a Promise inside of tidy."),fr.endScope(e),e}catch(t){throw fr.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const ws=xs({complex_:function(t,e){const n=ys(t,"real","complex"),r=ys(e,"imag","complex");h(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return fr.runKernelFunc((t=>t.complex(n,r)),s,null,Rt)}});function vs(t,e,n,r){if(null==r&&(r=A(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!C(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){B(e);const t=f(e),r=f(n);c(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==f(e.slice(t));c(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return C(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?An(t,r):d(t,[],!0),fr.makeTensor(t,e,r)}function ks(t,e,n){return vs(t,e,fs(t,n),n)}const Ns={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Is=Er;async function $s(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:Cs(await Promise.all(r)),specs:n}}function Cs(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const Ss=void 0!==Is&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ts(t){return Ss?Is.byteLength(t):new Blob([t]).size}function Es(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function As(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Ts(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Ts(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Rs(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=t[n[i>>10]+(1023&i)]+e[i>>10];a[s]=o}return new Float32Array(s)}}class Ds{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ds.instance&&(Ds.instance=new Ds),Ds.instance}static registerSaveRouter(t){Ds.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Ds.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Ds.getHandlers(t,"save")}static getLoadHandlers(t,e){return Ds.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Ds.getInstance().loadRouters:Ds.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const _s=t=>Ds.getSaveHandlers(t),Fs="tensorflowjs",Os="models_store",Ms="model_info_store";function Ls(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function zs(t){const e=t.result;e.createObjectStore(Os,{keyPath:"modelPath"}),e.createObjectStore(Ms,{keyPath:"modelPath"})}class Bs{constructor(t){if(this.indexedDB=Ls(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(Fs,1);r.onupgradeneeded=()=>zs(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(Os,"readonly"),r=e.objectStore(Os).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=As(e),a=s.transaction(Ms,"readwrite");let i=a.objectStore(Ms);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(Os,"readwrite");const o=u.objectStore(Os).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=a.objectStore(Ms);const e=i.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}Bs.URL_SCHEME="indexeddb://";const Ps=t=>{return G().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Bs.URL_SCHEME)?(e=t.slice(Bs.URL_SCHEME.length),new Bs(e)):null;var e};Ds.registerSaveRouter(Ps),Ds.registerLoadRouter(Ps);class Ws{constructor(){this.indexedDB=Ls()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(Fs,1);n.onupgradeneeded=()=>zs(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Ms,"readonly"),a=s.objectStore(Ms).getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(r.close(),e(a.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Bs.URL_SCHEME)?e.slice(Bs.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(Fs,1);r.onupgradeneeded=()=>zs(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Ms,"readwrite"),i=a.objectStore(Ms),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),a=()=>{u=s.transaction(Os,"readwrite");const r=u.objectStore(Os).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=a,r.onerror=t=>(a(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const Vs="/",Us="tensorflowjs_models",Gs="info",Hs="model_topology",js="weight_specs",qs="weight_data",Ks="model_metadata";function Xs(t){return{info:[Us,t,Gs].join(Vs),topology:[Us,t,Hs].join(Vs),weightSpecs:[Us,t,js].join(Vs),weightData:[Us,t,qs].join(Vs),modelMetadata:[Us,t,Ks].join(Vs)}}function Ys(t){const e=t.split(Vs);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Vs)}class Js{constructor(t){if(!G().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Xs(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=As(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Ss)return Is.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Ss){const e=Is.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}Js.URL_SCHEME="localstorage://";const Zs=t=>{return G().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Js.URL_SCHEME)?(e=t.slice(Js.URL_SCHEME.length),new Js(e)):null;var e};Ds.registerSaveRouter(Zs),Ds.registerLoadRouter(Zs);class Qs{constructor(){c(G().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),c("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Us+Vs,n=Vs+Gs;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[Ys(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=Xs(t=(e=t).startsWith(Js.URL_SCHEME)?e.slice(Js.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class ta{constructor(){this.managers={}}static getInstance(){return null==ta.instance&&(ta.instance=new ta),ta.instance}static registerManager(t,e){c(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),c(t.length>0,(()=>"scheme must not be an empty string."));const n=ta.getInstance();c(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class ea{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(G().get("IS_BROWSER")){G().setPlatform("browser",new ea);try{ta.registerManager(Js.URL_SCHEME,new Qs)}catch(e){}try{ta.registerManager(Bs.URL_SCHEME,new Ws)}catch(e){}}var na=!1;function ra(){return na||(na=!0),{}}let sa;function aa(t,e="float32",n){return e=e||"float32",B(t),new Vn(t,e,n)}G().get("IS_NODE")&&G().setPlatform("node",new class{constructor(){this.util=ra(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=G().global.fetch?G().global.fetch(t,e):(null==sa&&(sa=ra()),sa(t,e))}now(){const t=K.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const ia=xs({cast_:function(t,e){const n=ys(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return fr.runKernelFunc((t=>t.cast(n,e)),r,null,Tt,s)}}),oa=xs({clone_:function(t){const e=ys(t,"x","clone",null),n={x:e};return fr.runKernelFunc((()=>fr.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,oe)}});function ua(t){return new Promise((t=>setTimeout(t))).then(t)}dr(),Gn={buffer:aa,cast:ia,clone:oa,print:function(t,e=!1){console.log(t.toString(e))}};class la{constructor(t){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(la.URL_SCHEME)&&(t=t.slice(la.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await ua((()=>a.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ua((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:As(t)}}}}function ca(t,e,n,r){!function(t){c(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){c(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),c(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),c(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((a=>(a.then((a=>{const i=n+ ++s/t.length*(r-n);return e(i),a})),a))))}la.URL_SCHEME="downloads://",Ds.registerSaveRouter((t=>G().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(la.URL_SCHEME)?function(t="model"){return new la(t)}(t.slice(la.URL_SCHEME.length)):null));class ha{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(c("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=G().platform.fetch,c(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&c(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:As(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const t=await this.loadWeights(r);[u,l]=t}const c={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i},h=e.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(s+t+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Es(await async function(t,e){null==e&&(e={});const n=null==e.fetchFunc?G().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await ca(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await ca(s,e.onProgress,.5,1)}(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function pa(t){return null!=t.match(ha.URL_SCHEME_REGEX)}ha.URL_SCHEME_REGEX=/^https?:\/\//;const da=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>pa(t))):pa(t),n)return fa(t,e)}return null};function fa(t,e){return new ha(t,e)}function ma(t,e){return fa(t,e)}Ds.registerSaveRouter(da),Ds.registerLoadRouter(da);const ga=xs({reshape_:function(t,e){const n=ys(t,"x","reshape",null),r={x:n},s={shape:e};return fr.runKernelFunc(((t,r)=>(e=w(e,n.size),c(n.size===f(e),(()=>"new shape and old shape must have the same number of elements.")),r([n]),t.reshape(n,e))),r,null,Be,s)}}),ya=xs({matMul_:function(t,e,n=!1,r=!1){let s=ys(t,"a","matMul"),a=ys(e,"b","matMul");[s,a]=or(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return fr.runKernelFunc(((t,e)=>{e([s,a]);const i=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?a.shape[a.rank-1]:a.shape[a.rank-2],u=n?s.shape[s.rank-1]:s.shape[s.rank-2],l=r?a.shape[a.rank-2]:a.shape[a.rank-1],h=s.shape.slice(0,-2),p=a.shape.slice(0,-2),d=f(h),m=f(p),g=d===m||1===d||1===m;c(s.rank>=2&&a.rank>=2&&g,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${p}).`)),c(i===o,(()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=(d>m?h:p).concat([u,l]),b=ga(s,n?[d,i,u]:[d,u,i]),x=ga(a,r?[m,l,o]:[m,o,l]),w=t.batchMatMul(b,x,n,r);return ga(w,y)}),i,null,$t,o)}}),ba=xs({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s=ys(t,"indices","oneHot","int32"),a=[...s.shape,e],i={indices:s},o={depth:e,onValue:n,offValue:r};return fr.runKernelFunc(((t,i)=>(i([s]),ga(t.oneHot(ga(s,[s.size]),e,n,r),a))),i,null,_e,o)}}),xa=xs({transpose_:function(t,e){const n=ys(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),c(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{c(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return fr.runKernelFunc((t=>t.transpose(n,e)),r,null,hn,s)}});let wa;xs({confusionMatrix_:function(t,e,n){const r=ys(t,"labels","confusionMatrix"),s=ys(e,"predictions","confusionMatrix");c(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),c(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),c(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),c(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),c(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=ba(ia(r,"int32"),n),i=ba(ia(s,"int32"),n),o=xa(a),u=ya(o,i);return ia(u,"int32")}});const va=xs({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else{if(null==t.getContext)throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);i=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=In(yn,fr.backendName)){const n={pixels:t},r={numChannels:e};return fr.runKernel(yn,n,r)}const[o,u]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,c;if(i?l=t.getContext("2d").getImageData(0,0,o,u).data:r||n?l=t.data:(a||s)&&(null==wa&&(wa=document.createElement("canvas").getContext("2d")),wa.canvas.width=o,wa.canvas.height=u,wa.drawImage(t,0,0,o,u),l=wa.getImageData(0,0,o,u).data),4===e)c=new Int32Array(l);else{const t=o*u;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=l[4*n+t]}return function(t,e,n){if(p(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=fs(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return vs(t,e,r,n)}(c,[u,o,e],"int32")}});function ka(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const a=t.shape,i=n.slice();i.pop();let o=1;for(let e=r;e<t.rank;++e)o*=a[e],i.push(a[e]);const u=[..._(t.shape).map((t=>t/o)),1].slice(0,r);return[i,s,o,u]}function Na(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let i=1;for(let t=s;t<a;++t)i*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:f(e.shape)/o,sliceSize:i,strides:[..._(n.slice(0,s)),1],outputSize:f(n)}}function Ia(t,e,n){const r=t.shape.length;c(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),c(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)c(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function $a(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Ca(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Sa(t,e,n){return n<=t?n:n-(e-1)}function Ta(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Ea(t,e,n,r,s,a,i,o,l){const c=t.length;let h=new Array(c),p=new Array(c),d=new Array(c);if(e.length&&n>0){const l=e[0],c=n+1;h=function(t,e,n,r,s){const a=[...s],i=Ta(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Sa(e,n,s);let o=r[i];t&1<<i&&(o=0),a[s]=o}return a}(i,l,c,r,t),p=function(t,e,n,r,s){const a=[...s],i=Ta(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Sa(e,n,s);let o=r[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let t=0;t<a.length;t++){const e=s[t];a[t]<0&&(a[t]+=e),a[t]=u(0,a[t],s[t])}return a}(o,l,c,s,t),d=function(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}(a,l,c,t)}else for(let e=0;e<c;e++)h[e]=Ra(i,r,a,t,e,l),p[e]=Da(o,s,a,t,e,l),d[e]=Aa(a,e,l);return{begin:h,end:p,strides:d}}function Aa(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Ra(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=u(0,i,l-1),i}function Da(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?u(0,i,l):u(-1,i,l-1),i}function _a(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Fa(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Oa(t,e,n){let r;const s=t.shape.length;let a;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{c(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(c(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,a]}class Ma{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class La{constructor(){this.classNameMap={}}static getMap(){return null==La.instance&&(La.instance=new La),La.instance}static register(t){La.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function za(t){c(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),c("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),c(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),La.register(t)}function Ba(t){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Pa(){return fr}function Wa(){return fr.memory()}function Va(t,e){return fr.tidy(t,e)}function Ua(t){lr(t).forEach((t=>t.dispose()))}function Ga(t){return fr.keep(t)}function Ha(t,e,n=1){return fr.registerBackend(t,e,n)}function ja(t){return fr.customGrad(t)}Hn=Ba;const qa=xs({abs_:function(t){const e=ys(t,"x","abs"),n={x:e};return fr.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,ct)}}),Ka=xs({acos_:function(t){const e=ys(t,"x","acos"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,ht)}}),Xa=xs({acosh_:function(t){const e=ys(t,"x","acosh"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,pt)}}),Ya=xs({add_:function(t,e){let n=ys(t,"a","add"),r=ys(e,"b","add");[n,r]=or(n,r);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.add(n,r);return e([n,r]),s}),s,null,dt)}}),Ja=xs({addN_:function(t){c(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),c(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>ys(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!m(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return fr.runKernelFunc(((t,n)=>{const r=t.addN(e);return n(e),r}),r,null,ft)}});function Za(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Qa(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function ti(t,e){return function(t,e,n){const r=t.length+e.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[a++]):s.push(e[i++]);return s}(t,e.map((t=>1)),e)}function ei(t,e,n){c(Za(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function ni(t,e){if(Za(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function ri(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function si(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const ai=xs({all_:function(t,e=null,n=!1){let r=ys(t,"x","all","bool");const s={x:r},a={axis:e,keepDims:n};return fr.runKernelFunc((t=>{const s=v(e,r.shape);let a=s;const i=ni(a,r.rank);null!=i&&(r=xa(r,i),a=si(a.length,r.rank));const o=t.all(r,a);if(n){const t=ti(o.shape,s);return ga(o,t)}return o}),s,null,"All",a)}}),ii=xs({any_:function(t,e=null,n=!1){let r=ys(t,"x","any","bool");const s={x:r},a={axis:e,keepDims:n};return fr.runKernelFunc((t=>{const s=v(e,r.shape);let a=s;const i=ni(a,r.rank);null!=i&&(r=xa(r,i),a=si(a.length,r.rank));const o=t.any(r,a);if(n){const t=ti(o.shape,s);return ga(o,t)}return o}),s,null,"Any",a)}}),oi=xs({argMax_:function(t,e=0){let n=ys(t,"x","argMax");const r={x:n},s={axis:e};return fr.runKernelFunc(((t,r)=>{r([n]);let s=v(e,n.shape);const a=ni(s,n.rank);return null!=a&&(n=xa(n,a),s=si(s.length,n.rank)),t.argMax(n,s[0])}),r,null,mt,s)}}),ui=xs({argMin_:function(t,e=0){let n=ys(t,"x","argMin");const r={x:n},s={axis:e};return fr.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let s=v(e,n.shape);const a=ni(s,n.rank);return null!=a&&(n=xa(n,a),s=si(s.length,n.rank)),t.argMin(n,s[0])}),r,null,gt,s)}}),li=xs({asin_:function(t){const e=ys(t,"x","asin"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,yt)}}),ci=xs({asinh_:function(t){const e=ys(t,"x","asinh"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,bt)}}),hi=xs({atan_:function(t){const e=ys(t,"x","atan"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,xt)}}),pi=xs({atan2_:function(t,e){let n=ys(t,"a","atan2"),r=ys(e,"b","atan2");[n,r]=or(n,r);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s}),s,null,vt)}}),di=xs({atanh_:function(t){const e=ys(t,"x","atanh"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,wt)}});function fi(t,e,n,r,s="NHWC",a){return yi(t,[...e,t[3]],n,a,r,null,null,Ci(s))}function mi(t,e,n,r,s,a,i="channelsLast"){const[o,u]=wi(e);let l;if("channelsLast"===i)l=[o,u,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,t[1],t[1]]}return yi(t,l,n,r,s,a,!1,i)}function gi(t,e,n,r,s,a,i="NDHWC"){const[o,u,l]=vi(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,t[1],t[1]]}return bi(t,c,n,r,s,!1,h,a)}function yi(t,e,n,r,s,a,i=!1,o="channelsLast"){let[u,l,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,h,p]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,p,l,h]=t}const[d,f,,m]=e,[y,b]=wi(n),[x,w]=wi(r),v=ki(d,x),k=ki(f,w),{padInfo:N,outHeight:I,outWidth:$}=function(t,e,n,r,s,a,i,o,u){let l,h,p;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=xi(t,e,n));const a=t[1],i=Ni((t[0]-e+2*r)/n+1,s);c(g(i),(()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`));const o=Ni((a-e+2*r)/n+1,s);return c(g(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[i,o]}([e,n],a,r,t,o);h=s[0],p=s[1]}else if("same"===t){h=Math.ceil(e/r),p=Math.ceil(n/s);const t=Math.max(0,(h-1)*r+a-e),o=Math.max(0,(p-1)*s+i-n),u=Math.floor(t/2),c=t-u,d=Math.floor(o/2);l={top:u,bottom:c,left:d,right:o-d,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-a+1)/r),p=Math.ceil((n-i+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const c="channelsLast"===u?t[1][0]:t[2][0],d="channelsLast"===u?t[1][1]:t[2][1],f="channelsLast"===u?t[2][0]:t[3][0],m="channelsLast"===u?t[2][1]:t[3][1];l={top:c,bottom:d,left:f,right:m,type:0===c&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},h=Ni((e-a+c+d)/r+1,o),p=Ni((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:h,outWidth:p}}(s,l,h,y,b,v,k,a,o),C=i?m*p:m;let S;return"channelsFirst"===o?S=[u,C,I,$]:"channelsLast"===o&&(S=[u,I,$,C]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:h,inChannels:p,outHeight:I,outWidth:$,outChannels:C,padInfo:N,strideHeight:y,strideWidth:b,filterHeight:d,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:k,dilationHeight:x,dilationWidth:w,inShape:t,outShape:S,filterShape:e}}function bi(t,e,n,r,s,a=!1,i="channelsLast",o){let[u,l,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,h,p,d]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,h,p]=t}const[f,m,y,,b]=e,[x,w,v]=vi(n),[k,N,I]=vi(r),$=ki(f,k),C=ki(m,N),S=ki(y,I),{padInfo:T,outDepth:E,outHeight:A,outWidth:R}=function(t,e,n,r,s,a,i,o,u,l,h){let p,d,f,m;if("number"==typeof t){p={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,s,a){null==s&&(s=xi(t,e,r));const i=t[1],o=t[2],u=Ni((t[0]-e+2*s)/r+1,a);c(g(u),(()=>`The output # of depths (${u}) must be an integer. Change the stride and/or zero pad parameters`));const l=Ni((i-e+2*s)/r+1,a);c(g(l),(()=>`The output # of rows (${l}) must be an integer. Change the stride and/or zero pad parameters`));const h=Ni((o-e+2*s)/r+1,a);return c(g(h),(()=>`The output # of columns (${h}) must be an integer. Change the stride and/or zero pad parameters`)),[u,l,h,1]}([e,n,r,1],o,0,s,t,h);d=a[0],f=a[1],m=a[2]}else if("same"===t){d=Math.ceil(e/s),f=Math.ceil(n/a),m=Math.ceil(r/i);const t=(d-1)*s+o-e,c=(f-1)*a+u-n,h=(m-1)*i+l-r,g=Math.floor(t/2),y=t-g,b=Math.floor(c/2),x=c-b,w=Math.floor(h/2);p={top:b,bottom:x,left:w,right:h-w,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),f=Math.ceil((n-u+1)/a),m=Math.ceil((r-l+1)/i)}return{padInfo:p,outDepth:d,outHeight:f,outWidth:m}}(s,l,h,p,x,w,v,$,C,S,o),D=a?b*d:b;let _;return"channelsFirst"===i?_=[u,D,E,A,R]:"channelsLast"===i&&(_=[u,E,A,R,D]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:h,inWidth:p,inChannels:d,outDepth:E,outHeight:A,outWidth:R,outChannels:D,padInfo:T,strideDepth:x,strideHeight:w,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:y,effectiveFilterDepth:$,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:k,dilationHeight:N,dilationWidth:I,inShape:t,outShape:_,filterShape:e}}function xi(t,e,n,r=1){const s=ki(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function wi(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function vi(t){return"number"==typeof t?[t,t,t]:t}function ki(t,e){return e<=1?t:t+(t-1)*(e-1)}function Ni(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ii(t){const[e,n,r]=wi(t);return 1===e&&1===n&&1===r}function $i(t,e){return Ii(t)||Ii(e)}function Ci(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const Si=xs({avgPool_:function(t,e,n,r,s){const a=ys(t,"x","avgPool","float32");c($i(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=ga(a,[1,a.shape[0],a.shape[1],a.shape[2]])),c(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&c(g(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let h=fr.runKernelFunc(((t,a)=>{const o=mi(i.shape,e,n,1,r,s);return a([i]),1===o.filterWidth&&1===o.filterHeight&&m(o.inShape,o.outShape)?i.clone():t.avgPool(i,o)}),u,null,kt,l);return h=ia(h,a.dtype),o?ga(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ti=xs({avgPool3d_:function(t,e,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Ba("dilations is deprecated, this field will be gone in v3.0.0.");const o=ys(t,"x","avgPool3d","float32");let u=o,l=!1;4===o.rank&&(l=!0,u=ga(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),c(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),c("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),c($i(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&c(g(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const h={x:u},p={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let d=fr.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const l=gi(u.shape,e,n,i,r,s,a);return o([u]),t.avgPool3d(u,l)}),h,null,It,p);return d=ia(d,u.dtype),l?ga(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ei=xs({batchToSpaceND_:function(t,e,n){const r=ys(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));c(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),c(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),c(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const a={x:r},i={blockShape:e,crops:n};return fr.runKernelFunc((t=>t.batchToSpaceND(r,e,n)),a,null,Ct,i)}});function Ai(t){return null==t?null:0===t.rank?ga(t,[t.size]):1===t.rank?t:2===t.rank?ga(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?ga(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const Ri=xs({batchNorm_:function(t,e,n,r,s,a){null==a&&(a=.001);const i=ys(t,"x","batchNorm"),o=ys(e,"mean","batchNorm"),u=ys(n,"variance","batchNorm");let l,h;null!=s&&(l=ys(s,"scale","batchNorm")),null!=r&&(h=ys(r,"offset","batchNorm")),c(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),c(null==h||o.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),c(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p=function(t){let e;return e=0===t.rank||1===t.rank?ga(t,[1,1,1,t.size]):2===t.rank?ga(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?ga(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(i),d={x:p,scale:l,offset:h,mean:o,variance:u},f={varianceEpsilon:a},m=fr.runKernelFunc(((t,e)=>(e([p,o,u,l]),t.batchNorm(p,Ai(o),Ai(u),Ai(h),Ai(l),a))),d,null,se,f);return ga(m,i.shape)}}),Di=xs({batchNorm2d_:function(t,e,n,r,s,a){const i=ys(t,"x","batchNorm"),o=ys(e,"mean","batchNorm"),u=ys(n,"variance","batchNorm");let l,h;return null!=s&&(l=ys(s,"scale","batchNorm")),null!=r&&(h=ys(r,"offset","batchNorm")),c(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),c(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),c(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&c(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=h&&c(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),Ri(i,o,u,h,l,a)}}),_i=xs({batchNorm3d_:function(t,e,n,r,s,a){const i=ys(t,"x","batchNorm"),o=ys(e,"mean","batchNorm"),u=ys(n,"variance","batchNorm");let l,h;return null!=s&&(l=ys(s,"scale","batchNorm")),null!=r&&(h=ys(r,"offset","batchNorm")),c(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),c(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),c(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&c(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=h&&c(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),Ri(i,o,u,h,l,a)}}),Fi=xs({batchNorm4d_:function(t,e,n,r,s,a){const i=ys(t,"x","batchNorm"),o=ys(e,"mean","batchNorm"),u=ys(n,"variance","batchNorm");let l,h;return null!=s&&(l=ys(s,"scale","batchNorm")),null!=r&&(h=ys(r,"offset","batchNorm")),c(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),c(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),c(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&c(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=h&&c(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),Ri(i,o,u,h,l,a)}}),Oi=xs({broadcastTo_:function(t,e){let n=ys(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=ga(n,t)}const s=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return oa(n);const i={x:n},o={shape:e,inputShape:s};return fr.runKernelFunc((t=>t.tile(n,a)),i,null,St,o)}}),Mi=xs({ceil_:function(t){const e=ys(t,"x","ceil"),n={x:e};return fr.runKernelFunc((t=>t.ceil(e)),n,null,Et)}}),Li=xs({clipByValue_:function(t,e,n){const r=ys(t,"x","clipByValue");c(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:e,clipValueMax:n};return fr.runKernelFunc(((t,s)=>{const a=t.clip(r,e,n);return s([r]),a}),s,null,At,a)}});function zi(t,e){const n=t[0].length;t.forEach(((t,e)=>{c(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),c(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let a=0;a<n;a++)c(a===e||t[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Bi(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const Pi=xs({concat_:function(t,e=0){c(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=bs(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const r=n,s={axis:e};return fr.runKernelFunc(((t,r)=>{const s=v(e,n[0].shape)[0],a=Bi(n.map((t=>t.shape)),s);if(0===f(a))return ks([],a);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];zi(n.map((t=>t.shape)),s);const i=t.concat(n,s);return r(n),i}),r,null,Dt,s)}}),Wi=xs({concat1d_:function(t){return Pi(t,0)}}),Vi=xs({concat2d_:function(t,e){return Pi(t,e)}}),Ui=xs({concat3d_:function(t,e){return Pi(t,e)}}),Gi=xs({concat4d_:function(t,e){return Pi(t,e)}}),Hi=xs({conv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=ys(t,"x","conv2d"),u=ys(e,"filter","conv2d");let l=o,h=!1;3===o.rank&&(h=!0,l=ga(o,[1,o.shape[0],o.shape[1],o.shape[2]])),c(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),c(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=i&&c(g(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p="NHWC"===s?l.shape[3]:l.shape[1];c(p===u.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`)),c($i(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:l,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=fr.runKernelFunc(((t,e)=>{const o=Ci(s),c=yi(l.shape,u.shape,n,a,r,i,!1,o),h=t.conv2d(l,u,c);return e([l,u]),h}),d,null,_t,f);return h?ga(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ji=xs({conv1d_:function(t,e,n,r,s="NWC",a=1,i){const o=ys(t,"x","conv1d"),u=ys(e,"filter","conv1d");let l=o,h=!1;2===o.rank&&(h=!0,l=ga(o,[1,o.shape[0],o.shape[1]])),c(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),c(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=i&&c(g(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),c(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),c($i(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),c("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const p=ga(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=ga(l,[l.shape[0],1,l.shape[1],l.shape[2]]),f=Hi(d,p,[1,n],r,"NHWC",[1,a],i);return ga(f,h?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),qi=xs({conv2DBackpropInput_:function(t,e,n,r,s,a="NHWC",i){c(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,u=e,l=!1;3===e.rank&&(l=!0,u=ga(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),c(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),c(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),c(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===a?o[3]:o[1],p="NHWC"===a?u.shape[3]:u.shape[1];c(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),c(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&c(g(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:u,filter:n},f={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},m=fr.runKernelFunc(((t,e)=>{const l=Ci(a),c=yi(o,n.shape,r,1,s,i,!1,l),h=t.conv2dDerInput(u,n,c);return e([u,n]),h}),d,null,Ot,f);return l?ga(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ki=xs({conv2dTranspose_:function(t,e,n,r,s,a){const i=ys(t,"x","conv2dTranspose"),o=ys(e,"filter","conv2dTranspose");return qi(n,i,o,r,s,"NHWC",a)}}),Xi=xs({conv3d_:function(t,e,n,r,s="NDHWC",a=[1,1,1]){const i=ys(t,"x","conv3d"),o=ys(e,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=ga(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),c(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),c(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),c(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),c($i(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),c("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const h={x:u,filter:o},p={strides:n,pad:r,dataFormat:s,dilations:a},d=fr.runKernelFunc(((t,e)=>{const s=bi(u.shape,o.shape,n,a,r),i=t.conv3d(u,o,s);return e([u,o]),i}),h,null,Mt,p);return l?ga(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Yi=xs({cos_:function(t){const e=ys(t,"x","cos"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,Bt)}}),Ji=xs({cosh_:function(t){const e=ys(t,"x","cosh"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,Pt)}}),Zi=xs({cumsum_:function(t,e=0,n=!1,r=!1){const s=ys(t,"x","cumsum"),a={x:s},i={axis:e,exclusive:n,reverse:r};return fr.runKernelFunc(((t,a)=>{const i=ni([e],s.rank);let o=s;null!=i&&(o=xa(s,i));const u=si(1,s.rank)[0];let l=t.cumsum(o,u,n,r);if(a([s]),null!=i){const t=ri(i);l=xa(l,t)}return l}),a,null,Wt,i)}}),Qi=xs({depthToSpace_:function(t,e,n="NHWC"){const r=ys(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];c(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),c(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),c(i%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:e,dataFormat:n};return fr.runKernelFunc((t=>t.depthToSpace(r,e,n)),o,null,"DepthToSpace",u)}}),to=xs({depthwiseConv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=ys(t,"x","depthwiseConv2d"),u=ys(e,"filter","depthwiseConv2d");let l=o,h=!1;3===o.rank&&(h=!0,l=ga(o,[1,o.shape[0],o.shape[1],o.shape[2]])),c(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),c(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),c(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&c(g(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=fr.runKernelFunc(((t,e)=>{null==a&&(a=[1,1]),c($i(n,a),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const s=yi(l.shape,u.shape,n,a,r,i,!0),o=t.depthwiseConv2D(l,u,s);return e([l,u]),o}),p,null,Vt,d);return h?ga(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),eo=xs({dilation2d_:function(t,e,n,r,s=[1,1],a="NHWC"){const i=ys(t,"x","dilation2d"),o=ys(e,"filter","dilation2d");c(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),c(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),c("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=i,l=!1;3===i.rank&&(u=ga(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const h={x:u,filter:o},p={strides:n,pad:r,dilations:s},d=fr.runKernel(Ht,h,p);return l?ga(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),no=xs({floorDiv_:function(t,e){let n=ys(t,"a","floorDiv"),r=ys(e,"b","floorDiv");[n,r]=or(n,r);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s}),s,null,re)}}),ro=xs({div_:function(t,e){let n=ys(t,"a","div"),r=ys(e,"b","div");if([n,r]=or(n,r),"int32"===n.dtype&&"int32"===r.dtype)return no(n,r);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s}),s,null,Kt,{})}});function so(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=t[a]||1;(e[e.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function ao(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function io(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const oo=xs({equal_:function(t,e){let n=ys(t,"a","equal"),r=ys(e,"b","equal");[n,r]=or(n,r),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc((t=>t.equal(n,r)),s,null,"Equal")}}),uo=xs({where_:function(t,e,n){const r=ys(e,"a","where"),s=ys(n,"b","where"),a=ys(t,"condition","where","bool"),i=io(r.shape,s.shape),o=Oi(r,i),u=Oi(s,i);1===a.rank&&c(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&h(a.shape,u.shape,"Error in where: ");const l={condition:a,t:o,e:u};return fr.runKernelFunc(((t,e)=>{const n=t.select(a,o,u);return e([a]),n}),l,null,je)}}),lo=xs({zerosLike_:function(t){const e=ys(t,"x","zerosLike"),n={x:e};return fr.runKernelFunc((t=>t.zerosLike(e)),n,null,mn)}}),co=xs({divNoNan_:function(t,e){let n=ys(t,"a","div"),r=ys(e,"b","div");[n,r]=or(n,r);const s=ro(n,r),a=lo(s),i=oo(r,a);return uo(i,a,s)}}),ho=xs({elu_:function(t){const e=ys(t,"x","elu"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,Xt)}}),po=xs({erf_:function(t){let e=ys(t,"x","erf");c("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=ia(e,"float32"));const n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,Yt)}}),fo=xs({exp_:function(t){const e=ys(t,"x","exp"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,Jt)}}),mo=xs({expandDims_:function(t,e=0){const n=ys(t,"x","expandDims",null);c(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return e<0&&(c(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),r.splice(e,0,1),ga(n,r)}}),go=xs({expm1_:function(t){const e=ys(t,"x","expm1"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,Zt)}}),yo=xs({tile_:function(t,e){const n=ys(t,"x","tile",null);c(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r=[n],s={x:n},a={reps:e};return fr.runKernelFunc(((t,r)=>{const s=t.tile(n,e);return r([n]),s}),s,null,cn,a,r)}}),bo=xs({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=aa([t,e],r),a=t<=e?t:e;for(let t=0;t<a;++t)s.set(1,t,t);const i=ga(s.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return yo(mo(i,0),[n[0],1,1]);if(2===n.length)return yo(mo(mo(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return yo(mo(mo(mo(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function xo(t,e,n){const r={shape:t,value:e,dtype:n};return fr.runKernelFunc((r=>r.fill(t,e,n)),{},null,te,r)}const wo=xs({floor_:function(t){const e=ys(t,"x","floor"),n={x:e};return fr.runKernelFunc((t=>t.floor(e)),n,null,ne)}});function vo(t){return t<=30?t:D(t,Math.floor(Math.sqrt(t)))}const ko=xs({gather_:function(t,e,n=0){const r=ys(t,"x","gather"),s=ys(e,"indices","gather","int32"),a={x:r,indices:s},i={axis:n};return fr.runKernelFunc(((t,e)=>{const a=v(n,r.shape)[0],i=function(t,e,n){const r=t.shape[n],s=[];let a=1,i=1;for(let e=0;e<n;e++)s.push(t.shape[e]),a*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),i*=t.shape[e];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:s}}(r,s,a),o=t.gather(r,ga(s,[s.size]),a);return e([r,s]),ga(o,i.outputShape)}),a,null,ae,i)}}),No=xs({greater_:function(t,e){let n=ys(t,"a","greater"),r=ys(e,"b","greater");[n,r]=or(n,r),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc((t=>t.greater(n,r)),s,null,"Greater")}}),Io=xs({greaterEqual_:function(t,e){let n=ys(t,"a","greaterEqual"),r=ys(e,"b","greaterEqual");[n,r]=or(n,r),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s}),s,null,ie)}}),$o=xs({imag_:function(t){const e=ys(t,"input","imag"),n={input:e};return fr.runKernelFunc((t=>t.imag(e)),n,null,le)}}),Co=xs({isFinite_:function(t){const e=ys(t,"x","isFinite"),n={x:e};return fr.runKernelFunc((t=>t.isFinite(e)),n,null,ce)}}),So=xs({isInf_:function(t){const e=ys(t,"x","isInf"),n={x:e};return fr.runKernelFunc((t=>t.isInf(e)),n,null,he)}}),To=xs({isNaN_:function(t){const e=ys(t,"x","isNaN"),n={x:e};return fr.runKernelFunc((t=>t.isNaN(e)),n,null,pe)}}),Eo=xs({maximum_:function(t,e){let n=ys(t,"a","maximum"),r=ys(e,"b","maximum");[n,r]=or(n,r),"bool"===n.dtype&&(n=ia(n,"int32"),r=ia(r,"int32")),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s}),s,null,be)}}),Ao=xs({mul_:function(t,e){let n=ys(t,"a","mul"),r=ys(e,"b","mul");[n,r]=or(n,r);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s}),s,null,Ce)}});function Ro(t,e){if((C(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&C(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return vs(t,[],[],e)}const Do=xs({leakyRelu_:function(t,e=.2){const n=ys(t,"x","leakyRelu");return Eo(Ao(Ro(e),n),n)}}),_o=xs({less_:function(t,e){let n=ys(t,"a","less"),r=ys(e,"b","less");[n,r]=or(n,r),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc((t=>t.less(n,r)),s,null,"Less")}}),Fo=xs({lessEqual_:function(t,e){let n=ys(t,"a","lessEqual"),r=ys(e,"b","lessEqual");[n,r]=or(n,r),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s}),s,null,"LessEqual")}});function Oo(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return fr.runKernelFunc((r=>r.linspace(t,e,n)),{},null,"LinSpace",r)}const Mo=xs({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const a=ys(t,"x","localResponseNormalization");c(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),c(g(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=ga(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:e,bias:n,alpha:r,beta:s},h=fr.runKernelFunc(((t,a)=>{const o=t.localResponseNormalization4D(i,e,n,r,s);return a([i,o]),o}),u,null,"LRN",l);return o?ga(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Lo=xs({log_:function(t){const e=ys(t,"x","log"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,de)}}),zo=xs({log1p_:function(t){const e=ys(t,"x","log1p"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,fe)}}),Bo=xs({neg_:function(t){const e=ys(t,"x","neg"),n={x:e};return fr.runKernelFunc((t=>t.neg(e)),n,null,Se)}}),Po=xs({sigmoid_:function(t){const e=ys(t,"x","sigmoid"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,Ze)}}),Wo=xs({softplus_:function(t){const e=ys(t,"x","softplus"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,Qe)}}),Vo=xs({logSigmoid_:function(t){const e=ys(t,"x","logSigmoid");return ja((t=>({value:Bo(Wo(Bo(t))),gradFunc:e=>Ao(e,Po(Bo(t)))})))(e)}}),Uo=xs({max_:function(t,e=null,n=!1){const r=ys(t,"x","max"),s={x:r},a={reductionIndices:e,keepDims:n};return fr.runKernelFunc(((t,s)=>{let a=v(e,r.shape);const i=ni(a,r.rank);let o=r;null!=i&&(o=xa(r,i),a=si(a.length,o.rank));const u=t.max(o,a);null!=i&&o.dispose();let l=u;if(n){const t=ti(l.shape,v(e,r.shape));l=ga(l,t),u.dispose()}return s([r,l]),l}),s,null,ye,a)}}),Go=xs({sub_:function(t,e){let n=ys(t,"a","sub"),r=ys(e,"b","sub");[n,r]=or(n,r);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s}),s,null,on)}}),Ho=xs({sum_:function(t,e=null,n=!1){let r=ys(t,"x","sum");"bool"===r.dtype&&(r=ia(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return fr.runKernelFunc(((t,s)=>{s([r]);const a=v(e,r.shape),i=ni(a,r.rank);let o=a,u=r;null!=i&&(u=xa(r,i),o=si(o.length,r.rank));let l=t.sum(u,o);if(n){const t=ti(l.shape,a);l=ga(l,t)}return l}),s,null,"Sum",a)}}),jo=xs({logSoftmax_:function(t,e=-1){const n=ys(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return fr.runKernelFunc(((n,r)=>{const s=Uo(t,e,!0),a=Go(t,s),i=Go(ia(a,"float32"),Lo(Ho(fo(a),e,!0)));return r([i]),i}),r,null,ge,s)}}),qo=xs({logicalAnd_:function(t,e){const n=ys(t,"a","logicalAnd","bool"),r=ys(e,"b","logicalAnd","bool");io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc((t=>t.logicalAnd(n,r)),s,null,"LogicalAnd")}}),Ko=xs({logicalNot_:function(t){const e=ys(t,"x","logicalNot","bool"),n={x:e};return fr.runKernelFunc((t=>t.logicalNot(e)),n,null,me)}}),Xo=xs({logicalOr_:function(t,e){const n=ys(t,"a","logicalOr","bool"),r=ys(e,"b","logicalOr","bool");io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc((t=>t.logicalOr(n,r)),s,null,"LogicalOr")}}),Yo=xs({maxPool_:function(t,e,n,r,s){const a=ys(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=ga(a,[1,a.shape[0],a.shape[1],a.shape[2]])),c(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),c($i(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&c(g(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s},h=fr.runKernelFunc(((t,a)=>{const o=mi(i.shape,e,n,1,r,s);let u;return u=1===o.filterWidth&&1===o.filterHeight&&m(o.inShape,o.outShape)?i.clone():t.maxPool(i,o),a([i,u]),u}),u,null,xe,l);return o?ga(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Jo=xs({maxPool3d_:function(t,e=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Ba("dilations is deprecated, this field will be gone in v3.0.0.");const o=ys(t,"x","maxPool3d");let u=o,l=!1;4===o.rank&&(l=!0,u=ga(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),c(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),c("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),c($i(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&c(g(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const h={x:u},p={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},d=fr.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const l=gi(u.shape,e,n,i,r,s,a),c=t.maxPool3d(u,l);return o([u,c]),c}),h,null,ve,p);return l?ga(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Zo=xs({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const a={x:ys(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},o=fr.runKernel(ke,a,i);return{result:o[0],indexes:o[1]}}});function Qo(t,e="float32"){if("complex64"===e){const e=Qo(t,"float32"),n=Qo(t,"float32");return ws(e,n)}const n=L(f(t),e);return fr.makeTensor(n,t,e)}function tu(t,e="float32"){if("complex64"===e){const e=tu(t,"float32"),n=Qo(t,"float32");return ws(e,n)}const n=M(f(t),e);return fr.makeTensor(n,t,e)}const eu=xs({mean_:function(t,e=null,n=!1){const r=ys(t,"x","mean"),s=v(e,r.shape),a=f(Qa(r.shape,s)[1]),i={x:r},o={axis:e,keepDims:n},u=()=>{const t=Ro(a),s=t.dtype===r.dtype?r:ia(r,t.dtype),i=ro(s,t);return Ho(i,e,n)};return ja((t=>({value:fr.runKernelFunc(u,i,null,Ne,o),gradFunc:e=>{const n=t.shape.slice();s.forEach((t=>{n[t]=1}));const r=ga(e,n);return ro(Ao(r,tu(t.shape,"float32")),a)}})))(r)}}),nu=xs({min_:function(t,e=null,n=!1){const r=ys(t,"x","min"),s={x:r},a={axis:e,keepDims:n};return fr.runKernelFunc(((t,s)=>{const a=v(e,r.shape);let i=a;const o=ni(i,r.rank);let u=r;null!=o&&(u=xa(r,o),i=si(i.length,r.rank));const l=t.min(u,i);null!=o&&u.dispose();let c=l;if(n){const t=ti(c.shape,a);c=ga(l,t),l.dispose()}return s([r,c]),c}),s,null,"Min",a)}}),ru=xs({minimum_:function(t,e){let n=ys(t,"a","minimum"),r=ys(e,"b","minimum");[n,r]=or(n,r),"bool"===n.dtype&&(n=ia(n,"int32"),r=ia(r,"int32")),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s}),s,null,Ie)}}),su=xs({mirrorPad_:function(t,e,n){c("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=ys(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");c(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)c(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),c(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:e,mode:n},i={x:r};return fr.runKernel($e,i,a)}}),au=xs({mod_:function(t,e){let n=ys(t,"a","mod"),r=ys(e,"b","mod");[n,r]=or(n,r);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.mod(n,r);return e([n,r]),s}),s,null,"Mod")}}),iu=xs({square_:function(t){const e=ys(t,"x","square"),n=[e];return fr.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}}),ou=xs({moments_:function(t,e=null,n=!1){const r=v(e,(t=ys(t,"x","moments")).shape),s=eu(t,r,n);let a=s.shape;n||(a=ti(s.shape,r));const i=iu(Go(ia(t,"float32"),ga(s,a)));return{mean:s,variance:eu(i,r,n)}}}),uu=xs({multinomial_:function(t,e,n,r=!1){const s=ys(t,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o=1===i?ga(s,[1,-1]):s,u=fr.runKernelFunc((t=>t.multinomial(o,r,e,n)),{logits2D:o});return 1===i?ga(u,[u.size]):u}}),lu=xs({notEqual_:function(t,e){let n=ys(t,"a","notEqual"),r=ys(e,"b","notEqual");[n,r]=or(n,r),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc((t=>t.notEqual(n,r)),s,null,Te)}}),cu=xs({real_:function(t){const e=ys(t,"input","real"),n={input:e};return fr.runKernelFunc((t=>t.real(e)),n,null,Me)}}),hu=xs({onesLike_:function(t){const e=ys(t,"x","onesLike"),n={x:e};return fr.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=hu(cu(e)),n=lo($o(e));return ws(t,n)}return t.onesLike(e)}),n,null,De)}}),pu=xs({pad_:function(t,e,n=0){const r=ys(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},a={x:r};return fr.runKernelFunc(((t,s)=>(s([r]),t.pad(r,e,n))),a,null,Fe,s)}}),du=xs({pow_:function(t,e){let n=ys(t,"base","pow"),r=ys(e,"exp","pow");[n,r]=or(n,r);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s}),s,null,"Pow")}}),fu=xs({prelu_:function(t,e){const n=ys(t,"x","prelu"),r=ys(e,"alpha","prelu"),s={x:n,alpha:r};return fr.runKernelFunc(((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s}),s,null,Oe)}}),mu=xs({prod_:function(t,e=null,n=!1){let r=ys(t,"x","prod");"bool"===r.dtype&&(r=ia(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return fr.runKernelFunc((t=>{const s=v(e,r.shape),a=ni(s,r.rank);let i=s,o=r;null!=a&&(o=xa(r,a),i=si(i.length,r.rank));let u=t.prod(o,i);if(n){const t=ti(u.shape,s);u=ga(u,t)}return u}),s,null,"Prod",a)}});var gu={},yu=function(){var t={exports:this};return function(t,e,n){function r(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function s(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function a(t,e){var n=new r(t),a=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:this.alea=a}(0,"object"==typeof t&&t),t.exports}.call({}),bu=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:this.xor128=a}(0,"object"==typeof t&&t),t.exports}.call({}),xu=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:this.xorwow=a}(0,"object"==typeof t&&t),t.exports}.call({}),wu=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function s(t,e){return e.x=t.x.slice(),e.i=t.i,e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.x&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:this.xorshift7=a}(0,"object"==typeof t&&t),t.exports}.call({}),vu=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}(e,t)}function s(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.X&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:this.xor4096=a}(0,"object"==typeof t&&t),t.exports}.call({}),ku=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:this.tychei=a}(0,"object"==typeof t&&t),t.exports}.call({}),Nu={};!function(t,e){var n,r=this,s=256,a=e.pow(s,6),i=e.pow(2,52),o=2*i,u=255;function l(u,l,m){var g=[],y=d(p((l=1==l?{entropy:!0}:l||{}).entropy?[u,f(t)]:null==u?function(){try{var e;return n&&(e=n.randomBytes)?e=e(s):(e=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(e)),f(e)}catch(e){var a=r.navigator,i=a&&a.plugins;return[+new Date,r,i,r.screen,f(t)]}}():u,3),g),b=new c(g),x=function(){for(var t=b.g(6),e=a,n=0;t<i;)t=(t+n)*s,e*=s,n=b.g(1);for(;t>=o;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,d(f(b.S),t),(l.pass||m||function(t,n,r,s){return s&&(s.S&&h(s,b),t.state=function(){return h(b,{})}),r?(e.random=t,n):t})(x,y,"global"in l?l.global:this==e,l.state)}function c(t){var e,n=t.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=u&i+t[a%n]+(e=o[a])],o[i]=e;(r.g=function(t){for(var e,n=0,a=r.i,i=r.j,o=r.S;t--;)e=o[a=u&a+1],n=n*s+o[u&(o[a]=o[i=u&i+e])+(o[i]=e)];return r.i=a,r.j=i,n})(s)}function h(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function p(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(p(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function d(t,e){for(var n,r=t+"",s=0;s<r.length;)e[u&s]=u&(n^=19*e[u&s])+r.charCodeAt(s++);return f(e)}function f(t){return String.fromCharCode.apply(0,t)}if(e.seedrandom=l,d(e.random(),t),Nu){Nu=l;try{n=ra()}catch(t){}}}([],Math),Nu.alea=yu,Nu.xor128=bu,Nu.xorwow=xu,Nu.xorshift7=wu,Nu.xor4096=vu,Nu.tychei=ku,gu=Nu;class Iu{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=gu.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class $u{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=gu.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Cu=xs({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Iu(e,n,r,!1,s),i=aa(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),Su=xs({randomUniform_:function(t,e=0,n=1,r="float32",s){const a=aa(t,r),i=new $u(e,n,null,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});function Tu(t,e){p(t);const n=fs(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return vs(t,null,n,e)}function Eu(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return fr.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Qo([0],r);const s=L(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return Tu(s,r)}),{},null,"Range",s)}const Au=xs({reciprocal_:function(t){const e=ys(t,"x","reciprocal"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,Le)}}),Ru=xs({relu_:function(t){const e=ys(t,"x","relu"),n={x:e};return fr.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?ia(e,"int32"):t.relu(e))),n,null,ze)}}),Du=xs({reverse_:function(t,e){const n=ys(t,"x","reverse"),r={x:n},s={dims:e};return fr.runKernelFunc((t=>{const r=v(e,n.shape);if(0===n.rank)return oa(n);const s=t.reverse(n,r);return ga(s,n.shape)}),r,null,Ue,s)}}),_u=xs({round_:function(t){const e=ys(t,"x","round"),n={x:e};return fr.runKernelFunc((t=>t.round(e)),n,null,Ge)}}),Fu=xs({rsqrt_:function(t){const e=ys(t,"x","rsqrt"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,He)}}),Ou=xs({selu_:function(t){const e=ys(t,"x","selu"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,qe)}}),Mu=xs({separableConv2d_:function(t,e,n,r,s,a=[1,1],i="NHWC"){const o=ys(t,"x","separableConv2d"),u=ys(e,"depthwiseFilter","separableConv2d"),l=ys(n,"pointwiseFilter","separableConv2d");let h=o,p=!1;if(3===o.rank&&(p=!0,h=ga(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");c(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),c(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),c(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),c(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),c(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],f=u.shape[3];c(l.shape[2]===d*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${l.shape[2]}.`));const m=to(h,u,r,s,i,a),g=Hi(m,l,1,"valid",i);return p?ga(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Lu=xs({sign_:function(t){const e=ys(t,"x","sign"),n={x:e};return fr.runKernelFunc((t=>t.sign(e)),n,null,Je)}}),zu=xs({sin_:function(t){const e=ys(t,"x","sin"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,Xe)}}),Bu=xs({sinh_:function(t){const e=ys(t,"x","sinh"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,Ye)}}),Pu=xs({slice_:function(t,e,n){const r=ys(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:e,size:n};return fr.runKernelFunc(((t,s)=>{const[a,i]=Oa(r,e,n);return Ia(r,a,i),s([r]),t.slice(r,a,i)}),s,null,Ke,a)}}),Wu=xs({slice1d_:function(t,e,n){const r=ys(t,"x","slice1d");return c(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Pu(r,[e],[n])}}),Vu=xs({slice2d_:function(t,e,n){const r=ys(t,"x","slice2d");return c(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Pu(r,e,n)}}),Uu=xs({slice3d_:function(t,e,n){const r=ys(t,"x","slice3d");return c(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Pu(r,e,n)}}),Gu=xs({slice4d_:function(t,e,n){const r=ys(t,"x","slice4d");return c(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Pu(r,e,n)}}),Hu=xs({softmax_:function(t,e=-1){const n=ys(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return fr.runKernelFunc(((t,r)=>{const s=t.softmax(n,e);return r([s]),s}),r,null,rn,s)}}),ju=xs({spaceToBatchND_:function(t,e,n){const r=ys(t,"x","spaceToBatchND");c(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),c(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),c(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},a={blockShape:e,paddings:n};return fr.runKernelFunc((t=>t.spaceToBatchND(r,e,n)),s,null,en,a)}}),qu=xs({fft_:function(t){c("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return fr.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)}),e,null,Qt)}}),Ku=xs({ifft_:function(t){c("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return fr.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=ga(t,[r,n]),a=e.ifft(s);return ga(a,t.shape)}),e,null,ue)}}),Xu=xs({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=ga(t,[n,e]);r=Ku(s)}else{const s=[n,2*(e-1)],a=ga(cu(t),[n,e]),i=ga($o(t),[n,e]),o=Du(Pu(a,[0,1],[n,e-2]),1),u=Ao(Du(Pu(i,[0,1],[n,e-2]),1),Ro(-1)),l=Pi([a,o],1),c=Pi([i,u],1),h=ga(ws(l,c),[s[0],s[1]]);r=Ku(h)}if(r=cu(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=ga(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),Yu=xs({split_:function(t,e,n=0){const r=ys(t,"x","split"),s={x:r},a={numOrSizeSplits:e,axis:n};return fr.runKernelFunc(((t,s)=>{const a=v(n,r.shape)[0],i=function(t,e,n=0){let r=[];if("number"==typeof e)c(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{c(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}c(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}(r,e,a);return t.split(r,i,a)}),s,null,nn,a)}}),Ju=xs({rfft_:function(t,e){c("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,s=Pu(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Pi([t,Qo(r)],t.shape.length-1),n=e}else s=t;const a=lo(s),i=ga(ws(s,a),[r,n]),o=qu(i),u=Math.floor(n/2)+1,l=cu(o),h=$o(o),p=Yu(l,[u,n-u],l.shape.length-1),d=Yu(h,[u,n-u],h.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,ga(ws(p[0],d[0]),f)}}),Zu=xs({sqrt_:function(t){const e=ys(t,"x","sqrt"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,tn)}}),Qu=xs({squaredDifference_:function(t,e){let n=ys(t,"a","squaredDifference"),r=ys(e,"b","squaredDifference");[n,r]=or(n,r),io(n.shape,r.shape);const s={a:n,b:r};return fr.runKernelFunc(((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s}),s,null,sn,{})}}),tl=xs({squeeze_:function(t,e){const n=ys(t,"x","squeeze");return ga(n,k(n.shape,e).newShape)}}),el=xs({stack_:function(t,e=0){const n=bs(t,"tensors","stack");if(c(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return mo(n[0],e);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;c(e<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{h(s,t.shape,"All tensors passed to stack must have matching shapes"),c(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=n.map((t=>mo(t,e)));return Pi(i,e)}}),nl=xs({step_:function(t,e=0){const n=ys(t,"x","step"),r={x:n},s={alpha:e};return fr.runKernelFunc((t=>t.step(n,e)),r,null,gn,s)}}),rl=xs({stridedSlice_:function(t,e,n,r,s=0,a=0,i=0,o=0,u=0){let l=ys(t,"x","stridedSlice");const c={x:l},h={begin:e,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return fr.runKernelFunc((t=>{null==r&&(r=new Array(e.length));const c=$a(i);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=l.rank-e.length,p=$a(o),d=l.shape.slice();p.forEach((t=>{e[t]=0,n[t]=1,d.splice(t,0,1)})),l=ga(l,d);const{begin:f,end:m,strides:g}=Ea(l.shape,c,h,e,n,r,s,a,i);e=f,n=m,r=g;const y=$a(u);y.forEach((t=>{n[t]=e[t]+1,r[t]=1}));const b=Ca(e,n,r),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(r.every((t=>1===t)))return ga(Pu(l,e,b),x);const w=t.stridedSlice(l,e,n,r);return ga(w,x)}),c,null,"StridedSlice",h)}}),sl=xs({tan_:function(t){const e=ys(t,"x","tan"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,un)}}),al=xs({tanh_:function(t){const e=ys(t,"x","tanh"),n={x:e};return fr.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,ln)}});function il(t,e,n){if(p(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=fs(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return vs(t,e,r,n)}function ol(t,e,n){if(p(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=fs(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return vs(t,e,r,n)}const ul=xs({topk_:function(t,e=1,n=!0){const r=ys(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const a={x:r},i={k:e,sorted:n},[o,u]=fr.runKernelFunc((t=>t.topk(r,e,n)),a,null,"TopK",i);return{values:o,indices:u}}}),ll=xs({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Iu(e,n,r,!0,s),i=aa(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),cl=xs({unique_:function(t,e=0){const n=ys(t,"x","unique",null);c(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[a,i]=fr.runKernel(pn,r,s);return{values:a,indices:i}}}),hl=xs({unstack_:function(t,e=0){const n=ys(t,"x","unstack");c(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return fr.runKernelFunc((t=>t.unstack(n,e)),r,null,dn,s)}});function pl(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=aa(t,"int32"),s=aa([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=r.indexToLoc(n[e]),i=e*t.length;s.values.set(a,i)}return s.toTensor()}const dl=async function(t){const e=ys(t,"condition","whereAsync","bool"),n=await e.data(),r=pl(e.shape,n);return t!==e&&e.dispose(),r},fl=xs({equalStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","equalStrict"),r=ys(e,"b","equalStrict");return h(n.shape,r.shape,"Error in equalStrict: "),oo(n,r)}}),ml=xs({greaterEqualStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","greaterEqualStrict"),r=ys(e,"b","greaterEqualStrict");return h(n.shape,r.shape,"Error in greaterEqualStrict: "),Io(n,r)}}),gl=xs({greaterStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","greaterStrict"),r=ys(e,"b","greaterStrict");return h(n.shape,r.shape,"Error in greaterStrict: "),No(n,r)}}),yl=xs({lessEqualStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","lessEqualStrict"),r=ys(e,"b","lessEqualStrict");return h(n.shape,r.shape,"Error in lessEqualStrict: "),Fo(n,r)}}),bl=xs({lessStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","lessStrict"),r=ys(e,"b","lessStrict");return h(n.shape,r.shape,"Error in lessStrict: "),_o(n,r)}}),xl=xs({notEqualStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","notEqualStrict"),r=ys(e,"b","notEqualStrict");return h(n.shape,r.shape,"Error in notEqualStrict: "),lu(n,r)}}),wl=xs({addStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","addStrict"),r=ys(e,"b","addStrict");return h(n.shape,r.shape,"Error in addStrict: "),Ya(n,r)}}),vl=xs({divStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","div"),r=ys(e,"b","div");return h(n.shape,r.shape,"Error in divideStrict: "),ro(n,r)}}),kl=xs({maximumStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","maximumStrict"),r=ys(e,"b","maximumStrict");return h(n.shape,r.shape,"Error in maximumStrict: "),Eo(n,r)}}),Nl=xs({minimumStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","minimumStrict"),r=ys(e,"b","minimumStrict");return h(n.shape,r.shape,"Error in minimumStrict: "),ru(n,r)}}),Il=xs({modStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","modStrict"),r=ys(e,"b","modStrict");return h(n.shape,r.shape,"Error in modStrict: "),au(n,r)}}),$l=xs({mulStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","mul"),r=ys(e,"b","mul");return h(n.shape,r.shape,"Error in multiplyStrict: "),Ao(n,r)}}),Cl=xs({powStrict_:function(t,e){return Ba("strict variants of ops have been deprecated and will be removed in future"),h(t.shape,e.shape,"Error in powStrict: "),du(t,e)}}),Sl=xs({squaredDifferenceStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","squaredDifferenceStrict"),r=ys(e,"b","squaredDifferenceStrict");return h(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Qu(n,r)}}),Tl=xs({subStrict_:function(t,e){Ba("strict variants of ops have been deprecated and will be removed in future");const n=ys(t,"a","subStrict"),r=ys(e,"b","subStrict");return h(n.shape,r.shape,"Error in subStrict: "),Go(n,r)}});function El(t,e,n=null){if(0===t.rank)return qa(t);if(1!==t.rank&&null===n)return El(ga(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Ho(qa(t),n);if(e===1/0)return Uo(qa(t),n);if(e===-1/0)return nu(qa(t),n);if("euclidean"===e||2===e)return Zu(Ho(du(qa(t),Ro(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Uo(Ho(qa(t),n[0]),n[1]-1);if(e===1/0)return Uo(Ho(qa(t),n[1]),n[0]);if(e===-1/0)return nu(Ho(qa(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Zu(Ho(iu(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Al=xs({norm_:function(t,e="euclidean",n=null,r=!1){const s=El(t=ys(t,"x","norm"),e,n);let a=s.shape;if(r){const e=v(n,t.shape);a=ti(s.shape,e)}return ga(s,a)}}),Rl=xs({scatterND_:function(t,e,n){const r=ys(t,"indices","scatterND","int32"),s=ys(e,"updates","scatterND");!function(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}!function(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(a+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}(n,e,t)}(s,r,n);const a={indices:r,updates:s},i={shape:n};return fr.runKernelFunc((t=>t.scatterND(r,s,n)),a,null,"ScatterNd",i)}}),Dl=xs({sparseToDense_:function(t,e,n,r=0){const s=ys(t,"sparseIndices","sparseToDense","int32"),a=ys(e,"sparseValues","sparseToDense"),i=ys(r,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return fr.runKernelFunc((t=>t.sparseToDense(s,a,n,i)),o,null,"SparseToDense",u)}}),_l=xs({gatherND_:function(t,e){const n=ys(e,"indices","gatherND","int32"),r=ys(t,"x","gatherND"),s={params:r,indices:n};return fr.runKernelFunc((t=>t.gatherND(r,n)),s,null,"GatherNd")}}),Fl=xs({dropout_:function(t,e,n,r){const s=ys(t,"x","dropout");if(c("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),c(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof jn?s.clone():s;const a=function(t,e){if(null==e)return t.shape.slice();if(m(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),i=1-e,o=ro(wo(Ya(Su(a,0,1,"float32",r),i)),i);return Ao(s,o)}}),Ol=xs({conv2DBackpropFilter_:function(t,e,n,r,s,a="NHWC",i){let o=t;3===t.rank&&(o=ga(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=ga(e,[1,e.shape[0],e.shape[1],e.shape[2]])),c(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),c(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),c(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===a?o.shape[3]:o.shape[1],h="NHWC"===a?u.shape[3]:u.shape[1];c(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),c(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),null!=i&&c(g(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const p={x:o,dy:u},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return fr.runKernelFunc((t=>{const e=Ci(a),l=yi(o.shape,n,r,1,s,i,!1,e);return t.conv2dDerFilter(o,u,l)}),p,null,Ft,d)}}),Ml=xs({relu6_:function(t){const e=ys(t,"x","relu6"),n={x:e};return fr.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?ia(e,"int32"):t.relu6(e))),n,null,Ve)}});function Ll(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Ao(t,nl(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function zl(t,e){let n=e;const r=ao(t.shape,e.shape);return r.length>0&&(n=Ho(n,r)),ga(n,t.shape)}function Bl(t,e,n){if("linear"===e)return t;if("relu"===e)return Ru(t);if("elu"===e)return ho(t);if("relu6"===e)return Ml(t);if("prelu"===e)return fu(t,n);throw new Error(`Unknown fused activation ${e}.`)}const Pl=(t,e)=>!(t>0)||"linear"===e,Wl=xs({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===Pl(fr.state.gradientDepth,u)){let c=Hi(t,e,n,r,s,a,i);return null!=o&&(c=Ya(c,o)),Bl(c,u,l)}const h=ys(t,"x","conv2d"),p=ys(e,"filter","conv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=ga(h,[1,h.shape[0],h.shape[1],h.shape[2]])),c(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),c(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&c(g(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),c(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),c($i(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),c("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=yi(d.shape,p.shape,n,a,r,i);let y,b;null!=o&&(y=ys(o,"bias","fused conv2d"),[y]=or(y,h),io(m.outShape,y.shape)),null!=l&&(b=ys(l,"prelu weights","fused conv2d"));const x=(t,e)=>{const[s,i,o,l]=e,h=Ll(t,o,u);c(Ii(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[qi(i.shape,h,s,n,r),Ol(i,h,s.shape,n,r)];if(null!=l){const t=zl(l,h);p.push(t)}return p},w=t=>t.fusedConv2d({input:d,filter:p,convInfo:m,bias:y,activation:u,preluActivationWeights:b}),v={x:d,filter:p,bias:y,preluActivationWeights:b},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u};return null==o?ja(((t,e,n)=>{let r=fr.runKernelFunc(w,v,null,wn,k);return n([e,t,r]),f&&(r=ga(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(d,p):ja(((t,e,n,r)=>{let s=fr.runKernelFunc(w,v,null,wn,k);return r([e,t,s,n]),f&&(s=ga(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(d,p,y)}}),Vl=xs({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,a=[1,1],i){let o=t;3===t.rank&&(o=ga(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=ga(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return fr.runKernelFunc((e=>{const l=yi(t.shape,n,r,a,s,i,!0);return e.depthwiseConv2DDerFilter(o,u,l)}),l,null,Ut,c)}}),Ul=xs({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,a=[1,1],i){let o=e,u=!1;3===e.rank&&(u=!0,o=ga(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:t},h=fr.runKernelFunc((e=>{const u=yi(t,n.shape,r,a,s,i,!0);return e.depthwiseConv2DDerInput(o,n,u)}),l,null,Gt,c);return u?ga(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Gl=xs({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(!1===Pl(fr.state.gradientDepth,u)){let c=to(t,e,n,r,s,a,i);return null!=o&&(c=Ya(c,o)),Bl(c,u,l)}const h=ys(t,"x","depthwiseConv2d"),p=ys(e,"filter","depthwiseConv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=ga(h,[1,h.shape[0],h.shape[1],h.shape[2]])),c(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),c(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),c(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),c($i(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&c(g(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const m=yi(d.shape,p.shape,n,a,r,i,!0);let y,b;null!=o&&(y=ys(o,"bias","fused conv2d"),[y]=or(y,h),io(m.outShape,y.shape)),null!=l&&(b=ys(l,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{c(Ii(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,l,h]=e,p=Ll(t,l,u),d=Ul(o.shape,p,s,n,r,a,i),f=Vl(o,p,s.shape,n,r,a,i);return null!=h?[d,f,zl(y,p)]:[d,f]},w=t=>t.fusedDepthwiseConv2D({input:d,filter:p,convInfo:m,bias:y,activation:u,preluActivationWeights:b}),v={x:d,filter:p,bias:y,preluActivationWeights:b},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u};return null==o?ja(((t,e,n)=>{let r=fr.runKernelFunc(w,v,null,vn,k);return n([e,t,r]),f&&(r=ga(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(d,p):ja(((t,e,n,r)=>{let s=fr.runKernelFunc(w,v,null,vn,k);return r([e,t,s,n]),f&&(s=ga(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(d,p,y)}}),Hl=xs({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i}){if(!1===Pl(fr.state.gradientDepth,a)){let o=ya(t,e,n,r);return null!=s&&(o=Ya(o,s)),Bl(o,a,i)}let o=ys(t,"a","fused matMul"),u=ys(e,"b","fused matMul");[o,u]=or(o,u);const l=n?o.shape[o.rank-2]:o.shape[o.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],g=o.shape.slice(0,-2),y=u.shape.slice(0,-2),b=f(g),x=f(y);c(o.rank>=2&&u.rank>=2&&o.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${u.rank}.`)),c(m(g,y),(()=>`Error in fused matMul: outer dimensions (${g}) and (${y}) of Tensors with shapes ${o.shape} and ${u.shape} must match.`)),c(l===h,(()=>`Error in fused matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${o.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=o.shape.slice(0,-2).concat([p,d]),v=ga(o,n?[b,l,p]:[b,p,l]),k=ga(u,r?[x,d,h]:[x,h,d]);let N,I;null!=s&&(N=ys(s,"bias","fused matMul"),[N]=or(N,o),io(w,N.shape)),null!=i&&(I=ys(i,"prelu weights","fused matMul"));const $=(t,e)=>{const[i,o,u,l]=e,c=Ll(ga(t,u.shape),u,a);let h,p;return n||r?!n&&r?(h=ya(c,o,!1,!1),p=ya(c,i,!0,!1)):n&&!r?(h=ya(o,c,!1,!0),p=ya(i,c,!1,!1)):(h=ya(o,c,!0,!0),p=ya(c,i,!0,!0)):(h=ya(c,o,!1,!0),p=ya(i,c,!0,!1)),null!=s?[h,p,zl(l,c)]:[h,p]},C=t=>t.fusedBatchMatMul({a:v,b:k,transposeA:n,transposeB:r,bias:N,activation:a,preluActivationWeights:I}),S={a:v,b:k,bias:N,preluActivationWeights:I},T={transposeA:n,transposeB:r,activation:a};return null==s?ja(((t,e,n)=>{const r=fr.runKernelFunc(C,S,null,xn,T);return n([t,e,r]),{value:ga(r,w),gradFunc:$}}))(v,k):ja(((t,e,n,r)=>{const s=fr.runKernelFunc(C,S,null,xn,T);return r([t,e,s,n]),{value:ga(s,w),gradFunc:$}}))(v,k,N)}});function jl(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(i)}return Tu(s,"float32")}xs({hammingWindow_:function(t){return jl(t,.54,.46)}});const ql=xs({hannWindow_:function(t){return jl(t,.5,.5)}}),Kl=xs({frame_:function(t,e,n,r=!1,s=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(Pu(t,a,e)),a+=n;if(r)for(;a<t.size;){const r=a+e-t.size,o=Pi([Pu(t,a,e-r),xo([r],s)]);i.push(o),a+=n}return 0===i.length?il([],[0,e]):ga(Pi(i),[i.length,e])}});xs({stft_:function(t,e,n,r,s=ql){var a;null==r&&(a=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Kl(t,e,n),o=Ao(i,s(e)),u=[];for(let t=0;t<i.shape[0];t++)u.push(Ju(Pu(o,[t,0],[1,e]),r));return Pi(u)}});const Xl=xs({cropAndResize_:function(t,e,n,r,s,a){const i=ys(t,"image","cropAndResize"),o=ys(e,"boxes","cropAndResize","float32"),u=ys(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const l=o.shape[0];c(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),c(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),c(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),c(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),c(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),c("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:i,boxes:o,boxInd:u},p={method:s,extrapolationValue:a,cropSize:r};return fr.runKernelFunc((t=>t.cropAndResize(i,o,u,r,s,a)),h,null,"CropAndResize",p)}}),Yl=xs({flipLeftRight_:function(t){const e=ys(t,"image","flipLeftRight","float32");c(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return fr.runKernel(ee,n,{})}}),Jl=xs({rotateWithOffset_:function(t,e,n=0,r=.5){const s=ys(t,"image","rotateWithOffset","float32");c(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:e,fillValue:n,center:r};return fr.runKernel(bn,a,i)}});function Zl(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),c(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),c(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),c(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),c(1===e.rank,(()=>"scores must be a 1D tensor")),c(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`)),c(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Ql=xs({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=ys(t,"boxes","nonMaxSuppression"),i=ys(e,"scores","nonMaxSuppression"),o=Zl(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return fr.runKernelFunc((t=>t.nonMaxSuppression(a,i,n,r,s)),{boxes:a,scores:i},null,Ee,u)}});function tc(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(e,t[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(t,e,n||ec)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function ec(t,e){return t>e?1:t<e?-1:0}function nc(t,e,n,r,s){return ac(t,e,n,r,s,0).selectedIndices}function rc(t,e,n,r,s,a){return ac(t,e,n,r,s,0,!1,a,!0)}function sc(t,e,n,r,s,a){return ac(t,e,n,r,s,a,!0)}function ac(t,e,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let t=0;t<e.length;t++)e[t]>s&&l.push({score:e[t],boxIndex:t,suppressBeginIndex:0});l.sort(uc);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=ic(t,a,h[n]);if(i>=r){o=!0;break}if(e.score=e.score*oc(r,c,i),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(a),p.push(e.score)):e.score>s&&tc(l,e,uc))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:Tu(h,"int32")};return i&&(m.selectedScores=Tu(p,"float32")),u&&(m.validOutputs=Ro(d,"int32")),m}function ic(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function oc(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function uc(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const lc=xs({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=ys(t,"boxes","nonMaxSuppression"),o=ys(e,"scores","nonMaxSuppression"),u=Zl(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=fr.runKernel(Re,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),cc=xs({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=ys(t,"boxes","nonMaxSuppression"),o=ys(e,"scores","nonMaxSuppression"),u=Zl(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=fr.runKernel(Ae,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),hc=xs({resizeBilinear_:function(t,e,n=!1){const r=ys(t,"images","resizeBilinear");c(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),c(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let s=r,a=!1;3===r.rank&&(a=!0,s=ga(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=e,u={images:s},l={alignCorners:n,size:e},h=fr.runKernelFunc(((t,e)=>(e([s]),t.resizeBilinear(s,i,o,n))),u,null,We,l);return a?ga(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),pc=xs({resizeNearestNeighbor_:function(t,e,n=!1){const r=ys(t,"images","resizeNearestNeighbor");c(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),c(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),c("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,a=!1;3===r.rank&&(a=!0,s=ga(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=e,u={images:s},l={alignCorners:n,size:e},h=fr.runKernelFunc(((t,e)=>(e([s]),t.resizeNearestNeighbor(s,i,o,n))),u,null,Pe,l);return a?ga(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),dc=xs({bandPart_:function(t,e,n){c(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),c(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=ys(t,"a","bandPart");c(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=ga(Eu(0,a,1,"int32"),[-1,1]),u=Eu(0,i,1,"int32"),l=Go(o,u),h=qo(Fo(l,Ro(+e,"int32")),Io(l,Ro(-n,"int32"))),p=Qo([a,i],r.dtype);return ga(el(hl(ga(r,[-1,a,i])).map((t=>uo(h,t,p)))),s)}}),fc=xs({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,c(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)c(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Yu(t,t.shape[0],0).map((t=>tl(t,[0])));c(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(fr.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Ao(Ho(Ao(n[r],t)),n[r]);t=Go(t,e)}return ro(t,Al(t,"euclidean"))})));return e?el(n,0):n}});function mc(t,e=!1){return fr.tidy((()=>{c(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=bo(n),a=oa(t);const i=il([[1]],[1,1]);let o=oa(i);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=a,u=o,l=s;[o,a,s]=fr.tidy((()=>{const e=Pu(a,[t,t],[n-t,1]),u=Al(e),l=Pu(a,[t,t],[1,1]),c=uo(No(l,0),il([[-1]]),il([[1]])),h=Go(l,Ao(c,u)),p=ro(e,h);o=1===p.shape[0]?oa(i):Pi([i,Pu(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Bo(ro(ya(c,h),u)),f=Pu(a,[t,0],[n-t,r]),m=Ao(d,o),g=xa(o);if(0===t)a=Go(f,ya(m,ya(g,f)));else{const e=Go(f,ya(m,ya(g,f)));a=Pi([Pu(a,[0,0],[t,r]),e],0)}const y=xa(m),b=Pu(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=Go(b,ya(ya(b,o),y));else{const e=Go(b,ya(ya(b,o),y));s=Pi([Pu(s,[0,0],[n,t]),e],1)}return[o,a,s]})),Ua([e,u,l])}return!e&&n>r&&(s=Pu(s,[0,0],[n,r]),a=Pu(a,[0,0],[r,r])),[s,a]}))}const gc=xs({qr_:function(t,e=!1){if(c(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return mc(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=hl(ga(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];return r.forEach((t=>{const[n,r]=mc(t,e);s.push(n),a.push(r)})),[ga(el(s,0),t.shape),ga(el(a,0),t.shape)]}}});var yc,bc;(bc=yc||(yc={}))[bc.NONE=0]="NONE",bc[bc.MEAN=1]="MEAN",bc[bc.SUM=2]="SUM",bc[bc.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const xc=xs({computeWeightedLoss_:function(t,e,n=yc.SUM_BY_NONZERO_WEIGHTS){const r=ys(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=ys(e,"weights","computeWeightedLoss"));const a=null==s?r:Ao(r,s);if(n===yc.NONE)return a;if(n===yc.SUM)return Ho(a);if(n===yc.MEAN){if(null==s)return eu(a);{const t=r.size/s.size,e=ro(Ho(a),Ho(s));return t>1?ro(e,Ro(t)):e}}if(n===yc.SUM_BY_NONZERO_WEIGHTS){if(null==s)return ro(Ho(a),Ro(r.size));{const t=Ao(s,tu(r.shape)),e=ia(Ho(lu(t,Ro(0))),"float32");return ro(Ho(a),e)}}throw Error(`Unknown reduction: ${n}`)}});xs({absoluteDifference_:function(t,e,n,r=yc.SUM_BY_NONZERO_WEIGHTS){const s=ys(t,"labels","absoluteDifference"),a=ys(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=ys(n,"weights","absoluteDifference")),h(s.shape,a.shape,"Error in absoluteDifference: ");const o=qa(Go(s,a));return xc(o,i,r)}}),xs({cosineDistance_:function(t,e,n,r,s=yc.SUM_BY_NONZERO_WEIGHTS){const a=ys(t,"labels","cosineDistance"),i=ys(e,"predictions","cosineDistance");let o=null;null!=r&&(o=ys(r,"weights","cosineDistance")),h(a.shape,i.shape,"Error in cosineDistance: ");const u=Ro(1),l=Go(u,Ho(Ao(a,i),n,!0));return xc(l,o,s)}}),xs({hingeLoss_:function(t,e,n,r=yc.SUM_BY_NONZERO_WEIGHTS){let s=ys(t,"labels","hingeLoss");const a=ys(e,"predictions","hingeLoss");let i=null;null!=n&&(i=ys(n,"weights","hingeLoss")),h(s.shape,a.shape,"Error in hingeLoss: ");const o=Ro(1);s=Go(Ao(Ro(2),s),o);const u=Ru(Go(o,Ao(s,a)));return xc(u,i,r)}}),xs({huberLoss_:function(t,e,n,r=1,s=yc.SUM_BY_NONZERO_WEIGHTS){const a=ys(t,"labels","huberLoss"),i=ys(e,"predictions","huberLoss");let o=null;null!=n&&(o=ys(n,"weights","huberLoss")),h(a.shape,i.shape,"Error in huberLoss: ");const u=Ro(r),l=qa(Go(i,a)),c=ru(l,u),p=Go(l,c),d=Ya(Ao(Ro(.5),iu(c)),Ao(u,p));return xc(d,o,s)}}),xs({logLoss_:function(t,e,n,r=1e-7,s=yc.SUM_BY_NONZERO_WEIGHTS){const a=ys(t,"labels","logLoss"),i=ys(e,"predictions","logLoss");let o=null;null!=n&&(o=ys(n,"weights","logLoss")),h(a.shape,i.shape,"Error in logLoss: ");const u=Ro(1),l=Ro(r),c=Bo(Ao(a,Lo(Ya(i,l)))),p=Ao(Go(u,a),Lo(Ya(Go(u,i),l))),d=Go(c,p);return xc(d,o,s)}}),xs({meanSquaredError_:function(t,e,n,r=yc.SUM_BY_NONZERO_WEIGHTS){const s=ys(t,"labels","meanSquaredError"),a=ys(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=ys(n,"weights","meanSquaredError")),h(s.shape,a.shape,"Error in meanSquaredError: ");const o=Qu(s,a);return xc(o,i,r)}}),xs({sigmoidCrossEntropy_:function(t,e,n,r=0,s=yc.SUM_BY_NONZERO_WEIGHTS){let a=ys(t,"multiClassLabels","sigmoidCrossEntropy");const i=ys(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=ys(n,"weights","sigmoidCrossEntropy")),h(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Ro(r),e=Ro(1),n=Ro(.5);a=Ya(Ao(a,Go(e,t)),Ao(n,t))}const u=function(t,e){const n=ys(t,"labels","sigmoidCrossEntropyWithLogits"),r=ys(e,"logits","sigmoidCrossEntropyWithLogits");h(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ru(r),a=Ao(r,n),i=zo(fo(Bo(qa(r))));return Ya(Go(s,a),i)}(a,i);return xc(u,o,s)}});const wc=xs({logSumExp_:function(t,e=null,n=!1){const r=ys(t,"x","logSumExp"),s=v(e,r.shape),a=Uo(r,s,!0),i=Go(r,a),o=fo(i),u=Ho(o,s),l=Lo(u),c=Ya(ga(a,l.shape),l);if(n){const t=ti(c.shape,s);return ga(c,t)}return c}});xs({softmaxCrossEntropy_:function(t,e,n,r=0,s=yc.SUM_BY_NONZERO_WEIGHTS){let a=ys(t,"onehotLabels","softmaxCrossEntropy");const i=ys(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=ys(n,"weights","softmaxCrossEntropy")),h(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Ro(r),e=Ro(1),n=Ro(a.shape[1]);a=Ya(Ao(a,Go(e,t)),ro(t,n))}const u=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return ja(((t,e,r)=>{const s=wc(e,[n],!0),a=Go(ia(e,"float32"),s);r([t,a]);const i=Bo(Ao(a,t));return{value:Ho(i,[n]),gradFunc:(t,e)=>{const[r,s]=e,a=ti(t.shape,[n]);return[Ao(ga(t,a),Go(ia(r,"float32"),fo(s))),Ao(ga(t,a),Go(fo(s),ia(r,"float32")))]}}}))(t,e)}(a,i);return xc(u,o,s)}});const vc={flipLeftRight:Yl,resizeNearestNeighbor:pc,resizeBilinear:hc,rotateWithOffset:Jl,cropAndResize:Xl,nonMaxSuppression:Ql,nonMaxSuppressionAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=ys(t,"boxes","nonMaxSuppressionAsync"),i=ys(e,"scores","nonMaxSuppressionAsync"),o=Zl(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=nc(u[0],u[1],n,r,s);return a!==t&&a.dispose(),i!==e&&i.dispose(),l},nonMaxSuppressionWithScore:lc,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=ys(t,"boxes","nonMaxSuppressionAsync"),o=ys(e,"scores","nonMaxSuppressionAsync"),u=Zl(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=sc(l[0],l[1],n,r,s,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),c},nonMaxSuppressionPadded:cc,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=ys(t,"boxes","nonMaxSuppressionAsync"),o=ys(e,"scores","nonMaxSuppressionAsync"),u=Zl(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),f=rc(p,d,l,c,h,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),f}},kc={bandPart:dc,gramSchmidt:fc,qr:gc};class Nc extends Ma{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return Ua(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){c(R(t),(()=>"The f passed in variableGrads(f) must be a function")),c(null==e||Array.isArray(e)&&e.every((t=>t instanceof qn)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in fr.registeredVariables)e.push(fr.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;c((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=fr.gradients(t,e,null,!0);c(i.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),c(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=i[e]&&(o[t.name]=i[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:a,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Ua(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ro(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Nc,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class Ic extends Nc{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=fr.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=fr.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Va((()=>lo(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Va((()=>lo(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Va((()=>{const t=Ya(Ao(a,this.rho),Ao(iu(s),1-this.rho)),e=Ao(ro(Zu(Ya(i,this.epsilon)),Zu(Ya(a,this.epsilon))),s),n=Ya(Ao(i,this.rho),Ao(iu(e),1-this.rho));a.assign(t),i.assign(n);const o=Ya(Ao(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ua(this.accumulatedGrads.map((t=>t.variable))),Ua(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Ic.className="Adadelta",za(Ic);class $c extends Nc{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=fr.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Va((()=>xo(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;Va((()=>{const t=Ya(a,iu(s));a.assign(t);const e=Ya(Ao(ro(s,Zu(Ya(t,fr.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ua(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}$c.className="Adagrad",za($c);class Cc extends Nc{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Va((()=>{this.accBeta1=Ro(e).variable(),this.accBeta2=Ro(n).variable()})),null==r&&(this.epsilon=fr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Va((()=>{const n=Go(1,this.accBeta1),r=Go(1,this.accBeta2);e.forEach(((e,s)=>{const a=fr.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Va((()=>lo(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:Va((()=>lo(a).variable(!1)))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=Ya(Ao(o,this.beta1),Ao(i,1-this.beta1)),c=Ya(Ao(u,this.beta2),Ao(iu(i),1-this.beta2)),h=ro(l,n),p=ro(c,r);o.assign(l),u.assign(c);const d=Ya(Ao(ro(h,Ya(Zu(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Ao(this.accBeta1,this.beta1)),this.accBeta2.assign(Ao(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ua(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Ua(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Va((()=>{this.accBeta1.assign(du(this.beta1,this.iterations_+1)),this.accBeta2.assign(du(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Cc.className="Adam",za(Cc);class Sc extends Nc{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Va((()=>{this.iteration=Ro(0).variable(),this.accBeta1=Ro(e).variable()})),null==r&&(this.epsilon=fr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Va((()=>{const n=Go(1,this.accBeta1),r=ro(-this.learningRate,Ya(Ao(this.iteration,this.decay),1));e.forEach(((e,s)=>{const a=fr.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:lo(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:lo(a).variable(!1)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=Ya(Ao(o,this.beta1),Ao(i,1-this.beta1)),c=Ao(u,this.beta2),h=qa(i),p=Eo(c,h);o.assign(l),u.assign(p);const d=Ya(Ao(ro(r,n),ro(l,Ya(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(Ya(this.iteration,1)),this.accBeta1.assign(Ao(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ua(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Ua(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Sc.className="Adamax",za(Sc);class Tc extends Nc{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=fr.registeredVariables[e];Va((()=>{const t=Ya(Ao(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Ga(Ro(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Tc.className="SGD",za(Tc);class Ec extends Tc{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Ro(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=fr.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Va((()=>lo(r).variable(t)))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&Va((()=>{let t;const e=Ya(Ao(this.m,s),a);t=this.useNesterov?Ya(Ao(this.c,Ya(a,Ao(e,this.m))),r):Ya(Ao(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ua(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Ec.className="Momentum",za(Ec);class Ac extends Nc{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=fr.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=fr.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Va((()=>lo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Va((()=>lo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Va((()=>lo(r).variable(s)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Va((()=>{const t=Ya(Ao(i,this.decay),Ao(iu(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Ya(Ao(e,this.decay),Ao(a,1-this.decay)),u=ro(Ao(a,this.learningRate),Zu(Go(t,Ya(iu(s),this.epsilon)))),l=Ya(Ao(o,this.momentum),u);i.assign(t),e.assign(s),o.assign(l);const c=Go(r,l);r.assign(c)}else{const t=Ya(Ao(i,this.decay),Ao(iu(a),1-this.decay)),e=Ya(Ao(o,this.momentum),ro(Ao(a,this.learningRate),Zu(Ya(t,this.epsilon))));i.assign(t),o.assign(e);const n=Go(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ua(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ua(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Ua(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Ac.className="RMSProp",za(Ac);class Rc{static sgd(t){return new Tc(t)}static momentum(t,e,n=!1){return new Ec(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Ac(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Cc(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Ic(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new Sc(t,e,n,r,s)}static adagrad(t,e=.1){return new $c(t,e)}}const Dc={sgd:Rc.sgd,momentum:Rc.momentum,adadelta:Rc.adadelta,adagrad:Rc.adagrad,rmsprop:Rc.rmsprop,adamax:Rc.adamax,adam:Rc.adam},_c="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Fc(){return new Promise((t=>_c((()=>t()))))}function Oc(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Mc(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Lc(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function zc(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Bc(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Pc(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Wc(...t){G().getBool("IS_TEST")||console.warn(...t)}function Vc(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Uc(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Gc(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Hc(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function jc(t,e,n){const r=(e-t)/(n-1),s=L(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return Tu(s,"float32")}function qc(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map((e=>{const a=[...s];a[n]=e;const i=Pu(t,r,a);return r[n]+=e,i}))}function Kc(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=aa(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const a=t.locToIndex(s);r.values[e]=t.values[a]}return r.toTensor()}function Xc(t,e,n,r,s){const a=e[e.length-1],[i,o]=[t.length/a,a],u=N(n,i*r),l=N("int32",i*r);for(let e=0;e<i;e++){const n=e*o,s=t.subarray(n,n+o),a=[];for(let t=0;t<s.length;t++)a.push({value:s[t],index:t});a.sort(((t,e)=>e.value-t.value));const i=e*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let t=0;t<r;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[ks(u,c,n),ks(l,c,"int32")]}const Yc={kernelName:ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(t,nl(ia(n,"float32"),-1))}}},Jc={kernelName:ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=iu(ia(n,"float32")),r=Zu(Go(Ro(1),e));return Bo(ro(t,r))}}}},Zc={kernelName:pt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Zu(Go(iu(ia(n,"float32")),1));return ro(t,e)}}}},Qc={kernelName:dt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=io(n.shape,r.shape);return{a:()=>{let e=t;const r=ao(n.shape,s);return r.length>0&&(e=Ho(e,r)),ga(e,n.shape)},b:()=>{let e=t;const n=ao(r.shape,s);return n.length>0&&(e=Ho(e,n)),ga(e,r.shape)}}}},th={kernelName:ft,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},eh={kernelName:mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lo(n)}}},nh={kernelName:gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lo(n)}}},rh={kernelName:yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ro(t,Zu(Go(Ro(1),iu(ia(n,"float32")))))}}},sh={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Zu(Ya(Ro(1),iu(ia(n,"float32"))));return ro(t,e)}}}},ah={kernelName:vt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=io(n.shape,r.shape);return{a:()=>{const e=Ya(iu(n),iu(r));let a=Ao(t,ro(r,e));const i=ao(n.shape,s);return i.length>0&&(a=Ho(a,i)),ga(a,n.shape)},b:()=>{const e=Ya(iu(n),iu(r));let a=Bo(Ao(t,ro(n,e)));const i=ao(r.shape,s);return i.length>0&&(a=Ho(a,i)),ga(a,r.shape)}}}},ih={kernelName:xt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ro(t,Ya(iu(ia(n,"float32")),1))}}},oh={kernelName:wt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ro(t,Go(Ro(1),iu(ia(n,"float32"))))}}},uh=xs({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],a,i){const o=ys(t,"dy","avgPool3dBackprop"),u=ys(e,"input","avgPool3dBackprop");let l=o,h=u,p=!1;4===u.rank&&(p=!0,l=ga(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ga(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),c(5===l.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${l.rank}.`)),c(5===h.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${h.rank}.`)),c($i(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=i&&c(g(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={dy:l,input:h},f={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},m=fr.runKernelFunc((t=>{const e=gi(h.shape,n,r,s,a,i);return t.avgPool3dBackprop(l,h,e)}),d,null,"AvgPool3DBackprop",f);return p?ga(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),lh={kernelName:It,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>uh(t,r,s,a,l,o,u)}}},ch=xs({avgPoolBackprop_:function(t,e,n,r,s){const a=ys(t,"dy","avgPoolBackprop"),i=ys(e,"input","avgPoolBackprop");c(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=ga(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=ga(a,[1,a.shape[0],a.shape[1],a.shape[2]])),c(4===u.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${u.rank}.`)),c(4===o.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${o.rank}.`));const h={dy:u,input:o},p={filterSize:n,strides:r,pad:s},d=fr.runKernelFunc((t=>{const e=mi(o.shape,n,r,1,s);return t.avgPoolBackprop(u,o,e)}),h,null,Nt,p);return l?ga(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),hh={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ch(t,r,s,a,i)}}},ph={kernelName:$t,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>ya(t,s,!1,!1),b:()=>ya(t,r,!0,!1)}:a&&!i?{a:()=>ya(s,t,!1,!0),b:()=>ya(r,t,!1,!1)}:{a:()=>ya(s,t,!0,!0),b:()=>ya(t,r,!0,!0)}:{a:()=>ya(t,s,!1,!0),b:()=>ya(r,t,!0,!1)}}},dh={kernelName:Ct,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ju(t,r,s)}}},fh={kernelName:St,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let t=s.length-1;t>=0;t--)if(s[t]===a[t])i[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>Ho(t,o,!0)}}},mh={kernelName:Tt,gradFunc:t=>({x:()=>t.clone()})},gh={kernelName:Et,gradFunc:t=>({x:()=>lo(t)})},yh={kernelName:At,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>uo(qo(Io(r,s),Fo(r,a)),t,lo(t))}}},bh={kernelName:Dt,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,a=v(s,e[0].shape)[0],i=r.map((t=>t[a]));return Yu(t,i,a).map((t=>()=>t))}},xh={kernelName:_t,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return c(Ii(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>qi(r.shape,t,s,i,o,u),filter:()=>Ol(r,t,s.shape,i,o,u)}}},wh={kernelName:Ot,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Hi(t,s,a,i,o,1,u),filter:()=>Ol(t,r,s.shape,a,i,o,u)}}},vh=xs({conv3DBackpropFilter_:function(t,e,n,r,s){let a=t;4===t.rank&&(a=ga(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=ga(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),c(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),c(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),c(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),c(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),c(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return fr.runKernelFunc((t=>{const e=bi(a.shape,n,r,1,s);return t.conv3dDerFilter(a,i,e)}),o,null,Lt,u)}}),kh=xs({conv3DBackpropInput_:function(t,e,n,r,s){c(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=ga(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const u=a[4],l=i.shape[4];c(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),c(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),c(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),c(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),c(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const h={dy:i,filter:n},p={pad:s,strides:r,inputShape:a},d=fr.runKernelFunc((t=>{const e=bi(a,n.shape,r,1,s);return t.conv3dDerInput(i,n,e)}),h,null,zt,p);return o?ga(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Nh={kernelName:Mt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a}=n;c(Ii(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=e;return{x:()=>kh(i.shape,t,o,s,a),filter:()=>vh(i,t,o.shape,s,a)}}},Ih={kernelName:Bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(Bo(zu(ia(n,"float32"))),t)}}},$h={kernelName:Pt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(Bu(ia(n,"float32")),t)}}},Ch={kernelName:Wt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const e=ni([s],r.rank);let n=Zi(t,s,a,!i);return null!=e&&(n=xa(n,e)),n}}}},Sh={kernelName:Vt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;c(Ii(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=e;return c(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),c(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),c(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),c($i(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&c(g(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Ul(u.shape,t,l,s,a,r,i),filter:()=>Vl(u,t,l.shape,s,a,r,i)}}},Th={kernelName:Ht,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,a={x:r,filter:s,dy:t},i={x:r,filter:s,dy:t};return{x:()=>fr.runKernel(jt,a,n),filter:()=>fr.runKernel(qt,i,n)}}},Eh={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=io(n.shape,r.shape);return{a:()=>{const e=ro(t,ia(r,"float32")),a=ao(n.shape,s);return a.length>0?ga(Ho(e,a),n.shape):e},b:()=>{let e=Ao(t,ia(n,"float32"));const a=ao(r.shape,s);a.length>0&&(e=ga(Ho(e,a),r.shape));const i=iu(r);return Bo(ro(e,ia(i,"float32")))}}}},Ah={kernelName:Xt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>fr.runKernelFunc(r,s,null,"EluGrad")}}},Rh={kernelName:Yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Ao(fo(Bo(iu(n))),2/Math.sqrt(Math.PI));return{x:()=>Ao(t,r)}}},Dh={kernelName:Jt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(t,n)}}},_h={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(t,fo(n))}}},Fh={kernelName:ne,gradFunc:t=>({x:()=>lo(t)})},Oh={kernelName:re,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=io(n.shape,r.shape);return{a:()=>{const e=ro(t,ia(r,"float32")),a=ao(n.shape,s);return a.length>0?ga(Ho(e,a),n.shape):e},b:()=>{let e=Ao(t,ia(n,"float32"));const a=ao(r.shape,s);a.length>0&&(e=ga(Ho(e,a),r.shape));const i=iu(r);return Bo(ro(e,ia(i,"float32")))}}}},Mh={kernelName:se,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=e,u=null==o?Ro(1):o,l=ao(a.shape,s.shape),c=[];if(1===a.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=Go(s,a),p=Ao(t,u),d=Fu(Ya(i,Ro(r))),f=Ao(Ao(Ao(d,d),d),Ro(-.5));return{x:()=>1===a.rank?ga(Ao(Ao(t,yo(ga(d,[1,1,1,a.shape[0]]),c)),u),s.shape):ga(Ao(Ao(t,d),u),s.shape),mean:()=>{let t=Ao(Ao(d,Ro(-1)),p);return 1===a.rank&&(t=Ho(t,l)),ga(t,a.shape)},variance:()=>{let t=Ao(Ao(f,h),p);return 1===a.rank&&(t=Ho(t,l)),ga(t,a.shape)},scale:()=>{const e=Ao(h,d);let n=Ao(t,e);return 1===a.rank&&(n=Ho(n,l)),ga(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=Ho(e,l)),ga(e,a.shape)}}}},Lh=xs({unsortedSegmentSum_:function(t,e,n){const r=ys(t,"x","unsortedSegmentSum"),s=ys(e,"segmentIds","unsortedSegmentSum","int32");c(g(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return fr.runKernelFunc(((t,e)=>{const a=t.unsortedSegmentSum(r,s,n);return e([s]),a}),a,null,fn,i)}}),zh={kernelName:ae,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:a}=n,i=v(a,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,i),u=o.length,l=e.slice(a,e.length).slice(1),c=l.length,h=Bh(0,u),p=Bh(u+1,u+1+c),d=Ph([o,[n],l]),f=ga(t,d),m=ga(s,[n]),g=Ph([[u],h,p]),y=xa(f,g);let b=Lh(y,m,r.shape[i]);const x=ri(g);return b=xa(b,x),b},indices:()=>s}}};function Bh(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Ph(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Wh={kernelName:ie,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>lo(n),b:()=>lo(r)}}},Vh={kernelName:oe,gradFunc:t=>({x:()=>ia(t,"float32")})},Uh={kernelName:ce,gradFunc:t=>({x:()=>lo(t)})},Gh={kernelName:he,gradFunc:t=>({x:()=>lo(t)})},Hh={kernelName:pe,gradFunc:t=>({x:()=>lo(t)})},jh={kernelName:fe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ro(t,Ya(n,1))}}},qh={kernelName:de,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ro(t,ia(n,"float32"))}}},Kh={kernelName:ge,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=fo(r);return Go(t,Ao(Ho(t,s,!0),e))}}}},Xh=xs({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,a=1,i=.5){const o={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return fr.runKernelFunc((o=>o.LRNGrad(n,t,e,r,s,a,i)),o,null,"LRNBackprop",u)}}),Yh={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Xh(r,s,t,a,i,o,u)}}};function Jh(t,e,n,r){return e.rank<n.rank&&(e=ga(e,ti(e.shape,r))),t.rank<n.rank&&(t=ga(t,ti(t.shape,r))),{x:()=>Ao(t,ia(oo(n,e),t.dtype))}}const Zh={kernelName:ye,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,a=e[0],i=Jh(t,e[1],a,v(s,a.shape));return{x:()=>i.x()}}},Qh={kernelName:be,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Ao(t,ia(Io(n,r),"float32")),b:()=>Ao(t,ia(_o(n,r),"float32"))}}},tp=xs({maxPool3dBackprop_:function(t,e,n,r,s,a=[1,1,1],i,o){const u=ys(t,"dy","maxPool3dBackprop"),l=ys(e,"input","maxPool3dBackprop"),h=ys(n,"output","maxPool3dBackprop");let p=u,d=l,f=h,m=!1;4===l.rank&&(m=!0,p=ga(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=ga(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=ga(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),c(5===p.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${p.rank}.`)),c(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),c(5===f.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${f.rank}.`)),c($i(s,a),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=o&&c(g(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const y={dy:p,input:d,output:f},b={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},x=fr.runKernelFunc((t=>{const e=gi(d.shape,r,s,a,i,o);return t.maxPool3dBackprop(p,d,f,e)}),y,null,"MaxPool3DBackprop",b);return m?ga(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),ep={kernelName:ve,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>tp(t,r,s,a,i,c,u,l)}}},np=xs({maxPoolBackprop_:function(t,e,n,r,s,a,i){const o=ys(t,"dy","maxPoolBackprop"),u=ys(e,"input","maxPoolBackprop"),l=ys(n,"output","maxPoolBackprop");c(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),c(4===o.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${o.rank}.`)),c(4===u.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&c(g(a),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const h={dy:o,input:u,output:l},p={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return fr.runKernelFunc((t=>{const e=mi(u.shape,r,s,1,a,i);return t.maxPoolBackprop(o,u,l,e)}),h,null,we,p)}}),rp={kernelName:Fe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>Pu(t,a,r.shape)}}},sp={kernelName:en,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Ei(t,r,s)}}},ap={kernelName:nn,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Pi(t,r)}}},ip=[Yc,Jc,Zc,Qc,th,eh,nh,rh,sh,ah,ih,oh,lh,hh,ph,dh,fh,mh,gh,yh,bh,wh,xh,Nh,Ih,$h,Ch,Sh,Th,Eh,Ah,Rh,Dh,_h,Oh,Fh,Mh,zh,Wh,Vh,Uh,Gh,Hh,jh,qh,Kh,Yh,Zh,Zh,Qh,ep,{kernelName:xe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>np(t,r,s,a,i,o)}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[a,i]=e,o=Jh(t,i,a,v(s,a.shape));return{x:()=>o.x()}}},{kernelName:Ie,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Ao(t,ia(Fo(n,r),"float32")),b:()=>Ao(t,ia(No(n,r),"float32"))}}},{kernelName:$e,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>Pu(t,a,r.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=io(n.shape,r.shape);return{a:()=>{const e=ao(n.shape,s);return e.length>0?ga(Ho(t,e),n.shape):t},b:()=>{const e=Ao(t,Bo(wo(ro(n,r)))),a=ao(r.shape,s);return a.length>0?ga(Ho(e,a),r.shape):e}}}},{kernelName:Ce,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=io(n.shape,r.shape);return{a:()=>{const e=Ao(t,ia(r,"float32")),a=ao(n.shape,s);return a.length>0?ga(Ho(e,a),n.shape):e},b:()=>{const e=Ao(t,ia(n,"float32")),a=ao(r.shape,s);return a.length>0?ga(Ho(e,a),r.shape):e}}}},{kernelName:Se,gradFunc:t=>({x:()=>Bo(t)})},{kernelName:_e,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Qo(n.shape,"float32")}}},{kernelName:De,gradFunc:t=>({x:()=>lo(t)})},rp,rp,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,a=n,i=r,o=io(a.shape,i.shape);return{a:()=>{const e=ia(i,"float32");let n=Ao(t,Ao(e,du(a,Go(e,Ro(1)))));const r=ao(a.shape,o);return r.length>0&&(n=Ho(n,r)),ga(n,a.shape)},b:()=>{const e=No(a,0),n=uo(e,Lo(a),lo(a));let r=Ao(t,Ao(s,n));const u=ao(i.shape,o);return u.length>0&&(r=Ho(r,u)),ga(r,i.shape)}}}},{kernelName:Oe,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=No(n,0);return{x:()=>uo(s,t,Ao(t,r)),alpha:()=>{let e=uo(s,lo(t),Ao(t,n));const a=ao(r.shape,t.shape);return a.length>0&&(e=Ho(e,a)),ga(e,r.shape)}}}},{kernelName:Le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ro(t,Bo(iu(n)))}}},{kernelName:Ve,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Ao(Fo(n,6),nl(n));return{x:()=>Ao(t,ia(r,"float32"))}}},{kernelName:ze,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(t,ia(nl(n),"float32"))}}},{kernelName:Be,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ga(t,n.shape)}}},{kernelName:We,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},a={images:r};return{images:()=>fr.runKernelFunc(s,a,null,"ResizeBilinearGrad",n)}}},{kernelName:Pe,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},a={images:r};return{images:()=>fr.runKernelFunc(s,a,null,"ResizeNearestNeighborGrad",n)}}},{kernelName:Ue,gradFunc:(t,e,n)=>{const{dims:r}=n,s=v(r,t.shape);return{x:()=>Du(t,s)}}},{kernelName:Ge,gradFunc:t=>({x:()=>lo(t)})},{kernelName:He,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Bo(ro(t,Ao(du(n,1.5),2)))}}},{kernelName:je,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>ia(lo(n),"float32"),t:()=>Ao(t,ia(n,t.dtype)),e:()=>Ao(t,ia(Ko(n),t.dtype))}}},{kernelName:qe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=No(n,Ro(0)),r=Ro(1.7580993408473768),s=Ro(1.0507009873554805),a=Ao(t,s),i=Ao(Ao(t,r),fo(ia(n,"float32")));return uo(e,a,i)}}}},{kernelName:Ze,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(t,Ao(n,Go(Ro(1),n)))}}},{kernelName:Je,gradFunc:t=>({x:()=>lo(t)})},{kernelName:Xe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(Yi(ia(n,"float32")),t)}}},{kernelName:Ye,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(Ji(ia(n,"float32")),t)}}},{kernelName:Ke,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:a}=n,i=r.shape,[o,u]=Oa(r,s,a),l=[];for(let e=0;e<t.rank;e++)l.push([o[e],i[e]-o[e]-u[e]]);return{x:()=>pu(t,l)}}},{kernelName:rn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,a=Ao(t,r);return{logits:()=>Go(a,Ao(Ho(a,[s],!0),r))}}},{kernelName:Qe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(t,Po(n))}}},sp,sp,ap,ap,{kernelName:tn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ro(t,Ao(Zu(ia(n,"float32")),2))}}},{kernelName:sn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ro(2);return{a:()=>Ao(t,Ao(s,Go(n,r))),b:()=>Ao(t,Ao(s,Go(r,n)))}}},{kernelName:an,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(t,Ao(ia(n,"float32"),2))}}},{kernelName:gn,gradFunc:t=>({x:()=>lo(t)})},{kernelName:on,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=io(n.shape,r.shape);return{a:()=>{let e=t;const r=ao(n.shape,s);return r.length>0&&(e=Ho(e,r)),ga(e,n.shape)},b:()=>{let e=t;const n=ao(r.shape,s);return n.length>0&&(e=Ho(e,n)),ga(Bo(e),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:a}=n;v(a,r.shape).forEach((t=>{s[t]=1}));const i=ga(t,s),o=Ao(i,tu(r.shape,"float32"));return{x:()=>o}}},{kernelName:un,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ro(t,iu(Yi(n)))}}},{kernelName:ln,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ao(Go(Ro(1),iu(n)),t)}}},{kernelName:cn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=lo(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Ya(e,Pu(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)e=Ya(e,Pu(t,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)e=Ya(e,Pu(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)e=Ya(e,Pu(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:hn,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,a=ri(s);return{x:()=>xa(t,a)}}},{kernelName:dn,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>el(t,s)}}},{kernelName:fn,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Eo(e,lo(e)),r=ko(t,n);let s=Io(e,Ro(0,"int32"));const a=r.rank-s.rank;for(let t=0;t<a;++t)s=mo(s,t+1);s=qo(s,tu(r.shape,"bool"));const i=lo(r);return uo(s,r,i)}(t,n)}}},{kernelName:mn,gradFunc:t=>({x:()=>lo(t)})}];for(const t of ip)Tn(t);jn.prototype.abs=function(){return this.throwIfDisposed(),qa(this)},jn.prototype.acos=function(){return this.throwIfDisposed(),Ka(this)},jn.prototype.acosh=function(){return this.throwIfDisposed(),Xa(this)},jn.prototype.addStrict=function(t){return this.throwIfDisposed(),wl(this,t)},jn.prototype.add=function(t){return this.throwIfDisposed(),Ya(this,t)},jn.prototype.all=function(t,e){return this.throwIfDisposed(),ai(this,t,e)},jn.prototype.any=function(t,e){return this.throwIfDisposed(),ii(this,t,e)},jn.prototype.argMax=function(t){return this.throwIfDisposed(),oi(this,t)},jn.prototype.argMin=function(t){return this.throwIfDisposed(),ui(this,t)},jn.prototype.asScalar=function(){return this.throwIfDisposed(),c(1===this.size,(()=>"The array must have only 1 element.")),ga(this,[])},jn.prototype.asType=function(t){return this.throwIfDisposed(),ia(this,t)},jn.prototype.as1D=function(){return this.throwIfDisposed(),ga(this,[this.size])},jn.prototype.as2D=function(t,e){return this.throwIfDisposed(),ga(this,[t,e])},jn.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),ga(this,[t,e,n])},jn.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),ga(this,[t,e,n,r])},jn.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),ga(this,[t,e,n,r,s])},jn.prototype.asin=function(){return this.throwIfDisposed(),li(this)},jn.prototype.asinh=function(){return this.throwIfDisposed(),ci(this)},jn.prototype.atan=function(){return this.throwIfDisposed(),hi(this)},jn.prototype.atan2=function(t){return this.throwIfDisposed(),pi(this,t)},jn.prototype.atanh=function(){return this.throwIfDisposed(),di(this)},jn.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Si(this,t,e,n,r)},jn.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Ei(this,t,e)},jn.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Ri(this,t,e,n,r,s)},jn.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Oi(this,t)},jn.prototype.cast=function(t){return this.throwIfDisposed(),ia(this,t)},jn.prototype.ceil=function(){return this.throwIfDisposed(),Mi(this)},jn.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Li(this,t,e)},jn.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof jn&&(t=[t]),Pi([this,...t],e)},jn.prototype.conv1d=function(t,e,n,r,s,a){return this.throwIfDisposed(),ji(this,t,e,n,r,s,a)},jn.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Ki(this,t,e,n,r,s)},jn.prototype.conv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Hi(this,t,e,n,r,s,a)},jn.prototype.cos=function(){return this.throwIfDisposed(),Yi(this)},jn.prototype.cosh=function(){return this.throwIfDisposed(),Ji(this)},jn.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Zi(this,t,e,n)},jn.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Qi(this,t,e)},jn.prototype.depthwiseConv2D=function(t,e,n,r,s,a){return Ba("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),to(this,t,e,n,r,s,a)},jn.prototype.depthwiseConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),to(this,t,e,n,r,s,a)},jn.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),eo(this,t,e,n,r,s)},jn.prototype.divNoNan=function(t){return this.throwIfDisposed(),co(this,t)},jn.prototype.divStrict=function(t){return this.throwIfDisposed(),vl(this,t)},jn.prototype.div=function(t){return this.throwIfDisposed(),ro(this,t)};const op=xs({dot_:function(t,e){const n=ys(t,"t1","dot"),r=ys(e,"t2","dot");c(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(c(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const t=ga(n,[1,-1]),e=ga(r,[-1,1]),s=ya(t,e);return ga(s,[])}if(1===n.rank&&2===r.rank){const t=ga(n,[1,-1]),e=ga(r,[r.shape[0],r.shape[1]]),s=ya(t,e);return ga(s,[s.size])}if(2===n.rank&&1===r.rank){const t=ga(r,[-1,1]),e=ya(n,t);return ga(e,[e.size])}{const t=ga(r,[r.shape[0],r.shape[1]]);return ya(n,t)}}});jn.prototype.dot=function(t){return this.throwIfDisposed(),op(this,t)},jn.prototype.elu=function(){return this.throwIfDisposed(),ho(this)},jn.prototype.equalStrict=function(t){return this.throwIfDisposed(),fl(this,t)},jn.prototype.equal=function(t){return this.throwIfDisposed(),oo(this,t)},jn.prototype.erf=function(){return this.throwIfDisposed(),po(this)},jn.prototype.exp=function(){return this.throwIfDisposed(),fo(this)},jn.prototype.expandDims=function(t){return this.throwIfDisposed(),mo(this,t)},jn.prototype.expm1=function(){return this.throwIfDisposed(),go(this)},jn.prototype.fft=function(){return this.throwIfDisposed(),qu(this)},jn.prototype.flatten=function(){return this.throwIfDisposed(),ga(this,[this.size])},jn.prototype.floor=function(){return this.throwIfDisposed(),wo(this)},jn.prototype.floorDiv=function(t){return this.throwIfDisposed(),no(this,t)},jn.prototype.gather=function(t,e){return this.throwIfDisposed(),ko(this,t,e)},jn.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),ml(this,t)},jn.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Io(this,t)},jn.prototype.greaterStrict=function(t){return this.throwIfDisposed(),gl(this,t)},jn.prototype.greater=function(t){return this.throwIfDisposed(),No(this,t)},jn.prototype.ifft=function(){return this.throwIfDisposed(),Ku(this)},jn.prototype.irfft=function(){return this.throwIfDisposed(),Xu(this)},jn.prototype.isFinite=function(){return this.throwIfDisposed(),Co(this)},jn.prototype.isInf=function(){return this.throwIfDisposed(),So(this)},jn.prototype.isNaN=function(){return this.throwIfDisposed(),To(this)},jn.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Do(this,t)},jn.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),yl(this,t)},jn.prototype.lessEqual=function(t){return this.throwIfDisposed(),Fo(this,t)},jn.prototype.lessStrict=function(t){return this.throwIfDisposed(),bl(this,t)},jn.prototype.less=function(t){return this.throwIfDisposed(),_o(this,t)},jn.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Mo(this,t,e,n,r)},jn.prototype.logSigmoid=function(){return this.throwIfDisposed(),Vo(this)},jn.prototype.logSoftmax=function(t){return this.throwIfDisposed(),jo(this,t)},jn.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),wc(this,t,e)},jn.prototype.log=function(){return this.throwIfDisposed(),Lo(this)},jn.prototype.log1p=function(){return this.throwIfDisposed(),zo(this)},jn.prototype.logicalAnd=function(t){return this.throwIfDisposed(),qo(this,t)},jn.prototype.logicalNot=function(){return this.throwIfDisposed(),Ko(this)},jn.prototype.logicalOr=function(t){return this.throwIfDisposed(),Xo(this,t)};const up=xs({logicalXor_:function(t,e){const n=ys(t,"a","logicalXor","bool"),r=ys(e,"b","logicalXor","bool");return io(n.shape,r.shape),qo(Xo(t,e),Ko(qo(t,e)))}});jn.prototype.logicalXor=function(t){return this.throwIfDisposed(),up(this,t)},jn.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),ya(this,t,e,n)},jn.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Yo(this,t,e,n,r)},jn.prototype.max=function(t,e){return this.throwIfDisposed(),Uo(this,t,e)},jn.prototype.maximumStrict=function(t){return this.throwIfDisposed(),kl(this,t)},jn.prototype.maximum=function(t){return this.throwIfDisposed(),Eo(this,t)},jn.prototype.mean=function(t,e){return this.throwIfDisposed(),eu(this,t,e)},jn.prototype.min=function(t,e){return this.throwIfDisposed(),nu(this,t,e)},jn.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Nl(this,t)},jn.prototype.minimum=function(t){return this.throwIfDisposed(),ru(this,t)},jn.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),su(this,t,e)},jn.prototype.modStrict=function(t){return this.throwIfDisposed(),Il(this,t)},jn.prototype.mod=function(t){return this.throwIfDisposed(),au(this,t)},jn.prototype.mulStrict=function(t){return this.throwIfDisposed(),$l(this,t)},jn.prototype.mul=function(t){return this.throwIfDisposed(),Ao(this,t)},jn.prototype.neg=function(){return this.throwIfDisposed(),Bo(this)},jn.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Al(this,t,e,n)},jn.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),xl(this,t)},jn.prototype.notEqual=function(t){return this.throwIfDisposed(),lu(this,t)},jn.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),ba(this,t,e,n)},jn.prototype.onesLike=function(){return this.throwIfDisposed(),hu(this)},jn.prototype.pad=function(t,e){return this.throwIfDisposed(),pu(this,t,e)};const lp=xs({pool_:function(t,e,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=ys(t,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=ga(i,[1,i.shape[0],i.shape[1],i.shape[2]])),c($i(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const l=mi(o.shape,e,a,s,r),h=[l.dilationHeight,l.dilationWidth];let p;p="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([l.filterHeight,l.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),a=t.concat(r,s),i=e.map(((t,e)=>(t-a[e]%t)%t)),o=s.map(((t,e)=>t+i[e]));return[e.map(((t,e)=>[r[e],o[e]])),e.map(((t,e)=>[0,i[e]]))]}([l.inHeight,l.inWidth],h,p),g=d?r:"valid",y=d?o:ju(o,h,f),b=("avg"===n?()=>Si(y,e,a,g):()=>Yo(y,e,a,g))(),x=d?b:Ei(b,h,m);return u?ga(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var cp,hp,pp;jn.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),lp(this,t,e,n,r,s)},jn.prototype.powStrict=function(t){return this.throwIfDisposed(),Cl(this,t)},jn.prototype.pow=function(t){return this.throwIfDisposed(),du(this,t)},jn.prototype.prelu=function(t){return this.throwIfDisposed(),fu(this,t)},jn.prototype.prod=function(t,e){return this.throwIfDisposed(),mu(this,t,e)},jn.prototype.reciprocal=function(){return this.throwIfDisposed(),Au(this)},jn.prototype.relu=function(){return this.throwIfDisposed(),Ru(this)},jn.prototype.relu6=function(){return this.throwIfDisposed(),Ml(this)},jn.prototype.reshapeAs=function(t){return this.throwIfDisposed(),ga(this,t.shape)},jn.prototype.reshape=function(t){return this.throwIfDisposed(),ga(this,t)},jn.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),hc(this,t,e)},jn.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),pc(this,t,e)},jn.prototype.reverse=function(t){return this.throwIfDisposed(),Du(this,t)},jn.prototype.rfft=function(){return this.throwIfDisposed(),Ju(this)},jn.prototype.round=function(){return this.throwIfDisposed(),_u(this)},jn.prototype.rsqrt=function(){return this.throwIfDisposed(),Fu(this)},jn.prototype.selu=function(){return this.throwIfDisposed(),Ou(this)},jn.prototype.separableConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Mu(this,t,e,n,r,s,a)},jn.prototype.sigmoid=function(){return this.throwIfDisposed(),Po(this)},jn.prototype.sign=function(){return this.throwIfDisposed(),Lu(this)},jn.prototype.sin=function(){return this.throwIfDisposed(),zu(this)},jn.prototype.sinh=function(){return this.throwIfDisposed(),Bu(this)},jn.prototype.slice=function(t,e){return this.throwIfDisposed(),Pu(this,t,e)},jn.prototype.softmax=function(t){return this.throwIfDisposed(),Hu(this,t)},jn.prototype.softplus=function(){return this.throwIfDisposed(),Wo(this)},jn.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),ju(this,t,e)},jn.prototype.split=function(t,e){return this.throwIfDisposed(),Yu(this,t,e)},jn.prototype.sqrt=function(){return this.throwIfDisposed(),Zu(this)},jn.prototype.square=function(){return this.throwIfDisposed(),iu(this)},jn.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Qu(this,t)},jn.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Sl(this,t)},jn.prototype.squeeze=function(t){return this.throwIfDisposed(),tl(this,t)},jn.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof jn?[this,t]:[this,...t];return el(n,e)},jn.prototype.step=function(t){return this.throwIfDisposed(),nl(this,t)},jn.prototype.stridedSlice=function(t,e,n,r,s,a,i,o){return this.throwIfDisposed(),rl(this,t,e,n,r,s,a,i,o)},jn.prototype.subStrict=function(t){return this.throwIfDisposed(),Tl(this,t)},jn.prototype.sub=function(t){return this.throwIfDisposed(),Go(this,t)},jn.prototype.sum=function(t,e){return this.throwIfDisposed(),Ho(this,t,e)},jn.prototype.tan=function(){return this.throwIfDisposed(),sl(this)},jn.prototype.tanh=function(){return this.throwIfDisposed(),al(this)},jn.prototype.tile=function(t){return this.throwIfDisposed(),yo(this,t)},jn.prototype.toBool=function(){return this.throwIfDisposed(),ia(this,"bool")},jn.prototype.toFloat=function(){return this.throwIfDisposed(),ia(this,"float32")},jn.prototype.toInt=function(){return this.throwIfDisposed(),ia(this,"int32")},jn.prototype.topk=function(t,e){return this.throwIfDisposed(),ul(this,t,e)},jn.prototype.transpose=function(t){return this.throwIfDisposed(),xa(this,t)},jn.prototype.unique=function(t){return this.throwIfDisposed(),cl(this,t)},jn.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Lh(this,t,e)},jn.prototype.unstack=function(t){return this.throwIfDisposed(),hl(this,t)},jn.prototype.where=function(t,e){return this.throwIfDisposed(),uo(t,this,e)},jn.prototype.zerosLike=function(){return this.throwIfDisposed(),lo(this)},(hp=cp||(cp={}))[hp.DT_INVALID=0]="DT_INVALID",hp[hp.DT_FLOAT=1]="DT_FLOAT",hp[hp.DT_DOUBLE=2]="DT_DOUBLE",hp[hp.DT_INT32=3]="DT_INT32",hp[hp.DT_UINT8=4]="DT_UINT8",hp[hp.DT_INT16=5]="DT_INT16",hp[hp.DT_INT8=6]="DT_INT8",hp[hp.DT_STRING=7]="DT_STRING",hp[hp.DT_COMPLEX64=8]="DT_COMPLEX64",hp[hp.DT_INT64=9]="DT_INT64",hp[hp.DT_BOOL=10]="DT_BOOL",hp[hp.DT_QINT8=11]="DT_QINT8",hp[hp.DT_QUINT8=12]="DT_QUINT8",hp[hp.DT_QINT32=13]="DT_QINT32",hp[hp.DT_BFLOAT16=14]="DT_BFLOAT16",hp[hp.DT_FLOAT_REF=101]="DT_FLOAT_REF",hp[hp.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",hp[hp.DT_INT32_REF=103]="DT_INT32_REF",hp[hp.DT_UINT8_REF=104]="DT_UINT8_REF",hp[hp.DT_INT16_REF=105]="DT_INT16_REF",hp[hp.DT_INT8_REF=106]="DT_INT8_REF",hp[hp.DT_STRING_REF=107]="DT_STRING_REF",hp[hp.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",hp[hp.DT_INT64_REF=109]="DT_INT64_REF",hp[hp.DT_BOOL_REF=110]="DT_BOOL_REF",hp[hp.DT_QINT8_REF=111]="DT_QINT8_REF",hp[hp.DT_QUINT8_REF=112]="DT_QUINT8_REF",hp[hp.DT_QINT32_REF=113]="DT_QINT32_REF",hp[hp.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(pp||(pp={}));const dp={};function fp(t){return dp[t]}function mp(t,e,n,r,s){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return gp(e.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type)return e.inputNames.slice(t,i).map((t=>gp(t,n,r,s)));const o=gp(e.inputNames.slice(t)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:O(o.shape,u)}const i=e.attrParams[t];return i&&i.value}function gp(t,e,n,r){const[s,a]=xp(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const i=n.currentContextIds.find((t=>!!e[bp(s,t)]));return void 0!==i?e[bp(s,i)][a]:void 0}function yp(t,e){const[n,r]=xp(t);return[bp(n,e&&e.currentContextId),r]}function bp(t,e){return e?`${t}-${e}`:t}function xp(t){const e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function wp(t,e,n){let r=mp("pad",t,e,n);if("explicit"===r){r=mp("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function vp(t){return t.kept?t:oa(t)}var kp={};const Np=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];e(kp,"json",(function(){return Np}));var Ip={};const $p=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];e(Ip,"json",(function(){return $p}));var Cp={};const Sp=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];e(Cp,"json",(function(){return Sp}));var Tp={};const Ep=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];e(Tp,"json",(function(){return Ep}));var Ap={};const Rp=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];e(Ap,"json",(function(){return Rp}));var Dp={};const _p=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];e(Dp,"json",(function(){return _p}));var Fp={};const Op=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];e(Fp,"json",(function(){return Op}));var Mp={};const Lp=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];e(Mp,"json",(function(){return Lp}));var zp={};const Bp=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];e(zp,"json",(function(){return Bp}));var Pp={};const Wp=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];e(Pp,"json",(function(){return Wp}));var Vp={};const Up=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];e(Vp,"json",(function(){return Up}));var Gp={};const Hp=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];e(Gp,"json",(function(){return Hp}));var jp={};const qp=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];e(jp,"json",(function(){return qp}));var Kp={};const Xp=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];e(Kp,"json",(function(){return Xp}));var Yp={};const Jp=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];e(Yp,"json",(function(){return Jp}));var Zp={};const Qp=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];e(Zp,"json",(function(){return Qp}));var td={};const ed=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];e(td,"json",(function(){return ed}));var nd=Er;class rd{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[kp,Ip,Cp,Tp,Ap,Dp,Fp,Vp,Pp,Mp,Gp,jp,Kp,Yp,Zp,td,zp].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],a=[],i=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||a.push(t[e.name]),t)),{});let o=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(i);h.forEach((t=>{const e=i[t];e.inputNames.forEach((t=>{const[n]=yp(t);e.inputs.push(i[n]),i[n].children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=i[t];0===e.children.length&&u.push(e)})):Object.keys(c).forEach((t=>{const[e]=yp(t),n=i[e];null!=n&&(n.signatureKey=c[t],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=yp(t),n=i[e];n&&(n.signatureKey=l[t],o.push(n))})):o=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:e,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=fp(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let s;switch(n.type){case"string":s=ad(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ad(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=md(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=md(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=od(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=od(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=fd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=id(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=id(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=yd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=yd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=dd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=dd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=gd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=cd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=cd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=hd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=hd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=ld(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ld(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const s=[],a=[];t.signature.inputArg.forEach((t=>{const[e]=yp(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ud(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n})),Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach((t=>{const[n]=yp(t);e.inputs.push(r[n]),r[n].children.push(e)}))}));const i=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=yp(i[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function sd(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=G().global;if(void 0!==e.atob)return e.atob(t);if(void 0!==nd)return new nd(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function ad(t,e,n,r=!1){const s=t[e];return null!=s?sd(s.s,r):n}function id(t,e,n){const r=t[e];return r?r.b:n}function od(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function ud(t){switch("string"==typeof t&&(t=cp[t]),t){case cp.DT_FLOAT:return"float32";case cp.DT_INT32:case cp.DT_INT64:case cp.DT_INT8:case cp.DT_UINT8:return"int32";case cp.DT_BOOL:return"bool";case cp.DT_DOUBLE:return"float32";case cp.DT_STRING:return"string";default:return null}}function ld(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function cd(t,e,n){const r=t[e];return r&&r.type?ud(r.type):n}function hd(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>ud(t))):n}function pd(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function dd(t,e,n){const r=t[e];return r&&r.shape?pd(r.shape):n}function fd(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function md(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map((t=>sd(t,r))):n}function gd(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>pd(t))):n}function yd(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class bd{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return gp(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return gp(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return od(this.node.rawAttrs,t,e);if(null!=n.s)return ad(this.node.rawAttrs,t,e);if(null!=n.b)return id(this.node.rawAttrs,t,e);if(null!=n.shape)return dd(this.node.rawAttrs,t,e);if(null!=n.type)return cd(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fd(this.node.rawAttrs,t,e);if(null!=n.list.s)return md(this.node.rawAttrs,t,e);if(null!=n.list.shape)return gd(this.node.rawAttrs,t,e);if(null!=n.list.b)return yd(this.node.rawAttrs,t,e);if(null!=n.list.type)return hd(this.node.rawAttrs,t,e)}return e}}function xd(t,e,n=""){c(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}class wd{constructor(t,e,n,r,s,a,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ro(0),Ga(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),xd(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Ga(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return ks([],[0].concat(this.elementShape));const n=this.readMany(t);return xd(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),el(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return ks([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return xd(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Pi(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,hl(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,a=[];Va((()=>{e=ga(e,[1,n,s]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,t[n],s];a[n]=ga(Pu(e,i,o),this.elementShape)}return a}));const i=[];for(let e=0;e<t.length;e++)i[e]=e;this.writeMany(i,a)}}class vd{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);xd(e,t.shape,"TensorList shape mismatch: "),Ga(t)})),this.idTensor=Ro(0),this.maxNumElements=r,Ga(this.idTensor)}get id(){return this.idTensor.id}copy(){return new vd([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return xd(t,this.elementShape,"TensorList shape mismatch: "),Va((()=>{const e=this.tensors.map((e=>ga(e,t)));return el(e,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return xd(n.shape,t,"TensorList shape mismatch: "),ga(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(xd(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ga(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return xd(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);xd(this.elementShape,e.shape,"TensorList shape mismatch: "),Ga(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return xd(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?ks([],[0].concat(this.elementShape)):Va((()=>{const e=t.map((t=>ga(this.tensors[t],n)));return el(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return xd(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?ks([],[0].concat(this.elementShape)):Va((()=>{const t=this.tensors.map((t=>ga(t,e)));return Pi(t,0)}))}}function kd(t,e,n){const[r,s]=mp("fusedOps",t,e,n),a="biasadd"===r,i="prelu"===s,o="fusedbatchnorm"===r,u=mp("numArgs",t,e,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=mp("strides",t,e,n),c=wp(t,e,n),h=mp("dataFormat",t,e,n).toUpperCase(),p=mp("dilations",t,e,n),[d,f]=mp("args",t,e,n);return{stride:l,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:s}}function Nd(t,e,n){return{boxes:mp("boxes",t,e,n),scores:mp("scores",t,e,n),maxOutputSize:mp("maxOutputSize",t,e,n),iouThreshold:mp("iouThreshold",t,e,n),scoreThreshold:mp("scoreThreshold",t,e,n),softNmsSigma:mp("softNmsSigma",t,e,n)}}class Id{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Ro(0),this.tensorMap=new Map,Ga(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),Va((()=>{const t=hl(e),r=n.length,s=t.length;c(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let e=0;e<r;e++){const r=n[e],s=t[e];Ga(s),this.tensorMap.set(r,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Va((()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,e);t.push(a)}return el(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function $d(t,e,n,r){const s=((t,e,n)=>{switch(t.category){case"arithmetic":return Va((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[Ya(mp("a",t,e,n),mp("b",t,e,n))];case"AddN":return[Ja(mp("tensors",t,e,n))];case"FloorMod":case"Mod":return[au(mp("a",t,e,n),mp("b",t,e,n))];case"Mul":return[Ao(mp("a",t,e,n),mp("b",t,e,n))];case"RealDiv":case"Div":return[ro(mp("a",t,e,n),mp("b",t,e,n))];case"DivNoNan":return[co(mp("a",t,e,n),mp("b",t,e,n))];case"FloorDiv":return[no(mp("a",t,e,n),mp("b",t,e,n))];case"Sub":return[Go(mp("a",t,e,n),mp("b",t,e,n))];case"Minimum":return[ru(mp("a",t,e,n),mp("b",t,e,n))];case"Maximum":return[Eo(mp("a",t,e,n),mp("b",t,e,n))];case"Pow":return[du(mp("a",t,e,n),mp("b",t,e,n))];case"SquaredDifference":return[Qu(mp("a",t,e,n),mp("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return Va((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[qa(mp("x",t,e,n))];case"Acos":return[Ka(mp("x",t,e,n))];case"Acosh":return[Xa(mp("x",t,e,n))];case"Asin":return[li(mp("x",t,e,n))];case"Asinh":return[ci(mp("x",t,e,n))];case"Atan":return[hi(mp("x",t,e,n))];case"Atan2":return[pi(mp("x",t,e,n),mp("y",t,e,n))];case"Atanh":return[di(mp("x",t,e,n))];case"Ceil":return[Mi(mp("x",t,e,n))];case"Complex":return[ws(mp("real",t,e,n),mp("imag",t,e,n))];case"Cos":return[Yi(mp("x",t,e,n))];case"Cosh":return[Ji(mp("x",t,e,n))];case"Elu":return[ho(mp("x",t,e,n))];case"Erf":return[po(mp("x",t,e,n))];case"Exp":return[fo(mp("x",t,e,n))];case"Expm1":return[go(mp("x",t,e,n))];case"Floor":return[wo(mp("x",t,e,n))];case"Log":return[Lo(mp("x",t,e,n))];case"Log1p":return[zo(mp("x",t,e,n))];case"Imag":return[$o(mp("x",t,e,n))];case"Neg":return[Bo(mp("x",t,e,n))];case"Reciprocal":return[Au(mp("x",t,e,n))];case"Real":return[cu(mp("x",t,e,n))];case"Relu":return[Ru(mp("x",t,e,n))];case"Round":return[_u(mp("x",t,e,n))];case"Selu":return[Ou(mp("x",t,e,n))];case"Sigmoid":return[Po(mp("x",t,e,n))];case"Sin":return[zu(mp("x",t,e,n))];case"Sign":return[Lu(mp("x",t,e,n))];case"Sinh":return[Bu(mp("x",t,e,n))];case"Softplus":return[Wo(mp("x",t,e,n))];case"Sqrt":return[Zu(mp("x",t,e,n))];case"Square":return[iu(mp("x",t,e,n))];case"Tanh":return[al(mp("x",t,e,n))];case"Tan":return[sl(mp("x",t,e,n))];case"Relu6":case"ClipByValue":return[Li(mp("x",t,e,n),mp("clipValueMin",t,e,n),mp("clipValueMax",t,e,n))];case"Rsqrt":return[Fu(gp(t.inputNames[0],e,n))];case"Prod":return[mu(mp("x",t,e,n),mp("axes",t,e,n))];case"LeakyRelu":return[Do(mp("x",t,e,n),mp("alpha",t,e,n))];case"Prelu":return[fu(mp("x",t,e,n),mp("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=mp("thenBranch",t,e,n),s=mp("elseBranch",t,e,n),a=mp("cond",t,e,n),i=mp("args",t,e,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=mp("body",t,e,n),s=mp("cond",t,e,n),a=mp("args",t,e,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((t=>t.id));let u=await i[0].data();i.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()}));let l=a;for(;u[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map((t=>t.id));t.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return l}case"LoopCond":return[vp(mp("pred",t,e,n))];case"Switch":{const r=mp("pred",t,e,n);let s=mp("data",t,e,n);return s.kept||(s=vp(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==gp(t,e,n)));return r?[vp(gp(r,e,n))]:void 0}case"Enter":{const r=mp("frameName",t,e,n),s=mp("tensor",t,e,n);return n.enterFrame(r),[vp(s)]}case"Exit":{const r=mp("tensor",t,e,n);return n.exitFrame(),[vp(r)]}case"NextIteration":{const r=mp("tensor",t,e,n);return n.nextIteration(),[vp(r)]}case"TensorArrayV3":{const r=mp("size",t,e,n),s=mp("dtype",t,e,n),a=mp("elementShape",t,e,n),i=mp("dynamicSize",t,e,n),o=mp("clearAfterRead",t,e,n),u=mp("identicalElementShapes",t,e,n),l=mp("name",t,e,n),c=new wd(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,Ro(1)]}case"TensorArrayWriteV3":{const r=mp("tensorArrayId",t,e,n),s=mp("index",t,e,n),a=mp("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=mp("tensorArrayId",t,e,n),s=mp("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=mp("tensorArrayId",t,e,n),s=mp("indices",t,e,n),a=mp("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=mp("tensorArrayId",t,e,n),s=mp("indices",t,e,n),a=mp("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=mp("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),a=mp("dtype",t,e,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=mp("tensorArrayId",t,e,n),s=mp("tensor",t,e,n),a=mp("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=mp("tensorArrayId",t,e,n);return[Ro(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=mp("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=mp("tensorListId",t,e,n),s=mp("index",t,e,n),a=mp("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=mp("tensorListId",t,e,n),s=mp("index",t,e,n),a=mp("elementShape",t,e,n),i=mp("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=mp("indices",t,e,n),s=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new vd([],n,t.dtype,r),i=hl(t,0);return e.forEach(((t,e)=>{a.setItem(t,i[e])})),a}(mp("tensor",t,e,n),r,mp("elementShape",t,e,n),mp("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":{const r=function(t,e,n){return new vd([],t,e,n)}(mp("elementShape",t,e,n),mp("elementDType",t,e,n),mp("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListGather":{const r=mp("tensorListId",t,e,n),s=mp("indices",t,e,n),a=mp("elementShape",t,e,n),i=mp("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=mp("tensorListId",t,e,n),s=mp("elementShape",t,e,n),a=mp("elementDType",t,e,n),i=mp("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);xd(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=hl(t);return new vd(s,e,r)}(mp("tensor",t,e,n),mp("elementShape",t,e,n),mp("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=mp("tensorListId",t,e,n),s=n.getTensorList(r.id),a=mp("dtype",t,e,n),i=mp("elementShape",t,e,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=mp("tensorListId",t,e,n),s=mp("tensor",t,e,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=mp("tensorListId",t,e,n),s=mp("elementShape",t,e,n),a=mp("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=mp("tensor",t,e,n),s=mp("elementShape",t,e,n),a=function(t,e,n){let r=0;const s=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const a=0===r?0:t.size/r,i=Va((()=>{const i=[];t=ga(t,[1,r,a]);for(let r=0;r<e.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,e[r],a];i[r]=ga(Pu(t,o,u),n)}return t.dispose(),i})),o=new vd([],n,t.dtype,e.length);for(let t=0;t<i.length;t++)o.setItem(t,i[t]);return o}(r,mp("lengths",t,e,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return Va((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=mp("stride",t,e,n),s=mp("pad",t,e,n),a=mp("dataFormat",t,e,n).toUpperCase(),i=mp("dilation",t,e,n);return[ji(mp("x",t,e,n),mp("filter",t,e,n),r,s,a,i)]}case"Conv2D":{const r=mp("strides",t,e,n),s=wp(t,e,n),a=mp("dataFormat",t,e,n).toUpperCase(),i=mp("dilations",t,e,n);return[Hi(mp("x",t,e,n),mp("filter",t,e,n),[r[1],r[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=kd(t,e,n);return[Wl({x:mp("x",t,e,n),filter:mp("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=kd(t,e,n);return[Gl({x:mp("x",t,e,n),filter:mp("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=mp("outputShape",t,e,n),s=mp("strides",t,e,n),a=wp(t,e,n);return[Ki(mp("x",t,e,n),mp("filter",t,e,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=mp("strides",t,e,n),s=wp(t,e,n),a=mp("dilations",t,e,n),i=mp("dataFormat",t,e,n).toUpperCase();return[to(mp("input",t,e,n),mp("filter",t,e,n),[r[1],r[2]],s,i,[a[1],a[2]])]}case"Conv3D":{const r=mp("strides",t,e,n),s=mp("pad",t,e,n),a=mp("dataFormat",t,e,n).toUpperCase(),i=mp("dilations",t,e,n);return[Xi(mp("x",t,e,n),mp("filter",t,e,n),[r[1],r[2],r[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=mp("strides",t,e,n),s=mp("pad",t,e,n),a=mp("kernelSize",t,e,n);return[Si(mp("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=mp("strides",t,e,n),s=mp("pad",t,e,n),a=mp("kernelSize",t,e,n);return[Yo(mp("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=mp("strides",t,e,n),s=mp("pad",t,e,n),a=mp("kernelSize",t,e,n),i=mp("includeBatchInIndex",t,e,n),{result:o,indexes:u}=Zo(mp("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s,i);return[o,u]}case"AvgPool3D":{const r=mp("strides",t,e,n),s=mp("pad",t,e,n),a=mp("kernelSize",t,e,n);return[Ti(mp("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=mp("strides",t,e,n),s=mp("pad",t,e,n),a=mp("kernelSize",t,e,n);return[Jo(mp("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=mp("strides",t,e,n),s=mp("pad",t,e,n),a=mp("dilations",t,e,n),i=r[1],o=r[2],u=a[1],l=a[2];return[eo(mp("x",t,e,n),mp("filter",t,e,n),[i,o],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return Va((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=mp("shape",t,e,n),s=mp("dtype",t,e,n);return[xo(r,mp("value",t,e,n),s)]}case"LinSpace":return[Oo(mp("start",t,e,n),mp("stop",t,e,n),mp("num",t,e,n))];case"Multinomial":{const r=mp("logits",t,e,n),s=mp("numSamples",t,e,n),a=mp("seed",t,e,n);return[uu(r,s,a)]}case"OneHot":{const r=mp("indices",t,e,n),s=mp("depth",t,e,n),a=mp("onValue",t,e,n),i=mp("offValue",t,e,n);return[ba(r,s,a,i)]}case"Ones":return[tu(mp("shape",t,e,n),mp("dtype",t,e,n))];case"OnesLike":return[hu(mp("x",t,e,n))];case"RandomUniform":return[Su(mp("shape",t,e,n),mp("minval",t,e,n),mp("maxval",t,e,n),mp("dtype",t,e,n))];case"Range":return[Eu(mp("start",t,e,n),mp("stop",t,e,n),mp("step",t,e,n),mp("dtype",t,e,n))];case"TruncatedNormal":{const r=mp("shape",t,e,n),s=mp("mean",t,e,n),a=mp("stdDev",t,e,n),i=mp("seed",t,e,n);return[ll(r,s,a,mp("dtype",t,e,n),i)]}case"Zeros":return[Qo(mp("shape",t,e,n),mp("dtype",t,e,n))];case"ZerosLike":return[lo(mp("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Nd(t,e,n),l=await vc.nonMaxSuppressionWithScoreAsync(r,s,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Nd(t,e,n),u=mp("padToMaxOutputSize",t,e,n),l=await vc.nonMaxSuppressionPaddedAsync(r,s,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Nd(t,e,n);return[await vc.nonMaxSuppressionAsync(r,s,a,i,o)]}case"Where":{const r=ia(mp("condition",t,e,n),"bool"),s=[await dl(r)];return r.dispose(),s}case"ListDiff":return async function(t,e){const n=ys(t,"x","setdiff1d"),r=ys(e,"y","setdiff1d");c(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),c(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),c(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let t=0;t<s.length;t++)i.has(s[t])||o++;const u=new Vn([o],n.dtype),l=new Vn([o],"int32");for(let t=0,e=0;t<s.length;t++)i.has(s[t])||(u.values[e]=s[t],l.values[e]=t,e++);return[u.toTensor(),l.toTensor()]}(mp("x",t,e,n),mp("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return Va((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=mp("x",t,e,n),s=mp("k",t,e,n),a=mp("sorted",t,e,n),i=ul(r,s,a);return[i.values,i.indices]}case"Unique":{const r=mp("x",t,e,n),s=cl(r);return[s.values,s.indices]}case"UniqueV2":{const r=mp("x",t,e,n),s=mp("axis",t,e,n),a=cl(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return Va((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=mp("images",t,e,n),s=mp("size",t,e,n),a=mp("alignCorners",t,e,n);return[vc.resizeBilinear(r,[s[0],s[1]],a)]}case"ResizeNearestNeighbor":{const r=mp("images",t,e,n),s=mp("size",t,e,n),a=mp("alignCorners",t,e,n);return[vc.resizeNearestNeighbor(r,[s[0],s[1]],a)]}case"CropAndResize":{const r=mp("image",t,e,n),s=mp("boxes",t,e,n),a=mp("boxInd",t,e,n),i=mp("cropSize",t,e,n),o=mp("method",t,e,n),u=mp("extrapolationValue",t,e,n);return[vc.cropAndResize(r,s,a,i,o,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return Va((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=mp("default",t,e,n);return[gp(t.name,e,n)||r];case"Placeholder":return[gp(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[vp(mp("x",t,e,n))];case"IdentityN":return mp("x",t,e,n).map((t=>vp(t)));case"Snapshot":return[vp(mp("x",t,e,n))];case"Shape":return[Tu(mp("x",t,e,n).shape,"int32")];case"ShapeN":return mp("x",t,e,n).map((t=>Tu(t.shape)));case"Size":return[Ro(mp("x",t,e,n).size,"int32")];case"Rank":return[Ro(mp("x",t,e,n).rank,"int32")];case"NoOp":return[Ro(1)];case"Print":const s=mp("x",t,e,n),a=mp("data",t,e,n),i=mp("message",t,e,n),o=mp("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let t=0;t<a.length;t++)console.log(Array.prototype.slice.call(a[t].dataSync()).slice(0,o));return[s];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return Va((()=>((t,e,n)=>{switch(t.op){case"Equal":return[oo(mp("a",t,e,n),mp("b",t,e,n))];case"NotEqual":return[lu(mp("a",t,e,n),mp("b",t,e,n))];case"Greater":return[No(mp("a",t,e,n),mp("b",t,e,n))];case"GreaterEqual":return[Io(mp("a",t,e,n),mp("b",t,e,n))];case"Less":return[_o(mp("a",t,e,n),mp("b",t,e,n))];case"LessEqual":return[Fo(mp("a",t,e,n),mp("b",t,e,n))];case"LogicalAnd":return[qo(mp("a",t,e,n),mp("b",t,e,n))];case"LogicalNot":return[Ko(mp("a",t,e,n))];case"LogicalOr":return[Xo(mp("a",t,e,n),mp("b",t,e,n))];case"Select":case"SelectV2":return[uo(mp("condition",t,e,n),mp("a",t,e,n),mp("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return Va((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ya(mp("a",t,e,n),mp("b",t,e,n),mp("transposeA",t,e,n),mp("transposeB",t,e,n))];case"Transpose":return[xa(mp("x",t,e,n),mp("perm",t,e,n))];case"_FusedMatMul":const[r,s]=mp("fusedOps",t,e,n),a="biasadd"===r,i="prelu"===s,o=mp("numArgs",t,e,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=mp("args",t,e,n);return[Hl({a:mp("a",t,e,n),b:mp("b",t,e,n),transposeA:mp("transposeA",t,e,n),transposeB:mp("transposeB",t,e,n),bias:u,activation:s,preluActivationWeights:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return Va((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Ri(mp("x",t,e,n),mp("mean",t,e,n),mp("variance",t,e,n),mp("offset",t,e,n),mp("scale",t,e,n),mp("epsilon",t,e,n))];case"LRN":return[Mo(mp("x",t,e,n),mp("radius",t,e,n),mp("bias",t,e,n),mp("alpha",t,e,n),mp("beta",t,e,n))];case"Softmax":return[Hu(mp("x",t,e,n))];case"LogSoftmax":return[jo(mp("x",t,e,n))];case"SparseToDense":return[Dl(mp("sparseIndices",t,e,n),mp("outputShape",t,e,n),mp("sparseValues",t,e,n),mp("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return Va((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=mp("axis",t,e,n),s=mp("keepDims",t,e,n);return[Uo(mp("x",t,e,n),r,s)]}case"Mean":{const r=mp("axis",t,e,n),s=mp("keepDims",t,e,n);return[eu(mp("x",t,e,n),r,s)]}case"Min":{const r=mp("axis",t,e,n),s=mp("keepDims",t,e,n);return[nu(mp("x",t,e,n),r,s)]}case"Sum":{const r=mp("axis",t,e,n),s=mp("keepDims",t,e,n);return[Ho(mp("x",t,e,n),r,s)]}case"All":{const r=mp("axis",t,e,n),s=mp("keepDims",t,e,n);return[ai(mp("x",t,e,n),r,s)]}case"Any":{const r=mp("axis",t,e,n),s=mp("keepDims",t,e,n);return[ii(mp("x",t,e,n),r,s)]}case"ArgMax":{const r=mp("axis",t,e,n);return[oi(mp("x",t,e,n),r)]}case"ArgMin":{const r=mp("axis",t,e,n);return[ui(mp("x",t,e,n),r)]}case"Prod":{const r=mp("axis",t,e,n),s=mp("keepDims",t,e,n);return[mu(mp("x",t,e,n),r,s)]}case"Cumsum":{const r=mp("axis",t,e,n),s=mp("exclusive",t,e,n),a=mp("reverse",t,e,n);return[Zi(mp("x",t,e,n),r,s,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return Va((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=mp("n",t,e,n),s=mp("axis",t,e,n);let a=mp("tensors",t,e,n);return a=a.slice(0,r),[Pi(a,s)]}case"GatherV2":case"Gather":{const r=mp("axis",t,e,n),s=mp("x",t,e,n),a=mp("indices",t,e,n);return[ko(s,ia(a,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=mp("axis",t,e,n),s=mp("x",t,e,n);return[Du(s,r)]}case"Slice":{const r=mp("begin",t,e,n),s=mp("size",t,e,n);return[Pu(mp("x",t,e,n),r,s)]}case"StridedSlice":{const r=mp("begin",t,e,n),s=mp("end",t,e,n),a=mp("strides",t,e,n),i=mp("beginMask",t,e,n),o=mp("endMask",t,e,n),u=mp("ellipsisMask",t,e,n),l=mp("newAxisMask",t,e,n),c=mp("shrinkAxisMask",t,e,n),h=mp("x",t,e,n);return[rl(h,r,s,a,i,o,u,l,c)]}case"Pack":return Va((()=>{const r=mp("axis",t,e,n),s=mp("tensors",t,e,n),a=s[0].shape,i=tl(s[0]).shape,o=s.map((t=>{const e=m(t.shape,a);if(!e&&!m(tl(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:ga(t,a)}));return[el(o,r)]}));case"Unpack":{const r=mp("axis",t,e,n),s=mp("tensor",t,e,n);return hl(s,r)}case"Tile":{const r=mp("reps",t,e,n);return[yo(mp("x",t,e,n),r)]}case"Split":case"SplitV":{const r=mp("axis",t,e,n),s=mp("numOrSizeSplits",t,e,n),a=mp("x",t,e,n);return Yu(a,s,r)}case"ScatterNd":{const r=mp("indices",t,e,n),s=mp("values",t,e,n),a=mp("shape",t,e,n);return[Rl(r,s,a)]}case"GatherNd":{const r=mp("x",t,e,n),s=mp("indices",t,e,n);return[_l(r,s)]}case"SparseToDense":{const r=mp("sparseIndices",t,e,n),s=mp("outputShape",t,e,n),a=mp("sparseValues",t,e,n),i=mp("defaultValue",t,e,n);return[Dl(r,a,s,a.dtype===i.dtype?i:ia(i,a.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return Va((()=>((t,e,n)=>{switch(t.op){case"FFT":return[qu(mp("x",t,e,n))];case"IFFT":return[Ku(mp("x",t,e,n))];case"RFFT":return[Ju(mp("x",t,e,n))];case"IRFFT":return[Xu(mp("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return Va((()=>((t,e,n)=>{switch(t.op){case"Cast":return[ia(mp("x",t,e,n),mp("dtype",t,e,n))];case"ExpandDims":{const r=mp("axis",t,e,n);return[mo(mp("x",t,e,n),r)]}case"Squeeze":{const r=mp("axis",t,e,n);return[tl(mp("x",t,e,n),r)]}case"Reshape":return[ga(mp("x",t,e,n),mp("shape",t,e,n))];case"MirrorPad":return[su(mp("x",t,e,n),mp("padding",t,e,n),mp("mode",t,e,n))];case"PadV2":case"Pad":return[pu(mp("x",t,e,n),mp("padding",t,e,n),mp("constantValue",t,e,n))];case"SpaceToBatchND":{const r=mp("blockShape",t,e,n),s=mp("paddings",t,e,n);return[ju(mp("x",t,e,n),r,s)]}case"BatchToSpaceND":{const r=mp("blockShape",t,e,n),s=mp("crops",t,e,n);return[Ei(mp("x",t,e,n),r,s)]}case"DepthToSpace":{const r=mp("blockSize",t,e,n),s=mp("dataFormat",t,e,n).toUpperCase();return[Qi(mp("x",t,e,n),r,s)]}case"BroadcastTo":return[Oi(mp("x",t,e,n),mp("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=mp("keyDType",t,e,n),a=mp("valueDType",t,e,n),i=new Id(s,a);return r.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=mp("tableHandle",t,e,n,r),a=mp("keys",t,e,n),i=mp("values",t,e,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=mp("tableHandle",t,e,n,r),a=mp("keys",t,e,n),i=mp("defaultValue",t,e,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const s=fp(t.op);if(s&&s.customExecutor)return s.customExecutor(new bd(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return V(s)?s.then((t=>[].concat(t))):[].concat(s)}class Cd{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Sd(t,e,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(t).map((t=>xp(t)[0]));let c=[];null!=r&&(c=r.map((t=>xp(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(Rd(t)||Dd(t)||_d(t))&&null==i&&(i=t,o=i.children.map((t=>t.name)).filter((t=>s.has(t)))),s.add(t.name),null==n[t.name]&&-1===l.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{u.has(t.name)||(u.add(t.name),h.push(t))})):a.push(t.name))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const Td=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Ed=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Ad=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Rd(t){return Td.indexOf(t.op)>=0}function Dd(t){return Ed.indexOf(t.op)>=0}function _d(t){return Ad.indexOf(t.op)>=0}class Fd{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new Fd(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=Sd(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=e.map((t=>t.name)),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map((t=>xp(t)[0])).map((e=>t.nodes[e])),o=t.initNodes;i.forEach((t=>{r.has(t.name)&&a.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&a.push(t)})),null!=o&&o.forEach((t=>{r.has(t.name)&&a.push(t)}));const u=new Set,l=[];for(;a.length>0;){const t=a.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach((t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>u.has(t.name)))&&a.push(t)}))}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[xp(t)[0]])),s=e.map((t=>xp(t)[0]));let a=s.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(t,a),this.compiledMap.set(i,o));const u={},l={};return Va((()=>{const n=new Cd(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=xp(e),a=[];a[s]=t[e],r[n]=a}));const a=this.getFrozenTensorIds(r),i={};for(let t=0;t<o.length;t++){const e=o[t];if(!r[e.name]){const t=$d(e,r,n,this._resourceManager);if(V(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),e.map((t=>gp(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,a,i){"control"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[bp(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach((t=>{if(t&&!s.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const a=new Cd(this.weightMap,r,s,this.functionExecutorMap),i=await this.executeWithControlFlow(t,a,e,n),o=e.map((t=>gp(t,i,a))),u=o.map((t=>t.id)),l=Object.keys(t).map((e=>t[e].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((t=>{i[t].forEach((t=>{!t||t.isDisposed||c.has(t.id)||t.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const s=Object.keys(t),a=s.map((t=>this.graph.nodes[xp(t)[0]])),i=n.map((t=>xp(t)[0]));let o=i.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=Sd(t,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=xp(e),s=[];s[r]=t[e],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(a,p,e,d,g,m,i,f,u);await Promise.all(t)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((t=>!Rd(t)&&!gp(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${t}`)}return d}processStack(t,e,n,r,s,a,i,o,u){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&mp("isConstant",t.node,r,n)&&([c]=yp(t.node.name,n)),null==r[t.node.name]){const h=$d(t.node,r,n,this._resourceManager);c||([c]=yp(t.node.name,n));const p=n.currentContext;V(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,t.node,r,n,a,i,o),this.processChildNodes(t.node,e,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,a,i,o),this.processChildNodes(t.node,e,n,r,s,u))}else this.processChildNodes(t.node,e,n,r,s,u)}return l}processChildNodes(t,e,n,r,s,a){t.children.forEach((t=>{const[i]=yp(t.name,n);!s[i]&&a.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!gp(t,r,n)))&&(s[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!gp(t,r,n)))&&(s[i]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=xp(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value;c(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&c(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=xp(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=xp(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class Od{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class Md{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new Od}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=ma(t,this.loadOptions);else{const r=(e=t,n=this.loadOptions,Ds.getLoadHandlers(e,n));if(0===r.length)r.push(ma(t,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[t]}'`);this.handler=r[0]}var e,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=function(t,e){const n={};let r,s=0;for(const a of e){const e=a.name,i=a.dtype,o=a.shape,u=f(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ns[n.dtype],c=t.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Rs()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}s+=u*o}else if("string"===i){const e=f(a.shape);l=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));l.push(n),s+=e}}else{const r=Ns[i],a=t.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);{l=new Float32Array(a);const t=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],r[e]=l[2*e+1];const s=ks(t,o,"float32"),i=ks(r,o,"float32");n[e]=ws(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[e]=ks(l,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Fd(rd.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer){const e=rd.Instance.transformGraph(t.modelInitializer);this.initializer=new Fd(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=_s(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof jn||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Ld(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new Md(t,e);return await n.load(),n}var zd=function(){return(zd=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)};function Bd(t,e,n,r){return new(n||(n=Promise))((function(s,a){function i(t){try{u(r.next(t))}catch(t){a(t)}}function o(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,o)}u((r=r.apply(t,e||[])).next())}))}function Pd(t,e){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}const Wd=t=>({startEndTensor:t,startPoint:Pu(t,[0,0],[-1,2]),endPoint:Pu(t,[0,2],[-1,2])}),Vd={strides:[8,16],anchors:[2,6]};function Ud(t,e){let n,r,s;if(t.topLeft instanceof jn&&t.bottomRight instanceof jn){const[a,i]=Va((()=>[Pi([Go(e-1,t.topLeft.slice(0,1)),t.topLeft.slice(1,1)]),Pi([Go(e-1,t.bottomRight.slice(0,1)),t.bottomRight.slice(1,1)])]));n=a,r=i,null!=t.landmarks&&(s=Va((()=>{const n=Go(Tu([e-1,0]),t.landmarks),r=Tu([1,-1]);return Ao(n,r)})))}else{const[a,i]=t.topLeft,[o,u]=t.bottomRight;n=[e-1-a,i],r=[e-1-o,u],null!=t.landmarks&&(s=t.landmarks.map((t=>[e-1-t[0],t[1]])))}const a={topLeft:n,bottomRight:r};return null!=s&&(a.landmarks=s),null!=t.probability&&(a.probability=t.probability instanceof jn?t.probability.clone():t.probability),a}function Gd(t,e){return Va((()=>{let n;return n=t.hasOwnProperty("box")?t.box:t,((t,e)=>{const n=Ao(t.startPoint,e),r=Ao(t.endPoint,e),s=Vi([n,r],1);return Wd(s)})(n,e).startEndTensor.squeeze()}))}class Hd{constructor(t,e,n,r,s,a){this.blazeFaceModel=t,this.width=e,this.height=n,this.maxFaces=r,this.anchorsData=function(t,e,n){const r=[];for(let s=0;s<n.strides.length;s++){const a=n.strides[s],i=Math.floor((e+a-1)/a),o=Math.floor((t+a-1)/a),u=n.anchors[s];for(let t=0;t<i;t++){const e=a*(t+.5);for(let t=0;t<o;t++){const n=a*(t+.5);for(let t=0;t<u;t++)r.push([n,e])}}}return r}(e,n,Vd),this.anchors=il(this.anchorsData),this.inputSizeData=[e,n],this.inputSize=Tu([e,n]),this.iouThreshold=s,this.scoreThreshold=a}async getBoundingBoxes(t,e,n=!0){const[r,s,a]=Va((()=>{const e=t.resizeBilinear([this.width,this.height]),n=Ao(Go(e.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),s=function(t,e,n){const r=Pu(t,[0,1],[-1,2]),s=Ya(r,e),a=Pu(t,[0,3],[-1,2]),i=ro(a,n),o=ro(s,n),u=ro(i,2),l=Go(o,u),c=Ya(o,u),h=Ao(l,n),p=Ao(c,n);return Vi([h,p],1)}(r,this.anchors,this.inputSize),a=Pu(r,[0,0],[-1,1]);return[r,s,Po(a).squeeze()]})),i=console.warn;console.warn=()=>{};const o=vc.nonMaxSuppression(s,a,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=i;const u=await o.array();o.dispose();let l=u.map((t=>Pu(s,[t,0],[1,-1])));e||(l=await Promise.all(l.map((async t=>{const e=await t.array();return t.dispose(),e}))));const c=t.shape[1],h=t.shape[2];let p;p=e?ro([h,c],this.inputSize):[h/this.inputSizeData[0],c/this.inputSizeData[1]];const d=[];for(let t=0;t<l.length;t++){const s=l[t],i=Va((()=>{const i=Wd(s instanceof jn?s:il(s));if(!n)return i;const o=u[t];let l;return l=e?this.anchors.slice([o,0],[1,2]):this.anchorsData[o],{box:i,landmarks:Pu(r,[o,5],[1,-1]).squeeze().reshape([6,-1]),probability:Pu(a,[o],[1]),anchor:l}}));d.push(i)}return s.dispose(),a.dispose(),r.dispose(),{boxes:d,scaleFactor:p}}async estimateFaces(t,e=!1,n=!1,r=!0){const[,s]=function(t){return t instanceof jn?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),a=Va((()=>(t instanceof jn||(t=va(t)),t.toFloat().expandDims(0)))),{boxes:i,scaleFactor:o}=await this.getBoundingBoxes(a,e,r);return a.dispose(),e?i.map((t=>{const e=Gd(t,o);let a={topLeft:e.slice([0],[2]),bottomRight:e.slice([2],[2])};if(r){const{landmarks:e,probability:n,anchor:r}=t,s=e.add(r).mul(o);a.landmarks=s,a.probability=n}return n&&(a=Ud(a,s)),a})):Promise.all(i.map((async t=>{const e=Gd(t,o);let a;if(r){const[n,r,s]=await Promise.all([t.landmarks,e,t.probability].map((async t=>t.array()))),i=t.anchor,[u,l]=o,c=n.map((t=>[(t[0]+i[0])*u,(t[1]+i[1])*l]));a={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:c,probability:s},(t=>{t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose()})(t.box),t.landmarks.dispose(),t.probability.dispose()}else{const t=await e.array();a={topLeft:t.slice(0,2),bottomRight:t.slice(2)}}return e.dispose(),n&&(a=Ud(a,s)),a})))}}async function jd({maxFaces:t=10,inputWidth:e=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:s=.75}={}){const a=await Ld("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new Hd(a,e,n,t,r,s)}var qd={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function Kd(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function Xd(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function Yd(t,e){void 0===e&&(e=1.5);var n=Xd(t),r=Kd(t),s=[e*r[0]/2,e*r[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],landmarks:t.landmarks}}var Jd=[[1,0,0],[0,1,0],[0,0,1]];function Zd(t,e){return[[1,0,t],[0,1,e],[0,0,1]]}function Qd(t,e){for(var n=0,r=0;r<t.length;r++)n+=t[r]*e[r];return n}function tf(t,e){for(var n=[],r=0;r<t.length;r++)n.push(t[r][e]);return n}function ef(t,e){for(var n=[],r=t.length,s=0;s<r;s++){n.push([]);for(var a=0;a<r;a++)n[s].push(Qd(t[s],tf(e,a)))}return n}function nf(t,e){var n=Math.cos(t),r=Math.sin(t),s=[[n,-r,0],[r,n,0],[0,0,1]],a=ef(Zd(e[0],e[1]),s);return ef(a,Zd(-e[0],-e[1]))}var rf=[13,qd.midwayBetweenEyes[0]],sf=[3,2],af=qd.leftEyeLower0,of=[af[0],af[af.length-1]],uf=qd.rightEyeLower0,lf=[uf[0],uf[uf.length-1]],cf=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function hf(t,e,n,r){for(var s=0;s<cf.length;s++){var a=cf[s],i=a.key,o=a.indices,u=qd[""+n+i];if(null==r||r.includes(i))for(var l=0;l<o.length;l++){var c=o[l];t[u[l]]=[e[c][0],e[c][1],(e[c][2]+t[u[l]][2])/2]}}}var pf=function(){function t(t,e,n,r,s,a,i){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.irisModel=i,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=s,this.maxFaces=a}return t.prototype.transformRawCoords=function(t,e,n,r){var s,a,i,o,u=this,l=Kd({startPoint:e.startPoint,endPoint:e.endPoint}),c=[l[0]/this.meshWidth,l[1]/this.meshHeight],h=t.map((function(t){return[c[0]*(t[0]-u.meshWidth/2),c[1]*(t[1]-u.meshHeight/2),t[2]]})),p=nf(n,[0,0]),d=h.map((function(t){return function(t,e){return[Qd(t,e[0]),Qd(t,e[1])]}(t,p).concat([t[2]])})),f=(a=[[(s=r)[0][0],s[1][0]],[s[0][1],s[1][1]]],i=[s[0][2],s[1][2]],o=[-Qd(a[0],i),-Qd(a[1],i)],[a[0].concat(o[0]),a[1].concat(o[1]),[0,0,1]]),m=Xd({startPoint:e.startPoint,endPoint:e.endPoint}).concat([1]),g=[Qd(m,f[0]),Qd(m,f[1])];return d.map((function(t){return[t[0]+g[0],t[1]+g[1],t[2]]}))},t.prototype.getLeftToRightEyeDepthDifference=function(t){return t[of[0]][2]-t[lf[0]][2]},t.prototype.getEyeBox=function(t,e,n,r,s){void 0===s&&(s=!1);var a=function(t){var e=Xd(t),n=Kd(t),r=Math.max.apply(Math,n)/2;return{startPoint:[e[0]-r,e[1]-r],endPoint:[e[0]+r,e[1]+r],landmarks:t.landmarks}}(Yd(this.calculateLandmarksBoundingBox([t[n],t[r]]),2.3)),i=Kd(a),o=vc.cropAndResize(e,[[a.startPoint[1]/this.meshHeight,a.startPoint[0]/this.meshWidth,a.endPoint[1]/this.meshHeight,a.endPoint[0]/this.meshWidth]],[0],[64,64]);return s&&(o=vc.flipLeftRight(o)),{box:a,boxSize:i,crop:o}},t.prototype.getEyeCoords=function(t,e,n,r){void 0===r&&(r=!1);for(var s=[],a=0;a<76;a++){var i=t[3*a],o=t[3*a+1],u=t[3*a+2];s.push([(r?1-i/64:i/64)*n[0]+e.startPoint[0],o/64*n[1]+e.startPoint[1],u])}return{rawCoords:s,iris:s.slice(71)}},t.prototype.getAdjustedIrisCoords=function(t,e,n){var r=t[qd[n+"EyeUpper0"][3]][2],s=t[qd[n+"EyeLower0"][4]][2],a=(r+s)/2;return e.map((function(t,e){var n=a;return 2===e?n=r:4===e&&(n=s),[t[0],t[1],n]}))},t.prototype.predict=function(t,e){return Bd(this,void 0,void 0,(function(){var n,r,s,a,i=this;return Pd(this,(function(o){switch(o.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(t,!1,!0)]:[3,2];case 1:return n=o.sent(),r=n.boxes,s=n.scaleFactor,0===r.length?(this.regionsOfInterest=[],[2,null]):(a=r.map((function(t){var e,n,r={startPoint:t.box.startPoint.squeeze().arraySync(),endPoint:t.box.endPoint.squeeze().arraySync()},a=Yd((n=s,{startPoint:[(e=r).startPoint[0]*n[0],e.startPoint[1]*n[1]],endPoint:[e.endPoint[0]*n[0],e.endPoint[1]*n[1]]}));return zd({},a,{landmarks:t.landmarks.arraySync()})})),r.forEach((function(t){null!=t&&null!=t.startPoint&&(t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose())})),this.updateRegionsOfInterest(a),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,o.label=3;case 3:return[2,Va((function(){return i.regionsOfInterest.map((function(n,r){var s,a=n.landmarks.length>=468,o=rf[0],u=rf[1];!1===a&&(o=sf[0],u=sf[1]),s=function(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(n.landmarks[o],n.landmarks[u]);var l=Xd({startPoint:n.startPoint,endPoint:n.endPoint}),c=[l[0]/t.shape[2],l[1]/t.shape[1]],h=t,p=Jd;0!==s&&(h=vc.rotateWithOffset(t,s,0,c),p=nf(-s,l));var d=function(t,e,n){var r=e.shape[1],s=e.shape[2],a=[[t.startPoint[1]/r,t.startPoint[0]/s,t.endPoint[1]/r,t.endPoint[0]/s]];return vc.cropAndResize(e,a,[0],n)}({startPoint:n.startPoint,endPoint:n.endPoint},h,[i.meshHeight,i.meshWidth]).div(255),f=i.meshDetector.predict(d),m=f[1],g=f[2],y=ga(g,[-1,3]).arraySync();if(e){var b=i.getEyeBox(y,d,of[0],of[1],!0),x=b.box,w=b.boxSize,v=b.crop,k=i.getEyeBox(y,d,lf[0],lf[1]),N=k.box,I=k.boxSize,$=k.crop,C=i.irisModel.predict(Pi([v,$])).dataSync(),S=C.slice(0,228),T=i.getEyeCoords(S,x,w,!0),E=T.rawCoords,A=T.iris,R=C.slice(228),D=i.getEyeCoords(R,N,I),_=D.rawCoords,F=D.iris,O=i.getLeftToRightEyeDepthDifference(y);Math.abs(O)<30?(hf(y,E,"left"),hf(y,_,"right")):O<1?hf(y,E,"left",["EyeUpper0","EyeLower0"]):hf(y,_,"right",["EyeUpper0","EyeLower0"]);var M=i.getAdjustedIrisCoords(y,A,"left"),L=i.getAdjustedIrisCoords(y,F,"right");y=y.concat(M).concat(L)}var z=i.transformRawCoords(y,n,s,p),B=il(z),P=Yd(i.calculateLandmarksBoundingBox(z));return i.regionsOfInterest[r]=zd({},P,{landmarks:B.arraySync()}),{coords:il(y,[y.length,3]),scaledCoords:B,box:P,flag:m.squeeze()}}))}))]}}))}))},t.prototype.updateRegionsOfInterest=function(t){for(var e=0;e<t.length;e++){var n=t[e],r=this.regionsOfInterest[e],s=0;if(r&&r.startPoint){var a=n.startPoint,i=a[0],o=a[1],u=n.endPoint,l=u[0],c=u[1],h=r.startPoint,p=h[0],d=h[1],f=r.endPoint,m=f[0],g=f[1],y=Math.max(i,p),b=Math.max(o,d),x=(Math.min(l,m)-y)*(Math.min(c,g)-b);s=x/((l-i)*(c-o)+(m-p)*(g-o)-x)}s<.25&&(this.regionsOfInterest[e]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,t.length)},t.prototype.clearRegionOfInterest=function(t){null!=this.regionsOfInterest[t]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,t).concat(this.regionsOfInterest.slice(t+1)))},t.prototype.shouldUpdateRegionsOfInterest=function(){var t=this.regionsOfInterest.length,e=0===t;return 1===this.maxFaces||e?e:t!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]}));return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]}},t}(),df=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function ff(t){return Bd(this,void 0,void 0,(function(){var e,n,r,s,a,i,o,u,l,c,h,p,d,f,m;return Pd(this,(function(g){switch(g.label){case 0:return e=t.maxContinuousChecks,n=void 0===e?5:e,r=t.detectionConfidence,s=void 0===r?.9:r,a=t.maxFaces,i=void 0===a?10:a,o=t.iouThreshold,u=void 0===o?.3:o,l=t.scoreThreshold,c=void 0===l?.75:l,h=t.shouldLoadIrisModel,p=void 0===h||h,d=t.modelUrl,f=t.irisModelUrl,p?[4,Promise.all([mf(i,u,c),gf(d),yf(f)])]:[3,2];case 1:return m=g.sent(),[3,4];case 2:return[4,Promise.all([mf(i,u,c),gf(d)])];case 3:m=g.sent(),g.label=4;case 4:return[2,new wf(m[0],m[1],n,s,i,p?m[2]:null)]}}))}))}function mf(t,e,n){return Bd(this,void 0,void 0,(function(){return Pd(this,(function(r){return[2,jd({maxFaces:t,iouThreshold:e,scoreThreshold:n})]}))}))}function gf(t){return Bd(this,void 0,void 0,(function(){return Pd(this,(function(e){return null!=t?[2,Ld(t)]:[2,Ld("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function yf(t){return Bd(this,void 0,void 0,(function(){return Pd(this,(function(e){return null!=t?[2,Ld(t)]:[2,Ld("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]}))}))}function bf(t,e){if(t.mesh instanceof jn){var n=Va((function(){var n=Tu([e-1,0,0]),r=Tu([1,-1,1]);return Va((function(){return[Pi([Go(e-1,t.boundingBox.topLeft.slice(0,1)),t.boundingBox.topLeft.slice(1,1)]),Pi([Go(e-1,t.boundingBox.bottomRight.slice(0,1)),t.boundingBox.bottomRight.slice(1,1)]),Go(n,t.mesh).mul(r),Go(n,t.scaledMesh).mul(r)]}))})),r=n[0],s=n[1],a=n[2],i=n[3];return Object.assign({},t,{boundingBox:{topLeft:r,bottomRight:s},mesh:a,scaledMesh:i})}return Object.assign({},t,{boundingBox:{topLeft:[e-1-t.boundingBox.topLeft[0],t.boundingBox.topLeft[1]],bottomRight:[e-1-t.boundingBox.bottomRight[0],t.boundingBox.bottomRight[1]]},mesh:t.mesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n})),scaledMesh:t.scaledMesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n}))})}var xf,wf=function(){function t(t,e,n,r,s,a){this.kind="MediaPipeFaceMesh",this.pipeline=new pf(t,e,192,192,n,s,a),this.detectionConfidence=r}return t.getAnnotations=function(){return qd},t.getUVCoords=function(){return df},t.prototype.estimateFaces=function(t){return Bd(this,void 0,void 0,(function(){var e,n,r,s,a,i,o,u,l,c,h,p,d=this;return Pd(this,(function(f){switch(f.label){case 0:if(e=t.returnTensors,n=void 0!==e&&e,r=t.flipHorizontal,s=void 0!==r&&r,a=t.predictIrises,i=void 0===a||a,o=t.input,i&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return u=function(t){return t instanceof jn?[t.shape[0],t.shape[1]]:[t.height,t.width]}(o),l=u[1],c=Va((function(){return o instanceof jn||(o=va(o)),o.toFloat().expandDims(0)})),"webgl"!==fr.backendName?[3,2]:(p=G().get("WEBGL_PACK_DEPTHWISECONV"),G().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(c,i)]);case 1:return h=f.sent(),G().set("WEBGL_PACK_DEPTHWISECONV",p),[3,4];case 2:return[4,this.pipeline.predict(c,i)];case 3:h=f.sent(),f.label=4;case 4:return c.dispose(),null!=h&&h.length>0?[2,Promise.all(h.map((function(t,e){return Bd(d,void 0,void 0,(function(){var r,a,o,u,c,h,p,d,f,m,g,y,b,x,w=this;return Pd(this,(function(v){switch(v.label){case 0:return r=t.coords,a=t.scaledCoords,o=t.box,u=t.flag,c=[u],n||(c=c.concat([r,a])),[4,Promise.all(c.map((function(t){return Bd(w,void 0,void 0,(function(){return Pd(this,(function(e){return[2,t.array()]}))}))})))];case 1:if(h=v.sent(),p=h[0],u.dispose(),p<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(e),n)return d={kind:"MediaPipePredictionTensors",faceInViewConfidence:p,mesh:r,scaledMesh:a,boundingBox:{topLeft:Tu(o.startPoint),bottomRight:Tu(o.endPoint)}},s?[2,bf(d,l)]:[2,d];for(x in f=h.slice(1),m=f[0],g=f[1],a.dispose(),r.dispose(),y={kind:"MediaPipePredictionValues",faceInViewConfidence:p,boundingBox:{topLeft:o.startPoint,bottomRight:o.endPoint},mesh:m,scaledMesh:g},s&&(y=bf(y,l)),b={},qd)(i||!1===x.includes("Iris"))&&(b[x]=qd[x].map((function(t){return y.scaledMesh[t]})));return y.annotations=b,[2,y]}}))}))})))]:[2,[]]}}))}))},t}();function vf(t,e){return void 0===t&&(t=xf.mediapipeFacemesh),void 0===e&&(e={}),Bd(this,void 0,void 0,(function(){return Pd(this,(function(n){if(t===xf.mediapipeFacemesh)return[2,ff(e)];throw new Error(t+" is not a valid package name.")}))}))}let kf;function Nf(){return null==kf&&(kf=fr.backend.epsilon()),kf}(xf||(xf={})).mediapipeFacemesh="mediapipe-facemesh",e(r,"load",(function(){return vf})),e(r,"SupportedPackages",(function(){return xf}));class If extends Error{constructor(t){super(t),Object.setPrototypeOf(this,If.prototype)}}class $f extends Error{constructor(t){super(t),Object.setPrototypeOf(this,$f.prototype)}}class Cf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Cf.prototype)}}class Sf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Sf.prototype)}}class Tf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Tf.prototype)}}function Ef(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Af(t,e){if(!t)throw new Tf(e)}function Rf(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Df(t){return 1===t.length?t[0]:t}function _f(t){return Array.isArray(t)?t:[t]}function Ff(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Of(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let Mf={};function Lf(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function zf(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>zf(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?zf(e):t[n]=e.value)}}}function Bf(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in Mf)a=Mf[s];else if(a=e[s],null==a)throw new Cf(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new Cf(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in Mf?[o,u]=Mf.className:i in e&&([o,u]=e[i]),null==o)throw new Cf(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const e of Object.keys(Mf))t[e]=Mf[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},Mf);for(const t of Object.keys(n))Mf[t]=n[t];zf(a.config);const r=u(o,a.config,n,s);return Mf=Object.assign({},e),r}{const t=Object.assign({},Mf);for(const t of Object.keys(n))Mf[t]=n[t];const e=new o(a.config);return Mf=Object.assign({},t),e}}}function Pf(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Wf(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Vf(t){if(null==t)throw new Cf(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Uf(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Cf(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Gf(t,e,n=0,r=1/0){return Af(n>=0),Af(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function Hf(t,e){Array.isArray(t)?(c(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>Hf(t,`element ${n+1} of ${e}`)))):c(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${jf(t)}.`))}function jf(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>jf(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function qf(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Kf(t,e){return Va((()=>Zu(Ho(Ao(t,t),e,!0))))}class Xf extends Ma{getConfig(){return{}}}class Yf extends Xf{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Va((()=>{const e=Kf(t,this.axis),n=Li(e,0,this.maxValue);return Ao(t,ro(n,Ya(Nf(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Yf.className="MaxNorm",za(Yf);class Jf extends Xf{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Va((()=>ro(t,Ya(Nf(),Kf(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Jf.className="UnitNorm",za(Jf);class Zf extends Xf{apply(t){return Ru(t)}}Zf.className="NonNeg",za(Zf);class Qf extends Xf{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Va((()=>{const e=Kf(t,this.axis),n=Ya(Ao(this.rate,Li(e,this.minValue,this.maxValue)),Ao(1-this.rate,e));return Ao(t,ro(n,Ya(Nf(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Qf.className="MinMaxNorm",za(Qf);const tm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function em(t){return Lf(t)}function nm(t,e={}){return Bf(t,La.getMap().classNameMap,e,"constraint")}function rm(t){return null==t?null:"string"==typeof t?nm({className:t in tm?tm[t]:t,config:{}}):t instanceof Xf?t:nm(t)}const sm=["channelsFirst","channelsLast"],am=["valid","same","causal"],im=["max","avg"],om=["sum","mul","concat","ave"],um=new Map;function lm(t){Uf(sm,"DataFormat",t)}function cm(t){Uf(am,"PaddingMode",t)}function hm(t){Uf(im,"PoolMode",t)}const pm=[];function dm(t,e){pm.push(t);try{const t=e();return pm.pop(),t}catch(t){throw pm.pop(),t}}function fm(t){if(!ym(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===pm.length?"":pm.join("/")+"/")+t}function mm(t){if(!ym(t))throw new Error("Not a valid tensor name: '"+t+"'");um.has(t)||um.set(t,0);const e=um.get(t);if(um.set(t,um.get(t)+1),e>0){const n=`${t}_${e}`;return um.set(n,1),n}return t}const gm=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ym(t){return!!t.match(gm)}function bm(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function xm(t){return Tu(t=Array.isArray(t)?new Float32Array(t):t)}function wm(t){return nu(xm(t)).dataSync()[0]}function vm(t){return Uo(xm(t)).dataSync()[0]}function km(t,e){if(e<t)throw new Cf(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Nm(t,e){return t.asType(e)}function Im(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function $m(t,e,n){return Va((()=>{switch(t.rank){case 1:return Wu(t,e,n);case 2:return Vu(t,[e,0],[n,t.shape[1]]);case 3:return Uu(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Gu(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Pu(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Pu(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Cf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Cm(t,e,n){return Va((()=>{switch(t.rank){case 1:return Wu(t,e,n);case 2:return Vu(t,[0,e],[t.shape[0],n]);case 3:return Uu(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Gu(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Cf(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Sm(t,e,n,r){return Va((()=>{switch(t.rank){case 1:return Wu(t,e,n);case 2:switch(r){case 1:return $m(t,e,n);case 2:return Cm(t,e,n);default:throw new Cf(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return $m(t,e,n);case 2:return Uu(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Cm(t,e,n);default:throw new Cf(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return $m(t,e,n);case 2:return Gu(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Gu(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Cm(t,e,n);default:throw new Cf(`The axis is not within the rank of the tensor ${r}`)}default:throw new Cf(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Tm(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Pi(t,e)}function Em(t,e){switch(t.rank){case 1:return Wi([t,e]);case 2:return Vi([t,e],0);case 3:return Ui([t,e],0);case 4:return Gi([t,e],0);default:throw new Cf(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Am(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Cf(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return yo(t,e)}function Rm(t,e=0,n=1,r,s){return Cu(t,e,n,r,s)}function Dm(t,e,n,r){if(t.rank<2||e.rank<2)throw new Sf(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Sf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Hl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Om(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),a=s.pop();t=t.reshape([-1,a]);const i=e.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([u,-1]);const h=[...s,...l];return Hl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Om(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function _m(t,e,n){return Va((()=>(e=Array.isArray(e)?Tu(e,"int32"):e.toInt(),ko(t,e,n))))}function Fm(t){return Ao(t,t)}function Om(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Cf(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new Cf(`Unsupported input rank by biasAdd: ${e.rank}`)}function Mm(t,e,n){return Va((()=>(null==n&&(n="channelsLast"),lm(n),t.add(Om(t.rank,e,n)))))}function Lm(t,e,n,r){return Va((()=>Fl(t,e,n,r)))}function zm(t,e,n=!1){return n?t():e()}const Bm=["fanIn","fanOut","fanAvg"],Pm=["normal","uniform","truncatedNormal"];class Wm extends Ma{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Vm extends Wm{apply(t,e){return Qo(t,e)}}Vm.className="Zeros",za(Vm);class Um extends Wm{apply(t,e){return tu(t,e)}}Um.className="Ones",za(Um);class Gm extends Wm{constructor(t){if(super(),"object"!=typeof t)throw new Cf(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Cf(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Va((()=>Ao(Ro(this.value),tu(t,e))))}getConfig(){return{value:this.value}}}Gm.className="Constant",za(Gm);class Hm extends Wm{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Su(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Hm.className="RandomUniform",za(Hm);class jm extends Wm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Sf(`randomNormal does not support dType ${e}.`);return Rm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}jm.className="RandomNormal",za(jm);class qm extends Wm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Sf(`truncatedNormal does not support dType ${e}.`);return ll(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}qm.className="TruncatedNormal",za(qm);class Km extends Wm{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Va((()=>{if(2!==t.length||t[0]!==t[1])throw new Cf("Identity matrix initializer can only be used for 2D square matrices.");return Ao(this.gain,bo(t[0]))}))}getConfig(){return{gain:this.gain}}}Km.className="Identity",za(Km);class Xm extends Wm{constructor(t){if(super(),t.scale<0)throw new Cf(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Uf(Bm,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Uf(Pm,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(lm(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=bm(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=bm(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=bm(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Sf(`${this.getClassName()} does not support dType ${e}.`);return ll(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return Su(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Xm.className="VarianceScaling",za(Xm);class Ym extends Xm{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Xm.className}}Ym.className="GlorotUniform",za(Ym);class Jm extends Xm{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Xm.className}}Jm.className="GlorotNormal",za(Jm);class Zm extends Xm{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Xm.className}}Zm.className="HeNormal",za(Zm);class Qm extends Xm{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Xm.className}}Qm.className="HeUniform",za(Qm);class tg extends Xm{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Xm.className}}tg.className="LeCunNormal",za(tg);class eg extends Xm{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Xm.className}}eg.className="LeCunNormal",za(eg);class ng extends Wm{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Sf("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Va((()=>{if(t.length<2)throw new Sf("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Rm(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=kc.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Ao(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}ng.className="Orthogonal",za(ng);const rg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function sg(t,e={}){return Bf(t,La.getMap().classNameMap,e,"initializer")}function ag(t){return Lf(t)}function ig(t){if("string"==typeof t){const e=t in rg?rg[t]:t;if("GlorotNormal"===e)return new Jm;if("GlorotUniform"===e)return new Ym;if("HeNormal"===e)return new Zm;if("HeUniform"===e)return new Qm;if("LeCunNormal"===e)return new tg;if("LeCunUniform"===e)return new eg;{const t={};return t.className=e,t.config={},sg(t)}}return t instanceof Wm?t:sg(t)}let og=0;function ug(){return og++}const lg={};function cg(t=""){return t in lg||(lg[t]=0),lg[t]+=1,t+lg[t].toString()}function hg(t){return Array.isArray(t)&&Array.isArray(t[0])}function pg(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function dg(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Cf(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function fg(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Cf(`Expected exactly 1 Shape; got ${t.length}`)}return t}function mg(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class gg{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=ug(),n=null==n?"Variable":n,this.originalName=fm(n),this.name=mm(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return fr.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function yg(t){return t.map((t=>t.read()))}function bg(t){t.forEach((t=>{t[0].write(t[1])}))}class xg{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class wg{constructor(t,e,n,r,s,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=ug(),null!=a&&(this.originalName=fm(a),this.name=mm(this.originalName)),this.rank=e.length}}let vg=0;class kg{constructor(t,e){this.callArgs=e,this.id=vg++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ng=0;class Ig extends Ma{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ng++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Ff(t)+"_"+cg(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new $f(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Cf(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Df(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Df(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new If(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new If(`Layer ${this.name} is not connected, no input to return.`);return Df(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new If(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new If(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Df(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=_f(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=_f(this.inputSpec);if(t.length!==e.length)throw new Cf(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Cf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Cf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Cf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Cf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Cf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new Cf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=_f(t);let r=!0;for(const t of n)if(!(t instanceof wg)){r=!1;break}let s=!0;for(const t of n)if(t instanceof wg){s=!1;break}if(r===s)throw new Cf("Arguments to apply() must be all SymbolicTensors or all Tensors");return dm(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of _f(t))e.push(n.shape);this.build(Df(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=_f(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=Df(a),null!=this.activityRegularizer)throw new Sf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=_f(t);const e=[];for(const n of t)e.push(n.shape);return Df(e)}(t),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new wg(a,n,this,_f(t),e,this.name,r))):new wg(a,r,this,_f(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Sf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new If(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new If(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new $f(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return mg(this.weights)}build(t){this.built=!0}getWeights(t=!1){return yg(t?this.trainableWeights:this.weights)}setWeights(t){Va((()=>{const e=this.weights;if(e.length!==t.length)throw new Cf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=yg(e);for(let s=0;s<r.length;++s){const a=r[s],i=e[s],o=t[s];if(!m(a.shape,o.shape))throw new Cf(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}bg(n)}))}addWeight(t,e,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new Cf(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=ig("zeros"));const o=r.apply(e,n),u=new gg(o,n,t,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=_f(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,a,i=null){const o=_f(t);e=_f(e),n=_f(n),r=_f(r),s=pg(s),a=pg(a);const u=[],l=[],c=[];for(const t of o)u.push(t.sourceLayer),l.push(t.nodeIndex),c.push(t.tensorIndex);new kg({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function $g(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=$g(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class Cg extends Ig{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:cg("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Cf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Cf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Cf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new wg(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new kg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Cf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Sg(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Ua(r)}}function Tg(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var Eg,Ag;Cg.className="InputLayer",za(Cg),(Ag=Eg||(Eg={}))[Ag.SILENT=0]="SILENT",Ag[Ag.VERBOSE=1]="VERBOSE";class Rg{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Dg{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class _g extends Rg{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=Va((()=>Ya(this.totals[t],Ao(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Va((()=>{const n=Ao(ro(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Ga(e[t])})))}}class Fg extends Rg{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];t.push(i.data()),e.push(r),n.push(a)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class Og extends Rg{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");E(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=Rn();return(...s)=>{const a=Rn();return a-r<e||(r=a,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await Sg(n),r.push(this.yield(t,e,n))),r.push(Fc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Sg(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Sg(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Fc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Sg(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Sg(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Fc()):E(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Sg(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Sg(t),await this.trainEnd(t))}}function Mg(t,e){return null==t&&(t={}),t instanceof Rg?[t]:Array.isArray(t)&&t[0]instanceof Rg?t:_f(t).map((t=>new Og(t,e)))}class Lg{constructor(){}static registerCallbackConstructor(t,e){c(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Lg.checkForDuplicate(e),null==Lg.constructors[t]&&(Lg.constructors[t]=[]),Lg.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Lg.constructors)Lg.constructors[+e].forEach((e=>{if(e===t)throw new Cf("Duplicate callback constructor.")}))}static clear(){Lg.constructors={}}static createCallbacks(t){const e=[];for(const n in Lg.constructors){const r=+n;t>=r&&e.push(...Lg.constructors[r])}return e.map((t=>new t))}}function zg(t,e,n,r,s,a,i,o,u){const l=new Fg,c=[new _g,...Lg.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new Dg(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Bg(t,e={},n=!1){return Bf(t,La.getMap().classNameMap,e,"layer",n)}function Pg(t,e){return Va((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Ho(Fm(t),e,!0),r=xo(n.shape,Nf()),s=Zu(Eo(n,r));return ro(t,s)}))}function Wg(t,e){return Va((()=>eu(Fm(Go(e,t)),-1)))}function Vg(t,e){return Va((()=>eu(qa(Go(e,t)),-1)))}function Ug(t,e){return Va((()=>{const n=Go(t,e),r=Li(qa(t),Nf(),Number.MAX_VALUE),s=qa(ro(n,r));return Ao(100,eu(s,-1))}))}function Gg(t,e,n=!1){return Va((()=>{if(n)e=Hu(e);else{const t=Ho(e,e.shape.length-1,!0);e=ro(e,t)}return e=Li(e,Nf(),1-Nf()),Bo(Ho(Ao(t.toFloat(),Lo(e)),e.shape.length-1))}))}function Hg(t,e,n=!1){return Va((()=>{const r=wo(function(t){const e=[bm(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=Li(e,Nf(),1-Nf())).shape;return Gg(ba(r,s[s.length-1]).reshape(s),e,n)}))}function jg(t,e){return Va((()=>{let n;return n=Li(e,Nf(),1-Nf()),n=Lo(ro(n,Go(1,n))),eu(function(t,e){if(!m(t.shape,e.shape))throw new Cf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Va((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function qg(t,e){return Va((()=>{const n=Pg(t,-1),r=Pg(e,-1),s=Ao(n,r);return Bo(Ho(s,-1))}))}Lg.constructors={};const Kg={meanSquaredError:Wg,meanAbsoluteError:Vg,meanAbsolutePercentageError:Ug,meanSquaredLogarithmicError:function(t,e){return Va((()=>{const n=Li(e,Nf(),Number.MAX_VALUE),r=Lo(Ya(1,n)),s=Li(t,Nf(),Number.MAX_VALUE),a=Lo(Ya(1,s));return eu(Fm(Go(r,a)),-1)}))},squaredHinge:function(t,e){return Va((()=>{const n=Eo(0,Go(1,Ao(t,e)));return eu(Fm(n),-1)}))},hinge:function(t,e){return Va((()=>{const n=Eo(0,Go(1,Ao(t,e)));return eu(n,-1)}))},categoricalHinge:function(t,e){return Va((()=>{const n=Ho(Ao(t,e),-1),r=Uo(Ao(Go(1,t),e),-1);return Eo(0,Ya(1,Go(r,n)))}))},logcosh:function(t,e){return Va((()=>{const n=Math.log(2),r=Go(e,t),s=Go(Ya(r,Wo(Ao(-2,r))),n);return eu(s,-1)}))},categoricalCrossentropy:Gg,sparseCategoricalCrossentropy:Hg,binaryCrossentropy:jg,kullbackLeiblerDivergence:function(t,e){return Va((()=>{const n=Li(t,Nf(),1),r=Li(e,Nf(),1);return Ho(Ao(t,Lo(ro(n,r))),-1)}))},poisson:function(t,e){return Va((()=>{const n=Lo(Ya(Nf(),e));return eu(Go(e,Ao(t,n)),-1)}))},cosineProximity:qg};function Xg(t){if("string"==typeof t){if(t in Kg)return Kg[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Cf(e)}return t}function Yg(t,e){return Va((()=>{const n=Ao(.5,hu(e)),r=Nm(No(e,n),t.dtype);return eu(oo(t,r),-1)}))}function Jg(t,e){return Va((()=>Nm(oo(oi(t,-1),oi(e,-1)),"float32")))}function Zg(t,e){return jg(t,e)}function Qg(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),oo(t,e).asType("float32")}const ty=Gg,ey=Hg,ny={binaryAccuracy:Yg,categoricalAccuracy:Jg,precision:function(t,e){return Va((()=>{const n=function(t,e){return Va((()=>qo(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),r=function(t,e){return Va((()=>qo(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return uo(No(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:ty,sparseCategoricalCrossentropy:ey,mse:Wg,MSE:Wg,mae:Vg,MAE:Vg,mape:Ug,MAPE:Ug,cosine:qg};function ry(t){if("string"==typeof t&&t in ny)return ny[t];if("string"!=typeof t&&null!=t)return t;throw new Cf(`Unknown metric ${t}`)}function sy(t){if(Af(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Kg))if(Kg[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(ny))if(ny[n]===t){e=n;break}return void 0!==e?e:t.name}}function ay(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!iy(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function iy(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!iy(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!iy(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function oy(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function uy(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}oy([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function ly(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const i=t.name,o=t.getClassName(),u=0===a.length?"":a[0];oy([`${i} (${o})`,s,t.countParams().toString(),u],e,r);for(let t=1;t<a.length;++t)oy(["","","",a[t]],e,r)}function cy(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function hy(t,e){if(null===t)return null;if("string"==typeof t)return Of(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];cy(e,s,r)?n.push(r):n.push(hy(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Of(n);e[t]=hy(r,t)}}return e}}function py(t,e){if(null==t)return null;if("string"==typeof t)return Ff(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];cy(e,s,r)?n.push(r):n.push(py(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[Ff(n)]="name"!==n&&"className"!==n||"string"!=typeof r?py(r,n):r}return e}}class dy{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof dy)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Cf(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return ia(e,t.dtype)}catch(n){throw new Cf(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof wg){if(null==this.id2Value[t.id])throw new Cf(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Cf(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof wg){if(null==this.id2Value[t.id])throw new Cf(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Cf(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Ua(this.id2Mask)}}const fy={},my={};function gy(t,e,n,r){const s=null!=n&&n.training,a=Array.isArray(t),i=a?t:[t],o=i.map((t=>t.name)),u=[],l=e.names();for(const t of o)-1!==l.indexOf(t)?u.push(e.getValue(t)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=o.join(",")+"|"+e.names().join(",");let p,d;if(null==fy[h]){const t=function(t,e){c(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=by(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:i}=by(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:yy(r)}}(i,e);p=t.sorted,d=t.recipientCounts,fy[h]=p,my[h]=d}p=fy[h],d={},s||Object.assign(d,my[h]);const f=new dy(e);for(let t=0;t<p.length;++t){if(null!=r){const t=Wa().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const a=p[t],i=a.sourceLayer;if(i instanceof Cg)continue;const l=[],c=[],h=[];let m=!1;for(const t of a.inputs){const n=f.getValue(t),r=f.getMask(t);l.push(n),c.push(r),null!=r&&(m=!0),s||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||h.push(n))}m&&((n=n||{}).mask=c[0]);const g=_f(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=xy(a),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}s||Ua(h)}return f.disposeMasks(),a?u:u[0]}function yy(t){const e={};for(const n in t)e[n]=t[n].size;return e}function by(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function xy(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class wy extends Ig{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=cg(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Wf(this.inputs).length!==this.inputs.length)throw new Cf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);Wf(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;Af(0===n,"input layer has >1 nodes"),Af(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Cg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},a={},i=[],o=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new $f(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(l))return;this.containerNodes.add(wy.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let t=0;t<c;t++){const r=l.inputTensors[t],s=l.inboundLayers[t],a=l.nodeIndices[t],i=l.tensorIndices[t];o(r,e,n,s,a,i)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const t of this.outputs)o(t,u,l);const c=i.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];a=Math.max(a,i),r[t.outboundLayer.id]=a,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],o=s.inboundNodes[i],u=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const p={};for(const t in r){const e=r[t];e in p||(p[e]=[]),p[e].push(s[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(Pf);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof wy&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(Pf);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new $f(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new $f(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new kg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Cf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Cf(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[r]]);else if(e)throw new Cf(`Provided weight data has no target variable: ${r}`);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Cf(`${t.length} of ${r} weights are not set: ${t}`)}bg(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.7.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=py(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Va((()=>{t=_f(t);const n=new dy;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return gy(this.outputs,n,e)}))}computeMask(t,e){return Va((()=>{let n;return t=_f(t),n=null==e?Ef(null,t.length):_f(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=pg(t);if(e.length!==this.inputLayers.length)throw new Cf(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Pf);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=pg(e.computeOutputShape(Df(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${a}_${t}`]=s[t]}}const s=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;a.push(s)}for(let t=0;t<a.length;t++){const e=a[t];Af(e in n),s.push(n[e])}return Df(s)}runInternalGraph(t,e){null==e&&(e=Ef(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=t[r],i=e[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Pf);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===a.length){const[t,n]=a[0];null==l.mask&&(l.mask=n),o=_f(e.call(t,l)),u=_f(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((t=>t[0])),i=a.map((t=>t[1])),null==l.mask&&(l.mask=i),o=_f(e.call(r,l)),u=_f(e.computeMask(r,i));if(e.activityRegularizer)throw new Sf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],a=u[t];n[e.id]=[r,a]}}}}const s=[],a=[],i=[];for(const t of this.outputs){Af(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];i.push(e.shape),s.push(e),a.push(r)}return[s,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof wy?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=wy.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Cf(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Cf("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Cf(`No such layer: ${t}`)}calculateLosses(){return Va((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=wy.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=wy.nodeKey(t,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=e[wy.nodeKey(s,a)];null==u&&(u=0),t.push([s.name,u,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],a=wy.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,i,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],a=wy.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,i,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let r;for(const a of e){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(t,e);const c=s[o];if(c.inboundNodes.length<=u)return void i(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(Df(n),r)}function u(t){const n=t.name,a=Bg(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Cf(`Corrupted configuration, expected array for nodeData: ${t}`);i(a,t)}))}const l=e.name,c=e.layers;for(const t of c)u(t);for(;!Vf(a);)for(const t of c){const e=s[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const h=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],r=t[2];Af(e in s);const a=s[e].inboundNodes[n].outputTensors;h.push(a[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];Af(e in s);const a=s[e].inboundNodes[n].outputTensors;p.push(a[r])}return new t({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Cf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Va((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function vy(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function ky(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Va((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Ua(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),Tu(s,"float32")}return null}function Ny(t,e){return Ao(t,e)}function Iy(t,e){let n,r;const s=e;n=s.xs,r=s.ys,c(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const a=$y("input",t.inputNames,n),i=$y("output",t.outputNames,r),o=a[0].shape[0];c(a.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),c(i.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<a.length;e++)c(a[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<i.length;e++)c(i[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:a,ys:i}}function $y(t,e,n){if(n instanceof jn)return[n];if(Array.isArray(n))return c(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new Cf(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function Cy(t){return"function"==typeof t.iterator}function Sy(t){c(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Ty(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>$m(t,e,n-e))):$m(t,e,n-e)}function Ey(t,e){return Va((()=>null==t?null:Array.isArray(t)?t.map((t=>Ey(t,e))):_m(t,"int32"===e.dtype?e:e.toInt())))}function Ay(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function Ry(t){const e=[];t instanceof jn&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Im(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Dy(t,e){if(null==t)return;const n=[];if(e instanceof jn)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof jn)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function _y(t){return Array.isArray(t)}function Fy(t){return!function(t){return t instanceof jn}(t)&&!_y(t)}function Oy(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(_y(t)&&t.length>0)e=!0;else if(Fy(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Cf(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let a;if(Fy(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new Cf(`No data provided for "${n}". Need data for each key in: ${e}`);a.push(t[n])}}else if(_y(t)){if((t=t).length!==e.length)throw new Cf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);a=t}else{if(t=t,e.length>1)throw new Cf(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);a=[t]}if(a=Ry(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new Cf(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u>=0&&o!==u)throw new Cf(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function My(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new Cf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new Cf(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new Cf(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u!==o)throw new Cf(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Ly extends wy{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Cf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),oy(a,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?uy(o[t],n,r):ly(o[t],n,i,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;return e=null!=t.collectedTrainableWeights?mg(t.collectedTrainableWeights):mg(t.trainableWeights),e}(t),l=mg(t.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Dc.adagrad(.01),Adadelta:()=>Dc.adadelta(1,.95,Nf()),Adam:()=>Dc.adam(.001,.9,.999,Nf()),Adamax:()=>Dc.adamax(.002,.9,.999,Nf(),0),RMSProp:()=>Dc.rmsprop(.001,.9,0,Nf()),SGD:()=>Dc.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Cf(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Nc))throw new Cf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Cf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Xg(t)))}else{const n=Xg(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Cf(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Xg(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],dm("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};dm("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===jg?-1!==["accuracy","acc"].indexOf(i)?r=Yg:-1!==["crossentropy","ce"].indexOf(i)&&(r=Zg):this.lossFunctions[t]===Hg?-1!==["accuracy","acc"].indexOf(i)?r=Qg:-1!==["crossentropy","ce"].indexOf(i)&&(r=ey):-1!==["accuracy","acc"].indexOf(i)?r=Jg:-1!==["crossentropy","ce"].indexOf(i)&&(r=ty),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const t=ry(i);a=t,n=""+sy(i)}let e;dm(n,(()=>{e=a})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Sy(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return Df(this.testLoop(i,a,r,n.verbose,n.steps))}finally{Dy(s[0],t),Dy(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let a=[];if(n.verbose>0)throw new Sf("Verbose mode is not implemented yet.");c(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof e.next?e:await e.iterator();let o=0,u=0;for(;!r||u<n.batches;){const e=await i.next();if(a=Va((()=>{if(e.value){const{xs:n,ys:r}=Iy(t,e.value),i=n.concat(r),l=Va((()=>s(i)));if(Ua(i),0===u)for(let t=0;t<l.length;++t)a.push(Ro(0));const c=i[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=a[t];a[t]=Va((()=>Ya(a[t],Ao(c,e)))),u>0&&Ua(n)}Ua(l),o+=c,++u}return a})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=ro(a[t],o),Ua(e)}return Df(a)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Cf(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Cf(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Cf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),a=new dy;if(t instanceof jn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Cf(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Cf(`No value is provided for the model's input ${e.name}`);a.add(e,n)}const i=gy(s,a);return n?i:i[0]}retrieveSymbolicTensors(t){const e=Ef(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((t=>t.name));for(let r=0;r<t.length;++r){const i=a.indexOf(t[r]);if(-1!==i&&(e[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new Cf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Va((()=>{const r=this.checkNumSamples(t);if(n)throw new Sf("Verbose predictLoop() is not implemented yet.");const s=Ay(r,e),a=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)Va((()=>{const n=s[e][0],r=s[e][1],a=Ty(t,n,r),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new dy(i);return gy(this.outputs,o)})).forEach(((t,e)=>a[e].push(t)));return Df(a.map((t=>Pi(t,0))))}))}predict(t,e={}){const n=Ry(t);My(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Sy(r),this.predictLoop(n,r)}finally{Dy(n,t)}}predictOnBatch(t){My(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new $f("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Hg?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=Wf(t.map((t=>t.shape[0])));r.sort();const s=Wf(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new Cf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new Cf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!m(r,s))throw new Cf(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=Oy(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Oy(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Wg,jg,Gg];for(let s=0;s<t.length;++s){const a=t[s],i=e[s],o=n[s];if(null!=i){if(i===Gg&&1===a.shape[a.shape.length-1])throw new Cf(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Cf(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Cf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=vy(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await ky(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,s){return Va((()=>{const a=this.checkNumSamples(e,n,s,"steps"),i=[];if(r>0)throw new Sf("Verbose mode is not implemented yet.");if(null!=s)throw new Sf("steps mode in testLoop() is not implemented yet");{const r=Ay(a,n),s=Tu(km(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=$m(s,a,o-a),l=Ey(e,u),c=t(l);if(0===n)for(let t=0;t<c.length;++t)i.push(Ro(0));for(let t=0;t<c.length;++t){const e=c[t];i[t]=Ya(i[t],Ao(o-a,e))}}for(let t=0;t<i.length;++t)i[t]=ro(i[t],a)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;Rf(t,r)>1&&(s+=`_${Rf(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new dy(t),o=gy(this.outputs,i,{training:!0});let u;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=Ny(n,s[t]));const a=eu(n);e.push(a),u=0===t?n:Ya(u,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=eu(e(r[s],o[s]))}Ga(n),a.push(n)}return u=eu(u),this.calculateLosses().forEach((t=>{u=Ya(u,t)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=t=>Va((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:r[t]});const i=new dy(a),o=gy(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],a=eu(r(s[t],o[t]));n=0===t?a:Ya(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],a=eu(n(s[r],o[r]));e.push(a)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,u,l,c,h;t.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;Sy(p);const d=!1,f=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,d,p);s=f[0],a=f[1],h=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Sf("validationData including sample weights is not supported yet."):new Cf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(i,u,null,null,e,p);l=n[0],c=n[1],m=l.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=Ty(s,t,e),s=Ty(s,0,t),c=Ty(a,t,e),a=Ty(a,0,t),m=l.concat(c)}else null!=r.validationSteps&&(g=!0);const y=s.concat(a).concat(h);t.checkTrainableWeightsConsistency();const b=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let w,v;g?(t.makeTestFunction(),w=t.testFunction,v=x.slice().concat(x.map((t=>"val_"+t)))):(w=null,m=[],v=x.slice());const k=Mg(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,a,i,u,l,c,h,p,d,f,m){null==s&&(s=32),null==a&&(a=1),null==h&&(h=!0),null==d&&(d=0);let g=!1;null!=l&&null!=c&&(g=!0);const y=t.checkNumSamples(n,s,f,"steps_per_epoch");let b;null!=y&&(b=km(0,y)),null==i&&(i=1);const{callbackList:x,history:w}=zg(u,i,a,d,y,f,s,g,p);x.setModel(t),t.history=w,await x.onTrainBegin(),t.stopTraining_=!1;for(let i=d;i<a;++i){await x.onEpochBegin(i);const a={};{if("batch"===h)throw new Sf("batch shuffling is not implemneted yet");h&&o(b);const i=Tu(b),u=Ay(y,s);for(let o=0;o<u.length;++o){const h={};if(await x.onBatchBegin(o,h),Va((()=>{const p=u[o][0],d=u[o][1],f=$m(i,p,d-p);h.batch=o,h.size=d-p;const m=Ey(n,f),y=e(m);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,Ga(n)}if(o===u.length-1&&g){const e=t.testLoop(l,c,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Ga(s),a["val_"+n]=s}}})),await x.onBatchEnd(o,h),Tg(h),t.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(i,a),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}(t,b,y,x,p,r.epochs,r.verbose,k,w,m,r.shuffle,v,r.initialEpoch,null)}finally{t.isTraining=!1,Dy(s,e),Dy(a,n),Dy(l,i),Dy(c,u),null!=h&&Ua(h)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(c(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),c(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),c(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),c(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),c(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Cy(n.validationData))c(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Sf("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,i=t.ys}const o=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((t=>"val_"+t))):u.slice();const h=Mg(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=zg(h,p,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,l);d.setModel(t),t.history=f,await d.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const l={};await d.onEpochBegin(m);let c=0,h=0;for(r||(g=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=Iy(t,e.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const e=vy(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await ky(s[t],null,e[t]))}const l=r.concat(s).concat(i),p=o(l);Ua(l);for(let t=0;t<u.length;++t){const e=u[t],n=p[t];a[e]=n,Ga(n)}await d.onBatchEnd(h,a),Tg(a),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=Cy(n.validationData)?_f(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):_f(t.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(m,l),m++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const t of a){const e=await t.data();i.push(e[0])}return Ua(a),Df(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Wa().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Wa().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Ff(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Ff(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Ff(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ff(sy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Ff(sy(t))));{const t={};for(const e in this.metrics)t[e]=Ff(sy(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Bg(hy(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Of(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Of(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Of(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>Of(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Of(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=_s(t);if(0===e.length)throw new Cf(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Cf(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Cf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await $s(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.7.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await $s(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=Es([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;ay(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){ay(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ly.className="Model",za(Ly);class zy extends Ly{}zy.className="Functional",za(zy);class By extends Ly{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:cg("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Cf(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof By||t instanceof Ly;let n;if(e){if(n=t,1!==n.outputs.length)throw new Cf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Cf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Cf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Cf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Cg({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Cf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Cf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=$g(this.outputs[0])}this.inboundNodes=[],new kg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ef(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(fg(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ly({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new $f("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new $f("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new $f("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new $f("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Cf("Legacy serialization format not supported yet.");s=e}else c(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof By))throw new Sf(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const t of s){const e=Bg(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new Cf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Cf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}By.className="Sequential",za(By);class Py extends Ma{getConfig(){return{}}}class Wy extends Py{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Sf(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return ho(t)}(t,e)}}Wy.className="elu",za(Wy);class Vy extends Py{apply(t){return Ou(t)}}Vy.className="selu",za(Vy);class Uy extends Py{apply(t){return Ru(t)}}Uy.className="relu",za(Uy);class Gy extends Py{apply(t){return Va((()=>ru(6,Ru(t))))}}Gy.className="relu6",za(Gy);class Hy extends Py{apply(t){return t}}Hy.className="linear",za(Hy);class jy extends Py{apply(t){return Po(t)}}jy.className="sigmoid",za(jy);class qy extends Py{apply(t){return function(t){return Va((()=>{const e=Ya(.5,Ao(.2,t));return Li(e,0,1)}))}(t)}}qy.className="hardSigmoid",za(qy);class Ky extends Py{apply(t){return Wo(t)}}Ky.className="softplus",za(Ky);class Xy extends Py{apply(t){return function(t){return Va((()=>ro(t,qa(t).add(1))))}(t)}}Xy.className="softsign",za(Xy);class Yy extends Py{apply(t){return al(t)}}Yy.className="tanh",za(Yy);class Jy extends Py{apply(t,e=-1){return Hu(t,e)}}Jy.className="softmax",za(Jy);class Zy extends Py{apply(t,e=-1){return jo(t,e)}}Zy.className="logSoftmax",za(Zy);class Qy extends Py{apply(t,e=1){return Va((()=>Po(t.mul(e)).mul(t)))}}function tb(t){return t.getClassName()}function eb(t,e={}){return Bf(t,La.getMap().classNameMap,e,"activation")}function nb(t){if(null==t){return eb({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},eb(e)}return t instanceof Py?t:eb(t)}Qy.className="swish",za(Qy);class rb extends Ma{}class sb extends rb{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Va((()=>{let e=Qo([1]);return this.hasL1&&(e=Ya(e,Ho(Ao(this.l1,qa(t))))),this.hasL2&&(e=Ya(e,Ho(Ao(this.l2,Fm(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}sb.className="L1L2",za(sb);const ab={l1l2:"L1L2"};function ib(t){return Lf(t)}function ob(t,e={}){return Bf(t,La.getMap().classNameMap,e,"regularizer")}function ub(t){return null==t?null:"string"==typeof t?ob({className:t in ab?ab[t]:t,config:{}}):t instanceof rb?t:ob(t)}class lb extends Ig{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=dg(t);let n=Ru(t);return null!=this.maxValue&&(n=Li(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}lb.className="ReLU",za(lb);class cb extends Ig{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=dg(t);return Do(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}cb.className="LeakyReLU",za(cb);class hb extends Ig{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=ig(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ub(t.alphaRegularizer),this.alphaConstraint=rm(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Cf(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=fg(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new xg({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=dg(t),fu(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ag(this.alphaInitializer),alphaRegularizer:ib(this.alphaRegularizer),alphaConstraint:em(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}hb.className="PReLU",za(hb);class pb extends Ig{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Sf(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=dg(t);return ho(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}pb.className="ELU",za(pb);class db extends Ig{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=dg(t);return n.mul(Nm(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}db.className="ThresholdedReLU",za(db);class fb extends Ig{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Jy).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=dg(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function mb(t,e,n){if("number"==typeof t)return Ef(t,e);if(t.length!==e)throw new Cf(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if((r=a)!==parseInt(r.toString(),10))throw new Cf(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t;var r}function gb(t,e,n,r,s=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((a+r-1)/r)}function yb(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+vm([n-e,0]);else{if("same"!==r)throw new Cf(`Unsupport padding mode: ${r}.`);t*=e}return t}function bb(t,e){return Va((()=>(lm(e),"channelsFirst"===e?xa(t,[0,2,3,1]):t)))}function xb(t,e){return Va((()=>(lm(e),"channelsFirst"===e?xa(t,[0,2,3,4,1]):t)))}function wb(t,e,n,r=[1,1],s="valid",a,i,o=null){return Va((()=>{if(null==a&&(a="channelsLast"),lm(a),3!==t.rank&&4!==t.rank)throw new Cf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Cf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=bb(t,a);if("causal"===s)throw new Sf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Wl({x:u,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=xa(u,[0,3,1,2])),u}))}fb.className="Softmax",za(fb);class vb extends Ig{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",vb.verifyArgs(e),this.rank=t,Hf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Sf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=mb(e.kernelSize,t,"kernelSize"),this.strides=mb(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,cm(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lm(this.dataFormat),this.activation=nb(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=ig(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=rm(e.biasConstraint),this.biasRegularizer=ub(e.biasRegularizer),this.activityRegularizer=ub(e.activityRegularizer),this.dilationRate=mb(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Cf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Cf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Cf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Af("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Gf(t.kernelSize,"number",1,3))throw new Cf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:tb(this.activation),useBias:this.useBias,biasInitializer:ag(this.biasInitializer),biasRegularizer:ib(this.biasRegularizer),activityRegularizer:ib(this.activityRegularizer),biasConstraint:em(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class kb extends vb{constructor(t,e){super(t,e),this.kernel=null,kb.verifyArgs(e),this.filters=e.filters,Hf(this.filters,"filters"),this.kernelInitializer=ig(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=rm(e.kernelConstraint),this.kernelRegularizer=ub(e.kernelRegularizer)}build(t){t=fg(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Cf(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Va((()=>{let e;t=dg(t);const n=null==this.bias?null:this.bias.read(),r=qf(this.activation.getClassName());if(null!=r&&2===this.rank)e=wb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",a,i=1){return Va((()=>{if(null==a&&(a="channelsLast"),lm(a),3!==t.shape.length)throw new Cf(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Cf(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Cf(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===a&&(t=xa(t,[0,2,1])),"causal"===s)throw new Sf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ji(t,e,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Mm(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=wb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Sf("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",a,i){return Va((()=>{if(null==a&&(a="channelsLast"),lm(a),4!==t.rank&&5!==t.rank)throw new Cf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Cf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=xb(t,a);if("causal"===s)throw new Sf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Xi(o,e,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Mm(o,n)),"channelsFirst"===a&&(o=xa(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=fg(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=gb(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:ag(this.kernelInitializer),kernelRegularizer:ib(this.kernelRegularizer),kernelConstraint:em(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Cf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Nb extends kb{constructor(t){super(2,t),Nb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Gf(t.kernelSize,"number",1,2))throw new Cf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Nb.className="Conv2D",za(Nb);class Ib extends kb{constructor(t){super(3,t),Ib.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Cf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Ib.className="Conv3D",za(Ib);class $b extends Nb{constructor(t){if(super(t),this.inputSpec=[new xg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Cf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=fg(t)).length)throw new Cf("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Cf("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new xg({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Va((()=>{let e=dg(t);if(4!==e.shape.length)throw new Cf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,yb(i,c,u,this.padding),yb(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=xa(e,[0,2,3,1]));let d=Ki(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=xa(d,[0,3,1,2])),null!=this.bias&&(d=Mm(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=fg(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=yb(e[r],o,a,this.padding),e[s]=yb(e[s],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}$b.className="Conv2DTranspose",za($b);class Cb extends kb{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Cf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Cf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Cf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ig(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ub(e.depthwiseRegularizer),this.depthwiseConstraint=rm(e.depthwiseConstraint),this.pointwiseInitializer=ig(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ub(e.pointwiseRegularizer),this.pointwiseConstraint=rm(e.pointwiseConstraint)}build(t){if((t=fg(t)).length<this.rank+2)throw new Cf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Cf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new xg({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Va((()=>{let e;if(t=dg(t),1===this.rank)throw new Sf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=xa(t,[0,2,3,1])),e=Mu(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Mm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=xa(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ag(this.depthwiseInitializer),t.pointwiseInitializer=ag(this.pointwiseInitializer),t.depthwiseRegularizer=ib(this.depthwiseRegularizer),t.pointwiseRegularizer=ib(this.pointwiseRegularizer),t.depthwiseConstraint=em(this.depthwiseConstraint),t.pointwiseConstraint=em(this.pointwiseConstraint),t}}Cb.className="SeparableConv";class Sb extends Cb{constructor(t){super(2,t)}}Sb.className="SeparableConv2D",za(Sb);class Tb extends kb{constructor(t){super(1,t),Tb.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Gf(t.kernelSize,"number",1,1))throw new Cf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Tb.className="Conv1D",za(Tb);class Eb extends Ig{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Va((()=>{if(t=dg(t),"channelsLast"===this.dataFormat){const e=Sm(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Sm(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Sm(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Sm(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Eb.className="Cropping2D",za(Eb);class Ab extends Ig{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Va((()=>{let e=dg(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=xa(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return xa(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Ab.className="UpSampling2D",za(Ab);class Rb extends vb{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ig(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=rm(t.depthwiseConstraint),this.depthwiseRegularizer=ub(t.depthwiseRegularizer)}build(t){if((t=fg(t)).length<4)throw new Cf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Cf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Va((()=>{let e=function(t,e,n=[1,1],r="valid",s,a){return Va((()=>{null==s&&(s="channelsLast"),lm(s);let i=bb(t,s);if(4!==t.rank)throw new Cf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Cf(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=to(i,e,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=xa(i,[0,3,1,2])),i}))}(t=dg(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Mm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=fg(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=gb(e,this.kernelSize[0],this.padding,this.strides[0]),a=gb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ag(this.depthwiseInitializer),t.depthwiseRegularizer=ib(this.depthwiseRegularizer),t.depthwiseConstraint=em(this.depthwiseRegularizer),t}}function Db(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Cf("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function _b(t,e,n,r=!1,s,a,i=!1,o=!1){return Va((()=>{const u=e.shape.length;if(u<3)throw new Cf(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(km(2,u));if(e=xa(e,l),null!=a)throw new Sf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===u-1&&(s=mo(s,-1)),s=xa(s,l)),r&&(e=Du(e,0),null!=s&&(s=Du(s,0)));const c=[];let h,p=n;const d=e.shape[0],f=hl(e);let m,g;null!=s&&(m=hl(s));for(let e=0;e<d;++e){const n=f[e],r=Va((()=>t(n,p)));if(null==s)h=r[0],p=r[1];else{const t=Va((()=>{const t=m[e],n=hu(t).sub(t);return{output:r[0].mul(t).add(p[0].mul(n)),newStates:p.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,p=t.newStates}o&&c.push(h)}return o&&(g=el(c,1)),[h,g,p]}))}Rb.className="DepthwiseConv2D",za(Rb);class Fb extends Ig{constructor(t){let e;if(super(t),null==t.cell)throw new Cf("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Vb({cells:t.cell}):t.cell,null==e.stateSize)throw new Cf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new xg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?km(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){hg(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Va((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Sf("Constants support is not implemented in RNN yet.");hg(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new xg({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!m(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new Cf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new xg({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Va((()=>{if(!this.stateful)throw new If("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Cf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Qo([n,t]))):this.states_=[Qo([n,this.cell.stateSize])];else if(null==t)Ua(this.states_),null!=this.keptStates&&(Ua(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Qo([n,t]))):this.states_[0]=Qo([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Cf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Ua(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,s];if(!m(r.shape,a))throw new Cf(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Ga(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=Db(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new xg({shape:t.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(e.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof wg){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Va((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=dg(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Cf(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=_b(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(t){return Va((()=>{let e=Qo(t.shape);return e=Ho(e,[1,2]),e=Im(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Am(e,[1,t]):e)):this.cell.stateSize>1?[Am(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Fb.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Bg(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Fb.className="RNN",za(Fb);class Ob extends Ig{}class Mb extends Ob{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Hf(this.units,"units"),this.activation=nb(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ig(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ig(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ig(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ub(t.kernelRegularizer),this.recurrentRegularizer=ub(t.recurrentRegularizer),this.biasRegularizer=ub(t.biasRegularizer),this.kernelConstraint=rm(t.kernelConstraint),this.recurrentConstraint=rm(t.recurrentConstraint),this.biasConstraint=rm(t.biasConstraint),this.dropout=wm([1,vm([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=wm([1,vm([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=fg(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Va((()=>{if(2!==(t=t).length)throw new Cf(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ub({ones:()=>hu(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ub({ones:()=>hu(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Dm(null!=a?Ao(t,a):t,this.kernel.read()),null!=this.bias&&(s=Mm(s,this.bias.read())),null!=i&&(n=Ao(n,i));let o=Ya(s,Dm(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tb(this.activation),useBias:this.useBias,kernelInitializer:ag(this.kernelInitializer),recurrentInitializer:ag(this.recurrentInitializer),biasInitializer:ag(this.biasInitializer),kernelRegularizer:ib(this.kernelRegularizer),recurrentRegularizer:ib(this.recurrentRegularizer),biasRegularizer:ib(this.biasRegularizer),activityRegularizer:ib(this.activityRegularizer),kernelConstraint:em(this.kernelConstraint),recurrentConstraint:em(this.recurrentConstraint),biasConstraint:em(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Mb.className="SimpleRNNCell",za(Mb);class Lb extends Fb{constructor(t){t.cell=new Mb(t),super(t)}call(t,e){return Va((()=>{null!=this.cell.dropoutMask&&(Ua(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ua(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}Lb.className="SimpleRNN",za(Lb);class zb extends Ob{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Cf("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Hf(this.units,"units"),this.activation=nb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=nb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ig(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ig(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ig(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ub(t.kernelRegularizer),this.recurrentRegularizer=ub(t.recurrentRegularizer),this.biasRegularizer=ub(t.biasRegularizer),this.kernelConstraint=rm(t.kernelConstraint),this.recurrentConstraint=rm(t.recurrentConstraint),this.biasConstraint=rm(t.biasConstraint),this.dropout=wm([1,vm([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=wm([1,vm([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=fg(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Va((()=>{if(2!==(t=t).length)throw new Cf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ub({ones:()=>hu(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ub({ones:()=>hu(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(t=Ao(t,s[0]));let l=Dm(t,this.kernel.read());this.useBias&&(l=Mm(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ao(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=Yu(c,[2*this.units,this.units],c.rank-1),d=Dm(r,h),[f,m,g]=Yu(l,3,l.rank-1),[y,b]=Yu(d,2,d.rank-1);i=this.recurrentActivation.apply(Ya(f,y)),o=this.recurrentActivation.apply(Ya(m,b));const x=Dm(Ao(o,r),p);u=this.activation.apply(Ya(g,x));const w=Ya(Ao(i,r),Ao(Ya(1,Bo(i)),u));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tb(this.activation),recurrentActivation:tb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ag(this.kernelInitializer),recurrentInitializer:ag(this.recurrentInitializer),biasInitializer:ag(this.biasInitializer),kernelRegularizer:ib(this.kernelRegularizer),recurrentRegularizer:ib(this.recurrentRegularizer),biasRegularizer:ib(this.biasRegularizer),activityRegularizer:ib(this.activityRegularizer),kernelConstraint:em(this.kernelConstraint),recurrentConstraint:em(this.recurrentConstraint),biasConstraint:em(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}zb.className="GRUCell",za(zb);class Bb extends Fb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new zb(t),super(t)}call(t,e){return Va((()=>{null!=this.cell.dropoutMask&&(Ua(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ua(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Bb.className="GRU",za(Bb);class Pb extends Ob{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Hf(this.units,"units"),this.activation=nb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=nb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ig(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ig(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ig(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ub(t.kernelRegularizer),this.recurrentRegularizer=ub(t.recurrentRegularizer),this.biasRegularizer=ub(t.biasRegularizer),this.kernelConstraint=rm(t.kernelConstraint),this.recurrentConstraint=rm(t.recurrentConstraint),this.biasConstraint=rm(t.biasConstraint),this.dropout=wm([1,vm([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=wm([1,vm([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=fg(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Wm{apply(e,r){const s=t.apply([n]),a=(new Um).apply([n]),i=t.apply([2*n]);return Em(Em(s,a),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Va((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Cf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ub({ones:()=>hu(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ub({ones:()=>hu(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(t=Ao(t,a[0]));let h=Dm(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ao(r,i[0])),h=Ya(h,Dm(r,this.recurrentKernel.read())),this.useBias&&(h=Mm(h,this.bias.read()));const[p,d,f,m]=Yu(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=Ya(Ao(u,s),Ao(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ao(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tb(this.activation),recurrentActivation:tb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ag(this.kernelInitializer),recurrentInitializer:ag(this.recurrentInitializer),biasInitializer:ag(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ib(this.kernelRegularizer),recurrentRegularizer:ib(this.recurrentRegularizer),biasRegularizer:ib(this.biasRegularizer),activityRegularizer:ib(this.activityRegularizer),kernelConstraint:em(this.kernelConstraint),recurrentConstraint:em(this.recurrentConstraint),biasConstraint:em(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Pb.className="LSTMCell",za(Pb);class Wb extends Fb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Pb(t),super(t)}call(t,e){return Va((()=>{null!=this.cell.dropoutMask&&(Ua(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ua(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Wb.className="LSTM",za(Wb);class Vb extends Ob{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Va((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;hg(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{dm(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(Bg(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return yg(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}bg(e)}}function Ub(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,a=()=>Lm(e(),n),i=()=>zm(a,e,r);return!s||s<=1?Ga(i().clone()):Array(s).fill(void 0).map(i).map((t=>Ga(t.clone())))}Vb.className="StackedRNNCells",za(Vb);var Gb,Hb;class jb extends Fb{constructor(t){if(t.unroll)throw new Sf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Sf("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new xg({ndim:5})]}call(t,e){return Va((()=>{if(null!=this.cell.dropoutMask&&(Ua(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ua(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Cf("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Va((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=Qo([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){Va((()=>{if(!this.stateful)throw new If("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Cf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Qo(s))):this.states_=[Qo(s)];else if(null==t)Ua(this.states_),null!=this.keptStates&&(Ua(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Qo(s))):this.states_[0]=Qo(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Cf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Ua(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!m(n.shape,r))throw new Cf(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Ga(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],l=t[o?4:3],c=gb(u,r[0],s,a[0],i[0]),h=gb(l,r[1],s,a[1],i[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}jb.className="ConvRNN2D";class qb extends Pb{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,Hf(this.filters,"filters"),this.kernelSize=mb(n,2,"kernelSize"),this.kernelSize.forEach((t=>Hf(t,"kernelSize"))),this.strides=mb(r||1,2,"strides"),this.strides.forEach((t=>Hf(t,"strides"))),this.padding=s||"valid",cm(this.padding),this.dataFormat=a||"channelsLast",lm(this.dataFormat),this.dilationRate=mb(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>Hf(t,"dilationRate")))}build(t){var e;t=fg(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Cf(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Wm{apply(t,e){return Tm([n.apply([r]),tu([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Va((()=>{if(3!==t.length)throw new Cf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],a=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ub({ones:()=>hu(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Ao(e[n],t):t;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ub({ones:()=>hu(s),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,w]=Yu(this.kernel.read(),4,3),[v,k,N,I]=this.useBias?Yu(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),h=this.inputConv(h,w,I,this.padding);const[$,C,S,T]=Yu(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,$),f=this.recurrentConv(f,C),m=this.recurrentConv(m,S),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(Ya(u,d)),A=this.recurrentActivation.apply(Ya(l,f)),R=Ya(Ao(A,a),Ao(E,this.activation.apply(Ya(c,m)))),D=Ao(this.recurrentActivation.apply(Ya(h,g)),this.activation.apply(R));return[D,D,R]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Hi(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Mm(s,n,this.dataFormat):s}recurrentConv(t,e){return Hi(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}qb.className="ConvLSTM2DCell",za(qb);class Kb extends jb{constructor(t){const e=new qb(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Kb.className="ConvLSTM2D",za(Kb);class Xb extends Ig{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Va((()=>{this.invokeCallHook(t,e);const n=dg(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return zm((()=>Lm(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Xb.className="Dropout",za(Xb);class Yb extends Xb{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Yb.className="SpatialDropout1D",za(Yb);class Jb extends Ig{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Hf(this.units,"units"),this.activation=nb(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=ig(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ig(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=rm(t.kernelConstraint),this.biasConstraint=rm(t.biasConstraint),this.kernelRegularizer=ub(t.kernelRegularizer),this.biasRegularizer=ub(t.biasRegularizer),this.activityRegularizer=ub(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=fg(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=fg(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Va((()=>{this.invokeCallHook(t,e);const n=dg(t),r=qf(this.activation.getClassName());let s;return null!=r?s=Dm(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Dm(n,this.kernel.read()),null!=this.bias&&(s=Mm(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:tb(this.activation),useBias:this.useBias,kernelInitializer:ag(this.kernelInitializer),biasInitializer:ag(this.biasInitializer),kernelRegularizer:ib(this.kernelRegularizer),biasRegularizer:ib(this.biasRegularizer),activityRegularizer:ib(this.activityRegularizer),kernelConstraint:em(this.kernelConstraint),biasConstraint:em(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Jb.className="Dense",za(Jb);class Zb extends Ig{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=fg(t);for(const e of t.slice(1))if(null==e)throw new Cf(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],bm(t,1)]}call(t,e){return Va((()=>{this.invokeCallHook(t,e);let n=dg(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Cf(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],bm(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Zb.className="Flatten",za(Zb);class Qb extends Ig{constructor(t){super(t),this.supportsMasking=!0,this.activation=nb(t.activation)}call(t,e){return Va((()=>{this.invokeCallHook(t,e);const n=dg(t);return this.activation.apply(n)}))}getConfig(){const t={activation:tb(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Qb.className="Activation",za(Qb);class tx extends Ig{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Va((()=>{return t=dg(t),e=t,n=this.n,Va((()=>{if(2!==e.shape.length)throw new Cf(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Am(Im(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}tx.className="RepeatVector",za(tx);class ex extends Ig{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==a)throw new Cf("Can only specifiy one unknown dimension.");a=t}else s*=e}const i=bm(t);if(null!==a){if(0===s||i%s!=0)throw new Cf(n);r[a]=i/s}else if(i!==s)throw new Cf(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Va((()=>{this.invokeCallHook(t,e);const n=dg(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}ex.className="Reshape",za(ex);class nx extends Ig{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=km(1,t.dims.length+1);if(!m(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new xg({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=fg(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return xa(dg(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}nx.className="Permute",za(nx);class rx extends Ig{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=dg(t);return ii(lu(n,this.maskValue),-1)}call(t,e){return Va((()=>{this.invokeCallHook(t,e);const n=dg(t),r=ii(lu(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}rx.className="Masking",za(rx);class sx extends Ig{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(_f(t.inputLength))}this.inputDim=t.inputDim,Hf(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Hf(this.outputDim,"outputDim"),this.embeddingsInitializer=ig(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ub(t.embeddingsRegularizer),this.activityRegularizer=ub(t.activityRegularizer),this.embeddingsConstraint=rm(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Va((()=>this.maskZero?(t=dg(t),lu(t,lo(t))):null))}computeOutputShape(t){if(t=fg(t),null==this.inputLength)return[...t,this.outputDim];const e=_f(this.inputLength);if(e.length!==t.length-1)throw new Cf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new Cf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Va((()=>{this.invokeCallHook(t,e);let n=dg(t);return"int32"!==n.dtype&&(n=Nm(n,"int32")),_m(this.embeddings.read(),n.as1D()).reshape(fg(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ag(this.embeddingsInitializer),embeddingsRegularizer:ib(this.embeddingsRegularizer),activityRegularizer:ib(this.activityRegularizer),embeddingsConstraint:em(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}sx.className="Embedding",za(sx);class ax extends Ig{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Sf}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Cf("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[fg(t)]),(t=t).length<2)throw new Cf(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=Wf(e),e.length>1)throw new Cf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===Wf(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Va((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=vm(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Im(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],a=t.slice(1).concat([s]);let i=r.reshape([s].concat(bm(t.slice(1))));i=xa(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const s=km(1,t).concat([0]);e.push(xa(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=xa(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(km(0,s-1));r=xa(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=Wf(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Va((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Cf("`mask` should be an Array");if(!Array.isArray(t))throw new Cf("`inputs` should be an Array");if(e.length!==t.length)throw new Cf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:mo(t,0))))[0];for(let t=1;t<e.length-1;++t)n=qo(n,e[t]);return n}))}}class ix extends ax{constructor(t){super(t)}mergeFunction(t){return Va((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ya(e,t[n]);return e}))}}ix.className="Add",za(ix);class ox extends ax{constructor(t){super(t)}mergeFunction(t){return Va((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ao(e,t[n]);return e}))}}ox.className="Multiply",za(ox);class ux extends ax{constructor(t){super(t)}mergeFunction(t){return Va((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ya(e,t[n]);return Ao(1/t.length,e)}))}}ux.className="Average",za(ux);class lx extends ax{constructor(t){super(t)}mergeFunction(t){return Va((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Eo(e,t[n]);return e}))}}lx.className="Maximum",za(lx);class cx extends ax{constructor(t){super(t)}mergeFunction(t){return Va((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ru(e,t[n]);return e}))}}cx.className="Minimum",za(cx);class hx extends ax{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Cf("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(m(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Cf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Va((()=>Tm(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Cf("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Cf("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Cf("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Cf(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Va((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(hu(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(mo(e[n],-1)):r.push(e[n]);const s=Pi(r,this.axis);return ai(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function px(t,e){for(;t<0;)t+=e;return t}hx.className="Concatenate",za(hx);class dx extends ax{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){c(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Sf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Cf(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Cf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>px(e,t[n].shape.length))):[px(this.axes,n.shape.length),px(this.axes,r.shape.length)],this.normalize&&(n=Pg(n,e[0]),r=Pg(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Sf("batchDot is not implemented for tensors of 4D or higher rank yet");if(c(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),c(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Sf("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Va((()=>{let n,i;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=a[0]===a[1]?t.mul(e).sum(a[0]):t.transpose([1,0]).mul(e).sum(a[1]);else{const n=a[0]!==t.shape.length-1,r=a[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[px(this.axes,t.length),px(this.axes,e.length)],n}computeOutputShape(t){c(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Sf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}dx.className="Dot",za(dx);class fx extends Ig{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Va((()=>{this.invokeCallHook(t,e);const n=dg(t);return zm((()=>Rm(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}fx.className="GaussianNoise",za(fx);class mx extends Ig{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Va((()=>{this.invokeCallHook(t,e);const n=dg(t);return this.rate>0&&this.rate<1?zm((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Rm(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}mx.className="GaussianDropout",za(mx);class gx extends Ig{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||dg(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Va((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return zm((()=>{const e=dg(t),r=-1.7580993408473766;let s=Io(Su(n),this.rate);s=Nm(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>dg(t)),e.training||!1)}return t}))}}function yx(t,e,n,r,s,a=.001){let i;if(2===t.rank)i=Di(t,e,n,r,s,a);else if(3===t.rank)i=_i(t,e,n,r,s,a);else{if(4!==t.rank)throw new Sf(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=Fi(t,e,n,r,s,a)}return i}gx.className="AlphaDropout",za(gx);class bx extends Ig{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ig(t.betaInitializer||"zeros"),this.gammaInitializer=ig(t.gammaInitializer||"ones"),this.movingMeanInitializer=ig(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ig(t.movingVarianceInitializer||"ones"),this.betaConstraint=rm(t.betaConstraint),this.gammaConstraint=rm(t.gammaConstraint),this.betaRegularizer=ub(t.betaRegularizer),this.gammaRegularizer=ub(t.gammaRegularizer)}build(t){t=fg(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Cf(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new xg({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Va((()=>{const n=null!=e.training&&e.training,r=dg(t),s=r.shape,a=s.length,i=km(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=Ef(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!m(l,km(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,s=this.scale?this.gamma.read().reshape(u):null;return yx(r,t,e,n,s,this.epsilon)}return yx(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(t,e,n,r,s=.001){return m(r.slice().sort(),km(0,t.rank-1))?function(t,e,n,r,s=.001){return Va((()=>{const a=ou(t,r),i=a.mean,o=a.variance;return[yx(t,i,o,n,e,s),i,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return Va((()=>{const a=ou(t,r),i=a.mean,o=a.variance,u=[];for(const e of km(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=i.reshape(u),c=o.reshape(u),h=null==e?null:e.reshape(u),p=null==n?null:n.reshape(u);return[yx(t,l,c,p,h,s),i,o]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(t,e,n)=>{Va((()=>{const r=1-n,s=t.read(),a=s.sub(e).mul(r);t.write(s.sub(a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ag(this.betaInitializer),gammaInitializer:ag(this.gammaInitializer),movingMeanInitializer:ag(this.movingMeanInitializer),movingVarianceInitializer:ag(this.movingVarianceInitializer),betaRegularizer:ib(this.betaRegularizer),gammaRegularizer:ib(this.gammaRegularizer),betaConstraint:em(this.betaConstraint),gammaConstraint:em(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}bx.className="BatchNormalization",za(bx);class xx extends Ig{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ig(t.betaInitializer||"zeros"),this.gammaInitializer=ig(t.gammaInitializer||"ones"),this.betaRegularizer=ub(t.betaRegularizer),this.gammaRegularizer=ub(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=fg(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==Wf(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=dg(t),r=n.shape,s=r.length;return Va((()=>{let{mean:t,variance:e}=ou(n,this.axis,!0);const a=Ef(1,s);for(const t of this.axis)a[t]=r[t];const i=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(a):t;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(l.push(r[t]),c.push(1)):(l.push(1),c.push(r[t]));return t=t.tile(l),e=e.tile(l),o=o.tile(c),u=u.tile(c),yx(n,t,e,u,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ag(this.betaInitializer),gammaInitializer:ag(this.gammaInitializer),betaRegularizer:ib(this.betaRegularizer),gammaRegularizer:ib(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}xx.className="LayerNormalization",za(xx);class wx extends Ig{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Cf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Cf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Cf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new xg({ndim:4})]}computeOutputShape(t){let e,n;return t=fg(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Va((()=>{return e=dg(t),n=this.padding,r=this.dataFormat,Va((()=>{if(4!==e.rank)throw new Cf(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Cf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Cf(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],pu(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function vx(t,e,n,r,s,a){return Va((()=>{let i;lm(s),hm(a),cm(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=bb(t,s);const o="same"===r?"same":"valid";return i="max"===a?Yo(t,e,n,o):Si(t,e,n,o),"channelsFirst"===s&&(i=xa(i,[0,3,1,2])),i}))}function kx(t,e,n,r,s,a){return Va((()=>{let i;lm(s),hm(a),cm(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=xb(t,s);const o="same"===r?"same":"valid";return i="max"===a?Jo(t,e,n,o):Ti(t,e,n,o),"channelsFirst"===s&&(i=xa(i,[0,4,1,2,3])),i}))}wx.className="ZeroPadding2D",za(wx);class Nx extends Ig{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Cf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Hf(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Cf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Hf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,cm(this.padding),this.inputSpec=[new xg({ndim:3})]}computeOutputShape(t){const e=gb((t=fg(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Va((()=>{this.invokeCallHook(t,e),t=Im(dg(t),2);const n=this.poolingFunction(dg(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return tl(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Ix extends Nx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return lm(s),cm(r),vx(t,e,n,r,s,"max")}}Ix.className="MaxPooling1D",za(Ix);class $x extends Nx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return lm(s),cm(r),vx(t,e,n,r,s,"avg")}}$x.className="AveragePooling1D",za($x);class Cx extends Ig{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Cf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Hf(this.poolSize,"poolSize"),Hf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,lm(this.dataFormat),cm(this.padding),this.inputSpec=[new xg({ndim:4})]}computeOutputShape(t){t=fg(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=gb(e,this.poolSize[0],this.padding,this.strides[0]),n=gb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Va((()=>(this.invokeCallHook(t,e),this.poolingFunction(dg(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Sx extends Cx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return lm(s),cm(r),vx(t,e,n,r,s,"max")}}Sx.className="MaxPooling2D",za(Sx);class Tx extends Cx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return lm(s),cm(r),vx(t,e,n,r,s,"avg")}}Tx.className="AveragePooling2D",za(Tx);class Ex extends Ig{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Cf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Hf(this.poolSize,"poolSize"),Hf(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,lm(this.dataFormat),cm(this.padding),this.inputSpec=[new xg({ndim:5})]}computeOutputShape(t){t=fg(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=gb(e,this.poolSize[0],this.padding,this.strides[0]),n=gb(n,this.poolSize[1],this.padding,this.strides[1]),r=gb(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Va((()=>(this.invokeCallHook(t,e),this.poolingFunction(dg(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ax extends Ex{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return lm(s),cm(r),kx(t,e,n,r,s,"max")}}Ax.className="MaxPooling3D",za(Ax);class Rx extends Ex{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return lm(s),cm(r),kx(t,e,n,r,s,"avg")}}Rx.className="AveragePooling3D",za(Rx);class Dx extends Ig{constructor(t){super(t),this.inputSpec=[new xg({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Sf}}class _x extends Dx{constructor(t){super(t||{})}call(t,e){return Va((()=>{const e=dg(t);return eu(e,1)}))}}_x.className="GlobalAveragePooling1D",za(_x);class Fx extends Dx{constructor(t){super(t||{})}call(t,e){return Va((()=>{const e=dg(t);return Uo(e,1)}))}}Fx.className="GlobalMaxPooling1D",za(Fx);class Ox extends Ig{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,lm(this.dataFormat),this.inputSpec=[new xg({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Sf}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Mx extends Ox{call(t,e){return Va((()=>{const e=dg(t);return"channelsLast"===this.dataFormat?eu(e,[1,2]):eu(e,[2,3])}))}}Mx.className="GlobalAveragePooling2D",za(Mx);class Lx extends Ox{call(t,e){return Va((()=>{const e=dg(t);return"channelsLast"===this.dataFormat?Uo(e,[1,2]):Uo(e,[2,3])}))}}Lx.className="GlobalMaxPooling2D",za(Lx);class zx extends Ig{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Bg(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class Bx extends zx{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=fg(t)).length<3)throw new Cf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=fg(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Va((()=>_b(((t,n)=>[dg(this.layer.call(t,e)),[]]),t=dg(t),[],!1,null,null,!1,!0)[1]))}}Bx.className="TimeDistributed",za(Bx);class Px extends zx{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Bg(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Bg(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,Uf(om,"BidirectionalMergeMode",s),t.weights)throw new Sf("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Df(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=Db(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new Cf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const r=n.map((t=>new xg({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new Sf("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof wg;for(const t of a)if(t instanceof wg!==o)throw new Cf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Va((()=>{const n=e.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Du(s,1)),"concat"===this.mergeMode?i=Tm([r,s]):"sum"===this.mergeMode?i=Ya(r,s):"ave"===this.mergeMode?i=Ao(.5,Ya(r,s)):"mul"===this.mergeMode?i=Ao(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){dm(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),dm(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Bg(e.layer);if(delete e.layer,null!=e.numConstants)throw new Sf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function Wx(t,e){return Vx(t,e)}function Vx(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(jx(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const a in t){const i=Vx(t[a],e,n,r);s[a]=i}return r.delete(t),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function Ux(t,e=Hx){return Gx(t,e)}function Gx(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(jx(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=Gx(t.map((t=>t[a])),e,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Hx(t){return null===t?null:jx(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function jx(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof jn))}function qx(t){return t instanceof jn?{value:t.clone(),recurse:!1}:jx(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}Px.className="Bidirectional",za(Px);class Kx{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Xx extends Kx{constructor(){super(Xx.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Xx.INITIAL_CAPACITY=32;class Yx{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new aw(this,t)}filter(t){return new rw(this,t)}map(t){return new sw(this,t)}mapAsync(t){return new iw(this,t)}serialMapAsync(t){return new iw(this,t).serial()}flatmap(t){return new uw(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new nw(this,t,e)}columnMajorBatch(t,e=!0,n=Hx){return this.rowMajorBatch(t,e).map((t=>Ux(t,n)))}concatenate(t,e){return new lw(new Jx([this,t]),e)}take(t){return t<0||null==t?this:new ew(this,t)}skip(t){return t<0||null==t?this:new tw(this,t)}prefetch(t){return new cw(this,t)}shuffle(t,e){return new hw(this,t,e)}serial(){return new Qx(this)}}class Jx extends Yx{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Wx(e,qx)),done:!1};var e}}class Zx extends Yx{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Qx extends Yx{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class tw extends Yx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Ua(t.value)}return this.upstream.next()}}class ew extends Yx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class nw extends Yx{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class rw extends Yx{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Ua(t.value)}}}class sw extends Yx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=lr(t.value),n=this.transform(t.value),r=lr(n);for(const t of e)ur(t,r)||t.dispose();return{value:n,done:!1}}}class aw extends Yx{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class iw extends Yx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=lr(t.value),n=await this.transform(t.value),r=lr(n);for(const t of e)ur(t,r)||t.dispose();return{value:n,done:!1}}}class ow extends Yx{constructor(){super(),this.outputQueue=new Xx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class uw extends ow{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=lr(t.value),n=this.transform(t.value),r=lr(n);this.outputQueue.pushAll(n);for(const t of e)ur(t,r)||t.dispose();return!0}}class lw extends Yx{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(Hb=Gb||(Gb={}))[Hb.FAIL=0]="FAIL",Hb[Hb.SHORTEST=1]="SHORTEST",Hb[Hb.LONGEST=2]="LONGEST";class cw extends Yx{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Kx(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class hw extends cw{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=gu.alea(n||Rn().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class pw{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return c(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),dw((async()=>(await n.iterator()).columnMajorBatch(t,e,fw)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,dw((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,dw((async()=>(await e.iterator()).filter((e=>Va((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return dw((async()=>(await e.iterator()).map((e=>Va((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return dw((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return dw((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,dw((async()=>{var n;return n=new Zx((async()=>({value:await e.iterator(),done:!1}))).take(t),new lw(n,undefined)}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,dw((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=gu.alea(e||Rn().toString());return dw((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,dw((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function dw(t,e=null){return new class extends pw{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function fw(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof jn||C(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof jn?el(t):ks(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function mw(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&c("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}pw.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const gw=nc,yw=qc,bw=Kc,xw=Xc,ww=pl;class vw extends a{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new s(this,Pa())}write(t,e,n){this.firstUse&&(this.firstUse=!1,G().get("IS_NODE")&&Wc("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&T(n[0])){const s=n.map((t=>Dn(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Vc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>_n(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return aa(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Pa().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=Rn();return t(),{kernelMs:Rn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,r){mw(t,"stridedSlice");const s=Ca(e,n,r);if(s.some((t=>0===t)))return ks([],s);const a=aa(s,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;t++){const n=a.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];a.set(i.get(...s),...n)}return a.toTensor()}diag(t){const e=this.readSync(t.dataId),n=aa([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=Pu(t,a,i).reshape(r);return o}reverse(t,e){mw(t,"reverse");const n=aa(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const a=n.indexToLoc(s),i=a.slice();e.forEach((e=>i[e]=t.shape[e]-1-i[e])),n.set(r.get(...i),...a)}return n.toTensor()}neg(t){return mw(t,"neg"),Ao(Ro(-1),t)}addN(t){mw(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=aa(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=v([e],t.shape),r=Uo(t,n),s=ti(r.shape,n),a=Go(t,r.reshape(s)),i=fo(a),o=this.sum(i,n).reshape(s);return ro(i,o)}pow(t,e){return mw([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}floorDiv(t,e){return mw([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){mw(t,"sum"),ei("sum",e,t.rank);const[n,r]=Qa(t.shape,e),s=Qo(n,ar(t.dtype,"int32")),a=f(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=0;for(let t=0;t<a;++t)n+=o[e+t];i[t]=n}return s}prod(t,e){mw(t,"sum");const[n,r]=Qa(t.shape,e),s=Qo(n,ar(t.dtype,"int32")),a=f(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=1;for(let t=0;t<a;++t)n*=o[e+t];i[t]=n}return s}unsortedSegmentSum(t,e,n){mw(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let t=0;t<s;++t)e=e.expandDims(t+1);for(let s=0;s<n;++s){const n=Ro(s,"int32"),a=oo(n,e).asType("float32").mul(t).sum(0);r.push(a)}return el(r)}argMin(t,e){mw(t,"argMin");const n=[e];ei("argMin",n,t.rank);const[r,s]=Qa(t.shape,n),a=Qo(r,"int32"),i=f(s),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e],r=0;for(let t=0;t<i;++t){const s=u[e+t];s<n&&(n=s,r=t)}o[t]=r}return a}argMax(t,e){mw(t,"argMax");const n=[e];ei("argMax",n,t.rank);const[r,s]=Qa(t.shape,n),a=Qo(r,"int32"),i=f(s),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e],r=0;for(let t=0;t<i;++t){const s=u[e+t];s>n&&(n=s,r=t)}o[t]=r}return a}cumsum(t,e,n,r){if(mw(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=ar(t.dtype,"int32"),a=Qo(t.shape,s),i=this.readSync(a.dataId),o=this.readSync(t.dataId),u=t.shape[t.rank-1],l=r?(t,e)=>t+u-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=u)for(let e=0;e<u;e++){const r=l(t,e);if(0===e)i[r]=n?0:o[r];else{const s=l(t,e-1);i[r]=n?o[s]+i[s]:o[r]+i[s]}}return a}equal(t,e){return mw([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return mw([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return mw([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return mw([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return mw([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return mw([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalAnd(t,e){return mw([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return mw([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){mw([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),a=this.readSync(n.dataId),i=Qo(e.shape,ar(e.dtype,n.dtype)),o=this.readSync(i.dataId);let u=0;const l=0===t.rank||t.rank>1||1===e.rank?1:f(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<l;e++)1===r[t]?o[u++]=s[t]:o[u++]=a[t];return i}where(t){mw([t],"where");const e=this.readSync(t.dataId);return ww(t.shape,e)}topk(t,e,n){mw(t,"topk");const r=this.readSync(t.dataId);return xw(r,t.shape,t.dtype,e,n)}min(t,e){mw(t,"min"),ei("min",e,t.rank);const[n,r]=Qa(t.shape,e),s=Qo(n,t.dtype),a=f(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];r<n&&(n=r)}i[t]=n}return s}minimum(t,e){return mw([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return mw([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return mw([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){mw(t,"all"),ei("all",e,t.rank);const[n,r]=Qa(t.shape,e),s=Qo(n,t.dtype),a=f(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n&&r}i[t]=n}return s}any(t,e){mw(t,"any"),ei("any",e,t.rank);const[n,r]=Qa(t.shape,e),s=Qo(n,t.dtype),a=f(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n||r}i[t]=n}return s}squaredDifference(t,e){return mw([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}eluDer(t,e){mw([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return mw([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}tile(t,e){return mw(t,"tile"),bw(this.bufferSync(t),e)}gather(t,e,n){mw([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const a=aa(r,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;++t){const e=a.indexToLoc(t),r=e.slice();r[n]=s[e[n]];const o=i.locToIndex(r);a.values[t]=i.values[o]}return a.toTensor()}batchToSpaceND(t,e,n){mw([t],"batchToSpaceND");const r=e.reduce(((t,e)=>t*e)),s=Mc(t.shape,e,r),a=Lc(s.length,e.length),i=zc(t.shape,e,r),o=Bc(n,e.length),u=Pc(i,n,e.length);return xa(t.reshape(s),a).reshape(i).slice(o,u)}pool3d(t,e,n){mw(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(t.dataId),y=aa(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],k=e.outShape[4];for(let y=0;y<e.batchSize;++y){const N=y*x,I=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const $=x*r-p;let C=$;for(;C<0;)C+=i;const S=Math.min(e.inDepth,l+$),T=N+x*w;for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const x=Math.min(e.inHeight,c+l),w=T+r*v;for(let r=0;r<e.outWidth;++r){const s=r*a-f;let l=s;for(;l<0;)l+=u;const c=Math.min(e.inWidth,h+s),d=w+r*k;let v=m,N=0,$=0;for(let e=C;e<S;e+=i){const r=I+e*t.strides[1];for(let e=p;e<x;e+=o){const s=r+e*t.strides[2];for(let e=l;e<c;e+=u){const r=g[s+e*t.strides[3]+y];if("max"===n&&r>v?v=r:"avg"===n&&(N+=r,$++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[d+y]="avg"===n?N/$:v}}}}return y.toTensor()}avgPool3d(t,e){return mw(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){mw([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,a=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,d=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=p-1-n.padInfo.front,g=f-1-n.padInfo.left,y=d-1-n.padInfo.top,b=aa(e.shape,"float32"),x=1/(i*o*u),w=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let i=0;i<n.inDepth;++i)for(let o=0;o<n.inHeight;++o)for(let u=0;u<n.inWidth;++u){const v=i-m,k=o-y,N=u-g;let I=0;for(let i=0;i<p;i+=l){const o=(v+i)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<d;r+=c){const i=(k+r)/s;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<f;r+=h){const s=(N+r)/a;s<0||s>=n.outWidth||Math.floor(s)!==s||(I+=w.get(t,o,i,s,e))}}}b.set(I*x,t,i,o,u,e)}return b.toTensor()}maxPool3d(t,e){return mw(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=aa(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left,m=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(e.inDepth,l+b);for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const v=Math.min(e.inHeight,c+l);for(let s=0;s<e.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=u;const N=Math.min(e.inWidth,h+d);let I=Number.NEGATIVE_INFINITY,$=-1;for(let e=x;e<w;e+=i){const n=e-b;for(let r=p;r<v;r+=o){const s=r-l;for(let a=k;a<N;a+=u){const i=a-d,o=m.get(t,e,r,a,g);o>=I&&(I=o,$=n*c*h+s*c+i)}}}n.set($,t,y,r,s,g)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){mw([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),a=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=d-1-r.padInfo.left,g=p-1-r.padInfo.top,y=aa(e.shape,"float32"),b=this.bufferSync(s),x=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let w=0;w<r.inWidth;++w){const v=n-f,k=s-g,N=w-m;let I=0;for(let n=0;n<h;n+=u){const s=(v+n)/a;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let a=0;a<p;a+=l){const u=(k+a)/i;if(!(u<0||u>=r.outHeight||Math.floor(u)!==u))for(let i=0;i<d;i+=c){const l=(N+i)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const c=h*p*d-1-b.get(t,s,u,l,e)===n*p*d+a*d+i?1:0;0!==c&&(I+=x.get(t,s,u,l,e)*c)}}}y.set(I,t,n,s,w,e)}return y.toTensor()}resizeBilinear(t,e,n,r){mw(t,"resizeBilinear");const[s,a,i,o]=t.shape,u=this.readSync(t.dataId),l=new Float32Array(f([s,e,n,o])),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let p=0;const d=c[0]/h[0],m=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<e;s++){const e=d*s,c=Math.floor(e),h=e-c,f=Math.min(a-1,Math.ceil(e)),g=r*t.strides[0]+c*t.strides[1],y=r*t.strides[0]+f*t.strides[1];for(let e=0;e<n;e++){const n=m*e,r=Math.floor(n),s=n-r,a=Math.min(i-1,Math.ceil(n)),c=g+r*t.strides[2],d=y+r*t.strides[2],f=g+a*t.strides[2],b=y+a*t.strides[2];for(let t=0;t<o;t++){const e=u[c+t],n=u[d+t],r=e+(u[f+t]-e)*s,a=r+(n+(u[b+t]-n)*s-r)*h;l[p++]=a}}}return ks(l,[s,e,n,o])}resizeBilinearBackprop(t,e,n){mw([t,e],"resizeBilinearBackprop");const[r,s,a,i]=e.shape,[,o,u]=t.shape,l=new Float32Array(r*s*a*i),c=[n&&o>1?s-1:s,n&&u>1?a-1:a],h=[n&&o>1?o-1:o,n&&u>1?u-1:u],p=c[0]/h[0],d=c[1]/h[1],f=this.readSync(t.dataId);let m=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const r=t*p,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+o*e.strides[1],g=n+c*e.strides[1],y=r-o,b=1-y;for(let t=0;t<u;t++){const n=t*d,r=Math.floor(n),s=Math.min(Math.ceil(n),a-1),o=n-r,u=1-o,c=h+r*e.strides[2],p=h+s*e.strides[2],x=g+r*e.strides[2],w=g+s*e.strides[2],v=b*u,k=b*o,N=y*u,I=y*o;for(let t=0;t<i;t++){const e=f[m++];l[c+t]+=e*v,l[p+t]+=e*k,l[x+t]+=e*N,l[w+t]+=e*I}}}}return ol(l,[r,a,s,i],e.dtype)}resizeNearestNeighbor(t,e,n,r){mw(t,"resizeNearestNeighbor");const[s,a,i,o]=t.shape,u=this.readSync(t.dataId),l=new Float32Array(s*e*n*o),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=c[0]/h[0],d=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*t.strides[0];for(let c=0;c<e;c++){const e=p*c,h=s+Math.min(a-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=d*e,s=h+Math.min(i-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=u[s+t];l[f++]=e}}}}return ks(l,[s,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){mw([t,e],"resizeNearestNeighborBackprop");const[r,s,a,i]=e.shape,[,o,u]=t.shape,l=new Float32Array(r*s*a*i),c=this.readSync(t.dataId),h=[n&&o>1?s-1:s,n&&u>1?a-1:a],p=[n&&o>1?o-1:o,n&&u>1?u-1:u],d=h[0]/p[0],f=h[1]/p[1],m=1/d,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2;for(let h=0;h<r;h++){const r=h*e.strides[0];for(let h=0;h<s;h++){const p=r+h*e.strides[1],x=Math.floor(h*m),w=Math.floor(x-y/2);for(let m=0;m<a;m++){const x=p+m*e.strides[2],v=Math.floor(m*g),k=Math.floor(v-b/2);for(let e=0;e<i;e++){let i=0;for(let l=0;l<y;l++){const p=l+w;if(p<0||p>=o)continue;const g=r+p*t.strides[1],y=p*d;if(h===Math.min(s-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const s=r+k;if(s<0||s>=u)continue;const o=g+s*t.strides[2],l=s*f;m===Math.min(a-1,n?Math.round(l):Math.floor(l))&&(i+=c[o+e])}}l[x+e]=i}}}}return ol(l,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,r,s){mw(t,"localResponseNormalization4D");const a=t.shape[3],i=a-1,o=this.readSync(t.dataId),u=t.size,l=new Float32Array(u);function c(t){const n=t%a;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,i);let u=0;for(;r<=s;r++){const t=o[r];u+=t*t}return u}for(let t=0;t<u;t++){const e=c(t),a=o[t]*Math.pow(n+r*e,-s);l[t]=a}return ol(l,t.shape)}LRNGrad(t,e,n,r,s,a,i){mw(t,"LRNGrad");const o=t.shape[3],u=this.readSync(t.dataId),l=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),p=t.size;for(let t=0;t<p;t++){const e=t%o,n=t-e+Math.max(0,e-r),p=t-e+Math.min(o,e+r+1);let d=0;for(let t=n;t<p;t++)d+=Math.pow(l[t],2);d=a*d+s;for(let e=n;e<p;e++){let n=-2*a*i*l[e]*c[t]/d;t===e&&(n+=Math.pow(d,-i)),n*=u[t],h[e]+=n}}return ol(h,t.shape)}multinomial(t,e,n,r){mw(t,"multinomial");const s=e?t:Hu(t),a=s.shape[0],i=s.shape[1],o=Qo([a,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(s.dataId);for(let t=0;t<a;++t){const e=t*i,s=new Float32Array(i-1);s[0]=l[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+l[e+t];const a=gu.alea(r.toString()),o=t*n;for(let t=0;t<n;++t){const e=a();u[o+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){u[o+t]=n;break}}}return o}oneHot(t,e,n,r){mw(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const a=this.readSync(t.dataId);for(let r=0;r<t.size;++r)a[r]>=0&&a[r]<e&&(s[r*e+a[r]]=n);return il(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){mw(t,"nonMaxSuppression");const a=this.readSync(t.dataId),i=this.readSync(e.dataId);return gw(a,i,n,r,s)}depthToSpace(t,e,n){c("NHWC"===n,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`)),c(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s=t.shape[1],a=t.shape[2],i=t.shape[3],o=s*e,u=a*e,l=i/(e*e),h=this.readSync(t.dataId),p=new Float32Array(r*o*u*l);let d=0;for(let t=0;t<r;++t)for(let n=0;n<o;++n){const r=Math.floor(n/e),o=n%e;for(let n=0;n<u;++n){const u=Math.floor(n/e),c=(o*e+n%e)*l;for(let e=0;e<l;++e){const n=e+c+i*(u+a*(r+s*t));p[d++]=h[n]}}}return ol(p,[r,o,u,l])}broadcastedBinaryOp(t,e,n,r){const s=io(t.shape,e.shape),a=aa(s,n),i=this.readSync(t.dataId),o=this.readSync(e.dataId),u=so(t.shape,s),l=so(e.shape,s),c=a.values;if(u.length+l.length===0)for(let t=0;t<c.length;++t)c[t]=r(i[t%i.length],o[t%o.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const p=a.indexToLoc(h),d=p.slice(-t.rank);u.forEach((t=>d[t]=0));const f=n.locToIndex(d),m=p.slice(-e.rank);l.forEach((t=>m[t]=0));const g=s.locToIndex(m);c[h]=r(i[f],o[g])}}return a.toTensor()}split(t,e,n){return yw(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,a){const[i,o,u,l]=t.shape,c=e.shape[0],[h,p]=r,d=aa([c,h,p,l],"float32"),f=this.readSync(e.dataId),m=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,b=d.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],r=f[e+1],c=f[e+2],x=f[e+3],w=m[t];if(w>=i)continue;const v=h>1?(c-n)*(o-1)/(h-1):0,k=p>1?(x-r)*(u-1)/(p-1):0;for(let e=0;e<h;e++){const i=h>1?n*(o-1)+e*v:.5*(n+c)*(o-1);if(i<0||i>o-1)for(let n=0;n<p;n++)for(let r=0;r<l;r++){const s=r+n*b[2]+e*b[1]+t*b[0];d.values[s]=a}else if("bilinear"===s){const n=Math.floor(i),s=Math.ceil(i),o=i-n;for(let i=0;i<p;i++){const c=p>1?r*(u-1)+i*k:.5*(r+x)*(u-1);if(c<0||c>u-1){for(let n=0;n<l;n++){const r=n+i*b[2]+e*b[1]+t*b[0];d.values[r]=a}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let r=0;r<l;r++){let a=r+h*y[2]+n*y[1]+w*y[0];const u=g[a];a=r+f*y[2]+n*y[1]+w*y[0];const l=g[a];a=r+h*y[2]+s*y[1]+w*y[0];const c=g[a];a=r+f*y[2]+s*y[1]+w*y[0];const p=u+(l-u)*m,x=c+(g[a]-c)*m;a=r+i*b[2]+e*b[1]+t*b[0],d.values[a]=p+(x-p)*o}}}else for(let n=0;n<p;++n){const s=p>1?r*(u-1)+n*k:.5*(r+x)*(u-1);if(s<0||s>u-1){for(let r=0;r<l;r++){const s=r+n*b[2]+e*b[1]+t*b[0];d.values[s]=a}continue}const o=Math.round(s),c=Math.round(i);for(let r=0;r<l;r++){const s=r+o*y[2]+c*y[1]+w*y[0],a=r+n*b[2]+e*b[1]+t*b[0];d.values[a]=g[s]}}}}return d.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,sliceSize:i,strides:o,outputSize:u}=Na(0,t,n);return this.scatter(t,e,n,u,i,a,s,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=ka(t,e);if(0===a)return ks([],s,t.dtype);const u=new Vn([a,i],t.dtype),l=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<a;e++){const n=[];let s=0;for(let t=0;t<r;t++){const a=l[e*r+t];s+=a*o[t],n.push(a)}if(s<0||s>=t.size/i)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<i;t++)u.values[e*i+t]=c[s*i+t]}return u.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=Na(0,t,n),u=Ro(0);return this.scatter(t,e,n,o,a,s,r,i,u,!0)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return xo(t.shape,1,t.dtype)}zerosLike(t){const e=I(t.dtype,f(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return jc(t,e,n)}scatter(t,e,n,r,s,a,i,o,u,l){const c=[r/s,s],h=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return ks([],n,e.dtype);const d=new Vn(c,e.dtype);d.values.fill(this.readSync(u.dataId)[0]);for(let t=0;t<a;t++){const a=[];let u=0;for(let e=0;e<i;e++){const n=h[t*i+e];a.push(n),u+=n*o[e]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=p[t*s+n]:d.values[u*s+n]=0===e.rank?p[0]:p[t*s+n]}return d.toTensor().reshape(n)}}function kw(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Nw={kernelName:ct,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let r=new Float32Array(f(e.shape));if("complex64"!==e.dtype)r=kw(n.data.get(e.dataId).values);else{const t=n.data.get(e.dataId),s=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values;for(let t=0;t<i.length;t++){const e=i[t],n=o[t];r[t]=Math.hypot(e,n)}}return n.makeOutput(r,e.shape,"float32")}};function Iw(t){return(e,n,r,s,a)=>{const i=io(e,n),o=i.length,u=_(i),l=N(a,f(i)),c=e.length,h=n.length,p=_(e),d=_(n),m=so(e,i),g=so(n,i);if(m.length+g.length===0)for(let e=0;e<l.length;++e)l[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<l.length;++e){const n=W(e,o,u),a=n.slice(-c);m.forEach((t=>a[t]=0));const i=P(a,c,p),f=n.slice(-h);g.forEach((t=>f[t]=0));const y=P(f,h,d);l[e]=t(r[i],s[y])}return[l,i]}}function $w(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const Cw={kernelName:Rt,backendName:"cpu",kernelFunc:$w};function Sw(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Tw={kernelName:oe,backendName:"cpu",kernelFunc:Sw};function Ew(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Aw={kernelName:Me,backendName:"cpu",kernelFunc:Ew};function Rw(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Sw({inputs:{x:s},backend:n});const t=Qo(s.shape),e=Rw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=$w({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=Ew({inputs:{input:s},backend:n}),e=Rw({inputs:{x:t},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(t),e}if(!$(s.dtype,a)){const t=Sw({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===a){const t=n.data.get(s.dataId).values,e=An([0],s.dtype),[r,a]=Iw(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const Dw={kernelName:Tt,backendName:"cpu",kernelFunc:Rw};function _w(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;mw([a,i],t);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c=r||a.dtype,[h,p]=e(a.shape,i.shape,u,l,c);return o.makeTensorInfo(p,c,h)}:({inputs:t,backend:s})=>{const{a:a,b:i}=t,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const t=Rw({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=Rw({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=$w({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=e(a.shape,i.shape,t,n,s);return o.makeTensorInfo(l,s,u)}}}function Fw(t){return(e,n,r,s,a,i)=>{const o=io(e,n),u=f(o),l=o.length,c=_(o),h=N("float32",u),p=N("float32",u),d=so(e,o),m=so(n,o),g=Vc(r,s),y=Vc(a,i),b=e.length,x=_(e),w=n.length,v=_(n);if(d.length+m.length===0)for(let e=0;e<h.length;e++){const n=e%g.length,r=e%y.length,s=t(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);h[e]=s.real,p[e]=s.imag}else for(let e=0;e<h.length;e++){const n=W(e,l,c),r=n.slice(-b);d.forEach((t=>r[t]=0));const s=P(r,b,x),a=n.slice(-w);m.forEach((t=>a[t]=0));const i=P(a,w,v),o=t(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);h[e]=o.real,p[e]=o.imag}return[h,p,o]}}const Ow=Iw(((t,e)=>t+e)),Mw=Fw(((t,e,n,r)=>({real:t+n,imag:e+r}))),Lw=_w(dt,Ow,Mw),zw={kernelName:dt,backendName:"cpu",kernelFunc:Lw};function Bw(t){return(e,n,r)=>{const s=N(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}function Pw(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(mw(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=f(i.shape),c=n||i.dtype,h=I(c,l);for(let t=0;t<l;++t)h[t]=e(u[t],s);return o.makeTensorInfo(i.shape,c,h)}}function Ww(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(mw(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=e(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}const Vw=Bw((t=>Math.ceil(t))),Uw=Ww(Et,Vw),Gw={kernelName:Et,backendName:"cpu",kernelFunc:Uw},Hw=Bw((t=>Math.exp(t))),jw=Ww(Jt,Hw),qw={kernelName:Jt,backendName:"cpu",kernelFunc:jw},Kw=Bw((t=>Math.expm1(t))),Xw=Ww(Zt,Kw),Yw={kernelName:Zt,backendName:"cpu",kernelFunc:Xw},Jw=Bw((t=>Math.floor(t))),Zw=Ww(ne,Jw),Qw={kernelName:ne,backendName:"cpu",kernelFunc:Zw},tv=Bw((t=>Math.log(t))),ev=Ww(de,tv),nv={kernelName:de,backendName:"cpu",kernelFunc:ev};function rv(t,e,n,r){const s=N(r,f(n));for(let n=0;n<s.length;++n){const r=n*e;let a=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>a&&(a=e)}s[n]=a}return s}const sv=Iw(((t,e)=>t*e)),av=Fw(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),iv=_w(Ce,sv,av),ov={kernelName:Ce,backendName:"cpu",kernelFunc:iv},uv=Iw(((t,e)=>t!==e?1:0)),lv=_w(Te,uv,null,"bool"),cv={kernelName:Te,backendName:"cpu",kernelFunc:lv},hv=Bw((t=>1/Math.sqrt(t))),pv=Ww(He,hv),dv={kernelName:He,backendName:"cpu",kernelFunc:pv};function fv(t,e,n,r,s){const a=_a(r,e,n),i=f(n),o=_(r);if(a){const n=Fa(e,o);return t.subarray(n,n+i)}const u=N(s,i);for(let s=0;s<i;++s){const a=P(W(s,n.length,_(n)).map(((t,n)=>t+e[n])),r.length,o);u[s]=t[a]}return u}function mv(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:a,size:i}=r;mw(s,"slice");const[o,u]=Oa(s,a,i);Ia(s,o,u);const l=fv(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const gv={kernelName:Ke,backendName:"cpu",kernelFunc:mv},yv=Iw(((t,e)=>{const n=t-e;return n*n})),bv=_w(sn,yv),xv={kernelName:sn,backendName:"cpu",kernelFunc:bv},wv=Iw(((t,e)=>t-e)),vv=Fw(((t,e,n,r)=>({real:t-n,imag:e-r}))),kv=_w(on,wv,vv),Nv={kernelName:on,backendName:"cpu",kernelFunc:kv};function Iv(t,e,n,r,s){const a=e.length,i=f(e),o=_(e),u=_(s),l=N(n,f(s));for(let e=0;e<i;++e){const n=W(e,a,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];l[P(s,a,u)]=t[e]}return l}function $v(t,e,n,r){const s=v(e,n)[0],a=[1,n[0],1];for(let t=0;t<s;t++)a[0]*=n[t];a[1]=n[s];for(let t=s+1;t<n.length;t++)a[2]*=n[t];const i={},o=new Int32Array(n[s]),u=new Vn(a,r,t),l=[],c=1===a[0]&&1===a[2];for(let e=0;e<n[s];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)t.push(u.get(n,e,r));n=t.join(",")}if(void 0!==i[n])o[e]=i[n];else{const t=Object.keys(i).length;i[n]=t,o[e]=t,l.push(e)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new Vn(h,r);l.forEach(((t,e)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,t,r),n,e,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}Ha("cpu",(()=>new vw),1);const Cv=Pw(Xt,(t=>t>=0?t:Math.exp(t)-1)),Sv={kernelName:Xt,backendName:"cpu",kernelFunc:Cv},Tv=Iw(((t,e)=>t<0?e*t:t));function Ev(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;mw([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=Tv(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const Av={kernelName:Oe,backendName:"cpu",kernelFunc:Ev},Rv=Pw(ze,(t=>Math.max(0,t))),Dv={kernelName:ze,backendName:"cpu",kernelFunc:Rv},_v=Pw(Ve,(t=>Math.min(Math.max(0,t),6))),Fv={kernelName:Ve,backendName:"cpu",kernelFunc:_v};function Ov(t,e,n,r){if("linear"===n)return Sw({inputs:{x:e},backend:t});if("relu"===n)return Rv({inputs:{x:e},backend:t});if("elu"===n)return Cv({inputs:{x:e},backend:t});if("relu6"===n)return _v({inputs:{x:e},backend:t});if("prelu"===n)return Ev({inputs:{x:e,alpha:r},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Mv(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,i=f(s.shape),o=w(a,i),u=f(o);c(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Lv={kernelName:Be,backendName:"cpu",kernelFunc:Mv};function zv(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a}=e,{transposeA:i,transposeB:o}=r;mw([s,a],"matMul");const u=s.shape.length,l=a.shape.length,h=i?s.shape[u-2]:s.shape[u-1],p=o?a.shape[l-1]:a.shape[l-2],d=i?s.shape[u-1]:s.shape[u-2],m=o?a.shape[l-2]:a.shape[l-1],g=s.shape.slice(0,-2),y=a.shape.slice(0,-2),b=f(g),x=f(y);c(u>=2&&l>=2&&(b===x||1===b||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(b>x?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([d,m]);c(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[x,m,p]:[x,p,m],k=Mv({inputs:{x:s},backend:n,attrs:{shape:i?[b,h,d]:[b,d,h]}}),N=Mv({inputs:{x:a},backend:n,attrs:{shape:v}}),I=i?k.shape[1]:k.shape[2],$=i?k.shape[2]:k.shape[1],C=o?N.shape[1]:N.shape[2],S=Math.max(b,x),T=n.data.get(k.dataId).values,E=n.data.get(N.dataId).values,A=_(k.shape),R=_(N.shape),[D,F,O]=i?[A[0],1,A[1]]:[A[0],A[1],1],[M,L,z]=o?[1,R[1],R[0]]:[R[1],1,R[0]],B=$*C,P=aa([S,$,C],k.dtype),W=P.values,V=n.blockSize;for(let t=0;t<S;t++)for(let e=0;e<$;e+=V)for(let n=0;n<C;n+=V)for(let r=0;r<I;r+=V){const s=Math.min(e+V,$),a=Math.min(n+V,C),i=Math.min(r+V,I);for(let o=e;o<s;o++)for(let e=n;e<a;e++){let n=0;for(let s=r;s<i;s++){const r=Math.min(t,b-1)*D,a=Math.min(t,x-1)*z;n+=T[r+o*F+s*O]*E[s*M+e*L+a]}W[t*B+(o*C+e)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(w,P.dtype,P.values)}const Bv={kernelName:$t,backendName:"cpu",kernelFunc:zv},Pv={kernelName:xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:l,activation:c}=r;let h,p,d;const f=[];h=zv({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=Lw({inputs:{a:h,b:i},backend:n}),f.push(h),h=p),c&&(d=Ov(n,h,c,o),f.push(h),h=d);for(const t of f)n.disposeIntermediateTensorInfo(t);return h}},Wv=Pw(ht,(t=>Math.acos(t))),Vv={kernelName:ht,backendName:"cpu",kernelFunc:Wv},Uv=Pw(pt,(t=>Math.acosh(t))),Gv={kernelName:pt,backendName:"cpu",kernelFunc:Uv},Hv=Pw(yt,(t=>Math.asin(t))),jv={kernelName:yt,backendName:"cpu",kernelFunc:Hv},qv=Pw(bt,(t=>Math.asinh(t))),Kv={kernelName:bt,backendName:"cpu",kernelFunc:qv},Xv=Pw(xt,(t=>Math.atan(t))),Yv={kernelName:xt,backendName:"cpu",kernelFunc:Xv},Jv=Pw(wt,(t=>Math.atanh(t))),Zv={kernelName:wt,backendName:"cpu",kernelFunc:Jv};function Qv(t,e,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=aa(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let y=0;y<s.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),N=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<p;n+=l){const i=t[s+n*r[2]+e];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[N+n*x+e]="avg"===a?b/w:y}}}return m}function tk(t,e,n,r,s=!1,a=!1){const i=aa(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=aa(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(t,n,o,e);l>w&&(w=l,v=s?a?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:i*p+u)}}i.set(v,t,n,o,e)}}return i}const ek={kernelName:kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;mw(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;c($i(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=mi(s.shape,a,i,1,o,u);let h;if(1===l.filterWidth&&1===l.filterHeight&&m(l.inShape,l.outShape))h=Sw({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=_(s.shape),r=Qv(t,s.shape,s.dtype,e,l,"avg");h=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return h}},nk={kernelName:Nt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,i=a;mw([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=mi(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=aa(i.shape,"float32"),k=1/(d*f),N=n.data.get(s.dataId).values,I=aa(s.shape,"float32",N);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=I.get(t,r,s,e))}}v.set(i*k,t,n,r,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},rk={kernelName:se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:a,offset:i,mean:o,variance:u}=e;c(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),c(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),c(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),mw([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const h=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=d.length,w=p.length;let v=0,k=0,N=0,I=0;for(let t=0;t<h.length;++t)g[t]=m[v++]+(h[t]-p[k++])*f[N++]/Math.sqrt(d[I++]+l),v>=y&&(v=0),k>=w&&(k=0),N>=b&&(N=0),I>=x&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,g)}},sk=Pw(At,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),ak={kernelName:At,backendName:"cpu",kernelFunc:sk};function ik(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const ok={kernelName:le,backendName:"cpu",kernelFunc:ik};function uk(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=v(s,e[0].shape)[0];let i=Bi(e.map((t=>t.shape)),a);if(0===f(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>f(t.shape)>0));if(1===o.length)return o[0];if(zi(o.map((t=>t.shape)),a),"complex64"===o[0].dtype){const t=o.map((t=>Ew({inputs:{input:t},backend:n}))),e=o.map((t=>ik({inputs:{input:t},backend:n}))),r=uk({inputs:t,backend:n,attrs:{axis:a}}),s=uk({inputs:e,backend:n,attrs:{axis:a}}),i=$w({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map((t=>{const e=f(t.shape.slice(a));return Mv({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}));i=Bi(u.map((t=>t.shape)),1);const l=N(o[0].dtype,f(i));if(1===u[0].shape[0]){let t=0;u.forEach((e=>{const r=n.data.get(e.dataId).values,s=f(e.shape);l.set(r,t),t+=s}))}else{let t=0;u.forEach((e=>{const r=n.data.get(e.dataId).values;let s=0;for(let n=0;n<e.shape[0];++n){const a=n*i[1]+t;for(let t=0;t<e.shape[1];++t)l[a+t]=r[s++]}t+=e.shape[1]}))}const c=Bi(o.map((t=>t.shape)),a),h=n.makeTensorInfo(c,e[0].dtype,l);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const lk={kernelName:Dt,backendName:"cpu",kernelFunc:uk};function ck(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;mw([s,a],"conv2d");const h=Ci(u),p=yi(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new Vn(p.outShape,s.dtype),v=_(s.shape),k=_(a.shape),N=v[0],I=x?v[1]:v[2],$=x?v[2]:1,C=x?1:v[1],S=w.strides[0],T=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(s.dataId).values,D=n.data.get(a.dataId).values,F=w.values;for(let t=0;t<p.batchSize;++t){const e=t*N,n=t*S;for(let t=0;t<p.outHeight;++t){const r=n+t*T,s=t*p.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],i=e+n*I;for(let t=0;t<p.outWidth;++t){const e=r+t*E,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const s=i+r*$;let o=a+t*k[1];for(let t=0;t<p.inChannels;++t){const n=R[s+t*C];for(let t=0;t<p.outChannels;++t)F[e+t*A]+=n*D[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const hk={kernelName:_t,backendName:"cpu",kernelFunc:ck},pk={kernelName:Ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;mw([s,a],"conv2dBackpropFilter");const h=Ci(u),p=yi(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Vn(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=new Vn(s.shape,s.dtype,v),I=new Vn(a.shape,a.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((w-t)/d)),n=Math.min(p.outHeight,(p.inHeight+w-t)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-w;for(let t=s;t<a;++t){const n=r+t*f-x;u+=y?N.get(l,e,n,i)*I.get(l,c,t,o):N.get(l,i,e,n)*I.get(l,o,c,t)}}b.set(u,t,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},dk={kernelName:Ot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;mw([s,a],"conv2dBackpropInput");const h=_(a.shape),p=_(s.shape);let d=Ci(l);const f=yi(i,a.shape,o,1,u,c,!1,d),m=new Vn(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:$,inHeight:C,inWidth:S,outChannels:T,outHeight:E,outWidth:A,strideHeight:R,strideWidth:D}=f;d=f.dataFormat;const F=N-1-f.padInfo.top,O=I-1-f.padInfo.left,M="channelsLast"===d,L=m.strides[0],z=M?m.strides[1]:m.strides[2],B=M?m.strides[2]:1,P=M?1:m.strides[1],W=p[0],V=M?p[1]:p[2],U=M?p[2]:1,G=M?1:p[1];for(let t=0;t<k;++t)for(let e=0;e<$;++e)for(let n=0;n<C;++n){const r=n-F,s=Math.max(0,Math.ceil(r/R)),a=Math.min(E,(N+r)/R);for(let i=0;i<S;++i){const o=i-O,u=Math.max(0,Math.ceil(o/D)),l=Math.min(A,(I+o)/D);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=W*t+V*n+U*r,i=x*(N-1-s)+w*(I-1-(r*D-o))+v*e;for(let t=0;t<T;++t)c+=y[a+G*t]*b[i+t]}}g[L*t+z*n+B*i+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},fk={kernelName:Mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dilations:u}=r;mw([s,a],"conv3d");const l=bi(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new Vn(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=w.values,I=_(s.shape),$=_(a.shape);for(let t=0;t<l.batchSize;++t){const e=t*I[0],n=t*w.strides[0];for(let t=0;t<l.outDepth;++t){const r=n+t*w.strides[1],s=t*l.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=l.inDepth)continue;const a=t*$[0],i=e+n*I[1];for(let t=0;t<l.outHeight;++t){const e=r+t*w.strides[2],n=t*l.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=l.inHeight)continue;const s=a+t*$[1],o=i+r*I[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-b;for(let t=0;t<p;++t){const e=r+t*m;if(e<0||e>=l.inWidth)continue;const a=s+t*$[2],i=o+e*l.inChannels;let u=a;for(let t=0;t<l.inChannels;++t){const e=v[i+t];for(let t=0;t<l.outChannels;++t)N[n+t]+=e*k[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},mk={kernelName:Lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,pad:o,filterShape:u}=r;mw([s,a],"conv3dBackpropFilterV2");const l=_(s.shape),c=_(a.shape),h=bi(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Vn(h.filterShape,"float32"),x=b.values,[w,v,k,N]=b.strides,I=n.data.get(a.dataId).values,[$,C,S,T]=c,E=n.data.get(s.dataId).values,[A,R,D,F]=l,O=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((O-t)/p)),n=Math.min(h.outDepth,(h.inDepth+O-t)/p),r=t*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((L-s)/d)),i=Math.min(h.outHeight,(h.inHeight+L-s)/d),o=s*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*N+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*$;for(let m=e;m<n;++m){const e=(t+m*p-O)*R+h,n=m*C+y;for(let t=a;t<i;++t){const a=(s+t*d-L)*D+e,i=t*S+n;for(let t=u;t<l;++t){const e=t*T+i;g+=E[(r+t*f-M)*F+a+o]*I[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},gk={kernelName:zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{pad:i,strides:o,inputShape:u}=r;mw([s],"conv3dBackpropInputV2");const l=_(s.shape),c=_(a.shape),h=bi(u,a.shape,o,1,i),p=new Vn(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=l,N=n.data.get(a.dataId).values,[I,$,C,S]=c,{batchSize:T,filterDepth:E,filterHeight:A,filterWidth:R,inChannels:D,inDepth:F,inHeight:O,inWidth:M,outChannels:L,outDepth:z,outHeight:B,outWidth:P,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=E-1-h.padInfo.front,H=A-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let t=0;t<T;++t)for(let e=0;e<D;++e)for(let n=0;n<F;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),a=Math.min(z,(E+r)/W);for(let i=0;i<O;++i){const o=i-H,u=Math.max(0,Math.ceil(o/V)),l=Math.min(B,(A+o)/V);for(let c=0;c<M;++c){const h=c-j,p=Math.max(0,Math.ceil(h/U)),T=Math.min(P,(R+h)/U);let D=0;for(let n=s;n<a;++n){const s=n*W-r;for(let r=u;r<l;++r){const a=r*V-o;for(let i=p;i<T;++i){const o=x*t+w*n+v*r+k*i,u=I*(E-1-s)+$*(A-1-a)+C*(R-1-(i*U-h))+S*e;for(let t=0;t<L;++t)D+=b[o+t]*N[u+t]}}}d[f*t+m*n+g*i+y*c+e]=D}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},yk=Pw(Bt,(t=>Math.cos(t))),bk={kernelName:Bt,backendName:"cpu",kernelFunc:yk},xk=Pw(Pt,(t=>Math.cosh(t))),wk={kernelName:Pt,backendName:"cpu",kernelFunc:xk};function vk(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;mw([s,a],"depthwiseConv2DNative");const h=_(s.shape),p=_(a.shape);let d=u;null==d&&(d=[1,1]),c($i(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=yi(s.shape,a.shape,i,d,o,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,w=x.left,v=x.top,k=f.outChannels/f.inChannels,N=new Vn(f.outShape,s.dtype),I=n.data.get(s.dataId).values,$=n.data.get(a.dataId).values,C=N.values;for(let t=0;t<f.batchSize;++t){const e=t*h[0],n=t*N.strides[0];for(let t=0;t<f.outHeight;++t){const r=n+t*N.strides[1],s=t*f.strideHeight-w;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=f.inHeight)continue;const a=t*p[0],i=e+n*h[1];for(let t=0;t<f.outWidth;++t){const e=r+t*N.strides[2],n=t*f.strideWidth-v;for(let t=0;t<g;++t){const r=n+t*b;if(r<0||r>=f.inWidth)continue;const s=a+t*p[1],o=i+r*f.inChannels;let u=e,l=s;for(let t=0;t<f.inChannels;++t){const e=I[o+t];for(let t=0;t<k;++t)C[u+t]+=e*$[l+t];u+=k,l+=k}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const kk={kernelName:Vt,backendName:"cpu",kernelFunc:vk},Nk={kernelName:Ut,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;mw([s,a],"depthwiseConv2dNativeBackpropFilter");const h=yi(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Vn(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Vn(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,N=new Vn(a.shape,a.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(h.outHeight,(h.inHeight+b-t)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=s;t<a;++t){const n=r+t*d-y;l+=v.get(u,e,n,o)*N.get(u,c,t,i)}}g.set(l,t,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ik={kernelName:Gt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;mw([s,a],"depthwiseConv2DNativeBackpropInput");const h=_(s.shape),p=_(a.shape),d=yi(c,a.shape,i,o,u,l,!0),f=new Vn(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,N=n.data.get(a.dataId).values,[I,$,C]=p,{batchSize:S,filterHeight:T,filterWidth:E,inChannels:A,inHeight:R,inWidth:D,outChannels:F,outHeight:O,outWidth:M,strideHeight:L,strideWidth:z}=d,B=T-1-d.padInfo.top,P=E-1-d.padInfo.left,W=F/A;for(let t=0;t<S;++t)for(let e=0;e<A;++e)for(let n=0;n<R;++n){const r=n-B,s=Math.max(0,Math.ceil(r/L)),a=Math.min(O,(T+r)/L);for(let i=0;i<D;++i){const o=i-P,u=Math.max(0,Math.ceil(o/z)),l=Math.min(M,(E+o)/z);let c=0;for(let n=s;n<a;++n){const s=n*L-r;for(let r=u;r<l;++r){const a=w*t+v*n+k*r,i=I*(T-1-s)+$*(E-1-(r*z-o))+C*e;for(let t=0;t<W;++t)c+=x[a+(e*W+t)]*N[i+t]}}m[g*t+y*n+b*i+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},$k={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:a,pad:i,dilations:o}=n,u=e,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:N,filterWidth:$,dilationHeight:C,dilationWidth:S,outShape:T}=fi(r.shape,s.shape,a,i,"NHWC",o),E=f(T),A=T.length,R=I(r.dtype,E);for(let t=0;t<d;++t)for(let e=0;e<b;++e){const n=e*v-w.top;for(let a=0;a<x;++a){const i=a*k-w.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const a=n+e*C;if(a>=0&&a<m)for(let n=0;n<$;++n){const d=i+n*S;if(d>=0&&d<g){const i=P([t,a,d,o],c,_(r.shape)),f=P([e,n,o],p,_(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}R[P([t,e,a,o],A,_(T))]=u}}}return{dataId:u.write(An(R,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},Ck={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:u}=n,l=e,h=O(r.shape,l.data.get(r.dataId).values),p=O(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:$,outShape:C}=fi(r.shape,s.shape,i,o,"NHWC",u);c(a.rank===C.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${C.length}, but got ${a.rank}`));const S=O(C,l.data.get(a.dataId).values),T=z(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let r=0;r<b;++r){const s=r*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let e=0;e<k;++e){const r=n+e*I;if(r>=0&&r<f)for(let n=0;n<N;++n){const l=s+n*$;if(l>=0&&l<m){const s=h[t][r][l][a]+p[e][n][a];s>i&&(i=s,o=e,u=n)}}}T[o][u][a]+=S[t][e][r][a]}}}return{dataId:l.write(An(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Sk={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:u}=n,l=e,h=O(r.shape,l.data.get(r.dataId).values),p=O(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:$,outShape:C}=fi(r.shape,s.shape,i,o,"NHWC",u);c(a.rank===C.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${C.length}, but got ${a.rank}`));const S=O(C,l.data.get(a.dataId).values),T=z(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let r=0;r<b;++r){const s=r*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let e=0;e<k;++e){const r=n+e*I;if(r>=0&&r<f)for(let n=0;n<N;++n){const l=s+n*$;if(l>=0&&l<m){const s=h[t][r][l][a]+p[e][n][a];s>i&&(i=s,o=r,u=l)}}}T[t][o][u][a]+=S[t][e][r][a]}}}return{dataId:l.write(An(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Tk=Iw(((t,e)=>t/e)),Ek=_w(Kt,Tk),Ak={kernelName:Kt,backendName:"cpu",kernelFunc:Ek},Rk=Pw(Yt,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+.3275911*n);return e*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-n*n))})),Dk={kernelName:Yt,backendName:"cpu",kernelFunc:Rk};function _k(t,e,n){const r=t.shape,s=r[0],a=r[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=f(l),h=N("float32",c),p=N("float32",c);for(let t=0;t<s;t++){const r=mv({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,a]}}),s=mv({inputs:{x:u},backend:n,attrs:{begin:[t,0],size:[1,a]}}),i=$w({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=Fk(i,e,n),d=Vc(l,c);for(let e=0;e<a;e++){const n=Uc(d,e);h[t*a+e]=n.real,p[t*a+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),g=$w({inputs:{real:d,imag:m},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}function Fk(t,e,n){const r=f(t.shape),s=n.data.get(t.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((u=r)&u-1)){const s=Ok(a,i,r,e,n),u=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(u,"float32",s.real),e=n.makeTensorInfo(u,"float32",s.imag),a=n.makeTensorInfo([],"float32",(o=r,"string"=="float32"?Dn(o):An([o],"float32"))),i=Sw({inputs:{x:a},backend:n}),l=Ak.kernelFunc({inputs:{a:t,b:a},backend:n}),c=Ak.kernelFunc({inputs:{a:e,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:h,imag:p}}return s}return function(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}(function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let a=0,i=0;for(let r=0;r<e;r++){const o=Hc(s*r,e,n),u=Uc(t,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=e,i/=e),Gc(r,a,i,s)}return r}(Vc(a,i),r,e));var o,u}function Ok(t,e,n,r,s){if(1===n)return{real:t,imag:e};const a=Vc(t,e),i=n/2,o=function(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=$w({inputs:{real:h,imag:p},backend:s}),f=function(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=$w({inputs:{real:b,imag:x},backend:s}),v=Ok(u,l,i,r,s),k=v.real,N=v.imag,I=[k.length],$=s.makeTensorInfo(I,"float32",k),C=s.makeTensorInfo(I,"float32",N),S=$w({inputs:{real:$,imag:C},backend:s}),T=Ok(m,g,i,r,s),E=T.real,A=T.imag,R=[E.length],D=s.makeTensorInfo(R,"float32",E),_=s.makeTensorInfo(R,"float32",A),F=$w({inputs:{real:D,imag:_},backend:s}),O=function(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),B=$w({inputs:{real:L,imag:z},backend:s}),P=iv({inputs:{a:B,b:F},backend:s}),W=Lw({inputs:{a:S,b:P},backend:s}),V=kv({inputs:{a:S,b:P},backend:s}),U=Ew({inputs:{input:W},backend:s}),G=Ew({inputs:{input:V},backend:s}),H=ik({inputs:{input:W},backend:s}),j=ik({inputs:{input:V},backend:s}),q=uk({inputs:[U,G],backend:s,attrs:{axis:0}}),K=uk({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Mk={kernelName:Qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=f(r.shape),a=r.shape[r.shape.length-1],i=Mv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=_k(i,!1,n),u=Mv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Lk={kernelName:te,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:a}=n,i=a||A(s),o=I(i,f(r));return function(t,e,n){t.fill(e)}(o,s),e.makeTensorInfo(r,i,o)}},zk={kernelName:ee,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,a=N(r.dtype,f(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<i;t++){const e=t*u*o*l;for(let t=0;t<o;t++){const n=t*(u*l);for(let r=0;r<u;r++){const s=r*l;for(let o=0;o<l;o++){const h=[i,t,r,o][2],p=Math.round(u-h),d=e+n+s+o;let f=c[d];p>=0&&p<u&&(f=c[e+n+p*l+o]),a[d]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Bk={kernelName:wn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=ck({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=f;f=Lw({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=f;f=Ov(n,f,d,o),n.disposeIntermediateTensorInfo(t)}return f}},Pk={kernelName:vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=vk({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=f;f=Lw({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=f;f=Ov(n,f,d,o),n.disposeIntermediateTensorInfo(t)}return f}},Wk={kernelName:ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=f(r.shape),a=r.shape[r.shape.length-1],i=Mv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=_k(i,!0,n),u=Mv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Vk=Pw(ce,(t=>Number.isFinite(t)?1:0),"bool"),Uk={kernelName:ce,backendName:"cpu",kernelFunc:Vk},Gk=Pw(he,(t=>Math.abs(t)===1/0?1:0),"bool"),Hk={kernelName:he,backendName:"cpu",kernelFunc:Gk},jk=Pw(pe,(t=>Number.isNaN(t)?1:0),"bool"),qk={kernelName:pe,backendName:"cpu",kernelFunc:jk},Kk=Pw(fe,(t=>Math.log1p(t))),Xk={kernelName:fe,backendName:"cpu",kernelFunc:Kk},Yk=Pw(me,(t=>t?0:1),"bool"),Jk={kernelName:me,backendName:"cpu",kernelFunc:Yk},Zk={kernelName:ye,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n;let o=r.shape;const u=o.length,l=v(s,o);let c=l;const h=ni(c,u);let p=i.data.get(r.dataId).values;if(null!=h){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o[h[e]];p=Iv(p,o,r.dtype,h,t),c=si(c.length,u),o=t}mw(r,"max"),ei("max",c,u);const[d,m]=Qa(o,c),g=rv(p,f(m),d,r.dtype),y=i.write(g,d,r.dtype);let b=d;return a&&(b=ti(d,l)),{dataId:y,shape:b,dtype:r.dtype}}},Qk={kernelName:xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;mw(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;c($i(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=mi(s.shape,a,i,1,o,u);let h;if(1===l.filterWidth&&1===l.filterHeight&&m(l.inShape,l.outShape))h=Sw({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=_(s.shape),r=Qv(t,s.shape,s.dtype,e,l,"max");h=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return h}},tN={kernelName:we,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:i}=e,o=a;mw([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=mi(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=aa(p.outShape,o.dtype,tk(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,N=aa(o.shape,"float32"),I=n.data.get(s.dataId).values,$=aa(s.shape,"float32",I);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-k,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(t,r,o,e)===n*w+s?1:0;0!==u&&(i+=$.get(t,r,o,e)*u)}}N.set(i,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},eN={kernelName:ke,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,u=n;mw(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=mi(r.shape,s,a,[1,1],i),[h,p]=function(t,e,n,r,s){const a=Qv(t,0,n,_(e),s,"max"),i=tk(t,e,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},nN={kernelName:$e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,mode:i}=r;mw(s,"mirrorPad");const o=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=a.map((t=>t[0])),l=a.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=_(s.shape),m=f(o),g=o.length,y=_(o),b=N(s.dtype,m);for(let t=0;t<m;t++){let e=W(t,g,y);for(let t=0;t<g;t++)e[t]<u[t]?e[t]=2*u[t]-e[t]-c:e[t]>=l[t]&&(e[t]=2*(l[t]-1)-e[t]+c);e=e.map(((t,e)=>t-u[e]));const n=P(e,p,d);b[t]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},rN=rc,sN={kernelName:Ae,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=e;mw(r,"NonMaxSuppressionPadded");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=rN(c,h,a,i,o,u);return[p,d]}},aN=sc,iN={kernelName:Re,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e;mw(r,"NonMaxSuppressionWithScore");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=aN(c,h,p,d,f,m);return[g,y]}},oN={kernelName:Fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,constantValue:i}=r;mw(s,"pad");const o=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=a.map((t=>t[0])),l=n.data.get(s.dataId).values,c=f(s.shape),h=s.shape.length,p=_(s.shape),d=f(o),m=o.length,g=_(o),y=N(s.dtype,d);0!==i&&y.fill(i);for(let t=0;t<c;t++)y[P(W(t,h,p).map(((t,e)=>t+u[e])),m,g)]=l[t];return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},uN=Pw(Le,(t=>1/t)),lN={kernelName:Le,backendName:"cpu",kernelFunc:uN},cN={kernelName:bn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,u=N(r.dtype,f(r.shape)),[l,c,h,p]=r.shape,[d,m]=Oc(i,c,h),g=Math.sin(s),y=Math.cos(s),b=o.data.get(r.dataId).values;for(let t=0;t<l;t++){const e=t*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[l,t,r,i],f=o[2],x=o[1];let w=(f-d)*y-(x-m)*g,v=(f-d)*g+(x-m)*y;w=Math.round(w+d),v=Math.round(v+m);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=b[e+v*(h*p)+w*p+i]),u[e+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},hN=Pw(Ge,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),pN={kernelName:Ge,backendName:"cpu",kernelFunc:hN},dN=Pw(qe,(t=>t>=0?1.0507009873554805*t:1.7580993408473768*(Math.exp(t)-1))),fN={kernelName:qe,backendName:"cpu",kernelFunc:dN},mN=Pw(Ze,(t=>1/(1+Math.exp(-t)))),gN={kernelName:Ze,backendName:"cpu",kernelFunc:mN},yN=Pw(Je,(t=>t<0?-1:t>0?1:0)),bN={kernelName:Je,backendName:"cpu",kernelFunc:yN},xN=Pw(Xe,(t=>Math.sin(t))),wN={kernelName:Xe,backendName:"cpu",kernelFunc:xN},vN=Pw(Ye,(t=>Math.sinh(t))),kN={kernelName:Ye,backendName:"cpu",kernelFunc:vN},NN=Math.log(1.1920928955078125e-7)+2,IN=Pw(Qe,(t=>{const e=t>-NN,n=t<NN,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),$N={kernelName:Qe,backendName:"cpu",kernelFunc:IN};function CN(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:a}=n;mw(s,"transpose");const i=s.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=s.shape[a[t]];const u=Iv(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const SN={kernelName:hn,backendName:"cpu",kernelFunc:CN},TN={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:a,paddings:i}=r;mw([s],"spaceToBatchND");const o=f(a),u=[[0,0]];u.push(...i);for(let t=1+a.length;t<s.shape.length;++t)u.push([0,0]);const l=oN.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Mc(l.shape,a,o,!1),h=Lc(c.length,a.length,!1),p=zc(l.shape,a,o,!1),d=Mv({inputs:{x:l},backend:n,attrs:{shape:c}}),m=CN({inputs:{x:d},backend:n,attrs:{perm:h}}),g=Mv({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}},EN=Pw(tn,(t=>Math.sqrt(t))),AN={kernelName:tn,backendName:"cpu",kernelFunc:EN},RN={kernelName:an,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;mw(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];a[t]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},DN=Pw(gn,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),_N={kernelName:gn,backendName:"cpu",kernelFunc:DN},FN=Pw(un,(t=>Math.tan(t))),ON={kernelName:un,backendName:"cpu",kernelFunc:FN},MN=Pw(ln,(t=>Math.tanh(t))),LN=[Pv,Nw,Vv,Gv,zw,jv,Kv,Yv,Zv,ek,nk,Bv,rk,Dw,Gw,ak,Cw,lk,pk,dk,hk,mk,gk,fk,bk,wk,kk,Nk,Ik,$k,Sk,Ck,Ak,Sv,Dk,qw,Yw,Mk,Lk,zk,Qw,Bk,Pk,Tw,Wk,ok,Uk,Hk,qk,nv,Xk,Jk,Qk,tN,eN,Zk,nN,ov,sN,iN,cv,oN,Av,Aw,lN,Dv,Fv,Lv,cN,pN,dv,fN,gN,bN,wN,kN,gv,$N,TN,AN,RN,xv,_N,Nv,ON,{kernelName:ln,backendName:"cpu",kernelFunc:MN},SN,{kernelName:pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;mw(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=$v(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const t of LN)Sn(t);const zN={},BN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function PN(t){if(!(t in zN)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete zN[t]}),!1),1===t?e.getContext("webgl",BN)||e.getContext("experimental-webgl",BN):e.getContext("webgl2",BN)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;zN[t]=e}const e=zN[t];return e.isContextLost()?(delete zN[t],PN(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),zN[t])}var WN,VN,UN,GN,HN,jN;function qN(t,e){return[e,t]}function KN(t){const e=f(t);return y(Math.ceil(e/4))}function XN(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function YN(t,e){const n=t;let r,s,a,i,o,u,l,c,h,p;return 2===G().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,s=t.RGBA,a=t.RGBA,i=n.RGBA,o=t.RGBA,l=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function JN(t,e){const n=e();return G().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function ZN(t){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function QN(t,e){return iI(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}(VN=WN||(WN={}))[VN.DENSE=0]="DENSE",VN[VN.SHARED_BATCH=1]="SHARED_BATCH",(GN=UN||(UN={}))[GN.RENDER=0]="RENDER",GN[GN.UPLOAD=1]="UPLOAD",GN[GN.PIXELS=2]="PIXELS",GN[GN.DOWNLOAD=3]="DOWNLOAD",(jN=HN||(HN={}))[jN.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",jN[jN.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",jN[jN.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",jN[jN.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",jN[jN.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";const tI=/ERROR: [0-9]+:([0-9]+):/g;function eI(t,e){if(JN(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function nI(t,e,n,r,s,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(JN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),JN(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,a,i))),JN(t,(()=>t.enableVertexAttribArray(o))),!0)}function rI(t,e,n){JN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),JN(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function sI(t,e){JN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),JN(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function aI(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function iI(t,e,n){const r=JN(t,(()=>e()));if(null==r)throw new Error(n);return r}function oI(t,e=2){return f(t.slice(0,t.length-e))}function uI(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function lI(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[oI(t),...uI(t)]),e}function cI(t){return t%2==0}function hI(t,e){if(m(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(cI(n)&&cI(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&cI(t[0])&&cI(e[0])}let pI,dI;function fI(t,e){return null!=t.getExtension(e)}function mI(t){try{if(null!=PN(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function gI(t){const e=YN(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function yI(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&c("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const bI=G();bI.registerFlag("HAS_WEBGL",(()=>bI.getNumber("WEBGL_VERSION")>0)),bI.registerFlag("WEBGL_VERSION",(()=>mI(2)?2:mI(1)?1:0)),bI.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),bI.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===bI.get("WEBGL_VERSION"))),bI.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),bI.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),bI.registerFlag("WEBGL_PACK",(()=>bI.getBool("HAS_WEBGL"))),bI.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_PACK_CLIP",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),bI.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_PACK_REDUCE",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_LAZILY_UNPACK",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_CONV_IM2COL",(()=>bI.getBool("WEBGL_PACK"))),bI.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==pI){const e=PN(t);pI=e.getParameter(e.MAX_TEXTURE_SIZE)}return pI}(bI.getNumber("WEBGL_VERSION")))),bI.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==dI){const e=PN(t);dI=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,dI)}(bI.getNumber("WEBGL_VERSION")))),bI.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=bI.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=PN(t);return e=fI(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:fI(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),bI.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>bI.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}())),bI.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=PN(t);if(1===t){if(!fI(e,"OES_texture_float"))return!1}else if(!fI(e,"EXT_color_buffer_float"))return!1;return gI(e)}(bI.getNumber("WEBGL_VERSION")))),bI.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!bI.getBool("WEBGL_FORCE_F16_TEXTURES")&&bI.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),bI.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=PN(t);if(1!==t){if(fI(e,"EXT_color_buffer_float"))return gI(e);const t="EXT_color_buffer_half_float";if(fI(e,t)){const n=e.getExtension(t);return function(t,e){const n=YN(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),a}(e,n)}return!1}return!!fI(e,"OES_texture_float")&&!!fI(e,"WEBGL_color_buffer_float")&&gI(e)}(bI.getNumber("WEBGL_VERSION")))),bI.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=bI.getNumber("WEBGL_VERSION"))&&null!=PN(t).fenceSync;var t})),bI.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>bI.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),bI.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));class xI{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class wI{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class vI{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function kI(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function NI(t,e){return 1===e?[t]:kI(t,e)}function II(){let t,e,n,r,s,a,i,o,u,l;return 2===G().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function $I(t,e,n="index"){const r=_(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function CI(t){const e=_(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const SI="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function TI(t,e,n,r){const s=[];t.forEach((t=>{const e=f(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const a=s.join("\n"),i=t.map((t=>function(t,e,n=!1){let r="";r+=n?AI(t):EI(t);const s=t.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=so(t.shapeInfo.logicalShape,e.logicalShape),u=LI(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+l]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+l]}`)).join(", ");let d="return outputValue;";const m=1===f(t.shapeInfo.logicalShape),g=1===f(e.logicalShape);if(1!==a||m||g){if(m&&!g)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=a-2,e=a-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?d="return vec4(outputValue.x);":o.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===u&&null==t.shapeInfo.flatOffset&&m(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=LI(u),c=so(t.shapeInfo.logicalShape,e.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${d[t+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(t,e)),r}(t,e,r))).join("\n"),o=e.texShape,u=II(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${RI}\n    ${DI}\n    ${_I}\n  `}(u);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(m(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let a=s,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(u)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){return 1===e[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){return m(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=$I(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=$I(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=$I(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=$I(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=FI),[p,l,h,a,c,i,n].join("\n")}function EI(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${OI(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${MI(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=OI(e);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&m(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=k(e),o=a;if(o.length<e.length){const e=["row","col"];return`\n      ${EI(zI(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${BI(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${MI(t)}\n      }\n    `;const u=s[0],l=s[1],c=OI(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:o}=k(e),u=i;if(u.length<e.length){const e=["row","col","depth"];return`\n        ${EI(zI(t,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${BI(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${MI(t)}\n      }\n    `;const l=t.shapeInfo.texShape,c=l[0],h=l[1],p=t.shapeInfo.flatOffset;if(h===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${OI(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:o,keptDims:u}=k(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${EI(zI(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${BI(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${MI(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${OI(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],a=e[3]*s,i=e[2]*a,o=e[1]*i,{newShape:u,keptDims:l}=k(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${EI(zI(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${BI(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${MI(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${OI(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=k(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${EI(zI(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${BI(e,a)});\n      }\n    `}const i=e[5],o=e[4]*i,u=e[3]*o,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${MI(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${OI(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function AI(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${II().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=II();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=s[0],i=s[1],o=II();if(null!=s&&m(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${AI(zI(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${BI(s,n)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u*Math.ceil(e[1]/2)}, ${u}, b, row, col);\n      return ${II().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(e[n-1]/2);let c=l*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],p=`b${t} * ${c} + `+p;return`\n    vec4 ${s}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${II().texture2D}(${r}, uv);\n    }\n  `}(t)}}const RI="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",DI="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_I="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",FI="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function OI(t){return`offset${t}`}function MI(t){const e=t.name,n=f(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function LI(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function zI(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function BI(t,e){return e.map((e=>t[e])).join(", ")}class PI{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,c(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=LI(o),l=NI("coords",o);let h,p;if(1===a){p=o+1;const t=LI(p);h=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[o-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[o-2]};`}else p=o,h=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((t=>"int "+t)),g=NI("sourceLocR",p-1).concat("inIdx.r"),y=NI("sourceLocG",p-1).concat("inIdx.g"),b=NI("sourceLocB",p-1).concat("inIdx.b"),x=NI("sourceLocA",p-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,N=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${N}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class WI{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=o-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VI{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const UI="return (a < 0.) ? b * a : a;";class GI{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=io(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const HI="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class jI{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=io(e,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===f(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${LI(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=NI("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}class qI{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class KI{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class XI{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class YI{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JI{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZI{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QI{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class t${constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class e${constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class n${constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),d=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===d}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===d}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===d}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class r${constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class s${constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,d=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class a${constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<f&&(g+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=o%2==0?l(p):p;p%2==0&&o%2==1||p%2!=0&&o%2!=1?(g+=`\n                  xCOffset = xC + ${o%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,o%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",b="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}}class i${constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class o${constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${u$(r,"coords")})`,a=t[t.length-1];let i="",o="";e?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${LI(r)} coords = getOutputCoords();\n        int end = ${l$(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${l$(r,"coords")} = idx;\n          val += getX(${u$(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function u$(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function l$(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class c${constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=WN.DENSE;const e=KN(t),n=II();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${$I(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class h${constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=WN.DENSE;const e=KN(t),n=II();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${$I(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class p${constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class d${constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class f${constructor(t){this.variableNames=["A"],this.outTexUsage=UN.DOWNLOAD;const e=II();this.outputShape=t,this.userCode=`\n      ${SI}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class m${constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=UN.DOWNLOAD;const e=II();this.outputShape=t,this.userCode=`\n      ${SI}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class g${constructor(t,e,n=!1){this.variableNames=["A"];const r=II(),[s,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${CI(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class y${constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=II(),[s,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${CI(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class b${constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class x${constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=LI(this.rank),a=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(`${r[n]}`);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class w${constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=LI(e.length),s=LI(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function v$(t,e,n,r,s,a){!function(t,e){const n=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return iI(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return JN(t,(()=>t.bindTexture(o,i))),JN(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),JN(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),JN(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),JN(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),JN(t,(()=>t.texImage2D(o,0,r,e,n,0,s,a,null))),JN(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),i}function k$(t){return t.internalFormatFloat}function N$(t){return t.internalFormatHalfFloat}function I$(t){return t.downloadTextureFormat}function $$(t){return t.internalFormatPackedFloat}function C$(t){return t.internalFormatPackedHalfFloat}class S${constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=G().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){zN[t]=e}(e,t)):this.gl=PN(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===G().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=QN(this.gl,t),fI(this.gl,e))this.textureHalfFloatExtension=QN(this.gl,e);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),fI(this.gl,r))this.colorBufferHalfFloatExtension=QN(this.gl,r);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",fI(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!fI(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=iI(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return JN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),JN(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=iI(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return JN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),JN(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return iI(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=YN(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;JN(t,(()=>t.finish())),JN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),JN(t,(()=>t.deleteFramebuffer(this.framebuffer))),JN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),JN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),JN(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=qN(e,n);return v$(t,s,a,k$(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=qN(e,n);return v$(t,s,a,N$(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=qN(e,n);return v$(t,s,a,I$(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){JN(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?JN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):JN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),JN(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,a){let i,o,u;JN(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=a.internalFormatPackedFloat),i.set(s),JN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i))),JN(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=XN(e,n);return v$(t,s,a,C$(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=XN(e,n);return v$(t,s,a,$$(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(sI(this.gl,this.framebuffer),this.outputTexture=null),JN(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,a]=qN(e,n),i=new Uint8Array(e*n*4);return JN(t,(()=>t.readPixels(0,0,s,a,r.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return function(t,e,n,r,s,a,i,o){const u=t,l=new Float32Array(function(t,e){const[n,r]=XN(t,e);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,t,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();JN(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const a=16*e*n;return JN(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),JN(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),JN(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(G().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return JN(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=iI(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(JN(t,(()=>t.shaderSource(n,e))),JN(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=tI.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),a=s.length.toString().length+2,i=s.map(((t,e)=>b((e+1).toString(),a)+t));let o=0;for(let t=0;t<i.length;t++)o=Math.max(i[t].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${b(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),r=function(t){const e=II();return function(t,e){const n=iI(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(JN(t,(()=>t.shaderSource(n,e))),JN(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),s=function(t){return iI(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return JN(e,(()=>e.attachShader(s,r))),JN(e,(()=>e.attachShader(s,n))),function(t,e){if(JN(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&eI(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return JN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),nI(t,e,"clipSpacePos",n,3,20,0)&&nI(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&JN(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&eI(this.gl,this.program),JN(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return iI(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),JN(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(t,e,n,r){JN(t,(()=>function(t,e,n){!function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}(t,n),JN(t,(()=>t.activeTexture(t.TEXTURE0+n))),JN(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),JN(t,(()=>t.uniform1i(n,r)))}(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=XN(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&eI(this.gl,this.program),aI(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),JN(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),JN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=QN(this.gl,2===G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await x((()=>this.disposed||this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||x((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),rI(this.gl,t,this.framebuffer),this.debug&&aI(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(rI(this.gl,this.outputTexture,this.framebuffer),this.debug&&aI(this.gl)):sI(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;rI(r,t,this.framebuffer),this.debug&&aI(r),this.outputTexture=t,JN(r,(()=>r.viewport(0,0,e,n))),JN(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),JN(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function T$(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],a=s.shape;if(!m(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&s.isUniform)return;const i=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!m(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}class E${constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=s*r,m=II(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class A${constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class R${constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class D${constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class _${constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,o=a-1-t.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class F${constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=u-1-t.padInfo.top,p=l-1-t.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class O${constructor(t,e,n,r=!1,s=!1,a=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],l=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let y="rc.x",b="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(b=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${d[0]});\n          result += (${p[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class M${constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class L${constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class z${constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=NI("rc",e),r=LI(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)a=`${e[e.length-1-n]},`+a;n.push(a)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class B${constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=LI(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class P${constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=LI(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=NI("rc",r),u=NI("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===r?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}class W${constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class V${constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class U${constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}class G${constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${$I(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${CI(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class H${constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class j${constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class q${constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class K${constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class X${constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Y${constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=LI(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class J${constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=NI("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=LI(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Z${constructor(t,e,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=LI(s.length),u=LI(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Q${constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class tC{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<e.length;r++)i.push(`${n[r]}`),r<t&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=LI(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class eC{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=LI(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return nC.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${nC[e]} = start[${e}] + coords.${nC[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const nC=["x","y","z","w","u","v"];class rC{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=LI(this.rank),n=NI("coords",this.rank),r=NI("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class sC{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=LI(n.length),a=LI(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class aC{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=oC(e,n),s=uC(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=iC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let i;return r===HN.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===HN.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===HN.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===HN.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===HN.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=oC(n,r),a=uC(e,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=iC(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=G().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function iC(t,e,n,r,s){const a=function(t,e){switch(t){case HN.PACKED_2X2_FLOAT32:return $$(e);case HN.PACKED_2X2_FLOAT16:return C$(e);case HN.UNPACKED_FLOAT32:return k$(e);case HN.UNPACKED_FLOAT16:return N$(e);case HN.PACKED_4X1_UNSIGNED_BYTE:return I$(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let i;if(s){const[e,n]=XN(t[0],t[1]);i=e*n}else{const[e,n]=qN(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,a)}function oC(t,e){if(t===UN.UPLOAD)return HN.PACKED_2X2_FLOAT32;if(t===UN.RENDER||null==t)return function(t){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?HN.PACKED_2X2_FLOAT32:HN.UNPACKED_FLOAT32:t?HN.PACKED_2X2_FLOAT16:HN.UNPACKED_FLOAT16}(e);if(t===UN.DOWNLOAD||t===UN.PIXELS)return HN.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function uC(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class lC{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=LI(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class cC{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const hC="return abs(x);",pC="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",dC="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",fC="return (x >= 0.0) ? x : (exp(x) - 1.0);",mC="return -x;",gC="return ceil(x);",yC="return floor(x);",bC="return exp(x);",xC="return exp(x) - 1.0;",wC="return x;",vC="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",kC="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",NC="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class IC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class $C{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=NI("rc",e),r=LI(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const CC=qc,SC=Kc,TC=Xc,EC=pl,AC={};function RC(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?vC:pC;if("elu"===t)return e?NC:fC;if("relu6"===t)return e?kC:dC;if("prelu"===t)return e?HI:UI;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class DC extends a{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=PN(G().getNumber("WEBGL_VERSION"));this.binaryCache=((e=G().getNumber("WEBGL_VERSION"))in AC||(AC[e]={}),AC[e]),this.gpgpu=new S$(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new aC(this.gpgpu),this.numMBBeforeWarning=null==G().global.screen?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s(this,Pa())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:UN.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r){if(G().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:UN.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=e;if(null!=a){let e;e=o?new IC(i,wC):new cC(i,wC);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Rn()),c="complex64"===r?Vc(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),u&&(this.downloadWaitMs+=Rn()-l),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=e;if(null!=s){let e;e=o?new IC(r,wC):new cC(r,wC);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===G().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&G().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...KN(r))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Vc(t[0],t[1])}else if(null==c)l=this.getValuesFromTexture(t);else{const t=f(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(t,l),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!ZN(n)){if(G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=f(e);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...KN(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=G().getBool("WEBGL_PACK")&&!0===r,i=a?lI(e):e,o=a?new m$(i):new f$(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=d(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),a=d(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);i.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:a[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Rn(),endMs:null}}endTimer(t){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Rn(),t)}async getQueryTime(t){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return G().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Pa().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&f(t.shape)<e))}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=fv(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===f(n))return ks([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=_a(t.shape,e,n);if(r||!s){const r=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rC(n):new eC(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),a=this.texData.get(s.dataId);Object.assign(a,r),a.shape=n,a.dtype=t.dtype;let i=Fa(e,t.strides);r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,o+1),s}stridedSlice(t,e,n,r){const s=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.stridedSlice(t,e,n,r)));if(s)return s;const a=Ca(e,n,r);if(a.some((t=>0===t)))return ks([],a);const i=new sC(e,r,a);return this.compileAndRun(i,[t])}reverse(t,e){const n=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new J$(t.shape,e):new Y$(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.neg(t)));if(e)return e;if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,mC,t.dtype);const n=new cC(t.shape,mC);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],o=Math.max(t.shape[0],e.shape[0]);if((1===s||1===a)&&i>1e3){n&&(t=xa(t,[0,2,1])),r&&(e=xa(e,[0,2,1]));const s=1===a?t:t.as3D(o,i,1),u=1===a?2:1,l=1===a?e.as3D(o,1,i):e;return Ao(s,l).sum(u,!0)}const u=ar(t.dtype,e.dtype),l=new O$(t.shape,e.shape,[o,s,a],n,r);return this.compileAndRun(l,[t,e],u)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){const o=n?t.shape[2]:t.shape[1],u=r?e.shape[1]:e.shape[2],l=Math.max(t.shape[0],e.shape[0]),c=ar(t.dtype,e.dtype),h=null!=s,p=null!=i,d=a?RC(a,!0):null,f=new O$(t.shape,e.shape,[l,o,u],n,r,h,d,p),m=[t,e];return s&&m.push(s),i&&m.push(i),this.compileAndRun(f,m,c)}localResponseNormalization4D(t,e,n,r,s){const a=G().getBool("WEBGL_PACK_NORMALIZATION")?new D$(t.shape,e,n,r,s):new A$(t.shape,e,n,r,s);return this.compileAndRun(a,[t])}LRNGrad(t,e,n,r,s,a,i){const o=new R$(e.shape,r,s,a,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>_n(t))),r=aa(t.shape,t.dtype,n);return SC(r,e)}const n=new lC(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new P$(t.shape,e,n):new B$(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.gather(t,e,n)));if(r)return r;const s=new x$(t.shape,e.size,n);return this.compileAndRun(s,[t,e])}batchToSpaceND(t,e,n){c(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=Mc(t.shape,e,r),a=Lc(s.length,e.length),i=zc(t.shape,e,r),o=Bc(n,e.length),u=Pc(i,n,e.length);return xa(t.reshape(s),a).reshape(i).slice(o,u)}spaceToBatchND(t,e,n){c(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const a=t.pad(s),i=Mc(a.shape,e,r,!1),o=Lc(i.length,e.length,!1),u=zc(a.shape,e,r,!1),l=xa(a.reshape(i),o);return ga(l,u)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],a=vo(s),i=Math.ceil(s/a),o=new U$({windowSize:a,inSize:s,batchSize:r,outSize:i},e),u=this.compileAndRun(o,[t],n);return 1===u.shape[1]?u:this.reduce(u,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const a=vo(s),i={windowSize:a,inSize:s,batchSize:r,outSize:Math.ceil(s/a)},o=new vI(i,e,null==n),u=[t];null!=n&&u.push(n);const l=this.compileAndRun(o,u,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=vo(r[r.length-1]),a=new PI(r,s,e,null==n),i=null==n?[t]:[t,n],o=this.compileAndRun(a,i,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){ei("sum",e,t.rank);const[n,r]=Qa(t.shape,e),s=f(r),a=t.as2D(-1,s),i=ir(t.dtype);return this.reduce(a,"sum",i).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.prod(t,e)));if(n)return n;const[r,s]=Qa(t.shape,e),a=f(s),i=t.as2D(-1,a),o=ir(t.dtype);return this.reduce(i,"prod",o).reshape(r)}unsortedSegmentSum(t,e,n){let r=0;const s=ni([r],t.rank);let a=t;null!=s&&(a=xa(t,s),r=si(1,t.rank)[0]);const i=function(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r}(a.shape,r,n),o=f([a.shape[r]]),u=a.as2D(-1,o),l=ir(t.dtype);let c=this.segOpCompute(u,"unsortedSegmentSum",e,l,n).reshape(i);return null!=s&&(c=xa(c,ri(s))),c}segOpCompute(t,e,n,r,s){const a=t.shape[0],i=t.shape[1],o=function(t,e){let n,r=!1;for(t<=30?(n=t,r=!0):n=D(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=D(t,n+1);return n}(i,s),u=new Q$({windowSize:o,inSize:i,batchSize:a,numSegments:s},e),l=this.compileAndRun(u,[t,n],r);return l.shape[1]===s?l:(n=Eu(0,s).tile([i/o]),this.segOpCompute(l,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(ei("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!G().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=Qa(t.shape,r),a=f(s),i=t.as2D(-1,a);return this.argReduce(i,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=t.shape[e];let a=t;for(let e=0;e<=Math.ceil(Math.log2(s))-1;e++){const n=new o$(t.shape,!1,r),s=n.getCustomSetupFunc(e),i=a;a=this.compileAndRun(n,[a],a.dtype,s),i.dispose()}if(n){const e=new o$(t.shape,n,r),s=a;a=this.compileAndRun(e,[a]),s.dispose()}return a}equal(t,e){if(G().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new GI("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.less(t,e)));if(n)return n;if(G().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const r=new GI("return float(a < b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}lessEqual(t,e){if(G().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new GI("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.greater(t,e)));if(n)return n;if(G().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new GI("return float(a > b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greaterEqual(t,e){if(G().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new GI("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new cC(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(G().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new GI("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(G().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new GI("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new tC(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],ar(e.dtype,n.dtype))}where(t){Wc("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return EC(t.shape,e)}topk(t,e,n){const r=t.dataSync();return TC(r,t.shape,t.dtype,e,n)}min(t,e){ei("min",e,t.rank);const[n,r]=Qa(t.shape,e),s=f(r),a=t.as2D(-1,s);return this.reduce(a,"min",a.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.minimum(t,e)));if(n)return n;const r=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jI("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new GI("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}mod(t,e){const n=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jI("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new GI("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.maximum(t,e)));if(n)return n;const r=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jI("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new GI("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}all(t,e){ei("all",e,t.rank);const[n,r]=Qa(t.shape,e),s=f(r),a=t.as2D(-1,s);return this.reduce(a,"all",a.dtype).reshape(n)}any(t,e){ei("any",e,t.rank);const[n,r]=Qa(t.shape,e),s=f(r),a=t.as2D(-1,s);return this.reduce(a,"any",a.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(G().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new GI("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new IC(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const a=new jI(n,t.shape,e.shape,s);return this.compileAndRun(a,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>G().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>ar(t,e))),n=t.map((t=>t.shape)),r=G().getBool("WEBGL_PACK")?new wI(t[0].shape,n):new xI(t[0].shape,n);return this.compileAndRun(r,t,e)}pow(t,e){const n=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jI("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new GI("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=ar(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=Vw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,gC,t.dtype);const e=new cC(t.shape,gC);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=Jw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,yC,t.dtype);const e=new cC(t.shape,yC);return this.compileAndRun(e,[t])}sign(t){const e=new cC(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new cC(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new cC(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new cC(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new cC(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=Hw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,bC,t.dtype);const e=new cC(t.shape,bC);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=Kw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,xC,t.dtype);const e=new cC(t.shape,xC);return this.compileAndRun(e,[t])}softmax(t,e){const n=v([e],t.shape),r=Uo(t,n),s=ti(r.shape,n),a=Go(t,r.reshape(s)),i=this.exp(a),o=this.sum(i,n).reshape(s);return ro(i,o)}log(t){if(this.shouldExecuteOnCPU([t])){const e=tv(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new cC(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new cC(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new cC(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=hv(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new cC(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new cC(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=G().getBool("WEBGL_PACK")?new IC(t.shape,vC):new cC(t.shape,pC),this.compileAndRun(e,[t])}relu6(t){let e;return e=G().getBool("WEBGL_PACK")?new IC(t.shape,kC):new cC(t.shape,dC),this.compileAndRun(e,[t])}prelu(t,e){const n=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jI(HI,t.shape,e.shape):new GI(UI,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,NC,t.dtype);const e=new cC(t.shape,fC);return this.compileAndRun(e,[t])}eluDer(t,e){const n=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jI("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new GI("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new cC(t.shape,"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = 1.0507009873554805;\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n");return this.compileAndRun(e,[t])}clip(t,e,n){let r;r=G().getBool("WEBGL_PACK_CLIP")?new KI(t.shape):new qI(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=kw(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,hC,t.dtype);const e=new cC(t.shape,hC);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new XI(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new cC(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new cC(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new cC(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new cC(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new cC(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new cC(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new cC(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new cC(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new cC(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new cC(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new cC(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new cC(t.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');return this.compileAndRun(e,[t])}step(t,e){const n=new cC(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,a){const i=t.shape,o=this.texData.get(t.dataId),u=n.inChannels,l=i[0]*i[1]*i[2],h=n.outChannels,p="channelsLast"===n.dataFormat,d=(1===l||1===h)&&u>1e3,f=i[2]%2!=0&&!!o.isPacked;if(d||!G().getBool("WEBGL_LAZILY_UNPACK")||!G().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=p?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],u=ga(t,[1,o,n.inChannels]),l=ga(e,[1,n.inChannels,n.outChannels]),c=this.fusedBatchMatMul({a:u,b:l,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:a});return ga(c,n.outShape)}const m=p?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),g={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},y=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,c(hI(o.shape,g.shape),(()=>`packed reshape ${o.shape} to ${g.shape} isn't free`));const b=ga(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:g,b:b,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:a}),w=this.texData.get(x.dataId);return c(w.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=y,w.shape=n.outShape,Pa().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,r,s,a){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:l,outHeight:c,dataFormat:h}=n,p="channelsLast"===h,d=i*o*u,f=c*l,m=[d,f],g=t.squeeze([0]),y=e.reshape([1,d,-1]),b=new E$(m,g.shape,n),x=this.compileAndRun(b,[g]).reshape([1,m[0],m[1]]),w=null!=r,v=null!=a,k=s?RC(s,!0):null,N=new O$(x.shape,y.shape,[1,f,n.outChannels],!0,!1,w,k,v),I=[x,y];r&&I.push(r),v&&I.push(a);const $=this.compileAndRun(N,I);return p?$.reshape([1,c,l,n.outChannels]):$.reshape([1,n.outChannels,c,l])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,a);if(G().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,a);const i=null!=r,o=null!=a,u=s?RC(s,!1):null,l=new n$(n,i,u,o),c=[t,e];return r&&c.push(r),a&&c.push(a),this.compileAndRun(l,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(G().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new n$(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new JI(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new YI(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){const i=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?RC(s,i):null,u=[t,e],l=null!=r,c=null!=a;let h;return l&&u.push(r),c&&u.push(a),i?(h=new a$(n,l,o,c),this.compileAndRun(h,u)):(h=new s$(n,l,o,c),this.compileAndRun(h,u))}depthwiseConv2D(t,e,n){let r;return G().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new a$(n),this.compileAndRun(r,[t,e])):(r=new s$(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new e$(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new t$(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new r$(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new QI(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new ZI(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(r);return o}avgPool3d(t,e){const n=new V$(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new VI(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new V$(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new V$(r,"max",!0),a=this.compileAndRun(s,[e]),i=new F$(r),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}resizeBilinear(t,e,n,r){const s=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new q$(t.shape,e,n,r):new j$(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new H$(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new X$(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new K$(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:Hu(t),a=s.shape[0],i=s.shape[1],o=new M$(a,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[s],"int32",u)}oneHot(t,e,n,r){const s=new L$(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new d$(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,a){const i=new i$(t.shape,e.shape,r,s,a);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){c(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],a="NHWC"===n?t.shape[2]:t.shape[3],i="NHWC"===n?t.shape[3]:t.shape[1],o=s*e,u=a*e,l=i/(e*e),h=new p$("NHWC"===n?[r,o,u,l]:[r,l,o,u],e,n);return this.compileAndRun(h,[t])}split(t,e,n){return CC(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=Na(0,t,n),u=[o/a,a],l=t.reshape([s,r]),c=e.reshape([s,a]);if(0===o)return function(t,e){return fr.makeTensorFromDataId(t.dataId,e,t.dtype)}(ks([]),n);const h=Ro(0),p=new Z$(s,r,l.rank,c.rank,i,u);return this.compileAndRun(p,[c,l,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,strides:i,outputSize:o}=Na(0,t,n),u=new Z$(a,s,t.rank,e.rank,i,[o,1],!1);return this.compileAndRun(u,[e,t,r]).reshape(n)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=ka(t,e),u=e.reshape([a,r]),l=t.reshape([t.size/i,i]),c=new w$(r,o,[a,i]);return this.compileAndRun(c,[l,u]).reshape(s)}fill(t,e,n){if("string"===(n=n||A(e))){const r=I(n,f(t));return r.fill(e),Pa().makeTensor(r,t,n,this)}{const r=new b$(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return jc(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Pa().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new $C(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new z$(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[oI(t.shape),...uI(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[oI(e),...uI(e)],a=new G$(s,n),i=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=lI(r);let i;return i=n?new h$(a):new c$(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===WN.DENSE){const e=KN(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===f(a.shape))return i.values=N(a.dtype,0),a;const o=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&f(e.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!hI(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const l={shape:a.shape,texData:i,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s,a}(t,u,l),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,a=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),i=a.map((t=>t.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=TI(a,o,s,e.packedInputs),l=t.createProgram(u);let c=null;const h=t.getUniformLocation(l,"NAN",!1);1===G().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;p[r]=t.getUniformLocation(l,r,s),p[`offset${r}`]=t.getUniformLocation(l,`offset${r}`,s)}return{program:e,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,u,l))),p=null!=this.activeTimers;let d;if(p&&(d=this.startTimer()),function(t,e,n,r,s){T$(e.inShapeInfos,n),T$([e.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===G().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],a=e.uniformLocations[s],i=e.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(f(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)})),!G().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const a=this.runWebGLProgram(t,e,n,r,s);return Pa().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Va((()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=G().getBool("DEBUG");G().set("DEBUG",!1);const e=this.abs(Ro(1e-8)).dataSync()[0];if(G().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=e;if(null!=a)return;const u=null!=this.activeTimers;let c;u&&(c=Rn());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?l(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=k(t);t=e.newShape}let r=f(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=oI(t);let n=2,s=2;return t.length&&([n,s]=uI(t)),r=e*(n/2)*(s/2),y(r).map((t=>2*t))}return y(r)}(n,o),e.texShape=h),null!=s){const t=lI(n);let a,i=h[1],l=h[0];const p=s instanceof Uint8Array;o?([i,l]=XN(h[0],h[1]),a=new y$(t,[l,i],p)):a=new g$(t,[l,i],p);const d=this.makeTensorInfo([l,i],r);this.texData.get(d.dataId).usage=p?UN.PIXELS:UN.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,l,s);const f=!0,m=this.runWebGLProgram(a,[d],r,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),e.values=null,u&&(this.uploadWaitMs+=Rn()-c)}else{const t=this.acquireTexture(h,i,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*S(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(t){if(G().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function _C(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}gr()&&Ha("webgl",(()=>new DC),2);const FC={kernelName:oe,backendName:"webgl",kernelFunc:_C};function OC(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=_C({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=_C({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},a}const MC={kernelName:Rt,backendName:"webgl",kernelFunc:OC};function LC(t){return({inputs:e,backend:n})=>{const{x:r}=e,s=n,a=new cC(r.shape,t);return s.runWebGLProgram(a,[r],r.dtype)}}function zC({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const e=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new GI(t,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],ar(n.dtype,r.dtype))})),a=OC({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||ar(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=s){const t=c.texData.get(u.dataId),e=c.texData.get(l.dataId),[n,r]=s(u.shape,l.shape,t.values,e.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let p;return p=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new jI(e,u.shape,l.shape,n):new GI(t,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}const BC="return a + b;",PC=zC({opSnippet:BC,packedOpSnippet:BC,supportsComplex:!0,cpuKernelImpl:Ow}),WC={kernelName:dt,backendName:"webgl",kernelFunc:PC},VC=zC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),UC={kernelName:vt,backendName:"webgl",kernelFunc:VC},GC={kernelName:kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;yI(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;c($i(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=mi(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&m(l.inShape,l.outShape))return _C({inputs:{x:s},backend:n});const h=new W$(l,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}},HC={kernelName:Nt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,i=a;yI([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=mi(i.shape,o,u,1,l),h=new WI(c);return n.runWebGLProgram(h,[s],i.dtype)}};class jC{constructor(t,e,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],io(t,e),io(t,n);let i="0.0";null!=r&&(io(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(io(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class qC{constructor(t,e,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],io(t,e),io(t,n);let i="vec4(0.0)";null!=r&&(io(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(io(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const KC={kernelName:se,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=t;c(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),c(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),c(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let h=null;null!=i&&(h=i.shape,l.push(i));let p=null;null!=o&&(p=o.shape,l.push(o));const d=G().getBool("WEBGL_PACK_NORMALIZATION")?new qC(r.shape,s.shape,a.shape,h,p,u):new jC(r.shape,s.shape,a.shape,h,p,u);return e.runWebGLProgram(d,l,l[0].dtype)}},XC=zC({opSnippet:"return float(a != b);",dtype:"bool"}),YC={kernelName:Te,backendName:"webgl",kernelFunc:XC};function JC(t){const{inputs:e,backend:n}=t,{input:r}=e;return _C({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const ZC={kernelName:Me,backendName:"webgl",kernelFunc:JC},QC={kernelName:Tt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return _C({inputs:{x:a},backend:r});const e=Qo(a.shape),n=t({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=OC({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const e=JC({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!$(a.dtype,i)){const t=_C({inputs:{x:a},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new cC(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",N("bool",1)),e=XC({inputs:{a:a,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}};class tS{constructor(t){this.outputShape=[],this.outputShape=Bi(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class eS{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Bi(t,e);const n=this.outputShape,r=n.length,s=LI(r),a=NI("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const u=i[e],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${u} < ${o[t]}  && ${u} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${nS(i,u,e)}),\n            vec2(${nS(l,u,e)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${nS(i,u,d)}),\n          vec2(${nS(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function nS(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function rS(t){const{inputs:e,backend:n}=t,{input:r}=e;return _C({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const sS={kernelName:le,backendName:"webgl",kernelFunc:rS};function aS(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,i=n,o=f(s.shape),u=w(a,o),l=f(u);c(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const h=i.texData.get(s.dataId);return!h.isPacked||hI(s.shape,u)||null!==h.texture&&hI(h.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(t,e,n){const r=[oI(t.shape),...uI(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[oI(e),...uI(e)],i=new G$(a,r),o=n.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(s,u,i)}const iS={kernelName:Be,backendName:"webgl",kernelFunc:aS};function oS(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>JC({inputs:{input:t},backend:n}))),s=t.map((t=>rS({inputs:{input:t},backend:n}))),a=oS(r,e,n),i=oS(s,e,n),o=OC({inputs:{real:a,imag:i},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if(t.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=oS(t.slice(0,r),e,n),a=oS(t.slice(r),e,n),i=oS([s,a],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new eS(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const s=Bi(t.map((t=>t.shape)),e),a=t.map((t=>aS({inputs:{x:t},attrs:{shape:[-1,f(t.shape.slice(e))]},backend:n}))),i=new tS(a.map((t=>t.shape))),o=n.runWebGLProgram(i,a,r);a.forEach((t=>n.disposeIntermediateTensorInfo(t)));const u=aS({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),u}const uS={kernelName:Dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=v(s,e[0].shape)[0],i=Bi(e.map((t=>t.shape)),a);if(0===f(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>f(t.shape)>0));return 1===o.length?o[0]:(zi(o.map((t=>t.shape)),a),oS(o,a,n))}},lS=LC("if (isnan(x)) return x;\n  return cos(x);\n"),cS={kernelName:Bt,backendName:"webgl",kernelFunc:lS},hS=zC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),pS={kernelName:Kt,backendName:"webgl",kernelFunc:hS};class dS{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function fS(t,e,n){const r=n.texData.get(t.dataId),s=f(t.shape),a=t.shape[t.shape.length-1],i=aS({inputs:{x:t},backend:n,attrs:{shape:[s/a,a]}}).shape,o=new dS("real",i,e),u=new dS("imag",i,e),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],c=n.runWebGLProgram(o,l,"float32"),h=n.runWebGLProgram(u,l,"float32"),p=OC({inputs:{real:c,imag:h},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h);const d=aS({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(d),d}const mS={kernelName:Qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return fS(r,!1,n)}};class gS{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const yS={kernelName:ee,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new gS(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};class bS{constructor(t){this.variableNames=["A"];const e=II(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class xS{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=II(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const wS={kernelName:yn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];(o||i)&&(null==vS&&(vS=document.createElement("canvas").getContext("2d")),vS.canvas.width=u,vS.canvas.height=l,vS.drawImage(s,0,0,u,l),s=vS.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=UN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=G().getBool("WEBGL_PACK")?new xS(h):new bS(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let vS;const kS={kernelName:ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return fS(r,!0,n)}};class NS{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${g(t)?t.toPrecision(2):t}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function IS(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=vo(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let a=t;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new NS({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l},o):new NS({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l}):new U$({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class $S{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=LI(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class CS{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=LI(this.rank),s=kI("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=s[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function SS(t,e,n){const r=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CS(t.shape,e):new $S(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const TS={kernelName:ye,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n,o=r.shape.length,u=v(s,r.shape);let l=u;const c=ni(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const t=i.texData.get(d.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=Iv(t,r.shape,r.dtype,c,e);d=i.makeTensorInfo(e,r.dtype),i.texData.get(d.dataId).values=n}else d=SS(r,c,i);l=si(l.length,o)}ei("max",l,o);const[m,g]=Qa(d.shape,l);let y,b=m;if(a&&(b=ti(m,u)),p){const t=rv(i.texData.get(d.dataId).values,f(g),b,r.dtype);y=i.makeTensorInfo(b,r.dtype),i.texData.get(y.dataId).values=t}else y=function(t,e,n,r){const s=f(e),a=aS({inputs:{x:t},attrs:{shape:[f(t.shape)/s,s]},backend:r}),i=IS(a,t.dtype,"max",r),o=aS({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(d,g,b,i);return h&&i.disposeIntermediateTensorInfo(d),y}},ES={kernelName:xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;yI(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;c($i(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=mi(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&m(l.inShape,l.outShape))return _C({inputs:{x:s},backend:n});const h=new W$(l,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}},AS={kernelName:we,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:i}=e,o=a;yI([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=mi(o.shape,u,l,1,c,h),d=new W$(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new _$(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},RS={kernelName:ke,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,u=n;c(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];c($i(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const h=mi(r.shape,s,a,l,i),[p,d]=function(t,e,n,r){let s=new W$(n,"max",!1);const a=r.runWebGLProgram(s,[t],"float32");return s=new W$(n,"max",!0,!0,e),[a,r.runWebGLProgram(s,[t],"float32")]}(r,o,h,u);return[p,d]}},DS={kernelName:Ne,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:a}=e,i=n,o=r.shape.length,u=v(a,r.shape);let l=u;const c=ni(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let m=r;if(h){if(p){const t=i.texData.get(m.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=Iv(t,r.shape,r.dtype,c,e);m=i.makeTensorInfo(e,r.dtype),i.texData.get(m.dataId).values=n}else m=SS(r,c,i);d.push(m),l=si(l.length,o)}ei("sum",l,o);const[g,y]=Qa(m.shape,l);let b=g;s&&(b=ti(g,u));const x=function(t,e,n,r){const s=f(e),a=aS({inputs:{x:t},attrs:{shape:[f(t.shape)/s,s]},backend:r}),i=IS(a,"float32","mean",r),o=aS({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(m,y,b,i);for(const t of d)i.disposeIntermediateTensorInfo(t);return x}};class _S{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=LI(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class FS{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=LI(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=NI("rc",r),u=NI("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const OS={kernelName:$e,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:a}=n,i=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FS(r.shape,s,a):new _S(r.shape,s,a);return e.runWebGLProgram(i,[r],r.dtype)}};class MS{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=io(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const LS="return a * b;",zS={kernelName:Ce,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,a=ar(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),a=new MS("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new MS("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=OC({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[i,o]=sv(r.shape,s.shape,t.values,e.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jI(LS,r.shape,s.shape):new GI(LS,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}},BS={kernelName:Ee,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Wc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=n,u=e;return nc(u.readSync(r.dataId),u.readSync(s.dataId),a,i,o)}},PS=rc,WS={kernelName:Ae,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Wc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=PS(c,h,a,i,o,u);return[p,d]}},VS=sc,US={kernelName:Re,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Wc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=VS(c,h,p,d,f,m);return[g,y]}};class GS{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const s=t[1],a=t[2],i=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[u,l]=Oc(r,s,a),c=u.toFixed(3),h=l.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const HS={kernelName:bn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,u=new GS(r.shape,s,a,i);return o.runWebGLProgram(u,[r],r.dtype)}},jS=LC("if (isnan(x)) return x;\n  return sin(x);\n"),qS={kernelName:Xe,backendName:"webgl",kernelFunc:jS},KS={kernelName:an,backendName:"webgl",kernelFunc:LC("return x * x;")},XS="return (a - b) * (a - b);",YS=zC({opSnippet:XS,packedOpSnippet:XS}),JS={kernelName:sn,backendName:"webgl",kernelFunc:YS},ZS="return a - b;",QS=zC({opSnippet:ZS,packedOpSnippet:ZS,supportsComplex:!0,cpuKernelImpl:wv}),tT={kernelName:on,backendName:"webgl",kernelFunc:QS},eT=LC("return tan(x);"),nT=[WC,UC,GC,HC,KC,QC,MC,uS,cS,pS,mS,yS,wS,FC,kS,sS,TS,ES,AS,RS,DS,OS,zS,BS,WS,US,YC,ZC,iS,HS,qS,KS,tT,JS,{kernelName:un,backendName:"webgl",kernelFunc:eT},{kernelName:hn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n,i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];let u;if(a.shouldExecuteOnCPU([r])){const t=Iv(a.texData.get(r.dataId).values,r.shape,r.dtype,s,o);u=a.makeTensorInfo(o,r.dtype),a.texData.get(u.dataId).values=t}else u=SS(r,s,a);return u}},{kernelName:pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;yI(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=$v(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const t of nT)Sn(t);const rT=2*Math.PI,sT="accordion-mp3\nacoustic_bass-mp3\nacoustic_grand_piano-mp3\nacoustic_guitar_nylon-mp3\nacoustic_guitar_steel-mp3\nagogo-mp3\nalto_sax-mp3\napplause-mp3\nbagpipe-mp3\nbanjo-mp3\nbaritone_sax-mp3\nbassoon-mp3\nbird_tweet-mp3\nblown_bottle-mp3\nbrass_section-mp3\nbreath_noise-mp3\nbright_acoustic_piano-mp3\ncelesta-mp3\ncello-mp3\nchoir_aahs-mp3\nchurch_organ-mp3\nclarinet-mp3\nclavinet-mp3\ncontrabass-mp3\ndistortion_guitar-mp3\ndrawbar_organ-mp3\ndulcimer-mp3\nelectric_bass_finger-mp3\nelectric_bass_pick-mp3\nelectric_grand_piano-mp3\nelectric_guitar_clean-mp3\nelectric_guitar_jazz-mp3\nelectric_guitar_muted-mp3\nelectric_piano_1-mp3\nelectric_piano_2-mp3\nenglish_horn-mp3\nfiddle-mp3\nflute-mp3\nfrench_horn-mp3\nfretless_bass-mp3\nfx_1_rain-mp3\nfx_2_soundtrack-mp3\nfx_3_crystal-mp3\nfx_4_atmosphere-mp3\nfx_5_brightness-mp3\nfx_6_goblins-mp3\nfx_7_echoes-mp3\nfx_8_scifi-mp3\nglockenspiel-mp3\nguitar_fret_noise-mp3\nguitar_harmonics-mp3\ngunshot-mp3\nharmonica-mp3\nharpsichord-mp3\nhelicopter-mp3\nhonkytonk_piano-mp3\nkalimba-mp3\nkoto-mp3\nlead_1_square-mp3\nlead_2_sawtooth-mp3\nlead_3_calliope-mp3\nlead_4_chiff-mp3\nlead_5_charang-mp3\nlead_6_voice-mp3\nlead_7_fifths-mp3\nlead_8_bass__lead-mp3\nmarimba-mp3\nmelodic_tom-mp3\nmusic_box-mp3\nmuted_trumpet-mp3\noboe-mp3\nocarina-mp3\norchestra_hit-mp3\norchestral_harp-mp3\noverdriven_guitar-mp3\npad_1_new_age-mp3\npad_2_warm-mp3\npad_3_polysynth-mp3\npad_4_choir-mp3\npad_5_bowed-mp3\npad_6_metallic-mp3\npad_7_halo-mp3\npad_8_sweep-mp3\npan_flute-mp3\npercussive_organ-mp3\npiccolo-mp3\npizzicato_strings-mp3\nrecorder-mp3\nreed_organ-mp3\nreverse_cymbal-mp3\nrock_organ-mp3\nseashore-mp3\nshakuhachi-mp3\nshamisen-mp3\nshanai-mp3\nsitar-mp3\nslap_bass_1-mp3\nslap_bass_2-mp3\nsoprano_sax-mp3\nsteel_drums-mp3\nstring_ensemble_1-mp3\nstring_ensemble_2-mp3\nsynth_bass_1-mp3\nsynth_bass_2-mp3\nsynth_brass_1-mp3\nsynth_brass_2-mp3\nsynth_choir-mp3\nsynth_drum-mp3\nsynth_strings_1-mp3\nsynth_strings_2-mp3\ntaiko_drum-mp3\ntango_accordion-mp3\ntelephone_ring-mp3\ntenor_sax-mp3\ntimpani-mp3\ntinkle_bell-mp3\ntremolo_strings-mp3\ntrombone-mp3\ntrumpet-mp3\ntuba-mp3\ntubular_bells-mp3\nvibraphone-mp3\nviola-mp3\nviolin-mp3\nvoice_oohs-mp3\nwhistle-mp3\nwoodblock-mp3\nxylophone-mp3".split("\n"),aT=()=>sT[Math.floor(Math.random()*sT.length)];let iT,oT,uT,lT,cT,hT,pT,dT,fT,mT=0,gT=!1,yT=!1;const bT=()=>{const t=requestAnimationFrame(bT);return dT.getByteFrequencyData(uT),t},xT=()=>{const t=cT.gain.value+.1*(mT-cT.gain.value);cT.gain.setValueAtTime(t,iT.currentTime),cT.gain.value===mT||requestAnimationFrame(xT)},wT=t=>{mT=t,xT()},vT=(t="mp3",e=".")=>{const n=["A","Ab","B","Bb","C","D","Db","E","Eb","F","G","Gb"],r=[];for(let s=0;s<n.length;++s){const a=n[s];"A"===a&&r.push(`A0${e}${t}`);for(let n=1;n<8;++n)r.push(`${a}${n}${e}${t}`);"C"===a&&r.push(`C8${e}${t}`)}return r},kT=vT("",""),NT=async(t="alto_sax-mp3",e="./FluidR3_GM",n)=>{const r={title:t},s=await Promise.all(((t="alto_sax-mp3",e="./FluidR3_GM")=>{const n=`${e}/${t}`;return vT().map((t=>async function(t){const e=await fetch(t),n=await e.arrayBuffer();return await iT.decodeAudioData(n)}(`${n}/${t}`)))})(t,e));return kT.forEach(((t,e)=>{r[t.split(".")[0]]=s[e]})),r},IT=document.querySelector("canvas"),$T=IT.getContext("2d"),CT=IT.width,ST=IT.height;$T.save();const TT=(t,e=4,n="red",r=!0)=>{$T.fillStyle=n,$T.strokeStyle=n,$T.moveTo(t[0][0],t[0][1]),$T.beginPath();for(let n=0,s=t.length;n<s;n++){const s=t[n][0],a=t[n][1];$T.arc(s,a,e,0,rT),r&&$T.lineTo(s,a)}$T.fill(),r&&$T.stroke()},ET=(t,e="blue")=>{$T.fillStyle=e;for(let e=0;e<t.length;e++){const n=t[e][0],r=t[e][1],s=t[e][2],a=1+.8*Math.abs(s);$T.beginPath(),$T.arc(n,r,a,0,rT),$T.fill()}},AT=document.querySelector("main"),RT=document.querySelector("video"),DT=document.querySelector("img"),_T=document.getElementById("feedback");let FT,OT,MT,LT,zT=DT;RT.addEventListener("mousedown",(async t=>{FT=await NT(aT())})),AT.classList.add("loading"),_T.innerHTML="Initialising...<br> Please wait",async function(t){await fr.ready(),console.log("Loading models",xf);const e=await vf(xf.mediapipeFacemesh,{maxFaces:1,shouldLoadIrisModel:!0});console.log("Loaded model",e),_T.innerHTML="Loading model";const n=async(t,r)=>{const s=await async function(t){const e=await t.estimateFaces({input:zT});if(e.length>0)for(let t=0,n=e.length;t<n;t++){const n=e[t],{boundingBox:r,mesh:s,scaledMesh:a,annotations:i}=n,{leftEyeIris:o,rightEyeIris:u}=i,{leftEyeLower0:l,rightEyeLower0:c,midwayBetweenEyes:h}=i,p=o[0],d=u[0],f=h[0],m=p[2]<d[2],g=l[0][0],y=c[0][0],b=h[0][0],x=-1*(b-g),w=b-y,v=.5-Math.atan(f[2],-1*f[0])/(2*Math.PI),k=.5-Math.asin(f[1])/Math.PI,N=1;n.pitch=k,n.roll=N,n.yaw=v;const{rightCheek:I,leftCheek:$,silhouette:C}=i;TT(C,5,"rgba(255,255,0,0.5)",!0),n.lookingRight=m;const{lipsUpperInner:S,lipsLowerInner:T}=i,E=S[5],A=T[5][1]-E[1];n.mouthRange=A,n.happiness=0,console.log(n,{lmx:x,rmx:w,yaw:v},{lookingRight:m,eyeLeft:p,eyeRight:d},{leftEyeIris:o,rightEyeIris:u})}return e}(e);if(s.length>0){const t=s[0];$T.drawImage(zT,0,0),((t,e="brown")=>{const{scaledMesh:n}=t;$T.fillStyle=e;for(let t=0;t<n.length;t++){const e=n[t][0],r=n[t][1],s=n[t][2],a=1+.01*Math.abs(100-s);$T.beginPath(),$T.arc(e,r,a,0,rT),$T.fill()}})(t),(t=>{const{scaledMesh:e,annotations:n}=t,{lipsUpperInner:r,lipsLowerInner:s}=n;TT(r),TT(s),((t,e,n="yellow")=>{const r=[t,e],s=t[5],a=e[5],i=a[1]-s[1];$T.fillStyle=n,$T.beginPath(),$T.moveTo(t[0][0],t[0][1]);for(let t=0,e=r.length;t<e;t++){const e=r[t];for(let t=0,n=e.length;t<n;t++){const n=e[t][0],r=e[t][1];$T.lineTo(n,r)}}$T.fill(),$T.fillStyle="blue",$T.beginPath(),$T.arc(s[0],s[1],5,0,rT),$T.fill(),$T.beginPath(),$T.arc(a[0],a[1],5,0,rT),$T.fill(),$T.beginPath(),$T.moveTo(s[0],s[1]),$T.strokeStyle="orange",$T.fillStyle="orange",$T.lineTo(a[0],a[1]),$T.stroke(),$T.font="12px Oxanium",$T.textAlign="center",$T.fillText(`${Math.floor(i)}px`,a[0],a[1]-20)})(r,s,"rgba(255,0,0,0.5)");const{leftEyeIris:a,rightEyeIris:i}=n;ET(a),ET(i);const{leftEyeLower0:o,rightEyeLower0:u,midwayBetweenEyes:l}=n;TT(l,"green"),TT(o,"red"),TT(u,"red")})(t),((t,e)=>{const n=CT/e*2;let r,s=0;for(var a=0;a<e;a++)r=t[a],$T.fillStyle="hsla("+360*r+",50%,50%,0.8)",$T.fillRect(s,ST-r/2,n,r/2),s+=n+1})(uT,oT),r&&r(t)}else r&&r(null);t&&requestAnimationFrame((()=>n(t,r)))};return n}().then((async t=>{try{OT=await(async t=>async function(t){return new Promise((async(e,n)=>{t=t||document.createElement("video");const r=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user",width:640,height:640}});t.onloadedmetadata=n=>{t.play(),t.width=t.videoWidth,t.height=t.videoHeight,console.log("Video camera",t),e(r)},t.srcObject=r}))}(t))(RT),_T.innerHTML="Camera located...<br> Please wait",MT=await(async t=>async function(t){return new Promise((async(e,n)=>{const r=()=>{t.width=t.naturalWidth,t.height=t.naturalHeight};t.naturalWidth>0?(r(),e(t)):(t.onloaded=()=>{r(),e(t)},t.onerror=t=>n(t))}))}(t))(DT),_T.innerHTML="Image downloaded...<br> Please wait",iT=new(window.AudioContext||window.webkitAudioContext),cT=iT.createGain(),cT.gain.value=0,lT=iT.createOscillator(),lT.type="sine",fT=iT.createDynamicsCompressor(),hT=iT.createDelay(100),pT=iT.createGain(),hT.delayTime.value=.01,pT.gain.value=.1,dT=iT.createAnalyser(),dT.minDecibels=-90,dT.maxDecibels=-10,dT.smoothingTimeConstant=.85,dT.fftSize=2048,oT=dT.fftSize,dT.fftSize=256,oT=dT.frequencyBinCount,uT=new Uint8Array(oT),lT.frequency.value=261.63,lT.connect(hT),hT.connect(pT),pT.connect(hT),hT.connect(cT),cT.connect(fT),fT.connect(dT),dT.connect(iT.destination),LT={audioContext:iT,oscillator:lT,analyser:dT,gain:cT},_T.innerHTML="Audio Available...<br> Please wait",wT(.5),FT=await NT(aT()),console.log("instrument",FT),_T.innerHTML="Samples available...<br> Please wait",console.log("Streamin",{video:RT,photo:MT,camera:OT})}catch(t){console.error("Bummer",t),_T.innerHTML="Something went wrong :(<br>"+t}zT=RT,IT.width=zT.width,IT.height=zT.height,console.error("Tensorflow",r),AT.classList.add(zT.nodeName.toLowerCase()),AT.classList.remove("loading"),_T.innerHTML="Open your mouth!";const e=[];t(zT===RT,(t=>{if(!(t&&t.faceInViewConfidence>.9))return gT&&(gT=!1,lT.disconnect()),console.error("stop audio",{playing:gT}),void(_T.innerHTML="Come back! I need to see your face!");gT||("suspended"===iT.state&&iT.resume(),lT.connect(hT),gT=!0,bT());const n=t.mouthRange/40,r=Math.abs(t.yaw),s=(Math.abs(t.pitch),0,(a=n)>1?1:a<0?0:a);var a;const i=function(t){return t*t*t}(s);if(s>.3){const t=Math.floor(r*kT.length),n=((t,e=0,n={loop:!1})=>{const r=iT.createBufferSource();return r.buffer=t,r.loop=n.loop,r.connect(hT),r.onended=()=>{r.disconnect(),yT=!1},0==e?r.start():r.start(0,iT.currentTime-e),yT=!0,r})(FT[kT[t]],0,!1);e.push(n)}wT(i),_T.innerHTML=`PITCH:${t.pitch} YAW:${t.yaw} MOUTH:${100*s}% -> ${FT.title}`}))}))}()}();
//# sourceMappingURL=index.ca4cd3a3.js.map
