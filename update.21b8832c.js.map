{"mappings":"4wCAeaA,EAAUC,MAAOC,EAAG,sBAAA,IAA4BC,SAAS,CAACC,EAAQC,SAG1EC,EADAC,EAAc,QAKZC,EAAgB,KACrBF,EAAIG,QAAQC,YAAAA,CAAcC,KAAM,iBAChCC,OAAOC,SAASC,UAIXC,EAAed,UAEpBK,QAAYU,UAAUC,cAAcC,SAAAA,EAAAA,yBACrBZ,EAAIa,YAELH,UAAUI,QAAAA,OAEjBC,QAAoBL,UAAUI,QAAQE,WACxCD,IAEHd,EArCgB,EAACgB,EAAOC,EAAW,WAChCC,EAAAA,CAAS,QAAS,KAAM,KAAM,SAEtB,IAAVF,QAEI,KAAKE,EAAM,SAIbC,EAAKF,EAAW,EAAI,EAAIA,EACxBG,EAAIC,KAAKC,MAAMD,KAAKE,IAAIP,GAASK,KAAKE,IAFlC,cAGHC,YAAYR,EAAQK,KAAKI,IAHtB,KAG6BL,IAAIM,QAAQP,IAAO,IAAMD,EAAME,IA0BrDO,CAAYb,EAAYc,QAIxC7B,EAAI8B,cAAgBnC,gBACboC,EAAY/B,EAAIa,WACtBkB,EAAUC,cAAgBrC,aACD,cAApBoC,EAAUE,SAETvB,UAAUC,cAAAA,OAEPuB,QAAyBxB,UAAUC,cAAcwB,kBACnDD,GAAoBA,EAAiB/B,SAGxCL,EAAQI,QAGTH,EAAO,0BAIRA,EAAO,oBAOP,kBAAmBW,UAGM,aAAxB0B,SAASC,WAEZ5B,IAEAH,OAAOgC,iBAAkB,OAAQ7B,EAAAA,CAAc8B,MAAK,IAIrDxC,EAAO,kCAQIyC,EAAY7C,MAAOC,EAAG,kCAIhCF,cAFoBA,EAAQE,GAG5B6C,iBAAgB,SAGXC,UAGNC,QAAQnB,IAAIkB,IAEL","sources":["./source/update.js"],"sourcesContent":["\r\nconst formatBytes = (bytes, decimals = 2) => {\r\n\tconst SIZES = ['Bytes', 'KB', 'MB', 'GB'];\r\n\t\r\n\tif (bytes === 0)\r\n\t{\r\n\t\treturn '0 '+SIZES[0];\r\n\t} \r\n\t\r\n\tconst k = 1024;\r\n\tconst dm = decimals < 0 ? 0 : decimals;\r\n\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\treturn parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + SIZES[i];\r\n}\r\n\r\nexport const updater = async (sw='service-worker.js') => new Promise( (resolve,reject) => {\r\n\t\r\n\tlet storageUsed = 0\r\n\tlet reg\r\n\r\n\t// The actual install script!\r\n\t// NB. exported by wrapper\r\n\tconst installUpdate = () => {\r\n\t\treg.waiting.postMessage({ type: 'SKIP_WAITING' });\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\t// Use the window load event to keep the page load performant\r\n\tconst checkUpdates = async () => {\r\n\t\t\t\r\n\t\treg = await navigator.serviceWorker.register('service-worker.js');// sw\r\n\t\tconst worker = reg.installing;\r\n\t\r\n\t\tif (worker && navigator.storage) \r\n\t\t{\r\n\t\t\tconst storageData = await navigator.storage.estimate();\r\n\t\t\tif (storageData) \r\n\t\t\t{\r\n\t\t\t\tstorageUsed = formatBytes(storageData.usage);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treg.onupdatefound = async () => {\r\n\t\t\tconst newWorker = reg.installing;\r\n\t\t\tnewWorker.onstatechange = async () => {\r\n\t\t\t\tif (newWorker.state === 'installed') \r\n\t\t\t\t{\r\n\t\t\t\t\tif (navigator.serviceWorker) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst registeredWorker = await navigator.serviceWorker.getRegistration();\r\n\t\t\t\t\t\tif (registeredWorker && registeredWorker.waiting) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// show update icon!\r\n\t\t\t\t\t\t\tresolve(installUpdate);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treject(\"No Service Worker\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// not instaLLed\r\n\t\t\t\t\treject(\"Not Installed\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Check that service workers are supported\r\n\tif ('serviceWorker' in navigator) \r\n\t{\r\n\t\t// hook into load event if we haven't loaded yet\r\n\t\tif (document.readyState === 'complete')\r\n\t\t{\r\n\t\t\tcheckUpdates()\r\n\t\t}else{\r\n\t\t\twindow.addEventListener( 'load', checkUpdates,{once:true} )\r\n\t\t}\r\n\r\n\t}else{\r\n\t\treject(\"Service Workers not allowed\");\r\n\t}\r\n})\r\n\r\n\r\n\r\n\r\n// \r\nexport const updateApp = async (sw='service-worker.js') => {\r\n\ttry{\r\n\t\tconst update = await updater(sw);\r\n\t\treturn {\r\n\t\t\tupdater:update,\r\n\t\t\tupdateAvailable:true\r\n\t\t}\r\n\r\n\t}catch(error){\r\n\r\n\t\t// no updates or app not installed etc\r\n\t\tconsole.log(error)\r\n\r\n\t\treturn false\r\n\t}\r\n}\r\n"],"names":["updater","async","sw","Promise","resolve","reject","reg","storageUsed","installUpdate","waiting","postMessage","type","window","location","reload","checkUpdates","navigator","serviceWorker","register","installing","storage","storageData","estimate","bytes","decimals","SIZES","dm","i","Math","floor","log","parseFloat","pow","toFixed","formatBytes","usage","onupdatefound","newWorker","onstatechange","state","registeredWorker","getRegistration","document","readyState","addEventListener","once","updateApp","updateAvailable","error","console"],"version":3,"file":"update.21b8832c.js.map"}