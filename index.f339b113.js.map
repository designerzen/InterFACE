{"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","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./source/install.js","./node_modules/@pwabuilder/pwainstall/dist/pwa-install.js","./node_modules/@pwabuilder/pwaupdate/dist/pwa-update.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/directive.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/dom.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/part.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/template.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/template-instance.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/template-result.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/parts.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/default-template-processor.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/template-factory.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/render.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lit-html.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/modify-template.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-html/lib/shady-render.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-element/lib/updating-element.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-element/lib/decorators.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-element/lib/css-tag.js","./node_modules/@pwabuilder/pwaupdate/node_modules/lit-element/lit-element.js","./node_modules/@pwabuilder/pwaupdate/build/pwa-update.js"],"sourcesContent":[null,null,null,null,"/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, customElement, css, property } from 'lit-element';\nlet pwaupdate = class pwaupdate extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.swpath = \"pwabuilder-sw.js\";\n        this.updateevent = \"SKIP_WAITING\";\n        this.updatemessage = \"An update for this app is available\";\n        this.readyToAsk = false;\n        this.showStorageEstimate = false;\n        this.showOfflineToast = false;\n        this.offlineToastDuration = 2400;\n        this.storageUsed = null;\n    }\n    static get styles() {\n        return css `\n      :host {\n        font-family: sans-serif;\n\n        --toast-background: #3c3c3c;\n        --button-background: #0b0b0b;\n      }\n\n      #updateToast {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        background: var(--toast-background);\n        color: white;\n        padding: 1em;\n        border-radius: 4px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        min-width: 22em;\n        font-weight: 600;\n\n        animation-name: fadein;\n        animation-duration: 300ms;\n      }\n\n      #storageToast {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        background: var(--toast-background);\n        color: white;\n        padding: 1em;\n        border-radius: 4px;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-end;\n\n        font-weight: 600;\n      }\n\n      #storageEstimate {\n        font-size: 10px;\n        margin-top: 8px;\n      }\n\n      #updateToast button {\n        color: white;\n        border: none;\n        background: var(--button-background);\n        padding: 8px;\n        border-radius: 24px;\n        text-transform: lowercase;\n        padding-left: 14px;\n        padding-right: 14px;\n        font-weight: bold;\n      }\n\n      @keyframes fadein {\n        from {\n          opacity: 0;\n        }\n\n        to {\n          opacity: 1;\n        }\n      }\n    `;\n    }\n    async firstUpdated() {\n        if (this.swpath) {\n            if ('serviceWorker' in navigator) {\n                const reg = await navigator.serviceWorker.register(this.swpath);\n                let worker = reg.installing;\n                if (worker) {\n                    if (navigator.storage) {\n                        const storageData = await navigator.storage.estimate();\n                        if (storageData) {\n                            this.storageUsed = this.formatBytes(storageData.usage);\n                            this.showOfflineToast = true;\n                            await this.updateComplete;\n                            const ani = this.shadowRoot.querySelector('#storageToast').animate([\n                                {\n                                    opacity: 0\n                                },\n                                {\n                                    opacity: 1\n                                }\n                            ], {\n                                fill: 'forwards',\n                                duration: 280\n                            });\n                            setTimeout(async () => {\n                                ani.onfinish = () => {\n                                    this.showOfflineToast = false;\n                                };\n                                await ani.reverse();\n                            }, this.offlineToastDuration);\n                        }\n                    }\n                }\n                reg.onupdatefound = async () => {\n                    let newWorker = reg.installing;\n                    newWorker.onstatechange = () => {\n                        if (newWorker.state === 'installed') {\n                            this.dispatchEvent(new Event('pwaUpdate'));\n                        }\n                    };\n                };\n            }\n        }\n        this.setupEvents();\n    }\n    setupEvents() {\n        this.addEventListener('pwaUpdate', async () => {\n            if (navigator.serviceWorker) {\n                this.swreg = await navigator.serviceWorker.getRegistration();\n                if (this.swreg && this.swreg.waiting) {\n                    this.readyToAsk = true;\n                }\n            }\n        });\n    }\n    doUpdate() {\n        this.swreg.waiting.postMessage({ type: this.updateevent });\n        window.location.reload();\n    }\n    formatBytes(bytes, decimals = 2) {\n        if (bytes === 0)\n            return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n    render() {\n        return html `\n      <div>\n       ${this.readyToAsk ? html `\n           <div id=\"updateToast\" part=\"updateToast\">\n             <span>${this.updatemessage}</span>\n\n             <button @click=\"${() => this.doUpdate()}\">Update</button>\n           </div>\n         ` : null}\n\n      ${this.showOfflineToast ? html `\n          <div id=\"storageToast\" part=\"offlineToast\">\n            Ready to use Offline\n\n            ${this.showStorageEstimate ? html `<span id=\"storageEstimate\">Cached ${this.storageUsed}</span>` : null}\n          </div>\n        ` : null}\n      </div>\n    `;\n    }\n};\n__decorate([\n    property({ type: String })\n], pwaupdate.prototype, \"swpath\", void 0);\n__decorate([\n    property({ type: String })\n], pwaupdate.prototype, \"updateevent\", void 0);\n__decorate([\n    property({ type: String })\n], pwaupdate.prototype, \"updatemessage\", void 0);\n__decorate([\n    property({ type: Boolean })\n], pwaupdate.prototype, \"readyToAsk\", void 0);\n__decorate([\n    property({ type: Boolean })\n], pwaupdate.prototype, \"showStorageEstimate\", void 0);\n__decorate([\n    property({ type: Boolean })\n], pwaupdate.prototype, \"showOfflineToast\", void 0);\n__decorate([\n    property({ type: Number })\n], pwaupdate.prototype, \"offlineToastDuration\", void 0);\n__decorate([\n    property({ type: String })\n], pwaupdate.prototype, \"storageUsed\", void 0);\npwaupdate = __decorate([\n    customElement('pwa-update')\n], pwaupdate);\nexport { pwaupdate };\n//# sourceMappingURL=pwa-update.js.map"],"names":["t","window","customElements","polyfillWrapFlushCallback","e","i","nextSibling","removeChild","String","Math","random","slice","n","s","RegExp","o","constructor","parts","element","a","document","createTreeWalker","content","p","h","c","strings","u","values","length","m","nextNode","nodeType","hasAttributes","attributes","r","name","d","exec","toLowerCase","getAttribute","removeAttribute","split","push","type","index","tagName","currentNode","data","indexOf","parentNode","l","createTextNode","insertBefore","previousSibling","pop","createComment","has","forEach","WeakMap","f","g","y","__parts","template","processor","options","update","setValue","commit","_clone","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","v","b","getHTML","lastIndexOf","substr","getTemplateElement","createElement","innerHTML","x","w","Array","isArray","Symbol","iterator","_","dirty","_createPart","S","_getValue","value","setAttribute","committer","C","__pendingValue","appendInto","startNode","appendChild","endNode","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","templateFactory","P","Error","k","single","N","E","capture","addEventListener","removeEventListener","A","eventName","eventContext","__boundHandleEvent","handleEvent","once","passive","__options","T","call","$","M","get","stringsArray","keyString","Map","set","join","B","V","litHtmlVersions","O","U","z","ShadyCSS","prepareTemplateDom","console","warn","j","R","L","Set","I","add","querySelectorAll","prepareTemplateStyles","textContent","from","firstChild","querySelector","nativeShadow","JSCompiler_renameProperty","D","toAttribute","Boolean","Object","JSON","stringify","fromAttribute","Number","parse","F","q","attribute","converter","reflect","hasChanged","W","HTMLElement","_updateState","_instanceProperties","_updatePromise","Promise","_enableUpdatingResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","_attributeNameForProperty","_attributeToPropertyMap","_ensureClassProperties","hasOwnProperty","getPrototypeOf","createProperty","noAccessor","prototype","getPropertyDescriptor","defineProperty","_requestUpdate","configurable","enumerable","getPropertyOptions","finalized","properties","getOwnPropertyNames","getOwnPropertySymbols","_valueHasChanged","_propertyValueFromAttribute","_propertyValueToAttribute","_saveInstanceProperties","_applyInstanceProperties","connectedCallback","enableUpdating","disconnectedCallback","attributeChangedCallback","_attributeToProperty","_propertyToAttribute","_hasRequestedUpdate","_enqueueUpdate","requestUpdate","updateComplete","performUpdate","hasUpdated","shouldUpdate","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","H","kind","descriptor","assign","finisher","key","placement","initializer","J","Y","Document","CSSStyleSheet","K","Z","cssText","styleSheet","_styleSheet","replaceSync","toString","G","reduce","litElementVersions","Q","X","getStyles","styles","_getUniqueStyles","_styles","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","styleElement","render","scopeName","host","createDocumentFragment","delete","tt","arguments","getOwnPropertyDescriptor","Reflect","decorate","et","manifestpath","openmodal","hasprompt","relatedApps","explainer","featuresheader","descriptionheader","installbuttontext","cancelbuttontext","iosinstallinfotext","isSupportingBrowser","isIOS","navigator","userAgent","includes","maxTouchPoints","installed","handleInstallPromptEvent","cancel","getManifestData","error","getInstalledRelatedApps","deferredprompt","preventDefault","checkManifest","icons","description","fetch","json","manifestdata","scrollToLeft","shadowRoot","scrollBy","left","clientWidth","top","behavior","scrollToRight","openPrompt","CustomEvent","dispatchEvent","closePrompt","shouldShowInstall","install","prompt","userChoice","outcome","getInstalledStatus","standalone","matchMedia","matches","hasAttribute","usecustom","iconpath","src","short_name","features","screenshots","it","define","elements","resolve","_hasConnectedResolver","_hasConnected","flat","st","swpath","updateevent","updatemessage","readyToAsk","showStorageEstimate","showOfflineToast","offlineToastDuration","storageUsed","serviceWorker","register","installing","storage","estimate","formatBytes","usage","animate","opacity","fill","duration","setTimeout","onfinish","reverse","onupdatefound","onstatechange","state","Event","setupEvents","swreg","getRegistration","waiting","doUpdate","postMessage","location","reload","floor","log","parseFloat","pow","toFixed","directives","isDirective","isCEPolyfill","undefined","removeNodes","container","start","end","noChange","nothing","marker","nodeMarker","markerRegex","Template","[object Object]","result","this","nodesToRemove","stack","walker","lastPartIndex","partIndex","node","count","endsWith","stringForPart","lastAttributeNameRegex","attributeLookupName","attributeValue","statics","parent","lastIndex","insert","createMarker","match","str","suffix","isTemplatePartActive","part","TemplateInstance","fragment","nodeIndex","commentMarker","TemplateResult","html","isCommentBinding","commentOpen","attributeMatch","isPrimitive","isIterable","AttributeCommitter","AttributePart","text","directive","NodePart","ref","valueAsString","instance","itemParts","itemPart","item","BooleanAttributePart","PropertyCommitter","super","PropertyPart","eventOptionsSupported","_e","EventPart","newListener","oldListener","shouldRemoveListener","shouldAddListener","getOptions","event","defaultTemplateProcessor","prefix","templateCache","templateCaches","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","countNodes","startIndex","getTemplateCacheKey","compatibleShadyCSSVersion","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","renderedDOM","templateElement","condensedStyle","style","templates","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","removes","prop","_obj","defaultConverter","notEqual","old","defaultPropertyDeclaration","microtaskPromise","UpdatingElement","attr","superProperties","oldValue","superCtor","props","propKeys","_v","ctor","attrValue","propName","shouldRequestUpdate","reject","previousUpdatePromise","res","rej","changedProperties","standardProperty","clazz","property","protoOrDescriptor","proto","legacyProperty","supportsAdoptingStyleSheets","constructionToken","CSSResult","safeToken","css","acc","idx","textFromCSSResult","flattenStyles","Infinity","arrayFlat","LitElement","userStyles","templateResult","hasRendered","needsScoping","firstScopeRender","renderContainer","litRender","__decorate","decorators","target","desc","pwaupdate","reg","storageData","ani","async","newWorker","bytes","decimals","dm","classOrDescriptor","legacyCustomElement","standardCustomElement"],"version":3,"file":"index.f339b113.js.map","sourceRoot":"/__parcel_source_root/"}