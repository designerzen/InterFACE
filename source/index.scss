// Special thanks to 
// https://nicolas-hoizey.com/articles/2015/02/18/viewport-height-is-taller-than-the-visible-part-of-the-document-in-some-mobile-browsers/
// for fixing my 100vh not being 100% viewport height on mobile safari
$easeInBack:  cubic-bezier(0.600, -0.280, 0.735, 0.045);
$easeOutBack:  cubic-bezier(0.175,	0.885, 0.320, 1.275);
$easeInOutBack:  cubic-bezier(0.680, -0.550, 0.265, 1.550);

$col-white:hsl(22, 28%, 87%);
$col-dark:hsl(30, 6%, 14%);
$col-grey:hsl(11, 6%, 50%);
$col-cream:hsl(23, 18%, 53%);
$col-tan:hsl(27, 30%, 45%);
$col-brown:hsl(23, 22%, 30%);
$col-blue:hsl(196, 18%, 33%);
$col-green:hsl(56, 18%, 33%);
$col-yellow:hsl(41, 34%, 50%);
$col-orange:hsl(28, 69%, 38%);
$col-red:hsl(9, 58%, 35%);

%image-replacement{
	text-indent: -9999px;
	overflow:hidden;
	color:transparent;
	text-shadow:none;
	white-space: pre;
	font-size: 0;
	background-position: center center;
	justify-content: center;
}
  

// @import url('https://fonts.googleapis.com/css2?family=Oxanium:wght@774&display=swap');
// @font-face {
// 	font-family: 'Oxanium';
// 	src: './assets/fonts/Oxanium.ttf' format('truetype');
// 	// font-weight: 125 950;
// 	// font-stretch: 75% 125%;
// 	font-style: normal;
//    }

html,body,h1,h2,h3,h4,h5,h6,p{

	margin:0;
	padding:0;
}
:root{
	
	--curve:12px;
	--pad:2vmin;
	--footer-gap:calc(61px);

	--ease-s:450ms;
	--ease-m:90ms;
	--ease-q:45ms;
}

html, input, button, textarea, option, select{
	font-family: 'Oxanium', sans-serif !important;
	font-weight: 800;

}
  
html{
	// allows 100vh to work on mobile safari
	height: -webkit-fill-available;
	text-rendering: optimizeSpeed;

	// dark
	transition: background-color var(--ease-s) linear;

	color:$col-white;
	background-color:$col-dark;
	background-image:linear-gradient(rgba($col-dark, 0.5), rgba($col-dark, 0.1));
	text-rendering: optimizeSpeed;

	// light
	&.loading{
		background-color:$col-white;
		background-image:linear-gradient(rgba(white, 0.9), rgba(white, 0.1) );
	}
}

body {
	// prevent collapse
	min-height: -webkit-fill-available;
	min-height: 100vh;
}

html.loading body{
	background-image: url(./assets/textures/45-degree-fabric-light.png);
}
  
body, main{
	// overflow: hidden;
}

body{
	overflow: hidden;
	display: flex;
}

h1 strong,h2,h3,h4,h5,h6{
	font-weight: 800;
}

h1{
	font-weight: 200;
}

label,select,option{
	font-size:1rem;
}

p{
	font-weight: 500;
}

p[aria-label="Summary"]{
	color:transparent;
	text-shadow: none;
}

small{
	font-size: 60%;
	font-weight: 200;
}

a{
	color:$col-blue;
	text-decoration: none;
}

header{
	position: absolute;
	z-index: -1;
	top:0;
	right:0;
	left:0;
	//overflow: hidden;
	// above feedback
	bottom:5rem;
	display: grid;
	text-align: center;
	justify-content: center;

	h1{
		background-color: $col-dark;
		color: $col-grey;
		
		strong{
			color:$col-blue;
		}
		display: inline-block;
		padding:var(--pad) calc(var(--pad) * 2);
		text-transform: uppercase;
		align-self: self-start;
		justify-self: center;
		margin-top:var(--pad);
		transition:color var(--ease-s) ease-out;
		// font-size: clamp(1rem, -0.5385rem + 7.6923vw, 3.5rem);
		// clamp(minimum, preferred, maximum)
		font-size:clamp(2rem, -0.5385rem + 7.6923vw, 3.5rem);
		text-shadow: rgba(0,0,0,0.56) 0 1px 4px,
					rgba(0,0,0,0.56) 0 2px 4px,
					rgba(0,0,0,0.56)0 3px 4px,
					rgba(255,255,255,0.96) 0 0 4px;
	}
	
	h2,p{

		text-shadow: rgba(white,0.96) 0 1px 4px,
					rgba(white,0.7) 0 2px 4px,
					rgba(white,0.5) 0 3px 4px,
					rgba($col-cream,0.56) 0 0 4px;
		
	}
	h2{
		color: $col-yellow;
		margin-top:auto;
	}
	.logo{
		align-self:flex-end;//  flex-start;
		z-index: -2;
	}
}

.logo, h1, h2{
	// position: absolute;
	// top:0;
	// left:0;
}

// inline logo :)
.logo{
	margin-left:auto;
	margin-right:auto;
	display: flex;
	flex-direction: column;

	// we can transition fill :)
	fill:currentColor;
	transition:fill var(--ease-m) linear;

	width:100%;
	min-height:10vh;
	max-height:90vmin;
	max-width:90vmin;
	color:transparent;
	visibility: visible;
	// overflow: hidden;
	z-index:1;

	svg{
		order: -1;
	}

	// background:url(./assets/logos/interface.svg) no-repeat left;
	// background-size: contain;
	// background-position: left;
}

main{
	display:flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	// min-width:100%;
	
	margin:auto;
	// height: 100%;
	// min-height: 320px;
	// max-height: 100vh;
}
option, select{
	text-align: center;
}
select{
	appearance: none;
	padding:var(--pad);
}

// Loading progress	
label#progress-bar{
	position: absolute;
	// left:var(--pad);
	// right:var(--pad);
	width:100%;
	bottom:10%;
	color: $col-brown;
	outline: none;
	border:0;
	display: flex;
	flex-direction: column;

	&:hover{
		background-color: transparent;
	}

	#progress{
		//@extend:60%;
		// // border-radius: 99%;
		// max-width:80%;
		margin:auto;
	}
}

#app-frame{

	--person-a-x:0;
	--person-a-y:0;
	--person-b-x:0;
	--person-b-y:0;

	// shadow
	--wig:0;
	--hue:180;
	--l:20%;
	
	// we only disable this in jumbo mode
	position: relative;

	// height: 100%;
	// min-height: 320px;
	// max-height: 100vh;
	// max-width: 100%;
	// max-height: 100%;

	// object-fit: contain;

	transition:opacity var(--ease-s) ease-out;

	display:block;

	// rounded corners
	border-radius:var(--curve);
	overflow: hidden;

	background-color: black;

	box-shadow:
		var(--wig) -1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
		var(--wig) -2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
		var(--wig) -4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
		var(--wig) -8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
		var(--wig) -13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
		var(--wig) -23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
		var(--wig) -50px 51px hsla(var(--hue), 90%, 10%, 0.15),
		
		var(--wig) 1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
		var(--wig) 2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
		var(--wig) 4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
		var(--wig) 8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
		var(--wig) 13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
		var(--wig) 23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
		var(--wig) 50px 51px hsla(var(--hue), 90%, 10%, 0.15);
	// $col-yellow
	
	// show a graphic but hide contents
	&::before, &::after{
		transition: var(--ease-s) linear opacity;
		opacity:0;
	}
	// Overlaid logo
	&:before{
		animation: Fade var(--ease-s) linear 0s 1 normal both;
		opacity:0.9;
		position: absolute;
		top:-4px;
		right:5px;
		width:10%;
		display: block;
		z-index:3;
		content:url(./assets/logos/interface_colour.svg);
	}

	video,canvas{
		// max-width:100%;
		// max-height:100vh;
		// height:auto;

		// put them all in the same place in the grid
		object-fit: contain;
		//margin:auto;
		visibility: hidden;	
	}

	canvas{

		z-index: 1;
		position: relative;
		
		// stretch it to flood the width
		// width:100vw;

		height: auto;
		//width:100%;

		// prevent overflow
		// max-width: 100vw;
		// max-height: 100vh;

		// video actually always maintains apect ratio which we can abuse...	
		// @media (orientation: landscape) {
		// 	height: 100%;
		// 	width:calc(var(--width) / var(--height)  * 100vh );
		// }

		// width:100%;//clamp(100%, 100vw, 100% );
		height: 100vh;
		max-width: 100vw;
		// max-height: 100vh;
		// max-width: 100vw;
		// height:calc(var(--height) / var(--width) * 100vw );

		@media (orientation: portrait) {
			// 	height: 100%;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			width: 100%;
			height:calc(var(--height) / var(--width) * 100vw );
		}
		
		// @media (orientation: landscape) {
		// 	height: 100vh;
		// 	width:calc(var(--width) / var(--height)  * 100vh );
		// }
		// @media (orientation: portrait) {
		// 	width: 100vw;
		// 	height:calc(var(--height) / var(--width) * 100vw );
		// }
		
		// scale to fit screen?
		// landscape
		// @media (orientation: landscape) {
		// 	height:100vh;
		// 	width:calc(var(--width) / var(--height)  * 100vh );
		// }
		// // portrait
		// @media (orientation: portrait) {
		// 	width:100vw;
		// 	height:calc(var(--height) / var(--width) * 100vw );
		// }
	}

	// in front
	video{
		
		// flip it around
		transform: scaleX(-1);

		z-index: 0;
		position:absolute;
		top:0;
		left:0;
		// right:0;
		// bottom:0;
		width:100%;
		height:100%;
	}
}


// Hide controls on mouse out on hover devices
@media (any-hover: hover) {
	//@supports (html:focus-within){
			
		// #controls,
		#controls{
			//visibility: hidden;
			// transition:45ms linear opacity;
			// fade out
			animation: Fade var(--ease-s) linear 1500ms both reverse;
			// opacity:0;
		}

		html:focus-visible #controls,
		html:focus-within #controls,
		html:hover #controls{
			// opacity:1;
			//visibility: visible;
			animation: Fade var(--ease-q) linear 0s both;
		}

		html.debug #controls{
			animation:none;
		}
	//}
}

// funky text animations
.loading h1 strong,
p strong{
	animation:TextColours 4s linear infinite 0.05s both;
}

.loading {
	
	--loader-size:8vmin;
	--loader-duration:4;

	// show a graphic but hide contents
	&::before,&::after{
		content: '';
		opacity: 1;
		
		// height:6vh;
		// width:6vh;
		width:100%;
		height:100%;
		background-image:linear-gradient(blue,blue);
		background-size: var(--loader-size) var(--loader-size);
		background-position: top left;
		background-repeat: no-repeat;

		position: absolute;
		top:0;
		left:0;
		
		display: block;
		animation:Loading calc(var(--loader-duration) * 1s) 0s infinite $easeInOutBack;
	}

	&::after{
		animation-delay:calc( var(--loader-duration) / 4 * 0.02s );
		filter: blur(5px);
	}
	header{
		
		> *{
			max-height:100vh;
			grid-area: 1/1/1/1;
			visibility:visible;
			animation:Fade var(--ease-s) ease-in 1 0s both;
		}	
		.logo{
			@extend %image-replacement;
			color:#8d3525;

			align-self: center;
			height:100%;
			background-position: center;
			z-index:-1;
			animation:TextColours 4s linear infinite 0s both;
		}
		h1{
			//background-color: black;
			color: $col-orange;
			clip-path: polygon(15% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 45%);
		
		
		}

	}
	video{
		opacity:0.5;
	}
	#face{
		display: none;
	}
	main{

		overflow:hidden;
		position: relative;
		pointer-events: none;
		min-height: 100vh;
		

		> *:not(p){
			visibility: hidden;
			opacity:0;
			display: none;
		}
	}

	#feedback{
		text-align: center;
		bottom:var(--pad);
		top:auto;
	}
}

// FIXME:
.loaded{
	header{
		display:flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: flex-start;
		bottom:auto;

		.logo{
			margin:0;
			min-width:60px;
			// max-width:82px;
			position: absolute;
			left:0;
			right:0;
			top:0;
			align-self:flex-start;
			font-size: 0;
			fill:black;//$col-cream;
			svg{
				width: 100vw;
				height: 100vh;
			}
		}
		h1{
			margin:0;
			align-self:center;
			padding-left: 0;
			opacity:0.2;
			transition:opacity var(--ease-m) linear;
			writing-mode: vertical-rl;
			// transform: rotate(90deg) translateX(var(--pad));
			transform-origin: top left;
		}
		h2{
			margin-top:0;
		//	font-size:50%;
			width:100%;
			display:block;
			opacity:0;
		}
	}

	#progress-bar{
		display: none;
	}
	#app{
		#title{
			visibility: hidden;
			position: absolute;
			right:0;
		}
	}
	
	#app-frame video,
	#app-frame canvas{
		display: block;
		visibility: visible;
	}

	#foot{
		
	}
}

.no-midi {
	#button-midi{
		display: none;
	}
}


.midi {
	#button-midi{
		
	}
}
// MIDI is available buyt there are no instruments connected
.midi.no-instrument {
	#button-midi{
		
	}
}

.midi-no-devices{
	#button-midi{
		animation:BGColours 4s linear infinite 0s both;
	}
}

main.midi{
	#button-midi{
		display: flex;
	}
}

main.video{
	> img{
		display: none;
	}
}
main.img{
	> video{
		display: none;
	}
}

main{
	button{
		//display: none;
	}
}

main.active{
	button{
		display: block;
	}
}

p{
	color:$col-white;
	pointer-events: none;
	font-weight:bold;
	text-align:right ;
	display: inline-block;
	padding:var(--pad);
	// emboss
	

}

#toast{
	position: absolute;
	right:var(--pad);
	bottom:calc( var(--footer-gap) + var(--pad) );
	z-index:909;
	color:$col-white;
	background-color:rgba($col-dark,0.94);
	// text-shadow : rgba(255,255,255,0.96) 0 -1px 2px,
	// 				rgba($col-dark, 0.96) 0 0 2px;

	&:empty{
		display:none;
	}


}


#feedback{
	box-sizing: border-box;
	position: fixed;
	z-index: 303;
	top:var(--pad);
	text-align: center;
	// left:var(--pad);
	// right:var(--pad);
	// left:var(--pad);
	max-width: calc(100% - 2 * var(--pad));

	color:$col-dark;
	background-color:$col-white;
	border-radius: 3px;
	text-align: left;
	text-shadow : rgba(255,255,255,0.96) 0 -1px 2px,
					rgba($col-dark, 0.96) 0 0 2px;
					
	// cool carat
	&:after{
		display: inline-block;
		content:'';
		width: 6px;
		height:calc(1rem - 0px);
		background-color:$col-orange;
		margin-left:calc(var(--pad)/2);
		animation: Blink 1150ms 0s infinite normal both;
		vertical-align:text-bottom;
	}
	
	&:empty{
		display: none;
	}
}

#feedback:hover ~ canvas{
	opacity:0.5;
}

// we need this to visually look the same size as the video
#controls{
	
	display: block;
	margin:auto;
	padding:0;
	
	overflow: auto;
	position: absolute;
	top:0;
	left:0;
	right:0;
	bottom: 0;
	z-index:303;

	// width:100%;
	// pointer-events: none;

	// > *{
	// 	pointer-events: auto;
	// }

	/*
	// we need media queries to complete
	--ratio:calc( var(--width)/var(--height));
	max-width:var(--width);
	max-height:var(--height);
*/



	// &::before{
	// 	display: block;
	// 	content:'';
	// 	// width:calc(var(--width) / var(--height) * 100%);
	// 	// height:calc( 100% );
	// 	width:100%;
	// 	padding-bottom:calc(var(--width) / var(--height) * 100%);
	// }
}

.brand{
	background:url(./assets/logos/designerzen.svg) no-repeat left 2px center;
	background-size: contain;
	padding-left:15px;
}

#photographs{
	position: fixed;
	bottom:var(--footer-gap);
	left:0;
	right:0;
	display: flex;
	overflow: auto;
	overflow-y: hidden;
	// a bit of space to zomom
	padding-top:30px;
			
	&:focus-within {
		// prefer smooth scrolling where available (opinionated).
		scroll-behavior: smooth;
	}
	// grid-auto-rows: ;
	a{
		color:transparent;
		user-select: none;
		font-size:0;
		position: relative;
		box-sizing: border-box;
		transition: transform var(--ease-m) ease-out;

		&::before{
			content:'';
			border:4px solid $col-white;
			position: absolute;
			top:0;
			left:0;
			right:0;
			bottom:0;
			opacity: 0;
			transition: var(--ease-m) linear;
		}

		&:hover, &:focus{
			z-index:2;
			transform-origin: bottom center;
			transform:scale(1.2);			
			background-color: $col-dark;
			&::before{
				opacity: 1;
			}
		}
		
		&:focus{
			outline:4px solid $col-cream;
		}
	}

	img{
		max-width:120px;
		min-height:44px;
		max-height:12vmin;
		height: auto;
		width: auto;
		display:block;

	}
	
}
#release{
	color:$col-grey;
}


fieldset{
	--breakpoint:320px;//12ch;

	--gap: 1px;	
	--v:min( (var(--breakpoint) - 100%) * 999, 100%);
		
	opacity:1;
	border:0;
	margin:0;//var(--pad);
	padding:0;
	gap: var(--gap);  
	grid-gap: var(--gap);

	grid-template-columns:
		repeat(
		auto-fit,	
		minmax(
			var(--v),
			1fr
		)
	);
	
	grid-template-columns: max-content;

	display: grid;
	// grid-template-columns:1fr 1fr ;
	position: relative;
	// NB. ensure in front of the person buttons
	z-index:909;
	transition:opacity var(--ease-s) linear;
	animation:Fade var(--ease-s) ease-in 1 0s both;
}

fieldset:empty{
	display: none;
	opacity:0;
	animation:Fade var(--ease-s) ease-in 1 0s reverse both;
}


label{
	--padding:calc( 1 * var(--pad));
	//outline: 1px groove $col-cream;
	font-weight:900;
	text-transform: uppercase;
	cursor: pointer;
	transition:color var(--ease-s) linear, background-color 90ms linear;

	padding:var(--padding);// var(--pad) 0 var(--pad);
	&:hover, &:focus{
		color:$col-white;
		background-color: $col-blue;
		outline:none;
	}


}


// actual button
input[type=radio]{
	appearance: none;
}

// STATES ==========================

.active button.person{
	display: block;	
}

// There are no faces looking at the screen
.no-faces{ 
	#app-frame{

		// opacity:0.8;

		&::after{
			content:'';
			position: absolute;
			top:0;
			left:0;
			right:0;
			bottom:0;
			background:url(assets/icons/child_care-24px.svg) no-repeat center center;
			background-size: contain;
			opacity:1;
			transform:translateZ(100px);
			display: block;
		}
	}
	
}

// Could not load due to privacy restrictoin or user uninteraction
.failure{
	#controls{
		display: none;
	}
	#feedback{
		left:var(--pad);
		bottom:calc(50vh - 0.5rem);
		text-align: center;
		color:$col-red;
		font-size:200%;
	}
}

[id]{
	scroll-margin-top: 2ex;
	// stupid old safari
	scroll-snap-margin-top:2ex;
}


// BUTTON ABSTRACT
button,
#shared-controls > *{

	--icon-size:32px;
	--fade-speed:var(--ease-q);
	--pos: left var(--pad) center;

	--col-top:$col-cream;
	--col-bottom: $col-grey;
	

	// inset
	text-shadow: rgba($col-white,0.4) 0 0px 2px,
				rgba($col-white,0.3) 0 0.5px 2px,
				rgba($col-cream,0.2) 0 1px 2px,
				rgba($col-cream,0.1) 0 1.5px 2px;

	border-radius:5px;
	border-style: double ridge outset groove;
	cursor: pointer;

	// from ios guidelines
	min-width:44px;
	min-height:44px;
	position: relative;
	box-sizing: border-box;
	margin:0;
	padding:var(--pad);
	// force onto one line...
	white-space: pre;
	user-select: none;
	appearance: none;
	line-height: 1;
	
	// -0.5385rem + 7.6923vw
	// clamp(minimum, preferred, maximum)
	font-size:clamp(8px, -0.5385rem + 2.2vmax, 14px);

	// max-width:calc(100% - 2 * var(--pad));
	z-index:1;
	display: flex;
	//flex-wrap: auto;
	flex-direction: row;
	// ensure a gap between row items...

	// align-items: center;
	// justify-content: center;
	// flex-wrap: wrap;	
	align-items: center;
	justify-content: space-between;
	//justify-content: center;

	background-color:$col-cream;

	background-image: var(--bg),
					  url(./assets/textures/45-degree-fabric-light.png);
					//   linear-gradient( var(--col-top), var(--col-bottom));

	background-repeat:no-repeat, 
					  repeat, 
					  repeat-x;
	
	background-size:auto var(--icon-size), 
					auto, 
					auto ;
	
	// background-position:top var(--pad) center;
	background-position: var(--pos),
						center, 
						center;
	
	color:$col-dark;
	
	// animations
	transition:transform var(--fade-speed) $easeOutBack,
				background-color var(--fade-speed) linear, 
				color var(--fade-speed) linear;

	&:empty{ 
		display:none;
	}
	
	// Inherit the icon and recolour
	&:before{
		display: block;

		// try and set to the size of the background icon
		min-width:var(--icon-size);
		min-height:var(--icon-size);

		content:'';
		
		// background:inherit;
		// background-image: none;
		background:transparent var(--bg) no-repeat;
		// background-color:transparent;
		background-position:top center;
		background-size:auto var(--icon-size);

		filter:brightness(0%);
		
		opacity:1;
		// z-index: -1;
		transition:opacity var(--fade-speed) linear;
	}
	
	&:not(.hide-text):before{
		margin-right:calc(var(--pad) / 2 );
	}
	&:hover, &:focus{

		&:before{
			opacity:0;
			z-index:1;
		}
	}
	&:active{
		background-color: $col-orange;
	}

	&.hide{
		display: none;
	}
}

// show even the hidden text!
@media screen and (max-width:1960px){
	
	:root{
		
	}

	button,
	#shared-controls > * {
		.hide-text{
			// %image-replacement
			text-indent: -9999px;
			overflow:hidden;
			color:transparent;
			text-shadow:none;
			white-space: pre;
			font-size: 0;
			background-position: center center;
			justify-content: center;
		}	
	}
}

// stack
@media screen and (max-width:1240px){
	
	:root{
		--footer-gap:calc(74px);
	}

	button,
	#shared-controls > *{
		--icon-size:26px;
		flex-direction: column;
		--pos:top var(--pad) center;
		
		// remove margin
		&:not(.hide-text):before{
			margin-right:0;
		}
	}
}

// smallest always hides text so overrides here...
@media screen and (max-width:586px){

	:root{
		--footer-gap:calc(67px);
	}

	button,
	#shared-controls > *{
		--icon-size:28px;
		font-size: 0;
		text-indent: -9999px;
		overflow:hidden;
		color:transparent;
		flex-direction: row;
		// as there is now no loner any text we need to centralise the icon
		justify-content: center;
		--pos: center center;
	}
}


// smallest always hides text so overrides here...
@media screen and (max-width:340px){

	:root{
		--footer-gap:calc(67px);
	}

	// smallest icon size to squeeze fit
	button,
	#shared-controls > *{
		--icon-size:20px;
		max-width:33px;
		min-width:22px;
	}
}



// Overlay buttons
#shared-controls{

	// backgrounds
	--col-regular:#{$col-dark};
	--col-hover:#{$col-orange};
	--col-select:#{$col-yellow};
	
	bottom:0;
	// position:fixed;
	left:0;
	//right:0;
	min-width:100vw;

	display:flex;
	align-items: stretch;
	justify-content: stretch;
	
	background-image: 	url(./assets/textures/45-degree-fabric-light.png),
						linear-gradient( $col-cream, $col-grey );
	
	// background-image: url(./assets/textures/45-degree-fabric-light.png),
	// 					linear-gradient( fade($col-cream, 0.5), fade($col-grey, 0.5));
	
	//overflow: hidden;
	// overflow: scroll;
	//overflow-y:hidden;

	
	// need to bring it into z-range
	z-index:303;
	
	// @media screen and (min-width:640px){
		
	// }

	// we swap this to absolute when we want to window it
	position: fixed;

	label{

		// background-color:$col-yellow;
		// base plane shows funky
		
		input{
			opacity:0;
			height: 0;
			width: 0;
			overflow: hidden;
			position: absolute;
			top:0;
			left:0;
		}	
	
		// Indicator
		&:after{
			
			background-color: var(--col-select, $col-orange);
			opacity:0.5;
			content:'';
			display: block;
			position: absolute;
			left:0;
			right:0;
			bottom:0;
			height:8px;
			transform-origin: center bottom;
			transform:translateY(100%);
			transition:opacity var(--ease-s) linear,
						transform var(--ease-s) $easeOutBack;
		}

		&.checked{
			background-color: var(--col-select);
		}
	
		// toggled state eachone can have unique color
		&.checked:before{
			opacity: 0;
		}
		&.checked:after{
			opacity:1;
			transform:translateY(20%);
		}
	}

	legend{
		position: absolute;
		bottom:100%;
		background-color:transparent;
		color:transparent;
		user-select: none;
		pointer-events: none;
		border:0;
		visibility: hidden;
		&:focus{
			color:$col-white;
			visibility: visible;
		}
	}

	label,button{
		
		// labels can collapse without text to expand them
		text-transform: uppercase;
	
		//border-left:0;
		border-right:1px groove $col-dark;
		border-top:1px groove $col-white;
		border-bottom:1px groove $col-dark;
		
		font-weight:900;
		// color:var(--col-regular);
		// background-color:rgba($col-yellow,0.5);

		&:active{
			--col-top:$col-select;
			--col-bottom:$col-select;
			transform: scale(0.96);
			//background-color: var(--col-select);
		}
		&.checked,
		&.checked:hover,
		&:hover, &:focus{
			color:$col-white;
			background-color: var(--col-regular);
		}

		&.checked{
			--col-top:$col-dark;
			--col-bottom:$col-dark;
			//background-color: var(--col-regular);
			// background-color: $col-dark;
		}
	
	}
	
	> * + *{
		border-left:1px groove $col-white;
		
	}
		

	button{

		
		// padding-right:20px;
	
	
	}

	// an update is available to the app!
	button.install-app,
	button.update-available{
		order:-1;
		--bg:url(./assets/icons/get_app-24px.svg);
		background-color: $col-orange;
	}

	button.update-available{
		
	}

	button.install-app{
		//--logo:url();
		--overlap:0px;
		--delay:0s;

		// after a brief while hide this?
		// animation: 
		// 			Hide-Install 0.4s $easeOutBack 0s 1 reverse both,
		// 			Hide-Install 0.4s $easeOutBack var(--delay) 1 normal both;
		

		// &:hover, &:focus{
		// 	--overlap:40px;
		// 	animation: Hide-Install 0.4s $easeInBack var(--delay) 1 reverse both;
		// }
		&.later{
			animation: Hide-Install var(--ease-s) $easeOutBack var(--delay) 1 normal both;
		}
	}
		
	// Labels
	label[for="button-metronome"]{
		--col-select:#{$col-green};
		--col-hover:#{$col-blue};
		--bg:url(./assets/icons/timer_off-24px.svg);
		&.checked{
			--bg:url(./assets/icons/timer-24px.svg);
		}
	}

	label[for="button-quantise"]{
		--col-select:#{$col-yellow};
		--col-hover:#{$col-blue};
		--bg:url(./assets/icons/grid_off-24px.svg);
		&.checked{
			--bg:url(./assets/icons/grid_on-24px.svg);
		}
	}


	label[for="button-fullscreen"]{
		// far right
		order:99;
		--col-select:transparent;
		//--col-hover:transparent;

		@extend %image-replacement;
		--bg:url(./assets/icons/fullscreen-24px.svg);
		
		// toggled state
		&.checked{
			--bg:url(./assets/icons/fullscreen_exit-24px.svg);
		}
		
		// override if user has esc'ed
		@media all and (display-mode: fullscreen) {
			--bg:url(./assets/icons/fullscreen_exit-24px.svg) !important;
		}
	}
	

	label[for="button-overlay"]{
		// --col-hover:#{$col-dark};
		--col-select:#{$col-blue};
		// @extend %image-replacement;
		--bg:url(./assets/icons/videocam_off-24px.svg);
		&.checked{
			--bg:url(./assets/icons/videocam-24px.svg);
		}
	}

	label[for="button-spectrogram"]{
		// --col-hover:$col-dark;
		--col-hover:#{$col-green};
		--col-select:#{$col-orange};
		--bg:url(./assets/icons/blur_off-24px.svg);
		&.checked{
			--bg:url(./assets/icons/blur_on-24px.svg);
		}
	}
	// label[for="button-spectrogram"]{
	// 	// --col-hover:$col-dark;
	// 	--col-hover:#{$col-green};
	// 	--col-select:#{$col-green};
	// 	background-image:url(./assets/icons/piano-24px.svg);
	// 	&.checked{
	// 		background-image:url(./assets/icons/piano_off-24px.svg);
	// 	}
	// }

	label[for="button-clear"]{
		// --col-hover:$col-dark;
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
		// @extend %image-replacement;
		// background-image:url(./assets/icons/movie_creation-24px.svg);
		// background-image:url(./assets/icons/music_note-24px.svg);
		--bg:url(./assets/icons/image_not_supported-24px.svg);
		&.checked{
			// background-image:url(./assets/icons/music_off-24px.svg);
			--bg:url(./assets/icons/image-24px.svg);
			// background-image:url(./assets/icons/music_note-24px-24px.svg);
		}
	}


	label[for="button-transparent"]{

		// only display between certain sizes?
		display: none;
		// --col-hover:$col-dark;
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
		// @extend %image-replacement;
		// background-image:url(./assets/icons/movie_creation-24px.svg);
		// background-image:url(./assets/icons/music_note-24px.svg);
		--bg:url(./assets/icons/web_asset-24px.svg);
		&.checked{
			// background-image:url(./assets/icons/music_off-24px.svg);
			--bg:url(./assets/icons/web_asset_off-24px.svg);
			// background-image:url(./assets/icons/music_note-24px-24px.svg);
		}
	}
}

.flag-clear #shared-controls label[for="button-transparent"]{
	display: flex;
}
// If hover is available we can use it to hide the controls



// if too small stack


// button that covers people
button.person{
	
	padding:0;
	cursor:pointer;
	position: absolute;	
	z-index:202;
	overflow: hidden;
	border:2px solid $col-blue;
	outline:2px solid $col-cream;
	box-sizing: border-box;
	border-radius: 3px;
	// appearance: none;
	//border:2px solid white;

	text-shadow:none;
	color:transparent;
	opacity: 0;
	transition: var(--ease-s) ease-in opacity;
	//, left 9ms linear, top 9ms linear;

	&:hover, &:focus{
		background-color: transparent;
		outline: none;
	}

	&:active{
		opacity: 1;
	}

	&:hover{
		opacity: 0.9;
		background-color: transparent;
	}

	svg{
		width: 100%;
		//height:auto;
		fill:orange;
		stroke-width: 3px;
		stroke:purple;
		//transform: scaleX(-1);
		pointer-events: none;
		circle{
			stroke:black;
			fill:white;
		}
	}
}

button#person-a{
	//left:calc( 1px * var(--person-a-x,0) );
	left:calc( 100% * var(--person-a-x,0) / var(--width,640) );
	top:calc( 100% * var(--person-a-y,0) / var(--height,640) );
	
	width:calc( 100% * var(--person-a-w,0) / var(--width,640) );
	height:calc( 100% * var(--person-a-h,0) / var(--height,640) );
}

// move into position
button#person-b{
	outline-color:$col-green;

	left:calc( 1px * var(--person-b-x,0) );
	top:calc( 1px *var(--person-b-y,0) );
	width:calc( 1px * var(--person-b-w,0) );
	height:calc( 1px * var(--person-b-h,0) );
}

#person-a-controls{
	left:0;

}
#person-b-controls{
	right:0;
}

// Instrument selection panel
fieldset.person-controls{

	// or in duet do we split screen???
	position: fixed;
	top:0;
	
	max-width: 50%;
	bottom:0;
	overflow: auto;
	display: grid;

	// smol : Next, we use minmax for the main content. Why? Because if we only use 1fr then eventually our sidebar and main will share 50% of the space, and we want the main area to always be wider. We also nest min to ask the browser to use the minimum of either of the options. The result in this case is use of 50vw on mobile-sized viewports, and 30ch on larger viewports. And, when there's room, it also stretches to 1fr for the max part of minmax 🙌🏽
	grid-template-columns: fit-content(20ch) minmax(min(50vw, 30ch), 1fr);

	label{
		color:$col-dark;
		background-color:rgba($col-white, 0.9);
		&:hover{
			color:$col-white;
			background-color:rgba($col-dark, 0.9);
		}
	}
}

// generic button style
button#button-record,
// button#button-video,
button#button-midi,
button.install-app,
button.update-available{
	// border-radius: var(--curve) var(--curve) var(--curve) 0;
	transition:background-color var(--ease-q) linear, color 40ms linear;
	overflow: hidden;
}

// override style
button.person,
button#button-video{
	user-select: none;
	// hide any copy
	color:transparent;
	text-shadow:none;
	background-color: transparent;
	
	&:hover, &:active, &:focus{
		color:transparent;
		background-color: transparent;
		text-shadow:none;
		//border:5px solid $col-yellow;
	}
}


button#button-video{
	display: block;
	position: absolute;//fixed;
	bottom:0;
	left:0;
	// right:0;
	width: 100%;
	height:100%;
	padding:0;
	border:0;
	
	
	// just a little margin of error
	// bottom:0rem;
	// try and push to the back
	z-index:-1;
	

	// prevent finger cursor
	cursor: default;

	max-width:none;
	background: none;

	&::before, &::after{
		display:none;
	}
}

// SHARED CONTROL PANEL
button#button-midi{

	//background-position: left 1px center;
	// --icon-size:36px;
	//background-color: $col-cream;
	--bg:url(assets/logos/midi2.0.svg);
	&:before{
		// also make sure we have set the width for midi as is not square
		//min-width: calc(var(--icon-size) * 1.2);
	}
}
.midi-active button#button-midi{
	background-color: $col-green;
}

// connect your midi device!
.midi-no-devices button#button-midi{
	background-color: $col-yellow;
	overflow: visible;
	// we can show some extra text
	&:after{
		display: block;
		content:'Connect a device';
		position:absolute;
		bottom:calc(100% + var(--pad) );
		text-indent: 0;
		left:50%;
		text-align: center;
		transform:translateX( calc(-50% ) );
		//left:0;
		color:$col-dark;
		background-color: $col-white;
		font-size:11px;
		font-weight: 900;
		padding: var(--pad);
		//text-shadow:2
		animation:TextColours 4s linear infinite 0s both;
	}
}


// midi buton was pressed - now loading state
main.midi-activated{
	// hide button
	#button-midi{
		cursor:not-allowed;
		--col: $col-blue;
	}
}

main.midi-available{
	// hide button
	#button-midi{
		// display: none;
		//cursor:not-allowed;
	}
}

button#button-record{
	background-color: $col-red;
	//color:$col-red;
	&.recording{

	}
}

label[for="select-camera"],
#select-camera{
	--col-hover:#{$col-green};
}

button#button-photograph{
	--col-hover:#{$col-blue};
	--bg:url(./assets/icons/add_a_photo-24px.svg);
}

button#button-duet{
	// background-color:vae(--col-hover);
	// background-color: $col-yellow;
	--col-hover:#{$col-yellow};
	--bg:url(./assets/icons/person_add-24px.svg);
	display: none;
}
button#button-solo{
	// background-color:vae(--col-hover);
	// background-color: $col-yellow;
	--col-hover:#{$col-yellow};
	--bg:url(./assets/icons/person-24px.svg);
	display: none;
}

button#button-metronome{
	
	// --bg:url(./assets/icons/person_add-24px.svg);
}

button#share{
	--bg:url(./assets/icons/share-24px.svg);
	margin-left: auto;
}




@keyframes Hide-Install{
	from{
		transform: translateX( 0 );
	}
	to{
		transform: translateX( calc( -100% + 44px ) );
	}
}
#camera{
	display: none;
}
.multiple-cameras #camera{

	display: flex;
    // flex-direction: column-reverse;
	//transition:width 40ms ease-out;
	// display: grid;

	// background-color:$col-blue;
	// border-radius: 4px;
	// &:focus-within,
	// background-image:url(./assets/icons/switch_video-24px.svg);
	--bg:url(./assets/icons/switch_video-24px.svg);
	// overflow:hiddfooten;

	&:before{
		pointer-events: none;
	}

	&:hover,&:focus,&:target,
	&:focus-visible{
		// height:auto;
		outline:none;
		//width:calc(100% - 2 * var(--pad));
	}
	// label,select{
	// 	grid-area:1/1/1/1;
	// }
	// label{
	// 	// 
	// 	pointer-events: none;
	// 	white-space: pre;
	// 	outline:none;
	// 	opacity:0;
	// 	transition:opacity 40ms ease-out;
	// 	position: relative;
	// }
	// instead of the :before :)
	select{

		order:-1;
		cursor:pointer;
		border:0;
		// width: var(--icon-size);
		position:absolute;
		top:0;
		left:0;
		min-width:100%;
		// right:0;
		bottom:0;

		color:transparent;
		background-color: transparent;
		text-align: center;
		optgroup{
			appearance:none;
			background-color: $col-yellow;
			color: $col-dark;
			font-weight:900;
			
			text-transform: uppercase;
			padding:var(--pad);
			margin:auto;
		}


		option{
			padding:var(--pad);
			color: $col-dark;
			background-color: $col-cream;
			cursor:pointer;
			text-transform:initial;

			&:hover, &:focus{
				color:$col-cream;
				background-color: $col-dark;
			}

		}
	}
}


#foot{
	--spacer:0;
	position:absolute;
	left: calc( var(--pad));
	bottom: var(--pad);
	color:$col-brown;
	transition:transform var(--ease-s) $easeOutBack;
	transform: translateX(var(--spacer));
	z-index:-1;
	
	#year::before{
		content:"© ";
		color:$col-cream;
	}
}

@media (orientation: landscape) {
	// .loaded #foot{
	// 	--spacer:67px;
	// 	transform-origin: bottom left;
	// 	transform: rotate(270deg) translateX(var(--spacer)) translateY(10px);
	// }
}

// 
@keyframes BGColours{
	0%{
		background-color:hsl(90, 60%, 40%);
	}
	10%{
		background-color: hsl(180, 60%, 40%);
	}
	20%{
		background-color: hsl(180, 60%, 40%);
	}
	30%{
		background-color: hsl(270, 60%, 40%);
	}
	40%{
		background-color: hsl(270, 60%, 40%);
	}
	50%{
		background-color: hsl(360, 60%, 40%);
	}
	70%{
		background-color: hsl(360, 60%, 40%);
	}
	80%{
		background-color:hsl(90, 60%, 40%);
	}
	100%{
		background-color: hsl(90, 60%, 40%);
	}
}
// 
@keyframes TextColours{
	0%{
		color:hsl(90, 60%, 40%);
	}
	10%{
		color: hsl(180, 60%, 40%);
	}
	20%{
		color: hsl(180, 60%, 40%);
	}
	30%{
		color: hsl(270, 60%, 40%);
	}
	40%{
		color: hsl(270, 60%, 40%);
	}
	50%{
		color: hsl(360, 60%, 40%);
	}
	70%{
		color: hsl(360, 60%, 40%);
	}
	80%{
		color:hsl(90, 60%, 40%);
	}
	100%{
		color: hsl(90, 60%, 40%);
	}
}
@keyframes Fade{
	from{
		opacity: 0;
	}
	to{
		opacity: 1;
	}
}

@keyframes Blink{
	0%{
		opacity: 0;
	}
	49%{
		opacity: 0;
	}
	50%{
		opacity: 1;
	}
	100%{
		opacity: 1;
	}
}
@keyframes Loading{
	0%{
		transform:translateX( 0 );
		//background-color: hsl(90, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(90, 60%, 40%), hsl(90, 60%, 40%));
	}
	10%{
		background-image:linear-gradient(90deg, hsl(180, 60%, 40%),hsl(180, 60%, 40%));
	}
	20%{
		transform:translateX( calc(100% - var(--loader-size)) );
		//background-color: hsl(180, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(180, 60%, 40%),hsl(180, 60%, 40%));
	}
	30%{
		background-image:linear-gradient(90deg, hsl(270, 60%, 40%),hsl(270, 60%, 40%));
	}
	40%{
		transform:translateX( calc(100% - var(--loader-size)) ) translateY( calc( 100% - var(--loader-size) ) );
		//background-color: hsl(270, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(270, 60%, 40%),hsl(270, 60%, 40%));
	}
	50%{
		background-image:linear-gradient(90deg, hsl(360, 60%, 40%), hsl(360, 60%, 40%));
	}
	70%{
		transform:translateX( 0 )  translateY( calc( 100% - var(--loader-size) ) );
		//background-color: hsl(360, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(360, 60%, 40%), hsl(360, 60%, 40%));
	}
	80%{
		background-image:linear-gradient(90deg, hsl(90, 60%, 40%),hsl(90, 60%, 40%));
	}
	100%{
		transform:translateX( 0 );
		//background-color: hsl(90, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(90, 60%, 40%),hsl(90, 60%, 40%));
	}
}



// Works on Firefox 
* {
	scrollbar-width: thin;
	scrollbar-color: $col-dark $col-cream;
}

// Works on Chrome, Edge, and Safari 
*::-webkit-scrollbar {
	width: 12px;
}

*::-webkit-scrollbar-track {
	background-color: $col-dark;
}

*::-webkit-scrollbar-thumb {
	background-color: $col-dark;
	border-radius: 99px;
	border: 3px solid $col-orange;
}

// https://developer.mozilla.org/en-US/docs/Web/CSS/@media/display-mode

@media all and (display-mode: fullscreen) {

    #displayMode::before {
        content: "Fullscreen mode"
    }
}

// Installed on machine... show extra buttons?
@media all and (display-mode: standalone) {

    #displayMode::before {
        content: "Standalone mode"
    }
}

@media all and (display-mode: minimal-ui) {

    #displayMode::before {
        content: "Minimal-UI mode"
    }
}

@media all and (display-mode: browser) {
   
    #displayMode::before {
        content: "Browser mode"
    }
}