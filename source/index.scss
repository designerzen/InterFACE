html,body{
	margin:0;
	padding:0;
}

html{
	background-color: black;
	font-family: 'Oxanium', sans-serif;
}

@import url('https://fonts.googleapis.com/css2?family=Oxanium:wght@700&display=swap');


header{
	position: fixed;
	z-index: -1;
	top:0;
	right:0;
}

main{

	--pad:2vmin;

	--person-a-x:0;
	--person-a-y:0;
	--person-b-x:0;
	--person-b-y:0;

	display: grid;
	position: relative;
	height: 100%;
	min-height: 100%;
	max-height: 100vh;

	object-fit: contain;

	// show a graphic but hide contents
	&::before, &::after{
		transition: 400ms ease-out opacity;
		opacity:0;
	}
}

// put them all in the same place in the grid
main > * {
	grid-area: 1/1/1/1;
	transition: 400ms ease-out opacity;

	max-width:100%;
	max-height:100vh;

	height:auto;
	object-fit: contain;
	margin:auto;
}

main.loading{

	--loader-size:8vmin;
	--loader-duration:4;
	overflow:hidden;
	
	// show a graphic but hide contents
	&::before,&::after{
		content: '';
		opacity: 1;
		
		// height:6vh;
		// width:6vh;
		width:100%;
		height:100%;
		background-image:linear-gradient(blue,blue);
		background-size: var(--loader-size) var(--loader-size);
		background-position: top left;
		background-repeat: no-repeat;

		position: absolute;
		top:0;
		left:0;
		
		display: block;
		animation:Loading calc(var(--loader-duration) * 1s) 0s linear infinite;
	}

	&::after{
		animation-delay:calc( var(--loader-duration) / 4 * 0.02s );
	}

	> *:not(p){
		visibility: hidden;
		opacity:0;
		display: none;
	}
	#feedback{
		text-align: center;
	}
}

main{
	video,canvas{
		// scale to fit screen!
		transform: scaleX(-1);
		//transform:scale(0,-1);
	}
}
#feedback:hover ~ canvas{
	opacity:0.5;
}

main.video{
	img{
		display: none;
	}
}
main.img{
	video{
		display: none;
	}
}


main{
	button{
		display: none;
	}
}

main.active{
	button{
		display: block;
	}
}

#feedback{
	box-sizing: border-box;
	position: fixed;
	z-index: 303;
	bottom:var(--pad);
	left:var(--pad);
	right:var(--pad);
	display: block;
	font-weight:bold;
	text-align:right ;
	color:white;
	text-shadow:black 0 0 4px;

	&::after{
		content:'';
		widows: 1rem;
		height:100%;
		background-color: yellow;
	}
}

// we want this to visually look the same size as the video
#controls{
	
	display: block;
	margin:auto;
	padding:0;
	
	width:100%;

	// we need media queries to complete
	
	// landscape
	@media (orientation: landscape) {
		height:100vh;
		width:calc(var(--height) / var(--width) * 100vh );
	}
	@media (orientation: portrait) {
		// portrait
		width:100vw;
		height:calc(var(--width) / var(--height) * 100vw );
	}

	overflow: hidden;
	position: relative;

	// &::before{
	// 	display: block;
	// 	content:'';
	// 	// width:calc(var(--width) / var(--height) * 100%);
	// 	// height:calc( 100% );
	// 	width:100%;
	// 	padding-bottom:calc(var(--width) / var(--height) * 100%);
	// }
}

fieldset{
	border:0;
	margin:var(--pad);
	padding:0;
}

button{
	
	appearance: none;
	border:0;
	background-color: transparent;
}

// button that covers people
button.person{
	cursor:pointer;
	position: absolute;	
	z-index:202;
	
	border-radius: 100%;
	//border:2px solid white;

	color:transparent;
	opacity: 0;
	transition: 400ms ease-in opacity, left 9ms linear, top 9ms linear;

	&:hover, &:focus{
		
		outline: none;
	}

	&:hover{
		opacity: 0.8;
	}

	svg{
		width: 100%;
		//height:auto;
		fill:orange;
		stroke-width: 3px;
		stroke:purple;
		//transform: scaleX(-1);
		pointer-events: none;
		circle{
			stroke:black;
			fill:white;
		}
	}
}
.active button.person{
	display: block;

	
}


button#person-a{
	
	// left:calc( 1px * var(--person-a-x,0) );
	right:calc( 100% * var(--person-a-x,0) / var(--width,640) );
	top:calc( 100% * var(--person-a-y,0) / var(--height,640) );
	
	width:calc( 100% * var(--person-a-w,0) / var(--width,640) );
	height:calc( 100% * var(--person-a-h,0) / var(--height,640) );
}

// move into position
button#person-b{
	left:calc( 1px * var(--person-b-x,0) );
	top:calc( 1px *var(--person-b-y,0) );
	width:calc( 1px * var(--person-b-w,0) );
	height:calc( 1px * var(--person-b-h,0) );
}

button#button-video{
	position: absolute;
	top:0;
	left:0;
	width: 100%;
	// right:0;
	bottom:0;
	z-index:-1;
}
@keyframes Loading{
	0%{
		transform:translateX( 0 );
		//background-color: hsl(90, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(90, 60%, 40%), hsl(90, 60%, 40%));
	}
	20%{
		transform:translateX( calc(100% - var(--loader-size)) );
		//background-color: hsl(180, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(180, 60%, 40%),hsl(180, 60%, 40%));
	}
	40%{
		transform:translateX( calc(100% - var(--loader-size)) ) translateY( calc( 100% - var(--loader-size) ) );
		//background-color: hsl(270, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(270, 60%, 40%),hsl(270, 60%, 40%));
	}
	60%{
		transform:translateX( 0 )  translateY( calc( 100% - var(--loader-size) ) );
		//background-color: hsl(360, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(360, 60%, 40%), hsl(360, 60%, 40%));
	}
	100%{
		transform:translateX( 0 );
		//background-color: hsl(90, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(90, 60%, 40%),hsl(90, 60%, 40%));
	}
}