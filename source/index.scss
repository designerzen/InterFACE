// Special thanks to 
// https://nicolas-hoizey.com/articles/2015/02/18/viewport-height-is-taller-than-the-visible-part-of-the-document-in-some-mobile-browsers/
// for fixing my 100vh not being 100% viewport height on mobile safari
$easeInBack:  cubic-bezier(0.600, -0.280, 0.735, 0.045);
$easeOutBack:  cubic-bezier(0.175,	0.885, 0.320, 1.275);
$easeInOutBack:  cubic-bezier(0.680, -0.550, 0.265, 1.550);

$col-white:hsl(22, 28%, 87%);
$col-dark:hsl(30, 6%, 14%);
$col-grey:hsl(11, 6%, 50%);
$col-cream:hsl(23, 18%, 53%);
$col-tan:hsl(27, 30%, 45%);
$col-brown:hsl(23, 22%, 30%);
$col-blue:hsl(196, 18%, 33%);
$col-green:hsl(56, 18%, 33%);
$col-yellow:hsl(41, 34%, 50%);
$col-orange:hsl(28, 69%, 38%);
$col-red:hsl(9, 58%, 35%);


%image-replacement{
	text-indent: -9999px;
	overflow:hidden;
	color:transparent;
	text-shadow:none;
	white-space: pre;
	font-size: 0;
	background-position: center center;
	justify-content: center;
}
  
// debug
// @import url('https://cdn.jsdelivr.net/npm/checka11y-css@:version/checka11y.css');

// @import url('https://fonts.googleapis.com/css2?family=Oxanium:wght@774&display=swap');
// @font-face {
// 	font-family: 'Oxanium';
// 	src: './assets/fonts/Oxanium.ttf' format('truetype');
// 	// font-weight: 125 950;
// 	// font-stretch: 75% 125%;
// 	font-style: normal;
//    }

// Basic resets
html,body,h1,h2,h3,h4,h5,h6,p{
	margin:0;
	padding:0;
}

:root{
	--line-height:1.6;
	--curve:12px;
	--pad:2vmin;
	--footer-gap:calc(61px);
	
	@media (orientation: portrait) {
		--footer-gap:var(--pad);
	}

	--ease-s:450ms;
	--ease-m:90ms;
	--ease-q:45ms;

	--duration:calc( 2 * var(--ease-s) );//var(--ease-out-quick);
	--duration-scroll:calc( 5 * var(--ease-s) );

	--overlap:0.2;  // the smaller, the closer together the nimations are
	--offset:0s;	// initial delay for all
}

html, input, button, textarea, option, select{
	font-family: 'Oxanium', sans-serif !important;
	font-weight: 800;
}
  
html{
	// allows 100vh to work on mobile safari
	height: -webkit-fill-available;
	text-rendering: optimizeSpeed;
	line-height:var(--line-height);

	// dark
	transition: background-color var(--ease-s) linear;

	color:$col-white;
	background-color:$col-dark;
	background-image:linear-gradient(rgba($col-dark, 0.5), rgba($col-dark, 0.1));
	text-rendering: optimizeSpeed;

	// hide all cruft and hide scrollbars too
	overflow:hidden;

	// light
	&.loading{
		background-color:$col-white;
		background-image:linear-gradient(rgba(white, 0.9), rgba(white, 0.1) );
	}
}

body {
	// prevent collapse
	min-height: -webkit-fill-available;
	min-height: 100vh;
}

body, main{
	// overflow: hidden;
}

body{
	overflow: auto;
	display: flex;
}

h1 strong,h2,h3,h4,h5,h6{
	font-weight: 800;
}

h1{
	font-weight: 200;
}

label,select,option{
	font-size:1rem;
	user-select: none;
}

p{
	font-weight: 500;
}

small{
	// font-size: 90%;
	font-weight: 200;
}

a{
	color:$col-blue;
	text-decoration: none;
}

img,
svg{
	max-width:100%;
	height:auto;
}

@import "./assets/styles/gadgets.scss";

#intro{
	position: absolute;
	z-index: -1;
	top:0;
	right:0;
	left:0;
	//overflow: hidden;
	// above feedback
	bottom:5rem;

	display: grid;
	text-align: center;
	justify-content: center;
	> * {
		grid-area: 1/1/1/1;
	}
	h1{
		background-color: $col-dark;
		color: $col-grey;
		
		strong{
			color:$col-blue;
		}
		display: inline-block;
		padding:var(--pad) calc(var(--pad) * 2);
		text-transform: uppercase;
		align-self: self-start;
		justify-self: center;
		margin-top:var(--pad);
		transition:color var(--ease-s) ease-out;
		
		// font-size: clamp(1rem, -0.5385rem + 7.6923vw, 3.5rem);
		// clamp(minimum, preferred, maximum)
		font-size:clamp(2rem, -0.5385rem + 7.6923vw, 3.5rem);
		text-shadow: rgba(0,0,0,0.56) 0 1px 4px,
					rgba(0,0,0,0.56) 0 2px 4px,
					rgba(0,0,0,0.56)0 3px 4px,
					rgba(255,255,255,0.96) 0 0 4px;
	}
	
	h2{

		text-shadow: rgba(white,0.96) 0 1px 4px,
					rgba(white,0.7) 0 2px 4px,
					rgba(white,0.5) 0 3px 4px,
					rgba($col-cream,0.56) 0 0 4px;
		
	}
	h2{
		color: $col-yellow;
		margin-top:auto;
	}
		
	p,
	p a{
		color:transparent;
		text-shadow: none;
	}

	.logo{
		// align-self:flex-end;//  flex-start;
		z-index: -2;
		align-self: center;
		animation:TextColours 4s linear infinite 0s both;
	}
}

.logo, h1, h2{
	// position: absolute;
	// top:0;
	// left:0;
}

// inline logo :)
.logo{
	margin-left:auto;
	margin-right:auto;
	display: flex;
	flex-direction: column;

	// we can transition fill :)
	fill:currentColor;
	transition:fill var(--ease-m) linear;

	width:100%;
	min-height:10vh;
	max-height:90vmin;
	max-width:90vmin;
	
	visibility: visible;
	// overflow: hidden;
	z-index:1;

	svg{
		order: -1;
	}

	// background:url(./assets/logos/interface.svg) no-repeat left;
	// background-size: contain;
	// background-position: left;
}

main{
	display:flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	// min-width:100%;
	
	margin:auto;
	// height: 100%;
	// min-height: 320px;
	// max-height: 100vh;

	button{
		//display: none;
	}
}


main.midi{
	#button-midi{
		display: flex;
	}
}

main.video{
	> img{
		display: none;
	}
}

main.img{
	> video{
		display: none;
	}
}

main.active{
	button{
		display: block;
	}
}

option, select{
	text-align: center;
}
select{
	appearance: none;
	padding:var(--pad);
}
video,canvas{
	max-width:100%;
	visibility: hidden;
}
// funky text animations
.loading strong,
p strong{
	animation:TextColours 4s linear infinite 0.05s both;
}


#app-frame{

	--person-a-x:0;
	--person-a-y:0;
	--person-b-x:0;
	--person-b-y:0;

	// shadow
	--wig:0;
	--hue:180;
	--l:20%;
	
	// we only disable this in jumbo mode
	position: relative;

	// height: 100%;
	// min-height: 320px;
	// max-height: 100vh;
	// max-width: 100%;
	// max-height: 100%;

	// object-fit: contain;

	transition:opacity var(--ease-s) ease-out;

	display:block;

	// show a graphic but hide contents
	&::before, &::after{
		transition: var(--ease-s) linear opacity;
		opacity:0;
	}
	// Overlaid logo
	&:before{
		--opacity:0.5;
		animation: Fade var(--ease-s) linear 5s 1 normal both;
		position: absolute;
		top:-7px;
		right:8px;
		width:10%;
		--size:clamp(10%, 10vmin, 180px );
		width:var(--size,10%);
		height:var(--size,10%);
		display: block;
		z-index:3;
		background:url(./assets/logos/interface_colour.svg) center no-repeat;
		content:'';//url(./assets/logos/interface_colour.svg);
		// content:url(./assets/logos/interface_current-color.svg);
	}

}


// Hide controls on mouse out on hover devices
@media (any-hover: hover) {
	//@supports (html:focus-within){
	.loaded{
		#toast{
			transition:transform var(--ease-q) calc(var(--ease-s) + var(--ease-s));//0s $easeOutBack;
			transform:translateY(150%);
		}

		// #controls,
		#photographs,
		#shared-controls{
			//visibility: hidden;
			transition:opacity var(--ease-s) linear;
			transition-delay: var(--ease-s);
			// fade out
			//animation: Fade var(--ease-s) linear 1500ms both reverse;
			opacity:0;

			> *{
				--duration: var(--ease-q);
				--overlap:0.6;
				// --delay-offset: var(--ease-q);
				// animation-name:Fade;
				// animation-duration:var(--ease-s);
				// animation-direction:reverse;
				// animation-fill-mode: both;
				// animation-delay:inherit;
			}
		}

		main:focus-visible,
		main:focus-within,
		main:focus,
		main:hover{
			// hide and show parts

			// move toast up
			#toast{
				transform:translateY(0);
				transition-delay:0;
			}

			 #shared-controls,
			 #photographs{
				opacity:1;	
				transition-duration: var(--ease-q);
				> *{
					--duration: var(--ease-q);
					--delay-offset: var(--ease-q);
					animation-name:Fade;
					animation-direction: normal;
					animation-duration:var(--ease-q);
					// animation-delay:inherit;
				}
				//visibility: visible;
				//animation: Fade var(--ease-q) linear 0s both;
			}
		}
	}


	.debug #controls{
		animation:none;
	}
}



// Loading screen ------------------------------
html.loading {
	
	--loader-size:8vmin;
	--loader-duration:4;

	// show a graphic but hide contents
	&::before,&::after{
		content: '';
		opacity: 1;
		
		// height:6vh;
		// width:6vh;
		width:100%;
		height:100%;
		background-image:linear-gradient(blue,blue);
		background-size: var(--loader-size) var(--loader-size);
		background-position: top left;
		background-repeat: no-repeat;

		position: absolute;
		top:0;
		left:0;
		
		display: block;
		animation:Loading calc(var(--loader-duration) * 1s) 0s infinite $easeInOutBack;
	}

	&::after{
		animation-delay:calc( var(--loader-duration) / 4 * 0.02s );
		filter: blur(5px);
	}

	body{
		// background-image: url(./assets/textures/45-degree-fabric-light.png);
		background-image:  url(./assets/logos/sxsw2021.svg),
							url(./assets/textures/45-degree-fabric-light.png), 
							url(./assets/textures/45-degree-fabric-dark.png);

		background-size: 	15%,
							25%, 
							25%;

		background-position: bottom 66px right 24px,
							 center,center;

		background-repeat:no-repeat, repeat, repeat;
		overflow: hidden;
	}

	#intro header{
		
		> *{
			max-height:100vh;
			grid-area: 1/1/1/1;
			visibility:visible;
			animation:Fade var(--ease-s) ease-in 1 0s both;
		}	

		$end:9;
		@for $i from 1 to $end {

			&:nth-child(#{$i}){
				// delay is the amount of time to wait before reveal
				animation-delay:calc( var(--offset) + #{$i - 1} * var(--overlap) * var(--duration) );
			}
		}

		.logo{
			@extend %image-replacement;
			color:#8d3525;
			align-self: center;
			height:100%;
			background-position: center;
			z-index:-1;
			animation:TextColours 4s linear infinite 0s both;
		}
		h1{
			//background-color: black;
			color: $col-orange;
			clip-path: polygon(15% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 45%);
		}
	}

	main{
		overflow:hidden;
		position: relative;
		pointer-events: none;
		min-height: 100vh;
		

		> *:not(p){
			visibility: hidden;
			opacity:0;
			display: none;
		}
	}

	#feedback{
		text-align: center;
		bottom:calc( 1rem * var(--line-height) + var(--pad) );
		top:auto;
	}
	#shared-controls{
		visibility: hidden;
	}
}

// STATE - Choose players
// This is the how many people are playing mode
.player-selection{
	header > *{
	// header > *:not(h1){
		visibility: hidden;
	}
	// strapline... show yet?
	#title{
		position: absolute;
		bottom:0;
		visibility:hidden;
	}
	
	#toast{
		--footer-gap:var(--pad);
		right:auto;
		// prevent cramping
		margin:0 var(--pad);
		background-color: $col-dark;
		text-align:center;
	}
	.person,
	#shared-controls{
		visibility: hidden;
	}

	form > * {
		visibility: hidden;
		pointer-events: auto;
	}	
	form > fieldset,
	form{
		pointer-events: none;
	}
	form > fieldset > *{
		pointer-events: auto;
	}
	#player-selector{
		visibility: visible;
	}
	
	// hide stuff not relevent
	// Instrument selection panel
	fieldset.person-controls{
		display: none;
	}

	#button-trio{
		display:none;
	}

	fieldset > *{
		--xa:-50%;
		animation-name:Fade, Shift;
	}

	#controls{
		overflow: visible;
	}
	// &:focus-within{
	// 	fieldset > *{
	// 		animation-name:unset;
	// 	}
	// }
	// canvas,
	// video{visibility: hidden;}
}

// FIXME:
.loaded{

	#intro header{
		display:flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: flex-start;
		bottom:auto;

		.logo{
			margin:0;
			min-width:60px;
			// max-width:82px;
			position: absolute;
			left:0;
			right:0;
			top:0;
			align-self:flex-start;
			font-size: 0;
			fill:black;//$col-cream;
			svg{
				width: 100vw;
				height: 100vh;
			}
		}
		h1{
			justify-self: flex-end;
			margin:0;
			align-self:center;
			padding-left: 0;
			opacity:0.2;
			transition:opacity var(--ease-m) linear;
			writing-mode: vertical-rl;
			// transform: rotate(90deg) translateX(var(--pad));
			transform-origin: top left;
		}
		h2{
			margin-top:0;
		//	font-size:50%;
			width:100%;
			display:block;
			opacity:0;
		}
		p{visibility: hidden;}
	}

	#shared-controls{
		visibility: visible;
	}
	

	#player-selector,
	#progress-bar{
		display: none;
	}
	// wrapper
	#app-frame{
			
		// rounded corners
		border-radius:var(--curve);
		overflow: hidden;

		background-color: black;
		box-shadow:
			var(--wig) -1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
			var(--wig) -2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
			var(--wig) -4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
			var(--wig) -8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
			var(--wig) -13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
			var(--wig) -23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
			var(--wig) -50px 51px hsla(var(--hue), 90%, 10%, 0.15),
			
			var(--wig) 1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
			var(--wig) 2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
			var(--wig) 4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
			var(--wig) 8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
			var(--wig) 13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
			var(--wig) 23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
			var(--wig) 50px 51px hsla(var(--hue), 90%, 10%, 0.15);
		// $col-yellow
		
		video,canvas{
			// max-width:100%;
			// max-height:100vh;
			// height:auto;

			// put them all in the same place in the grid
			object-fit: contain;
			//margin:auto;
			visibility: hidden;	
		}

		canvas{

			z-index: 1;
			position: relative;
			
			// stretch it to flood the width
			// width:100vw;

			height: auto;
			//width:100%;

			// prevent overflow
			// max-width: 100vw;
			// max-height: 100vh;

			// video actually always maintains apect ratio which we can abuse...	
			// @media (orientation: landscape) {
			// 	height: 100%;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }

			// width:100%;//clamp(100%, 100vw, 100% );
			height: 100vh;
			max-width: 100vw;
			// max-height: 100vh;
			// max-width: 100vw;
			// height:calc(var(--height) / var(--width) * 100vw );


			@media (orientation: portrait) {
				// 	height: 100%;
				// 	width:calc(var(--width) / var(--height)  * 100vh );
				width: 100%;
				height:calc(var(--height) / var(--width) * 100vw );
			}
			
			// @media (orientation: landscape) {
			// 	height: 100vh;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }
			// @media (orientation: portrait) {
			// 	width: 100vw;
			// 	height:calc(var(--height) / var(--width) * 100vw );
			// }
			
			// scale to fit screen?
			// landscape
			// @media (orientation: landscape) {
			// 	height:100vh;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }
			// // portrait
			// @media (orientation: portrait) {
			// 	width:100vw;
			// 	height:calc(var(--height) / var(--width) * 100vw );
			// }
		}

		// in front
		video{
			
			// flip it around
			transform: scaleX(-1);

			z-index: 0;
			position:absolute;
			top:0;
			left:0;
			// right:0;
			// bottom:0;
			width:100%;
			height:100%;
		}
		
	}
	#app{
		#title{
			visibility: hidden;
			position: absolute;
			right:0;
		}
	}
	
	#app-frame video,
	#app-frame canvas{
		display: block;
		visibility: visible;
	}

	#foot{
		z-index:-1;
	}
}

#version, #midi-device{
	display:none;
}

html.debug{
	#version,
	#version span{
		display: block;
	}
}



.no-midi {
	#button-midi{
		display: none;
	}
}

.midi {
	#button-midi{
		
	}
}

// MIDI is available buyt there are no instruments connected
.midi.no-instrument {
	#button-midi{
		
	}
}

.midi-no-devices{
	#button-midi{
		animation:BGColours 4s linear infinite 0s both;
	}
}

.mini-connected{
	#midi-device{
		display:inline-block;
	}
}

// If the user has de-selected 'advanced' mode, we hide some buttons that
// will just confuse them...
.beginner{

	// hide these...
	label[for="button-quantise"],
	label[for="button-spectrogram"]{
		display: none;
	}
}


p{
	color:$col-white;
	pointer-events: none;
	font-weight:bold;
	text-align:right ;
	display: inline-block;
	padding:var(--pad);
	// emboss
}

#toast{
	position: absolute;
	right:calc(var(--pad) + 2px);
	bottom:calc( var(--footer-gap) + var(--pad) );
	z-index:909;
	color:$col-white;
	background-color:rgba($col-dark,0.94);
	// text-shadow : rgba(255,255,255,0.96) 0 -1px 2px,
	// 				rgba($col-dark, 0.96) 0 0 2px;

	&:empty{
		display:none;
	}


}


#feedback{
	box-sizing: border-box;
	position: fixed;
	z-index: 303;
	top:var(--pad);
	text-align: center;
	// left:var(--pad);
	// right:var(--pad);
	// left:var(--pad);
	max-width: calc(100% - 2 * var(--pad));

	color:$col-dark;
	background-color:$col-white;
	border-radius: 3px;
	text-align: left;
	text-shadow : rgba(255,255,255,0.96) 0 -1px 2px,
					rgba($col-dark, 0.96) 0 0 2px;
					
	// cool carat
	&:after{
		display: inline-block;
		content:'';
		width: 6px;
		height:calc(1rem - 0px);
		background-color:$col-orange;
		margin-left:calc(var(--pad)/2);
		animation: Blink 1150ms 0s infinite normal both;
		vertical-align:text-bottom;
	}
	
	&:empty{
		display: none;
	}
}

#feedback:hover ~ canvas{
	opacity:0.5;
}

// we need this to visually look the same size as the video
#controls{
	
	display: block;
	margin:auto;
	padding:0;
	
	overflow: auto;
	position: absolute;
	top:0;
	left:0;
	right:0;
	bottom: 0;
	z-index:303;

	// width:100%;
	// pointer-events: none;

	// > *{
	// 	pointer-events: auto;
	// }

	/*
	// we need media queries to complete
	--ratio:calc( var(--width)/var(--height));
	max-width:var(--width);
	max-height:var(--height);
*/



	// &::before{
	// 	display: block;
	// 	content:'';
	// 	// width:calc(var(--width) / var(--height) * 100%);
	// 	// height:calc( 100% );
	// 	width:100%;
	// 	padding-bottom:calc(var(--width) / var(--height) * 100%);
	// }
}

.brand{
	background:url(./assets/logos/designerzen.svg) no-repeat left 2px center;
	background-size: contain;
	padding-left:15px;
}

#photographs{
	position: fixed;
	bottom:var(--footer-gap);
	left:0;
	right:0;
	display: flex;
	overflow: auto;
	overflow-y: hidden;
	// a bit of space to zomom
	padding-top:30px;
			
	&:focus-within {
		// prefer smooth scrolling where available (opinionated).
		scroll-behavior: smooth;
	}
	// grid-auto-rows: ;
	a{
		color:transparent;
		user-select: none;
		font-size:0;
		position: relative;
		box-sizing: border-box;
		transition: transform var(--ease-m) ease-out;

		&::before{
			content:'';
			border:4px solid $col-white;
			position: absolute;
			top:0;
			left:0;
			right:0;
			bottom:0;
			opacity: 0;
			transition: var(--ease-m) linear;
		}

		&:hover, &:focus{
			z-index:2;
			transform-origin: bottom center;
			transform:scale(1.2);			
			background-color: $col-dark;
			&::before{
				opacity: 1;
			}
		}
		
		&:focus{
			outline:3px solid $col-orange;
		}
	}

	img{
		max-width:120px;
		min-height:44px;
		max-height:12vmin;
		height: auto;
		width: auto;
		display:block;
	}
}

#release{
	color:$col-grey;
}


fieldset{
	--breakpoint:320px;//12ch;

	opacity:1;
	border:0;
	margin:0;//var(--pad);
	padding:0;

	display:flex;
	
	// --gap: 1px;	
	// --v:min( (var(--breakpoint) - 100%) * 999, 100%);
	// 	gap: var(--gap);  
	// grid-gap: var(--gap);

	// grid-template-columns:
	// 	repeat(
	// 	auto-fit,	
	// 	minmax(
	// 		var(--v),
	// 		1fr
	// 	)
	// );
	
	// grid-template-columns: max-content;

	// display: grid;
	// grid-template-columns:1fr 1fr ;
	
	position: relative;
	// NB. ensure in front of the person buttons
	z-index:909;
	transition:opacity var(--ease-s) linear;
	//animation:Fade var(--ease-s) ease-in 1 0s both;
}

fieldset:empty{
	display: none;
	opacity:0;
	animation:Fade var(--ease-s) ease-in 1 0s reverse both;
}


label{
	--padding:calc( 1 * var(--pad));
	//outline: 1px groove $col-cream;
	font-weight:900;
	text-transform: uppercase;
	cursor: pointer;
	transition:color var(--ease-s) linear, background-color 90ms linear;

	padding:var(--padding);// var(--pad) 0 var(--pad);
	&:hover, &:focus{
		color:$col-white;
		background-color: $col-blue;
		outline:none;
	}


}



// STATES ==========================

// Faces are shown on video
.active button.person{
	display: block;	
}

// There are no faces looking at the screen
.no-faces{ 
	#app-frame{

		opacity:0.9;

		&::after{
			content:'';
			position: absolute;
			top:0;
			left:0;
			right:0;
			bottom:0;
			background:url(assets/icons/child_care-24px.svg) no-repeat center center;
			background-size: contain;
			opacity:1;
			transform:translateZ(100px);
			display: block;
			z-index:1;
			pointer-events: none;
		}
	}
	
}

// Could not load due to privacy restrictoin or user uninteraction
//  or no camera or whatever
.failure{
	#controls{
		display: none;
	}
	#feedback{
		left:var(--pad);
		right:var(--pad);
		bottom:calc(50vh - 0.5rem);
		text-align: center;

		background-color:$col-red;
		color:$col-white;
		border:10px solid $col-white;
		
		font-size:240%;

		&::after{
			display:none;
		}
	}
}

// fancy shared controls animations
header > *,
fieldset > *{

	$end:19;
	@for $i from 1 to $end {

		&:nth-child(#{$i}){
			// delay is the amount of time to wait before reveal
			animation-delay:calc( #{$i - 1} * 45ms );
			animation-delay:calc( var(--delay-offset, var(--offset,0)) + #{$i - 1} * var(--overlap) * var(--duration) );
		}
	}
}

// Show secret buttons
.flag-clear #shared-controls label[for="button-transparent"]{
	display: flex;
}

#person-a-controls{
	left:0;

}
#person-b-controls{
	right:0;
}

// Instrument selection panel
fieldset.person-controls{
	// or in duet do we split screen???
	position: fixed;
	top:0;
	
	max-width: 50%;
	bottom:0;
	overflow: auto;

	display:grid;
	// smol : Next, we use minmax for the main content. Why? Because if we only use 1fr then eventually our sidebar and main will share 50% of the space, and we want the main area to always be wider. We also nest min to ask the browser to use the minimum of either of the options. The result in this case is use of 50vw on mobile-sized viewports, and 30ch on larger viewports. And, when there's room, it also stretches to 1fr for the max part of minmax 🙌🏽
	grid-template-columns: fit-content(20ch) minmax(min(50vw, 30ch), 1fr);

	label{
		color:$col-dark;
		background-color:rgba($col-white, 0.9);
		&:hover{
			color:$col-white;
			background-color:rgba($col-dark, 0.9);
		}
	}
}

.midi-active button#button-midi{
	background-color: $col-green;
}

// connect your midi device!
.midi-no-devices button#button-midi{
	background-color: $col-yellow;
	overflow: visible;
	// we can show some extra text
	&:after{
		display: block;
		content:'Connect a device';
		position:absolute;
		bottom:calc(100% + var(--pad) );
		text-indent: 0;
		left:50%;
		text-align: center;
		transform:translateX( calc(-50% ) );
		//left:0;
		color:$col-dark;
		background-color: $col-white;
		font-size:11px;
		font-weight: 900;
		padding: var(--pad);
		//text-shadow:2
		animation:TextColours 4s linear infinite 0s both;
	}
}


// midi buton was pressed - now loading state
main.midi-activated{
	// hide button
	#button-midi{
		cursor:not-allowed;
		--col: $col-blue;
	}
}

main.midi-available{
	// hide button
	#button-midi{
		// display: none;
		//cursor:not-allowed;
	}
}

#foot{
	--spacer:0;
	display: flex;
	flex-direction: column-reverse;
	position:absolute;
	left: calc( var(--pad));
	bottom: var(--pad);
	color:$col-brown;
	transition:transform var(--ease-s) $easeOutBack;
	transform: translateX(var(--spacer));
	// z-index:-1;
	animation: Fade var(--ease-s) 1 0s ease-out both normal;

	small{
		margin-left:var(--pad);
	}
	#year::before{
		content:"© ";
		color:$col-cream;
	}
	a:hover, a:focus{
		color:$col-orange;
	}
}


#associates{
	--size:74px;
	margin:0;
	margin-bottom:var(--pad);
	padding:0;
	
	/* grid-auto-columns: 50%;
	grid-auto-flow: column;
	grid-gap:var(--pad);
	grid-template-columns: repeat(auto-fill, minmax(200px,1fr));
	grid-auto-columns: 1fr; */
	list-style: none;
	display: grid;
	// grid-template-columns: repeat(auto-fill, minmax(var(--size), 1fr));
	// grid-auto-rows: var(--size);
	
	//grid-template-rows: repeat(auto-fill, minmax(var(--size), 1fr));
	//grid-auto-rows: minmax(var(--size), 1fr);

	// just 1 column
	grid-auto-columns: var(--size);
	
	
	//grid-gap:var(--pad);
	place-items: flex-end center;
	box-sizing: border-box;
}

// .associates li::marker{
// 	content:'#';
// 	color:hsla(0, 0%, 100%, 0.5);
// 	font-size: 66%;
// } 
#associates li{
	
	box-sizing: border-box;
}

#associates li a{
	display: flex;
	flex-direction: column-reverse;
	align-items: flex-end;
	padding:var(--pad);
	height: 100%;
	box-sizing: border-box;
	font-size:0;
	color:transparent;
	user-select: none;
	color:$col-blue;

	svg{
		color:inherit;
	}

	&:focus,
	&:hover{
		color:$col-orange;
	}
}
#associates li a:hover{

}


@import "./assets/styles/keyframes.scss";
@import "./assets/styles/scrollbars.scss";

@media (orientation: landscape) {
	// .loaded #foot{
	// 	--spacer:67px;
	// 	transform-origin: bottom left;
	// 	transform: rotate(270deg) translateX(var(--spacer)) translateY(10px);
	// }
}


// https://developer.mozilla.org/en-US/docs/Web/CSS/@media/display-mode


@media all and (display-mode: fullscreen) {

    #displayMode::before {
        content: "Fullscreen mode"
    }
}

// Installed on machine... hide extra buttons?
@media all and (display-mode: standalone) {

    #displayMode::before {
        content: "Standalone mode"
    }
}

@media all and (display-mode: minimal-ui) {

    #displayMode::before {
        content: "Minimal-UI mode"
    }
}

@media all and (display-mode: browser) {
   
    #displayMode::before {
        content: "Browser mode"
    }
}