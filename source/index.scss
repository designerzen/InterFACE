$easeInBack:  cubic-bezier(0.600, -0.280, 0.735, 0.045);
$easeOutBack:  cubic-bezier(0.175,	0.885, 0.320, 1.275);
$easeInOutBack:  cubic-bezier(0.680, -0.550, 0.265, 1.550);

$col-white:hsl(22, 28%, 87%);
$col-dark:hsl(30, 6%, 14%);
$col-grey:hsl(11, 6%, 50%);
$col-cream:hsl(23, 18%, 53%);
$col-tan:hsl(27, 30%, 45%);
$col-brown:hsl(23, 22%, 30%);
$col-blue:hsl(196, 18%, 33%);
$col-green:hsl(56, 18%, 33%);
$col-yellow:hsl(56, 18%, 33%);
$col-orange:hsl(28, 69%, 38%);
$col-red:hsl(9, 58%, 35%);

// @import url('https://fonts.googleapis.com/css2?family=Oxanium:wght@774&display=swap');
// @font-face {
// 	font-family: 'Oxanium';
// 	src: './assets/fonts/Oxanium.ttf' format('truetype');
// 	// font-weight: 125 950;
// 	// font-stretch: 75% 125%;
// 	font-style: normal;
//    }

html,body,h1,h2,h3,h4,h5,h6,p{

	margin:0;
	padding:0;
}
:root{
	
	--curve:12px;
	--pad:2vmin;
	// FROM PWAINSTALL / UPDTE
	//	Changes the background color of the toast
	--toast-background:$col-dark;
	//	Changes the background color of the update button
	--button-background:$col-dark;
}

html, input, button, textarea{
	font-family: 'Oxanium', sans-serif !important;
	font-weight: 800;
}

html{

	text-rendering: optimizeSpeed;

	// dark
	transition: background-color 450ms linear;

	color:$col-white;
	background-color:$col-dark;
	background-image:linear-gradient(rgba($col-dark, 0.5), rgba($col-dark, 0.1));
	text-rendering: optimizeSpeed;

	// light
	&.loading{
		background-color:$col-white;
		background-image:linear-gradient(rgba(white, 0.9), rgba(white, 0.1) );
	}
}

html, body{
	height: 100%;
}

body{
	overflow: hidden;
}

h1,h2,h3,h4,h5,h6{
	font-weight: 800;
}


p{
	font-weight: 500;
}

p[aria-label="Summary"]{
	color:transparent;
	text-shadow: none;
}

small{
	font-size: 60%;
	font-weight: 200;
}
a{
	color:$col-blue;
}
header{
	position: absolute;
	z-index: -1;
	top:0;
	right:0;
	left:0;
	//overflow: hidden;
	// above feedback
	bottom:5rem;
	display: grid;
	text-align: center;
	justify-content: center;

	> * {
		max-height:100vh;
		grid-area: 1/1/1/1;
	}
	h1{
		background-color: $col-dark;
		color: $col-grey;
		
		strong{
			color:$col-blue;
		}
		display: inline-block;
		padding:var(--pad) calc(var(--pad) * 2);
		text-transform: uppercase;
		align-self: self-start;
		justify-self: center;
		margin-top:var(--pad);
		transition:color 400ms ease-out;
		font-size:clamp(10vmin, 3rem, 4.5rem);
		clip-path: polygon(15% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 45%);
		text-shadow: rgba(0,0,0,0.56) 0 1px 4px,
					rgba(0,0,0,0.56) 0 2px 4px,
					rgba(0,0,0,0.56)0 3px 4px,
					rgba(255,255,255,0.96) 0 0 4px;
	}
	
	h2,p{

		text-shadow: rgba(white,0.96) 0 1px 4px,
					rgba(white,0.7) 0 2px 4px,
					rgba(white,0.5) 0 3px 4px,
					rgba($col-cream,0.56) 0 0 4px;
		
	}
	h2{
		color: $col-yellow;
		margin-top:auto;
	}
	.logo{
		align-self:flex-end;//  flex-start;
		z-index: -2;
	}
}
.logo, h1, h2{
	// position: absolute;
	// top:0;
	// left:0;
}

.logo{
	display: block;
	fill:$col-red;
	width:100%;
	min-height:10vh;
	color:transparent;
	visibility: visible;
	// overflow: hidden;
	z-index:1;

	// background:url(./assets/logos/interface.svg) no-repeat left;
	// background-size: contain;
	// background-position: left;
}

main{
	display:flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	height: 100%;
	min-height: 320px;
	// max-height: 100vh;
}

#app-frame{

	--person-a-x:0;
	--person-a-y:0;
	--person-b-x:0;
	--person-b-y:0;

	display: grid;
	position: relative;

	// height: 100%;
	// min-height: 320px;
	// max-height: 100vh;
	max-width: 100%;
	max-height: 100%;

	object-fit: contain;

	// show a graphic but hide contents
	&::before, &::after{
		transition: 400ms ease-out opacity;
		opacity:0;
	}
}

// put them all in the same place in the grid
#app-frame > * {
	grid-area: 1/1/1/1;
	transition: 400ms ease-out opacity;

	max-width:100%;
	max-height:100vh;

	height:auto;
	object-fit: contain;
	margin:auto;
}

.loading {

	header{
		
		> *{
			visibility:visible;
			animation:Fade 400ms ease-in 1 0s both;
		}	
		.logo{
			align-self: center;
			height:100%;
			background-position: center;
			z-index:-1;
		}
		h1{
			//background-color: black;
			color: $col-orange;

		}
	}
	video{
		opacity:0.5;
	}
	#face{
		display: none;
	}
	main{

		--loader-size:8vmin;
		--loader-duration:4;
		overflow:hidden;

		pointer-events: none;
		
		// show a graphic but hide contents
		&::before,&::after{
			content: '';
			opacity: 1;
			
			// height:6vh;
			// width:6vh;
			width:100%;
			height:100%;
			background-image:linear-gradient(blue,blue);
			background-size: var(--loader-size) var(--loader-size);
			background-position: top left;
			background-repeat: no-repeat;

			position: absolute;
			top:0;
			left:0;
			
			display: block;
			animation:Loading calc(var(--loader-duration) * 1s) 0s infinite $easeInOutBack;
		}

		&::after{
			animation-delay:calc( var(--loader-duration) / 4 * 0.02s );
			filter: blur(5px);
		}

		> *:not(p){
			visibility: hidden;
			opacity:0;
			display: none;
		}
	}

	#feedback{
		text-align: center;
	}
}


// FIXME:
.loaded{
	header{
		display: none;
	}
}

.midi {
	#button-midi{
		
	}
}
// MIDI is available buyt there are no instruments connected
.midi.no-instrument {
	#button-midi{
		
	}
}
.no-midi {
	#button-midi{
		display: none;
	}
}

#app-frame{

	margin:auto;

	video{
		transform: scaleX(-1);
	}
	video,canvas{
		display: block;
		border-radius:var(--curve);
		overflow: hidden;

		--wig:0;

		--hue:180;
		--l:50%;
		
		box-shadow:
			var(--wig) 1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
			var(--wig) 2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
			var(--wig) 4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
			var(--wig) 8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
			var(--wig) 13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
			var(--wig) 23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
			var(--wig) 50px 51px hsla(var(--hue), 90%, 10%, 0.15);
			// scale to fit screen!
	}
	canvas{
		z-index: 1;
	}
}

main.midi{
	#button-midi{
		display: block;
	}
}

main.video{
	img{
		display: none;
	}
}
main.img{
	video{
		display: none;
	}
}

main{
	button{
		display: none;
	}
}

main.active{
	button{
		display: block;
	}
}

p{
	color:$col-white;
	pointer-events: none;
	font-weight:bold;
	text-align:right ;
	display: inline-block;
	padding:var(--pad);
	// emboss
	text-shadow : rgba(255,255,255,0.96) 0 -1px 4px,
					rgba($col-dark, 0.96) 0 0 4px;

}

#toast{
	position: absolute;
	left:var(--pad);
	top:var(--pad);
}

#feedback{
	box-sizing: border-box;
	position: fixed;
	z-index: 303;
	bottom:var(--pad);
	// left:var(--pad);
	right:var(--pad);
	max-width: calc(100% - 2 * var(--pad));
	background-color:rgba($col-dark,0.9);
	
	// cool carat
	&::after{
		content:'';
		width: 1rem;
		height:100%;
		background-color: $col-yellow;
		display: inline-block;
	}
}

#feedback:hover ~ canvas{
	opacity:0.5;
}

// we need this to visually look the same size as the video
#controls{
	
	display: block;
	margin:auto;
	padding:0;
	
	overflow: hidden;
	position: absolute;
	top:0;
	left:0;
	right:0;
	bottom: 0;

	// width:100%;
	pointer-events: none;

	> *{
		pointer-events: auto;
	}

	/*
	// we need media queries to complete
	
	max-width:var(--width);
	max-height:var(--height);

	// landscape
	@media (orientation: landscape) {
		height:100vh;
		width:calc(var(--width) / var(--height) * 100vh );
	}
	// portrait
	@media (orientation: portrait) {
		width:100vw;
		height:calc(var(--height) / var(--width)  * 100vw );
	}*/


	// &::before{
	// 	display: block;
	// 	content:'';
	// 	// width:calc(var(--width) / var(--height) * 100%);
	// 	// height:calc( 100% );
	// 	width:100%;
	// 	padding-bottom:calc(var(--width) / var(--height) * 100%);
	// }
}


#pwa{
	position:absolute;
	left: var(--pad);
	bottom: var(--pad);
	color:$col-brown;
}

.brand{
	background:url(./assets/logos/designerzen.svg) no-repeat left 2px center;
	background-size: contain;
	padding-left:15px;
}

fieldset{
	border:0;
	margin:var(--pad);
	padding:0;
	display: grid;
	grid-template-columns:1fr 1fr ;
}

button{
	margin:0;
	padding:0;
	appearance: none;
	border:0;
	background-color: transparent;
}

// button that covers people
button.person{
	cursor:pointer;
	position: absolute;	
	z-index:202;
	
	border-radius: 100%;
	//border:2px solid white;

	color:transparent;
	opacity: 0;
	transition: 400ms ease-in opacity, left 9ms linear, top 9ms linear;

	&:hover, &:focus{
		
		outline: none;
	}

	&:hover{
		opacity: 0.8;
	}

	svg{
		width: 100%;
		//height:auto;
		fill:orange;
		stroke-width: 3px;
		stroke:purple;
		//transform: scaleX(-1);
		pointer-events: none;
		circle{
			stroke:black;
			fill:white;
		}
	}
}
.active button.person{
	display: block;	
}


button#person-a{

	outline:2px solid $col-blue;
	
	//left:calc( 1px * var(--person-a-x,0) );
	left:calc( 100% * var(--person-a-x,0) / var(--width,640) );
	top:calc( 100% * var(--person-a-y,0) / var(--height,640) );
	
	width:calc( 100% * var(--person-a-w,0) / var(--width,640) );
	height:calc( 100% * var(--person-a-h,0) / var(--height,640) );
}

// move into position
button#person-b{
	outline:2px solid $col-green;

	left:calc( 1px * var(--person-b-x,0) );
	top:calc( 1px *var(--person-b-y,0) );
	width:calc( 1px * var(--person-b-w,0) );
	height:calc( 1px * var(--person-b-h,0) );
}

button#button-video{
	position: absolute;
	top:0;
	left:0;
	width: 100%;
	// right:0;
	bottom:0;
	z-index:-1;
}

button#button-midi{
	background-image:url(assets/logos/midi.svg);
	background-repeat:no-repeat;
	background-size: contain;
	z-index:1;
	cursor:pointer;
	left:var(--pad);
	bottom:var(--pad);
	position: absolute;
	min-width:200px;
	min-height:50px;
	// box-sizing: border-box;
	padding-left:110px;
	padding-right:20px;
	border-radius: var(--curve) var(--curve) var(--curve) 0;
	transition:background-color 40ms ease-out;
	overflow: hidden;

	color:$col-white;
	background-color:$col-blue;
	
	&:before{
		// border-radius: var(--curve) 0;
		position: absolute;
		top:0;
		left:0;
		right:0;
		bottom:0;
		content:'';
		background:inherit;
		background-color:transparent;
		filter:brightness(0%) hue-rotate(180deg);
		// filter: tint($col-blue);
		opacity:0;
		z-index: -1;
		transition:opacity 400ms ease-out;
	}

	&:hover{
		color:$col-blue;
		background-color:$col-white;

		&:before{
			opacity:1;
			z-index:1;
		}
	}
}

// midi buton was pressed - now loading state
main.midi-activated{
	// hide button
	#button-midi{
		cursor:not-allowed;
	}
}


main.midi-available{
	// hide button
	#button-midi{
		display: none;
	}
}

button#button-record{
	color:$col-red;
}

// an update is available to the app!
button.update-available{
	position: absolute;
	top:var(--pad);
	left:var(--pad);
}

@keyframes Fade{
	from{
		opacity: 0;
	}
	to{
		opacity: 1;
	}
}
@keyframes Loading{
	0%{
		transform:translateX( 0 );
		//background-color: hsl(90, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(90, 60%, 40%), hsl(90, 60%, 40%));
	}
	10%{
		background-image:linear-gradient(90deg, hsl(180, 60%, 40%),hsl(180, 60%, 40%));
	}
	20%{
		transform:translateX( calc(100% - var(--loader-size)) );
		//background-color: hsl(180, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(180, 60%, 40%),hsl(180, 60%, 40%));
	}
	30%{
		background-image:linear-gradient(90deg, hsl(270, 60%, 40%),hsl(270, 60%, 40%));
	}
	40%{
		transform:translateX( calc(100% - var(--loader-size)) ) translateY( calc( 100% - var(--loader-size) ) );
		//background-color: hsl(270, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(270, 60%, 40%),hsl(270, 60%, 40%));
	}
	50%{
		background-image:linear-gradient(90deg, hsl(360, 60%, 40%), hsl(360, 60%, 40%));
	}
	70%{
		transform:translateX( 0 )  translateY( calc( 100% - var(--loader-size) ) );
		//background-color: hsl(360, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(360, 60%, 40%), hsl(360, 60%, 40%));
	}
	80%{
		background-image:linear-gradient(90deg, hsl(90, 60%, 40%),hsl(90, 60%, 40%));
	}
	100%{
		transform:translateX( 0 );
		//background-color: hsl(90, 60%, 40%);
		background-image:linear-gradient(90deg, hsl(90, 60%, 40%),hsl(90, 60%, 40%));
	}
}