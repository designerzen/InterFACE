%text-glow{
	// inset
	text-shadow: 	var( --text-shadow, rgba($col-white,0.6)) 0 0px 1px,
					var( --text-shadow, rgba($col-white,0.4)) 0 0.5px 1px,
					var( --text-shadow, rgba($col-cream,0.24)) 0 1px 1px,
					var( --text-shadow, rgba($col-cream,0.1)) 0 1.5px 1px;

	
}

%drop-shadow{
	box-shadow:/* inset 0px 0px calc(1 * var(--button-border-size)) rgba($col-white, 0.8 ),*/
				rgba($col-dark,0.8) 0 0px 2px,
				rgba($col-dark,0.6) 0 0.5px 2px,
				rgba($col-dark,0.4) 0 1px 2px,
				rgba($col-dark,0.2) 0 1.5px 2px;
	
}

%button-active{
	--col-top: var(--col-orange);
    --col-bottom: var(--col-select);

	--col-select:#{$col-blue};
	transform:translateX(2px) translateY(2px);
}

// This is the button style that can be added to any element
%button-style{
	
	--col-fg:#{$col-white};
	
	@extend %text-glow;

	// only for larger sizes?
	// this softens the border and adds a soft dropshadow
	@extend %drop-shadow;

	// custom border - light from top right
	border:var(--button-border-size) solid rgba($col-brown, 0.5);
	border-top-color: rgba($col-white, 0.3 );
	border-right-color: rgba($col-white, 0.34 );
	border-left-color: rgba($col-white, 0.15);
	
	// each corner has a gradient too
	// border-image: 
	// 	linear-gradient(
	// 		var(--col-top, hsla(0, 0%, 100%, 0.3) ), 
	// 		var(--col-bottom, hsla(0, 0%, 0%, 0.3) )
	// 	),
	// 	radial-gradient(
	// 		at top left,
	// 		var(--col-top), var(--col-bottom)
	// 	),
	// 	radial-gradient(
	// 		at top right,
	// 		var(--col-top), var(--col-bottom)
	// 	),
	// 	radial-gradient(
	// 		at bottom left,
	// 		var(--col-top), var(--col-bottom)
	// 	), 
	// 	radial-gradient(
	// 		at bottom right,
	// 		var(--col-top), var(--col-bottom)
	// 	);
		
	// this overscales the border to make it darker!
	//border-image-outset: 4px;

	// border-image-repeat: repeat;

	border-radius:var(--button-curve, 16px);

	outline:var(--button-border-size) solid transparent;
	outline-offset: -1px;

	padding:var(--pad);

	color:var(--col-fg, #{$col-white} );
	background-color:var(--col-bg, #{$col-blue});

	background-image:var(--bg),
					linear-gradient( 
						var(--col-top, rgba(255,255,255, 0.3) ), 
						var(--col-bottom, rgba(0,0,0, 0.3) )
					);

	background-repeat:no-repeat, 
					  //repeat, 
					  repeat-x;
	
	background-size:auto var(--icon-size), 
					auto, 
					auto ;
	
	// background-position:top var(--pad) center;
	background-position: var( --pos-override, var(--pos, center) ),
						center, 
						center;
	
	// FIXME:
	// background-blend-mode: difference;
	
	// animations
	//animation-name:unset;	// start unset
	animation-fill-mode: both, both;
	animation-duration: var(--duration,900ms), var(--duration,900ms);// 0s 1 linear both;
	animation-direction: normal, normal;

	transition:transform var(--fade-speed) $easeOutBack,
				background-color var(--fade-speed) linear, 
				color var(--fade-speed) linear,
				border-color var(--fade-speed) linear,
				outline-color var(--fade-speed) linear;

	&:hover, &:focus{

		// for a custom cursor too...
		// cursor: var(--bg), auto;
		
		--col-fg:#{$col-dark};
		--col-top:#{rgba($col-orange, 0.9)};
		--col-bottom:#{rgba($col-yellow, 0.8)};
		

		border:var(--button-border-size) solid rgba($col-white, 0.8);
		// border-top-color: rgba($col-brown, 0.6 );
		// border-left-color: rgba($col-white, 0.4);
		border-right-color: rgba($col-white, 0.9);
		border-bottom-color: rgba($col-white, 0.7);
	
		background-color:var(--col-hover);
		
		// text-shadow: rgba($col-dark,0.4) 0 0px 1px,
		// 			rgba($col-dark,0.3) 0 0.5px 1px,
		// 			rgba($col-dark,0.2) 0 1px 1px,
		// 			rgba($col-dark,0.1) 0 1.5px 1px;
					
		box-shadow:/* inset 0px 0px calc(1 * var(--button-border-size)) rgba($col-white, 0.8 ),*/
					rgba($col-dark,0.8) 0 0px 2px,
					rgba($col-dark,0.6) 0 0.5px 2px,
					rgba($col-dark,0.4) 0 1px 2px,
					rgba($col-dark,0.2) 0 1.5px 2px;

		// before is dark and we fade it in...
		&:before{
			opacity:0;
			z-index:1;
		}
	}

	&:focus{
		outline-color:$col-orange;
		// outline-offset:calc( -1 * var(--button-border-size) );
		// pop to front
		z-index:808;
		select{
			z-index:909;
		}
	}

	&:active{
		// set background to orange
		--col-hover: $col-orange;

		--col-top:#{$col-orange};
		--col-bottom:#{$col-red};
		
		@extend %button-active;
		
		// move icons down and to the right
		&::before{
			transition:opacity var(--fade-speed) linear;
		}
	}
	
	// // on press!
	 &:active:focus{
	// 	--col-hover: $col-grey;
	// 	--col-top:#{$col-orange};
	// 	--col-bottom:#{$col-red};
	
		outline-color:$col-yellow;
	 }
}

// BUTTON ABSTRACT
.button,
button,
input[type=list],
.controls > *{

	--icon-size:32px;
	--fade-speed:var(--ease-q);
	// calc(var(--pad) - var(--border-size))
	--pos: left var(--pad) center;
	--button-border-size:2px;
	--button-curve:clamp(2px, 1vmin, 6px);
	
	// actual colour of the button
	--col-bg:#{$col-dark};
	--col-fg:#{$col-white};

	// gradient background
	--col-top:#{rgba($col-white, 0.15)};
	--col-bottom:#{rgba($col-dark, 0.15)};
	
	--duration: var(--ease-q);
	--delay-offset: var(--ease-q);
				
	// override just in case
	text-rendering: optimizeLegibility;
	
	//border-style: solid;// outset groove;
	cursor: pointer;

	// from ios guidelines
	min-width:44px;
	min-height:44px;
	max-width:var(--max-width-override, var(--max-width,auto) );

	position: relative;
	box-sizing: border-box;
	margin:0;
	padding:var(--pad);

	// force onto one line...
	white-space: pre;
	user-select: none;
	appearance: none;
	-webkit-appearance: none;

	line-height: 1;
	
	
	// -0.5385rem + 7.6923vw
	// clamp(minimum, preferred, maximum)
	font-size:clamp(8px, -0.5385rem + 2.2vmax, 14px);
	font-weight: 800;
	letter-spacing: 0.75px;
		
	// max-width:calc(100% - 2 * var(--pad));
	z-index:1;

	// from horizontal to vertical stack using grid
	// --breakpoint:300px;
  	// --gap: 20px;
	// display: grid;
  	// gap: var(--gap);  
	// grid-gap: var(--gap);
	// --v:min( (var(--breakpoint) - 100%) * 999, 100%);
	// grid-template-columns:repeat(
    //   auto-fit,
    //   minmax(
    //     var(--v),
    //     1fr
    //   )
    // );

	display: flex;
	//flex-wrap: auto;
	flex-direction: var( --dir-override, var(--direction, row));
	// ensure a gap between row items...

	// flex-wrap: wrap;	
	align-items: center;
	// put as much space between as possible
	justify-content: space-between;
		
	// animations
	//animation-name:unset;	// start unset
	animation-fill-mode: both, both;
	animation-duration: var(--duration,900ms), var(--duration,900ms);// 0s 1 linear both;
	animation-direction: normal, normal;

	transition:transform var(--fade-speed) $easeOutBack,
				background-color var(--fade-speed) linear, 
				color var(--fade-speed) linear;

	// Inherit the icon and recolour
	&:before{
		// allow to pop in front
		position: relative;
		z-index:1;

		display: block;
		// prevent squishing
		flex: none;

		// try and set to the size of the background icon
		min-width:var(--icon-size);
		min-height:var(--icon-size);

		content:'';
		pointer-events: none;
		
		// background:inherit;
		// background-image: none;
		background:transparent var(--bg) no-repeat;
		// background-color:transparent;
		background-position:top center;
		background-size:auto var(--icon-size);

		// flip the black to white and desaturate a little to make
		// it look great - remember this is the hover state
		// https://codepen.io/sosuke/pen/Pjoqqp
		filter: invert(90%) sepia(10%) saturate(395%) hue-rotate(324deg) brightness(105%) contrast(81%);
		
		opacity:0.9;
		// z-index: -1;

		transition:opacity var(--fade-speed) linear,
					transform var(--fade-speed) $easeOutBack;
	}

	&.hide{
		display: none;
	}

	&.no-text{
		// we hide the text for some buttons
		justify-content: center;
		background-position: center;
	}
}

// BUTTON STYLE
button,
input[type=list],
input[type=radio]:checked,
// label[for=button-solo],
// label[for=button-duet],
label[for="button-start"],
.controls > *{

	@extend %button-style;

	&.hide{
		display: none;
	}
}


// BUTTON STYLE
.controls{
	// FIXME: container query
	// contain: layout size style;
	// contain: layout inline-size style;
}

// this adds some right pad to icons on the control bar
.controls > *{

	&:not(.hide-text){
		gap:calc(var(--pad) / 2 );
		//margin-right:calc(var(--pad) / 2 );
	}
}

// show even the hidden text!
@media screen and (max-width:1960px){
	
	:root{
		
	}

	button,
	.controls > * {
		.hide-text{
			// %image-replacement
			text-indent: -9999px;
			overflow:hidden;
			color:transparent;
			text-shadow:none;
			white-space: pre;
			font-size: 0;
			background-position: center center;
			justify-content: center;
		}	
	}
}

// stack
@media screen and (max-width:1240px){
	
	:root{
		--footer-gap:calc(74px);
	}

	button,
	.controls > *{
		--icon-size:26px;
		--pos:top var(--pad) center;
		--direction: column;
		
		// remove margin
		&:not(.hide-text):before{
			margin-right:0;
		}
	}
}

// smallest always hides text so overrides here...
@media screen and (max-width:586px){

	:root{
		--footer-gap:calc(67px);
	}

	// make sure we only specify the none person-controls
	//button,
	.controls > *{
		--icon-size:28px;
		--pos: center center;
		--direction: row;
		font-size: 0;
		// as there is now no longer any text we 
		// need to centralise the icon
		text-indent: -9999px;
		overflow:hidden;
		color:transparent;
		justify-content: center;
	}
		
	// this adds some right pad to icons on the control bar
	.controls > *{

		&:not(.hide-text){
			gap:0;
		}
	}
}


// smallest always hides text so overrides here...
@media screen and (max-width:388px){

	:root{
		--footer-gap:calc(67px);
	}

	// smallest icon size to squeeze fit
	button,
	.controls > *{
		--icon-size:20px;
		// here we set a max width
		// NB. you can override this with --max-width-override
		--max-width:33px;
		min-width:22px;
	}
}





// Overlay buttons
.controls{
	
	// backgrounds
	--col-regular:#{$col-dark};
	--col-hover:#{$col-orange};
	--col-select:#{$col-yellow};

	// we swap this to absolute when we want to window it
	position: fixed;
	margin:0;

	bottom:0;
	left:0;
	//right:0;
	
	gap: 1px;

	min-width:100vw;
	max-width:100%;

	visibility:hidden;
	align-items: stretch;
	justify-content: stretch;
	pointer-events: auto;

	background-image:linear-gradient(
		hsla(18, 21%, 12%, 0.7), 
		hsla(340, 5%, 11%, 0.7)
	);

	//overflow: hidden;
	// overflow: scroll;
	//overflow-y:hidden;

	// need to bring it into z-range
	z-index:303;
	
	// @media screen and (min-width:640px){
		
	// }


	//  > * + *{
	//  	border-left:1px solid $col-dark;
	// }

	// sometimes the label takes focus making interaction difficult
	label{
		// pointer-events: none;
		position: relative;

		select{
			// FIXME: Should this be -1?
			z-index:1;
		}

		// stertch them out 
		select, input{
			pointer-events: auto;
			cursor:pointer;
			border:0;
			// width: var(--icon-size);
			position:absolute;
			top:0;
			bottom:0;
			min-width:100%;
			max-width:100%;
			// FIXME:
			//right:0;
			// left:0;
			// z-index:1;
			order:-1;
			appearance:none;
			opacity:0;
			overflow: hidden;
		}

		// bring in front of selects...
		input, button{
			z-index:1;
		}
		
		// selected
		select:focus:active{
			max-width:none;
		}

		// Indicator
		&:after{
			background-color: var(--col-select, $col-orange);
			opacity:0;
			content:'';
			display: block;
			position: absolute;
			left:0;
			right:0;
			bottom:0;
			height:8px;
			transform-origin: center bottom;
			transform:translateY(100%);
			transition:opacity var(--ease-m) linear,
						transform var(--ease-s) $easeOutBack;
		}

		&.checked{
			background-color: var(--col-select);
		}
	
		// hover when selected still turns orange!
		&.checked:hover::before{
			opacity: 1;
		}

		// toggled state each one can have unique color
		&.checked::after{
			opacity:1;
			transform:translateY(20%);
		}
	}

	legend{
		position: absolute;
		bottom:100%;
		background-color:transparent;
		color:transparent;
		user-select: none;
		pointer-events: none;
		border:0;
		visibility: hidden;

		&:focus{
			color:$col-white;
			visibility: visible;
		}
	}

	label, button{
		// labels can collapse without text to expand them
		//border-radius:5px 5px 0 0;
		//border-left:0;
		// border-right-color:$col-white;
		// border-left:$col-cream;
		// border-bottom:var(--button-border-size) solid $col-blue;
		
		font-weight:900;
		// color:var(--col-regular);
		// background-color:rgba($col-yellow,0.5);

		&:active{
			--col-top:var(--col-select);
			--col-bottom:var(--col-select);
			//background-color: var(--col-select);
			@extend %button-active;
		}

		&:focus{
			outline:2px solid $col-orange;
			//outline-offset: -3px;
		}



		&.checked{
			// --col-fg:red;
			--col-top:#{$col-dark};
			--col-bottom:#{$col-dark};
			//background-color: var(--col-regular);
			// background-color: $col-dark;
		}
		
		&.checked:hover,
		&:hover, &:focus{
			--col-top:#{$col-orange};
			--col-bottom:#{$col-yellow};
			
			//color:$col-white;
			//background-color: var(--col-regular);

			&::before{
				opacity: 0;
			}
		}
		
		&:empty{ 
			display:none;
		}
	}

	input[type=select],
	select{
		padding:var(--pad) ;
		color:transparent;
		background-color: transparent;
		text-align: center;

		optgroup{
			appearance:none;
			background-color: $col-yellow;
			color: $col-dark;
			font-weight:900;
			text-transform: uppercase;
			padding:var(--pad);
			margin:auto;
		}

		option{
			padding:var(--pad);
			color: $col-dark;
			background-color: $col-cream;
			text-transform:initial;

			&:hover, &:focus{
				color:$col-cream;
				background-color: $col-dark;
			}

		}
	}
	
	button{	
		// padding-right:20px;
	}

	
	label:not(:last-child),
	button:not(:last-child){
		
	}

	// Labels
	
	// selector for the tempo
	label[for="select-tempo"]{
		--bg:url(/source/assets/icons/speed-24px.svg);
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
	}

	label[for="button-settings"]{
		order:-1;
		--col-select:#{$col-green};
		--col-hover:#{$col-blue};
		--bg:url(/source/assets/icons/settings-24px.svg);

		&.checked{
			// arrow down to show that the settings hide
			--bg:url(/source/assets/icons/expand_more-24px.svg);
		}
	}

	label[for="button-quantise"]{
		--col-select:#{$col-blue};
		--col-hover:#{$col-blue};
		--bg:url(/source/assets/icons/grid_off-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/grid_on-24px.svg);
		}
	}

	label[for="button-metronome"]{
		--bg:url(/source/assets/icons/hourglass_disabled-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/hourglass_empty-24px.svg);
		}
	}

	label[for="button-mute"]{
		--col-select:#{$col-blue};
		--col-hover:#{$col-blue};
		--bg:url(/source/assets/icons/volume_mute-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/volume_off-24px.svg);
		}
	}

	label[for="button-disco"]{
		--col-select:#{$col-green};
		--col-hover:#{$col-blue};
		--bg:url(/source/assets/icons/blur_off-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/blur_on-24px.svg);
		}
	}

	// Reverb selection
	label[for="select-impulse"]{
		--col-select:#{$col-blue};
		--col-hover:#{$col-blue};
		--bg:url(/source/assets/icons/extension-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/extension_off-24px.svg);
		}
	}

	// Face mesh overlays
	label[for="button-meshes"]{
		--col-select:#{$col-yellow};
		--col-hover:#{$col-blue};
		--bg:url(/source/assets/icons/face_retouching_off-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/face_retouching_natural-24px.svg);
		}
	}

	// Eye overlays
	label[for="button-eyes"],
	label[for="select-eyes"]{
		--col-select:#{$col-green};
		--col-hover:#{$col-blue};
		--bg:url(/source/assets/icons/adjust-24px.svg);
		&.checked{
			//--bg:url(/source/assets/icons/extension_off-24px.svg);
		}
	}

	label[for="select-eyes"]{
		visibility: hidden;
	}
		
	// Toggle show eyes or hide eyes
	label[for="button-eyes"]{
		--bg:url(/source/assets/icons/motion_photos_off-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/motion_photos_on-24px.svg);
		}
	}

	// 
	label[for="button-subtitles"]{
		--col-select:#{$col-green};
		--col-hover:#{$col-blue};
		--bg:url(/source/assets/icons/speaker_notes-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/speaker_notes_off-24px.svg);
		}
	}

	// choose colour scheme
	label[for="select-palette"]{
		--col-select:#{$col-yellow};
		--col-hover:#{$col-green};
		--bg:url(/source/assets/icons/color_lens-24px.svg);
		&.checked{
			//--bg:url(/source/assets/icons/extension_off-24px.svg);
		}
	}

	// add beats
	label[for="button-percussion"]{
		--col-select:#{$col-green};
		--col-hover:#{$col-yellow};
		--bg:url(/source/assets/icons/auto_fix_high-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/auto_fix_off-24px.svg);
		}
	}


	label[for="button-fullscreen"]{
		// far right
		order:99;
		--col-select:transparent;
		//--col-hover:transparent;

		@extend %image-replacement;
		--bg:url(/source/assets/icons/fullscreen-24px.svg);
		
		// toggled state
		&.checked{
			--bg:url(/source/assets/icons/fullscreen_exit-24px.svg);
		}
		
		// override if user has esc'ed
		@media all and (display-mode: fullscreen) {
			--bg:url(/source/assets/icons/fullscreen_exit-24px.svg) !important;
		}
	}
	

	label[for="button-overlay"]{
		// --col-hover:#{$col-dark};
		--col-select:#{$col-blue};
		// @extend %image-replacement;
		--bg:url(/source/assets/icons/videocam_off-24px.svg);
		&.checked{
			--bg:url(/source/assets/icons/videocam-24px.svg);
		}
	}

	label[for="button-spectrogram"]{
		// --col-hover:$col-dark;
		--col-hover:#{$col-green};
		--col-select:#{$col-orange};
		--bg:url(/source/assets/icons/graphic_eq_black_24dp.svg);
		&.checked{
			--bg:url(/source/assets/icons/graphic_eq_black_24dp.svg);
		}
	}
	label[for="select-samples"]{
		// --col-hover:$col-dark;
		--col-hover:#{$col-green};
		--col-select:#{$col-orange};
		--bg:url(/source/assets/icons/audiotrack-24px.svg);
		// &.checked{
		// 	--bg:url(/source/assets/icons/graphic_eq_black_24dp.svg);
		// }
	}

	// label[for="button-spectrogram"]{
	// 	// --col-hover:$col-dark;
	// 	--col-hover:#{$col-green};
	// 	--col-select:#{$col-green};
	// 	background-image:url(/source/assets/icons/piano-24px.svg);
	// 	&.checked{
	// 		background-image:url(/source/assets/icons/piano_off-24px.svg);
	// 	}
	// }

	label[for="button-clear"]{
		// --col-hover:$col-dark;
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
		// --bg:url(/source/assets/icons/image_not_supported-24px.svg);
		--bg:url(/source/assets/icons/visibility-24px.svg);

		&.checked{
			// background-image:url(/source/assets/icons/music_off-24px.svg);
			// --bg:url(/source/assets/icons/image-24px.svg);
			--bg:url(/source/assets/icons/visibility_off-24px.svg);
			// background-image:url(/source/assets/icons/music_note-24px-24px.svg);
		}
	}

	// we have the top left nav button instead here?
	#button-help{
		display: none;
	}

	label[for="button-speak"]{
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
		// --bg:url(/source/assets/icons/mic_off-24px.svg);
		--bg:url(/source/assets/icons/voice_over_off_black_24dp.svg);
		&.checked{
			// background-image:url(/source/assets/icons/music_off-24px.svg);
			--bg:url(/source/assets/icons/record_voice_over_black_24dp.svg);
			// background-image:url(/source/assets/icons/music_note-24px-24px.svg);
		}
	}
	
	label[for="button-transparent"]{
		// only display between certain sizes?
		display: none;
		// --col-hover:$col-dark;
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
		--bg:url(/source/assets/icons/web_asset_off-24px.svg);
		&.checked{
			// background-image:url(/source/assets/icons/music_off-24px.svg);
			--bg:url(/source/assets/icons/web_asset-24px.svg);
			// background-image:url(/source/assets/icons/music_note-24px-24px.svg);
		}
	}

	// selector for the tempo
	label[for="select-tempo"]{
		--bg:url(/source/assets/icons/speed-24px.svg);
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
	}
	

	label[for="input-tempo"]{
		--bg:url(/source/assets/icons/speed-24px.svg);
		--col-select:#{$col-yellow};
	}

}


// actual button
input{
	cursor:pointer;
	appearance: none;
	position: relative;
	box-sizing: border-box;
	margin:0;
}

input[type=radio]{
	//background-color: $col-yellow;
	position: absolute;
	--over:0%;
	--y:0;
	top:calc( -1 * var(--over));
	left:calc( -1 * var(--over));
	// right:calc( -1 * var(--over));
	bottom:calc( -1 * var(--over));
	width:calc( 2 * var(--over) + 100% );
	display:block;
	transition:transform 1300ms $easeInOutBack;
	transform:translateY(var(--y,-10%)) scale(0.8);
	
	&:checked{
		transform:translateY(0) scale(1);
	}
}

// label[for="button-*"]{
// 	outline:10px solid yellow;
// }

// replace regular with a classic radio style toggle button
// square emerald with a big tick
input[type=checkbox]{

	appearance: none;
	display: inline-block;
	background-color:$col-dark;

	// background:linear-gradient( $col-green, $col-gray );
		
	border:var(--button-border-size) solid rgba($col-brown, 0.9);
	border-top-color: rgba($col-white, 0.6 );
	border-left-color: rgba($col-white, 0.3);
	border-right-color: rgba($col-white, 0.7);
	border-radius:3px;
	margin-left:var(--pad);
	//border-radius:999px;
	
	// from ios guidelines
	// min-width:44px;
	// min-height:44px;
	// max-width:var(--max-width-override, var(--max-width,auto) );

	padding:var(--pad);

	// FIXME:
	&:checked{
		background-color:$col-red;
		background:linear-gradient( $col-red, $col-dark );
	
		background-size:80%, 100%;

		&:before, &:after{
			content:'✔';
			position: absolute;
			// top:0;
			left:0;
			right:0;
			bottom:0.5rem;
			color:$col-white;
			text-align: center;
			font-size: 200%;
			line-height: 0;
			@extend %text-glow;
		}
		&:before{
			color:$col-red;
		}
	}

	&:focus{
		//border-color:$col-orange;
		outline:1px solid $col-orange;
	}
	&:active{
		@extend %button-active;
	}
}

// different kind of switchbox for one toggle only
input[type=checkbox].switch{

	--width:100%;
	--col-top:#{$col-tan};
	--col-bottom:#{$col-grey};

	background-color:$col-gray;
	//background:linear-gradient( $col-green, $col-gray );
	background:linear-gradient( to right, rgba($col-grey, 0.5), rgba( $col-cream, 0.5) );
	//min-width:var(--width);
	position: relative;
	box-sizing: border-box;
	border-radius:99px;	
	flex-grow: 1;
	
	&:before, &:after{
		content:'';
		box-sizing: border-box;
		font-weight:900;
	}
	
	// knob
	&:before{
		display: flex;
		align-items: center;
		justify-content: center;
		content:'OFF';
		@extend %drop-shadow;
		color:$col-white;

		position:absolute;
		left:0;
		height:100%;
		text-align: center;
		top:0;
		width:calc( var(--width) / 2 );
		//margin-left:calc( -1 * var(--width) / 4 );

		font-size: 8px;
		border-radius:99px;
		border:calc( 0.5 * var(--button-border-size,4px)) solid $col-white;
		background-color:$col-gray;
		background-image:linear-gradient($col-dark, $col-gray);
		transition:transform 195ms $easeInOutQuad;
	}

	border-color:$col-dark;
	&:checked{
		background-color:$col-blue;
		background:linear-gradient( to right, $col-green, $col-green );
		background-size:80%, 100%;

		border-color:$col-dark;
		// 
		&:before{
			content:'ON';
			color:$col-dark;
			//border-color:$col-cream;
			transform: translateX(100%);
			background-image:linear-gradient($col-yellow, $col-gray);
		}
	}

	&:focus{
		outline:0;
	//	border:var(--button-border-size) solid rgba($col-brown, 0.7);
		
	// border-color:$col-dark;
		// border-top-color: rgba($col-white, 0.4 );
		// border-left-color: rgba($col-white, 0.2);
		// border-right-color: rgba($col-white, 0.5);
	}

}



input[type=submit]{
	background:transparent;
	font:inherit;
	color:inherit;
	text-transform:inherit;
	border:0;
}


select {
	-moz-appearance: none;
	-webkit-appearance: none;
	background: no-repeat right center / 1em;
	border-radius: 0;
	padding-right: 1em;
}
  
select:not([multiple]):not([size]) {
	background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='4'%3E%3Cpath d='M4 0h6L7 4'/%3E%3C/svg%3E");
}
  
::-ms-expand {
	display: none;

}



label[for="button-trio"]{
	display:none;
	--bg:url(/source/assets/icons/groups-24px.svg);
}

// These need overrides for size
label[for="button-trio"],
button#button-trio{
	// background-color:vae(--col-hover);
	// background-color: $col-yellow;
	--col-hover:#{$col-green};
	--bg:url(/source/assets/icons/person_add-24px.svg);
	//display: none;
}
label[for="button-solo"],
button#button-solo{
	--col-bg: #{$col-green};
	--bg:url(/source/assets/icons/person-24px.svg);
	--y:100%;
}

label[for="button-duet"],
button#button-duet{
	--col-bg: #{$col-blue};
	--bg:url(/source/assets/icons/people-24px.svg);
	--y:-100%;
}



// logo 
#link-about{

}

// generic close button
.button-close{
	&:before{
		content:'x';
	}
}

// button that covers people
button.person{
	padding:0;
	cursor:pointer;
	position: absolute;	
	z-index:202;
	overflow: hidden;
	border:2px solid $col-blue;
	outline:2px solid $col-cream;
	box-sizing: border-box;
	border-radius: 3px;
	// appearance: none;
	//border:2px solid white;

	text-shadow:none;
	color:transparent;
	opacity: 0;
	transition: var(--ease-s) ease-in opacity;
	//, left 9ms linear, top 9ms linear;

	&:hover, &:focus{
		background-color: transparent;
		outline: none;
	}

	&:active{
		opacity: 1;
	}

	&:hover{
		opacity: 0.9;
		background-color: transparent;
	}

	svg{
		width: 100%;
		//height:auto;
		fill:orange;
		stroke-width: 3px;
		stroke:purple;
		//transform: scaleX(-1);
		pointer-events: none;
		circle{
			stroke:black;
			fill:white;
		}
	}
}

// move into position
button#person-a{
	left:calc( 100% * var(--person-a-x,0) / var(--width,640) );
	top:calc( 100% * var(--person-a-y,0) / var(--height,640) );
	width:calc( 100% * var(--person-a-w,0) / var(--width,640) );
	height:calc( 100% * var(--person-a-h,0) / var(--height,640) );
}

button#person-b{
	outline-color:$col-green;
	left:calc( 100% * var(--person-b-x,0) / var(--width,640) );
	top:calc( 100% * var(--person-b-y,0) / var(--height,640) );
	width:calc( 100% * var(--person-b-w,0) / var(--width,640) );
	height:calc( 100% * var(--person-b-h,0) / var(--height,640) );
}

// generic button style
button#button-record,
// button#button-video,
button#button-midi,
button.install-app,
button.update-available{
	// border-radius: var(--curve) var(--curve) var(--curve) 0;
	//transition:background-color var(--ease-q) linear, color 40ms linear;
	overflow: hidden;
}

// override style
button.person,
button#button-video{
	// forces the cursor to work inside
	pointer-events: auto;
	user-select: none;
	// hide any copy
	color:transparent;
	text-shadow:none;
	background-color: transparent;
	
	&:hover, &:active, &:focus{
		color:transparent;
		background-color: transparent;
		text-shadow:none;
		//border:5px solid $col-yellow;
	}
}

button#button-video{
	display: block;
	position: absolute;//fixed;
	
	bottom:var(--pad);
	left:var(--pad);
	right:var(--pad);
	top:var(--pad);

	padding:0;
	border:0;
	
	// just a little margin of error
	// bottom:0rem;
	// try and push to the back
	z-index:-1;
	
	// prevent finger cursor
	cursor: default;

	max-width:none;
	background: none;
	opacity: 0;

	&::before, &::after{
		display:none;
	}
}

// SHARED CONTROL PANEL
button#button-midi{
	// We were looking at all the MIDI Innovation Award apps and noticed that you are using the new MIDI pictogram on your website. 
	// The MIDI logo and Pictogram is the intellectual property of the MIDI Association and can only be used by MIDI Association members who have signed our logo licensing agreement and certify that their product supports MIDI 2.0. 
	// As we have not publicized the rules about MIDI 2.0 logo usage we are sure this is unintentional on your part.  
	// However we have to insist that you immediately remove the logo from your website. 

	//background-position: left 1px center;
	// --icon-size:36px;
	//background-color: $col-cream;
	--bg:url(/source/assets/icons/midi-copyright-free.svg);
	&:before{
		// also make sure we have set the width for midi as is not square
		//min-width: calc(var(--icon-size) * 1.2);
	}
}

button#button-record{
	//color:$col-red;
	&.recording{

	}
}

button#button-photograph{
	--col-hover:#{$col-blue};
	--bg:url(/source/assets/icons/add_a_photo-24px.svg);
}


button#button-reset{
	--col-hover:#{$col-blue};
	--bg:url(/source/assets/icons/report_problem_black_24dp.svg);
}

button#button-help{
	// background-color:vae(--col-hover);
	// background-color: $col-yellow;
	--col-hover:#{$col-blue};
	--bg:url(/source/assets/icons/help_outline_black_24dp.svg);
	//display: none;
	cursor: help;
}

button#share{
	--bg:url(/source/assets/icons/share-24px.svg);
	margin-left: auto;
	z-index:2;
	// second from right
	order:98;
}

// an update is available to the app!
#button-install,
#button-upgrade{
	border:0;
	// moves the text outside
	width:calc( var(--pad) * 2 + 32px);
	// hides text until hover
	color:transparent;
	text-shadow: none;
	order:-1;
	// --bg:url(/source/assets/icons/get_app-24px.svg);
	--bg:url(/source/assets/icons/download_for_offline_black_24dp.svg);
	background-color:transparent;
	
	//background: none;

}

#button-install{
	//--logo:url();
	--overlap:0px;
	--delay:0s;
	border-radius:99px;

	// after a brief while hide this?
	// animation: 
	// 			Hide-Install 0.4s $easeOutBack 0s 1 reverse both,
	// 			Hide-Install 0.4s $easeOutBack var(--delay) 1 normal both;
	
	// &:hover, &:focus{
	// 	--overlap:40px;
	// 	animation: Hide-Install 0.4s $easeInBack var(--delay) 1 reverse both;
	// }
	&.later{
		animation: Hide-Install var(--ease-s) $easeOutBack var(--delay) 1 normal both;
	}
}

#button-upgrade{
	
}


label[for="select-camera"],
#select-camera{
	--col-hover:#{$col-green};
}

// generally hide the camera select button unless 
// there are multiple cameras
#camera{
	display: none;
}

.multiple-cameras #camera{

	display: flex;
    // flex-direction: column-reverse;
	//transition:width 40ms ease-out;
	// display: grid;

	// background-color:$col-blue;
	// border-radius: 4px;
	// &:focus-within,
	// background-image:url(/source/assets/icons/switch_video-24px.svg);
	--bg:url(/source/assets/icons/switch_video-24px.svg);
	// overflow:hiddfooten;

	&:before{
		pointer-events: none;
	}

	&:hover,&:focus,&:target,
	&:focus-visible{
		// height:auto;
		outline:none;
		//width:calc(100% - 2 * var(--pad));
	}
	// label,select{
	// 	grid-area:1/1/1/1;
	// }
	// label{
	// 	// 
	// 	pointer-events: none;
	// 	white-space: pre;
	// 	outline:none;
	// 	opacity:0;
	// 	transition:opacity 40ms ease-out;
	// 	position: relative;
	// }
	// instead of the :before :)
}

// this holds nav to sections inc help and funding
nav{
	position:fixed;
	top:0;
	left:var(--pad);
	right:var(--pad);
	// 303 is the shared controls...
	z-index:505;
	pointer-events: none;
}

nav ul{
	
	display: flex;
	flex-direction: row-reverse;
	justify-content: space-between;
	align-items: flex-start;
	list-style: none;
	margin:0;
	padding:0;


	// prevent the whole thing stealing focus
	pointer-events: none;
	
	// > * {
	// 	opacity: 0.4;
	// 	transition: opacity 95ms linear;
	// }
	// &:focus-within,
	// &:hover{
	// 	> * {
	// 		opacity: 1;
	// 	}
	// }
	
	li{
		pointer-events: auto;
	}

	li a{
		text-align: center;
	}

	// however i do want all hover and focus withins to activaste the fund animation
	&:focus-within,
	&:hover{
		// a[href="#fund"]{

		// 	animation:TagReveal 1s 1 0.1s both,
		// 				TextColours 1s infinite 0s both;
		// }
	}

}


a[href="#help"]{
	border:1px solid transparent;
	padding:var(--pad);
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	cursor: help;
	// align-items: flex-end;
	// align-items: flex-end;
	justify-content: center;
	color:transparent;
	transition:color 95ms linear;

	&::before{
		flex:0;
		display: inline-block;
		content: '';
		min-width:44px;
		min-height:44px;
		background:url(/source/assets/icons/help_outline_black_24dp.svg) center no-repeat;
		background-size: contain;
		filter: invert(90%) sepia(10%) saturate(395%) hue-rotate(324deg) brightness(105%) contrast(81%) drop-shadow(0.15rem 0.15rem 0.4rem rgba(0, 0, 0, 0.5));
		margin-right:calc( 0.5 * var(--pad) );
		margin-bottom:calc( 0.5 * var(--pad) );
	}

	&:hover{
		color:inherit;
	}
}

.loaded a[href="#fund"]{
	animation:TagHide 1s 1 0.1s both;
	animation-timing-function: var(--ease-out-back);
}

a[href="#fund"]{
	text-transform: uppercase;
	display: flex;
	align-items:center;
	flex-direction: column-reverse;
	padding:var(--pad);
	padding-bottom: 0;
	border:1px solid transparent;
	animation:TagReveal 1s 1 0.1s both;

	// show a graphic but hide contents
	&::before, &::after{
		transition: var(--ease-s) linear opacity;
		opacity:0;
	}

	// Overlaid logo
	&:before{
		--opacity:0.8;
		--delay:0s;
		--size:clamp(48px, 10vmin, 180px );

		flex-shrink:0;
		animation: Fade var(--ease-s) linear var(--delay) 1 normal both;
		// position: absolute;
		// top:-7px;
		// right:8px;
		width:100%;
		//width:auto;
		height:var(--size,10%);
		display: block;
		z-index:3;
		filter:drop-shadow(0.15rem 0.15rem 0.4rem rgba(0, 0, 0, 0.5));
		background:url(./assets/logos/interface.cropped.svg) center no-repeat;
		background-size: contain;
		content:'';//url(./assets/logos/interface_colour.svg);
		// content:url(./assets/logos/interface_current-color.svg);
	}

	&:hover, &:focus{
		animation:TagReveal 90ms 1 0.1s both, TextColours 4s infinite 0.4s both;
	}
}