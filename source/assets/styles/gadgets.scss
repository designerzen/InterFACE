// voicemail-24px

%button-style{
	
	// inset
	text-shadow: rgba($col-white,0.4) 0 0px 1px,
				rgba($col-white,0.3) 0 0.5px 1px,
				rgba($col-cream,0.2) 0 1px 1px,
				rgba($col-cream,0.1) 0 1.5px 1px;

	// only for larger sizes?
	// this softens the border and adds a soft dropshadow
	box-shadow: inset 0px 4px calc(2 * var(--border-size)) $col-white,
				rgba($col-dark,0.4) 0 0px 2px,
				rgba($col-dark,0.3) 0 0.5px 2px,
				rgba($col-dark,0.2) 0 1px 2px,
				rgba($col-dark,0.1) 0 1.5px 2px;
	
	// custom border - light from top right
	border:var(--button-border-size) solid rgba($col-brown, 0.9);
	border-top-color: rgba($col-white, 0.6 );
	border-left-color: rgba($col-white, 0.3);
	border-right-color: rgba($col-white, 0.7);

	border-radius:var(--button-curve, 16px);

	padding:var(--pad);

	// start with dark text
	color:$col-dark;
	background-color:var(--col-bg);
	background-image: var(--bg),
					 // url(./assets/textures/45-degree-fabric-light.png),
					linear-gradient( 
						var(--col-top, rgba(255,255,255, 0.3) ), 
						var(--col-bottom, rgba(0,0,0, 0.3) )
					);

	background-repeat:no-repeat, 
					  //repeat, 
					  repeat-x;
	
	background-size:auto var(--icon-size), 
					auto, 
					auto ;
	
	// background-position:top var(--pad) center;
	background-position: var( --pos-override, var(--pos, center) ),
						center, 
						center;
	
	
	// animations
	//animation-name:unset;	// start unset
	animation-fill-mode: both, both;
	animation-duration: var(--duration,900ms), var(--duration,900ms);// 0s 1 linear both;
	animation-direction: normal, normal;

	transition:transform var(--fade-speed) $easeOutBack,
				background-color var(--fade-speed) linear, 
				color var(--fade-speed) linear;

	
	&:hover, &:focus{
		
		--col-bottom:#{rgba($col-white, 0.25)};
		--col-top:#{rgba($col-dark, 0.25)};
		// border:var(--button-border-size) solid rgba($col-white, 0.9);
		// border-top-color: rgba($col-brown, 0.6 );
		border-left-color: rgba($col-white, 0.4);
		border-right-color: rgba($col-white, 0.8);
		border-bottom-color: rgba($col-white, 0.7);
	
		background-color:var(--col-hover);
		text-shadow: rgba($col-dark,0.4) 0 0px 1px,
					rgba($col-dark,0.3) 0 0.5px 1px,
					rgba($col-dark,0.2) 0 1px 1px,
					rgba($col-dark,0.1) 0 1.5px 1px;

		&:before{
			opacity:1;
			z-index:1;
		}
	}
	
	&:active{
		background-color: $col-orange;
		--col-top:#{$col-tan};
		--col-bottom:#{$col-grey};
	}

	&:focus{
		// outline:3px solid $col-orange;
		// outline-offset:-3px;
		z-index:808;	

		// pop to front
		select{
			z-index:909;
		}
	}
}

// Loading progress	
label#progress-bar{
	// position: absolute;
	// // left:var(--pad);
	// // right:var(--pad);
	// width:calc(80% -2 * var(--pad) ) ;
	// bottom:10%;
	//margin:auto auto 4rem auto;
	// set the label colour...
	color: $col-brown;
	outline: none;
	padding:0;
	border:0;
	font-size:66%;
	display: flex;
	flex-direction: column;
	align-items: center;
    justify-content: flex-end;

	&:hover{
		background-color: transparent;
	}

	#progress{
		//@extend:60%;
		// // border-radius: 99%;
		// max-width:80%;
		margin:auto;
		color:inherit;
		order:-1;
	}
}

// BUTTON ABSTRACT
button,
input[type=list],
// input[type=radio],
label[for=button-solo],
label[for=button-duet],
#shared-controls > *{

	--icon-size:32px;
	--fade-speed:var(--ease-q);

	--pos: left var(--pad) center;
	--button-border-size:2px;
	--button-curve:clamp(2px, 1vmin, 6px);
	
	// actual colour
	--col-bg:#{$col-yellow};

	// gradient background
	--col-top:#{rgba($col-white, 0.15)};
	--col-bottom:#{rgba($col-dark, 0.15)};
	
	--duration: var(--ease-q);
	--delay-offset: var(--ease-q);
				
	// override just in case
	text-rendering: optimizeLegibility;
	
	//border-style: solid;// outset groove;
	cursor: pointer;

	// from ios guidelines
	min-width:44px;
	min-height:44px;
	max-width:var(--max-width-override, var(--max-width,auto) );

	position: relative;
	box-sizing: border-box;
	margin:0;
	padding:var(--pad);

	// force onto one line...
	white-space: pre;
	user-select: none;
	appearance: none;
	-webkit-appearance: none;

	line-height: 1;
	
	// -0.5385rem + 7.6923vw
	// clamp(minimum, preferred, maximum)
	font-size:clamp(8px, -0.5385rem + 2.2vmax, 14px);
	font-weight: 900;
		
	// max-width:calc(100% - 2 * var(--pad));
	z-index:1;

	// from horizontal to vertical stack using grid
	// --breakpoint:300px;
  	// --gap: 20px;
	// display: grid;
  	// gap: var(--gap);  
	// grid-gap: var(--gap);
	// --v:min( (var(--breakpoint) - 100%) * 999, 100%);
	// grid-template-columns:repeat(
    //   auto-fit,
    //   minmax(
    //     var(--v),
    //     1fr
    //   )
    // );

	display: flex;
	//flex-wrap: auto;
	flex-direction: var( --dir-override, var(--direction, row));
	// ensure a gap between row items...

	// flex-wrap: wrap;	
	align-items: center;
	justify-content: space-between;

		
	// animations
	//animation-name:unset;	// start unset
	animation-fill-mode: both, both;
	animation-duration: var(--duration,900ms), var(--duration,900ms);// 0s 1 linear both;
	animation-direction: normal, normal;

	transition:transform var(--fade-speed) $easeOutBack,
				background-color var(--fade-speed) linear, 
				color var(--fade-speed) linear;

	
	// Inherit the icon and recolour
	&:before{
		// allow to pop in front
		position: relative;
		z-index:1;

		display: block;
		// prevent squishing
		flex: none;

		// try and set to the size of the background icon
		min-width:var(--icon-size);
		min-height:var(--icon-size);

		content:'';
		pointer-events: none;
		
		// background:inherit;
		// background-image: none;
		background:transparent var(--bg) no-repeat;
		// background-color:transparent;
		background-position:top center;
		background-size:auto var(--icon-size);

		// flip the black to white and desaturate a little to make
		// it look great - remember this is the hover state
		// https://codepen.io/sosuke/pen/Pjoqqp
		filter: invert(90%) sepia(10%) saturate(395%) hue-rotate(324deg) brightness(105%) contrast(81%);
		
		opacity:0;
		// z-index: -1;
		transition:opacity var(--fade-speed) linear;
	}

	&.hide{
		display: none;
	}
}

// BUTTON STYLE
button,
input[type=list],
input[type=radio]:checked,
// label[for=button-solo],
// label[for=button-duet],
label[for=button-start],
#shared-controls > *{

	@extend %button-style;


	&.hide{
		display: none;
	}
}



// BUTTON STYLE


// this adds some right pad to icons on the control bar
#shared-controls > *{

	&:not(.hide-text):before{
		margin-right:calc(var(--pad) / 2 );
	}
}

// show even the hidden text!
@media screen and (max-width:1960px){
	
	:root{
		
	}

	button,
	#shared-controls > * {
		.hide-text{
			// %image-replacement
			text-indent: -9999px;
			overflow:hidden;
			color:transparent;
			text-shadow:none;
			white-space: pre;
			font-size: 0;
			background-position: center center;
			justify-content: center;
		}	
	}
}

// stack
@media screen and (max-width:1240px){
	
	:root{
		--footer-gap:calc(74px);
	}

	button,
	#shared-controls > *{
		--icon-size:26px;
		--pos:top var(--pad) center;
		--direction: column;
		
		// remove margin
		&:not(.hide-text):before{
			margin-right:0;
		}
	}
}

// smallest always hides text so overrides here...
@media screen and (max-width:586px){

	:root{
		--footer-gap:calc(67px);
	}

	// make sure we only specify the none person-controls
	//button,
	#shared-controls > *{
		--icon-size:28px;
		--pos: center center;
		--direction: row;
		font-size: 0;
		// as there is now no longer any text we 
		// need to centralise the icon
		text-indent: -9999px;
		overflow:hidden;
		color:transparent;
		justify-content: center;
	}
}


// smallest always hides text so overrides here...
@media screen and (max-width:388px){

	:root{
		--footer-gap:calc(67px);
	}

	// smallest icon size to squeeze fit
	button,
	#shared-controls > *{
		--icon-size:20px;
		// here we set a max width
		// NB. you can override this with --max-width-override
		--max-width:33px;
		min-width:22px;
	}
}





// Overlay buttons
#shared-controls{

	// backgrounds
	--col-regular:#{$col-dark};
	--col-hover:#{$col-orange};
	--col-select:#{$col-yellow};
	
	bottom:0;
	// position:fixed;
	left:0;
	//right:0;
	min-width:100vw;

	visibility:hidden;
	align-items: stretch;
	justify-content: stretch;
	pointer-events: auto;
	
	background-image: 	url(./assets/textures/bedge-grunge.png),
						linear-gradient( $col-cream, $col-grey );
	
	// background-image: url(./assets/textures/45-degree-fabric-light.png),
	// 					linear-gradient( fade($col-cream, 0.5), fade($col-grey, 0.5));
	
	//overflow: hidden;
	// overflow: scroll;
	//overflow-y:hidden;

	// need to bring it into z-range
	z-index:303;
	
	// @media screen and (min-width:640px){
		
	// }

	// we swap this to absolute when we want to window it
	position: fixed;

	// sometimes the label takes focus making interaction difficult
	label{
		// pointer-events: none;
		position: relative;

		// stertch them out 
		select, input{
			pointer-events: auto;
			cursor:pointer;
			border:0;
			// width: var(--icon-size);
			position:absolute;
			top:0;
			bottom:0;
			min-width:100%;
			right:0;
			// left:0;
			// z-index:1;
			order:-1;
			appearance:none;
			opacity:0;
			overflow: hidden;
		}


		// Indicator
		&:after{
			background-color: var(--col-select, $col-orange);
			opacity:0.5;
			content:'';
			display: block;
			position: absolute;
			left:0;
			right:0;
			bottom:0;
			height:8px;
			transform-origin: center bottom;
			transform:translateY(100%);
			transition:opacity var(--ease-m) linear,
						transform var(--ease-s) $easeOutBack;
		}

		&.checked{
			background-color: var(--col-select);
		}
	
		// toggled state eachone can have unique color
		&.checked:before{
			opacity: 1;
		}
		&.checked:after{
			opacity:1;
			transform:translateY(20%);
		}
	}

	legend{
		position: absolute;
		bottom:100%;
		background-color:transparent;
		color:transparent;
		user-select: none;
		pointer-events: none;
		border:0;
		visibility: hidden;

		&:focus{
			color:$col-white;
			visibility: visible;
		}
	}

	label, button{
		// labels can collapse without text to expand them
		text-transform: uppercase;
	
		border-radius:5px 5px 0 0;
		//border-left:0;
		// border-right-color:$col-white;
		// border-left:$col-cream;
		// border-bottom:var(--button-border-size) solid $col-blue;
		
		font-weight:900;
		// color:var(--col-regular);
		// background-color:rgba($col-yellow,0.5);

		&:active{
			--col-top:$col-select;
			--col-bottom:$col-select;
			transform: scale(0.96);
			//background-color: var(--col-select);
		}

		&:focus{
			outline:2px solid $col-orange;
			outline-offset: -3px;
		}

		&.checked,
		&.checked:hover,
		&:hover, &:focus{
			color:$col-white;
			background-color: var(--col-regular);
		}

		&.checked{
			--col-top:$col-dark;
			--col-bottom:$col-dark;
			//background-color: var(--col-regular);
			// background-color: $col-dark;
		}
		
		&:empty{ 
			display:none;
		}
	}

	input[type=select],
	select{
		padding:var(--pad) ;
		color:transparent;
		background-color: transparent;
		text-align: center;

		optgroup{
			appearance:none;
			background-color: $col-yellow;
			color: $col-dark;
			font-weight:900;
			text-transform: uppercase;
			padding:var(--pad);
			margin:auto;
		}

		option{
			padding:var(--pad);
			color: $col-dark;
			background-color: $col-cream;
			text-transform:initial;

			&:hover, &:focus{
				color:$col-cream;
				background-color: $col-dark;
			}

		}
	}
	
	button{	
		// padding-right:20px;
	}

	// > * + *{
	// 	border-left:1px groove $col-white;
	// }
	
	label:not(:last-child),
	button:not(:last-child){
		
	}

	// Labels
	label[for="button-metronome"]{
		--col-select:#{$col-green};
		--col-hover:#{$col-blue};
		--bg:url(./assets/icons/timer_off-24px.svg);
		&.checked{
			--bg:url(./assets/icons/timer-24px.svg);
		}
	}

	label[for="button-quantise"]{
		--col-select:#{$col-yellow};
		--col-hover:#{$col-blue};
		--bg:url(./assets/icons/grid_off-24px.svg);
		&.checked{
			--bg:url(./assets/icons/grid_on-24px.svg);
		}
	}


	label[for="button-fullscreen"]{
		// far right
		order:99;
		--col-select:transparent;
		//--col-hover:transparent;

		@extend %image-replacement;
		--bg:url(./assets/icons/fullscreen-24px.svg);
		
		// toggled state
		&.checked{
			--bg:url(./assets/icons/fullscreen_exit-24px.svg);
		}
		
		// override if user has esc'ed
		@media all and (display-mode: fullscreen) {
			--bg:url(./assets/icons/fullscreen_exit-24px.svg) !important;
		}
	}
	

	label[for="button-overlay"]{
		// --col-hover:#{$col-dark};
		--col-select:#{$col-blue};
		// @extend %image-replacement;
		--bg:url(./assets/icons/videocam_off-24px.svg);
		&.checked{
			--bg:url(./assets/icons/videocam-24px.svg);
		}
	}

	label[for="button-spectrogram"]{
		// --col-hover:$col-dark;
		--col-hover:#{$col-green};
		--col-select:#{$col-orange};
		--bg:url(./assets/icons/blur_off-24px.svg);
		&.checked{
			--bg:url(./assets/icons/blur_on-24px.svg);
		}
	}
	// label[for="button-spectrogram"]{
	// 	// --col-hover:$col-dark;
	// 	--col-hover:#{$col-green};
	// 	--col-select:#{$col-green};
	// 	background-image:url(./assets/icons/piano-24px.svg);
	// 	&.checked{
	// 		background-image:url(./assets/icons/piano_off-24px.svg);
	// 	}
	// }

	label[for="button-clear"]{
		// --col-hover:$col-dark;
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
		// --bg:url(./assets/icons/image_not_supported-24px.svg);
		--bg:url(./assets/icons/visibility-24px.svg);

		&.checked{
			// background-image:url(./assets/icons/music_off-24px.svg);
			// --bg:url(./assets/icons/image-24px.svg);
			--bg:url(./assets/icons/visibility_off-24px.svg);
			// background-image:url(./assets/icons/music_note-24px-24px.svg);
		}
	}

	label[for="button-transparent"]{
		// only display between certain sizes?
		display: none;
		// --col-hover:$col-dark;
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
		--bg:url(./assets/icons/web_asset-24px.svg);
		&.checked{
			// background-image:url(./assets/icons/music_off-24px.svg);
			--bg:url(./assets/icons/web_asset_off-24px.svg);
			// background-image:url(./assets/icons/music_note-24px-24px.svg);
		}
	}

	// selector for the tempo
	label[for="select-tempo"]{
		--bg:url(./assets/icons/speed-24px.svg);
		--col-hover:#{$col-blue};
		--col-select:#{$col-yellow};
	}

	label[for="input-tempo"]{
		--bg:url(./assets/icons/speed-24px.svg);
		--col-select:#{$col-yellow};
	}
}

// actual button
input{
	cursor:pointer;
	appearance: none;
	position: relative;
	box-sizing: border-box;
	margin:0;
}

input[type=radio]{
	//background-color: $col-yellow;
	position: absolute;
	--over:0%;
	--y:0;
	top:calc( -1 * var(--over));
	left:calc( -1 * var(--over));
	// right:calc( -1 * var(--over));
	bottom:calc( -1 * var(--over));
	width:calc( 2 * var(--over) + 100% );
	display:block;
	transition:transform 1300ms $easeInOutBack;
	transform:translateY(var(--y,-10%)) scale(0.8);
	
	&:checked{
		transform:translateY(0) scale(1);
	}
}

// label[for="button-*"]{
// 	outline:10px solid yellow;
// }

// replace regular with a classic radio style toggle button
input[type=checkbox]{

	display: inline-block;
	background-color:$col-dark;
	background:linear-gradient( $col-gray, $col-dark );
	border:var(--button-border-size) solid rgba($col-brown, 0.9);
	border-top-color: rgba($col-white, 0.6 );
	border-left-color: rgba($col-white, 0.3);
	border-right-color: rgba($col-white, 0.7);
	// filthy hack
	margin-top: -1rem;
    margin-bottom: -0.5rem;
	margin-left:1rem;
	//border-radius:999px;
	
	// from ios guidelines
	// min-width:44px;
	// min-height:44px;
	// max-width:var(--max-width-override, var(--max-width,auto) );

	padding:var(--pad);

	&:checked{
		background-color:$col-red;
		background:linear-gradient( $col-gray, $col-dark ), linear-gradient( $col-dark, $col-gray );
		background-size:80%, 100%;
	}

	&:focus{
		border-color:$col-orange;
	}
}
input[type=submit]{
	background:transparent;
	font:inherit;
	color:inherit;
	text-transform:inherit;
	border:0;
}

// button that covers people
button.person{
	
	padding:0;
	cursor:pointer;
	position: absolute;	
	z-index:202;
	overflow: hidden;
	border:2px solid $col-blue;
	outline:2px solid $col-cream;
	box-sizing: border-box;
	border-radius: 3px;
	// appearance: none;
	//border:2px solid white;

	text-shadow:none;
	color:transparent;
	opacity: 0;
	transition: var(--ease-s) ease-in opacity;
	//, left 9ms linear, top 9ms linear;

	&:hover, &:focus{
		background-color: transparent;
		outline: none;
	}

	&:active{
		opacity: 1;
	}

	&:hover{
		opacity: 0.9;
		background-color: transparent;
	}

	svg{
		width: 100%;
		//height:auto;
		fill:orange;
		stroke-width: 3px;
		stroke:purple;
		//transform: scaleX(-1);
		pointer-events: none;
		circle{
			stroke:black;
			fill:white;
		}
	}
}

	

// move into position
button#person-a{
	left:calc( 100% * var(--person-a-x,0) / var(--width,640) );
	top:calc( 100% * var(--person-a-y,0) / var(--height,640) );
	width:calc( 100% * var(--person-a-w,0) / var(--width,640) );
	height:calc( 100% * var(--person-a-h,0) / var(--height,640) );
}

button#person-b{
	outline-color:$col-green;
	left:calc( 100% * var(--person-b-x,0) / var(--width,640) );
	top:calc( 100% * var(--person-b-y,0) / var(--height,640) );
	width:calc( 100% * var(--person-b-w,0) / var(--width,640) );
	height:calc( 100% * var(--person-b-h,0) / var(--height,640) );
}

// generic button style
button#button-record,
// button#button-video,
button#button-midi,
button.install-app,
button.update-available{
	// border-radius: var(--curve) var(--curve) var(--curve) 0;
	transition:background-color var(--ease-q) linear, color 40ms linear;
	overflow: hidden;
}

// override style
button.person,
button#button-video{
	// forces the cursor to work inside
	pointer-events: auto;
	user-select: none;
	// hide any copy
	color:transparent;
	text-shadow:none;
	background-color: transparent;
	
	&:hover, &:active, &:focus{
		color:transparent;
		background-color: transparent;
		text-shadow:none;
		//border:5px solid $col-yellow;
	}
}

button#button-video{
	display: block;
	position: absolute;//fixed;
	bottom:0;
	left:0;
	// right:0;
	width: 100%;
	height:100%;
	padding:0;
	border:0;
	
	// just a little margin of error
	// bottom:0rem;
	// try and push to the back
	z-index:-1;
	
	// prevent finger cursor
	cursor: default;

	max-width:none;
	background: none;

	&::before, &::after{
		display:none;
	}
}

// SHARED CONTROL PANEL
button#button-midi{

	//background-position: left 1px center;
	// --icon-size:36px;
	//background-color: $col-cream;
	--bg:url(assets/logos/midi2.0.svg);
	&:before{
		// also make sure we have set the width for midi as is not square
		//min-width: calc(var(--icon-size) * 1.2);
	}
}

button#button-record{
	//color:$col-red;
	&.recording{

	}
}

button#button-photograph{
	--col-hover:#{$col-blue};
	--bg:url(./assets/icons/add_a_photo-24px.svg);
}
label[for="button-trio"]{
	display:none;
}

// These need overrides for size
label[for="button-trio"],
button#button-trio{
	// background-color:vae(--col-hover);
	// background-color: $col-yellow;
	--col-hover:#{$col-green};
	--bg:url(./assets/icons/person_add-24px.svg);
	//display: none;
}
label[for="button-solo"],
button#button-solo{
	--col-bg: #{$col-yellow};
	--col-hover:#{$col-orange};
	--bg:url(./assets/icons/person-24px.svg);
	--y:100%;
}

label[for="button-duet"],
button#button-duet{
	--col-bg: #{$col-blue};
	--col-hover:#{$col-orange};
	--bg:url(./assets/icons/people-24px.svg);
	--y:-100%;
}

label[for="button-start"]{
	margin-top:-1.5rem;
	padding:var(--pad) calc(2 * var(--pad)) var(--pad) calc(5 * var(--pad));
	--col-bg: #{$col-orange};
	--col-hover:#{$col-red};
	--button-border-size:4px;
	--bg:url(./assets/icons/music_note-24px.svg);
	--pos-override:left;
	z-index:909;
	border-radius:0;
}

button#button-help{
	// background-color:vae(--col-hover);
	// background-color: $col-yellow;
	--col-hover:#{$col-blue};
	--bg:url(./assets/icons/people-24px.svg);
	//display: none;
}
button#button-metronome{
	
	// --bg:url(./assets/icons/person_add-24px.svg);
}

button#share{
	--bg:url(./assets/icons/share-24px.svg);
	margin-left: auto;
	z-index:2;
}

// an update is available to the app!
button.install-app,
button.update-available{
	order:-1;
	--bg:url(./assets/icons/get_app-24px.svg);
	background-color: $col-orange;
}

button.install-app{
	//--logo:url();
	--overlap:0px;
	--delay:0s;

	// after a brief while hide this?
	// animation: 
	// 			Hide-Install 0.4s $easeOutBack 0s 1 reverse both,
	// 			Hide-Install 0.4s $easeOutBack var(--delay) 1 normal both;
	

	// &:hover, &:focus{
	// 	--overlap:40px;
	// 	animation: Hide-Install 0.4s $easeInBack var(--delay) 1 reverse both;
	// }
	&.later{
		animation: Hide-Install var(--ease-s) $easeOutBack var(--delay) 1 normal both;
	}
}

button.update-available{
	
}


label[for="select-camera"],
#select-camera{
	--col-hover:#{$col-green};
}

// generally hide the camera select button unless 
// there are multiple cameras
#camera{
	display: none;
}

.multiple-cameras #camera{

	display: flex;
    // flex-direction: column-reverse;
	//transition:width 40ms ease-out;
	// display: grid;

	// background-color:$col-blue;
	// border-radius: 4px;
	// &:focus-within,
	// background-image:url(./assets/icons/switch_video-24px.svg);
	--bg:url(./assets/icons/switch_video-24px.svg);
	// overflow:hiddfooten;

	&:before{
		pointer-events: none;
	}

	&:hover,&:focus,&:target,
	&:focus-visible{
		// height:auto;
		outline:none;
		//width:calc(100% - 2 * var(--pad));
	}
	// label,select{
	// 	grid-area:1/1/1/1;
	// }
	// label{
	// 	// 
	// 	pointer-events: none;
	// 	white-space: pre;
	// 	outline:none;
	// 	opacity:0;
	// 	transition:opacity 40ms ease-out;
	// 	position: relative;
	// }
	// instead of the :before :)
	
}


// Player selection screen
#player-selector{
	--top-gap:clamp(40px, 7vh, 80px);//clamp(1rem, 7vh, 5rem);
	// prevents a button becoming an icon
	--max-width-override:auto;
	--border-radius:8px;
	--border-size:4px;
	
	text-align:center;
	box-sizing: border-box;
	visibility: hidden;
	user-select: none;

	border-radius:var(--border-radius);
	border:var(--border-size) solid $col-gray;

	//margin:auto;// solid transparent;
	margin-top:var(--top-gap);
	//margin-bottom:var(--top-gap);
	// margin:clamp(calc(var(--top-gap)),3vw,auto) auto;// solid transparent;
	padding:calc(var(--pad)*2) calc(var(--pad));// var(--pad);
	// margin-top:calc(var(--top-gap));// solid transparent;
	// margin-bottom:calc(var(--top-gap));// solid transparent;
	display:flex;
	flex-direction: column;
	// place-content: center;
	align-items:stretch;
	justify-content: space-around;
	// grid-gap:4px;
	//min-height:calc( 100% - var(--top-gap) * 2);
	max-width:42ch;
	max-height:100%;
	
	label{
		--icon-size: 44px;
		--button-border-size:var(--border-size);

		//border-radius:var(--border-radius);

		// this softens the border
		//box-shadow: inset 0px 0px calc(var(--border-size)) $col-white;

		input{
			
		}

		// cool effect
		&:after{
			content: "";
			z-index:-1;
			opacity:0.6;
			background:var( --col-hover, rgba($col-white, 0.4) );
			position: absolute;
			top:0;
			left: 0;
			bottom:0;
			right:0;
			transform: scaleY(0);
			transition: transform 50ms ease-out;
		}
		
		&:hover, &:focus{
			
			&:after{
				transform: scaleY(1);
			}
		}
	}

	> label + label { 
		margin-top:var(--pad);
	}

	button, label{
		--dir-override:column;
		--pos-override: top var(--pad) center;
		//--pos-override: top center;
		font-size: clamp(15px, -0.5385rem + 2.2vmax, 14px);
		// border-radius:24px;

		text-indent: 0;
		overflow: visible;
		// color: $col-dark;
		// background-color: $col-yellow;
		justify-content: center;
		text-transform: uppercase;
		max-height: unset;

		// prevent growing the button 
		// as this mis-aligns the icons
		// flex-grow:0;
		// flex-shrink:0;
		flex:none;
	}

	label[for="toggle-advanced-mode"]{
		//color:$col-white;
		padding:var(--pad);
		margin-top:var(--pad);
		margin-bottom:var(--pad);
		border-top:1px solid $col-white;
		background:transparent;
		// align-self: center;
		vertical-align: middle;
	}

	label{
		--col-hover:#{$col-green};
		background:none;

		&:before,
		&:hover:before,
		&:focus:before{
			opacity:1;
		}
		input{
			//margin-left:var(--pad);
			z-index:-1;
		}
	}

	
	// animate out again?
	&.completed{

		button, label{
			--xa:50%;
			//animation-name: Shift, Fade;
			animation-direction: normal, reverse;
			//animation:Fade 900ms linear reverse both 1 0s, Shift 900ms ease-out 0s 1 both;
		}
	}
}
