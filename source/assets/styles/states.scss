// There are no faces looking at the screen
// NB. wait 2 seconds before showing it!
.no-faces{ 
	#app-frame{
		// opacity:0.9;

		&::after{
			--alpha:0.8;
			--opacity:0.4;
			--rotation:21deg;
			display: block;
			// how long to wait before showing it...
			animation: 
				Fade var(--ease-s) 1s 1 both,
				Sway 8s calc(1s + var(--ease-s) ) infinite ease-in-out alternate-reverse,
				Pulse 4s calc(2s + var(--ease-s)  ) infinite linear alternate-reverse;
		}
	}
}

// for loading see loading, .player-selection
.loaded{
	#intro > *:not(nav){
		> * {
			visibility: hidden;
		}
	}
	
	#affiliates,
	#progress{
		display: none;
	}
}


// only enable when loaded
#button-share{
	display: none;
}

.sharing-enabled{
	#button-share{
		display: inline-grid;
	}
}




// User has dragged something over the window
.dragging{
	cursor:grabbing;
	header{
		pointer-events: none;
		display: none;
	}
	#midi-file{
		--color:var(--shade-blue, silver);
		--bg:var(--shade-yellow);

		z-index:999;
		//pointer-events: none;
		cursor:grabbing;
		background-size: 100px 50px;
		background-color:var(--color);
		background-image:
			radial-gradient(circle at 100% 150%, var(--color) 24%, var(--bg) 24%, var(--bg) 28%, var(--color) 28%, var(--color) 36%, var(--bg) 36%, var(--bg) 40%, transparent 40%, transparent),
			radial-gradient(circle at 0    150%, var(--color) 24%, var(--bg) 24%, var(--bg) 28%, var(--color) 28%, var(--color) 36%, var(--bg) 36%, var(--bg) 40%, transparent 40%, transparent),
			radial-gradient(circle at 50%  100%, var(--bg) 10%, var(--color) 10%, var(--color) 23%, var(--bg) 23%, var(--bg) 30%, var(--color) 30%, var(--color) 43%, var(--bg) 43%, var(--bg) 50%, var(--color) 50%, var(--color) 63%, var(--bg) 63%, var(--bg) 71%, transparent 71%, transparent),
			radial-gradient(circle at 100% 50%, var(--bg) 5%, var(--color) 5%, var(--color) 15%, var(--bg) 15%, var(--bg) 20%, var(--color) 20%, var(--color) 29%, var(--bg) 29%, var(--bg) 34%, var(--color) 34%, var(--color) 44%, var(--bg) 44%, var(--bg) 49%, transparent 49%, transparent),
			radial-gradient(circle at 0    50%, var(--bg) 5%, var(--color) 5%, var(--color) 15%, var(--bg) 15%, var(--bg) 20%, var(--color) 20%, var(--color) 29%, var(--bg) 29%, var(--bg) 34%, var(--color) 34%, var(--color) 44%, var(--bg) 44%, var(--bg) 49%, transparent 49%, transparent);
		
		&:before{
			content: '';
			position: absolute;
			top:0;
			left:0;
			right:0;
			bottom:0;
			display: block;
			z-index: 9999999;
			pointer-events: none;
		}

		> *{
			z-index:9999999999;
			opacity:1;
		}
	}
}

// ------- APPLICATION -------------------

.first-run{
	#version{
		opacity:0.5;
	}
}

.updates-available{
	#version{
		text-decoration: underline;
		text-decoration-style: wavy;
		color:var(--shade-blue);
		animation: Throb 1s both 0s infinite;
		border:1px var(--shade-gray) solid dashed;
	}
}

.installable{
	#version{
		border:1px var(--shade-gray) solid dashed;
		
	}
}

.installed{
	#version{
		// invert
		background-color: var(--shade-brown);
		color:var(--shade-white);
	}
}



// ---------------- FLAGS ---------------

// Show secret buttons#??
.flag-showSettings {
	#toast{
		--footer-gap:calc( 2 * 4rem + var(--pad) );
	}
}

// show settings panel
.flag-showSettings #settings,
#settings:focus,
#settings:focus-visible,
#settings:focus-within{
	--y:100%;
	display: flex;
	visibility: visible;
	transform: translateY( 0 );
	// animation:TranslateY var(--ease-q, 40ms) ease-out 0s both;
}

#feedback{
	display: none;
}

.flag-text #feedback{
	display: block;
}

// Options set by clicking buttons set these flags as classes
.flag-clear {
	// FIXME:
	// #shared-controls label[for="button-sync-video"]{
	// 	display: flex;
	// }
	// #shared-controls label[for="button-overlay"]{
	// 	display: none;
	// }
}

// We want to copy the video frame so we do not 
// need to also show it
.flag-clear,
.flag-synch{
	#webcam{
		display: none;
	}
}

// this hides the video when in synch mode
// main:not(.flag-clear.flag-transparent){
// 	// hide videp as drawing to canvas direct
// 	#app-frame video{
// 		display: none;
// 	}
// }

// this hides the video when in synch mode
// main:not(.flag-clear.flag-transparent){
// 	// hide videp as drawing to canvas direct
// 	#app-frame video{
// 		display: none;
// 	}
// }


.flag-eyes label[for="select-eyes"]{
	
}

// if we are showing the flag-overlay we are showing all 
// XR overlays
.flag-overlays{
	
}

// If we are not showing overlays, what use is there in the
// eyes, mask buttons?
main:not(.flag-overlays){
	label[for="button-meshes"],
	label[for="button-eyes"],
	label[for="select-eyes"],
	label[for="select-palette"],
	label[for="button-subtitles"]{
		visibility: hidden;
	}
}









// User active / inactive



// added when the user engages with the app
.user-active{
	#shared-controls {
		visibility: visible;
	}
	// .controls > *{
	// 	animation-direction: reverse, reverse;
	// }
}

// added when user gives up attention
.user-inactive{

	// , :focus
	.instrument-panel:not(:hover, :focus-within, :focus-visible),
	.controls:not(:hover, :focus-within,:focus-visible) {
		visibility: hidden;
		opacity:0;
	}
	
	// .controls > *{
	// 	animation-direction: normal, normal;
	// }
	#toast{
		visibility: hidden;
	}
}

// when tab is muted
.tab-hidden{

}

.loaded{

	#help .app-help{
		display: block;
	}

	#intro{
		display:flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: flex-start;
		bottom:auto;
		//z-index: -1;
		
		.logo{
			margin:0;
			min-width:60px;
			// max-width:82px;
			position: absolute;
			left:0;
			right:0;
			top:0;
			align-self:flex-start;
			font-size: 0;
			// for anly inline
			fill:black;//$col-cream;
			

			svg{
				width: 100vw;
				height: 100vh;
			}
			h1{
				visibility: visible;
				justify-self: flex-end;
				margin:0;
				align-self:center;
				padding-left: 0;
				opacity:0.2;
				transition:opacity var(--ease-m) linear;
				writing-mode: vertical-rl;
				// transform: rotate(90deg) translateX(var(--pad));
				transform-origin: top left;
			}
		}
		

		h2{
			margin-top:0;
		//	font-size:50%;
			width:100%;
			display:block;
			opacity:0;
		}	
	}

	// Epilepsy warning
	.warning,
	h2{
		visibility: hidden;
	}
	
	#shared-controls{
		visibility: visible;
	}

	// hide other bits
	#onboard,
	#player-selector,
	#load-progress{
		display: none;
	}

	// wrapper
	#app-frame{

		// flood width on all si
		min-width:100%;
		max-width:100%;
		// max-height:100%;
		max-height: 100vh;
		max-height: 100dvh;

		min-height:100vh;
		min-height:100dvh;
	
		display: grid;
		// display: block;
		justify-content: center;
		align-items: center;
			
		// rounded corners
		border-radius:var(--curve);
		overflow: hidden;
		overflow: clip;

		background-color: black;
		// nice blue long soft shadow
		// box-shadow:
		// 	var(--wig) -1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
		// 	var(--wig) -2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
		// 	var(--wig) -4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
		// 	var(--wig) -8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
		// 	var(--wig) -13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
		// 	var(--wig) -23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
		// 	var(--wig) -50px 51px hsla(var(--hue), 90%, 10%, 0.15),
			
		// 	var(--wig) 1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
		// 	var(--wig) 2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
		// 	var(--wig) 4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
		// 	var(--wig) 8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
		// 	var(--wig) 13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
		// 	var(--wig) 23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
		// 	var(--wig) 50px 51px hsla(var(--hue), 90%, 10%, 0.15);
		// $col-yellow
		
		video, canvas{
			max-width:100%;
			height:100vh;
			height:100dvh;
			width: auto;
			margin:auto;
			// put them all in the same place in the grid
			object-fit: contain;
			//margin:auto;
			visibility: hidden;	
			display: block;
			grid-area:1/-1;
		}


		.canvas-full-size{
			z-index: 1;
			// position: relative;

			// video actually always maintains apect ratio which we can abuse...	
			// @media (orientation: landscape) {
			// 	height: 100%;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }

			// width:100%;//clamp(100%, 100vw, 100% );
			
			// stretch it to flood the width
			// width:100vw;
			// height: auto;
			// width:100%;

			// // prevent overflow
			// max-width: 100vw;
			// max-height: 100vh;
			// max-height: 100dvh;

			// // centralise if smaller than the screen
			// margin:auto;
			// display: block;

			// max-height: 100vh;
			// max-width: 100vw;
			// height:calc(var(--height) / var(--width) * 100vw );

			
			// @media (orientation: landscape) {
			// 	height: 100vh;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }
			// @media (orientation: portrait) {
			// 	width: 100vw;
			// 	height:calc(var(--height) / var(--width) * 100vw );
			// }
			
			// scale to fit screen?
			// landscape
			// @media (orientation: landscape) {
			// 	height:100vh;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }
			// // portrait
			// @media (orientation: portrait) {
			// 	width:100vw;
			// 	height:calc(var(--height) / var(--width) * 100vw );
			// }
		}

		// behind canvas (canvas can be transparent at times)
		#webcam{	
			// bottom of the stack
			z-index: 0;
			// position:absolute;
			// top:0;
			// left:0;
			
			// width:100%;
			// height:100%;

			// flip it around for mirror mode!
			transform: scaleX(-1);
		}

		#interface3D{
			// above other canvas
			z-index: 3;
		}

		#control-panel{
			
			// @media (orientation: portrait) {
			// 	// 	height: 100%;
			// 	// 	width:calc(var(--width) / var(--height)  * 100vh );
			// 	width: 100%;
			// 	height:calc(var(--height) / var(--width) * 100vw );
			// }
		}
	}

	#app{
		#title{
			visibility: hidden;
			position: absolute;
			right:0;
		}
	}
	
	// #app-frame video,
	#app-frame canvas{
		display: block;
		visibility: visible;
	}

	#foot{
		z-index:-1;
		visibility: hidden;
	}
}


// If the user has de-selected 'advanced' mode, we hide some buttons that
// will just confuse them...
.beginner{

	// hide these...
	// #fund,
	#button-reset,
	label[for="select-impulse"],
	label[for="button-install"],
	label[for="button-quantise"],
	label[for="button-quantise"],
	label[for="button-spectrogram"]{
		display: none;
	}
}



// FAILURE ===================================

// Could not load due to privacy restrictoin or user uninteraction
// or no camera or whatever!
.failure{
	header{
		filter:blur(9px);
	}
	.warning,
	#title,
	#load-progress,
	#onboard,
	#affiliates,
	#control-panel{
		display: none;
	}
	#feedback{

		--x:-50%;
		--y:-45%;
		animation: 	Fade var(--ease-s) linear 0s 1 normal both,
					Translate var(--ease-s) linear 0s 1 normal both;
		// left:var(--pad);
		// right:var(--pad);
		top:50%;
		left:50%;
		transform: translate(-50%, -50%);
		
		max-width: 36ex;

		// bottom:calc(50vh - 0.5rem);
		text-align: center;
		border-radius: 14px;

		background-color:var(--shade-brand,var(--shade-red)); 
		background-image:linear-gradient(rgba(0,0,0,0.1),rgba(0,0,0,0.2));

		color:var(--shade-dark);
		border:10px solid var(--shade-white);
		z-index:909;

		filter:none;
		
		font-size:140%;
		font-weight: 900;

		strong{
			animation-name:TextError;
		}

		&::before{
			margin:var(--pad);
			content:'';
			display: block;
			height:3rem;
			background-image: url(/source/assets/icons/pan_tool_black_24dp.svg);
			background-repeat: no-repeat;
			background-size: contain;
			background-position: center;
			text-shadow:inherit;
		}
		&::after{
			display:none;
		}
	}
}


html.debug{
	#version,
	#version span{
		opacity: 1;
	}
}