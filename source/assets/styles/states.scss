// There are no faces looking at the screen
// NB. wait 2 seconds before showing it!
.no-faces{ 
	#app-frame{
		// opacity:0.9;
		&::after{
			display: block;
			// how long to wait before showing it...
			animation: Fade var(--ease-s) 2s 1 both;
		}
	}
}

// for loading see loading

.loaded{
	#intro{
		> * {
			visibility: hidden;
		}
		nav{
			visibility: visible;
		}
	}
	#progress{
		display: none;
	}
	// #toast{
	// 	po
	// }
}


// User has dragged something over the window
.dragging{
	cursor:grabbing;
	header{
		pointer-events: none;
		display: none;
	}
	#midi-file{
		--color:var(--shade-blue, silver);
		--bg:var(--shade-yellow);

		z-index:999;
		//pointer-events: none;
		cursor:grabbing;
		background-size: 100px 50px;
		background-color:var(--color);
		background-image:
			radial-gradient(circle at 100% 150%, var(--color) 24%, var(--bg) 24%, var(--bg) 28%, var(--color) 28%, var(--color) 36%, var(--bg) 36%, var(--bg) 40%, transparent 40%, transparent),
			radial-gradient(circle at 0    150%, var(--color) 24%, var(--bg) 24%, var(--bg) 28%, var(--color) 28%, var(--color) 36%, var(--bg) 36%, var(--bg) 40%, transparent 40%, transparent),
			radial-gradient(circle at 50%  100%, var(--bg) 10%, var(--color) 10%, var(--color) 23%, var(--bg) 23%, var(--bg) 30%, var(--color) 30%, var(--color) 43%, var(--bg) 43%, var(--bg) 50%, var(--color) 50%, var(--color) 63%, var(--bg) 63%, var(--bg) 71%, transparent 71%, transparent),
			radial-gradient(circle at 100% 50%, var(--bg) 5%, var(--color) 5%, var(--color) 15%, var(--bg) 15%, var(--bg) 20%, var(--color) 20%, var(--color) 29%, var(--bg) 29%, var(--bg) 34%, var(--color) 34%, var(--color) 44%, var(--bg) 44%, var(--bg) 49%, transparent 49%, transparent),
			radial-gradient(circle at 0    50%, var(--bg) 5%, var(--color) 5%, var(--color) 15%, var(--bg) 15%, var(--bg) 20%, var(--color) 20%, var(--color) 29%, var(--bg) 29%, var(--bg) 34%, var(--color) 34%, var(--color) 44%, var(--bg) 44%, var(--bg) 49%, transparent 49%, transparent);
		
		&:before{
			content: '';
			position: absolute;
			top:0;
			left:0;
			right:0;
			bottom:0;
			display: block;
			z-index: 9999999;
			pointer-events: none;
		}

		> *{
			z-index:9999999999;
			opacity:1;
		}
	}
}

// ------- APPLICATION -------------------

.first-run{
	#version{
		opacity:0.5;
	}
}

.updates-available{
	#version{
		text-decoration: underline;
		text-decoration-style: wavy;
		color:var(--shade-blue);
		animation: Throb 1s both 0s infinite;
		border:1px var(--shade-gray) solid dashed;
	}
}

.installable{
	#version{
		border:1px var(--shade-gray) solid dashed;
		
	}
}

.installed{
	#version{
		// invert
		background-color: var(--shade-brown);
		color:var(--shade-white);
	}
}



// ---------------- FLAGS ---------------

// Show secret buttons#??
.flag-showSettings {
	#toast{
		--footer-gap:calc( 2 * 4rem + var(--pad) );
	}
}

// show settings panel
.flag-showSettings #settings,
#settings:focus,
#settings:focus-within{
	display: flex;
	visibility: visible;
	transform: translateY( -100% );
}


// Options set by clicking buttons set these flags as classes
.flag-clear {

	// FIXME:
	// #shared-controls label[for="button-sync-video"]{
	// 	display: flex;
	// }
	// #shared-controls label[for="button-overlay"]{
	// 	display: none;
	// }
}

// We want to copy the video frame so we do not 
// need to also show it
.flag-clear,
.flag-synch{
	#app-frame video{
		display: none;
	}
}

// this hides the video when in synch mode
// main:not(.flag-clear.flag-transparent){
// 	// hide videp as drawing to canvas direct
// 	#app-frame video{
// 		display: none;
// 	}
// }

// this hides the video when in synch mode
// main:not(.flag-clear.flag-transparent){
// 	// hide videp as drawing to canvas direct
// 	#app-frame video{
// 		display: none;
// 	}
// }


.flag-eyes label[for="select-eyes"]{
	display:flex;
}

// if we are showing the flag-overlay we are showing all 
// XR overlays
.flag-overlays{
	
}

// If we are not showing overlays, what use is there in the
// eyes, mask buttons?
main:not(.flag-overlays){
	label[for="button-meshes"],
	label[for="button-eyes"],
	label[for="select-eyes"],
	label[for="select-palette"],
	label[for="button-subtitles"]{
		visibility: hidden;
	}
}









// User active / inactive



// added when the user engages with the app
.user-active{
	#shared-controls {
		visibility: visible;
	}
	// .controls > *{
	// 	animation-direction: reverse, reverse;
	// }
}

// added when user gives up attention
.user-inactive{
	#shared-controls, #settings {
		visibility: hidden;
		opacity:0;
	}
	// .controls > *{
	// 	animation-direction: normal, normal;
	// }
	#toast{
		visibility: hidden;
	}
}

// when tab is muted
.tab-hidden{

}



// ===================================

// Could not load due to privacy restrictoin or user uninteraction
// or no camera or whatever!
.failure{
	header{
		filter:blur(9px);
	}
	.warning,
	#title,
	#load-progress,
	#onboard,
	#control-panel{
		display: none;
	}
	#feedback{

		--x:-50%;
		--y:-45%;
		animation: 	Fade var(--ease-s) linear 0s 1 normal both,
					Translate var(--ease-s) linear 0s 1 normal both;
		// left:var(--pad);
		// right:var(--pad);
		top:50%;
		left:50%;
		transform: translate(-50%, -50%);
		
		max-width: 36ex;

		// bottom:calc(50vh - 0.5rem);
		text-align: center;
		border-radius: 14px;

		background-color:var(--shade-red);
		background-image:linear-gradient(rgba(0,0,0,0.1),rgba(0,0,0,0.2));

		color:$col-dark;
		border:10px solid $col-white;
		z-index:909;

		filter:none;
		
		font-size:140%;
		font-weight: 900;

		strong{
			animation-name:TextError;
		}

		&::before{
			margin:var(--pad);
			content:'';
			display: block;
			height:3rem;
			background-image: url(/source/assets/icons/pan_tool_black_24dp.svg);
			background-repeat: no-repeat;
			background-size: contain;
			background-position: center;
			text-shadow:inherit;
		}
		&::after{
			display:none;
		}
	}
}
