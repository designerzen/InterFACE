// Basic margin resets
:where(
	html,body,
	h1,h2,h3,h4,h5,h6,p
	menu,
	ul, ol,
	summary,
	figure, picture
){
	margin:0;
	padding:0;
}


  
:where(html){
	
	// work out most appropriate
	--_col-accent:var(--shade-brand, var(--col-accent, var(--shade-red, blue ) ) );
	
	// absorb viewport height
	height: 100%;
	// allows 100vh to work on mobile safari (sometimes)
	min-height: 100vh;
	min-height: -webkit-fill-available;
	min-height: 100dvh;

	color:var(--shade-white);	
	background-color:var(--shade-dark);
	caret-color: var(--_col-accent );
	accent-color: var(--_col-accent );
	scrollbar-color: var(--_col-accent) transparent;

	// allows letters with decsenders to break through the underline
	// https://css-tricks.com/almanac/properties/t/text-decoration-skip-ink/
	// https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-skip-ink
	text-decoration-skip-ink: auto;

	overflow: auto;
	// only allow vertical scrolling
	overflow-x: hidden;
	scroll-behavior: smooth;

	// https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/
	-moz-text-size-adjust: none;
	-webkit-text-size-adjust: none;
	text-size-adjust: none;
}

:where(body){ 
	// prevent collapse
	min-height: 100%;
	// regular arrangement for vertical flow
	display: flex;
	flex-direction: column;
    flex-wrap: nowrap;
    align-content: stretch;
    justify-content: space-between;

	// FIXME: prevent user dragging?
	touch-action: none;
	
	scroll-behavior: smooth;
}

:where(main){	
	display:flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	min-width:100%;
	margin:auto;
	
	// height: 100%;
	// min-height: 320px;
	//max-height: 100%;
}

:where(menu){
	list-style: none;
	::marker {
		display: none;
	}
}

:where(ol, ul){ 
	margin-top:var(--pad);
	margin-bottom:var(--pad);
}

// List item gaps
:where(ol,ul)[role=list] li + li{
	margin-top:calc( var(--pad) / 2 );
}

// Type
:where(
	h1,h2,h3,h4,h5,h6
){ 
	overflow-wrap: break-word;
	text-wrap:pretty;
}

:where(
	canvas,
	video,
	iframe,
	picture,
	figure,
	img,
	svg
){
	max-width:100%;
	height:auto;
	display: block;
}

video, 
canvas.canvas-full-size{
	width:100%;
	visibility: hidden;
}

abbr{
	text-decoration: wavy;
	text-decoration-thickness: 1px;
	text-decoration-color: var(--shade-white);
	cursor: help;
}


// Details & Summary ----------------------------------------
:where(details){
	pointer-events: auto;
	display: grid;
	grid-template-areas: none
		"marker summary"
		"details details"
	;

	> summary{
		cursor:pointer;
		user-select:none;
		pointer-events: auto;
		display: inline-flex;
		box-sizing:border-box;
		grid-area: summary;
		list-style: none;
		// for UX we need to stretch to fill the box		

		&::marker {
			display:none;
		}
		&::-webkit-details-marker {
			display: none;
		}
	}	
}

:where(details[open]) {
	summary::marker {
		display:inline-block;
		opacity:1;
	}
}

// FIGURE ----------------------------------------------

:where(figure){	
	img{
		width:100%;
	}
}

:where(figcaption){
	text-align: center;
}

// DATE & TIME -----------------------------------------

:where( time ){
	font-weight: 900;
}

// 

// Take SVG filters out of the flow
svg[aria-hidden='true'] { 
	position: fixed;
}

// Single taps are dispatched immediately on clickable elements
:where(
	a, area, button, input, label, select, summary,option, textarea, [tabindex]
) {
	-ms-touch-action: manipulation;
	touch-action: manipulation;
	font:inherit;
	letter-spacing: inherit;
	word-spacing: inherit;
}

:where(label){
	--padding:calc( 1 * var(--pad));
	//outline: 1px groove $col-cream;
	cursor: pointer;
	transition:color var(--ease-s) linear, 
				background-color 90ms linear;

	padding:var(--padding);// var(--pad) 0 var(--pad);
	position: relative;
	user-select:none;
	text-wrap:pretty;

	&:hover, &:focus{
		color:var(--col-fg, var(--shade-white) );
		//background-color:var(--col-bg, #{$col-blue});
		outline:none;
	}
}


// Select gqadget with options ----------------------------------------------
:where(
	input[type=select],
	select
){
	appearance: none;
	// color:transparent;

	text-align: center;
	padding:var(--pad) ;
	background-color: transparent;
	background-image: url("data:image/svg+xml;utf8,<svg fill='white' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
	background-repeat: no-repeat;
	background-position-x: 100%;
	background-position-y: 50%;

	// selected
	&:focus:active{
		max-width:none;
	}
	
	&::marker{
		color:white;
	}

  	// Custom arrow
	// &:not(.select-multiple)::after {
	// 	content: "";
	// 	justify-self: end;
	// 	width: 0.8em;
	// 	height: 0.5em;
	// 	background-color: var(--select-arrow, var(--col-accent, black) );
	// 	clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  	// }

	// hide arrow on Microsoft IE
	&::-ms-expand {
		display: none;
	}

	> * {
		padding:var(--pad);
		color:var(--shade-white);
		background-color: var(--shade-dark);
	}

	optgroup{
		appearance:none;
		font-weight:900;
		text-transform: uppercase;
		margin:auto;
	}

	option{
		text-transform:initial;
		text-align: left;
		color: var(--shade-white,white);
		background: black !important;
		
		// border-radius: 2px;
		transition: 95ms all ease-in;
	
		&:hover, &:focus{
			color:var(--shade-cream);
		}
		&:checked {
			background: linear-gradient(hsl(242, 61%, 76%), hsl(242, 61%, 71%));
			// color: black !important;
		}
	}

	// safari allows styling of options!
	&:not(:disabled) option {
		
	}
}

// Marked text ----------------------------------------------
:where(mark){
	background-color: Highlight;
	color: HighlightText;
}

:where(input){
	text-align: center;
}

:where(	
	input[type=submit],
	input[type=reset],
	button
){
	cursor: pointer;
}

output, result{
	display: block;
}

hr{
    display:block;
    height: 1rem;
	width:100%;
    padding:0;
    margin:var(--pad);
    border:0;
    background-image:radial-gradient( farthest-corner at 50% 0, rgba(255,255,255,0.6) 0,transparent 50% );
}

[aria-busy="true"] {
	cursor: progress;
}

// Make sure textareas without a rows attribute are not tiny 
textarea:not([rows]) {
	min-height: 10ch;
}
  
// Anything that has been anchored to should have extra scroll margin 
:target {
	scroll-margin-block: 5ex;
}