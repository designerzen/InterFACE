#intro{
	
	text-align: center;
	display: flex;
	flex-direction: column;
	align-items: center;

		
	p{
		color:$col-white;
	}

	// Epilepsy warning
	.warning{
		background:$col-white url('./assets/icons/report_problem_black_24dp.svg') no-repeat;
		background-position: left var(--pad) center;
		// we dont want any animations here
		strong{
			animation:none;
		}
		color: $col-dark;
		padding: var(--pad) calc( 2 * var(--pad) ) var(--pad) calc( 4 * var(--pad) );
		margin-bottom:var(--pad);
		margin-top: auto;
		flex: 0 1 auto;
		display: inline-block;
		align-self: center;
	}

	p[aria-label]{
		position: absolute;
		color:transparent;
		text-shadow: none;
		user-select: none;
		// hide links too
		a{
			color:transparent;
		}
	}
}

.app{ 
	// try to use sparingly...
	// hide all cruft and hide scrollbars too
	overflow:hidden;
	// saves on memory as it crops it too??
	overflow: clip;
		
	#intro{
		position: absolute;
		top:0;
		right:var(--pad);
		left:var(--pad);
		// above feedback
		bottom:var(--footer-gap);	
		pointer-events: none;
		
		// main title
		h1{
			//background-color: $col-dark;
			color: $col-grey;
			order:-1;
		
			display: inline-block;
			padding:var(--pad) calc(var(--pad) * 2);
			
			justify-self: center;
			// margin-top:var(--pad);
			transition:color var(--ease-s) ease-out;
			text-shadow: rgba(0,0,0,0.56) 0 1px 4px,
						rgba(0,0,0,0.56) 0 2px 4px,
						rgba(0,0,0,0.56) 0 3px 4px,
						rgba(255,255,255,0.96) 0 0 4px;
							
			strong{
				color:$col-blue;
			}
		}
		
		h2{
			// drop shadow
			text-shadow: rgba($col-white,0.96) 0 1px 4px,
						rgba($col-white,0.7) 0 2px 4px,
						rgba($col-white,0.5) 0 3px 4px,
						rgba($col-cream,0.56) 0 0 4px;
			
			color: $col-tan;
			margin:0 auto;
			padding:var(--pad);
		}
	}

	#foot{
		position:absolute;
		left: 0;//calc( var(--pad));
		right: 0;//calc( var(--pad));
		bottom: 0;//var(--pad);
	}
}


.logo, h1, h2{
	// position: absolute;
	// top:0;
	// left:0;
}

// inline logo :)
.logo{
	// z-index: -2;
	align-self: center;
	text-indent: -99999rem;

	margin-left:auto;
	margin-right:auto;
	display: flex;
	flex-direction: column;
	
	// scale
	width:100%;
	min-height:10vh;
	max-height:90vmin;
	max-width:90vmin;
	
	visibility: visible;
	font-size: 0;
	// order: -1;
	// overflow: hidden;

	svg{
		order: -1;
		color:inherit;
		fill:currentColor;
	}

	// background:url(/source/assets/logos/interface.svg) no-repeat left;
	// background-size: contain;
	// background-position: left;
}

main{
	display:flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	// min-width:100%;
	
	margin:auto;
	// height: 100%;
	// min-height: 320px;
	//max-height: 100%;

	button{
		//display: none;
	}
}

main.midi{
	#button-midi{
		display: flex;
	}
}

main.video{
	> img{
		display: none;
	}
}

// if static image mode
main.img{
	> video{
		display: none;
	}
}

//
main.active{
	button{
		display: block;
	}
}

// funky text animations where the colour fades...
// NB. EXPENSIVE, use sparingly
.loading .logo,
.loading strong,
p strong{
	animation:TextColours 4s linear infinite 0.05s both;
}


#app-frame{
	--person-a-x:0;
	--person-a-y:0;
	--person-b-x:0;
	--person-b-y:0;

	// shadow
	--wig:0;
	--hue:180;
	--l:20%;
	
	// we only disable this in jumbo mode
	position: relative;
	display:block;

	height: 100%;
	// min-height: 320px;
	min-height: 100vh;
	// max-width: 100%;
	max-height: 100vh;

	// object-fit: contain;

	transition:opacity var(--ease-s) ease-out;
	
	// face overlay to remind to show face
	&::after{
		content:'';
		position: absolute;
		top:var(--pad);
		left:var(--pad);
		right:var(--pad);
		bottom:var(--pad);
		background:url(assets/icons/child_care-24px.svg) no-repeat center center;
		background-size: contain;
		opacity:0;
		//transform:translateZ(100px);
		display: block;
		z-index:1;
		pointer-events: none;
		display: none;
	}
}


// Hide controls on mouse out on hover devices
@media (any-hover: hover) {
	//@supports (html:focus-within){
	.loaded:not(.debug){
		#toast{
			transition:transform var(--ease-q) calc(var(--ease-s) + var(--ease-s));//0s $easeOutBack;
			transform:translateY(150%);
		}

		// #control-panel,
		.recordings,
		.controls{
			//visibility: hidden;
			transition:opacity var(--ease-s) linear;
			transition-delay: var(--ease-s);
			// fade out
			//animation: Fade var(--ease-s) linear 1500ms both reverse;
			opacity:0;

			> *{
				--duration: var(--ease-q);
				--overlap:0.6;
				// --delay-offset: var(--ease-q);
				// animation-name:Fade;
				// animation-duration:var(--ease-s);
				// animation-direction:reverse;
				// animation-fill-mode: both;
				// animation-delay:inherit;
			}
		}

		main:focus-visible,
		main:focus-within,
		main:focus,
		main:hover{
			// hide and show parts

			// move toast up
			#toast{
				transform:translateY(0);
				transition-delay:0;
			}

			 .controls,
			 .recordings{
				opacity:1;	
				transition-duration: var(--ease-q);
				
				> *{
					//animation-name:BGColours, Fade;
				}

				//visibility: visible;
				//animation: Fade var(--ease-q) linear 0s both;
			}
		}
	}
}


// STATES //////////////////////////////////////////////////////////////////



// need to always show this
#app-frame{
	

}

// hide all help bits
#help section{
// #help > *{
	display: none;
}


// STATES /////////////////////////////////////////////////////


// FIXME:
.loaded{

	#help .app-help{
		display: block;
	}

	#intro header{
		display:flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: flex-start;
		bottom:auto;
		z-index: -1;
		
		.logo{
			margin:0;
			min-width:60px;
			// max-width:82px;
			position: absolute;
			left:0;
			right:0;
			top:0;
			align-self:flex-start;
			font-size: 0;
			// for anly inline
			fill:black;//$col-cream;
			
			svg{
				width: 100vw;
				height: 100vh;
			}
		}
		h1{
			justify-self: flex-end;
			margin:0;
			align-self:center;
			padding-left: 0;
			opacity:0.2;
			transition:opacity var(--ease-m) linear;
			writing-mode: vertical-rl;
			// transform: rotate(90deg) translateX(var(--pad));
			transform-origin: top left;
		}

		h2{
			margin-top:0;
		//	font-size:50%;
			width:100%;
			display:block;
			opacity:0;
		}	
	}

	// Epilepsy warning
	.warning,
	h2{
		visibility: hidden;
	}
	
	#shared-controls{
		visibility: visible;
	}

	// hide other bits
	#onboard,
	#player-selector,
	#load-progress{
		display: none;
	}

	// wrapper
	#app-frame{

		display: flex;
			
		// rounded corners
		border-radius:var(--curve);
		overflow: hidden;

		background-color: black;
		box-shadow:
			var(--wig) -1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
			var(--wig) -2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
			var(--wig) -4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
			var(--wig) -8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
			var(--wig) -13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
			var(--wig) -23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
			var(--wig) -50px 51px hsla(var(--hue), 90%, 10%, 0.15),
			
			var(--wig) 1.2px 1.2px hsla(var(--hue), 90%, var(--l), 0.059),
			var(--wig) 2.7px 2.7px hsla(var(--hue), 90%, var(--l), 0.074),
			var(--wig) 4.8px 4.9px hsla(var(--hue), 90%, var(--l), 0.083),
			var(--wig) 8px 8.2px hsla(var(--hue), 90%, var(--l), 0.09),
			var(--wig) 13.2px 13.5px hsla(var(--hue), 90%, var(--l), 0.098),
			var(--wig) 23.1px 23.6px hsla(var(--hue), 90%, 10%, 0.112),
			var(--wig) 50px 51px hsla(var(--hue), 90%, 10%, 0.15);
		// $col-yellow
		
		video, #interface{
			// max-width:100%;
			// max-height:100vh;
			// height:auto;

			// put them all in the same place in the grid
			object-fit: contain;
			//margin:auto;
			visibility: hidden;	
			display: block;
		}

		#interface{

			z-index: 1;
			position: relative;
			
			// stretch it to flood the width
			// width:100vw;

			height: auto;
			//width:100%;

			// prevent overflow
			// max-width: 100vw;
			// max-height: 100vh;

			// video actually always maintains apect ratio which we can abuse...	
			// @media (orientation: landscape) {
			// 	height: 100%;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }

			// width:100%;//clamp(100%, 100vw, 100% );
			height: 100vh;
			max-width: 100vw;
			margin:auto;

			// max-height: 100vh;
			// max-width: 100vw;
			// height:calc(var(--height) / var(--width) * 100vw );

			@media (orientation: portrait) {
				// 	height: 100%;
				// 	width:calc(var(--width) / var(--height)  * 100vh );
				width: 100%;
				height:calc(var(--height) / var(--width) * 100vw );
			}
			
			// @media (orientation: landscape) {
			// 	height: 100vh;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }
			// @media (orientation: portrait) {
			// 	width: 100vw;
			// 	height:calc(var(--height) / var(--width) * 100vw );
			// }
			
			// scale to fit screen?
			// landscape
			// @media (orientation: landscape) {
			// 	height:100vh;
			// 	width:calc(var(--width) / var(--height)  * 100vh );
			// }
			// // portrait
			// @media (orientation: portrait) {
			// 	width:100vw;
			// 	height:calc(var(--height) / var(--width) * 100vw );
			// }
		}

		// behind canvas (canvas can be transparent at times)
		video{
			
			// flip it around for mirror mode
			transform: scaleX(-1);

			z-index: 0;
			position:absolute;
			top:0;
			left:0;
			
			width:100%;
			height:100%;
		}
		#control-panel{
			
			@media (orientation: portrait) {
				// 	height: 100%;
				// 	width:calc(var(--width) / var(--height)  * 100vh );
				width: 100%;
				height:calc(var(--height) / var(--width) * 100vw );
			}
			
		}
	}

	#app{
		#title{
			visibility: hidden;
			position: absolute;
			right:0;
		}
	}
	
	#app-frame video,
	#app-frame #interface{
		display: block;
		visibility: visible;
	}

	#foot{
		z-index:-1;
	}

}


// If the user has de-selected 'advanced' mode, we hide some buttons that
// will just confuse them...
.beginner{

	// hide these...
	// #fund,
	#button-reset,
	label[for="select-impulse"],
	label[for="button-install"],
	label[for="button-quantise"],
	label[for="button-quantise"],
	label[for="button-spectrogram"]{
		display: none;
	}
}


html.debug{
	#version,
	#version span{
		opacity: 1;
	}
}

// #version,
#midi-device{
	display:none;
}



#control-panel{
	
	display: block;
	margin:auto;
	padding:0;
	
	overflow: hidden;
	position: absolute;
	top:0;
	left:0;
	right:0;
	bottom: 0;
	z-index:606; // NOT top - we have help and about remember!

	// width:100%;
	// pointer-events: none;

	// > *{
	// 	pointer-events: auto;
	// }

	/*
	// we need media queries to complete
	--ratio:calc( var(--width)/var(--height));
	max-width:var(--width);
	max-height:var(--height);
*/



	// &::before{
	// 	display: block;
	// 	content:'';
	// 	// width:calc(var(--width) / var(--height) * 100%);
	// 	// height:calc( 100% );
	// 	width:100%;
	// 	padding-bottom:calc(var(--width) / var(--height) * 100%);
	// }
}

.brand{
	//background:url(/source/assets/logos/designerzen_current-color.svg) no-repeat left 2px center;
	//background-size: contain;
	//padding-left:1.3rem;
	display: inline-flex;
	align-items: center;
	margin-left:0.25rem;
	svg{
		color:inherit;
		height:1rem;
		width:1rem;
		margin-top: -0.25rem;
		margin-right:0.25rem;
		stroke:currentColor;
	}

}

// Results
.recordings{
	--side:123px;
	position: fixed;
	// bottom:var(--footer-gap);
	top:0;

	left:50%;//var(--side);
	border-radius: var(--curve);
	width:min-content;
	max-width:calc( 100vw - 2 * var(--side) );
	transform: translateX(-50%);
	//right:var(--side);

	display: flex;
	overflow: auto;
	overflow-y: hidden;
	justify-items: center;
	
	// a bit of space to zoom
	//padding:var(--pad);
	padding:22px;
	pointer-events: all;

	z-index: 303;
	gap:var(--pad);
	border:var(--border-size) solid var(--shade-yellow);
	background-color:var(--shade-dark);

	scroll-behavior:smooth ;
	scroll-snap-type: x mandatory;
	//scroll-padding: 50%;

	// &:before, &:after{
	// 	content:'';
	// 	position: absolute;
	// 	top:0;
	// 	right:100%;
	// 	background-color: aquamarine;
	// 	width: 20px;
	// 	height:20px;
	// 	display: block;
	// }

	&:after{
		left:100%;
		right:auto;
	}

	> * {
		scroll-snap-align: center;
	}

	> * + * {
		margin-left:8px;
	}

	&:empty{
		visibility: hidden;
	}
			
	&:focus-within {
		// prefer smooth scrolling where available (opinionated).
		scroll-behavior: smooth;
	}
	// grid-auto-rows: ;
	a{
		color:transparent;
		user-select: none;
		font-size:0;
		position: relative;
		box-sizing: border-box;
		transition: transform var(--ease-m) ease-out;

		&::before{
			content:'';
			border:4px solid $col-white;
			position: absolute;
			top:0;
			left:0;
			right:0;
			bottom:0;
			opacity: 0;
			transition: var(--ease-m) linear;
		}

		&:hover, &:focus{
			z-index:2;
			transform-origin: bottom center;
			transform:scale(1.1);			
			background-color: $col-dark;
			outline:1px solid $col-orange;
			&::before{
				opacity: 1;
			}
		}
		
		&:focus{
			outline:3px solid $col-orange;
		}
	}

	img{
		max-width:120px;
		min-height:44px;
		max-height:12vmin;
		height: auto;
		width: auto;
		display:block;
	}
}


// STATES ==========================

// Faces are shown on video
.active button.person{
	display: block;	
}

// fancy shared controls animations
header > *,
fieldset > *,
dialog[open] > *{

	--overlap:0.06;

	$end:49;
	@for $i from 1 to $end {

		&:nth-child(#{$i}){
			// delay is the amount of time to wait before reveal
			--delay:calc( var(--delay-offset, var(--offset,0)) + #{$i - 1} * var(--overlap) * var(--duration) );
		}
	}
}


#person-a-controls{
	transform:translateX(-100%);
	left:0;
	&.showing{
		transform:translateX(0);
	}
}

#person-b-controls{
	transform:translateX(100%);
	right:0;
	&.showing{
		transform:translateX(0);
	}
}


// Instrument selection panel
fieldset.person-controls{

	--xa:50%;
	--ya:0;
	
	// or in duet do we split screen???
	// NB. we cannot avoid fixed
	position: fixed;
	top:0;
	min-width:12ch;
	max-width: 40%;
	bottom:0;
	overflow: auto;
	overflow-x: hidden;
	visibility: hidden;
	pointer-events: auto;
	// prevent causing issues with tooltips
	z-index:9999999999999;
	border:0;
	margin:0;
	color:$col-dark;
	display:grid;
	background-color:rgba($col-white, 0.9);
	transition: transform var(--ease-m) ease-in-out;

	// smol : Next, we use minmax for the main content. Why? Because if we only use 1fr then eventually our sidebar and main will share 50% of the space, and we want the main area to always be wider. We also nest min to ask the browser to use the minimum of either of the options. The result in this case is use of 50vw on mobile-sized viewports, and 30ch on larger viewports. And, when there's room, it also stretches to 1fr for the max part of minmax 🙌🏽
	//grid-template-columns: fit-content(24ch) minmax(min(50vw, 44ex), 1fr);
	//grid-template-columns:fit-content(48ch) ;
	// grid-template-columns: repeat(auto-fill, minmax(12ch, 1fr));
	
	grid-template-columns: repeat(auto-fit, minmax(12ch, 1fr));
	grid-template-columns: repeat(auto-fit,fit-content(48ch));

	legend,
	summary{
		grid-column: 1/-1;
		color:$col-white;
		background-color:rgba($col-dark, 1);
		width:100%;
		padding: var(--pad);
		box-sizing: border-box;
		//position: sticky;
  	 	// bottom: 0;
  	 	// top: 0;
		z-index:303;
		text-transform: uppercase;
	}
	
	summary{
		background-color:var(--shade-gray);
		position: sticky;
  	 	// bottom: 0;
  	 	top: 0;
	}

	details{
		// 
	}

	label{
		display: block;
		border:1px dotted $col-dark;
		border-right:0;
		border-left:0;
		
		//background-color:rgba($col-white, 0.9);
		&:hover{
			color:$col-white;
			background-color:rgba($col-dark, 0.9);
		}
	}

	input[type="radio"]:checked{
		background-color: var(--shade-orange);
		border-radius: 0;
		z-index: -1;
	}


	// reveal!
	&.showing{
		visibility: visible;
		//animation: SideBar duration timing-function delay iteration-count direction fill-mode;
	}
}




// MIDI MIDI MIDI MIDI! ===============================

// FF user no midi
main.no-midi,
main.midi-unavailable{
	#button-midi{
		display: none;
	}
}

// WEBMIDI is present 
main.midi {
	#button-midi{
		
	}
}

// Regular state when MIDI is available but not activated
main.midi-available{
	// hide button
	#button-midi{
		// display: none;
		//cursor:not-allowed;
	}
}

// midi was requested but no devices yet discovered
main.midi-active button#button-midi{
	#button-midi{
		--col: $col-green;
	}
}

// midi buton was pressed - now loading state
main.midi-activated{
	// hide button
	#button-midi{
		//cursor:not-allowed;
		--col-bg: #{$col-blue};
	}
}

// MIDI Device is connected
main.midi-connected{
	#midi-device{
		display:inline-block;
		--col: $col-red;
	}
}

// MIDI is available but there are no instruments connected
// connect your midi device!
main.midi-no-devices button#button-midi{
	
	--col: $col-red;

	overflow: visible;
	animation:BGColours 4s linear infinite 0s both;
	
	// we can show some extra text above the button
	&:after{
		display: block;
		content:'Connect Device';
		animation:MIDIConnect 10s infinite 0.2s both;
					//TextColours 4s linear infinite 0s both;
		
		position:absolute;
		bottom:calc(100% + var(--pad) );
		text-indent: 0;
		left:50%;
		text-align: center;
		transform:translateX( calc(-50% ) );
		//left:0;
		color:$col-dark;
		background-color: $col-white;
		font-size:11px;
		font-weight: 900;
		padding: var(--pad);
		//text-shadow:2
		
	}
}


main.solo{
	#person-b{
		visibility: hidden;
	}
}

// only enable when loaded
#share{
	display: none;
}

.sharing-enabled{
	#share{
		display: flex;
	}
}

#settings{
	visibility: hidden;
	transform: translateY( 0 );
	transition: transform var(--ease-m) $easeOutBack, opacity var(--ease-m) linear;
	animation: none;
	
	.button-close{
		position: absolute;
		left:0;
		right:0;
		z-index:-1;
		align-items: flex-end;
		// get rid of icon
   		--bg: unset;
	}
}

// END OF MIDI MIDI MID MIDI ====================================

#foot{
	--spacer:0;
	--border:1px solid #{$col-gray};
	color:$col-brown;
	
	border-top:var(--border);

	display: flex;
	box-sizing: border-box;
	align-items: center;
	justify-content: flex-end;
	flex-wrap: wrap;
 	flex-direction: row;
	
// 	@media (orientation: portrait) {
		
// 	flex-direction: column-reverse;
			
// 	}

	margin:var(--pad);
	margin-top:0;

	// max-height:var(--footer-gap);
	
	transition:transform var(--ease-s) $easeOutBack;
	transform: translateX(var(--spacer));
	
	// fade it in immediately
	animation: Fade var(--ease-s) 1 0s ease-out both normal;


	// allow the contents to hide
	.associates {
		position: relative;
	    

		h5{
			&::before{
				content:'+';
				color:inherit;
			}
		}

		ul{
			visibility: hidden;
			display: grid;
			justify-items: center;
    		align-items: center;
			position: absolute;
			background: inherit;
			display: grid;
			position: absolute;
			bottom: 90%;
			background-color:$col-dark;
			z-index: 909;
			transform: translateX(-33%);
		}

		h5:hover ~ ul,
		ul:hover,
		ul:focus,
		ul:focus-within{
			visibility: visible;
			animation: Fade var(--ease-s) 1 0s ease-out both normal;
		}
	}
	
	small{
		display:flex;
		align-items: center;
		
		padding-top:var(--pad);

		&:last-of-type{
			margin-left:auto;
		}

		#version{
			margin-left: auto;
			display: flex;
			flex-wrap: wrap;
			opacity:0.9;
			
			padding-left:var(--pad);
			padding-right:var(--pad);

			position: relative;

			#release{
				white-space:nowrap;
				text-overflow: ellipsis;
				border:1px solid $col-cream;
				background-color:$col-white;
				padding:var(--pad);
				color:$col-grey;
				visibility: hidden;
				order:-1;
				position: absolute;
				left:50%;
				bottom:100%;
				transform: translateX(-50%);
			}		
			&:hover #release{
				visibility: visible;
			}
		}
	}

	.brand:hover svg, 
	.brand:focus svg{
		color:var(--shade-white);
		fill: var(--shade-dark);
	}
	
	#year{
		display: inline-flex;
		flex-direction: row;
		white-space: nowrap;
	}

	// this *still* gets read out via screenreaders!!!
	#year::before{
		content:"©";
		margin-left:0.2rem;	
		margin-right:0.2rem;	
		color:$col-cream;
	}

	.licenses{
		padding:0 var(--pad);
		order:999;
		border-left:var(--border);
	}

	a:hover, a:focus{
		color:$col-orange;
	}
}

// Icons for institutions that have presented or promoted this project
.icon-list{
	--size:74px;
	margin:0;
	padding:0;
	/* grid-auto-columns: 50%;
	grid-auto-flow: column;
	grid-gap:var(--pad);
	grid-template-columns: repeat(auto-fill, minmax(200px,1fr));
	grid-auto-columns: 1fr; */
	list-style: none;
	display: grid;
	// grid-template-columns: repeat(auto-fill, minmax(var(--size), 1fr));
	// grid-auto-rows: var(--size);
	
	//grid-template-rows: repeat(auto-fill, minmax(var(--size), 1fr));
	//grid-auto-rows: minmax(var(--size), 1fr);

	// just 1 column
	grid-auto-columns: var(--size);
	grid-auto-rows: var(--size);

	// which direction to flow into 
	grid-auto-flow: column;
	
	//grid-gap:var(--pad);
	place-items: center center;
	box-sizing: border-box;

	// we flip things around if the screen is taller than wide	
	// @media (orientation: portrait) {
	// 	--size:44px;
	// 	grid-auto-flow: row;
	// 	margin-bottom:var(--pad);
		
	// // order:-1;
	// // 	order:unset;
	// }
	li{
		box-sizing: border-box;
	}
}

// Associates and friends ---
// .associates li::marker{
// 	content:'#';
// 	color:hsla(0, 0%, 100%, 0.5);
// 	font-size: 66%;
// } 

// Each associate link
.icon-list li a{
	display: flex;
	flex-direction: column-reverse;
	align-items: flex-end;
	padding:var(--pad);
	box-sizing: border-box;

	font-size:0;
	color:transparent;

	user-select: none;
	color:$col-blue;
	text-shadow: rgba(0,0,0,0.56) 0 1px 4px,
					rgba(0,0,0,0.56) 0 2px 4px,
					rgba(0,0,0,0.56) 0 3px 4px,
					rgba(255,255,255,0.96) 0 0 4px;

	svg{
		color:inherit;
		fill:currentColor;
		width:100%;
	}

	&:focus,
	&:hover{
		color:$col-orange;
	}
}

// These are the backgrounds
.filter{
	opacity: 0.33;
	position: absolute;
	top:0;
	right:0;
	bottom:0;
	left:0;
	display: block;
	background-image: url("data:image/svg+xml,%3Csvg class='filter' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='filter-noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='6.29' numOctaves='6' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23filter-noise)'%3E%3C/rect%3E%3C/svg%3E");
}
