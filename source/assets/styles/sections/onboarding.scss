// Onboarding screen with setup options

// we need this to visually look the same size as the video
#onboard{
	visibility:hidden;
	display: none;
}

// Choose players screen
// This is the how many people are playing mode
.player-selection{

	// hide everything in the header except for the nav
	// #intro > *:not(nav){
	// 	visibility: hidden;
	// 	overflow: hidden;
	// 	height:0;
	// }

	// #intro > :is(.logo){
	// 	visibility: hidden;
	// 	overflow: hidden;
	// 	height:0;
	// }


	// strapline... show yet?
	#title{
		position: absolute;
		bottom:0;
		visibility:hidden;
	}
	
	// instructions do show periodically so we need to ensure that they
	// NB. don't cover the buttons
	#toast{
		
		--footer-gap:var(--pad);
		// bottom:auto;
		// top:var(--pad);
		// left:50%;
		// transform: translateX(-50%);
		// right:auto;
		//max-width:calc( 100% - 4rem );
		// // prevent cramping
		// margin:0 var(--pad);
		// background-color: $col-dark;
		// text-align:center;
		// pointer-events: none;
	}

	// form > * {
	// 	visibility: hidden;
	// 	pointer-events: auto;
	// }	
	#onboard{
		--side:clamp( var(--pad), 25%, 240px);
		z-index:1;
		display:flex;
		flex-direction:column;
		align-items:center;
		// border:var(--border-size, 9px) solid var(--shade-dark);
		border-radius:var(--curve, 9px);
		background-image:linear-gradient(
			hsla(18, 21%, 12%, 0.7), 
			hsla(340, 5%, 11%, 0.7)
		);
		
		// backdrop-filter: grayscale(3) blur(3px);
		padding: var(--pad);
		padding-top: 0;
		margin:auto;

		// do something in wider screens
		max-width:calc( 100% - var(--side) );
		
		@media screen and (max-width:540px){
			--side:0px;
		}
	}

	// show this
	#onboard,
	#player-selector{
		visibility: visible;
	}
	#player-selector{
		padding-top:var(--pad);
	}
	
	// hide stuff not relevent
	// Instrument selection panel
	#control-panel{
		display: none;
	}

	
	.person,
	#shared-controls{
		visibility: hidden;
	}

	// NB: Warning - this MAY trigger a video element not found error
	// as JS pointer no longer has DOM equivalent
	#interface,
	video,
	fieldset.person-controls{
		display: none;
	}

	#button-trio{
		display:none;
	}

	#help .player-selection-help{
		display: block;
	}
	
	// #app-frame{
	// 	height:auto;
	// 	min-height:auto;
	// 	max-height:none;
	// 	//max-height:calc( 100% - var(--footer-gap, 44px) );
	// }

	// we invert as on black background
	#foot{
		color:$col-white;
	}
}

/////////////////////////////////////////////////////
// CTA to begin the app...
// Glows and entices a click!
/////////////////////////////////////////////////////
label[for=button-start]{

	--col-fg: #{$col-dark};
	--col-bg: #{$col-orange};
	--col-hover:#{$col-cream};
	--button-border-size:4px;
	--bg:url(/source/assets/icons/music_note-24px.svg);
	--pos-override:left var(--pad) center;

	// transform: translateY(-50%);
	margin-top:var(--pad);
	
	// padding:var(--pad) calc(2 * var(--pad)) var(--pad) calc(4 * var(--pad));
	display: block;
	z-index:606;
	
	position: relative;
	// display: flex;
	// align-items: center;
	// justify-content: center;

	width: 100%;
	max-width: max-content;
	min-height: 5rem;

    box-sizing: border-box;
	padding: calc(var(--pad)*3 ) calc(var(--pad)*7 );
	// animation: CTA 2s infinite;
	// background-image:linear-gradient(var(--col-top, #ffffff4d), var(--col-bottom, #0000004d));
	// background-repeat: repeat;
	
	// set this up as a background!
	input{
		--inset:calc( var(--pad) * 0.5 );
		position: absolute;
		top:var(--inset);
		right:var(--inset);
		bottom:var(--inset);
		left:var(--inset);
		color:transparent;
		z-index:-1;
		// opacity: 0;
		// border-color: var(--shade-white);
	}

	&::before{
		// background-image: var(--bg);
		// background-repeat: no-repeat;
		// padding-left:calc(var(--pad)*3.5);
		// margin-left:calc(var(--pad));
		// gap after prefix
		// margin-right:0.28rem;
		grid-area: gap;
	}

	&::after{
		content:'';
		// position: absolute;
		// left:0;
		// top:0;
		// bottom:0;
		// width:10rem;
		// gap before suffix
		// margin-left:0.28rem;
		// margin-right:calc(var(--pad)*2);
	}

	// Throb
	&:hover,	
	&:focus{
		animation-duration: 0.7s;
		input{
			color:transparent;
		}
	}

	&:hover::before{
		opacity: 1;
	}

	&:hover input::before{
		opacity: 1;
		outline:2px solid yellow;
	}
}

.solo label[for="button-start"]{
	--bg:url(/source/assets/icons/person-24px.svg);
	&:before{
		content:'Solo ';
	}
}

.beginner label[for="button-start"]{
	&:after{
		content:' in Simple Mode';
	}
}

.duet label[for="button-start"]{
	--bg:url(/source/assets/icons/people-24px.svg);
	&:before{
		content:'Duet ';
	}
}

// Player selection screen
#player-selector{
	// size of the logo asnd help button
	--top-gap:clamp(66px, 7vh, 15%);//clamp(1rem, 7vh, 5rem);
	// prevents a button becoming an icon
	--max-width-override:auto;
	--border-radius:9px;
	--border-size:clamp(4px, 20vmax, 9px);
	
	text-align:center;
	box-sizing: border-box;
	visibility: hidden;
	user-select: none;

	border-radius:var(--border-radius);

	// doesn't work anymore
	// border-image: linear-gradient(
	// 	var(--shade-grey, hsla(0, 0%, 100%, 0.3) ), 
	// 	var(--shade-gray, hsla(0, 0%, 0%, 0.3) )
	// );
	border-style: ridge;
	
	margin:0;
	padding:calc(var(--pad)*0) calc(var(--pad) * 1.5);// var(--pad);
	display:flex;
	flex-direction: row;
	flex-wrap:wrap;

	align-items:stretch;
	justify-content: center;
	grid-gap:4px;

	//min-height:calc( 100% - var(--top-gap) * 2);
	// max-height:100%;

	legend{
		--gap:clamp( 2px, 8vmin, var(--pad,1rem) );
		padding-left:var(--gap,1rem);
		padding-right:var(--gap,1rem);
	}
	
	// buttons 
	label{
		--icon-size: clamp(22px, 9vmin, 44px);
		--button-border-size:var(--border-size);

		//border-radius:var(--border-radius);

		// this softens the border
		//box-shadow: inset 0px 0px calc(var(--border-size)) $col-white;
		
		align-items: center;

		input{
			
			// special border for these only
			// border-image: linear-gradient(
			// 	var(--col-top, hsla(0, 0%, 100%, 0.3) ), 
			// 	var(--col-bottom, hsla(0, 0%, 0%, 0.3) )
			// );

			// border-image:conic-gradient(from 90deg, #fff, #000);
		}

		// cool effect
		&:after{
			content: "";
			z-index:-1;
			opacity:0;
			background:var( --col-hover, rgba($col-white, 0.4) );
			position: absolute;
			top:0;
			left: 0;
			bottom:0;
			right:0;
			transform: scaleX(0);
			transition: transform 45ms ease-out, opacity 90ms linear;
		}
		
		&:hover, &:focus{
			
			&:after{
				transition: transform 150ms ease-out, opacity 150ms linear;
				transform:none;
				opacity:0.3;
			}
		}
	}

	button, label{
		--dir-override:column;
		--pos-override: top calc(var(--pad) - var(--border-size)) center;
		//--pos-override: top center;
		font-size: clamp(15px, -0.5385rem + 2.2vmax, 14px);
		// border-radius:24px;

		text-indent: 0;
		overflow: visible;
		// color: $col-dark;
		// background-color: $col-yellow;
		justify-content: center;
		max-height: unset;

		// prevent growing the button 
		// as this mis-aligns the icons
		flex:0 1 100%;
	}
	

	.button{

		// double channel if short and wide
		@media screen and (min-width:640px), (max-height:640px){
			--pos-override:50%;
			
			flex:0 1 calc(50% - 2px);
			flex-direction: row;
			input{
				--bg:'';
			}
		}
	}

	// composite grid layout
	label[for="toggle-advanced-mode"]{

		//color:$col-white;
		padding:var(--pad) 0;
		margin-top:var(--pad);
		// margin-bottom:var(--pad);
		border-top:1px solid var(--shade-white);
	
		// align-self: center;
		// vertical-align: middle;
		display: grid;
		grid-template-areas: 
			"slider"
			"off"
		;

		align-items: center;
		flex-basis: 100%;
		justify-content: stretch;
		flex-wrap: wrap;
		grid-template-columns: 100%;
		grid-template-rows:1fr;

		&::before{
			content:"";
			order:1;
			max-width: calc(33% - var(--pad));
			grid-area:off;
		}

		// full width input unless we are short mode
		input{
			min-width: 100%;
			grid-area:off;
			min-height:3rem;
		}

		&::after{
			content:"";
			max-width: calc(33% - var(--pad));
			grid-area:off;
			z-index:1;
			opacity:1;
			background:transparent;
			order:2;
			position: relative;
			top:auto;
			left: auto;
			bottom:auto;
			right:auto;
			transform: none;
		}

		@media  screen and (min-width:480px) {
			&::before{
				content:"For Experts";
				text-align: right;
			}
	
			input{
				min-width: 33%;
				margin:0 auto;
			}
	
			&::after{
				content:"For Beginners";
				// max-width: 33%;
				
				margin-left:calc( 66% + var(--pad));
				opacity: 0.5;
				text-align: left;
			}
		}
	}


	label[for*="button-"]{
		// hover colour should be neutral on label...
		--col-hover:var(--shade-orange);//#{$col-gray};
		
		border-radius: var(--button-curve, 16px);
		background:none;
		line-height: 1;
		// display: grid;
		flex-wrap: wrap;

		&:before,
		&:hover:before,
		&:focus:before{
			opacity:1;
		}
		input{
			//margin-left:var(--pad);
			z-index:-1;
		}
	}

	
	// animate out again?
	&.completed{

		button, label{
			--xb:100%;
			//animation-name: Shift, Fade;
			animation-direction: normal, reverse;
			//animation:Fade 900ms linear reverse both 1 0s, Shift 900ms ease-out 0s 1 both;
		}
	}
	p{
		animation-delay: 0s;
		transition-delay: 0s;
	}

	.simple{
		display: none;
	}
		
	.advanced{
		display: block;
	}

	.beginner &{

		label[for="toggle-advanced-mode"]{
			&::before{
				opacity:0.5;
			}
			&::after{
				opacity:1;
			}
		}

		.simple{
			display: block;
		}
			
		.advanced{
			display: none;
		}
	}

}
