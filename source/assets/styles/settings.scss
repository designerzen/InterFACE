@use "./_ease.scss";
@use "./_palette.scss";

:root{

	// forces dark scrollbars
	color-scheme: dark;

	// numbers 
	--hue-white:#{palette.$hue-white};
	--hue-dark:#{palette.$hue-dark};
	--hue-grey:#{palette.$hue-grey};
	--hue-gray:#{palette.$hue-gray};
	--hue-cream:#{palette.$hue-cream};
	--hue-tan:#{palette.$hue-tan};
	--hue-brown:#{palette.$hue-brown};
	--hue-blue:#{palette.$hue-blue};
	--hue-green:#{palette.$hue-green};
	--hue-yellow:#{palette.$hue-yellow};
	--hue-orange:#{palette.$hue-orange};
	--hue-red:#{palette.$hue-red};
	--hue-brand:var(--hue-red);

	// tints (use anywhere for colour with cpntrols)
	--shade-white:hsl( var(--hue-white), var( --s, 27%), var( --l, 87%) );
	--shade-dark:hsl( var(--hue-dark), var( --s, 6%), var( --l, 14%) );
	--shade-grey:hsl( var(--hue-grey), var( --s, 6%), var( --l, 50%) );
	--shade-gray:hsl( var(--hue-gray), var( --s, 6%), var( --l, 55%) );
	--shade-cream:hsl( var(--hue-cream), var( --s, 18%), var( --l, 53%) );
	--shade-tan:hsl( var(--hue-tan), var( --s, 30%), var( --l, 45%) );
	--shade-brown:hsl( var(--hue-brown), var( --s, 22%), var( --l,30%) );
	--shade-blue:hsl(  var(--hue-blue), var( --s, 18%), var( --l,33%) );
	--shade-green:hsl(  var(--hue-green), var( --s, 18%), var( --l,33%) );
	--shade-yellow:hsl(  var(--hue-yellow), var( --s, 34%), var( --l,50%) );
	--shade-orange:hsl( var(--hue-orange), var( --s, 69%), var( --l,38%) );
	--shade-red:hsl(  var(--hue-red), var( --s, 58%), var( --l,35%) );

	--shade-brand:hsl( var(--hue-active, #{palette.$hue-red}), var( --s-active, 58%), var( --l-active, 35%) );
	--shade-active:hsl( var(--hue-active, #{palette.$hue-red}), var( --s-active, 58%), var( --l-active, 35%) );
	--shade-selected:hsl( var(--hue-selected, #{palette.$hue-orange}), var( --s-selected, 58%), var( --l-selected, 35%) );
		
	// universal text drop shadow...
	// needs to be set via the themes too
	// --text-shadow: 	rgba($col-white,0.6) 0 0px 1px,
	// 				rgba($col-white,0.4) 0 1px 1px,
	// 				rgba($col-cream,0.24) 0 1px 1px,
	// 				rgba($col-cream,0.1) 0 2px 1px;

	--text-shadow: 0 2px 2px hsl( #{palette.$hue-dark}, var( --s, 6%), var( --l, 4%) );


	--alpha-shadow:0.8;

	--curve:12px;
	// global padding
	--pad:clamp(10px,2vmin,20px);


	--stroke:1px;
	// --viewport-height:100dvh;
	--viewport-max-width:1080px;


	--ease-out-back:#{ease.$easeOutBack};

	// ease speeds (see overriding media queries)
	--ease-s:calc( 185ms * var(--ease-speed, 1) );
	--ease-m:calc( 90ms * var(--ease-speed, 1) );
	--ease-q:calc( 45ms * var(--ease-speed, 1) );
	
	--duration-l:3s;

	// do not change
	--duration:calc( 1 * var(--ease-s) );//var(--ease-out-quick);
	--duration-scroll:calc( 5 * var(--ease-s) );

	// animation stagger 
	--overlap:0.3;  // the smaller, the closer together the nimations are
	--offset:0s;	// initial delay for all

	--shadow:
		1.9px 1.9px 2.1px rgba(0, 0, 0, 0.014),
		4.7px 4.7px 4.6px rgba(0, 0, 0, 0.02),
		8.8px 8.8px 8.4px rgba(0, 0, 0, 0.025),
		15.6px 15.6px 14.9px rgba(0, 0, 0, 0.03),
		29.2px 29.2px 28.9px rgba(0, 0, 0, 0.036),
		70px 70px 80px rgba(0, 0, 0, 0.05)
	;
  
	--noise:url("data:image/svg+xml,%3Csvg class='filter' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='filter-noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='6.29' numOctaves='6' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23filter-noise)'%3E%3C/rect%3E%3C/svg%3E");

	--loader-size-small: clamp(59px, 10vmin, 88px);

	// FIXME:
	--footer-gap:calc(61px);
	@media (orientation: portrait) {
		--footer-gap:var(--pad);
	}

	// no animation 
	// NB. this is also passed into JS as a safety net
	@media (prefers-reduced-motion: reduce) {
		--ease-s:1ms;
		--ease-m:1ms;
		--ease-q:1ms;
	}

	
	// TODO: use P3 display space
	@media (colu-gamut:p3){
		@supports (color:oklch(0 0 0)){
			
		}
	}

}