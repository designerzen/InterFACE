{"version":3,"file":"tf-backend-wasm.es2017.min.js","sources":["../../../../tfjs-backend-wasm/src/kernels/types.ts","../../../../tfjs-backend-wasm/src/kernels/_FusedMatMul.ts","../../../../tfjs-backend-wasm/src/kernels/unary_kernel.ts","../../../../tfjs-backend-wasm/src/kernels/Abs.ts","../../../../tfjs-backend-wasm/src/kernels/binary_kernel.ts","../../../../tfjs-backend-wasm/src/kernels/Add.ts","../../../../tfjs-backend-wasm/src/kernels/AddN.ts","../../../../tfjs-backend-wasm/src/kernels/Identity.ts","../../../../tfjs-backend-wasm/src/kernels/Transpose.ts","../../../../tfjs-backend-wasm/src/kernels/kernel_utils.ts","../../../../tfjs-backend-wasm/src/kernels/All.ts","../../../../tfjs-backend-wasm/src/kernels/Any.ts","../../../../tfjs-backend-wasm/src/kernels/ArgMax.ts","../../../../tfjs-backend-wasm/src/kernels/AvgPool.ts","../../../../tfjs-backend-wasm/src/kernels/Reshape.ts","../../../../tfjs-backend-wasm/src/kernels/BatchMatMul.ts","../../../../../tfjs-backend-cpu/src/kernels/Slice.ts","../../../../../tfjs-backend-cpu/src/kernels/StringNGrams_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/StringSplit_impl.ts","../../../../tfjs-backend-wasm/src/kernels/Slice.ts","../../../../tfjs-backend-wasm/src/kernels/BatchToSpaceND.ts","../../../../tfjs-backend-wasm/src/kernels/Cast.ts","../../../../tfjs-backend-wasm/src/kernels/Ceil.ts","../../../../tfjs-backend-wasm/src/kernels/ClipByValue.ts","../../../../tfjs-backend-wasm/src/kernels/Concat.ts","../../../../../tfjs-backend-cpu/src/kernels/Concat_impl.ts","../../../../tfjs-backend-wasm/src/kernels/Conv2D.ts","../../../../tfjs-backend-wasm/src/kernels/Conv2DBackpropInput.ts","../../../../tfjs-backend-wasm/src/kernels/Cos.ts","../../../../tfjs-backend-wasm/src/kernels/Cosh.ts","../../../../tfjs-backend-wasm/src/kernels/CropAndResize.ts","../../../../tfjs-backend-wasm/src/kernels/Cumprod.ts","../../../../tfjs-backend-wasm/src/kernels/Cumsum.ts","../../../../tfjs-backend-wasm/src/kernels/DepthToSpace.ts","../../../../tfjs-backend-wasm/src/kernels/DepthwiseConv2dNative.ts","../../../../tfjs-backend-wasm/src/kernels/Elu.ts","../../../../tfjs-backend-wasm/src/kernels/Equal.ts","../../../../tfjs-backend-wasm/src/kernels/Exp.ts","../../../../tfjs-backend-wasm/src/kernels/ExpandDims.ts","../../../../tfjs-backend-wasm/src/kernels/Fill.ts","../../../../tfjs-backend-wasm/src/kernels/FlipLeftRight.ts","../../../../tfjs-backend-wasm/src/kernels/Floor.ts","../../../../tfjs-backend-wasm/src/kernels/FloorDiv.ts","../../../../tfjs-backend-wasm/src/kernels/FusedBatchNorm.ts","../../../../tfjs-backend-wasm/src/kernels/FusedConv2D.ts","../../../../tfjs-backend-wasm/src/kernels/FusedDepthwiseConv2D.ts","../../../../tfjs-backend-wasm/src/kernels/GatherNd.ts","../../../../tfjs-backend-wasm/src/kernels/GatherV2.ts","../../../../tfjs-backend-wasm/src/kernels/Greater.ts","../../../../tfjs-backend-wasm/src/kernels/GreaterEqual.ts","../../../../tfjs-backend-wasm/src/kernels/LeakyRelu.ts","../../../../tfjs-backend-wasm/src/kernels/Less.ts","../../../../tfjs-backend-wasm/src/kernels/LessEqual.ts","../../../../tfjs-backend-wasm/src/kernels/Log.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalAnd.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalNot.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalOr.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalXor.ts","../../../../tfjs-backend-wasm/src/kernels/Max.ts","../../../../tfjs-backend-wasm/src/kernels/Maximum.ts","../../../../tfjs-backend-wasm/src/kernels/MaxPool.ts","../../../../tfjs-backend-wasm/src/kernels/Mean.ts","../../../../tfjs-backend-wasm/src/kernels/Min.ts","../../../../tfjs-backend-wasm/src/kernels/Minimum.ts","../../../../tfjs-backend-wasm/src/kernels/MirrorPad.ts","../../../../tfjs-backend-wasm/src/kernels/Multiply.ts","../../../../tfjs-backend-wasm/src/kernels/Neg.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppression_util.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV3.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV4.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV5.ts","../../../../tfjs-backend-wasm/src/kernels/NotEqual.ts","../../../../tfjs-backend-wasm/src/kernels/OneHot.ts","../../../../tfjs-backend-wasm/src/kernels/OnesLike.ts","../../../../tfjs-backend-wasm/src/kernels/Pack.ts","../../../../tfjs-backend-wasm/src/kernels/PadV2.ts","../../../../tfjs-backend-wasm/src/kernels/Pow.ts","../../../../tfjs-backend-wasm/src/kernels/Prelu.ts","../../../../tfjs-backend-wasm/src/kernels/Prod.ts","../../../../tfjs-backend-wasm/src/kernels/Range.ts","../../../../../tfjs-backend-cpu/src/kernels/Range_impl.ts","../../../../tfjs-backend-wasm/src/kernels/RealDiv.ts","../../../../tfjs-backend-wasm/src/kernels/Relu.ts","../../../../tfjs-backend-wasm/src/kernels/Relu6.ts","../../../../tfjs-backend-wasm/src/kernels/ResizeBilinear.ts","../../../../tfjs-backend-wasm/src/kernels/ResizeNearestNeighbor.ts","../../../../tfjs-backend-wasm/src/kernels/Reverse.ts","../../../../tfjs-backend-wasm/src/kernels/RotateWithOffset.ts","../../../../tfjs-backend-wasm/src/kernels/Round.ts","../../../../tfjs-backend-wasm/src/kernels/Rsqrt.ts","../../../../tfjs-backend-wasm/src/kernels/ScatterNd.ts","../../../../tfjs-backend-wasm/src/kernels/Select.ts","../../../../tfjs-backend-wasm/src/kernels/Sigmoid.ts","../../../../tfjs-backend-wasm/src/kernels/Sin.ts","../../../../tfjs-backend-wasm/src/kernels/Softmax.ts","../../../../tfjs-backend-wasm/src/kernels/SpaceToBatchND.ts","../../../../tfjs-backend-wasm/src/kernels/SparseFillEmptyRows.ts","../../../../tfjs-backend-wasm/src/kernels/SparseReshape.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentReduction.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentMean.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentSum.ts","../../../../tfjs-backend-wasm/src/kernels/SplitV.ts","../../../../tfjs-backend-wasm/src/kernels/Sqrt.ts","../../../../tfjs-backend-wasm/src/kernels/Square.ts","../../../../tfjs-backend-wasm/src/kernels/SquaredDifference.ts","../../../../tfjs-backend-wasm/src/kernels/Step.ts","../../../../tfjs-backend-wasm/src/kernels/StridedSlice.ts","../../../../tfjs-backend-wasm/src/kernels/StringNGrams.ts","../../../../tfjs-backend-wasm/src/kernels/StringSplit.ts","../../../../tfjs-backend-wasm/src/kernels/StringToHashBucketFast.ts","../../../../../tfjs-backend-cpu/src/kernels/StringToHashBucketFast_impl.ts","../../../../tfjs-backend-wasm/src/kernels/Sub.ts","../../../../tfjs-backend-wasm/src/kernels/Sum.ts","../../../../tfjs-backend-wasm/src/kernels/Tan.ts","../../../../tfjs-backend-wasm/src/kernels/Tanh.ts","../../../../tfjs-backend-wasm/src/kernels/Tile.ts","../../../../tfjs-backend-wasm/src/kernels/TopK.ts","../../../../tfjs-backend-wasm/src/kernels/Transform.ts","../../../../tfjs-backend-wasm/src/kernels/Unpack.ts","../../../../tfjs-backend-wasm/src/kernels/ZerosLike.ts","../../../../tfjs-backend-wasm/src/register_all_kernels.ts","../../../../tfjs-backend-wasm/src/flags_wasm.ts","wasm-out/tfjs-backend-wasm-threaded-simd.js","wasm-out/tfjs-backend-wasm-threaded-simd.worker.js","wasm-out/tfjs-backend-wasm.js","../../../../tfjs-backend-wasm/src/backend_wasm.ts","../../../../tfjs-backend-wasm/src/base.ts","../../../../tfjs-backend-wasm/src/version.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3,\n  leakyrelu = 4,\n  sigmoid = 5,\n  elu = 6\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, broadcast_util, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul:\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n     transposeB: boolean, activation: number, biasId: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n\n  const out = backend.makeOutput([...batchDims, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const _fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createUnaryKernelConfig(\n    kernelName: string, outType?: DataType): KernelConfig {\n  let wasmFunc: (xId: number, dtype: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // x_id\n      'number',  // dtype\n      'number',  // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, outType || x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, CppDType[x.dtype], outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    kernelFunc();\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as {} as KernelFunc,\n  setupFunc: setup,\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAll: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\n\nfunction all(args: {backend: BackendWasm, inputs: AllInputs, attrs: AllAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const allConfig: KernelConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAny: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\n\nfunction any(args: {backend: BackendWasm, inputs: AnyInputs, attrs: AnyAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAny(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const anyConfig: KernelConfig = {\n  kernelName: Any,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: any as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {backend, inputs, attrs} = args;\n  const {axis} = attrs as {} as ArgMaxAttrs;\n  const {x} = inputs as {} as ArgMaxInputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const outShape = input.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = input.shape[axes[0]];\n  wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  return out;\n}\n\nexport const argMaxConfig: KernelConfig = {\n  kernelName: ArgMax,\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs;\n  const {shape} = attrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n\n  util.assert(\n      xSize === util.sizeFromShape($shape),\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, broadcast_util, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const outShapeOuterDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n\n  wasmBatchMatMul(\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\n      b3d.shape.length, transposeA, transposeB, outId);\n\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n\n  out.shape = outShape;\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendValues, buffer, DataType, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function sliceImpl(\n    vals: BackendValues, begin: number[], size: number[], shape: number[],\n    dtype: DataType): BackendValues {\n  const isContinous = slice_util.isSliceContinous(shape, begin, size);\n  const length = util.sizeFromShape(size);\n  const xStrides = util.computeStrides(shape);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n\n    if (dtype === 'string') {\n      return (vals as Uint8Array[]).slice(flatOffset, flatOffset + length);\n    }\n\n    return (vals as TypedArray).subarray(flatOffset, flatOffset + length);\n  }\n\n  const decodedData = dtype === 'string' ?\n      backend_util.fromUint8ToStringArray(vals as Uint8Array[]) :\n      vals as TypedArray;\n\n  const inBuf = buffer(shape, dtype, decodedData);\n  const outBuf = buffer(size, dtype);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const outLoc = outBuf.indexToLoc(i);\n    const inLoc = outLoc.map((idx: number, j) => idx + begin[j]);\n    outBuf.set(inBuf.get(...inLoc), ...outLoc);\n  }\n\n  if (dtype === 'string') {\n    return backend_util.fromStringArrayToUint8(outBuf.values as string[]);\n  }\n  return outBuf.values as TypedArray;\n}\n\nexport function slice(\n    args: {inputs: SliceInputs, backend: MathBackendCPU, attrs: SliceAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {begin, size} = attrs;\n\n  assertNotComplex(x, 'slice');\n\n  const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n  slice_util.assertParamsValid(x, $begin, $size);\n\n  const vals = backend.data.get(x.dataId).values;\n  const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n  return backend.makeTensorInfo($size, x.dtype, outVals);\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'cpu',\n  kernelFunc: slice as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {util} from '@tensorflow/tfjs-core';\n\n/**\n * The StringNGramsOp class creates ngrams from ragged string data.\n * The constructor contains all attributes related to the operation such as\n * padding widths and strings, and the compute function can be used to\n * compute the ngrams for different ragged tensor inputs.\n */\nclass StringNGramsOp {\n  private separator: Uint8Array;\n  private nGramWidths: number[];\n  private padWidth: number;\n  private leftPad: Uint8Array;\n  private rightPad: Uint8Array;\n  private preserveShort: boolean;\n\n  constructor(\n      separator: string, nGramWidths: number[], leftPad: string,\n      rightPad: string, padWidth: number, preserveShortSequences: boolean) {\n    this.separator = util.encodeString(separator);\n    this.nGramWidths = nGramWidths;\n    this.leftPad = util.encodeString(leftPad);\n    this.rightPad = util.encodeString(rightPad);\n    this.padWidth = padWidth;\n    this.preserveShort = preserveShortSequences;\n  }\n\n  private getPadWidth(nGramWidth: number) {\n    // Ngrams can be padded with either a fixed pad width or a dynamic pad\n    // width depending on the 'padWidth' arg, but in no case should the padding\n    // ever be wider than 'nGramWidth' - 1.\n    return Math.min(\n        this.padWidth < 0 ? nGramWidth - 1 : this.padWidth, nGramWidth - 1);\n  }\n\n  private getNumNGrams(length: number, nGramWidth: number) {\n    const padWidth = this.getPadWidth(nGramWidth);\n    return Math.max(0, ((length + 2 * padWidth) - nGramWidth) + 1);\n  }\n\n  private createNGrams(\n      data: Uint8Array[], splitIndex: number, output: Uint8Array[],\n      outputStartIndex: number, numNGrams: number, nGramWidth: number) {\n    for (let nGramIndex = 0; nGramIndex < numNGrams; ++nGramIndex) {\n      const padWidth = this.getPadWidth(nGramWidth);\n      const leftPadding = Math.max(0, padWidth - nGramIndex);\n      const rightPadding =\n          Math.max(0, padWidth - (numNGrams - (nGramIndex + 1)));\n      const numTokens = nGramWidth - (leftPadding + rightPadding);\n      const dataStartIndex =\n          splitIndex + (leftPadding > 0 ? 0 : nGramIndex - padWidth);\n\n      // Calculate the total expected size of the nGram so we can reserve the\n      // correct amount of space in the string.\n      let nGramSize = 0;\n      // Size of the left padding.\n      nGramSize += leftPadding * this.leftPad.length;\n      // Size of the tokens.\n      for (let n = 0; n < numTokens; ++n) {\n        nGramSize += data[dataStartIndex + n].length;\n      }\n      // Size of the right padding.\n      nGramSize += rightPadding * this.rightPad.length;\n      // Size of the separators.\n      const numSeparators = leftPadding + rightPadding + numTokens - 1;\n      nGramSize += numSeparators * this.separator.length;\n\n      // Build the nGram.\n      output[outputStartIndex + nGramIndex] = new Uint8Array(nGramSize);\n      const nGram = output[outputStartIndex + nGramIndex];\n\n      let nextNGramIndex = 0;\n      const appendToNGram = (str: Uint8Array) =>\n          str.forEach((value) => nGram[nextNGramIndex++] = value);\n\n      for (let n = 0; n < leftPadding; ++n) {\n        appendToNGram(this.leftPad);\n        appendToNGram(this.separator);\n      }\n      // Only output first numTokens - 1 pairs of data and separator\n      for (let n = 0; n < numTokens - 1; ++n) {\n        appendToNGram(data[dataStartIndex + n]);\n        appendToNGram(this.separator);\n      }\n      // Handle case when there are no tokens or no right padding as these\n      // can result in consecutive separators.\n      if (numTokens > 0) {\n        // If we have tokens, then output last and then pair each separator\n        // with the right padding that follows, to ensure nGram ends either with\n        // the token or with the right pad.\n        appendToNGram(data[dataStartIndex + numTokens - 1]);\n        for (let n = 0; n < rightPadding; ++n) {\n          appendToNGram(this.separator);\n          appendToNGram(this.rightPad);\n        }\n      } else {\n        // If we don't have tokens, then the last item inserted into the nGram\n        // has been the separator from the left padding loop above. Hence,\n        // output right pad and separator and make sure to finish with a\n        // padding, not a separator.\n        for (let n = 0; n < rightPadding - 1; ++n) {\n          appendToNGram(this.rightPad);\n          appendToNGram(this.separator);\n        }\n        appendToNGram(this.rightPad);\n      }\n    }\n  }\n\n  // Data and splits together form the definition of the ragged tensor,\n  // where data is 1 dimensional and contains the values of the tensor\n  // and splits denotes the indices at which each row starts.\n  public compute(data: Uint8Array[], splits: Int32Array):\n      [Uint8Array[], Int32Array] {\n    // Validate that the splits are valid indices into data, only if there are\n    // splits specified.\n    const inputDataSize = data.length;\n    const splitsSize = splits.length;\n    if (splitsSize > 0) {\n      let prevSplit = splits[0];\n      if (prevSplit !== 0) {\n        throw new Error(`First split value must be 0, got ${prevSplit}`);\n      }\n      for (let i = 1; i < splitsSize; ++i) {\n        let validSplits = splits[i] >= prevSplit;\n        validSplits = validSplits && (splits[i] <= inputDataSize);\n        if (!validSplits) {\n          throw new Error(`Invalid split value ${splits[i]}, must be in [${\n              prevSplit}, ${inputDataSize}]`);\n        }\n        prevSplit = splits[i];\n      }\n      if (prevSplit !== inputDataSize) {\n        throw new Error(`Last split value must be data size. Expected ${\n            inputDataSize}, got ${prevSplit}`);\n      }\n    }\n\n    const numBatchItems = splitsSize - 1;\n    const nGramsSplits = util.getArrayFromDType('int32', splitsSize);\n    // If there is no data or size, return an empty ragged tensor.\n    if (inputDataSize === 0 || splitsSize === 0) {\n      const empty: Uint8Array[] = new Array(inputDataSize);\n      for (let i = 0; i <= numBatchItems; ++i) {\n        nGramsSplits[i] = 0;\n      }\n      return [empty, nGramsSplits];\n    }\n\n    nGramsSplits[0] = 0;\n    for (let i = 1; i <= numBatchItems; ++i) {\n      const length = splits[i] - splits[i - 1];\n      let numNGrams = 0;\n      this.nGramWidths.forEach((nGramWidth) => {\n        numNGrams += this.getNumNGrams(length, nGramWidth);\n      });\n      if (this.preserveShort && length > 0 && numNGrams === 0) {\n        numNGrams = 1;\n      }\n      nGramsSplits[i] = nGramsSplits[i - 1] + numNGrams;\n    }\n\n    const nGrams: Uint8Array[] = new Array(nGramsSplits[numBatchItems]);\n\n    for (let i = 0; i < numBatchItems; ++i) {\n      const splitIndex = splits[i];\n      let outputStartIdx = nGramsSplits[i];\n      this.nGramWidths.forEach((nGramWidth) => {\n        const length = splits[i + 1] - splits[i];\n        const numNGrams = this.getNumNGrams(length, nGramWidth);\n        this.createNGrams(\n            data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n        outputStartIdx += numNGrams;\n      });\n      // If we're preserving short sequences, check to see if no sequence was\n      // generated by comparing the current output start idx to the original\n      // one (nGramSplitsdata). If no ngrams were generated, then they will\n      // be equal (since we increment outputStartIdx by numNGrams every\n      // time we create a set of ngrams.)\n      if (this.preserveShort && outputStartIdx === nGramsSplits[i]) {\n        const dataLength = splits[i + 1] - splits[i];\n        // One legitimate reason to not have any ngrams when this.preserveShort\n        // is true is if the sequence itself is empty. In that case, move on.\n        if (dataLength === 0) {\n          continue;\n        }\n        // We don't have to worry about dynamic padding sizes here: if padding\n        // was dynamic, every sequence would have had sufficient padding to\n        // generate at least one nGram.\n        const nGramWidth = dataLength + 2 * this.padWidth;\n        const numNGrams = 1;\n        this.createNGrams(\n            data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n      }\n    }\n    return [nGrams, nGramsSplits];\n  }\n}\n\nexport function stringNGramsImpl(\n    data: Uint8Array[], dataSplits: Int32Array, separator: string,\n    nGramWidths: number[], leftPad: string, rightPad: string, padWidth: number,\n    preserveShortSequences: boolean): [Uint8Array[], Int32Array] {\n  return new StringNGramsOp(\n             separator, nGramWidths, leftPad, rightPad, padWidth,\n             preserveShortSequences)\n      .compute(data, dataSplits);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nfunction split(\n    str: Uint8Array, delimiters: Uint8Array, skipEmpty: boolean,\n    result: Uint8Array[]): void {\n  if (!str.length) {\n    return;\n  }\n  // When the delimiter is empty, the input is split into individual characters.\n  if (delimiters.length === 0) {\n    for (let i = 0; i < str.length; ++i) {\n      result.push(str.subarray(i, i + 1));\n    }\n    return;\n  }\n  // When there is one delimiter, the input is split only at that delimiter.\n  if (delimiters.length === 1) {\n    const delimiter = delimiters[0];\n    let f = str.indexOf(delimiter);\n    while (f !== -1) {\n      const token = str.subarray(0, f);\n      if (!skipEmpty || token.length !== 0) {\n        result.push(token);\n      }\n      str = str.subarray(f + 1);\n      f = str.indexOf(delimiter);\n    }\n    if (!skipEmpty || str.length !== 0) {\n      result.push(str);\n    }\n    return;\n  }\n  // When there are multiple delimiters, the input is split at every instance\n  // one of the delimiters appears.\n  let tokenStart = 0;\n  for (let i = 0; i < str.length + 1; i++) {\n    if ((i === str.length) || (delimiters.indexOf(str[i]) !== -1)) {\n      const token = str.subarray(tokenStart, i);\n      if (!skipEmpty || token.length !== 0) {\n        result.push(token);\n      }\n      tokenStart = i + 1;\n    }\n  }\n}\n\nexport function stringSplitImpl(\n    input: Uint8Array[], delimiter: Uint8Array,\n    skipEmpty: boolean): [TypedArray, Uint8Array[], [number, number]] {\n  const batchSize = input.length;\n\n  // Empty delimiter means split the input character by character.\n  const tokens: Uint8Array[] = [];\n\n  let outputSize = 0;\n  let maxNumEntries = 0;\n  const numIndices: number[] = new Array(batchSize);\n  for (let i = 0; i < batchSize; ++i) {\n    const prevTokensLength = tokens.length;\n    split(input[i], delimiter, skipEmpty, tokens);\n    const nEntries = tokens.length - prevTokensLength;\n    numIndices[i] = nEntries;\n    outputSize += nEntries;\n    maxNumEntries = Math.max(maxNumEntries, nEntries);\n  }\n\n  const indices = util.getArrayFromDType('int32', outputSize * 2) as TypedArray;\n  const values: Uint8Array[] = new Array(outputSize);\n  const shape: [number, number] = [batchSize, maxNumEntries];\n\n  let c = 0;\n  for (let i = 0; i < batchSize; ++i) {\n    for (let j = 0; j < numIndices[i]; ++j) {\n      // indices is a 2d tensor with shape of [outputSize, 2]\n      indices[c * 2] = i;\n      indices[c * 2 + 1] = j;\n      values[c] = tokens[c];\n      ++c;\n    }\n  }\n\n  return [indices, values, shape];\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {sliceImplCPU} from '../kernel_utils/shared';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n\n    if (x.dtype === 'string') {\n      outData.stringBytes =\n          (xVals as Uint8Array[])\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(\n          (xVals as TypedArray)\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n\n    return out;\n  }\n\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res as Uint8Array[];\n    return out;\n  }\n\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    const res =\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\n    outVals.set(res);\n  }\n\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\nimport {transpose} from './Transpose';\n\nfunction batchToSpaceND(args: {\n  inputs: BatchToSpaceNDInputs,\n  backend: BackendWasm,\n  attrs: BatchToSpaceNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, crops} = attrs;\n\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted =\n      backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords =\n      backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize =\n      backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n  const xReshaped = reshape({inputs: {x}, backend, attrs: {shape: reshaped}});\n  const xTransposed =\n      transpose({inputs: {x: xReshaped}, backend, attrs: {perm: permuted}});\n  const xTransposedReshaped = reshape(\n      {inputs: {x: xTransposed}, backend, attrs: {shape: reshapedPermuted}});\n  const result = slice({\n    inputs: {x: xTransposedReshaped},\n    backend,\n    attrs: {begin: sliceBeginCoords, size: sliceSize}\n  });\n\n  backend.disposeData(xReshaped.dataId);\n  backend.disposeData(xTransposed.dataId);\n  backend.disposeData(xReshaped.dataId);\n\n  return result;\n}\n\nexport const batchToSpaceNDConfig: KernelConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'wasm',\n  kernelFunc: batchToSpaceND as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {concatImplCPU} from '../kernel_utils/shared';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n\n  const shapes = $inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\n    });\n\n    const inputsValShapes = inputs2D.map(t => {\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\n    });\n\n    // Concats 2d tensors along axis=1.\n    outShape =\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(\n                        inputsValShapes, outShape, inputs[0].dtype,\n                        simplyConcat) as string[];\n\n    const finalOutShape =\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n\n    return out;\n  }\n\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendValues, DataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function concatImpl(\n    inputs: Array<{vals: BackendValues, shape: number[]}>, outShape: number[],\n    dtype: DataType, simplyConcat: boolean): TypedArray|string[] {\n  const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n\n  if (simplyConcat && dtype !== 'string') {\n    // Use built-in TypedArray.set() method for speed.\n    let offset = 0;\n    inputs.forEach(input => {\n      const size = util.sizeFromShape(input.shape);\n\n      (outVals as TypedArray).set(input.vals as TypedArray, offset);\n      offset += size;\n    });\n  } else {\n    let colOffset = 0;\n\n    inputs.forEach(input => {\n      const decodedData = dtype === 'string' ?\n          backend_util.fromUint8ToStringArray(input.vals as Uint8Array[]) :\n          input.vals as TypedArray;\n\n      let tIdx = 0;\n\n      for (let row = 0; row < input.shape[0]; ++row) {\n        const resIdx = row * outShape[1] + colOffset;\n        for (let col = 0; col < input.shape[1]; ++col) {\n          outVals[resIdx + col] = decodedData[tIdx++];\n        }\n      }\n\n      colOffset += input.shape[1];\n    });\n  }\n\n  return outVals;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Cosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const coshConfig: KernelConfig = createUnaryKernelConfig(Cosh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumprod, CumprodAttrs, CumprodInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumprod: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumprod = backend.wasm.cwrap(Cumprod, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumprod(\n  args: {inputs: CumprodInputs, backend: BackendWasm, attrs: CumprodAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumprod does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumprod', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumprod(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n              permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumprodConfig: KernelConfig = {\n  kernelName: Cumprod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumprod as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumsum(\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n             permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthToSpace: (\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\n    outSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n    'number',  // xId\n    'number',  // blockSize\n    'number',  // channelsLast\n    'array',   // xStrides\n    'number',  // xStridesLength\n    'array',   // outputShape\n    'array',   // outputStrides\n    'number',  // outSize\n    'number',  // outId\n  ]);\n}\n\nexport function depthToSpace(args: {\n  backend: BackendWasm,\n  inputs: DepthToSpaceInputs,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const out = backend.makeOutput(outputShape, 'float32');\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\n\n  return out;\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Elu, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const eluConfig: KernelConfig = createUnaryKernelConfig(Elu);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp, 'float32');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  attrs: ExpandDimsAttrs,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value, dtype}, backend} = args;\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFlipLeftRight: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // outId\n  ]);\n}\n\nexport function flipLeftRight(\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\n  const {inputs, backend} = args;\n  const {image} = inputs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  wasmFlipLeftRight(\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // leakyreluAlpha\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params, indices);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {CppDType} from './types';\n\nlet wasmGather: (\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // batchSize\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  // Throw error when any index is out of bound.\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const indicesVals = backend.readSync(indices.dataId) as TypedArray;\n  const axisDim = x.shape[parsedAxis];\n  for (let i = 0; i < indicesVals.length; ++i) {\n    const index = indicesVals[i];\n    util.assert(\n        index <= axisDim - 1 && index >= 0,\n        () =>\n            `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n  }\n\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\n    backend\n  });\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\n      shapeInfo.batchSize, outStridesBytes, outId);\n\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, leakyreluAlpha: number, outId: number) => void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // leakyrelu_alpha\n    'number',  // out_id\n  ]);\n}\n\nexport function leakyRelu(\n    args:\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  // According to TF API, LeakyRelu returns float32 when input is either float32\n  // or int32.\n  const out = backend.makeOutput(x.shape, 'float32');\n\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, CppDType[x.dtype], alpha, outId);\n  }\n\n  return out;\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LogicalNot} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const logicalNotConfig: KernelConfig =\n  createUnaryKernelConfig(LogicalNot);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalOr} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalOrConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalOr, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalXor} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalXorConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalXor, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Max, MaxAttrs, MaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMax: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  // TF API supports int32 input. CPU and WebGL backend also support int32\n  // input. WASM backend doesn't support it because it uses xnnpack which only\n  // supports float32.\n  //\n  // Add the following assert only for the WASM backend instead of at core op\n  // level.\n  //\n  // TODO: add support for int32 input.\n  util.assert(\n      x.dtype === 'float32',\n      () =>\n          `Error in MaxPool: only float32 input is supported. Got ${x.dtype}.`);\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMean =\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\n\nexport function mean(\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput =\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n\n  return out;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMin: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\n// Must match enum in MirrorPad.cc\nenum MirrorPaddingMode {\n  reflect = 0,\n  symmetric = 1\n}\n\nlet wasmMirrorPad: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array, mode: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // mode\n    'number',  // outId\n  ]);\n}\n\nfunction mirrorPad(args: {\n  inputs: MirrorPadInputs,\n  backend: BackendWasm,\n  attrs: MirrorPadAttrs\n}) {\n  const {inputs: {x}, backend, attrs: {paddings, mode}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmMirrorPad(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, MirrorPaddingMode[mode], outId);\n  return out;\n}\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'wasm',\n  kernelFunc: mirrorPad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {dtype, depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\n\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {fill} from './Fill';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n\n  if (util.sizeFromShape(x.shape) === 0) {\n    // Short-circuit the computation, since x doesn't have value, only\n    // the shape is used to compute output shape to pad.\n    return fill({\n      backend,\n      attrs: {shape: outShape, value: constantValue, dtype: x.dtype}\n    });\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outTensorData = backend.dataIdMap.get(out.dataId);\n  const outId = outTensorData.id;\n\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  let inputId = xId;\n  const input = x;\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(inputId, weightsId, outId);\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nimport {CppDType} from './types';\n\nlet wasmProd: (\n    xId: number, reduceSize: number,\n    dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n    'number',\n    'number',\n    'number',\n    'number'\n  ]);\n}\n\nfunction prod(args: {\n  backend: BackendWasm,\n  inputs: ProdInputs,\n  attrs: ProdAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {rangeImplCPU} from '../kernel_utils/shared';\n\nexport const range =\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\n      const {backend, attrs} = args;\n      const {start, stop, step, dtype} = attrs;\n      const values = rangeImplCPU(start, stop, step, dtype);\n\n      const out = backend.makeOutput([values.length], dtype);\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(values);\n      return out;\n    };\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataTypeMap, util} from '@tensorflow/tfjs-core';\n\nexport function rangeImpl(\n    start: number, stop: number, step: number,\n    dtype: 'float32'|'int32'): DataTypeMap['float32' | 'int32'] {\n  const sameStartStop = start === stop;\n  const increasingRangeNegativeStep = start < stop && step < 0;\n  const decreasingRangePositiveStep = stop < start && step > 1;\n\n  if (sameStartStop || increasingRangeNegativeStep ||\n      decreasingRangePositiveStep) {\n    return util.makeZerosTypedArray(0, dtype);\n  }\n\n  const numElements = Math.abs(Math.ceil((stop - start) / step));\n  const values = util.makeZerosTypedArray(numElements, dtype);\n\n  if (stop < start && step === 1) {\n    // Auto adjust the step's sign if it hasn't been set\n    // (or was set to 1)\n    step = -1;\n  }\n\n  values[0] = start;\n  for (let i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n  return values;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const realDivConfig: KernelConfig =\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number',  // halfPixelCenters\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {\n  KernelConfig,\n  KernelFunc,\n  ResizeNearestNeighbor,\n  ResizeNearestNeighborAttrs,\n  ResizeNearestNeighborInputs,\n  TensorInfo,\n  util,\n} from '@tensorflow/tfjs-core';\n\nimport { BackendWasm } from '../backend_wasm';\n\nimport { cast } from './Cast';\n\nlet wasmResizeNearestNeighbor: (\n  xId: number,\n  batch: number,\n  oldHeight: number,\n  oldWidth: number,\n  numChannels: number,\n  newHeight: number,\n  newWidth: number,\n  alignCorners: number,\n  halfPixelCenters: number,\n  outId: number\n) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeNearestNeighbor = backend.wasm.cwrap(\n    ResizeNearestNeighbor,\n    null /*void*/,\n    [\n      'number', // xId\n      'number', // batch\n      'number', // oldHeight\n      'number', // oldWidth\n      'number', // numChannels\n      'number', // newHeight\n      'number', // newWidth\n      'number', // alignCorners\n      'number', // halfPixelCenters\n      'number', // outId\n    ]\n  );\n}\n\nfunction resizeNearestNeighbor(args: {\n  backend: BackendWasm;\n  inputs: ResizeNearestNeighborInputs;\n  attrs: ResizeNearestNeighborAttrs;\n}): TensorInfo {\n  const { backend, inputs, attrs } = args;\n  const { images } = inputs;\n  const { alignCorners, halfPixelCenters, size } = attrs;\n\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: { x: images },\n      attrs: { dtype: 'float32' },\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const xId = xData.id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeNearestNeighbor(\n    xId,\n    batch,\n    oldHeight,\n    oldWidth,\n    numChannels,\n    newHeight,\n    newWidth,\n    alignCorners ? 1 : 0,\n    halfPixelCenters ? 1 : 0,\n    outId\n  );\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeNearestNeighborConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeNearestNeighbor as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nfunction softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, ReshapeAttrs, ReshapeInputs, SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs, TensorInfo, TransposeAttrs, TransposeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {padV2Config} from './PadV2';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nfunction spaceToBatchND(args: {\n  inputs: SpaceToBatchNDInputs,\n  backend: BackendWasm,\n  attrs: SpaceToBatchNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, paddings} = attrs;\n\n  const prod = util.sizeFromShape(blockShape);\n\n  const completePaddings: Array<[number, number]> = [[0, 0]];\n  completePaddings.push(...(paddings as Array<[number, number]>));\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {x},\n    backend,\n    attrs: {paddings: completePaddings, constantValue: 0}\n  }) as TensorInfo;\n\n  const reshapedPaddedShape =\n      backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(\n      reshapedPaddedShape.length, blockShape.length, false);\n\n  const flattenShape =\n      backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n\n  const reshapeInputs: ReshapeInputs = {x: paddedX};\n  const reshapeAttrs: ReshapeAttrs = {shape: reshapedPaddedShape};\n  const paddedXReshaped =\n      reshape({inputs: reshapeInputs, backend, attrs: reshapeAttrs});\n\n  const transposeInputs: TransposeInputs = {x: paddedXReshaped};\n  const transposeAttrs:\n      TransposeAttrs = {perm: permutedReshapedPaddedPermutation};\n  const paddedXT =\n      transpose({inputs: transposeInputs, backend, attrs: transposeAttrs});\n\n  const resultReshapeInputs: ReshapeInputs = {x: paddedXT};\n  const resultReshapeAttrs: ReshapeAttrs = {shape: flattenShape};\n  const result = reshape(\n      {inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs});\n\n  backend.disposeData(paddedX.dataId);\n  backend.disposeData(paddedXReshaped.dataId);\n  backend.disposeData(paddedXT.dataId);\n\n  return result;\n}\n\nexport const spaceToBatchNDConfig: KernelConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'wasm',\n  kernelFunc: spaceToBatchND as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseFillEmptyRows, SparseFillEmptyRowsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {slice} from './Slice';\n\nimport {CppDType} from './types';\n\nlet wasmSparseFillEmptyRows: (\n    indicesId: number, valuesId: number, valuesDType: number,\n    indicesCount: number, denseRows: number, rank: number,\n    defaultValueId: number, outputIndicesId: number, outputValuesId: number,\n    emptyRowIndicatorId: number, reverseIndexMapId: number,\n    exceptionValuesId: number) => number;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseFillEmptyRows =\n      backend.wasm.cwrap('SparseFillEmptyRows', 'number', [\n        'number',  // indicesId\n        'number',  // valuesId\n        'number',  // valuesDType\n        'number',  // indicesCount\n        'number',  // denseRows\n        'number',  // rank\n        'number',  // defaultValueId\n        'number',  // outputIndicesId\n        'number',  // outputValuesId\n        'number',  // emptyRowIndicatorId\n        'number',  // reverseIndexMapId\n        'number',  // exceptionValuesId\n      ]);\n}\n\nexport function sparseFillEmptyRows(args: {\n  backend: BackendWasm,\n  inputs: SparseFillEmptyRowsInputs,\n}): [TensorInfo, TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {indices, values, denseShape, defaultValue} = inputs;\n\n  const indicesCount = indices.shape[0];\n  const rank = indices.shape[1];\n  const denseRows = backend.readSync(denseShape.dataId)[0] as number;\n\n  // Set output size to maximum possible and resize later (actual result\n  // might be smaller).\n  const maxOutputIndicesShape = [indicesCount + denseRows, rank];\n\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const valuesId = backend.dataIdMap.get(values.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n\n  const outputIndices =\n      backend.makeOutput(maxOutputIndicesShape, indices.dtype);\n  const outputIndicesId = backend.dataIdMap.get(outputIndices.dataId).id;\n\n  const outputValues =\n      backend.makeOutput(maxOutputIndicesShape.slice(0, 1), values.dtype);\n  const outputValuesId = backend.dataIdMap.get(outputValues.dataId).id;\n\n  const emptyRowIndicator = backend.makeOutput([denseRows], 'bool');\n  const emptyRowIndicatorId =\n      backend.dataIdMap.get(emptyRowIndicator.dataId).id;\n\n  const reverseIndexMap = backend.makeOutput([indicesCount], indices.dtype);\n  const reverseIndexMapId = backend.dataIdMap.get(reverseIndexMap.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  const outputRows = wasmSparseFillEmptyRows(\n      indicesId, valuesId, CppDType[values.dtype], indicesCount, denseRows,\n      rank, defaultValueId, outputIndicesId, outputValuesId,\n      emptyRowIndicatorId, reverseIndexMapId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(\n              exceptionValuesArray[1]);\n      break;\n    }\n    case 2: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n    backend.disposeData(emptyRowIndicator.dataId);\n    backend.disposeData(reverseIndexMap.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  let resizedIndices = outputIndices;\n  let resizedValues = outputValues;\n  // Overestimated output size.\n  if (outputRows !== maxOutputIndicesShape[0]) {\n    resizedIndices = slice({\n      inputs: {x: outputIndices},\n      attrs: {begin: 0, size: [outputRows, rank]},\n      backend\n    });\n    resizedValues = slice({\n      inputs: {x: outputValues},\n      attrs: {begin: 0, size: outputRows},\n      backend\n    });\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n  }\n\n  return [resizedIndices, resizedValues, emptyRowIndicator, reverseIndexMap];\n}\n\nexport const sparseFillEmptyRowsConfig: KernelConfig = {\n  kernelName: SparseFillEmptyRows,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseFillEmptyRows as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseReshape, SparseReshapeInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSparseReshape: (\n    inputIndicesId: number, inputShapeId: number, newShapeId: number,\n    nnz: number, newIndicesId: number, outputShapeId: number,\n    exceptionValuesId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSparseReshape = backend.wasm.cwrap(SparseReshape, null /*void*/, [\n    'number',  // inputIndicesId\n    'number',  // inputShapeId\n    'number',  // newShapeId\n    'number',  // nnz\n    'number',  // newIndicesId\n    'number',  // outputShapeId\n    'number',  // exceptionValuesId\n  ]);\n}\n\nfunction sparseReshape(args: {\n  backend: BackendWasm,\n  inputs: SparseReshapeInputs,\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {inputIndices, inputShape, newShape} = inputs;\n\n  if (inputIndices.shape.length !== 2) {\n    throw new Error(`Input indices should be a matrix but received shape\n        ${inputIndices.shape}`);\n  }\n  if (inputShape.shape.length !== 1) {\n    throw new Error(`Input shape should be a vector but received shape\n        ${inputShape.shape}`);\n  }\n  if (newShape.shape.length !== 1) {\n    throw new Error(\n        `Target shape should be a vector but received shape ${newShape.shape}`);\n  }\n\n  const inputIndicesId = backend.dataIdMap.get(inputIndices.dataId).id;\n  const inputShapeId = backend.dataIdMap.get(inputShape.dataId).id;\n  const newShapeId = backend.dataIdMap.get(newShape.dataId).id;\n\n  const nnz = inputIndices.shape[0];\n  const outputRank = util.sizeFromShape(newShape.shape);\n\n  const newIndices = backend.makeOutput([nnz, outputRank], inputIndices.dtype);\n  const newIndicesId = backend.dataIdMap.get(newIndices.dataId).id;\n\n  const outputShape = backend.makeOutput([outputRank], newShape.dtype);\n  const outputShapeId = backend.dataIdMap.get(outputShape.dataId).id;\n\n  const exceptionValues = backend.makeOutput([3], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseReshape(\n      inputIndicesId, inputShapeId, newShapeId, nnz, newIndicesId,\n      outputShapeId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseReshapeNegativeOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();\n      break;\n    case 3: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMultipleErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    case 4: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMismatchErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(newIndices.dataId);\n    backend.disposeData(outputShape.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return [newIndices, outputShape];\n}\n\nexport const sparseReshapeConfig: KernelConfig = {\n  kernelName: SparseReshape,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseReshape as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, SparseSegmentMeanInputs, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmSparseSegmentReduction: (\n    dataId: number, dtype: number, numRow: number, indicesId: number,\n    segmentIdsId: number, outputId: number, exceptionValuesId: number,\n    isMean: boolean, defaultValue: number) => void;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseSegmentReduction =\n      backend.wasm.cwrap('SparseSegmentReduction', null /*void*/, [\n        'number',  // dataId\n        'number',  // dtype\n        'number',  // numRow\n        'number',  // indicesId\n        'number',  // segmentIdsId\n        'number',  // outputId\n        'number',  // exceptionValuesId,\n        'number',  // isMean\n        'number',  // defaultValue\n      ]);\n}\n\nexport function sparseSegmentReduction(\n    args: {\n      backend: BackendWasm,\n      inputs: SparseSegmentSumInputs|SparseSegmentMeanInputs,\n    },\n    isMean: boolean): TensorInfo {\n  const {backend, inputs} = args;\n  const {data, indices, segmentIds} = inputs;\n\n  const numIndices = indices.shape[0];\n  const segmentIdsBack =\n      (backend.readSync(segmentIds.dataId, numIndices - 1, numIndices) as\n       Int32Array)[0];\n  const lastSegmentIdPlusOne = numIndices > 0 ? segmentIdsBack + 1 : 0;\n  const outputRows = lastSegmentIdPlusOne;\n\n  if (outputRows < 0) {\n    throw (new Error(\n        backend_util\n            .getSparseSegmentReductionNegativeSegmentIdsErrorMessage()));\n  }\n\n  const outputShape = data.shape.slice();\n  outputShape[0] = outputRows;\n\n  const dataId = backend.dataIdMap.get(data.dataId).id;\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const segmentIdsId = backend.dataIdMap.get(segmentIds.dataId).id;\n\n  const output = backend.makeOutput(outputShape, data.dtype);\n  const outputId = backend.dataIdMap.get(output.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseSegmentReduction(\n      dataId, CppDType[data.dtype], data.shape[0], indicesId, segmentIdsId,\n      outputId, exceptionValuesId, isMean, 0);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNegativeSegmentIdsErrorMessage();\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(output.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return output;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentMean, SparseSegmentMeanInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentMean(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentMeanInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, true);\n}\n\nexport const sparseSegmentMeanConfig: KernelConfig = {\n  kernelName: SparseSegmentMean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentMean as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentSum, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentSum(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentSumInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, false);\n}\n\nexport const sparseSegmentSumConfig: KernelConfig = {\n  kernelName: SparseSegmentSum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentSum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig: KernelConfig =\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmStep: (xId: number, alpha: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, slice_util, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nlet wasmStridedSlice: (\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n    'number',  // xId\n    'array',   // xStrides\n    'number',  // xRank\n    'array',   // beginBytes\n    'array',   // endBytes\n    'array',   // stridesBytes\n    'array',   // outShapeBytes\n    'array',   // outStridesBytes\n    'number',  // outShapeLength\n    'number',  // outId\n  ]);\n}\n\nexport function stridedSlice(args: {\n  backend: BackendWasm,\n  inputs: StridedSliceInputs,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n\n  const {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  } = attrs;\n\n  const {\n    finalShapeSparse,\n    finalShape,\n    isIdentity,\n    sliceDim0,\n    isSimpleSlice,\n    begin: $begin,\n    end: $end,\n    strides: $strides\n  } =\n      slice_util.sliceInfo(\n          x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask);\n\n  let result;\n\n  if (isIdentity) {\n    // Optimization #1, slice is a no-op plus reshape\n    result = reshape({inputs: {x}, backend, attrs: {shape: finalShape}});\n  } else if (sliceDim0 || isSimpleSlice) {\n    // Optimization #2, slice is memory contiguous (only occurs in dim 0)\n    util.assert(\n        x.shape.length >= 1,\n        () => `Input must have rank at least 1, got: ${x.shape.length}`);\n\n    const size = slice_util.computeOutShape($begin, $end, $strides);\n    // To tolerate begin[0] > end[0] (a 0-output slice), we min(begin, end).\n    const sliced = slice({inputs: {x}, backend, attrs: {begin: $begin, size}});\n    result =\n        reshape({inputs: {x: sliced}, backend, attrs: {shape: finalShape}});\n    backend.disposeData(sliced.dataId);\n  } else {\n    const out = backend.makeOutput(finalShapeSparse, 'float32');\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const xStridesBytes =\n        new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array($begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array($end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array($strides).buffer);\n\n    const outputShapeBytes =\n        new Uint8Array(new Int32Array(finalShapeSparse).buffer);\n    const outStridesBytes = new Uint8Array(\n        new Int32Array(util.computeStrides(finalShapeSparse)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    wasmStridedSlice(\n        xId, xStridesBytes, x.shape.length, beginBytes, endBytes, stridesBytes,\n        outputShapeBytes, outStridesBytes, finalShapeSparse.length, outId);\n\n    result = reshape({inputs: {x: out}, backend, attrs: {shape: finalShape}});\n\n    backend.disposeData(out.dataId);\n  }\n\n  return result;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringNGrams, StringNGramsAttrs, StringNGramsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringNGramsImplCPU} from '../kernel_utils/shared';\n\nfunction stringNGrams(args: {\n  backend: BackendWasm,\n  inputs: StringNGramsInputs,\n  attrs: StringNGramsAttrs\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs, attrs} = args;\n  const {data, dataSplits} = inputs;\n  const {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences,\n  } = attrs;\n\n  const $data = backend.readSync(data.dataId) as Uint8Array[];\n  const $dataSplits = backend.readSync(dataSplits.dataId) as Int32Array;\n\n  const [nGrams, nGramsSplits] = stringNGramsImplCPU(\n      $data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth,\n      preserveShortSequences);\n\n  const nGramsOut = backend.makeOutput([nGrams.length], 'string');\n  const nGramsOutData = backend.dataIdMap.get(nGramsOut.dataId);\n  nGramsOutData.stringBytes = nGrams;\n\n  const nGramsSplitsOut = backend.makeOutput(dataSplits.shape, 'int32');\n  const nGramsSplitsOutVals = backend.typedArrayFromHeap(nGramsSplitsOut);\n  nGramsSplitsOutVals.set(nGramsSplits);\n\n  return [nGramsOut, nGramsSplitsOut];\n}\n\nexport const stringNGramsConfig: KernelConfig = {\n  kernelName: StringNGrams,\n  backendName: 'wasm',\n  kernelFunc: stringNGrams as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringSplit, StringSplitAttrs, StringSplitInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringSplitImplCPU} from '../kernel_utils/shared';\n\nfunction stringSplit(args: {\n  backend: BackendWasm,\n  inputs: StringSplitInputs,\n  attrs: StringSplitAttrs\n}): [TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs, attrs} = args;\n  const {input, delimiter} = inputs;\n  const {skipEmpty} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n  const delimiterVals = backend.readSync(delimiter.dataId) as Uint8Array[];\n\n  const [indices, values, shape] =\n      stringSplitImplCPU(inputVals, delimiterVals[0], skipEmpty);\n  const outputSize = values.length;\n\n  const indicesOut = backend.makeOutput([outputSize, 2], 'int32');\n  const indicesOutVals = backend.typedArrayFromHeap(indicesOut);\n  indicesOutVals.set(indices);\n\n  const valuesOut = backend.makeOutput([outputSize], 'string');\n  const valuesOutData = backend.dataIdMap.get(valuesOut.dataId);\n  valuesOutData.stringBytes = values;\n\n  const shapeOut = backend.makeOutput([2], 'int32');\n  const shapeOutVals = backend.typedArrayFromHeap(shapeOut);\n  shapeOutVals.set(shape);\n\n  return [indicesOut, valuesOut, shapeOut];\n}\n\nexport const stringSplitConfig: KernelConfig = {\n  kernelName: StringSplit,\n  backendName: 'wasm',\n  kernelFunc: stringSplit as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringToHashBucketFastImplCPU} from '../kernel_utils/shared';\n\nfunction stringToHashBucketFast(args: {\n  backend: BackendWasm,\n  inputs: StringToHashBucketFastInputs,\n  attrs: StringToHashBucketFastAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {input} = inputs;\n  const {numBuckets} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\n\nexport const stringToHashBucketFastConfig: KernelConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function stringToHashBucketFastImpl(\n    input: Uint8Array[], numBuckets: number): TypedArray {\n  const output = util.getArrayFromDType('int32', input.length) as TypedArray;\n\n  for (let i = 0; i < input.length; ++i) {\n    output[i] =\n        util.fingerPrint64(input[i]).modulo(numBuckets).getLowBitsUnsigned();\n  }\n\n  return output;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmSum: (xId: number, reduceSize: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, [\n    'number',  // input_id\n    'number',  // reduce_size\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanConfig: KernelConfig = createUnaryKernelConfig(Tan);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmTopK: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\n    outIndicesId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'number',  // k\n    'bool',    // sorted\n    'number',  // outValuesId\n    'number',  // outIndicesId\n  ]);\n}\n\nexport const topk:\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\n          const {x} = inputs;\n          const {k, sorted} = attrs;\n\n          const xId = backend.dataIdMap.get(x.dataId).id;\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n          const outputShape = x.shape.slice();\n          outputShape[outputShape.length - 1] = k;\n          const outValues = backend.makeOutput(outputShape, x.dtype);\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n          const outIndices = backend.makeOutput(outputShape, 'int32');\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n\n          wasmTopK(\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\n              outValuesId, outIndicesId);\n\n          return [outValues, outIndices];\n        };\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transform, TransformAttrs, TransformInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmTransform: (\n    imageId: number, transformsId: number, isBatchTransform: boolean,\n    batch: number, outHeight: number, outWidth: number, numChannels: number,\n    imageWidth: number, imageHeight: number, inputStrides: Uint8Array,\n    inputStridesLength: number, outputStrides: Uint8Array,\n    outputStridesLength: number, interpolationModeId: number,\n    fillModeId: number, fillValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\n    'number',  // imageId\n    'number',  // transformsId\n    'bool',    // isBatchTransform\n    'number',  // batch\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // numChannels\n    'number',  // imageWidth\n    'number',  // imageHeight\n    'array',   // inputStrides\n    'number',  // inputStridesLength\n    'array',   // outputStrides\n    'number',  // outputStridesLength\n    'number',  // interpolationModeId\n    'number',  // fillModeId\n    'number',  // fillValue\n    'number'   // outId\n  ]);\n}\n\nfunction transform(\n    args:\n        {backend: BackendWasm, inputs: TransformInputs, attrs: TransformAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {image, transforms} = inputs;\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] =\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape =\n      [batch, outHeight, outWidth,\n       numChannels] as [number, number, number, number];\n  const inputStrides =\n      new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n\n  const outputStrides =\n      new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\n\n  const out = backend.makeOutput(outShape, image.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imageData = backend.dataIdMap.get(image.dataId);\n  const imageId = imageData.id;\n\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\n  const transformsId = transformsData.id;\n\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  let fillModeId;\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n    case 'reflect':\n      fillModeId = 2;\n      break;\n    case 'wrap':\n      fillModeId = 3;\n      break;\n    case 'nearest':\n      fillModeId = 4;\n      break;\n    default:\n      fillModeId = 1;\n      break;\n  }\n\n  wasmTransform(\n      imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight,\n      outWidth, numChannels, imageWidth, imageHeight, inputStrides,\n      image.shape.length - 1, outputStrides, outShape.length - 1,\n      interpolationModeId, fillModeId, fillValue, outId);\n\n  return out;\n}\n\nexport const transformConfig: KernelConfig = {\n  kernelName: Transform,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: transform as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {_fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumprodConfig} from './kernels/Cumprod';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {eluConfig} from './kernels/Elu';\nimport {equalConfig} from './kernels/Equal';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {logConfig} from './kernels/Log';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {logicalNotConfig} from './kernels/LogicalNot';\nimport {logicalOrConfig} from './kernels/LogicalOr';\nimport {logicalXorConfig} from './kernels/LogicalXor';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {resizeNearestNeighborConfig} from './kernels/ResizeNearestNeighbor';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {sinConfig} from './kernels/Sin';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {sparseFillEmptyRowsConfig} from './kernels/SparseFillEmptyRows';\nimport {sparseReshapeConfig} from './kernels/SparseReshape';\nimport {sparseSegmentMeanConfig} from './kernels/SparseSegmentMean';\nimport {sparseSegmentSumConfig} from './kernels/SparseSegmentSum';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {stringNGramsConfig} from './kernels/StringNGrams';\nimport {stringSplitConfig} from './kernels/StringSplit';\nimport {stringToHashBucketFastConfig} from './kernels/StringToHashBucketFast';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  _fusedMatMulConfig,\n  absConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  avgPoolConfig,\n  batchMatMulConfig,\n  batchToSpaceNDConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumprodConfig,\n  cumsumConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  eluConfig,\n  equalConfig,\n  expConfig,\n  expandDimsConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  logConfig,\n  logicalAndConfig,\n  logicalNotConfig,\n  logicalOrConfig,\n  logicalXorConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realDivConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  resizeNearestNeighborConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  roundConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  selectConfig,\n  sigmoidConfig,\n  sinConfig,\n  sliceConfig,\n  softmaxConfig,\n  spaceToBatchNDConfig,\n  sparseFillEmptyRowsConfig,\n  sparseReshapeConfig,\n  sparseSegmentMeanConfig,\n  sparseSegmentSumConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  stringNGramsConfig,\n  stringSplitConfig,\n  stringToHashBucketFastConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transformConfig,\n  transposeConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ])));\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n","\nvar WasmBackendModuleThreadedSimd = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP16}function GROWABLE_HEAP_U16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU16}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_F32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!==\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};let nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(!ENVIRONMENT_IS_NODE){read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance===\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var defaultPrint=console.log.bind(console);var defaultPrintErr=console.warn.bind(console);if(ENVIRONMENT_IS_NODE){requireNodeFS();defaultPrint=(str=>fs.writeSync(1,str+\"\\n\"));defaultPrintErr=(str=>fs.writeSync(2,str+\"\\n\"))}var out=Module[\"print\"]||defaultPrint;var err=Module[\"printErr\"]||defaultPrintErr;Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var setTempRet0=value=>{tempRet0=value};var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_STACK=1;function TextDecoderWrapper(encoding){var textDecoder=new TextDecoder(encoding);this.decode=(data=>{if(data.buffer instanceof SharedArrayBuffer){data=new Uint8Array(data)}return textDecoder.decode.call(textDecoder,data)})}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoderWrapper(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoderWrapper(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){GROWABLE_HEAP_I8()[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)GROWABLE_HEAP_I8()[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":2147483648/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){if(ENVIRONMENT_IS_PTHREAD)return;PThread.terminateAllThreads();runtimeExited=true}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"onAbort\",\"arg\":what})}else{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;registerTlsInit(Module[\"asm\"][\"emscripten_tls_init\"]);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiationResult(result){receiveInstance(result[\"instance\"],result[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={};function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function killThread(pthread_ptr){GROWABLE_HEAP_I32()[pthread_ptr>>2]=0;var pthread=PThread.pthreads[pthread_ptr];delete PThread.pthreads[pthread_ptr];pthread.worker.terminate();__emscripten_thread_free_data(pthread_ptr);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker),1);pthread.worker.pthread=undefined}function cancelThread(pthread_ptr){var pthread=PThread.pthreads[pthread_ptr];pthread.worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){var pthread=PThread.pthreads[pthread_ptr];if(pthread){GROWABLE_HEAP_I32()[pthread_ptr>>2]=0;var worker=pthread.worker;PThread.returnWorkerToPool(worker)}}function _exit(status){exit(status)}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}var PThread={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){if(ENVIRONMENT_IS_PTHREAD){PThread.initWorker()}else{PThread.initMainThread()}},initMainThread:function(){var pthreadPoolSize=8;for(var i=0;i<pthreadPoolSize;++i){PThread.allocateUnusedWorker()}},initWorker:function(){noExitRuntime=false},pthreads:{},setExitStatus:function(status){EXITSTATUS=status},terminateAllThreads:function(){for(var t in PThread.pthreads){var pthread=PThread.pthreads[t];if(pthread&&pthread.worker){PThread.returnWorkerToPool(pthread.worker)}}for(var i=0;i<PThread.unusedWorkers.length;++i){var worker=PThread.unusedWorkers[i];worker.terminate()}PThread.unusedWorkers=[]},returnWorkerToPool:function(worker){PThread.runWithoutMainThreadQueuedCalls(function(){delete PThread.pthreads[worker.pthread.threadInfoStruct];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);__emscripten_thread_free_data(worker.pthread.threadInfoStruct);worker.pthread=undefined})},runWithoutMainThreadQueuedCalls:function(func){GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=0;try{func()}finally{GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=1}},receiveObjectTransfer:function(data){},threadInit:function(){for(var i in PThread.tlsInitFunctions){PThread.tlsInitFunctions[i]()}},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=(e=>{var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread)PThread.currentProxiedOperationCallerThread=worker.pthread.threadInfoStruct;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var thread=PThread.pthreads[d.targetThread];if(thread){thread.worker.postMessage(d,d[\"transferList\"])}else{err('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processQueuedMainThreadWork\"){_emscripten_main_thread_process_queued_calls()}else if(cmd===\"spawnThread\"){spawnThread(d)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread();delete worker.runPthread}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(d.target===\"setimmediate\"){worker.postMessage(d)}else if(cmd===\"onAbort\"){if(Module[\"onAbort\"]){Module[\"onAbort\"](d[\"arg\"])}}else{err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined});worker.onerror=(e=>{var message=\"worker sent an error!\";err(message+\" \"+e.filename+\":\"+e.lineno+\": \"+e.message);throw e});if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(e){worker.onerror(e)});worker.on(\"detachedExit\",function(){})}worker.postMessage({\"cmd\":\"load\",\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");PThread.unusedWorkers.push(new Worker(pthreadMainJs))},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}return PThread.unusedWorkers.pop()}};function establishStackSpace(){var pthread_ptr=_pthread_self();var stackTop=GROWABLE_HEAP_I32()[pthread_ptr+44>>2];var stackSize=GROWABLE_HEAP_I32()[pthread_ptr+48>>2];var stackMax=stackTop-stackSize;_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function exitOnMainThread(returnCode){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,0,returnCode);try{_exit(returnCode)}catch(e){handleException(e)}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function invokeEntryPoint(ptr,arg){return getWasmTableEntry(ptr)(arg)}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function registerTlsInit(tlsInitFunc,moduleExports,metadata){PThread.tlsInitFunctions.push(tlsInitFunc)}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=(()=>{var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6})}else if(ENVIRONMENT_IS_PTHREAD){_emscripten_get_now=(()=>performance.now()-Module[\"__performance_now_clock_drift\"])}else _emscripten_get_now=(()=>performance.now());var _emscripten_get_now_is_monotonic=true;function setErrNo(value){GROWABLE_HEAP_I32()[___errno_location()>>2]=value;return value}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now()}else{setErrNo(28);return-1}GROWABLE_HEAP_I32()[tp>>2]=now/1e3|0;GROWABLE_HEAP_I32()[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function ___clock_gettime(a0,a1){return _clock_gettime(a0,a1)}function ___emscripten_init_main_thread_js(tb){__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1,!ENVIRONMENT_IS_WEB);PThread.threadInit()}function ___emscripten_thread_cleanup(thread){if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({\"cmd\":\"cleanupThread\",\"thread\":thread})}function spawnThread(threadParams){var worker=PThread.getNewWorker();if(!worker){return 6}PThread.runningWorkers.push(worker);var pthread=PThread.pthreads[threadParams.pthread_ptr]={worker:worker,threadInfoStruct:threadParams.pthread_ptr};worker.pthread=pthread;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"threadInfoStruct\":threadParams.pthread_ptr};worker.runPthread=(()=>{msg.time=performance.now();worker.postMessage(msg,threadParams.transferList)});if(worker.loaded){worker.runPthread();delete worker.runPthread}return 0}function ___pthread_create_js(pthread_ptr,attr,start_routine,arg){if(typeof SharedArrayBuffer===\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return _emscripten_sync_run_in_main_thread_4(687865856,pthread_ptr,attr,start_routine,arg)}if(error)return error;var threadParams={startRoutine:start_routine,pthread_ptr:pthread_ptr,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList);return 0}return spawnThread(threadParams)}function __emscripten_default_pthread_stack_size(){return 2097152}function __emscripten_notify_thread_queue(targetThreadId,mainThreadId){if(targetThreadId==mainThreadId){postMessage({\"cmd\":\"processQueuedMainThreadWork\"})}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processThreadQueue\"})}else{var pthread=PThread.pthreads[targetThreadId];var worker=pthread&&pthread.worker;if(!worker){return}worker.postMessage({\"cmd\":\"processThreadQueue\"})}return 1}function _abort(){abort(\"\")}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_NODE)return;if(ENVIRONMENT_IS_WORKER)return;warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")}function _emscripten_get_heap_max(){return 2147483648}function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest,src,src+num)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var outerArgs=arguments;return withStackSave(function(){var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=outerArgs[2+i];GROWABLE_HEAP_F64()[b+i]=arg}return _emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync)})}var _emscripten_receive_on_main_thread_js_callArgs=[];function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=GROWABLE_HEAP_U8().length;requestedSize=requestedSize>>>0;if(requestedSize<=oldSize){return false}var maxHeapSize=_emscripten_get_heap_max();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},queueEventHandlerOnThread_iiii:function(targetThread,eventHandlerFunc,eventTypeId,eventData,userData){withStackSave(function(){var varargs=stackAlloc(12);GROWABLE_HEAP_I32()[varargs>>2]=eventTypeId;GROWABLE_HEAP_I32()[varargs+4>>2]=eventData;GROWABLE_HEAP_I32()[varargs+8>>2]=userData;_emscripten_dispatch_to_thread_(targetThread,637534208,eventHandlerFunc,eventData,varargs)})},getTargetThreadForEventCallback:function(targetThread){switch(targetThread){case 1:return 0;case 2:return PThread.currentProxiedOperationCallerThread;default:return targetThread}},getNodeNameForTarget:function(target){if(!target)return\"\";if(target==window)return\"#window\";if(target==screen)return\"#screen\";return target&&target.nodeName?target.nodeName:\"\"},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height){withStackSave(function(){var varargs=stackAlloc(12);var targetCanvasPtr=0;if(targetCanvas){targetCanvasPtr=stringToNewUTF8(targetCanvas)}GROWABLE_HEAP_I32()[varargs>>2]=targetCanvasPtr;GROWABLE_HEAP_I32()[varargs+4>>2]=width;GROWABLE_HEAP_I32()[varargs+8>>2]=height;_emscripten_dispatch_to_thread_(targetThread,657457152,0,targetCanvasPtr,varargs)})}function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread,targetCanvas,width,height){targetCanvas=targetCanvas?UTF8ToString(targetCanvas):\"\";_emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height)}function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,typeof document!==\"undefined\"?document:0,typeof window!==\"undefined\"?window:0];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||(typeof document!==\"undefined\"?document.querySelector(target):undefined);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_set_canvas_element_size_calling_thread(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;if(canvas.canvasSharedPtr){GROWABLE_HEAP_I32()[canvas.canvasSharedPtr>>2]=width;GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+4>>2]=height}if(canvas.offscreenCanvas||!canvas.controlTransferredOffscreen){if(canvas.offscreenCanvas)canvas=canvas.offscreenCanvas;var autoResizeViewport=false;if(canvas.GLctxObject&&canvas.GLctxObject.GLctx){var prevViewport=canvas.GLctxObject.GLctx.getParameter(2978);autoResizeViewport=prevViewport[0]===0&&prevViewport[1]===0&&prevViewport[2]===canvas.width&&prevViewport[3]===canvas.height}canvas.width=width;canvas.height=height;if(autoResizeViewport){canvas.GLctxObject.GLctx.viewport(0,0,width,height)}}else if(canvas.canvasSharedPtr){var targetThread=GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+8>>2];_emscripten_set_offscreencanvas_size_on_target_thread(targetThread,target,width,height);return 1}else{return-4}return 0}function _emscripten_set_canvas_element_size_main_thread(target,width,height){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,1,target,width,height);return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(canvas){return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}else{return _emscripten_set_canvas_element_size_main_thread(target,width,height)}}function _emscripten_unwind_to_js_event_loop(){throw\"unwind\"}function __webgl_enable_ANGLE_instanced_arrays(ctx){var ext=ctx.getExtension(\"ANGLE_instanced_arrays\");if(ext){ctx[\"vertexAttribDivisor\"]=function(index,divisor){ext[\"vertexAttribDivisorANGLE\"](index,divisor)};ctx[\"drawArraysInstanced\"]=function(mode,first,count,primcount){ext[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)};ctx[\"drawElementsInstanced\"]=function(mode,count,type,indices,primcount){ext[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)};return 1}}function __webgl_enable_OES_vertex_array_object(ctx){var ext=ctx.getExtension(\"OES_vertex_array_object\");if(ext){ctx[\"createVertexArray\"]=function(){return ext[\"createVertexArrayOES\"]()};ctx[\"deleteVertexArray\"]=function(vao){ext[\"deleteVertexArrayOES\"](vao)};ctx[\"bindVertexArray\"]=function(vao){ext[\"bindVertexArrayOES\"](vao)};ctx[\"isVertexArray\"]=function(vao){return ext[\"isVertexArrayOES\"](vao)};return 1}}function __webgl_enable_WEBGL_draw_buffers(ctx){var ext=ctx.getExtension(\"WEBGL_draw_buffers\");if(ext){ctx[\"drawBuffers\"]=function(n,bufs){ext[\"drawBuffersWEBGL\"](n,bufs)};return 1}}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension(\"WEBGL_multi_draw\"))}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},getSource:function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var len=length?GROWABLE_HEAP_I32()[length+i*4>>2]:-1;source+=UTF8ToString(GROWABLE_HEAP_I32()[string+i*4>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){if(!canvas.getContextSafariWebGL2Fixed){canvas.getContextSafariWebGL2Fixed=canvas.getContext;canvas.getContext=function(ver,attrs){var gl=canvas.getContextSafariWebGL2Fixed(ver,attrs);return ver==\"webgl\"==gl instanceof WebGLRenderingContext?gl:null}}var ctx=canvas.getContext(\"webgl\",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=_malloc(8);GROWABLE_HEAP_I32()[handle+4>>2]=_pthread_self();var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault===\"undefined\"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle].handle);GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);{GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\")}__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(!ext.includes(\"lose_context\")&&!ext.includes(\"debug\")){GLctx.getExtension(ext)}})}};var __emscripten_webgl_power_preferences=[\"default\",\"low-power\",\"high-performance\"];function _emscripten_webgl_do_create_context(target,attributes){var a=attributes>>2;var powerPreference=GROWABLE_HEAP_I32()[a+(24>>2)];var contextAttributes={\"alpha\":!!GROWABLE_HEAP_I32()[a+(0>>2)],\"depth\":!!GROWABLE_HEAP_I32()[a+(4>>2)],\"stencil\":!!GROWABLE_HEAP_I32()[a+(8>>2)],\"antialias\":!!GROWABLE_HEAP_I32()[a+(12>>2)],\"premultipliedAlpha\":!!GROWABLE_HEAP_I32()[a+(16>>2)],\"preserveDrawingBuffer\":!!GROWABLE_HEAP_I32()[a+(20>>2)],\"powerPreference\":__emscripten_webgl_power_preferences[powerPreference],\"failIfMajorPerformanceCaveat\":!!GROWABLE_HEAP_I32()[a+(28>>2)],majorVersion:GROWABLE_HEAP_I32()[a+(32>>2)],minorVersion:GROWABLE_HEAP_I32()[a+(36>>2)],enableExtensionsByDefault:GROWABLE_HEAP_I32()[a+(40>>2)],explicitSwapControl:GROWABLE_HEAP_I32()[a+(44>>2)],proxyContextToMainThread:GROWABLE_HEAP_I32()[a+(48>>2)],renderViaOffscreenBackBuffer:GROWABLE_HEAP_I32()[a+(52>>2)]};var canvas=findCanvasEventTarget(target);if(!canvas){return 0}if(contextAttributes.explicitSwapControl){return 0}var contextHandle=GL.createContext(canvas,contextAttributes);return contextHandle}function _emscripten_webgl_create_context(a0,a1){return _emscripten_webgl_do_create_context(a0,a1)}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,fd);return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd,offset_low,offset_high,whence,newOffset)}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_I32()[iov>>2];var len=GROWABLE_HEAP_I32()[iov+4>>2];iov+=8;for(var j=0;j<len;j++){SYSCALLS.printChar(fd,GROWABLE_HEAP_U8()[ptr+j])}num+=len}GROWABLE_HEAP_I32()[pnum>>2]=num;return 0}function _setTempRet0(val){setTempRet0(val)}PThread.init();var GLctx;var proxiedFunctionTable=[null,exitOnMainThread,_emscripten_set_canvas_element_size_main_thread,_fd_close,_fd_seek,_fd_write];var ASSERTIONS=false;var asmLibraryArg={\"__clock_gettime\":___clock_gettime,\"__emscripten_init_main_thread_js\":___emscripten_init_main_thread_js,\"__emscripten_thread_cleanup\":___emscripten_thread_cleanup,\"__pthread_create_js\":___pthread_create_js,\"_emscripten_default_pthread_stack_size\":__emscripten_default_pthread_stack_size,\"_emscripten_notify_thread_queue\":__emscripten_notify_thread_queue,\"abort\":_abort,\"emscripten_check_blocking_allowed\":_emscripten_check_blocking_allowed,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_get_now\":_emscripten_get_now,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_num_logical_cores\":_emscripten_num_logical_cores,\"emscripten_receive_on_main_thread_js\":_emscripten_receive_on_main_thread_js,\"emscripten_resize_heap\":_emscripten_resize_heap,\"emscripten_set_canvas_element_size\":_emscripten_set_canvas_element_size,\"emscripten_unwind_to_js_event_loop\":_emscripten_unwind_to_js_event_loop,\"emscripten_webgl_create_context\":_emscripten_webgl_create_context,\"exit\":_exit,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"memory\":wasmMemory||Module[\"wasmMemory\"],\"setTempRet0\":_setTempRet0};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _LogicalNot=Module[\"_LogicalNot\"]=function(){return(_LogicalNot=Module[\"_LogicalNot\"]=Module[\"asm\"][\"LogicalNot\"]).apply(null,arguments)};var _LogicalOr=Module[\"_LogicalOr\"]=function(){return(_LogicalOr=Module[\"_LogicalOr\"]=Module[\"asm\"][\"LogicalOr\"]).apply(null,arguments)};var _LogicalXor=Module[\"_LogicalXor\"]=function(){return(_LogicalXor=Module[\"_LogicalXor\"]=Module[\"asm\"][\"LogicalXor\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=function(){return(_ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var _emscripten_tls_init=Module[\"_emscripten_tls_init\"]=function(){return(_emscripten_tls_init=Module[\"_emscripten_tls_init\"]=Module[\"asm\"][\"emscripten_tls_init\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"pthread_self\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments)};var __emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=function(){return(__emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=Module[\"asm\"][\"_emscripten_thread_crashed\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"_emscripten_thread_init\"]).apply(null,arguments)};var _emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=function(){return(_emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_current_thread_process_queued_calls\"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=function(){return(_emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=Module[\"asm\"][\"emscripten_main_browser_thread_id\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_2=Module[\"_emscripten_sync_run_in_main_thread_2\"]=function(){return(_emscripten_sync_run_in_main_thread_2=Module[\"_emscripten_sync_run_in_main_thread_2\"]=Module[\"asm\"][\"emscripten_sync_run_in_main_thread_2\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=function(){return(_emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=Module[\"asm\"][\"emscripten_sync_run_in_main_thread_4\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"emscripten_run_in_main_runtime_thread_js\"]).apply(null,arguments)};var _emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=function(){return(_emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=Module[\"asm\"][\"emscripten_dispatch_to_thread_\"]).apply(null,arguments)};var __emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=function(){return(__emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=Module[\"asm\"][\"_emscripten_thread_free_data\"]).apply(null,arguments)};var __emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=function(){return(__emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=Module[\"asm\"][\"_emscripten_thread_exit\"]).apply(null,arguments)};var _memalign=Module[\"_memalign\"]=function(){return(_memalign=Module[\"_memalign\"]=Module[\"asm\"][\"memalign\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};var __emscripten_allow_main_runtime_queued_calls=Module[\"__emscripten_allow_main_runtime_queued_calls\"]=21672;Module[\"cwrap\"]=cwrap;Module[\"keepRuntimeAlive\"]=keepRuntimeAlive;Module[\"PThread\"]=PThread;Module[\"PThread\"]=PThread;Module[\"wasmMemory\"]=wasmMemory;Module[\"ExitStatus\"]=ExitStatus;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();postMessage({\"cmd\":\"loaded\"});return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){EXITSTATUS=status;if(!implicit){if(ENVIRONMENT_IS_PTHREAD){exitOnMainThread(status);throw\"unwind\"}else{}}if(keepRuntimeAlive()){}else{exitRuntime()}procExit(status)}function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){PThread.terminateAllThreads();if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n","module.exports.wasmWorkerContents = `\"use strict\";var Module={};var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\");var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",function(data){onmessage({data:data})});var fs=require(\"fs\");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,\"utf8\"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+\"\\n\");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;self.alert=threadAlert;Module[\"instantiateWasm\"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);receiveInstance(instance);Module[\"wasmModule\"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob===\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd===\"run\"){Module[\"__performance_now_clock_drift\"]=performance.now()-e.data.time;Module[\"__emscripten_thread_init\"](e.data.threadInfoStruct,0,0,1);Module[\"establishStackSpace\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].threadInit();try{var result=Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg);if(Module[\"keepRuntimeAlive\"]()){Module[\"PThread\"].setExitStatus(result)}else{Module[\"__emscripten_thread_exit\"](result)}}catch(ex){if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"keepRuntimeAlive\"]()){}else{Module[\"__emscripten_thread_exit\"](ex.status)}}else{throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"__emscripten_thread_exit\"](-1)}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processThreadQueue\"){if(Module[\"_pthread_self\"]()){Module[\"_emscripten_current_thread_process_queued_calls\"]()}}else if(e.data.cmd===\"processProxyingQueue\"){if(Module[\"_pthread_self\"]()){Module[\"_emscripten_proxy_execute_queue\"](e.data.queue)}}else{err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){err(\"worker.js onmessage() captured an uncaught exception: \"+ex);if(ex&&ex.stack)err(ex.stack);if(Module[\"__emscripten_thread_crashed\"]){Module[\"__emscripten_thread_crashed\"]()}throw ex}});`;","\nvar WasmBackendModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var setTempRet0=value=>{tempRet0=value};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function _abort(){abort(\"\")}function _emscripten_get_heap_max(){return 2147483648}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=_emscripten_get_heap_max();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov>>2];var len=HEAP32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _setTempRet0(val){setTempRet0(val)}var ASSERTIONS=false;var asmLibraryArg={\"abort\":_abort,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"setTempRet0\":_setTempRet0};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _LogicalNot=Module[\"_LogicalNot\"]=function(){return(_LogicalNot=Module[\"_LogicalNot\"]=Module[\"asm\"][\"LogicalNot\"]).apply(null,arguments)};var _LogicalOr=Module[\"_LogicalOr\"]=function(){return(_LogicalOr=Module[\"_LogicalOr\"]=Module[\"asm\"][\"LogicalOr\"]).apply(null,arguments)};var _LogicalXor=Module[\"_LogicalXor\"]=function(){return(_LogicalXor=Module[\"_LogicalXor\"]=Module[\"asm\"][\"LogicalXor\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=function(){return(_ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport {BackendWasmThreadedSimdModule} from '../wasm-out/tfjs-backend-wasm-threaded-simd';\nimport  * as wasmFactoryThreadedSimd_import from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport * as wasmFactory_import from '../wasm-out/tfjs-backend-wasm.js';\n\n// This workaround is required for importing in Node.js without using\n// the node bundle (for testing). This would not be necessary if we\n// flipped esModuleInterop to true, but we likely can't do that since\n// google3 does not use it.\nconst wasmFactoryThreadedSimd = (wasmFactoryThreadedSimd_import.default\n  || wasmFactoryThreadedSimd_import) as\ntypeof wasmFactoryThreadedSimd_import.default;\nconst wasmFactory = (wasmFactory_import.default\n  || wasmFactory_import) as typeof wasmFactory_import.default;\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  refCount: number;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule|BackendWasmThreadedSimdModule) {\n    super();\n    this.wasm.tfjs.initWithThreadsCount(threadsCount);\n    actualThreadsCount = this.wasm.tfjs.getThreadsCount();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {id: this.dataIdNextNumber++};\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType, refCount: number): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId,\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId, start?: number, end?: number):\n      backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      // Slice all elements.\n      if ((start == null || start === 0) &&\n          (end == null || end >= stringBytes.length)) {\n        return stringBytes;\n      }\n      return stringBytes.slice(start, end);\n    }\n    start = start || 0;\n    end = end || util.sizeFromShape(shape);\n    const bytesPerElement = util.bytesPerElement(dtype);\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset + start * bytesPerElement,\n        memoryOffset + end * bytesPerElement);\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  disposeData(dataId: DataId, force = false): boolean {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n\n  /** Return refCount of a `TensorData`. */\n  refCount(dataId: DataId): number {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  incRef(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    if ('PThread' in this.wasm) {\n      this.wasm.PThread.terminateAllThreads();\n    }\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {id};\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\n\nfunction createInstantiateWasmFunc(path: string) {\n  // this will be replace by rollup plugin patchWechatWebAssembly in\n  // minprogram's output.\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance, output.module);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(\n    simdSupported: boolean, threadsSupported: boolean,\n    wasmModuleFolder: string) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n\n  return wasmModuleFolder + path;\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const [simdSupported, threadsSupported] = await Promise.all([\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n  ]);\n\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        // Escape '\\n' because Blob will turn it into a newline.\n        // There should be a setting for this, but 'endings: \"native\"' does\n        // not seem to work.\n        const response = (wasmWorkerContents as string).replace(/\\n/g, '\\\\n');\n        const blob = new Blob([response], {type: 'application/javascript'});\n        return URL.createObjectURL(blob);\n      }\n\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(\n            simdSupported as boolean, threadsSupported as boolean,\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm =\n          createInstantiateWasmFunc(getPathToWasmBinary(\n              simdSupported as boolean, threadsSupported as boolean,\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n\n    let wasm: Promise<BackendWasmModule>;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\n          [`var WasmBackendModuleThreadedSimd = ` +\n           wasmFactoryThreadedSimd.toString()],\n          {type: 'text/javascript'});\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n\n    // The `wasm` promise will resolve to the WASM module created by\n    // the factory, but it might have had errors during creation. Most\n    // errors are caught by the onAbort callback defined above.\n    // However, some errors, such as those occurring from a\n    // failed fetch, result in this promise being rejected. These are\n    // caught and re-rejected below.\n    wasm.then((module) => {\n      initialized = true;\n      initAborted = false;\n\n      const voidReturnType: string = null;\n      // Using the tfjs namespace to avoid conflict with emscripten's API.\n      module.tfjs = {\n        init: module.cwrap('init', null, []),\n        initWithThreadsCount:\n            module.cwrap('init_with_threads_count', null, ['number']),\n        getThreadsCount: module.cwrap('get_threads_count', 'number', []),\n        registerTensor: module.cwrap(\n            'register_tensor', null,\n            [\n              'number',  // id\n              'number',  // size\n              'number',  // memoryOffset\n            ]),\n        disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\n        dispose: module.cwrap('dispose', voidReturnType, []),\n      };\n\n      resolve({wasm: module});\n    }).catch(reject);\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nconst wasmBinaryNames = [\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n  'tfjs-backend-wasm-threaded-simd.wasm'\n] as const ;\ntype WasmBinaryName = typeof wasmBinaryNames[number];\n\nlet wasmPath: string = null;\nlet wasmPathPrefix: string = null;\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\nlet initAborted = false;\nlet customFetch = false;\n\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  deprecationWarn(\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\n      ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\n    usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n        '`tf.ready()`');\n  }\n\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths =\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(\n          `There were no entries found for the following binaries: ` +\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n          `map providing a path for each binary, or with a string indicating ` +\n          `the directory where all the binaries can be found.`);\n    }\n  }\n\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\n\nlet threadsCount = -1;\nlet actualThreadsCount = -1;\n\n/**\n * Sets the number of threads that will be used by XNNPACK to create\n * threadpool (default to the number of logical CPU cores).\n *\n * This must be called before calling `tf.setBackend('wasm')`.\n */\nexport function setThreadsCount(numThreads: number) {\n  threadsCount = numThreads;\n}\n\n/**\n * Gets the actual threads count that is used by XNNPACK.\n *\n * It is set after the backend is intialized.\n */\nexport function getThreadsCount(): number {\n  if (actualThreadsCount === -1) {\n    throw new Error(`WASM backend not initialized.`);\n  }\n  return actualThreadsCount;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport './flags_wasm';\n\nimport {registerBackend} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm, init} from './backend_wasm';\n\nexport {BackendWasm, getThreadsCount, setThreadsCount, setWasmPath, setWasmPaths} from './backend_wasm';\nexport {version as version_wasm} from './version';\n\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '3.20.0';\nexport {version};\n"],"names":["CppDType","FusableActivation","wasmFusedMatMul","_fusedMatMulConfig","kernelName","_FusedMatMul","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","a","b","bias","preluActivationWeights","dtype","Error","transposeA","transposeB","activation","leakyreluAlpha","aId","dataIdMap","get","dataId","id","bId","biasId","biasData","shape","length","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDims","broadcast_util","assertAndGetBroadcastShape","slice","out","makeOutput","outId","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","createUnaryKernelConfig","outType","wasmFunc","x","xId","util","sizeFromShape","absConfig","Abs","createBinaryKernelConfig","supportsFullBroadcast","outputType","newShape","backend_util","addConfig","Add","addNConfig","AddN","inputIds","map","inputIdsBytes","identity","inVals","typedArrayFromHeap","set","identityConfig","Identity","wasmTranspose","transpose","reducedShape","perm","newPerm","i","push","minValIdx","j","removeOneSizeDims","permIsNoOp","outShape","inShape","Array","computeOutShape","cloned","permBytes","xShapeBytes","transposeConfig","Transpose","permuteAxesAndTranspose","axis","xShape","xRank","originalAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","xTransposed","inputWasTransposed","getInnerMostAxes","transposed","wasmAll","allConfig","All","keepDims","inputId","input","inputRank","assertAxesAreInnerMostDims","reduceShape","computeOutAndReduceShapes","reduceSize","disposeData","expandShapeToKeepDim","wasmAny","anyConfig","Any","argMaxConfig","ArgMax","transposedId","outerSize","innerSize","wasmAvgPool","avgPoolConfig","AvgPool","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","reshape","xSize","$shape","inferFromImplicitShape","assert","incRef","reshapeConfig","Reshape","wasmBatchMatMul","batchMatMulConfig","BatchMatMul","aRank","bRank","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","concat","b3dShape","a3d","b3d","a3dId","b3dId","batchDim","Math","max","sliceImpl","vals","begin","size","isContinous","slice_util","isSliceContinous","xStrides","computeStrides","flatOffset","computeFlatOffset","subarray","decodedData","fromUint8ToStringArray","inBuf","outBuf","outLoc","indexToLoc","inLoc","idx","fromStringArrayToUint8","values","StringNGramsOp","constructor","separator","nGramWidths","leftPad","rightPad","padWidth","preserveShortSequences","this","encodeString","preserveShort","getPadWidth","nGramWidth","min","getNumNGrams","createNGrams","data","splitIndex","output","outputStartIndex","numNGrams","nGramIndex","leftPadding","rightPadding","numTokens","dataStartIndex","nGramSize","n","nGram","nextNGramIndex","appendToNGram","str","forEach","value","compute","splits","inputDataSize","splitsSize","prevSplit","validSplits","numBatchItems","nGramsSplits","getArrayFromDType","empty","nGrams","outputStartIdx","dataLength","split","delimiters","skipEmpty","result","delimiter","f","indexOf","token","tokenStart","begin_","size_","parseSliceParams","xVals","readSync","outData","stringBytes","res","sliceImplCPU","outVals","rank","xStride","outOffset","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","slice3d","xStride3","endK","beginL","k","slice4d","sliceConfig","Slice","batchToSpaceNDConfig","BatchToSpaceND","blockShape","crops","prod","reduce","reshaped","getReshaped","permuted","getPermuted","reshapedPermuted","getReshapedPermuted","sliceBeginCoords","getSliceBeginCoords","sliceSize","getSliceSize","xReshaped","cast","castConfig","Cast","ceilConfig","Ceil","wasmClip","clipByValueConfig","ClipByValue","clipValueMin","clipValueMax","t","$inputs","filter","shapes","assertParamsConsistent","inputs2D","inputsValShapes","simplyConcat","offset","colOffset","tIdx","row","resIdx","col","concatImplCPU","finalOutShape","sumInnerDims","innerDims","innerDim","inOffset","concatConfig","Concat","wasmConv2d","conv2DConfig","Conv2D","filterId","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","wasmConv2DBackpropInput","conv2DBackpropInputConfig","Conv2DBackpropInput","dy","inputShape","batchSize","inHeight","inWidth","outHeight","outWidth","topPad","isChannelsLast","dxStrides","dyStrides","fltS0","fltS1","fltS2","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","dyId","cosConfig","Cos","coshConfig","Cosh","InterpolationMethod","wasmCropAndResize","cropAndResizeConfig","CropAndResize","method","extrapolationValue","cropSize","image","boxes","boxInd","numBoxes","cropHeight","cropWidth","castedData","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","wasmCumprod","cumprodConfig","Cumprod","exclusive","reverse","permutation","permutedX","permutedAxis","permutedOut","finalDim","permutedXId","permutedOutId","getUndoAxesPermutation","wasmCumsum","cumsumConfig","Cumsum","wasmDepthToSpace","depthToSpaceConfig","DepthToSpace","blockSize","outputHeight","outputWidth","outputDepth","outputShape","xStridesBytes","outputShapeBytes","outStridesBytes","wasmDepthwiseConv2d","depthwiseConv2dNativeConfig","DepthwiseConv2dNative","$dilations","eluConfig","Elu","equalConfig","Equal","expConfig","Exp","expandDims","dim","$dim","splice","expandDimsConfig","ExpandDims","fill","fillConfig","Fill","wasmFlipLeftRight","flipLeftRightConfig","FlipLeftRight","imageId","batch","imageHeight","imageWidth","numChannels","floorConfig","Floor","floorDivConfig","FloorDiv","wasmBatchNorm","fusedBatchNormConfig","FusedBatchNorm","varianceEpsilon","mean","variance","scale","meanId","varianceId","offsetId","scaleId","wasmFusedConv2d","fusedConv2DConfig","FusedConv2D","wasmFusedDepthwiseConv2d","fusedDepthwiseConv2DConfig","FusedDepthwiseConv2D","wasmGatherNd","gatherNdConfig","GatherNd","params","indices","resultShape","numSlices","gather_util","prepareAndValidate","indicesShape","sliceRank","indicesId","stridesBytes","wasmGather","gatherV2Config","GatherV2","parsedAxis","indicesVals","axisDim","index","shapeInfo","segment_util","collectGatherOpShapeInfo","flattenX","dimSize","indicesSize","flattenIndex","flattenOutputShape","stridesSize","greaterConfig","Greater","greaterEqualConfig","GreaterEqual","leakyReluConfig","LeakyRelu","alpha","lessConfig","Less","lessEqualConfig","LessEqual","logConfig","Log","logicalAndConfig","LogicalAnd","logicalNotConfig","LogicalNot","logicalOrConfig","LogicalOr","logicalXorConfig","LogicalXor","wasmMax","maxConfig","Max","reductionIndices","maximumConfig","Maximum","wasmMaxPool","maxPoolConfig","MaxPool","wasmMean","meanConfig","Mean","reductionAxes","castedInput","wasmMin","minConfig","Min","minimumConfig","Minimum","MirrorPaddingMode","wasmMirrorPad","mirrorPadConfig","MirrorPad","paddings","mode","p","prePaddingsFlat","padTuple","postPaddingsFlat","prePaddingsBytes","postPaddingsBytes","multiplyConfig","Multiply","negConfig","Neg","parseResultStruct","resOffset","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","nonMaxSuppressionV3Config","NonMaxSuppressionV3","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","nonMaxSuppressionV4Config","NonMaxSuppressionV4","padToMaxOutputSize","nonMaxSuppressionV5Config","NonMaxSuppressionV5","softNmsSigma","notEqualConfig","NotEqual","wasmOneHot","oneHotConfig","OneHot","depth","onValue","offValue","onesLikeConfig","OnesLike","packConfig","Pack","assertShapesMatch","intermediateTensorInfos","expandedT","wasmPadV2","padV2Config","PadV2","constantValue","powConfig","Pow","wasmPrelu","preluConfig","Prelu","weightsId","wasmProd","prodConfig","Prod","rangeConfig","Range","start","stop","step","makeZerosTypedArray","numElements","abs","ceil","rangeImplCPU","realDivConfig","RealDiv","reluConfig","Relu","relu6Config","Relu6","wasmResizeBilinear","resizeBilinearConfig","ResizeBilinear","images","alignCorners","halfPixelCenters","newHeight","newWidth","oldHeight","oldWidth","xData","wasmResizeNearestNeighbor","resizeNearestNeighborConfig","ResizeNearestNeighbor","wasmReverse","reverseConfig","Reverse","dims","axesBytes","outShapeBytes","wasmRotate","rotateWithOffsetConfig","RotateWithOffset","radians","fillValue","center","centerX","centerY","getImageCenter","fillValues","fillBytes","roundConfig","Round","rsqrtConfig","Rsqrt","wasmScatterNd","scatterNdConfig","ScatterNd","updates","numUpdates","outputSize","scatter_util","calculateShapes","updatesId","wasmSelect","selectConfig","Select","condition","e","conditionId","tId","eId","cRank","tRank","sigmoidConfig","Sigmoid","sinConfig","Sin","softmaxConfig","Softmax","logits","spaceToBatchNDConfig","SpaceToBatchND","completePaddings","paddedX","reshapedPaddedShape","permutedReshapedPaddedPermutation","flattenShape","paddedXReshaped","paddedXT","wasmSparseFillEmptyRows","sparseFillEmptyRowsConfig","SparseFillEmptyRows","denseShape","defaultValue","indicesCount","denseRows","maxOutputIndicesShape","valuesId","defaultValueId","outputIndices","outputIndicesId","outputValues","outputValuesId","emptyRowIndicator","emptyRowIndicatorId","reverseIndexMap","reverseIndexMapId","exceptionValues","exceptionValuesId","outputRows","exceptionValuesArray","exceptionMessage","getSparseFillEmptyRowsIndicesDenseShapeMismatch","getSparseFillEmptyRowsNegativeIndexErrorMessage","getSparseFillEmptyRowsOutOfRangeIndexErrorMessage","resizedIndices","resizedValues","wasmSparseReshape","sparseReshapeConfig","SparseReshape","inputIndices","inputIndicesId","inputShapeId","newShapeId","nnz","outputRank","newIndices","newIndicesId","outputShapeId","getSparseReshapeMultipleNegativeOneOutputDimErrorMessage","getSparseReshapeNegativeOutputDimErrorMessage","getSparseReshapeEmptyTensorZeroOutputDimErrorMessage","inputShapeValues","from","outputShapeValues","getSparseReshapeInputOutputMultipleErrorMessage","getSparseReshapeInputOutputMismatchErrorMessage","wasmSparseSegmentReduction","setup","sparseSegmentReduction","isMean","segmentIds","numIndices","segmentIdsBack","getSparseSegmentReductionNegativeSegmentIdsErrorMessage","segmentIdsId","outputId","getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage","getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage","getSparseSegmentReductionIndicesOutOfRangeErrorMessage","sparseSegmentMeanConfig","SparseSegmentMean","sparseSegmentSumConfig","SparseSegmentSum","splitVConfig","SplitV","numOrSizeSplits","$axis","splitSizes","prepareSplitSize","s","xSliceSize","xSlice","sqrtConfig","Sqrt","squareConfig","Square","squaredDifferenceConfig","SquaredDifference","wasmStep","stepConfig","Step","wasmStridedSlice","stridedSliceConfig","StridedSlice","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","finalShapeSparse","finalShape","isIdentity","sliceDim0","isSimpleSlice","$begin","$end","$strides","sliceInfo","sliced","beginBytes","endBytes","stringNGramsConfig","StringNGrams","dataSplits","$data","$dataSplits","stringNGramsImplCPU","nGramsOut","nGramsSplitsOut","stringSplitConfig","StringSplit","inputVals","delimiterVals","tokens","maxNumEntries","prevTokensLength","nEntries","c","stringSplitImplCPU","indicesOut","valuesOut","shapeOut","stringToHashBucketFastConfig","StringToHashBucketFast","numBuckets","fingerPrint64","modulo","getLowBitsUnsigned","stringToHashBucketFastImplCPU","subConfig","Sub","wasmSum","sumConfig","Sum","tanConfig","Tan","tanhConfig","Tanh","wasmTile","tileConfig","Tile","reps","newShapeBytes","wasmTopK","topKConfig","TopK","sorted","outValues","outValuesId","outIndices","outIndicesId","wasmTransform","transformConfig","Transform","transforms","interpolation","fillMode","inputStrides","outputStrides","transformsId","interpolationModeId","fillModeId","unpackConfig","Unpack","numOutputs","outIndex","outs","zerosLikeConfig","ZerosLike","kernelConfigs","kernelConfig","registerKernel","ENV","env","registerFlag","async","WebAssembly","validate","MessageChannel","port1","postMessage","SharedArrayBuffer","_scriptDir","WasmBackendModuleThreadedSimd","document","currentScript","src","undefined","__filename","GROWABLE_HEAP_I8","wasmMemory","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","beforeListeners","Module","Promise","resolve","reject","process","listeners","uncaughtException","unhandledRejection","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","moduleOverrides","Object","assign","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","versions","node","ENVIRONMENT_IS_PTHREAD","scriptDirectory","locateFile","path","nodeWorkerThreads","require$$0","dirname","__dirname","require$$1","filename","binary","readFileSync","ret","onload","onerror","readFile","err","replace","ex","ExitStatus","reason","keepRuntimeAlive","require$$2","console","error","global","Worker","self","location","href","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","performance","require$$3","defaultPrint","log","bind","defaultPrintErr","warn","writeSync","wasmBinary","warnOnce","text","shown","wasmModule","noExitRuntime","abort","EXITSTATUS","ABORT","getCFunc","ident","ccall","returnType","argTypes","opts","toC","string","len","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","func","cArgs","stack","converter","stackSave","apply","stackRestore","UTF8ToString","Boolean","convertReturnValue","onDone","TextDecoderWrapper","encoding","textDecoder","TextDecoder","decode","call","UTF8Decoder","UTF8ArrayToString","heap","maxBytesToRead","endIdx","endPtr","u0","u1","u2","String","fromCharCode","ch","ptr","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","initial","maximum","shared","byteLength","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","initRuntime","callRuntimeCallbacks","wasmBinaryFile","runDependencies","dependenciesFulfilled","what","cmd","arg","RuntimeError","isDataURI","startsWith","isFileURI","getBinary","file","ASM_CONSTS","callbacks","callback","shift","getWasmTableEntry","withStackSave","cleanupThread","pthread_ptr","pthread","PThread","pthreads","worker","returnWorkerToPool","_exit","implicit","exitOnMainThread","code","terminateAllThreads","exit","unusedWorkers","runningWorkers","tlsInitFunctions","init","initWorker","initMainThread","allocateUnusedWorker","setExitStatus","terminate","runWithoutMainThreadQueuedCalls","threadInfoStruct","__emscripten_thread_free_data","__emscripten_allow_main_runtime_queued_calls","receiveObjectTransfer","threadInit","loadWasmModuleToWorker","onFinishedLoading","onmessage","d","currentProxiedOperationCallerThread","_pthread_self","thread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","killThread","loaded","runPthread","alert","target","message","lineno","on","urlOrBlob","pthreadMainJs","getNewWorker","pop","returnCode","_emscripten_proxy_to_main_thread_js","handleException","stackTop","stackSize","_emscripten_stack_set_limits","_emscripten_get_now","wasmTableMirror","funcPtr","_clock_gettime","clk_id","tp","now","Date","___errno_location","threadParams","msg","start_routine","startRoutine","time","transferList","_emscripten_get_heap_max","sync","numCallArgs","arguments","outerArgs","serializedNumCallArgs","_emscripten_run_in_main_runtime_thread_js","_emscripten_receive_on_main_thread_js_callArgs","emscripten_realloc_buffer","grow","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","sort","y","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","event","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","varargs","_emscripten_dispatch_to_thread_","getTargetThreadForEventCallback","getNodeNameForTarget","screen","nodeName","fullscreenEnabled","webkitFullscreenEnabled","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","jsString","cString","targetCanvasPtr","lengthBytesUTF8","_malloc","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","_emscripten_set_offscreencanvas_size_on_target_thread","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","vaos","contexts","offscreenCanvases","queries","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","count","source","createContext","webGLContextAttributes","getContextSafariWebGL2Fixed","getContext","ver","gl","WebGLRenderingContext","ctx","registerContext","handle","context","attributes","version","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","ext","getExtension","divisor","first","primcount","__webgl_enable_ANGLE_instanced_arrays","vao","__webgl_enable_OES_vertex_array_object","bufs","__webgl_enable_WEBGL_draw_buffers","disjointTimerQueryExt","multiDrawWebgl","getSupportedExtensions","includes","__emscripten_webgl_power_preferences","SYSCALLS","mappings","printChar","stream","curr","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","num","proxiedFunctionTable","asmLibraryArg","__clock_gettime","a0","a1","__emscripten_init_main_thread_js","tb","__emscripten_thread_init","__emscripten_thread_cleanup","__pthread_create_js","attr","_emscripten_sync_run_in_main_thread_4","_emscripten_default_pthread_stack_size","_emscripten_notify_thread_queue","targetThreadId","mainThreadId","emscripten_check_blocking_allowed","emscripten_get_heap_max","emscripten_get_now","emscripten_memcpy_big","dest","copyWithin","emscripten_num_logical_cores","require$$4","cpus","navigator","emscripten_receive_on_main_thread_js","emscripten_resize_heap","requestedSize","oldSize","multiple","maxHeapSize","cutDown","overGrownHeapSize","emscripten_set_canvas_element_size","emscripten_unwind_to_js_event_loop","emscripten_webgl_create_context","powerPreference","contextAttributes","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","fd_close","fd_seek","fd_write","memory","setTempRet0","val","info","wasi_snapshot_preview1","receiveInstance","instance","module","tlsInitFunc","cb","exports","unshift","numWorkersToLoad","w","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","then","catch","getBinaryPromise","instantiate","instantiateStreaming","createWasm","calledRun","listenersAdded","actualModule","name","run","preRun","setTimeout","doRun","postRun","numericArgs","every","runCaller","listener","WasmBackendModule","tmpDispose","removeListener","ready","wasmFactoryThreadedSimd","wasmFactoryThreadedSimd_import.default","wasmFactoryThreadedSimd_import","wasmFactory","wasmFactory_import.default","BackendWasm","KernelBackend","super","tfjs","initWithThreadsCount","threadsCount","actualThreadsCount","getThreadsCount","DataStorage","engine","write","dataIdNextNumber","move","numDataIds","kernelMs","refCount","memoryOffset","numBytes","bytesPerElement","registerTensor","byteOffset","typedArrayFromBuffer","force","has","delete","floatPrecision","getMemoryOffset","dispose","unreliable","getPathToWasmBinary","simdSupported","threadsSupported","wasmModuleFolder","wasmPath","wasmFileMap","all","getAsync","factoryConfig","prefix","endsWith","wasmWorkerContents","blob","Blob","URL","createObjectURL","wasmPathPrefix","customFetch","instantiateWasm","imports","arrayBuffer","initialized","onAbort","initAborted","mainScriptUrlOrBlob","toString","wasmBinaryNames","numThreads","usePlatformFetch","deprecationWarn","prefixOrFileMap","missingPaths","join"],"mappings":"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"}