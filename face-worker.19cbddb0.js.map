{"mappings":"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;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC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IAClE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAE;IAAE;QAAC;QAAG;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAClE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAG;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAE;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAClE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAI;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAI;IAAE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAG;IAChE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAI;KAAG;IAAE;QAAC;QAAI;KAAI;IAAE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAI;IAChE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAI;KAAG;IAAE;QAAC;QAAI;KAAG;IAAE;QAAC;QAAI;KAAG;IAChE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAI;KAAG;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AAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAE;IAAE;QAAC;QAAG;KAAI;IAClE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAI;IACpE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAG;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAE;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAClE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACpE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAG;KAAI;IAAE;QAAC;QAAK;KAAE;IAAE;QAAC;QAAG;KAAE;IAC5D;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAE;IAAE;QAAC;QAAG;KAAI;IAAE;QAAC;QAAK;KAAI;IAClE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACpE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAE;IAAE;QAAC;QAAG;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAClE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAI;IACpE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAG;IAAE;QAAC;QAAI;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACpE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;QAAG;KAAI;IAAE;QAAC;QAAK;KAAE;IAAE;QAAC;QAAG;KAAE;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAC9D;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IAAE;QAAC;QAAK;KAAI;IACtE;QAAC;Q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CA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAGM,MAAM,8BAA8B;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAGM,MAAM,iBAAiB;IAC7B;IAAE;IAAE;IAAE;IAAE;IAAE;IAAE;IAAE;IAAE;IAAE;IAAG;IACpB;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;CAC5B;AACM,MAAM,iBAAiB;IAC7B;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAC3B;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;CAC9B;AAGM,MAAM,gBAAgB;IACzB;IACH;IACG;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAGM,MAAM,iBAAiB;IAC1B;IACH;IACG;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAIM,MAAM,iBAAiB;IAC1B;IACH;IACG;IACA;IACA;CACH;AACM,MAAM,kBAAkB;IAC3B;IACH;IACG;IACA;IACA;CACH;AAIM,MAAM,mBAAmB;IAC/B,YAAY;QACX;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QACvD;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QACvD;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KACvD;IAED,gBAAgB;QAAC;QAAI;QAAK;QAAI;QAAI;QAAI;QAAG;QAAK;QAAK;QAAK;QAAK;KAAI;IACjE,gBAAgB;QAAC;QAAK;QAAI;QAAK;QAAI;QAAI;QAAK;QAAK;QAAK;QAAK;KAAI;IAC/D,gBAAgB;QAAC;QAAI;QAAK;QAAI;QAAI;QAAI;QAAI;QAAK;QAAK;QAAK;QAAK;KAAI;IAClE,gBAAgB;QAAC;QAAI;QAAI;QAAI;QAAK;QAAI;QAAI;QAAK;QAAK;QAAK;QAAK;KAAI;IAElE,gBAAgB;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACnD,gBAAgB;QAAC;QAAI;QAAG;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC1D,gBAAgB;QAAC;QAAK;QAAI;QAAI;QAAI;QAAI;QAAI;KAAI;IAC9C,gBAAgB;QAAC;QAAK;QAAI;QAAK;QAAI;QAAI;QAAI;QAAI;QAAK;KAAI;IACxD,gBAAgB;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACnD,gBAAgB;QAAC;QAAK;QAAI;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5D,gBAAgB;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAE7D,mBAAmB;QAAC;QAAK;QAAI;QAAI;QAAK;QAAI;QAAK;QAAI;KAAI;IACvD,mBAAmB;QAAC;QAAI;QAAK;QAAI;QAAI;QAAI;KAAG;IAE5C,cAAc;QAAC;QAAK;QAAK;QAAK;QAAK;KAAI;IAEvC,eAAe;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAClD,eAAe;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5D,eAAe;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAClD,eAAe;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5D,eAAe;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAClD,eAAe;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5D,eAAe;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAE5D,kBAAkB;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC1D,kBAAkB;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAEhD,aAAa;QAAC;QAAK;QAAK;QAAK;QAAK;KAAI;IAEtC,mBAAmB;QAAC;KAAI;IAExB,SAAS;QAAC;KAAE;IACZ,YAAY;QAAC;KAAE;IACf,iBAAiB;QAAC;KAAG;IACrB,gBAAgB;QAAC;KAAI;IAErB,YAAY;QAAC;KAAI;IACjB,WAAW;QAAC;KAAI;AACjB","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-ec5000c57f6e442d.js","source/models/face-worker.js","source/models/face-model-calculations.js","source/maths/maths.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","source/models/face-landmark-constants.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"a8fb9c35fdafe466\";module.bundle.HMR_BUNDLE_ID = \"acb42cff19cbddb0\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","\r\n\r\nimport { enhanceFaceModelPrediction} from './face-model-calculations'\r\n\r\n// input prediction\r\n// output prediction & ...object updates\r\n\r\n// Pass prediction into the worker\r\n// TODO: pass PREDICTIONS\r\nself.onmessage = prediction => {\r\n\r\n\t// Clone the object??? or too much performance hit for immutibility?\r\n\tconst output = enhanceFaceModelPrediction(prediction.data)\r\n\r\n\t// magic tricks...\r\n\tpostMessage( output )\r\n}\r\n","import {\r\n\tclamp, \r\n\thypoteneuse2D,hypoteneuse3D,\r\n\tdistanceBetween2Points,distanceBetween3Points,\r\n\tdetermineAngle, twist, \r\n\tTAU,HALF_PI\r\n} from '../maths/maths'\r\n\r\n\r\nimport {\r\n\tFACE_CONTOURS,\r\n\tFACE_CONTOURS_LIPS,\r\n\tFACE_CONTOURS_OUTER_TOP_LIP,\r\n\tLIP_PATH_OUTER,\r\n\tLIP_PATH_INNER,\r\n\tMOUTH_SHAPE_CLOSED,\r\n\tMOUTH_SHAPE_O,\r\n\tMOUTH_SHAPE_E,\r\n\tMOUTH_SHAPE_I,\r\n\tMOUTH_SHAPE_U,\r\n\tRATIO_OF_MOUTH_TO_FACE,\r\n\tEYE_CLOSED_AT,\r\n\tPITCH_SCALE\r\n} from './face-landmark-constants'\r\n\r\n\r\n// ** === ^ == Math.pow in ECMA22\r\nconst {PI, abs, sqrt, atan2, tan} = Math\r\n\r\n\r\n// What the face is observing in a cone shape...\r\nconst fieldOfView = (dfov, width, height) => {\r\n    const hypothenuse = sqrt( width * width + height * height )\r\n    const tanDFOV = tan(dfov / 2)\r\n    return [2 * atan(width * tanDFOV / hypothenuse), 2 * atan(height * tanDFOV / hypothenuse)]\r\n}\r\n\r\n// const setOrientation = () => {\r\n\t\r\n\r\n// }\r\n\r\n// // NB. we will use time for smoothing out the eyes\r\n// const setEyeData = (annotations, prediction, time, flipHorizontally = true) => {\r\n\t\r\n// }\r\n\r\n// \r\n\r\n\r\n\r\n/**\r\n * TODO: Implement a cache of eyes so that we can learn on the go\r\n * @param {Object} prediction - ML TF model\r\n * @param {Number} time - time elapsed\r\n * @param {Boolean} flipHorizontally - are we flipping the data?\r\n * @returns {Object} enhanced prediction with extra info and data\r\n * \r\n * annotations\r\n * annotations.faceOval\r\n * annotations.leftEye\r\n * annotations.leftEyebrow\r\n * annotations.leftIris\r\n * annotations.rightEye\r\n * annotations.rightEyebrow\r\n * annotations.rightIris\r\n * annotations.outerLip \r\n * annotations.innerLip \r\n * \r\n * headHeight\r\n * \r\n */\r\nexport const enhanceFaceModelPrediction = (prediction, time, flipHorizontally = true) => {\r\n\r\n\tif (!prediction)\r\n\t{\r\n\t\tthrow Error(\"This is *not* a valid prediction\")\r\n\t}\r\n\r\n\t// first create an output that contains everything then overwrite it\r\n\t// you can remove this for speed reasons if you are providing a full options config\r\n\t// options = { ...DEFAULT_OPTIONS, ...options }\r\n\t\r\n\tconst { keypoints } = prediction\r\n\r\n\t// This is a virtual line from the top of the head to the bottom...\r\n\t// we can use this and the eyes to determine face roll, pitch, yaw\r\n\t// we can use the bounding box or actual face mesh coords\r\n\tlet topOfHead = 0\r\n\tlet bottomOfHead = Number.POSITIVE_INFINITY\r\n\r\n\tlet referenceTopOfHead\r\n\tlet referenceBottomOfHead \r\n\r\n\tlet pointApexOfHead = keypoints[152]\r\n\tlet pointBottomOfChin  = keypoints[10]\r\n\r\n\t// Try and add all the data points we need here into annotations\r\n\tconst annotations = {\r\n\t\t\r\n\t\tfaceOval:FACE_CONTOURS.faceOval.map( d => {\r\n\t\t\t\r\n\t\t\tconst point = keypoints[d] \r\n\r\n\t\t\t// find the point with the highest y\r\n\t\t\tif (point.y > topOfHead )\r\n\t\t\t{\r\n\t\t\t\ttopOfHead = point.y\r\n\t\t\t\treferenceTopOfHead = d\r\n\t\t\t}\r\n\r\n\t\t\t// find the point with the lowest y\r\n\t\t\tif (point.y < bottomOfHead )\r\n\t\t\t{\r\n\t\t\t\tbottomOfHead = point.y\r\n\t\t\t\treferenceBottomOfHead = d\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn point\r\n\t\t}),\r\n\t\t\r\n\t\tlips:FACE_CONTOURS.lips.map( d => keypoints[d] ),\r\n\t\tleftEye:FACE_CONTOURS.leftEye.map( d => keypoints[d] ),\r\n\t\tleftEyebrow:FACE_CONTOURS.leftEyebrow.map( d => keypoints[d] ),\r\n\t\tleftIris:FACE_CONTOURS.leftIris.map( d => keypoints[d] ),\r\n\t\trightEye:FACE_CONTOURS.rightEye.map( d => keypoints[d] ),\r\n\t\trightEyebrow:FACE_CONTOURS.rightEyebrow.map( d => keypoints[d] ),\r\n\t\trightIris:FACE_CONTOURS.rightIris.map( d => keypoints[d] )\r\n\t}\r\n\r\n\t// FIXME: There is one point missing here\r\n\tannotations.outerLip = LIP_PATH_OUTER.map( d => annotations.lips[d] )\r\n\tannotations.innerLip = LIP_PATH_INNER.map( d => annotations.lips[d] )\r\n\r\n\t// Head ------------------------------------------------------\r\n\t\r\n\t// 1, 4, 5, 195, 197 are all nose based\r\n\tconst noseTip = keypoints[4]\r\n\tconst forehead = keypoints[9]\r\n\tconst feltrum = keypoints[0]\r\n\r\n\t// const pointTopOfHead = keypoints[109]\r\n\t// const pointBottomOfHead = keypoints[400]\r\n\t// const centerOfHead = keypoints[168]\r\n\t// const forehead = keypoints[10]\r\n\t\r\n\t// Calculate some sizes : size of head from chin to top\r\n\t// const headHeight = bottomOfHead[1] - topOfHead[1]\r\n\tconst headHeight = hypoteneuse2D( pointApexOfHead, pointBottomOfChin )\r\n\tprediction.headHeight = headHeight\r\n\t//console.error(\"head\", {topOfHead: pointTopOfHead, bottomOfHead: pointBottomOfHead}, headHeight )\r\n\t\r\n\t// This is a virtual line from the top of the head to the bottom...\r\n\t// we can use this and the eyes to determine face roll, pitch, yaw\r\n\t// we can use the bounding box or actual face mesh coords\r\n\tannotations.headVertical = [\r\n\t\tpointApexOfHead, noseTip, pointBottomOfChin\r\n\t]\r\n\r\n\t// Eyes ------------------------------------------------------\r\n\r\n\t// IRIS & PUPIL data\r\n\t// Extract pupil central location\r\n\tconst createPupilData = irisData => {\r\n\r\n\t\tconst inner = irisData[0]\r\n\t\tconst up = irisData[1]\r\n\t\tconst outer = irisData[2]\r\n\t\tconst down = irisData[3]\r\n\t\t\r\n\t\tconst irisWidth = Math.abs( inner.x - outer.x )\r\n\t\tconst irisHeight = down.y - up.y\r\n\t\t// const irisHeight = Math.abs( up.y - down.y)\r\n\t\r\n\t\tconst pupil = {\r\n\t\t\tx: irisWidth * 0.5 + outer.x,\r\n\t\t\ty: irisHeight * 0.5 + up.y,\r\n\t\t\tdiameter : Math.max(irisWidth , irisHeight)\r\n\t\t}\r\n\r\n\t\treturn pupil\r\n\t}\r\n\r\n\tconst irisDataLeft = createPupilData(annotations.leftIris)\r\n\tconst irisDataRight = createPupilData(annotations.rightIris)\r\n\r\n\t//const distanceBetweenIrises = hypoteneuse2D( irisDataLeft, irisDataRight )\r\n\t// const pointBetweenTheEyes = keypoints[168]\r\n\r\n\t// caruncles are the inner eye socket squishy bit near your nose\r\n\tconst pointLeftEyeSocketOuter = keypoints[362]\r\n\tconst pointLeftEyeCaruncle = keypoints[263]\r\n\r\n\tconst pointRightEyeSocketOuter = keypoints[133]\r\n\tconst pointRightEyeCaruncle = keypoints[33]\r\n\r\n\t// this is the distance between eye parts on the face and can be used\r\n\t// for both general gaze direction and scaling, as well as head rotations\r\n\t// const widthLeftEye = hypoteneuse2D( pointLeftEyeSocketOuter, pointLeftEyeCaruncle )\r\n\t// const widthRightEye = hypoteneuse2D( pointRightEyeCaruncle, pointRightEyeSocketOuter)\r\n\t\r\n\t// const distanceFromOuterEyeToOuterEye = hypoteneuse2D( pointLeftEyeSocketOuter, pointRightEyeSocketOuter )\r\n\t// const distanceBetweenCaruncles = hypoteneuse2D( pointLeftEyeCaruncle, pointRightEyeCaruncle)\r\n\t\r\n\tconst leftEyeSocketWidth = hypoteneuse2D( pointLeftEyeSocketOuter, pointLeftEyeCaruncle)\r\n\tconst rightEyeSocketWidth = hypoteneuse2D( pointRightEyeSocketOuter, pointRightEyeCaruncle )\r\n\t\r\n\tannotations.leftEyeSocket = [\r\n\t\tpointLeftEyeSocketOuter, pointLeftEyeCaruncle\r\n\t]\r\n\t\r\n\tannotations.rightEyeSocket = [\r\n\t\tpointRightEyeSocketOuter, pointRightEyeCaruncle\r\n\t]\r\n\t\r\n\tannotations.leftPupil = irisDataLeft\r\n\tannotations.rightPupil = irisDataRight\r\n\r\n\t// which ways are the eyes pointing to? we want from -1 -> 1\r\n\t// left is -ve right is +ve\r\n\tprediction.rightEyeDirection = (( irisDataRight.x  - pointRightEyeCaruncle.x ) / rightEyeSocketWidth) * -2 + 1\r\n\tprediction.leftEyeDirection = (( irisDataLeft.x  - pointLeftEyeSocketOuter.x ) / leftEyeSocketWidth) * 2 - 1\r\n\t\r\n\tprediction.eyeDirection = 0.5 * ( prediction.rightEyeDirection + prediction.leftEyeDirection ) \r\n\tprediction.isLookingRight = prediction.eyeDirection > 0.5\r\n\r\n\t// Which way are we facing?\r\n\t// const eyeDirection = widthLeftEye / widthRightEye\r\n\r\n\t// const leftEyeSocketHeight =\thypoteneuse2D( annotations.leftEye[0], annotations.leftEye[4] )\r\n\t// const rightEyeSocketHeight = hypoteneuse2D( annotations.rightEye[0], annotations.rightEye[4] )\r\n\t\r\n\t// Eye socket extents - size of each individual eye sockets heights (eye lid openings)\r\n\t// const leftEyeSocketHeight = hypoteneuse2D( keypoints[257], keypoints[253] )\r\n\t// const rightEyeSocketHeight = hypoteneuse2D( keypoints[27], keypoints[23] )\r\n\t \r\n\t// const leftEyeSocketWidth = hypoteneuse2D( annotations.rightEye[0], annotations.rightEye[4] )\r\n\t// const rightEyeSocketWidth = hypoteneuse2D( annotations.rightEye[0], annotations.rightEye[4] )\r\n\t\r\n\t// console.error(\"eyes\", {pointBetweenTheEyes,distanceBetweenIrises,leftEyeSocketHeight,rightEyeSocketHeight, l:annotations.leftEye, r:annotations.rightEye, leftEyeSocketWidth, rightEyeSocketWidth }, eyes )\r\n\t\r\n\t// - MOUTH ------------------------------------------------------\r\n\r\n\t// top 15 indexes are top lip, bottom are all the rest\r\n\t\r\n\t// annotations.lips[0 - 7]\r\n\t// annotations.lips[8]\r\n\t// annotations.lips[9 - 14]\r\n\t// ------------------------\r\n\t// annotations.lips[15 - 26]\r\n\t// annotations.lips[27]\r\n\t// annotations.lips[28 - 39]\r\n\r\n\tconst lips = annotations.lips\r\n\tconst lipsLength = lips.length\r\n\r\n\tconst lipLength = 10\r\n\tconst midLipLength = 5\r\n\r\n\t// Correct (ish)\r\n\tconst lipUpperLeft = lips[0]\r\n\tconst lipLowerLeft = lips[lipLength * 2]\r\n\r\n\t// Correct\r\n\tconst lipUpperRight = lips[lipLength * 2]\r\n\tconst lipLowerRight = lips[lipsLength-1]\r\n\r\n\t// Correct\r\n\t// const lipOuterUpperMiddle = lips[lipLength + midLipLength]\r\n\t// const lipOuterLowerMiddle = lips[midLipLength]\r\n\t\r\n\t// Correct\r\n\tconst lipInnerUpperMiddle = lips[lipsLength - midLipLength - 1]\r\n\tconst lipInnerLowerMiddle = lips[lipLength * 2 + midLipLength]\r\n\t\r\n\tconst lipVerticalOpening = hypoteneuse2D( lipInnerUpperMiddle, lipInnerLowerMiddle )\t\r\n\t\r\n\t// Average of both\r\n\tconst lipHorizontalOpening = (\r\n\t\thypoteneuse2D( lipLowerLeft, lipLowerRight ) + \r\n\t\thypoteneuse2D( lipUpperLeft, lipUpperRight )\r\n\t) * 0.5\r\n\t\r\n\tconst mouthSizeInTheory = headHeight * RATIO_OF_MOUTH_TO_FACE\r\n\tconst mouthOpeness = lipVerticalOpening / mouthSizeInTheory\r\n\tconst isMouthOpen = mouthOpeness > 0.2\r\n\t// is wider than tall?\r\n\tconst isMouthWide = lipHorizontalOpening > lipVerticalOpening\r\n\r\n\t//const lipVerticalOpening = lipVerticalOpeningX * lipVerticalOpeningX + lipVerticalOpeningY * lipVerticalOpeningY\r\n\tprediction.mouthRange = lipVerticalOpening\r\n\tprediction.mouthRatio = mouthOpeness\r\n\r\n\t// TODO: this is the size of the mouth as a factor of the head size\r\n\tprediction.mouthOpen = isMouthOpen\r\n\r\n\tprediction.mouthHeight = lipVerticalOpening\r\n\tprediction.mouthWidth = lipHorizontalOpening\r\n\r\n\t// TODO: FIXME: mouth shape fixing\r\n\t// if it is wider than tall - E\r\n\t// if it is about the same width as height - O\r\n\tprediction.mouthShape = isMouthOpen ? \r\n\t\t\t\t\t\t\t\t(!isMouthWide ? \r\n\t\t\t\t\t\t\t\t\tMOUTH_SHAPE_O : \r\n\t\t\t\t\t\t\t\t\tMOUTH_SHAPE_E)\r\n\t\t\t\t\t\t\t\t: MOUTH_SHAPE_CLOSED\r\n\t\t\t\t\t\t\t\r\n\r\n\r\n\t// TODO: Mouth normal vector - an arrow coming out of the mouth the size\r\n\t// of the amplitude so that we can draw and visualise it on screen\r\n\r\n\t// console.log(\"mouthRatio\", lipVerticalOpening, {ratio:lipVerticalOpening / headHeight, prediction})\r\n\r\n\r\n\t// These are the angles caused by smiling\r\n\t// We add them together and deduct them from 180 to find\r\n\t// the kinked angle of the top lip between left - feltrum - right\r\n\t// const leftSmirk = abs( determineAngle(lipUpperLeft, lipOuterUpperMiddle) ) / PI\r\n\t// const rightSmirk = abs( determineAngle(lipOuterUpperMiddle, lipUpperRight) ) / PI\r\n\r\n\t// // 0 -> 1 ()\r\n\t// // FIXME: the range is pretty much empty between 0->0.9\r\n\t// prediction.happiness = 10 * (((leftSmirk + rightSmirk) * 0.5)  - 0.9)\r\n\t// // 0 -> 1\r\n\t// prediction.leftSmirk = (leftSmirk - 1) * 100000\r\n\t// prediction.rightSmirk = (rightSmirk - 1) * 100000\r\n\r\n\r\n\t// - ORIENTATION ------------------------------------------------\r\n\t\r\n\t// To determine the orientation and angle of the head we do\r\n\t// some triangulation to draw right angles where we can infer\r\n\t// using trigonometry the angles against themn\r\n\t\r\n\t// and now we find two edges of the triangle and relate one\r\n\t// to each known width - left eye and right eye space\r\n\t// const widthBetweenLeftEyeAndCentre = (pointBetweenTheEyes.x - pointLeftEyeSocketOuter.x) * -1\r\n\t// const widthBetweenRightEyeAndCentre = pointBetweenTheEyes.x - pointRightEyeSocketOuter.x\r\n\t\r\n\t// FIXME: as this is -1 -> 1 we need to wrap it better\r\n\tconst rawYaw = flipHorizontally ?  \r\n\t\t\t\t\t\tleftEyeSocketWidth / rightEyeSocketWidth :\r\n\t\t\t\t\t\trightEyeSocketWidth / leftEyeSocketWidth  \r\n\r\n\tconst regulatedYaw = (rawYaw - 1) * 2\r\n\t\r\n\t// this maps from 2 -> 0\r\n\tconst yaw = clamp( regulatedYaw < 0 ? regulatedYaw * 2 : regulatedYaw, -1, 1 )\r\n\t\r\n\r\n\r\n\t// if either eye is lower than the other : \r\n\t// triangle between eye extents and vertical\r\n\tconst rollX = pointLeftEyeSocketOuter.x - pointRightEyeSocketOuter.x\r\n\tconst rollY = pointLeftEyeSocketOuter.y - pointRightEyeSocketOuter.y\r\n\tconst rollRegular = atan2(rollX, rollY) \r\n\tconst rawRoll = flipHorizontally ? -rollRegular : rollRegular\r\n\tconst regulatedRoll = ( rawRoll + Math.PI * 0.5) * 1.3\r\n\tconst roll = clamp( regulatedRoll, -1, 1 )\r\n\t\r\n\t// we use two lengths to determine the angles\r\n\t// to determine how much the head is rocking forwards and backwards\r\n\t// a triangle can be created  \r\n\t// const distanceFromFeltrumToForeHead = hypoteneuse3D( feltrum, forehead )\t\r\n\r\n\t// UP & DOWN in RADIANS\r\n\tconst pitchDepth = ( pointApexOfHead.z - pointBottomOfChin.z )\r\n\tconst pitchHeight = ( pointApexOfHead.y - pointBottomOfChin.y )\r\n\tconst pitchInRadians = ( atan2( pitchDepth, pitchHeight) ) * 1.5\r\n\tconst pitch = clamp( pitchInRadians, -1, 1)\r\n\r\n\t// FIXME: opposite / hypotenuse\r\n\t//const pitch = Math.asin(pointBetweenTheEyes.x)\r\n\t\r\n\t// const distanceFromFeltrumToEyeMidPoint = hypoteneuse3D( feltrum, pointBetweenTheEyes )\t\r\n\t// if the chin is in front (z) of forehead, head tilting back\r\n\t// const pitchAngle = 10 * (atan2( pointBetweenTheEyes.y, feltrum.y ) - 0.7210)\r\n\t// const pitchtest = pitchAngle * PI\r\n\t\t \r\n\t// console.log( \"Pitch\", { pitchAngle, pitchtest, pointBetweenTheEyes} )\r\n\t\r\n\t/*\t\r\n\r\n\t// Triangulate view cone\r\n\t// // const depth = 0.06 * FOCAL_LENGTH * canvas.width / MAX_WIDTH / sqrt((centerX - forehead[0]) ** 2 + (centerY - forehead[1]) ** 2 )\r\n\t// // const depth = IRIS_SIZE * FOCAL_LENGTH * canvas.width / MAX_WIDTH / diameter;\r\n\r\n\t// prediction.lookingRight = flipHorizontally ? !lookingRight : lookingRight\r\n\r\n\t// Looking left / Right -1 -> 1\r\n\tprediction.eyeDirection = eyeDirection \r\n\tprediction.eyeDistance = distanceBetweenIrises\r\n\t\r\n\t// FIXME: Ideally these give a percentage of open-ness\r\n\t// prediction.leftEye = leftEyesDist / eyeScale\r\n\tprediction.leftEyeClosed = prediction.leftEye < EYE_CLOSED_AT\r\n\t\r\n\t// prediction.rightEye = rightEyesDist / eyeScale \r\n\tprediction.rightEyeClosed = prediction.rightEye < EYE_CLOSED_AT\r\n\t\r\n\t// both together\r\n\tprediction.eyesClosed = prediction.leftEyeClosed && prediction.rightEyeClosed\r\n\r\n\r\n\r\n/*\r\n\t\t\r\n\t// The rest of the app is expecting a prediction in the following\r\n\t// shape with these extra parts and arrays already pre-written\r\n\t// save our annotated parts\r\n\tprediction.annotations = annotations\r\n\r\n\t// useful sometimes (different time to audio context?)\r\n\tprediction.time = time\t\r\n\r\n\t//console.log(\"Prediction\", prediction,{ widthBetweenLeftEyeAndCentre, widthBetweenRightEyeAndCentre, keypoints, box, annotations })\r\n\r\n\tconsole.log( \"Prediction\", prediction, {annotations})\r\n\r\n// return prediction\r\n\r\n\t// Eyes ---------------------\r\n\t// setEyeData( annotations, prediction, time, flipHorizontally )\r\n\t\r\n\t// eyes pointing in directions\r\n\tconst { leftEyeIris,leftEyeLower0,leftEyeLower1,leftEyeUpper1, \r\n\t\t\trightEyeIris,rightEyeLower0,rightEyeLower1, rightEyeUpper0, rightEyeUpper1,\r\n\t\t\tmidwayBetweenEyes } = annotations\r\n\r\n\tconst irisLeft = leftEyeIris[0]\r\n\tconst irisRight = rightEyeIris[0]\r\n\r\n\t// this is the distance between irises on the face\r\n\tconst distanceBetweenEyes =\tdistanceBetween2Points(irisLeftX, irisRightX)\r\n\t// Extents of the eye vertically\r\n\tconst eyeSocketHeight = distanceBetween3Points(leftEyeUpper1[ 3 ], rightEyeUpper1[ 3 ])\r\n\t// Extents of the eye horizontally\r\n\tconst eyeSocketWidth = distanceBetween3Points(leftEyeUpper1[ 0 ],rightEyeUpper1[ 0 ])\r\n\t\r\n\tconst midPointVector = midwayBetweenEyes[0]\r\n\r\n\tconst midwayBetweenEyesX = midPointVector[0] \r\n\tconst midwayBetweenEyesY = midPointVector[1] \r\n\r\n\t// Are we looking right or left?\r\n\tconst lookingRight = irisLeftX[2] < irisRightX[2]\r\n\r\n\t// -1 -> +1\r\n\tconst eyeDirection = (2 * ( midPointVector[0] - irisLeftX[0] ) / distanceBetweenEyes) - 1\r\n\r\n\t\r\n\t// FIXME: \r\n\tconst eyeScale = eyeSocketHeight / 80\r\n\r\n\tconst quantityOfPointsInEye = 5//leftEyeLower1.length \r\n\tlet leftEyesDist = 0\r\n\tlet rightEyesDist = 0\r\n\r\n\t// Check for eyes closed - we can do this on a loop for better results...\r\n\t// originally, p was 4\r\n\tfor (let p=4; p<quantityOfPointsInEye; ++p)\r\n\t{\r\n\t\tleftEyesDist = distanceBetween3Points(leftEyeLower1[ p ], leftEyeUpper1[ p ])\r\n\t\trightEyesDist = distanceBetween3Points(rightEyeLower1[ p ], rightEyeUpper1[ p ])\r\n\t}\r\n\r\n\t// leftEyesDist /= quantityOfPointsInEye\r\n\t// rightEyesDist /= quantityOfPointsInEye\r\n\r\n\t// const leftIrisHeight = leftEyeIris[4][1] - leftEyeIris[2][1]\r\n\t// const rightIrisHeight = rightEyeIris[4][1] - rightEyeIris[2][1]\r\n\t\r\n\t//console.log(\"Eyes : \",{leftIrisHeight, leftEyesDist, rightIrisHeight, rightEyesDist, eyeSocketHeight, eyeScale } )\r\n\r\n\t// add in some extras to make things easier \r\n\t// the midpoint can be used to triangulate the yaw\r\n\tconst leftEyeLowerX = leftEyeLower0[0][0] \r\n\tconst leftEyeLowerY = leftEyeLower0[0][1] \r\n\t\r\n\tconst rightEyeLowerX = rightEyeLower0[0][0] \r\n\tconst rightEyeLowerY = rightEyeLower0[0][1] \r\n\r\n\r\n\tprediction.lookingRight = flipHorizontally ? !lookingRight : lookingRight\r\n\r\n\t// Looking left / Right -1 -> 1\r\n\tprediction.eyeDirection = eyeDirection * -1 // flipit\r\n\tprediction.eyeDistance = distanceBetweenEyes\r\n\t\r\n\t// FIXME: Ideally these give a percentage of open-ness\r\n\tprediction.leftEye = leftEyesDist / eyeScale\r\n\tprediction.leftEyeClosed = prediction.leftEye < EYE_CLOSED_AT\r\n\t\r\n\tprediction.rightEye = rightEyesDist / eyeScale \r\n\tprediction.rightEyeClosed = prediction.rightEye < EYE_CLOSED_AT\r\n\t\r\n\t// both together\r\n\t//prediction.eyesClosed = prediction.leftEyeClosed && prediction.rightEyeClosed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// Nose\r\n\tconst {noseTip, noseBottom, noseRightCorner} = annotations\r\n\t//const {rightCheek,leftCheek, silhouette} = annotations\r\n\r\n\r\n\t\r\n\t// lengths of the triangle\r\n\tconst lmx = (midwayBetweenEyesX - leftEyeLowerX) * -1\r\n\tconst rmx = midwayBetweenEyesX - rightEyeLowerX\r\n\r\n\t// FIXME : flipHorizontal\r\n\r\n\t// and now we want the angle formed\r\n\tconst yaw = flipHorizontally ? \r\n\t\t-1 * (atan2(lmx, rmx) - 2)\r\n\t\t: -1 * (atan2(lmx, rmx) - 0.75)\r\n\t//const yaw = 0.5 - Math.atan( midPoint[2], -1 * midPoint[0] ) / ( 2.0 * Math.PI )\r\n\t\r\n\t\t// as nthis is -1 -> 1 we need to wrap it better\r\n\t\r\n\t// this is from forehead to chin...?\r\n\t// or nose to top lip?\r\n\t// if the chin is in front (z) of forehead, head tilting back\r\n\t// const pitch = 0.5 - Math.asin( my ) / PI\r\n\t// currently ranges between -0.35 -> -0.4 -> -0.35 \r\n\tconst pitchAngle = atan2(topOfHead[2], noseTip[0][2] )\r\n\tconst pitch = PITCH_SCALE * twist( pitchAngle / PI, -0.15 )\r\n\t\t\r\n\t// const pitch = flipHorizontally ? \r\n\t// \t((Math.atan2(topOfHead[2], bottomOfHead[2] ) ) - 1.9 - 0.2 ) / HALF_PI\r\n\t// \t: (Math.atan2(midwayBetweenEyes[0][2], rmx) - 0.75)\r\n\t\t\r\n\r\n\t// if either eye is lower than the other\r\n\tconst rollX = (leftEyeLowerX - rightEyeLowerX)\r\n\tconst rollY = (leftEyeLowerY - rightEyeLowerY)\r\n\r\n\t// As this is for 350 range, we double to make it just 180\r\n\tconst roll = flipHorizontally ?  \r\n\t\t-1 * (atan2(rollX, rollY) + HALF_PI)//Math.atan2(rollY, rollX):\r\n\t\t: atan2(rollX, rollY) - HALF_PI\r\n\t\r\n\r\n\t\r\n\t// Lip work --------------------------------\r\n\r\n\tconst {lipsUpperInner,lipsLowerInner } = annotations\r\n\tconst quantity = lipsUpperInner.length\r\n\r\n\t// central piece of the mouth\r\n\tconst lipUpperLeft = lipsUpperInner[0]\r\n\tconst lipLowerLeft = lipsLowerInner[0]\r\n\r\n\tconst lipUpperMiddle = lipsUpperInner[5]\r\n\tconst lipLowerMiddle = lipsLowerInner[5]\r\n\t\r\n\tconst lipUpperRight = lipsUpperInner[quantity-1]\r\n\tconst lipLowerRight = lipsLowerInner[quantity-1]\r\n\r\n\t// use hypotheneuse\r\n\t// const lipVerticalOpeningX = lipLowerMiddle[0] - lipUpperMiddle[0]\r\n\t// const lipVerticalOpeningY = lipLowerMiddle[1] - lipUpperMiddle[1]\r\n\t\r\n\t// const lipHorizontalOpeningX = lipLowerRight[0] - lipLowerLeft[0]\r\n\t// const lipHorizontalOpeningY = lipUpperRight[1] - lipUpperLeft[1]\r\n\t\r\n\t// const lipVerticalOpening = sqrt( lipVerticalOpeningX * lipVerticalOpeningX + lipVerticalOpeningY * lipVerticalOpeningY )\r\n\t// const lipHorizontalOpening = sqrt( lipVerticalOpeningX * lipVerticalOpeningX + lipVerticalOpeningY * lipVerticalOpeningY )\r\n\tconst lipVerticalOpening = distanceBetween2Points( lipLowerMiddle,lipUpperMiddle )\r\n\tconst lipHorizontalOpening = distanceBetween2Points( lipLowerRight, lipLowerLeft )\r\n\t\r\n\t// create triangles from the shape of the mouth\r\n\t// const upperLipLeft = [ lipUpperLeft, lipUpperMiddle ]\r\n\t\r\n\t// // this is the top left lip to fultrum (snot run)\r\n\t// // const upperLipLeftAngle = \r\n\t\r\n\t\r\n\t// const upperLipRight = [ lipUpperMiddle, lipUpperRight ]\r\n\t\r\n\t// cona lowerLip = [ lipLowerLeft, lipLowerMiddle, lipLowerRight ]\r\n\r\n\t// const upperLip = sqrt( lipVerticalOpeningX * lipVerticalOpeningX + lipVerticalOpeningY * lipVerticalOpeningY )\r\n\t\r\n\t\r\n\t\r\n\t//const lipVerticalOpening = lipVerticalOpeningX * lipVerticalOpeningX + lipVerticalOpeningY * lipVerticalOpeningY\r\n\tprediction.mouthRange = lipVerticalOpening\r\n\tprediction.mouthRatio = lipVerticalOpening / headHeight\r\n\tprediction.mouthWidth = lipHorizontalOpening\r\n\r\n\t// TODO: FIXME: mouth shape fixing\r\n\tprediction.mouthShape = MOUTH_SHAPE_CLOSED\r\n\r\n\r\n\r\n\r\n\t// These are the angles caused by smiling\r\n\t// We add them together and deduct them from 180 to find\r\n\t// the kinked angle of the top lip between left - feltrum - right\r\n\tconst leftSmirk = abs( determineAngle(lipUpperLeft, lipUpperMiddle) ) / PI\r\n\tconst rightSmirk = abs( determineAngle(lipUpperMiddle, lipUpperRight) ) / PI\r\n\r\n\t// 0 -> 1 ()\r\n\t// FIXME: the range is pretty much empty between 0->0.9\r\n\tprediction.happiness = 10 * (((leftSmirk + rightSmirk) * 0.5)  - 0.9)\r\n\t// 0 -> 1\r\n\tprediction.leftSmirk = (leftSmirk - 1) * 100000\r\n\tprediction.rightSmirk = (rightSmirk - 1) * 100000\r\n\t*/\r\n\r\n\tprediction.isFacingRight = yaw > 0\r\n\r\n\r\n\t// leaning head as if to look at own chest / sky\r\n\tprediction.pitch = pitch\r\n\t// tilting head towards shoulders\r\n\tprediction.roll = roll\r\n\t// regular left right neck rotational movement\r\n\tprediction.yaw = yaw\r\n\r\n\t// useful sometimes (different time to audio context?)\r\n\tprediction.time = time\t\r\n\r\n\t// store new annotations internally\r\n\tprediction.annotations = annotations\r\n\r\n\treturn prediction\r\n}\r\n","export const TAU = 2 * Math.PI\r\nexport const HALF_PI = Math.PI * 0.5\r\nexport const TWO_PI = Math.PI * 2\r\n\r\nconst {PI, sqrt, atan2, tan} = Math\r\n\r\nexport const range = (input, inputMin, inputMax, outputMin, outputMax) => {\r\n\tconst value = (input - inputMin) * (outputMax - outputMin) / (inputMax - inputMin) + outputMin\r\n\tif (value < outputMin) {return outputMin}\r\n\telse if (value > outputMax) {return outputMax}\r\n\treturn value\r\n}\r\n\r\nexport const rangeRounded = (input, inputMin, inputMax, outputMin, outputMax ) => {\r\n\tconst value = Math.round( (input - inputMin) * (outputMax - outputMin) / (inputMax - inputMin) + outputMin )\r\n\tif (value < outputMin) {return outputMin}\r\n\telse if (value > outputMax) {return outputMax}\r\n\treturn value\r\n}\r\n\r\n// provide the value and a smallest and largest original then new sizes\r\n// Functional Program\r\nexport const rescale = ( smallest=0, largest=1 ) => {\r\n    // find the scale and create a method that allows \r\n    // you to simply rescale at will\r\n    const fullRange = 1 / ( largest - smallest )\r\n\r\n    // return a method that you can pass a value to\r\n    return value => fullRange * ( value - smallest )\r\n}\r\n\r\n// Feed it a right angle triangle and get the angle between the edges\r\nexport const determineAngle = ( pointA, pointB ) => {\r\n\r\n\t// work out the lengths of the known edges\r\n\tconst oppositeLength = pointA.y - pointB.y\r\n\tconst adjacentLength = pointB.x - pointA.x\r\n\tconst angleInRadians = atan2(oppositeLength, adjacentLength)\r\n\t// process?\r\n\treturn angleInRadians\r\n}\r\n// ** === ^\r\n/*\r\n// distance between a & b via right angled triangle\r\nexport const distanceBetween2Points = (pointA, pointB) => sqrt(\r\n    ( pointA[ 0 ] - pointB[ 0 ] ) ** 2 + \r\n    ( pointA[ 1 ] - pointB[ 1 ] ) ** 2\r\n)\r\nexport const distanceBetween3Points = (pointA, pointB) => sqrt(\r\n    ( pointA[ 0 ] - pointB[ 0 ] ) ** 2 + \r\n    ( pointA[ 1 ] - pointB[ 1 ] ) ** 2 +\r\n    ( pointA[ 2 ] - pointB[ 2 ] ) ** 2\r\n)\r\n*/\r\nexport const distance3D = (aX,bX,  aY,bY, aZ,bZ ) => sqrt(\r\n    (aX - bX) ** 2 + \r\n    (aY - bY) ** 2 + \r\n    (aZ - bZ) ** 2\r\n)\r\n\r\n// distance between a & b via right angled triangle\r\nexport const distance2D = (aX,aY,bX,bY) => sqrt(\r\n    (aX - bX) ** 2 + \r\n    (aY - bY) ** 2\r\n)\r\n\r\n// distance between a & b via right angled triangle\r\nexport const hypoteneuse2D = ( pointA,pointB) => sqrt(\r\n    (pointA.x - pointB.x) ** 2 + \r\n    (pointA.y - pointB.y) ** 2\r\n)\r\nexport const hypoteneuse3D = (pointA, pointB) => sqrt(\r\n    (pointA.x - pointB.x) ** 2 + \r\n    (pointA.y - pointB.y) ** 2 +\r\n    (pointA.z - pointB.z) ** 2\r\n)\r\n\r\n\r\nexport const add3D = (a, b, output={} ) => {\r\n\toutput.x = a.x + b.x\r\n\toutput.y = a.y + b.y\r\n\toutput.z = a.z + b.z\r\n\treturn output\r\n}\r\n\r\nexport const subtract3D = (a, b, output={} ) => {\r\n\toutput.x = a.x - b.x\r\n\toutput.y = a.y - b.y\r\n\toutput.z = a.z - b.z\r\n\treturn output\r\n}\r\n\r\n// multiply points\r\nexport const  multiply3D = (a, b, output={} ) => {\r\n\toutput.x = a.x * b.x\r\n\toutput.y = a.y * b.y\r\n\toutput.z = a.z * b.z\t\r\n\treturn output\r\n}\r\n\r\nexport const cross3D = (a, b, output={} ) => {\r\n\toutput.x = a.y * b.z - a.z * b.y\r\n\toutput.y = a.z * b.x - a.x * b.z\r\n\toutput.z = a.x * b.y - a.y * b.x\r\n\treturn output\r\n}\r\n\r\nexport const divide3D = (a, b, output={} ) => {\r\n\toutput.x = a.x / b.x\r\n\toutput.y = a.y / b.y\r\n\toutput.z = a.z / b.z\r\n\treturn output\r\n}\r\n\r\n\r\nexport const lerp = (start, end, amt) => (1-amt) * start + amt * end\r\n\r\n// Restrict between\r\nexport const clamp = (val, min, max) => val > max ? max : val < min ? min : val\r\n\r\n// cheaper than TAN\r\nexport const twist = (value, amount=0) => {\r\n\r\n\t// if it is negative, invert\r\n\tif (value < 0)\r\n\t{\r\n\t\tvalue = (value + 1) * -1\r\n\t}else{\r\n\t\tvalue = 1 - value\r\n\t}\r\n\t//return value + amount\r\n\treturn clamp(value + amount,-1,1)\r\n}\r\n\r\n\r\n\r\n// export const lerp = (a, b, t) => (b-a)*t+a\r\n// export const unlerp = (a, b, t) => (t-a)/(b-a)\r\n// export const remap = (a1, b1, a2, b2, t) => lerp(a2, b2, unlerp(a1, b1, t))\r\n\r\n\r\nexport const round = (somenum) => {\r\n\t// With a bitwise or.\r\n\treturn (0.5 + somenum) | 0\r\n\t// A double bitwise not.\r\n\treturn ~~ (0.5 + somenum)\r\n\t// Finally, a left bitwise shift.\r\n\treturn (0.5 + somenum) << 0\r\n}\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nexport const MEDIAPIPE_FACE_MESH_NUM_KEYPOINTS = 468\r\nexport const MEDIAPIPE_FACE_MESH_NUM_KEYPOINTS_WITH_IRISES = 478\r\n\r\nconst connectionsToIndices = (connections) => {\r\n    const indices = connections.map(function (connection) { return connection[0]; });\r\n    indices.push(connections[connections.length - 1][1]);\r\n    return indices;\r\n}\r\n\r\n// ref:\r\n// https://github.com/google/mediapipe/mediapipe/python/solutions/face_mesh_connections.py\r\nexport const LIPS_CONNECTIONS = [\r\n    [61, 146], [146, 91], [91, 181], [181, 84], [84, 17], [17, 314],\r\n    [314, 405], [405, 321], [321, 375], [375, 291], [61, 185], [185, 40],\r\n    [40, 39], [39, 37], [37, 0], [0, 267], [267, 269], [269, 270],\r\n    [270, 409], [409, 291], [78, 95], [95, 88], [88, 178], [178, 87],\r\n    [87, 14], [14, 317], [317, 402], [402, 318], [318, 324], [324, 308],\r\n    [78, 191], [191, 80], [80, 81], [81, 82], [82, 13], [13, 312],\r\n    [312, 311], [311, 310], [310, 415], [415, 308],\r\n]\r\n\r\nexport const LEFT_EYE_CONNECTIONS = [\r\n    [263, 249],\r\n    [249, 390],\r\n    [390, 373],\r\n    [373, 374],\r\n    [374, 380],\r\n    [380, 381],\r\n    [381, 382],\r\n    [382, 362],\r\n    [263, 466],\r\n    [466, 388],\r\n    [388, 387],\r\n    [387, 386],\r\n    [386, 385],\r\n    [385, 384],\r\n    [384, 398],\r\n    [398, 362],\r\n]\r\n\r\nexport const LEFT_EYEBROW_CONNECTIONS = [\r\n    [276, 283],\r\n    [283, 282],\r\n    [282, 295],\r\n    [295, 285],\r\n    [300, 293],\r\n    [293, 334],\r\n    [334, 296],\r\n    [296, 336],\r\n]\r\n\r\nexport const LEFT_IRIS_CONNECTIONS = [\r\n    [474, 475],\r\n    [475, 476],\r\n    [476, 477],\r\n    [477, 474],\r\n]\r\n\r\nexport const RIGHT_EYE_CONNECTIONS = [\r\n    [33, 7],\r\n    [7, 163],\r\n    [163, 144],\r\n    [144, 145],\r\n    [145, 153],\r\n    [153, 154],\r\n    [154, 155],\r\n    [155, 133],\r\n    [33, 246],\r\n    [246, 161],\r\n    [161, 160],\r\n    [160, 159],\r\n    [159, 158],\r\n    [158, 157],\r\n    [157, 173],\r\n    [173, 133],\r\n]\r\n\r\nexport const RIGHT_EYEBROW_CONNECTIONS = [\r\n    [46, 53],\r\n    [53, 52],\r\n    [52, 65],\r\n    [65, 55],\r\n    [70, 63],\r\n    [63, 105],\r\n    [105, 66],\r\n    [66, 107],\r\n]\r\n\r\nexport const RIGHT_IRIS_CONNECTIONS = [\r\n    [469, 470],\r\n    [470, 471],\r\n    [471, 472],\r\n    [472, 469],\r\n]\r\n\r\nexport const FACE_OVAL_CONNECTIONS = [\r\n    [10, 338], [338, 297], [297, 332], [332, 284], [284, 251], [251, 389],\r\n    [389, 356], [356, 454], [454, 323], [323, 361], [361, 288], [288, 397],\r\n    [397, 365], [365, 379], [379, 378], [378, 400], [400, 377], [377, 152],\r\n    [152, 148], [148, 176], [176, 149], [149, 150], [150, 136], [136, 172],\r\n    [172, 58], [58, 132], [132, 93], [93, 234], [234, 127], [127, 162],\r\n    [162, 21], [21, 54], [54, 103], [103, 67], [67, 109], [109, 10]\r\n]\r\n\r\nexport const MEDIAPIPE_FACE_MESH_KEYPOINTS_BY_CONTOUR = {\r\n    lips: connectionsToIndices(LIPS_CONNECTIONS),\r\n    leftEye: connectionsToIndices(LEFT_EYE_CONNECTIONS),\r\n    leftEyebrow: connectionsToIndices(LEFT_EYEBROW_CONNECTIONS),\r\n    leftIris: connectionsToIndices(LEFT_IRIS_CONNECTIONS),\r\n    rightEye: connectionsToIndices(RIGHT_EYE_CONNECTIONS),\r\n    rightEyebrow: connectionsToIndices(RIGHT_EYEBROW_CONNECTIONS),\r\n    rightIris: connectionsToIndices(RIGHT_IRIS_CONNECTIONS),\r\n    faceOval: connectionsToIndices(FACE_OVAL_CONNECTIONS),\r\n}\r\n\r\nexport const MEDIAPIPE_FACE_MESH_CONNECTED_KEYPOINTS_PAIRS = [\r\n    [127, 34], [34, 139], [139, 127], [11, 0], [0, 37], [37, 11],\r\n    [232, 231], [231, 120], [120, 232], [72, 37], [37, 39], [39, 72],\r\n    [128, 121], [121, 47], [47, 128], [232, 121], [121, 128], [128, 232],\r\n    [104, 69], [69, 67], [67, 104], [175, 171], [171, 148], [148, 175],\r\n    [118, 50], [50, 101], [101, 118], [73, 39], [39, 40], [40, 73],\r\n    [9, 151], [151, 108], [108, 9], [48, 115], [115, 131], [131, 48],\r\n    [194, 204], [204, 211], [211, 194], [74, 40], [40, 185], [185, 74],\r\n    [80, 42], [42, 183], [183, 80], [40, 92], [92, 186], [186, 40],\r\n    [230, 229], [229, 118], [118, 230], [202, 212], [212, 214], [214, 202],\r\n    [83, 18], [18, 17], [17, 83], [76, 61], [61, 146], [146, 76],\r\n    [160, 29], [29, 30], [30, 160], [56, 157], [157, 173], [173, 56],\r\n    [106, 204], [204, 194], [194, 106], [135, 214], [214, 192], [192, 135],\r\n    [203, 165], [165, 98], [98, 203], [21, 71], [71, 68], [68, 21],\r\n    [51, 45], [45, 4], [4, 51], [144, 24], [24, 23], [23, 144],\r\n    [77, 146], [146, 91], [91, 77], [205, 50], [50, 187], [187, 205],\r\n    [201, 200], [200, 18], [18, 201], [91, 106], [106, 182], [182, 91],\r\n    [90, 91], [91, 181], [181, 90], [85, 84], [84, 17], [17, 85],\r\n    [206, 203], [203, 36], [36, 206], [148, 171], [171, 140], [140, 148],\r\n    [92, 40], [40, 39], [39, 92], [193, 189], [189, 244], [244, 193],\r\n    [159, 158], [158, 28], [28, 159], [247, 246], [246, 161], [161, 247],\r\n    [236, 3], [3, 196], [196, 236], [54, 68], [68, 104], [104, 54],\r\n    [193, 168], [168, 8], [8, 193], [117, 228], [228, 31], [31, 117],\r\n    [189, 193], [193, 55], [55, 189], [98, 97], [97, 99], [99, 98],\r\n    [126, 47], [47, 100], [100, 126], [166, 79], [79, 218], [218, 166],\r\n    [155, 154], [154, 26], [26, 155], [209, 49], [49, 131], [131, 209],\r\n    [135, 136], [136, 150], [150, 135], [47, 126], [126, 217], [217, 47],\r\n    [223, 52], [52, 53], [53, 223], [45, 51], [51, 134], [134, 45],\r\n    [211, 170], [170, 140], [140, 211], [67, 69], [69, 108], [108, 67],\r\n    [43, 106], [106, 91], [91, 43], [230, 119], [119, 120], [120, 230],\r\n    [226, 130], [130, 247], [247, 226], [63, 53], [53, 52], [52, 63],\r\n    [238, 20], [20, 242], [242, 238], [46, 70], [70, 156], [156, 46],\r\n    [78, 62], [62, 96], [96, 78], [46, 53], [53, 63], [63, 46],\r\n    [143, 34], [34, 227], [227, 143], [123, 117], [117, 111], [111, 123],\r\n    [44, 125], [125, 19], [19, 44], [236, 134], [134, 51], [51, 236],\r\n    [216, 206], [206, 205], [205, 216], [154, 153], [153, 22], [22, 154],\r\n    [39, 37], [37, 167], [167, 39], [200, 201], [201, 208], [208, 200],\r\n    [36, 142], [142, 100], [100, 36], [57, 212], [212, 202], [202, 57],\r\n    [20, 60], [60, 99], [99, 20], [28, 158], [158, 157], [157, 28],\r\n    [35, 226], [226, 113], [113, 35], [160, 159], [159, 27], [27, 160],\r\n    [204, 202], [202, 210], [210, 204], [113, 225], [225, 46], [46, 113],\r\n    [43, 202], [202, 204], [204, 43], [62, 76], [76, 77], [77, 62],\r\n    [137, 123], [123, 116], [116, 137], [41, 38], [38, 72], [72, 41],\r\n    [203, 129], [129, 142], [142, 203], [64, 98], [98, 240], [240, 64],\r\n    [49, 102], [102, 64], [64, 49], [41, 73], [73, 74], [74, 41],\r\n    [212, 216], [216, 207], [207, 212], [42, 74], [74, 184], [184, 42],\r\n    [169, 170], [170, 211], [211, 169], [170, 149], [149, 176], [176, 170],\r\n    [105, 66], [66, 69], [69, 105], [122, 6], [6, 168], [168, 122],\r\n    [123, 147], [147, 187], [187, 123], [96, 77], [77, 90], [90, 96],\r\n    [65, 55], [55, 107], [107, 65], [89, 90], [90, 180], [180, 89],\r\n    [101, 100], [100, 120], [120, 101], [63, 105], [105, 104], [104, 63],\r\n    [93, 137], [137, 227], [227, 93], [15, 86], [86, 85], [85, 15],\r\n    [129, 102], [102, 49], [49, 129], [14, 87], [87, 86], [86, 14],\r\n    [55, 8], [8, 9], [9, 55], [100, 47], [47, 121], [121, 100],\r\n    [145, 23], [23, 22], [22, 145], [88, 89], [89, 179], [179, 88],\r\n    [6, 122], [122, 196], [196, 6], [88, 95], [95, 96], [96, 88],\r\n    [138, 172], [172, 136], [136, 138], [215, 58], [58, 172], [172, 215],\r\n    [115, 48], [48, 219], [219, 115], [42, 80], [80, 81], [81, 42],\r\n    [195, 3], [3, 51], [51, 195], [43, 146], [146, 61], [61, 43],\r\n    [171, 175], [175, 199], [199, 171], [81, 82], [82, 38], [38, 81],\r\n    [53, 46], [46, 225], [225, 53], [144, 163], [163, 110], [110, 144],\r\n    [52, 65], [65, 66], [66, 52], [229, 228], [228, 117], [117, 229],\r\n    [34, 127], [127, 234], [234, 34], [107, 108], [108, 69], [69, 107],\r\n    [109, 108], [108, 151], [151, 109], [48, 64], [64, 235], [235, 48],\r\n    [62, 78], [78, 191], [191, 62], [129, 209], [209, 126], [126, 129],\r\n    [111, 35], [35, 143], [143, 111], [117, 123], [123, 50], [50, 117],\r\n    [222, 65], [65, 52], [52, 222], [19, 125], [125, 141], [141, 19],\r\n    [221, 55], [55, 65], [65, 221], [3, 195], [195, 197], [197, 3],\r\n    [25, 7], [7, 33], [33, 25], [220, 237], [237, 44], [44, 220],\r\n    [70, 71], [71, 139], [139, 70], [122, 193], [193, 245], [245, 122],\r\n    [247, 130], [130, 33], [33, 247], [71, 21], [21, 162], [162, 71],\r\n    [170, 169], [169, 150], [150, 170], [188, 174], [174, 196], [196, 188],\r\n    [216, 186], [186, 92], [92, 216], [2, 97], [97, 167], [167, 2],\r\n    [141, 125], [125, 241], [241, 141], [164, 167], [167, 37], [37, 164],\r\n    [72, 38], [38, 12], [12, 72], [38, 82], [82, 13], [13, 38],\r\n    [63, 68], [68, 71], [71, 63], [226, 35], [35, 111], [111, 226],\r\n    [101, 50], [50, 205], [205, 101], [206, 92], [92, 165], [165, 206],\r\n    [209, 198], [198, 217], [217, 209], [165, 167], [167, 97], [97, 165],\r\n    [220, 115], [115, 218], [218, 220], [133, 112], [112, 243], [243, 133],\r\n    [239, 238], [238, 241], [241, 239], [214, 135], [135, 169], [169, 214],\r\n    [190, 173], [173, 133], [133, 190], [171, 208], [208, 32], [32, 171],\r\n    [125, 44], [44, 237], [237, 125], [86, 87], [87, 178], [178, 86],\r\n    [85, 86], [86, 179], [179, 85], [84, 85], [85, 180], [180, 84],\r\n    [83, 84], [84, 181], [181, 83], [201, 83], [83, 182], [182, 201],\r\n    [137, 93], [93, 132], [132, 137], [76, 62], [62, 183], [183, 76],\r\n    [61, 76], [76, 184], [184, 61], [57, 61], [61, 185], [185, 57],\r\n    [212, 57], [57, 186], [186, 212], [214, 207], [207, 187], [187, 214],\r\n    [34, 143], [143, 156], [156, 34], [79, 239], [239, 237], [237, 79],\r\n    [123, 137], [137, 177], [177, 123], [44, 1], [1, 4], [4, 44],\r\n    [201, 194], [194, 32], [32, 201], [64, 102], [102, 129], [129, 64],\r\n    [213, 215], [215, 138], [138, 213], [59, 166], [166, 219], [219, 59],\r\n    [242, 99], [99, 97], [97, 242], [2, 94], [94, 141], [141, 2],\r\n    [75, 59], [59, 235], [235, 75], [24, 110], [110, 228], [228, 24],\r\n    [25, 130], [130, 226], [226, 25], [23, 24], [24, 229], [229, 23],\r\n    [22, 23], [23, 230], [230, 22], [26, 22], [22, 231], [231, 26],\r\n    [112, 26], [26, 232], [232, 112], [189, 190], [190, 243], [243, 189],\r\n    [221, 56], [56, 190], [190, 221], [28, 56], [56, 221], [221, 28],\r\n    [27, 28], [28, 222], [222, 27], [29, 27], [27, 223], [223, 29],\r\n    [30, 29], [29, 224], [224, 30], [247, 30], [30, 225], [225, 247],\r\n    [238, 79], [79, 20], [20, 238], [166, 59], [59, 75], [75, 166],\r\n    [60, 75], [75, 240], [240, 60], [147, 177], [177, 215], [215, 147],\r\n    [20, 79], [79, 166], [166, 20], [187, 147], [147, 213], [213, 187],\r\n    [112, 233], [233, 244], [244, 112], [233, 128], [128, 245], [245, 233],\r\n    [128, 114], [114, 188], [188, 128], [114, 217], [217, 174], [174, 114],\r\n    [131, 115], [115, 220], [220, 131], [217, 198], [198, 236], [236, 217],\r\n    [198, 131], [131, 134], [134, 198], [177, 132], [132, 58], [58, 177],\r\n    [143, 35], [35, 124], [124, 143], [110, 163], [163, 7], [7, 110],\r\n    [228, 110], [110, 25], [25, 228], [356, 389], [389, 368], [368, 356],\r\n    [11, 302], [302, 267], [267, 11], [452, 350], [350, 349], [349, 452],\r\n    [302, 303], [303, 269], [269, 302], [357, 343], [343, 277], [277, 357],\r\n    [452, 453], [453, 357], [357, 452], [333, 332], [332, 297], [297, 333],\r\n    [175, 152], [152, 377], [377, 175], [347, 348], [348, 330], [330, 347],\r\n    [303, 304], [304, 270], [270, 303], [9, 336], [336, 337], [337, 9],\r\n    [278, 279], [279, 360], [360, 278], [418, 262], [262, 431], [431, 418],\r\n    [304, 408], [408, 409], [409, 304], [310, 415], [415, 407], [407, 310],\r\n    [270, 409], [409, 410], [410, 270], [450, 348], [348, 347], [347, 450],\r\n    [422, 430], [430, 434], [434, 422], [313, 314], [314, 17], [17, 313],\r\n    [306, 307], [307, 375], [375, 306], [387, 388], [388, 260], [260, 387],\r\n    [286, 414], [414, 398], [398, 286], [335, 406], [406, 418], [418, 335],\r\n    [364, 367], [367, 416], [416, 364], [423, 358], [358, 327], [327, 423],\r\n    [251, 284], [284, 298], [298, 251], [281, 5], [5, 4], [4, 281],\r\n    [373, 374], [374, 253], [253, 373], [307, 320], [320, 321], [321, 307],\r\n    [425, 427], [427, 411], [411, 425], [421, 313], [313, 18], [18, 421],\r\n    [321, 405], [405, 406], [406, 321], [320, 404], [404, 405], [405, 320],\r\n    [315, 16], [16, 17], [17, 315], [426, 425], [425, 266], [266, 426],\r\n    [377, 400], [400, 369], [369, 377], [322, 391], [391, 269], [269, 322],\r\n    [417, 465], [465, 464], [464, 417], [386, 257], [257, 258], [258, 386],\r\n    [466, 260], [260, 388], [388, 466], [456, 399], [399, 419], [419, 456],\r\n    [284, 332], [332, 333], [333, 284], [417, 285], [285, 8], [8, 417],\r\n    [346, 340], [340, 261], [261, 346], [413, 441], [441, 285], [285, 413],\r\n    [327, 460], [460, 328], [328, 327], [355, 371], [371, 329], [329, 355],\r\n    [392, 439], [439, 438], [438, 392], [382, 341], [341, 256], [256, 382],\r\n    [429, 420], [420, 360], [360, 429], [364, 394], [394, 379], [379, 364],\r\n    [277, 343], [343, 437], [437, 277], [443, 444], [444, 283], [283, 443],\r\n    [275, 440], [440, 363], [363, 275], [431, 262], [262, 369], [369, 431],\r\n    [297, 338], [338, 337], [337, 297], [273, 375], [375, 321], [321, 273],\r\n    [450, 451], [451, 349], [349, 450], [446, 342], [342, 467], [467, 446],\r\n    [293, 334], [334, 282], [282, 293], [458, 461], [461, 462], [462, 458],\r\n    [276, 353], [353, 383], [383, 276], [308, 324], [324, 325], [325, 308],\r\n    [276, 300], [300, 293], [293, 276], [372, 345], [345, 447], [447, 372],\r\n    [352, 345], [345, 340], [340, 352], [274, 1], [1, 19], [19, 274],\r\n    [456, 248], [248, 281], [281, 456], [436, 427], [427, 425], [425, 436],\r\n    [381, 256], [256, 252], [252, 381], [269, 391], [391, 393], [393, 269],\r\n    [200, 199], [199, 428], [428, 200], [266, 330], [330, 329], [329, 266],\r\n    [287, 273], [273, 422], [422, 287], [250, 462], [462, 328], [328, 250],\r\n    [258, 286], [286, 384], [384, 258], [265, 353], [353, 342], [342, 265],\r\n    [387, 259], [259, 257], [257, 387], [424, 431], [431, 430], [430, 424],\r\n    [342, 353], [353, 276], [276, 342], [273, 335], [335, 424], [424, 273],\r\n    [292, 325], [325, 307], [307, 292], [366, 447], [447, 345], [345, 366],\r\n    [271, 303], [303, 302], [302, 271], [423, 266], [266, 371], [371, 423],\r\n    [294, 455], [455, 460], [460, 294], [279, 278], [278, 294], [294, 279],\r\n    [271, 272], [272, 304], [304, 271], [432, 434], [434, 427], [427, 432],\r\n    [272, 407], [407, 408], [408, 272], [394, 430], [430, 431], [431, 394],\r\n    [395, 369], [369, 400], [400, 395], [334, 333], [333, 299], [299, 334],\r\n    [351, 417], [417, 168], [168, 351], [352, 280], [280, 411], [411, 352],\r\n    [325, 319], [319, 320], [320, 325], [295, 296], [296, 336], [336, 295],\r\n    [319, 403], [403, 404], [404, 319], [330, 348], [348, 349], [349, 330],\r\n    [293, 298], [298, 333], [333, 293], [323, 454], [454, 447], [447, 323],\r\n    [15, 16], [16, 315], [315, 15], [358, 429], [429, 279], [279, 358],\r\n    [14, 15], [15, 316], [316, 14], [285, 336], [336, 9], [9, 285],\r\n    [329, 349], [349, 350], [350, 329], [374, 380], [380, 252], [252, 374],\r\n    [318, 402], [402, 403], [403, 318], [6, 197], [197, 419], [419, 6],\r\n    [318, 319], [319, 325], [325, 318], [367, 364], [364, 365], [365, 367],\r\n    [435, 367], [367, 397], [397, 435], [344, 438], [438, 439], [439, 344],\r\n    [272, 271], [271, 311], [311, 272], [195, 5], [5, 281], [281, 195],\r\n    [273, 287], [287, 291], [291, 273], [396, 428], [428, 199], [199, 396],\r\n    [311, 271], [271, 268], [268, 311], [283, 444], [444, 445], [445, 283],\r\n    [373, 254], [254, 339], [339, 373], [282, 334], [334, 296], [296, 282],\r\n    [449, 347], [347, 346], [346, 449], [264, 447], [447, 454], [454, 264],\r\n    [336, 296], [296, 299], [299, 336], [338, 10], [10, 151], [151, 338],\r\n    [278, 439], [439, 455], [455, 278], [292, 407], [407, 415], [415, 292],\r\n    [358, 371], [371, 355], [355, 358], [340, 345], [345, 372], [372, 340],\r\n    [346, 347], [347, 280], [280, 346], [442, 443], [443, 282], [282, 442],\r\n    [19, 94], [94, 370], [370, 19], [441, 442], [442, 295], [295, 441],\r\n    [248, 419], [419, 197], [197, 248], [263, 255], [255, 359], [359, 263],\r\n    [440, 275], [275, 274], [274, 440], [300, 383], [383, 368], [368, 300],\r\n    [351, 412], [412, 465], [465, 351], [263, 467], [467, 466], [466, 263],\r\n    [301, 368], [368, 389], [389, 301], [395, 378], [378, 379], [379, 395],\r\n    [412, 351], [351, 419], [419, 412], [436, 426], [426, 322], [322, 436],\r\n    [2, 164], [164, 393], [393, 2], [370, 462], [462, 461], [461, 370],\r\n    [164, 0], [0, 267], [267, 164], [302, 11], [11, 12], [12, 302],\r\n    [268, 12], [12, 13], [13, 268], [293, 300], [300, 301], [301, 293],\r\n    [446, 261], [261, 340], [340, 446], [330, 266], [266, 425], [425, 330],\r\n    [426, 423], [423, 391], [391, 426], [429, 355], [355, 437], [437, 429],\r\n    [391, 327], [327, 326], [326, 391], [440, 457], [457, 438], [438, 440],\r\n    [341, 382], [382, 362], [362, 341], [459, 457], [457, 461], [461, 459],\r\n    [434, 430], [430, 394], [394, 434], [414, 463], [463, 362], [362, 414],\r\n    [396, 369], [369, 262], [262, 396], [354, 461], [461, 457], [457, 354],\r\n    [316, 403], [403, 402], [402, 316], [315, 404], [404, 403], [403, 315],\r\n    [314, 405], [405, 404], [404, 314], [313, 406], [406, 405], [405, 313],\r\n    [421, 418], [418, 406], [406, 421], [366, 401], [401, 361], [361, 366],\r\n    [306, 408], [408, 407], [407, 306], [291, 409], [409, 408], [408, 291],\r\n    [287, 410], [410, 409], [409, 287], [432, 436], [436, 410], [410, 432],\r\n    [434, 416], [416, 411], [411, 434], [264, 368], [368, 383], [383, 264],\r\n    [309, 438], [438, 457], [457, 309], [352, 376], [376, 401], [401, 352],\r\n    [274, 275], [275, 4], [4, 274], [421, 428], [428, 262], [262, 421],\r\n    [294, 327], [327, 358], [358, 294], [433, 416], [416, 367], [367, 433],\r\n    [289, 455], [455, 439], [439, 289], [462, 370], [370, 326], [326, 462],\r\n    [2, 326], [326, 370], [370, 2], [305, 460], [460, 455], [455, 305],\r\n    [254, 449], [449, 448], [448, 254], [255, 261], [261, 446], [446, 255],\r\n    [253, 450], [450, 449], [449, 253], [252, 451], [451, 450], [450, 252],\r\n    [256, 452], [452, 451], [451, 256], [341, 453], [453, 452], [452, 341],\r\n    [413, 464], [464, 463], [463, 413], [441, 413], [413, 414], [414, 441],\r\n    [258, 442], [442, 441], [441, 258], [257, 443], [443, 442], [442, 257],\r\n    [259, 444], [444, 443], [443, 259], [260, 445], [445, 444], [444, 260],\r\n    [467, 342], [342, 445], [445, 467], [459, 458], [458, 250], [250, 459],\r\n    [289, 392], [392, 290], [290, 289], [290, 328], [328, 460], [460, 290],\r\n    [376, 433], [433, 435], [435, 376], [250, 290], [290, 392], [392, 250],\r\n    [411, 416], [416, 433], [433, 411], [341, 463], [463, 464], [464, 341],\r\n    [453, 464], [464, 465], [465, 453], [357, 465], [465, 412], [412, 357],\r\n    [343, 412], [412, 399], [399, 343], [360, 363], [363, 440], [440, 360],\r\n    [437, 399], [399, 456], [456, 437], [420, 456], [456, 363], [363, 420],\r\n    [401, 435], [435, 288], [288, 401], [372, 383], [383, 353], [353, 372],\r\n    [339, 255], [255, 249], [249, 339], [448, 261], [261, 255], [255, 448],\r\n    [133, 243], [243, 190], [190, 133], [133, 155], [155, 112], [112, 133],\r\n    [33, 246], [246, 247], [247, 33], [33, 130], [130, 25], [25, 33],\r\n    [398, 384], [384, 286], [286, 398], [362, 398], [398, 414], [414, 362],\r\n    [362, 463], [463, 341], [341, 362], [263, 359], [359, 467], [467, 263],\r\n    [263, 249], [249, 255], [255, 263], [466, 467], [467, 260], [260, 466],\r\n    [75, 60], [60, 166], [166, 75], [238, 239], [239, 79], [79, 238],\r\n    [162, 127], [127, 139], [139, 162], [72, 11], [11, 37], [37, 72],\r\n    [121, 232], [232, 120], [120, 121], [73, 72], [72, 39], [39, 73],\r\n    [114, 128], [128, 47], [47, 114], [233, 232], [232, 128], [128, 233],\r\n    [103, 104], [104, 67], [67, 103], [152, 175], [175, 148], [148, 152],\r\n    [119, 118], [118, 101], [101, 119], [74, 73], [73, 40], [40, 74],\r\n    [107, 9], [9, 108], [108, 107], [49, 48], [48, 131], [131, 49],\r\n    [32, 194], [194, 211], [211, 32], [184, 74], [74, 185], [185, 184],\r\n    [191, 80], [80, 183], [183, 191], [185, 40], [40, 186], [186, 185],\r\n    [119, 230], [230, 118], [118, 119], [210, 202], [202, 214], [214, 210],\r\n    [84, 83], [83, 17], [17, 84], [77, 76], [76, 146], [146, 77],\r\n    [161, 160], [160, 30], [30, 161], [190, 56], [56, 173], [173, 190],\r\n    [182, 106], [106, 194], [194, 182], [138, 135], [135, 192], [192, 138],\r\n    [129, 203], [203, 98], [98, 129], [54, 21], [21, 68], [68, 54],\r\n    [5, 51], [51, 4], [4, 5], [145, 144], [144, 23], [23, 145],\r\n    [90, 77], [77, 91], [91, 90], [207, 205], [205, 187], [187, 207],\r\n    [83, 201], [201, 18], [18, 83], [181, 91], [91, 182], [182, 181],\r\n    [180, 90], [90, 181], [181, 180], [16, 85], [85, 17], [17, 16],\r\n    [205, 206], [206, 36], [36, 205], [176, 148], [148, 140], [140, 176],\r\n    [165, 92], [92, 39], [39, 165], [245, 193], [193, 244], [244, 245],\r\n    [27, 159], [159, 28], [28, 27], [30, 247], [247, 161], [161, 30],\r\n    [174, 236], [236, 196], [196, 174], [103, 54], [54, 104], [104, 103],\r\n    [55, 193], [193, 8], [8, 55], [111, 117], [117, 31], [31, 111],\r\n    [221, 189], [189, 55], [55, 221], [240, 98], [98, 99], [99, 240],\r\n    [142, 126], [126, 100], [100, 142], [219, 166], [166, 218], [218, 219],\r\n    [112, 155], [155, 26], [26, 112], [198, 209], [209, 131], [131, 198],\r\n    [169, 135], [135, 150], [150, 169], [114, 47], [47, 217], [217, 114],\r\n    [224, 223], [223, 53], [53, 224], [220, 45], [45, 134], [134, 220],\r\n    [32, 211], [211, 140], [140, 32], [109, 67], [67, 108], [108, 109],\r\n    [146, 43], [43, 91], [91, 146], [231, 230], [230, 120], [120, 231],\r\n    [113, 226], [226, 247], [247, 113], [105, 63], [63, 52], [52, 105],\r\n    [241, 238], [238, 242], [242, 241], [124, 46], [46, 156], [156, 124],\r\n    [95, 78], [78, 96], [96, 95], [70, 46], [46, 63], [63, 70],\r\n    [116, 143], [143, 227], [227, 116], [116, 123], [123, 111], [111, 116],\r\n    [1, 44], [44, 19], [19, 1], [3, 236], [236, 51], [51, 3],\r\n    [207, 216], [216, 205], [205, 207], [26, 154], [154, 22], [22, 26],\r\n    [165, 39], [39, 167], [167, 165], [199, 200], [200, 208], [208, 199],\r\n    [101, 36], [36, 100], [100, 101], [43, 57], [57, 202], [202, 43],\r\n    [242, 20], [20, 99], [99, 242], [56, 28], [28, 157], [157, 56],\r\n    [124, 35], [35, 113], [113, 124], [29, 160], [160, 27], [27, 29],\r\n    [211, 204], [204, 210], [210, 211], [124, 113], [113, 46], [46, 124],\r\n    [106, 43], [43, 204], [204, 106], [96, 62], [62, 77], [77, 96],\r\n    [227, 137], [137, 116], [116, 227], [73, 41], [41, 72], [72, 73],\r\n    [36, 203], [203, 142], [142, 36], [235, 64], [64, 240], [240, 235],\r\n    [48, 49], [49, 64], [64, 48], [42, 41], [41, 74], [74, 42],\r\n    [214, 212], [212, 207], [207, 214], [183, 42], [42, 184], [184, 183],\r\n    [210, 169], [169, 211], [211, 210], [140, 170], [170, 176], [176, 140],\r\n    [104, 105], [105, 69], [69, 104], [193, 122], [122, 168], [168, 193],\r\n    [50, 123], [123, 187], [187, 50], [89, 96], [96, 90], [90, 89],\r\n    [66, 65], [65, 107], [107, 66], [179, 89], [89, 180], [180, 179],\r\n    [119, 101], [101, 120], [120, 119], [68, 63], [63, 104], [104, 68],\r\n    [234, 93], [93, 227], [227, 234], [16, 15], [15, 85], [85, 16],\r\n    [209, 129], [129, 49], [49, 209], [15, 14], [14, 86], [86, 15],\r\n    [107, 55], [55, 9], [9, 107], [120, 100], [100, 121], [121, 120],\r\n    [153, 145], [145, 22], [22, 153], [178, 88], [88, 179], [179, 178],\r\n    [197, 6], [6, 196], [196, 197], [89, 88], [88, 96], [96, 89],\r\n    [135, 138], [138, 136], [136, 135], [138, 215], [215, 172], [172, 138],\r\n    [218, 115], [115, 219], [219, 218], [41, 42], [42, 81], [81, 41],\r\n    [5, 195], [195, 51], [51, 5], [57, 43], [43, 61], [61, 57],\r\n    [208, 171], [171, 199], [199, 208], [41, 81], [81, 38], [38, 41],\r\n    [224, 53], [53, 225], [225, 224], [24, 144], [144, 110], [110, 24],\r\n    [105, 52], [52, 66], [66, 105], [118, 229], [229, 117], [117, 118],\r\n    [227, 34], [34, 234], [234, 227], [66, 107], [107, 69], [69, 66],\r\n    [10, 109], [109, 151], [151, 10], [219, 48], [48, 235], [235, 219],\r\n    [183, 62], [62, 191], [191, 183], [142, 129], [129, 126], [126, 142],\r\n    [116, 111], [111, 143], [143, 116], [118, 117], [117, 50], [50, 118],\r\n    [223, 222], [222, 52], [52, 223], [94, 19], [19, 141], [141, 94],\r\n    [222, 221], [221, 65], [65, 222], [196, 3], [3, 197], [197, 196],\r\n    [45, 220], [220, 44], [44, 45], [156, 70], [70, 139], [139, 156],\r\n    [188, 122], [122, 245], [245, 188], [139, 71], [71, 162], [162, 139],\r\n    [149, 170], [170, 150], [150, 149], [122, 188], [188, 196], [196, 122],\r\n    [206, 216], [216, 92], [92, 206], [164, 2], [2, 167], [167, 164],\r\n    [242, 141], [141, 241], [241, 242], [0, 164], [164, 37], [37, 0],\r\n    [11, 72], [72, 12], [12, 11], [12, 38], [38, 13], [13, 12],\r\n    [70, 63], [63, 71], [71, 70], [31, 226], [226, 111], [111, 31],\r\n    [36, 101], [101, 205], [205, 36], [203, 206], [206, 165], [165, 203],\r\n    [126, 209], [209, 217], [217, 126], [98, 165], [165, 97], [97, 98],\r\n    [237, 220], [220, 218], [218, 237], [237, 239], [239, 241], [241, 237],\r\n    [210, 214], [214, 169], [169, 210], [140, 171], [171, 32], [32, 140],\r\n    [241, 125], [125, 237], [237, 241], [179, 86], [86, 178], [178, 179],\r\n    [180, 85], [85, 179], [179, 180], [181, 84], [84, 180], [180, 181],\r\n    [182, 83], [83, 181], [181, 182], [194, 201], [201, 182], [182, 194],\r\n    [177, 137], [137, 132], [132, 177], [184, 76], [76, 183], [183, 184],\r\n    [185, 61], [61, 184], [184, 185], [186, 57], [57, 185], [185, 186],\r\n    [216, 212], [212, 186], [186, 216], [192, 214], [214, 187], [187, 192],\r\n    [139, 34], [34, 156], [156, 139], [218, 79], [79, 237], [237, 218],\r\n    [147, 123], [123, 177], [177, 147], [45, 44], [44, 4], [4, 45],\r\n    [208, 201], [201, 32], [32, 208], [98, 64], [64, 129], [129, 98],\r\n    [192, 213], [213, 138], [138, 192], [235, 59], [59, 219], [219, 235],\r\n    [141, 242], [242, 97], [97, 141], [97, 2], [2, 141], [141, 97],\r\n    [240, 75], [75, 235], [235, 240], [229, 24], [24, 228], [228, 229],\r\n    [31, 25], [25, 226], [226, 31], [230, 23], [23, 229], [229, 230],\r\n    [231, 22], [22, 230], [230, 231], [232, 26], [26, 231], [231, 232],\r\n    [233, 112], [112, 232], [232, 233], [244, 189], [189, 243], [243, 244],\r\n    [189, 221], [221, 190], [190, 189], [222, 28], [28, 221], [221, 222],\r\n    [223, 27], [27, 222], [222, 223], [224, 29], [29, 223], [223, 224],\r\n    [225, 30], [30, 224], [224, 225], [113, 247], [247, 225], [225, 113],\r\n    [99, 60], [60, 240], [240, 99], [213, 147], [147, 215], [215, 213],\r\n    [60, 20], [20, 166], [166, 60], [192, 187], [187, 213], [213, 192],\r\n    [243, 112], [112, 244], [244, 243], [244, 233], [233, 245], [245, 244],\r\n    [245, 128], [128, 188], [188, 245], [188, 114], [114, 174], [174, 188],\r\n    [134, 131], [131, 220], [220, 134], [174, 217], [217, 236], [236, 174],\r\n    [236, 198], [198, 134], [134, 236], [215, 177], [177, 58], [58, 215],\r\n    [156, 143], [143, 124], [124, 156], [25, 110], [110, 7], [7, 25],\r\n    [31, 228], [228, 25], [25, 31], [264, 356], [356, 368], [368, 264],\r\n    [0, 11], [11, 267], [267, 0], [451, 452], [452, 349], [349, 451],\r\n    [267, 302], [302, 269], [269, 267], [350, 357], [357, 277], [277, 350],\r\n    [350, 452], [452, 357], [357, 350], [299, 333], [333, 297], [297, 299],\r\n    [396, 175], [175, 377], [377, 396], [280, 347], [347, 330], [330, 280],\r\n    [269, 303], [303, 270], [270, 269], [151, 9], [9, 337], [337, 151],\r\n    [344, 278], [278, 360], [360, 344], [424, 418], [418, 431], [431, 424],\r\n    [270, 304], [304, 409], [409, 270], [272, 310], [310, 407], [407, 272],\r\n    [322, 270], [270, 410], [410, 322], [449, 450], [450, 347], [347, 449],\r\n    [432, 422], [422, 434], [434, 432], [18, 313], [313, 17], [17, 18],\r\n    [291, 306], [306, 375], [375, 291], [259, 387], [387, 260], [260, 259],\r\n    [424, 335], [335, 418], [418, 424], [434, 364], [364, 416], [416, 434],\r\n    [391, 423], [423, 327], [327, 391], [301, 251], [251, 298], [298, 301],\r\n    [275, 281], [281, 4], [4, 275], [254, 373], [373, 253], [253, 254],\r\n    [375, 307], [307, 321], [321, 375], [280, 425], [425, 411], [411, 280],\r\n    [200, 421], [421, 18], [18, 200], [335, 321], [321, 406], [406, 335],\r\n    [321, 320], [320, 405], [405, 321], [314, 315], [315, 17], [17, 314],\r\n    [423, 426], [426, 266], [266, 423], [396, 377], [377, 369], [369, 396],\r\n    [270, 322], [322, 269], [269, 270], [413, 417], [417, 464], [464, 413],\r\n    [385, 386], [386, 258], [258, 385], [248, 456], [456, 419], [419, 248],\r\n    [298, 284], [284, 333], [333, 298], [168, 417], [417, 8], [8, 168],\r\n    [448, 346], [346, 261], [261, 448], [417, 413], [413, 285], [285, 417],\r\n    [326, 327], [327, 328], [328, 326], [277, 355], [355, 329], [329, 277],\r\n    [309, 392], [392, 438], [438, 309], [381, 382], [382, 256], [256, 381],\r\n    [279, 429], [429, 360], [360, 279], [365, 364], [364, 379], [379, 365],\r\n    [355, 277], [277, 437], [437, 355], [282, 443], [443, 283], [283, 282],\r\n    [281, 275], [275, 363], [363, 281], [395, 431], [431, 369], [369, 395],\r\n    [299, 297], [297, 337], [337, 299], [335, 273], [273, 321], [321, 335],\r\n    [348, 450], [450, 349], [349, 348], [359, 446], [446, 467], [467, 359],\r\n    [283, 293], [293, 282], [282, 283], [250, 458], [458, 462], [462, 250],\r\n    [300, 276], [276, 383], [383, 300], [292, 308], [308, 325], [325, 292],\r\n    [283, 276], [276, 293], [293, 283], [264, 372], [372, 447], [447, 264],\r\n    [346, 352], [352, 340], [340, 346], [354, 274], [274, 19], [19, 354],\r\n    [363, 456], [456, 281], [281, 363], [426, 436], [436, 425], [425, 426],\r\n    [380, 381], [381, 252], [252, 380], [267, 269], [269, 393], [393, 267],\r\n    [421, 200], [200, 428], [428, 421], [371, 266], [266, 329], [329, 371],\r\n    [432, 287], [287, 422], [422, 432], [290, 250], [250, 328], [328, 290],\r\n    [385, 258], [258, 384], [384, 385], [446, 265], [265, 342], [342, 446],\r\n    [386, 387], [387, 257], [257, 386], [422, 424], [424, 430], [430, 422],\r\n    [445, 342], [342, 276], [276, 445], [422, 273], [273, 424], [424, 422],\r\n    [306, 292], [292, 307], [307, 306], [352, 366], [366, 345], [345, 352],\r\n    [268, 271], [271, 302], [302, 268], [358, 423], [423, 371], [371, 358],\r\n    [327, 294], [294, 460], [460, 327], [331, 279], [279, 294], [294, 331],\r\n    [303, 271], [271, 304], [304, 303], [436, 432], [432, 427], [427, 436],\r\n    [304, 272], [272, 408], [408, 304], [395, 394], [394, 431], [431, 395],\r\n    [378, 395], [395, 400], [400, 378], [296, 334], [334, 299], [299, 296],\r\n    [6, 351], [351, 168], [168, 6], [376, 352], [352, 411], [411, 376],\r\n    [307, 325], [325, 320], [320, 307], [285, 295], [295, 336], [336, 285],\r\n    [320, 319], [319, 404], [404, 320], [329, 330], [330, 349], [349, 329],\r\n    [334, 293], [293, 333], [333, 334], [366, 323], [323, 447], [447, 366],\r\n    [316, 15], [15, 315], [315, 316], [331, 358], [358, 279], [279, 331],\r\n    [317, 14], [14, 316], [316, 317], [8, 285], [285, 9], [9, 8],\r\n    [277, 329], [329, 350], [350, 277], [253, 374], [374, 252], [252, 253],\r\n    [319, 318], [318, 403], [403, 319], [351, 6], [6, 419], [419, 351],\r\n    [324, 318], [318, 325], [325, 324], [397, 367], [367, 365], [365, 397],\r\n    [288, 435], [435, 397], [397, 288], [278, 344], [344, 439], [439, 278],\r\n    [310, 272], [272, 311], [311, 310], [248, 195], [195, 281], [281, 248],\r\n    [375, 273], [273, 291], [291, 375], [175, 396], [396, 199], [199, 175],\r\n    [312, 311], [311, 268], [268, 312], [276, 283], [283, 445], [445, 276],\r\n    [390, 373], [373, 339], [339, 390], [295, 282], [282, 296], [296, 295],\r\n    [448, 449], [449, 346], [346, 448], [356, 264], [264, 454], [454, 356],\r\n    [337, 336], [336, 299], [299, 337], [337, 338], [338, 151], [151, 337],\r\n    [294, 278], [278, 455], [455, 294], [308, 292], [292, 415], [415, 308],\r\n    [429, 358], [358, 355], [355, 429], [265, 340], [340, 372], [372, 265],\r\n    [352, 346], [346, 280], [280, 352], [295, 442], [442, 282], [282, 295],\r\n    [354, 19], [19, 370], [370, 354], [285, 441], [441, 295], [295, 285],\r\n    [195, 248], [248, 197], [197, 195], [457, 440], [440, 274], [274, 457],\r\n    [301, 300], [300, 368], [368, 301], [417, 351], [351, 465], [465, 417],\r\n    [251, 301], [301, 389], [389, 251], [394, 395], [395, 379], [379, 394],\r\n    [399, 412], [412, 419], [419, 399], [410, 436], [436, 322], [322, 410],\r\n    [326, 2], [2, 393], [393, 326], [354, 370], [370, 461], [461, 354],\r\n    [393, 164], [164, 267], [267, 393], [268, 302], [302, 12], [12, 268],\r\n    [312, 268], [268, 13], [13, 312], [298, 293], [293, 301], [301, 298],\r\n    [265, 446], [446, 340], [340, 265], [280, 330], [330, 425], [425, 280],\r\n    [322, 426], [426, 391], [391, 322], [420, 429], [429, 437], [437, 420],\r\n    [393, 391], [391, 326], [326, 393], [344, 440], [440, 438], [438, 344],\r\n    [458, 459], [459, 461], [461, 458], [364, 434], [434, 394], [394, 364],\r\n    [428, 396], [396, 262], [262, 428], [274, 354], [354, 457], [457, 274],\r\n    [317, 316], [316, 402], [402, 317], [316, 315], [315, 403], [403, 316],\r\n    [315, 314], [314, 404], [404, 315], [314, 313], [313, 405], [405, 314],\r\n    [313, 421], [421, 406], [406, 313], [323, 366], [366, 361], [361, 323],\r\n    [292, 306], [306, 407], [407, 292], [306, 291], [291, 408], [408, 306],\r\n    [291, 287], [287, 409], [409, 291], [287, 432], [432, 410], [410, 287],\r\n    [427, 434], [434, 411], [411, 427], [372, 264], [264, 383], [383, 372],\r\n    [459, 309], [309, 457], [457, 459], [366, 352], [352, 401], [401, 366],\r\n    [1, 274], [274, 4], [4, 1], [418, 421], [421, 262], [262, 418],\r\n    [331, 294], [294, 358], [358, 331], [435, 433], [433, 367], [367, 435],\r\n    [392, 289], [289, 439], [439, 392], [328, 462], [462, 326], [326, 328],\r\n    [94, 2], [2, 370], [370, 94], [289, 305], [305, 455], [455, 289],\r\n    [339, 254], [254, 448], [448, 339], [359, 255], [255, 446], [446, 359],\r\n    [254, 253], [253, 449], [449, 254], [253, 252], [252, 450], [450, 253],\r\n    [252, 256], [256, 451], [451, 252], [256, 341], [341, 452], [452, 256],\r\n    [414, 413], [413, 463], [463, 414], [286, 441], [441, 414], [414, 286],\r\n    [286, 258], [258, 441], [441, 286], [258, 257], [257, 442], [442, 258],\r\n    [257, 259], [259, 443], [443, 257], [259, 260], [260, 444], [444, 259],\r\n    [260, 467], [467, 445], [445, 260], [309, 459], [459, 250], [250, 309],\r\n    [305, 289], [289, 290], [290, 305], [305, 290], [290, 460], [460, 305],\r\n    [401, 376], [376, 435], [435, 401], [309, 250], [250, 392], [392, 309],\r\n    [376, 411], [411, 433], [433, 376], [453, 341], [341, 464], [464, 453],\r\n    [357, 453], [453, 465], [465, 357], [343, 357], [357, 412], [412, 343],\r\n    [437, 343], [343, 399], [399, 437], [344, 360], [360, 440], [440, 344],\r\n    [420, 437], [437, 456], [456, 420], [360, 420], [420, 363], [363, 360],\r\n    [361, 401], [401, 288], [288, 361], [265, 372], [372, 353], [353, 265],\r\n    [390, 339], [339, 249], [249, 390], [339, 448], [448, 255], [255, 339],\r\n];\r\n\r\n/**\r\n * Maps keypoint index to string label.\r\n * It turns MEDIAPIPE_KEYPOINTS_BY_CONTOUR which looks like {\r\n *   lips: [61, 146, 91, 181,...]\r\n *   leftEye: [263, 249, 390, 373, ...]\r\n *   ...\r\n * }\r\n * to the following form: [\r\n *   [61, lips],\r\n *   [146, lips],\r\n *   ...\r\n *   [263, leftEye],\r\n *   [249, leftEye],\r\n *   ...\r\n * ]\r\n */\r\nconst indexLabelPairs = Object.entries(exports.MEDIAPIPE_FACE_MESH_KEYPOINTS_BY_CONTOUR)\r\n    .map(function (_a) {\r\n    var label = _a[0], indices = _a[1]\r\n    return indices.map(function (index) { return [index, label]; })\r\n}).flat()\r\n\r\nexport const MEDIAPIPE_FACE_MESH_KEYPOINTS = new Map(indexLabelPairs)\r\n\r\n\r\n\r\n// ---- found by zen\r\n// simple 2d array of connecte3d vertices in closed loops\r\n\r\nexport const FACE_CONTOURS_LIPS = [\r\n    61,\r\n    146,\r\n    91,\r\n    181,\r\n    84,\r\n    17,\r\n    314,\r\n    405,\r\n    321,\r\n    375,\r\n    61,\r\n    185,\r\n    40,\r\n    39,\r\n    37,\r\n    0,\r\n    267,\r\n    269,\r\n    270,\r\n    409,\r\n    78,\r\n    95,\r\n    88,\r\n    178,\r\n    87,\r\n    14,\r\n    317,\r\n    402,\r\n    318,\r\n    324,\r\n    78,\r\n    191,\r\n    80,\r\n    81,\r\n    82,\r\n    13,\r\n    312,\r\n    311,\r\n    310,\r\n    415,\r\n    308\r\n]\r\n\r\n\r\nexport const FACE_CONTOURS_OUTER_TOP_LIP = [\r\n    61,\r\n    146,\r\n    91,\r\n    181,\r\n    84,\r\n    17,\r\n    314,\r\n    405,\r\n    321,\r\n    375,\r\n    61,\r\n    185,\r\n    40,\r\n    39,\r\n    37,\r\n    0,\r\n    267,\r\n    269,\r\n    270,\r\n    409,\r\n    78,\r\n    95,\r\n    88,\r\n    178,\r\n    87,\r\n    14,\r\n    317,\r\n    402,\r\n    318,\r\n    324,\r\n    78,\r\n    191,\r\n    80,\r\n    81,\r\n    82,\r\n    13,\r\n    312,\r\n    311,\r\n    310,\r\n    415,\r\n    308\r\n]\r\n\r\n// the 40 is a bug as the outer right lip section is not included\r\nexport const LIP_PATH_OUTER = [\r\n\t0,1,2,3,4,5,6,7,8,9, 40\r\n\t,19,18,17,16,15,14,13,12,11,10\r\n]\r\nexport const LIP_PATH_INNER = [\r\n\t20,21,22,23,24,25,26,27,28,29,\r\n\t40,39,38,37,36,35,34,33,32,31,30\r\n]\r\n\r\n\r\nexport const LEFT_EYE_PATH = [\r\n    263, \r\n\t249,\r\n    390,\r\n    373,\r\n    374,\r\n    380,\r\n    381,\r\n    382,\r\n    362,\r\n    466,\r\n    388,\r\n    387,\r\n    386,\r\n    385,\r\n    384,\r\n    398,\r\n    362,\r\n]\r\n\r\n\r\nexport const RIGHT_EYE_PATH = [\r\n    33, \r\n\t7,\r\n    163,\r\n    144,\r\n    145,\r\n    153,\r\n    154,\r\n    155,\r\n    133,\r\n    246,\r\n    161,\r\n    160,\r\n    159,\r\n    158,\r\n    157,\r\n    173,\r\n    133,\r\n]\r\n\r\n\r\n\r\nexport const LEFT_IRIS_PATH = [\r\n    474, \r\n\t475,\r\n    476,\r\n    477,\r\n    474\r\n]\r\nexport const RIGHT_IRIS_PATH = [\r\n    469, \r\n\t470,\r\n    471,\r\n    472,\r\n    469\r\n]\r\n\r\n\r\n// https://github.com/tensorflow/tfjs-models/blob/838611c02f51159afdd77469ce67f0e26b7bbb23/face-landmarks-detection/src/mediapipe-facemesh/keypoints.ts\r\nexport const MESH_ANNOTATIONS = {\r\n\tsilhouette: [\r\n\t\t10,  338, 297, 332, 284, 251, 389, 356, 454, 323, 361, 288,\r\n\t\t397, 365, 379, 378, 400, 377, 152, 148, 176, 149, 150, 136,\r\n\t\t172, 58,  132, 93,  234, 127, 162, 21,  54,  103, 67,  109\r\n\t],\r\n\t\r\n\tlipsUpperOuter: [61, 185, 40, 39, 37, 0, 267, 269, 270, 409, 291],\r\n\tlipsLowerOuter: [146, 91, 181, 84, 17, 314, 405, 321, 375, 291],\r\n\tlipsUpperInner: [78, 191, 80, 81, 82, 13, 312, 311, 310, 415, 308],\r\n\tlipsLowerInner: [78, 95, 88, 178, 87, 14, 317, 402, 318, 324, 308],\r\n\t\r\n\trightEyeUpper0: [246, 161, 160, 159, 158, 157, 173],\r\n\trightEyeLower0: [33, 7, 163, 144, 145, 153, 154, 155, 133],\r\n\trightEyeUpper1: [247, 30, 29, 27, 28, 56, 190],\r\n\trightEyeLower1: [130, 25, 110, 24, 23, 22, 26, 112, 243],\r\n\trightEyeUpper2: [113, 225, 224, 223, 222, 221, 189],\r\n\trightEyeLower2: [226, 31, 228, 229, 230, 231, 232, 233, 244],\r\n\trightEyeLower3: [143, 111, 117, 118, 119, 120, 121, 128, 245],\r\n\t\r\n\trightEyebrowUpper: [156, 70, 63, 105, 66, 107, 55, 193],\r\n\trightEyebrowLower: [35, 124, 46, 53, 52, 65],\r\n\t\r\n\trightEyeIris: [473, 474, 475, 476, 477],\r\n\t\r\n\tleftEyeUpper0: [466, 388, 387, 386, 385, 384, 398],\r\n\tleftEyeLower0: [263, 249, 390, 373, 374, 380, 381, 382, 362],\r\n\tleftEyeUpper1: [467, 260, 259, 257, 258, 286, 414],\r\n\tleftEyeLower1: [359, 255, 339, 254, 253, 252, 256, 341, 463],\r\n\tleftEyeUpper2: [342, 445, 444, 443, 442, 441, 413],\r\n\tleftEyeLower2: [446, 261, 448, 449, 450, 451, 452, 453, 464],\r\n\tleftEyeLower3: [372, 340, 346, 347, 348, 349, 350, 357, 465],\r\n\t\r\n\tleftEyebrowUpper: [383, 300, 293, 334, 296, 336, 285, 417],\r\n\tleftEyebrowLower: [265, 353, 276, 283, 282, 295],\r\n\t\r\n\tleftEyeIris: [468, 469, 470, 471, 472],\r\n\t\r\n\tmidwayBetweenEyes: [168],\r\n\t\r\n\tnoseTip: [1],\r\n\tnoseBottom: [2],\r\n\tnoseRightCorner: [98],\r\n\tnoseLeftCorner: [327],\r\n\t\r\n\trightCheek: [205],\r\n\tleftCheek: [425]\r\n}"],"names":[],"version":3,"file":"face-worker.19cbddb0.js.map","sourceRoot":"/__parcel_source_root/"}