{
	"name": "interface.place",
	"description": "Instant Musical Superpowers! Body controllable accessible musical instrument",
	"version": "0.20.1",
	"time": 1696238489991,
	"author": "designerzen <github@designerzen.com>",
	"license": "GPL-2.0-only",
	"repository": "https://github.com/designerzen/InterFACE.git",
	"bugs": "https://github.com/designerzen/InterFACE/issues",
	"homepage": "https://interface.place",
	"keywords": [
		"music",
		"accessibility",
		"machine learning",
		"ai",
		"xr",
		"ar"
	],
	"targets": {
		"main": false,
		"default": {},
		"electron-preload": {
			"source": "source/electron/preload.ts",
			"distDir": "./dist-electron/electron/",
			"context": "electron-renderer",
			"publicUrl": "./",
			"sourceMap": false,
			"engines": {
				"electron": ">=19.x"
			}
		},
		"electron-main": {
			"source": "source/electron/main.ts",
			"distDir": "./dist-electron/electron/",
			"context": "electron-main",
			"publicUrl": "./",
			"sourceMap": true,
			"scopeHoist": false
		},
		"electron-renderer": {
			"source": "source/app.pug",
			"includeNodeModules": true,
			"distDir": "./dist-electron/main",
			"publicUrl": "./",
			"context": "electron-renderer",
			"sourceMap": true
		},
		"web": {
			"source": "source/index.pug",
			"distDir": "./release/web/",
			"publicUrl": "./",
			"context": "browser",
			"sourceMap": true
		}
	},
	"postinstall": "electron-builder install-app-deps",
	"scripts": {
		"test": "jest",
		"tests": "parcel serve source/tests.pug -p 606",
		"test:timing": "parcel serve source/tests.pug -p 606",
		"push:": "git push origin --tags && git push origin",
		"=UTILITIES=": "------------------------------------",
		"killport": "npx kill-port 909",
		"deps": "npm ci",
		"hardreset": "node actions/reset.mjs --total",
		"reset": "node actions/reset.mjs",
		"rebuild": "./node_modules/.bin/electron-rebuild.cmd",
		"mobile:icons": "npx capacitor-assets generate",
		"icons": "npm run electron:icons && npm run mobile:icons",
		"analyse": "parcel build source/index.pug --profile --detailed-report",
		"=START=": "------------------------------------",
		"freshstart": "npm run reset && npm run start",
		"start": "npm run serve",
		"index": "npm run serve:index",
		"wam": "npm run serve:wam",
		"upgrader": "npx npm-check-updates --interactive -u",
		"changes": "node actions/changelog.mjs",
		"clean": "node actions/clean.mjs",
		"copy": "node actions/copy.mjs",
		"clear": "npm run clean && npm run copy",
		"doc": "jsdoc -d docs --configure .jsdoc.json source/interface.js",
		"=SERVE=": "------------------------------------",
		"serve": "parcel serve -p 909 --target web",
		"serve:index": "parcel serve source/index.pug -p 909",
		"serve:tests": "parcel serve source/tests.pug -p 909",
		"serve:wam": "parcel serve source/tests.pug -p 909",
		"=BUILD=": "------------------------------------",
		"build": "npm run copy && npm run build:all",
		"build:help": "parcel build --public-url ./ source/help.pug",
		"build:roadmap": "parcel build --public-url ./ source/roadmap.pug",
		"build:debug": "parcel build --no-minify --no-scope-hoist ---no-content-hash --public-url ./  source/*.pug",
		"build:all": "parcel build --public-url ./ source/*.pug",
		"build:cloudflare": "parcel build --public-url ./ source/*.pug",
		"build:wam": "parcel build --no-content-hash --public-url ./ source/wam.pug",
		"build:index": "parcel build --public-url ./ source/index.pug",
		"build:release": "parcel build --target electron-main --target electron-renderer --target web",
		"build:web": "parcel build --target web",
		"=ELECTRON=": "------------------------------------",
		"electron:clean": "rimraf dist-electron && rimraf release",
		"electron:icons": "electron-icon-maker --input=./source/assets/logos/interface_round.2048.png --output=./static/",
		"electron:secure": "electronegativity -i ./dist-electron/",
		"electron:postinstall": "electron-builder install-app-deps",
		"electron:postuninstall": "electron-builder install-app-deps",
		"electron:test": "electron --inspect=9229  --enable-logging dist-electron/electron/main.js",
		"electron:build": "npm run electron:compile && npm run electron:renderer",
		"electron:compile": "parcel build --target electron-preload --target electron-main --config ./.parcelnocopyrc",
		"electron:renderer": "parcel build --target electron-renderer --no-content-hash",
		"electron:serve": "parcel serve --target electron-renderer -p 303",
		"electron:dev": "npm run electron:compile && concurrently 'npm:electron:serve' 'npm:electron:test'",
		"electron:package": "electron-builder",
		"electron:make": "npm run electron:clean && npm run electron:build && npm run electron:package",
		"build:electron-main": "parcel build --target electron-main --config ./.parcelnocopyrc",
		"build:electron-preload": "parcel build --target electron-preload --config ./.parcelnocopyrc",
		"build:electron-renderer": "parcel build --target electron-renderer --no-content-hash",
		"build:electron": "npm run electron:build",
		"run:electron": "electron . --enable-logging",
		"packager:electron": "electron-packager . photosynth-interface --overwrite --out=releases --icon=./source/assets/icons/icon.ico",
		"open:electron": "npx cap open @capacitor-community/electron",
		"status:electron": "electron-packager --version",
		"debug:electron": "electron --inspect",
		"make:electron": "electron-builder -mwl",
		"=ANDROID=": "------------------------------------",
		"build:android": "parcel build --public-url ./ --dist-dir ./dist --no-source-maps source/app.pug",
		"android:add": "npx cap add android",
		"android:open": "npx cap open android",
		"android:run": "npx cap run android",
		"android": "npm run clear && npm run build:android && node actions/app.mjs && npm run android:add && npm run android:open",
		"=LICENSES=": "------------------------------------",
		"copyrights:list": "NODE_ENV=production yarn licenses list && node license.mjs",
		"license": "yarn licenses generate-disclaimer > LICENSES.md && yarn licenses generate-disclaimer > source/licenses.md",
		"license:build": "parcel build --public-url ./ source/licenses.pug",
		"=REVISION=": "------------------------------------",
		"patch": "changelog -p && npm version patch -m 'Hotfix Release v%s' --force && node actions/revision.mjs",
		"minor": "changelog -m && npm version minor -m 'Minor Release v%s' --force && node actions/revision.mjs",
		"major": "changelog -M && npm version major -m 'Major Release v%s' --force && node actions/revision.mjs",
		"=RELEASE=": "------------------------------------",
		"package": "npm run minor && npm run clear && npm run build",
		"release:patch": "npm run patch && npm run build:all",
		"release:minor": "npm run minor && npm run build:all",
		"release:major": "npm run major && npm run build:all",
		"release:app": "npm run patch && npm run copy && npm run push"
	},
	"staticFiles": {
		"staticFiles": [
			{
				"staticPath": "static"
			},
			{
				"staticPath": "./node_modules/@tensorflow/tfjs-backend-wasm/dist",
				"staticOutPath": "tf/"
			},
			{
				"staticPath": "./node_modules/@mediapipe/face_mesh",
				"staticOutPath": "@mediapipe/"
			},
			{
				"staticPath": "./node_modules/@mediapipe/tasks-vision/wasm",
				"staticOutPath": "@mediapipe/"
			}
		]
	},
	"engines": {
		"node": "^v19.0.0"
	},
	"dependencies": {
		"@analytics/google-analytics": "^1.0.7",
		"@capacitor/android": "^5.7.2",
		"@capacitor/core": "^5.7.2",
		"@capacitor/electron": "^2.5.0",
		"@capacitor/ios": "^5.7.2",
		"@electron-toolkit/utils": "^3.0.0",
		"@lookingglass/webxr": "^0.4.0",
		"@mediapipe/face_detection": "^0.4.1646425229",
		"@mediapipe/face_mesh": "^0.4.1633559619",
		"@mediapipe/pose": "^0.5.1675469404",
		"@tensorflow/tfjs": "^4.17.0",
		"@tweakpane/core": "^2.0.3",
		"@webaudiomodules/api": "^2.0.0-alpha.6",
		"@webaudiomodules/sdk": "^0.0.11",
		"@webaudiomodules/sdk-parammgr": "^0.0.13",
		"abcjs": "^6.3.0",
		"analytics": "^0.8.11",
		"audio-decode": "^2.2.0",
		"audioworklet-polyfill": "^1.1.2",
		"dialog-polyfill": "^0.5.6",
		"easymidi": "^3.1.0",
		"electron-debug": "^3.2.0",
		"electron-log": "^5.1.2",
		"electron-reloader": "^1.2.3",
		"electron-updater": "^6.1.8",
		"electron-window-state": "^5.0.3",
		"essentia.js": "^0.1.3",
		"holoplay-core": "^0.0.9",
		"is-electron": "^2.2.2",
		"midi": "^2.0.0",
		"midi-writer-js": "^3.1.1",
		"mpe": "^1.0.4",
		"ringbuf.js": "^0.3.6",
		"share-menu": "^5.1.0",
		"stats.js": "^0.17.0",
		"three": "^0.162.0",
		"tweakpane": "^4.0.3",
		"webmidi": "^3.1.8",
		"workbox-cacheable-response": "^7.0.0",
		"workbox-core": "^7.0.0",
		"workbox-expiration": "^7.0.0",
		"workbox-google-analytics": "^7.0.0",
		"workbox-precaching": "^7.0.0",
		"workbox-range-requests": "^7.0.0",
		"workbox-recipes": "^7.0.0",
		"workbox-routing": "^7.0.0",
		"workbox-strategies": "^7.0.0",
		"workbox-sw": "^7.0.0"
	},
	"devDependencies": {
		"@bubblewrap/cli": "^1.21.0",
		"@capacitor/assets": "^3.0.4",
		"@capacitor/cli": "^5.7.2",
		"@electron-toolkit/utils": "^3.0.0",
		"@electron/rebuild": "^3.6.0",
		"@mediapipe/tasks-vision": "^0.10.12",
		"@nodert-win11/windows.devices.midi": "^0.1.6",
		"@parcel/packager-raw-url": "2.12.0",
		"@parcel/packager-xml": "2.12.0",
		"@parcel/transformer-inline-string": "2.12.0",
		"@parcel/transformer-pug": "2.12.0",
		"@parcel/transformer-sass": "2.12.0",
		"@parcel/transformer-webmanifest": "2.12.0",
		"@parcel/transformer-worklet": "2.12.0",
		"@parcel/transformer-xml": "2.12.0",
		"concurrently": "^8.2.2",
		"crypto-browserify": "^3.12.0",
		"electron": "^29.1.4",
		"electron-builder": "^24.13.3",
		"electron-devtools-installer": "^3.2.0",
		"electron-icon-maker": "^0.0.5",
		"electron-packager": "^17.1.2",
		"events": "^3.3.0",
		"generate-changelog": "^1.8.0",
		"jest": "^29.7.0",
		"jsdoc": "^4.0.2",
		"jstransformer-markdown-it": "^3.0.0",
		"parcel": "^2.12.0",
		"parcel-reporter-static-files-copy": "^1.5.3",
		"path-browserify": "^1.0.1",
		"postcss": "^8.4.35",
		"process": "^0.11.10",
		"rimraf": "^5.0.5",
		"sass": "^1.72.0",
		"showdown": "^2.1.0",
		"stream-browserify": "^3.0.0"
	}
}
