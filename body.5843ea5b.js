!function(e,t,n,r,i){var o="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},a="function"==typeof o[r]&&o[r],s=a.cache||{},u="undefined"!=typeof module&&"function"==typeof module.require&&module.require.bind(module);function l(t,n){if(!s[t]){if(!e[t]){var i="function"==typeof o[r]&&o[r];if(!n&&i)return i(t,!0);if(a)return a(t,!0);if(u&&"string"==typeof t)return u(t);var h=new Error("Cannot find module '"+t+"'");throw h.code="MODULE_NOT_FOUND",h}d.resolve=function(n){var r=e[t][1][n];return null!=r?r:n},d.cache={};var c=s[t]=new l.Module(t);e[t][0].call(c.exports,d,c,c.exports,this)}return s[t].exports;function d(e){var t=d.resolve(e);return!1===t?{}:l(t)}}l.isParcelRequire=!0,l.Module=function(e){this.id=e,this.bundle=l,this.exports={}},l.modules=e,l.cache=s,l.parent=a,l.register=function(t,n){e[t]=[function(e,t){t.exports=n},{}]},Object.defineProperty(l,"root",{get:function(){return o[r]}}),o[r]=l;for(var h=0;h<t.length;h++)l(t[h])}({"4Cz1G":[function(e,t,n){var r=e("@parcel/transformer-js/src/esmodule-helpers.js");r.defineInteropFlag(n),r.export(n,"loadBodyModel",(()=>a));e("@tensorflow/tfjs-backend-webgl");var i=e("@tensorflow-models/pose-detection"),o=(e("../maths/maths"),e("@tensorflow/tfjs"));const a=async(e,t)=>{console.error("loadModel",{inputElement:e}),await(0,o.ready)(),console.error("loadModel",{inputElement:e});const n=t.maxFaces,r=await i.createDetector(i.SupportedModels.MoveNet),a=async(t,i,o=null)=>{if(!o||o()){const t=await r.estimatePoses(e),o=Math.min(n,t.length);i(t.length?t.slice(0,o):[])}t&&requestAnimationFrame((()=>a(t,i,o)))};return a}},{"@tensorflow/tfjs-backend-webgl":"evSKx","@tensorflow-models/pose-detection":"fOlxg","../maths/maths":"iDBHd","@tensorflow/tfjs":"foAaF","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],fOlxg:[function(e,t,n){
/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */
var r=e("@parcel/transformer-js/src/esmodule-helpers.js");r.defineInteropFlag(n),r.export(n,"SupportedModels",(()=>_e)),r.export(n,"TrackerType",(()=>Re)),r.export(n,"calculators",(()=>pu)),r.export(n,"createDetector",(()=>du)),r.export(n,"movenet",(()=>fu)),r.export(n,"util",(()=>Me));var i=e("@mediapipe/pose"),o=e("@tensorflow/tfjs-core"),a=e("@tensorflow/tfjs-converter"),s=function(e,t){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var l=function(){return(l=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function h(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{u(r.next(e))}catch(e){o(e)}}function s(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}u((r=r.apply(e,t||[])).next())}))}function c(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}function d(e,t,n){if(n||2===arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))}var p=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],f=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],m={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},g={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},y=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],b=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function x(e){return e instanceof SVGAnimatedLength?e.baseVal.value:e}function v(e){return h(this,void 0,void 0,(function(){var t,n;return c(this,(function(r){switch(r.label){case 0:return t=document.createElement("canvas"),e instanceof o.Tensor?[4,o.browser.toPixels(e,t)]:[3,2];case 1:return r.sent(),[3,3];case 2:t.width=x(e.width),t.height=x(e.height),n=t.getContext("2d"),e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0),r.label=3;case 3:return[2,t]}}))}))}function w(e){return h(this,void 0,void 0,(function(){var t,n,r,i,a,s;return c(this,(function(u){switch(u.label){case 0:return e instanceof o.Tensor?(t=e.shape.slice(0,2),n=t[0],r=t[1],i=ImageData.bind,[4,o.browser.toPixels(e)]):[3,2];case 1:return[2,new(i.apply(ImageData,[void 0,u.sent(),r,n]))];case 2:return a=document.createElement("canvas"),s=a.getContext("2d"),a.width=x(e.width),a.height=x(e.height),s.drawImage(e,0,0),[2,s.getImageData(0,0,a.width,a.height)]}}))}))}function k(e){return h(this,void 0,void 0,(function(){var t,n;return c(this,(function(r){switch(r.label){case 0:return e instanceof SVGImageElement||e instanceof OffscreenCanvas?[4,v(e)]:[3,2];case 1:return n=r.sent(),[3,3];case 2:n=e,r.label=3;case 3:return t=n,[2,o.browser.fromPixels(t,4)]}}))}))}function S(e){if(e<0||e>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(e));if(!Number.isInteger(e))throw new Error("Mask value must be an integer but got ".concat(e))}var I={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},C=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return h(this,void 0,void 0,(function(){return c(this,(function(e){return[2,this.mask]}))}))},e.prototype.toImageData=function(){return h(this,void 0,void 0,(function(){return c(this,(function(e){return[2,w(this.mask)]}))}))},e.prototype.toTensor=function(){return h(this,void 0,void 0,(function(){return c(this,(function(e){return[2,k(this.mask)]}))}))},e.prototype.getUnderlyingType=function(){return"canvasimagesource"},e}();function T(e){return S(e),"person"}var A=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new(0,i.Pose)({locateFile:function(t,n){if(e.solutionPath){var r=e.solutionPath.replace(/\/+$/,"");return"".concat(r,"/").concat(t)}return"".concat(n,"/").concat(t)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){if(n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks)n.poses=[];else{var t=n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks);e.segmentationMask&&(t.segmentation={maskValueToLabel:T,mask:new C(e.segmentationMask)}),n.poses=[t]}}))}return e.prototype.translateOutput=function(e,t){var n=this,r={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:f[t]}}))};return null!=t&&(r.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:f[t]}}))),r},e.prototype.estimatePoses=function(e,t,n){return h(this,void 0,void 0,(function(){var r,i;return c(this,(function(a){switch(a.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof o.Tensor?(i=ImageData.bind,[4,o.browser.toPixels(e)]):[3,2];case 1:return r=new(i.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,a.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},n)];case 4:return a.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function R(e){return h(this,void 0,void 0,(function(){var t,n;return c(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return l({},I);var t=l({},e);return t.runtime="mediapipe",null==t.enableSegmentation&&(t.enableSegmentation=I.enableSegmentation),null==t.enableSmoothing&&(t.enableSmoothing=I.enableSmoothing),null==t.smoothSegmentation&&(t.smoothSegmentation=I.smoothSegmentation),null==t.modelType&&(t.modelType=I.modelType),t}(e),[4,(n=new A(t)).initialize()];case 1:return r.sent(),[2,n]}}))}))}function _(e){return e instanceof o.Tensor?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function P(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function E(e){return e instanceof o.Tensor?e:o.browser.fromPixels(e)}function $(e,t,n){return F(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}function F(e,t){o.util.assert(0!==e.width,(function(){return"".concat(t," width cannot be 0.")})),o.util.assert(0!==e.height,(function(){return"".concat(t," height cannot be 0.")}))}function N(e,t,n){var r=n.rotationVectorStartKeypointIndex,i=n.rotationVectorEndKeypointIndex,o=e.locationData,a=o.relativeKeypoints[r].x*t.width,s=o.relativeKeypoints[r].y*t.height,u=o.relativeKeypoints[i].x*t.width,l=o.relativeKeypoints[i].y*t.height,h=2*Math.sqrt((u-a)*(u-a)+(l-s)*(l-s)),c=function(e,t,n){var r,i=e.locationData,o=n.rotationVectorStartKeypointIndex,a=n.rotationVectorEndKeypointIndex;r=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var s=i.relativeKeypoints[o].x*t.width,u=i.relativeKeypoints[o].y*t.height,l=i.relativeKeypoints[a].x*t.width,h=i.relativeKeypoints[a].y*t.height;return P(r-Math.atan2(-(h-u),l-s))}(e,t,n);return{xCenter:a/t.width,yCenter:s/t.height,width:h/t.width,height:h/t.height,rotation:c}}function M(e){if(16!==e.length)throw new Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}function z(e,t,n,r,i,o,a){return e[t][i]*(e[n][o]*e[r][a]-e[n][a]*e[r][o])}function O(e,t,n){var r=(t+1)%4,i=(t+2)%4,o=(t+3)%4,a=(n+1)%4,s=(n+2)%4,u=(n+3)%4;return z(e,r,i,o,a,s,u)+z(e,i,o,r,a,s,u)+z(e,o,r,i,a,s,u)}function L(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],i=0,o=e;i<o.length;i++){var a=o[i],s=a.x-.5,u=a.y-.5,h=n.ignoreRotation?0:t.rotation,c=Math.cos(h)*s-Math.sin(h)*u,d=Math.sin(h)*s+Math.cos(h)*u;c=c*t.width+t.xCenter,d=d*t.height+t.yCenter;var p=a.z*t.width,f=l({},a);f.x=c,f.y=d,f.z=p,r.push(f)}return r}function B(e,t){var n=function(e,t,n,r){var i=(r-n)/255;return{scale:i,offset:n-0*i}}(0,0,t[0],t[1]);return(0,o.tidy)((function(){return(0,o.add)((0,o.mul)(e,n.scale),n.offset)}))}function D(e,t,n){var r,i,a,s,u,l,h,c,d,p,f,m,g=t.outputTensorSize,y=t.keepAspectRatio,b=t.borderMode,x=t.outputTensorFloatRange,v=_(e),w=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(v,n),k=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,i=t.width;F(t,"targetSize"),F(e,"roi");var o,a,s=r/i,u=e.height/e.width,l=0,h=0;return s>u?(o=e.width,a=e.width*s,h=(1-u/s)/2):(o=e.height/s,a=e.height,l=(1-s/u)/2),e.width=o,e.height=a,{top:h,left:l,right:l,bottom:h}}(w,g,y),S=(r=w,i=v.width,a=v.height,!1,s=r.width,u=r.height,1,l=Math.cos(r.rotation),h=Math.sin(r.rotation),c=r.xCenter,d=r.yCenter,p=1/i,f=1/a,(m=new Array(16))[0]=s*l*1*p,m[1]=-u*h*p,m[2]=0,m[3]=(-.5*s*l*1+.5*u*h+c)*p,m[4]=s*h*1*f,m[5]=u*l*f,m[6]=0,m[7]=(-.5*u*l-.5*s*h*1+d)*f,m[8]=0,m[9]=0,m[10]=s*p,m[11]=0,m[12]=0,m[13]=0,m[14]=0,m[15]=1,M(m));return{imageTensor:(0,o.tidy)((function(){var t=E(e),n=(0,o.tensor2d)($(S,v,g),[1,8]),r="zero"===b?"constant":"nearest",i=o.image.transform((0,o.expandDims)((0,o.cast)(t,"float32")),n,"bilinear",r,0,[g.height,g.width]);return null!=x?B(i,x):i})),padding:k,transformationMatrix:S}}function U(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function W(e){return null!=e&&null!=e.currentTime}function V(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,i=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,a=0;a<e.length;++a){var s=e[a];n=Math.min(n,s.x),r=Math.max(r,s.x),i=Math.min(i,s.y),o=Math.max(o,s.y),t.locationData.relativeKeypoints.push({x:s.x,y:s.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:i,xMax:r,yMax:o,width:r-n,height:o-i},t}function G(e,t,n,r){return h(this,void 0,void 0,(function(){var r,i,a,s,u;return c(this,(function(l){switch(l.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),r=(0,o.tensor2d)(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),i=(0,o.tensor1d)(e.map((function(e){return e.score[0]}))),[4,o.image.nonMaxSuppressionAsync(r,i,t,n)];case 1:return[4,(a=l.sent()).array()];case 2:return s=l.sent(),u=e.filter((function(e,t){return s.indexOf(t)>-1})),(0,o.dispose)([r,i,a]),[2,u]}}))}))}function H(e,t){return e.map((function(e){var n=l(l({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}function j(e,t,n){return h(this,void 0,void 0,(function(){var r,i,a,s,u,h,d,p,f,m,g,y,b,x,v,w,k,S,I,C,T,A,R,_;return c(this,(function(c){switch(c.label){case 0:if(r=(0,o.squeeze)(t,[0]),i=r.shape,a=i[0],s=i[1],u=i[2],e.length!==u)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(e.length,", heatmap length: ").concat(u));return h=[],[4,r.buffer()];case 1:for(d=c.sent(),p=0;p<e.length;p++)if(f=e[p],m=l({},f),h.push(m),g=Math.trunc(m.x*s),y=Math.trunc(m.y*a),!(g<0||g>=s||y<0||g>=a)){for(b=Math.trunc((n.kernelSize-1)/2),x=Math.max(0,g-b),v=Math.min(s,g+b+1),w=Math.max(0,y-b),k=Math.min(a,y+b+1),S=0,I=0,C=0,T=0,A=w;A<k;++A)for(R=x;R<v;++R)_=d.get(A,R,p),S+=_,T=Math.max(T,_),I+=R*_,C+=A*_;T>=n.minConfidenceToRefine&&S>0&&(m.x=I/s/S,m.y=C/a/S)}return r.dispose(),[2,h]}}))}))}function K(e,t){var n=t.left,r=t.top,i=t.left+t.right,o=t.top+t.bottom;return e.map((function(e){return l(l({},e),{x:(e.x-n)/(1-i),y:(e.y-r)/(1-o),z:e.z/(1-i)})}))}function q(e,t,n){return h(this,void 0,void 0,(function(){var r,i,a,s,u;return c(this,(function(l){switch(l.label){case 0:return r=e[0],i=e[1],a=function(e,t,n){return(0,o.tidy)((function(){var r,i,a,s;n.reverseOutputOrder?(i=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+0],[-1,1])),r=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+1],[-1,1])),s=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+2],[-1,1])),a=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+3],[-1,1]))):(r=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+0],[-1,1])),i=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+1],[-1,1])),a=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+2],[-1,1])),s=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+3],[-1,1]))),i=(0,o.add)((0,o.mul)((0,o.div)(i,n.xScale),t.w),t.x),r=(0,o.add)((0,o.mul)((0,o.div)(r,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(a=(0,o.mul)((0,o.exp)((0,o.div)(a,n.hScale)),t.h),s=(0,o.mul)((0,o.exp)((0,o.div)(s,n.wScale)),t.w)):(a=(0,o.mul)((0,o.div)(a,n.hScale),t.h),s=(0,o.mul)((0,o.div)(s,n.wScale),t.h));var u=(0,o.sub)(r,(0,o.div)(a,2)),l=(0,o.sub)(i,(0,o.div)(s,2)),h=(0,o.add)(r,(0,o.div)(a,2)),c=(0,o.add)(i,(0,o.div)(s,2)),d=(0,o.concat)([(0,o.reshape)(u,[n.numBoxes,1]),(0,o.reshape)(l,[n.numBoxes,1]),(0,o.reshape)(h,[n.numBoxes,1]),(0,o.reshape)(c,[n.numBoxes,1])],1);if(n.numKeypoints)for(var p=0;p<n.numKeypoints;++p){var f=n.keypointCoordOffset+p*n.numValuesPerKeypoint,m=void 0,g=void 0;n.reverseOutputOrder?(m=(0,o.squeeze)((0,o.slice)(e,[0,f],[-1,1])),g=(0,o.squeeze)((0,o.slice)(e,[0,f+1],[-1,1]))):(g=(0,o.squeeze)((0,o.slice)(e,[0,f],[-1,1])),m=(0,o.squeeze)((0,o.slice)(e,[0,f+1],[-1,1])));var y=(0,o.add)((0,o.mul)((0,o.div)(m,n.xScale),t.w),t.x),b=(0,o.add)((0,o.mul)((0,o.div)(g,n.yScale),t.h),t.y);d=(0,o.concat)([d,(0,o.reshape)(y,[n.numBoxes,1]),(0,o.reshape)(b,[n.numBoxes,1])],1)}return d}))}(i,t,n),s=(0,o.tidy)((function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=(0,o.clipByValue)(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=(0,o.sigmoid)(e)):e})),[4,X(a,s,n)];case 1:return u=l.sent(),(0,o.dispose)([a,s]),[2,u]}}))}))}function X(e,t,n){return h(this,void 0,void 0,(function(){var r,i,o,a,s,u,l,h,d,p,f,m;return c(this,(function(c){switch(c.label){case 0:return r=[],[4,e.data()];case 1:return i=c.sent(),[4,t.data()];case 2:for(o=c.sent(),a=0;a<n.numBoxes;++a)if(!(null!=n.minScoreThresh&&o[a]<n.minScoreThresh||(s=a*n.numCoords,u=Y(i[s+0],i[s+1],i[s+2],i[s+3],o[a],n.flipVertically,a),(l=u.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((h=u.locationData).relativeKeypoints=[],d=n.numKeypoints*n.numValuesPerKeypoint,p=0;p<d;p+=n.numValuesPerKeypoint)f=s+n.keypointCoordOffset+p,m={x:i[f+0],y:n.flipVertically?1-i[f+1]:i[f+1]},h.relativeKeypoints.push(m);r.push(u)}return[2,r]}}))}))}function Y(e,t,n,r,i,o,a){return{score:[i],ind:a,locationData:{relativeBoundingBox:{xMin:t,yMin:o?1-n:e,xMax:r,yMax:o?1-e:n,width:r-t,height:n-e}}}}function Q(e,t){return"none"===e?t:function(e){return 1/(1+Math.exp(-e))}(t)}function Z(e,t,n,r){return h(this,void 0,void 0,(function(){var i,o,a,s,u,l,h,d;return c(this,(function(c){switch(c.label){case 0:return n=n||t.flipHorizontally||!1,r=r||t.flipVertically||!1,i=e.size,o=i/t.numLandmarks,[4,e.data()];case 1:for(a=c.sent(),s=[],u=0;u<t.numLandmarks;++u)l=u*o,(d={x:0,y:0}).x=n?t.inputImageWidth-a[l]:a[l],o>1&&(d.y=r?t.inputImageHeight-a[l+1]:a[l+1]),o>2&&(d.z=a[l+2]),o>3&&(d.score=Q(t.visibilityActivation,a[l+3])),s.push(d);for(h=0;h<s.length;++h)(d=s[h]).x=d.x/t.inputImageWidth,d.y=d.y/t.inputImageHeight,d.z=d.z/t.inputImageWidth/(t.normalizeZ||1);return[2,s]}}))}))}function J(e,t,n){var r=e.width,i=e.height,o=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(o=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),P(e)}(o,n)),0===o)e.xCenter=e.xCenter+r*n.shiftX,e.yCenter=e.yCenter+i*n.shiftY;else{var a=(t.width*r*n.shiftX*Math.cos(o)-t.height*i*n.shiftY*Math.sin(o))/t.width,s=(t.width*r*n.shiftX*Math.sin(o)+t.height*i*n.shiftY*Math.cos(o))/t.height;e.xCenter=e.xCenter+a,e.yCenter=e.yCenter+s}if(n.squareLong){var u=Math.max(r*t.width,i*t.height);r=u/t.width,i=u/t.height}else if(n.squareShort){var l=Math.min(r*t.width,i*t.height);r=l/t.width,i=l/t.height}return e.width=r*n.scaleX,e.height=i*n.scaleY,e}function ee(e,t){return e.map((function(e){var n=l(l({},e),{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}var te=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),ne=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new te(this.getAlpha(this.minCutOff)),this.dx=new te(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;0!==this.lastTimestamp&&0!==r&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var i=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,o=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(o),s=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(o):null;return this.x.applyWithAlpha(e,this.getAlpha(a),s)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),re=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var i=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return d([],e,!0);i=1/n}return e.map((function(e,n){var o=l(l({},e),{x:r.xFilters[n].apply(e.x,t,i),y:r.yFilters[n].apply(e.y,t,i)});return null!=e.z&&(o.z=r.zFilters[n].apply(e.z,t,i)),o}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new ne(t.config)})),this.yFilters=e.map((function(e){return new ne(t.config)})),this.zFilters=e.map((function(e){return new ne(t.config)})))},e}(),ie=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new te(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r,i=Math.trunc(t);if(this.lastTimestamp>=i)return e;if(-1===this.lastTimestamp)r=1;else{for(var o=e*n-this.lastValue*this.lastValueScale,a=i-this.lastTimestamp,s=o,u=a,l=(1+this.window.length)*(1e6/30),h=0,c=this.window;h<c.length;h++){var d=c[h];if(u+d.duration>l)break;s+=d.distance,u+=d.duration}var p=s/(1e-6*u);r=1-1/(1+this.config.velocityScale*Math.abs(p)),this.window.unshift({distance:o,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(e,r)},e}(),oe=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return d([],e,!0);i=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var o=l(l({},e),{x:r.xFilters[n].apply(e.x,t,i),y:r.yFilters[n].apply(e.y,t,i)});return null!=e.z&&(o.z=r.zFilters[n].apply(e.z,t,i)),o}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new ie(t.config)})),this.yFilters=e.map((function(e){return new ie(t.config)})),this.zFilters=e.map((function(e){return new ie(t.config)})))},e}(),ae=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new oe(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new re(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,r,i){if(void 0===r&&(r=!1),null==e)return this.keypointsFilter.reset(),null;var o=null!=i?function(e,t){return(e.width*t.width+e.height*t.height)/2}(i,n):1,a=r?H(e,n):e,s=this.keypointsFilter.apply(a,t,o);return r?ee(s,n):s},e}(),se=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new te(t.alpha)})));for(var n=[],r=0;r<e.length;++r){var i=e[r],o=l({},i);o.score=this.visibilityFilters[r].apply(i.score),n.push(o)}return n},e}(),ue={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},le={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},he={maxPoses:1,flipHorizontal:!1},ce={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},de={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},pe={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},fe={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},me={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},ge={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},ye={kernelSize:7,minConfidenceToRefine:.5},be={alpha:.1},xe={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},ve={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},we={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},ke={activation:"none"},Se={combineWithPreviousRatio:.7},Ie=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return h(this,void 0,void 0,(function(){return c(this,(function(e){return[2,v(this.mask)]}))}))},e.prototype.toImageData=function(){return h(this,void 0,void 0,(function(){return c(this,(function(e){return[2,w(this.mask)]}))}))},e.prototype.toTensor=function(){return h(this,void 0,void 0,(function(){return c(this,(function(e){return[2,this.mask]}))}))},e.prototype.getUnderlyingType=function(){return"tensor"},e}();function Ce(e){return S(e),"person"}var Te=function(){function e(e,t,n,r,i,a){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.enableSegmentation=r,this.smoothSegmentation=i,this.modelType=a,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var r=[],i=[],o=[],a=[],s=n;s<e.strides.length&&e.strides[s]===e.strides[n];){var u=U(e.minScale,e.maxScale,s,e.strides.length);if(0===s&&e.reduceBoxesInLowestLayer)o.push(1),o.push(2),o.push(.5),a.push(.1),a.push(u),a.push(u);else{for(var l=0;l<e.aspectRatios.length;++l)o.push(e.aspectRatios[l]),a.push(u);if(e.interpolatedScaleAspectRatio>0){var h=s===e.strides.length-1?1:U(e.minScale,e.maxScale,s+1,e.strides.length);a.push(Math.sqrt(u*h)),o.push(e.interpolatedScaleAspectRatio)}}s++}for(var c=0;c<o.length;++c){var d=Math.sqrt(o[c]);r.push(a[c]/d),i.push(a[c]*d)}var p=0,f=0;if(e.featureMapHeight.length>0)p=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];p=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<p;++g)for(var y=0;y<f;++y)for(var b=0;b<r.length;++b){var x={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/p,width:0,height:0};e.fixedAnchorSize?(x.width=1,x.height=1):(x.width=i[b],x.height=r[b]),t.push(x)}n=s}return t}(ue);var s=(0,o.tensor1d)(this.anchors.map((function(e){return e.width}))),u=(0,o.tensor1d)(this.anchors.map((function(e){return e.height}))),l=(0,o.tensor1d)(this.anchors.map((function(e){return e.xCenter}))),h=(0,o.tensor1d)(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:l,y:h,w:s,h:u},this.prevFilteredSegmentationMask=this.enableSegmentation?(0,o.tensor2d)([],[0,0]):null}return e.prototype.estimatePoses=function(e,t,n){return h(this,void 0,void 0,(function(){var r,i,a,s,u,h,d,p,m,g,y,b,x,v,w,k,S,I,C,T,A,R,P;return c(this,(function(c){switch(c.label){case 0:return r=function(e){var t;if(null==(t=null==e?he:l({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=null!=n?1e3*n:W(e)?1e6*e.currentTime:null,i=_(e),a=(0,o.tidy)((function(){return(0,o.cast)(E(e),"float32")})),null!=(s=this.regionOfInterest)?[3,2]:[4,this.detectPose(a)]);case 1:if(0===(u=c.sent()).length)return this.reset(),a.dispose(),[2,[]];h=u[0],s=this.poseDetectionToRoi(h,i),c.label=2;case 2:return[4,this.poseLandmarksByRoi(s,a)];case 3:return d=c.sent(),a.dispose(),null==d?(this.reset(),[2,[]]):(p=d.landmarks,m=d.auxiliaryLandmarks,g=d.poseScore,y=d.worldLandmarks,b=d.segmentationMask,x=this.poseLandmarkFiltering(p,m,y,i),v=x.actualLandmarksFiltered,w=x.auxiliaryLandmarksFiltered,k=x.actualWorldLandmarksFiltered,S=this.poseLandmarksToRoi(w,i),this.regionOfInterest=S,I=this.smoothSegmentation&&null!=b?this.poseSegmentationFiltering(b):b,null!=(C=null!=v?H(v,i):null)&&C.forEach((function(e,t){e.name=f[t]})),null!=(T=k)&&T.forEach((function(e,t){e.name=f[t]})),A={score:g,keypoints:C,keypoints3D:T},null!==I&&(R=(0,o.tidy)((function(){var e=(0,o.expandDims)(I,2),t=(0,o.pad)(e,[[0,0],[0,0],[0,1]]);return(0,o.mirrorPad)(t,[[0,0],[0,0],[0,2]],"symmetric")})),this.smoothSegmentation||(0,o.dispose)(I),P={maskValueToLabel:Ce,mask:new Ie(R)},A.segmentation=P),[2,[A]])}}))}))},e.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return 0===t.size?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=function(e,t,n){return"webgl"===(0,o.getBackend)()?function(e,t,n){var r=n.combineWithPreviousRatio.toFixed(2),i={variableNames:["prevMask","newMask"],outputShape:e.shape,userCode:"\n  void main() {\n      ivec2 coords = getOutputCoords();\n      int height = coords[0];\n      int width = coords[1];\n\n      float prevMaskValue = getPrevMask(height, width);\n      float newMaskValue = getNewMask(height, width);\n\n      /*\n      * Assume p := newMaskValue\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n      * uncertainty alpha(p) =\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n      * uncertainty]\n      *\n      * The following polynomial approximates uncertainty alpha as a\n      * function of (p + 0.5):\n      */\n      const float c1 = 5.68842;\n      const float c2 = -0.748699;\n      const float c3 = -57.8051;\n      const float c4 = 291.309;\n      const float c5 = -624.717;\n      float t = newMaskValue - 0.5;\n      float x = t * t;\n\n      float uncertainty =\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                             (uncertainty * ".concat(r,");\n\n      setOutput(outputValue);\n    }\n")},a=(0,o.backend)();return(0,o.tidy)((function(){var n=a.compileAndRun(i,[e,t]);return(0,o.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}))}(e,t,n):(0,o.tidy)((function(){var r=(0,o.sub)(t,.5),i=(0,o.square)(r),a=(0,o.sub)(1,(0,o.minimum)(1,(0,o.mul)(i,(0,o.add)(5.68842,(0,o.mul)(i,(0,o.add)(-.748699,(0,o.mul)(i,(0,o.add)(-57.8051,(0,o.mul)(i,(0,o.add)(291.309,(0,o.mul)(i,-624.717)))))))))));return(0,o.add)(t,(0,o.mul)((0,o.sub)(e,t),(0,o.mul)(a,n.combineWithPreviousRatio)))}))}(t,e,Se),(0,o.dispose)(e)),(0,o.dispose)(t),this.prevFilteredSegmentationMask},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),(0,o.dispose)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},e.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&((0,o.dispose)(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=(0,o.tensor2d)([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return h(this,void 0,void 0,(function(){var t,n,r,i,a,s,u,l,h,d;return c(this,(function(c){switch(c.label){case 0:return t=D(e,pe),n=t.imageTensor,r=t.padding,i=this.detectorModel.predict(n),a=function(e){return(0,o.tidy)((function(){var t=function(e){return(0,o.tidy)((function(){return[(0,o.slice)(e,[0,0,0],[1,-1,1]),(0,o.slice)(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],r=t[1];return{boxes:(0,o.squeeze)(r),logits:(0,o.squeeze)(n)}}))}(i),s=a.boxes,[4,q([u=a.logits,s],this.anchorTensor,ce)];case 1:return 0===(l=c.sent()).length?((0,o.dispose)([n,i,u,s]),[2,l]):[4,G(l,this.maxPoses,.3)];case 2:return h=c.sent(),d=function(e,t){void 0===e&&(e=[]);for(var n=t.left,r=t.top,i=t.left+t.right,o=t.top+t.bottom,a=0;a<e.length;a++){var s=e[a],u=s.locationData.relativeBoundingBox,l=(u.xMin-n)/(1-i),h=(u.yMin-r)/(1-o),c=u.width/(1-i),d=u.height/(1-o);u.xMin=l,u.yMin=h,u.width=c,u.height=d,u.xMax=l+c,u.yMax=h+d;var p=s.locationData.relativeKeypoints;p&&p.forEach((function(e){var t=(e.x-n)/(1-i),a=(e.y-r)/(1-o);e.x=t,e.y=a}))}return e}(h,r),(0,o.dispose)([n,i,u,s]),[2,d]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return J(N(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,de)},e.prototype.poseLandmarksByRoi=function(e,t){return h(this,void 0,void 0,(function(){var n,r,i,a,s,u,h,d,p,f,m,g,y,b;return c(this,(function(c){switch(c.label){case 0:if(n=_(t),r=D(t,fe,e),i=r.imageTensor,a=r.padding,s=r.transformationMatrix,"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return u=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&u.push("activation_segmentation"),h=this.landmarkModel.execute(i,u),[4,this.tensorsToPoseLandmarksAndSegmentation(h)];case 1:return null==(d=c.sent())?((0,o.dispose)(h),(0,o.dispose)(i),[2,null]):(p=d.landmarks,f=d.auxiliaryLandmarks,m=d.poseScore,g=d.worldLandmarks,y=d.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(n,e,a,s,p,f,g,y)]);case 2:return b=c.sent(),(0,o.dispose)(h),(0,o.dispose)(i),[2,l({poseScore:m},b)]}}))}))},e.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,n,r,i,a,s,u){return h(this,void 0,void 0,(function(){var h,d,p,f,m,g;return c(this,(function(c){return h=K(i,n),d=K(a,n),p=L(h,t),f=L(d,t),m=function(e,t){for(var n=[],r=0,i=e;r<i.length;r++){var o=i[r],a=o.x,s=o.y,u=t.rotation,h=Math.cos(u)*a-Math.sin(u)*s,c=Math.sin(u)*a+Math.cos(u)*s,d=l({},o);d.x=h,d.y=c,n.push(d)}return n}(s,t),g=null,this.enableSegmentation&&(g=(0,o.tidy)((function(){var t=u.shape,n=t[0],i=t[1],a=function(e){var t=M(new Array(16).fill(0));t[0][0]=O(e,0,0),t[1][0]=-O(e,0,1),t[2][0]=O(e,0,2),t[3][0]=-O(e,0,3),t[0][2]=O(e,2,0),t[1][2]=-O(e,2,1),t[2][2]=O(e,2,2),t[3][2]=-O(e,2,3),t[0][1]=-O(e,1,0),t[1][1]=O(e,1,1),t[2][1]=-O(e,1,2),t[3][1]=O(e,1,3),t[0][3]=-O(e,3,0),t[1][3]=O(e,3,1),t[2][3]=-O(e,3,2),t[3][3]=O(e,3,3);for(var n=e[0][0]*t[0][0]+e[1][0]*t[0][1]+e[2][0]*t[0][2]+e[3][0]*t[0][3],r=0;r<t.length;r++)for(var i=0;i<t.length;i++)t[r][i]/=n;return t}(r),s=(0,o.tensor2d)($(a,{width:i,height:n},e),[1,8]),l=[1,n,i,1];return(0,o.squeeze)(o.image.transform((0,o.reshape)(u,l),s,"bilinear","constant",0,[e.height,e.width]),[0,3])})),(0,o.dispose)(u)),[2,{landmarks:p,auxiliaryLandmarks:f,worldLandmarks:m,segmentationMask:g}]}))}))},e.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return h(this,void 0,void 0,(function(){var t,n,r,i,a,s,u,h,d,p,f,m,g;return c(this,(function(c){switch(c.label){case 0:return t=e[0],n=e[1],r=e[2],i=e[3],a=this.enableSegmentation?e[4]:null,[4,n.data()];case 1:return(s=c.sent()[0])<.5?[2,null]:[4,Z(t,me)];case 2:return[4,j(c.sent(),r,ye)];case 3:return u=c.sent(),h=u.slice(0,33),d=u.slice(33,35),[4,Z(i,ge)];case 4:return p=c.sent(),f=p.slice(0,33),m=function(e,t,n){void 0===n&&(n=!0);for(var r=[],i=0;i<e.length;i++){var o=l({},t[i]);n&&(o.score=e[i].score),r.push(o)}return r}(h,f,!0),g=this.enableSegmentation?function(e,t,n){return(0,o.tidy)((function(){var n=(0,o.squeeze)(e,[0]),r=n.shape[2];if(1===r){var i=n;switch(t.activation){case"none":break;case"sigmoid":i=(0,o.sigmoid)(i);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(t.activation,")"))}var a=i;return(0,o.squeeze)(a,[2])}throw new Error("Unsupported number of tensor channels ".concat(r))}))}(a,ke):null,[2,{landmarks:h,auxiliaryLandmarks:d,poseScore:s,worldLandmarks:m,segmentationMask:g}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return J(N(V(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,de)},e.prototype.poseLandmarkFiltering=function(e,t,n,r){var i,o,a;if(null!=this.timestamp&&this.enableSmoothing){var s=N(V(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new se(be)),i=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new se(be)),o=this.visibilitySmoothingFilterAuxiliary.apply(t),a=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new ae(xe)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,r,!0,s),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new ae(ve)),o=this.landmarksSmoothingFilterAuxiliary.apply(o,this.timestamp,r,!0,s),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new ae(we)),a=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else i=e,o=t,a=n;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:o,actualWorldLandmarksFiltered:a}},e}();function Ae(e){return h(this,void 0,void 0,(function(){var t,n,r,i,o,s;return c(this,(function(u){switch(u.label){case 0:return t=function(e){var t=l({},null==e?le:e);if(null==t.enableSmoothing&&(t.enableSmoothing=le.enableSmoothing),null==t.enableSegmentation&&(t.enableSegmentation=le.enableSegmentation),null==t.smoothSegmentation&&(t.smoothSegmentation=le.smoothSegmentation),null==t.modelType&&(t.modelType=le.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=le.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([(0,a.loadGraphModel)(t.detectorModelUrl,{fromTFHub:n}),(0,a.loadGraphModel)(t.landmarkModelUrl,{fromTFHub:r})])];case 1:return i=u.sent(),o=i[0],s=i[1],[2,new Te(o,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}}))}))}var Re,_e,Pe,Ee=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var r=n[t];if(r<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(r))}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var r=Array.from(Array(t[0].length).keys()),i=[],o=0,a=Array.from(Array(e.length).keys());o<a.length;o++){var s=a[o];if(0!==r.length){for(var u=-1,l=-1,h=0,c=r;h<c.length;h++){var d=c[h],p=t[s][d];p>=this.minSimilarity&&p>l&&(u=d,l=p)}if(u>=0){var f=this.tracks[u];f=Object.assign(f,this.createTrack(e[s],n,f.id)),e[s].id=f.id;var m=r.indexOf(u);r.splice(m,1)}else i.push(s)}else i.push(s)}for(var g=0,y=i;g<y.length;g++){s=y[g];var b=this.createTrack(e[s],n);this.tracks.push(b),e[s].id=b.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var r={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:d([],e.keypoints,!0).map((function(e){return l({},e)}))};return void 0!==e.box&&(r.box=l({},e.box)),r},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),$e=function(e){function t(t){return e.call(this,t)||this}return u(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),r=Math.max(e.box.yMin,t.box.yMin),i=Math.min(e.box.xMax,t.box.xMax),o=Math.min(e.box.yMax,t.box.yMax);if(n>=i||r>=o)return 0;var a=(i-n)*(o-r);return a/(e.box.width*e.box.height+t.box.width*t.box.height-a)},t}(Ee),Fe=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return u(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,r=e;n<r.length;n++){for(var i=r[n],o=[],a=0,s=this.tracks;a<s.length;a++){var u=s[a];o.push(this.oks(i,u))}t.push(o)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,r=0,i=0,o=0;o<e.keypoints.length;++o){var a=e.keypoints[o],s=t.keypoints[o];if(!(a.score<this.keypointThreshold||s.score<this.keypointThreshold)){i+=1;var u=Math.pow(a.x-s.x,2)+Math.pow(a.y-s.y,2),l=2*this.keypointFalloff[o];r+=Math.exp(-1*u/(2*n*Math.pow(l,2)))}}return i<this.minNumKeyoints?0:r/i},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),r=Math.min.apply(Math,d([1],n.map((function(e){return e.x})),!1)),i=Math.max.apply(Math,d([0],n.map((function(e){return e.x})),!1)),o=Math.min.apply(Math,d([1],n.map((function(e){return e.y})),!1));return(i-r)*(Math.max.apply(Math,d([0],n.map((function(e){return e.y})),!1))-o)},t}(Ee);function Ne(e){switch(e){case _e.BlazePose:return f.reduce((function(e,t,n){return e[t]=n,e}),{});case _e.PoseNet:case _e.MoveNet:return p.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model ".concat(e," is not supported."))}}(Pe=Re||(Re={})).Keypoint="keypoint",Pe.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(_e||(_e={}));var Me=Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case _e.BlazePose:return m;case _e.PoseNet:case _e.MoveNet:return g;default:throw new Error("Model ".concat(e," is not supported."))}},getAdjacentPairs:function(e){switch(e){case _e.BlazePose:return b;case _e.PoseNet:case _e.MoveNet:return y;default:throw new Error("Model ".concat(e," is not supported."))}},getKeypointIndexByName:Ne}),ze=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],Oe={modelType:"SinglePose.Lightning",enableSmoothing:!0},Le={},Be={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},De={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},Ue={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function We(e,t){var n,r,i,o;return e?t.width>t.height?(n=1,r=t.height/t.width,i=0,o=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,r=1,i=(t.height/2-t.width/2)/t.height,o=0):t.width>t.height?(n=t.width/t.height,r=1,i=(t.height/2-t.width/2)/t.height,o=0):(n=1,r=t.height/t.width,i=0,o=(t.width/2-t.height/2)/t.width),{yMin:i,xMin:o,yMax:i+n,xMax:o+r,height:n,width:r}}function Ve(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var Ge=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=Ne(_e.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new re(Be),this.cropRegionFilterYMin=new te(.9),this.cropRegionFilterXMin=new te(.9),this.cropRegionFilterYMax=new te(.9),this.cropRegionFilterXMax=new te(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===Re.Keypoint?this.tracker=new Fe(t.trackerConfig):t.trackerType===Re.BoundingBox&&(this.tracker=new $e(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return h(this,void 0,void 0,(function(){var t,n,r,i,a;return c(this,(function(s){switch(s.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===(0,o.getBackend)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=s.sent(),s.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},i=0,a=0;a<17;++a)r.keypoints[a]={y:n[3*a],x:n[3*a+1],score:n[3*a+2]},r.keypoints[a].score>.2&&(++i,r.score+=r.keypoints[a].score);return i>0&&(r.score/=i),[2,r]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return h(this,void 0,void 0,(function(){var t,n,r,i,a,s,u,l;return c(this,(function(h){switch(h.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===(0,o.getBackend)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=h.sent(),h.label=3;case 3:for(t.dispose(),r=[],i=n.length/56,a=0;a<i;++a)for(r[a]={keypoints:[]},s=56*a+51,r[a].box={yMin:n[s],xMin:n[s+1],yMax:n[s+2],xMax:n[s+3],width:n[s+3]-n[s+1],height:n[s+2]-n[s]},u=56*a+55,r[a].score=n[u],r[a].keypoints=[],l=0;l<17;++l)r[a].keypoints[l]={y:n[56*a+3*l],x:n[56*a+3*l+1],score:n[56*a+3*l+2]};return[2,r]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=Le),h(this,void 0,void 0,(function(){var r,i,a,s,u,h;return c(this,(function(c){switch(c.label){case 0:return t=function(e){return null==e?Le:l({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?W(e)&&(n=1e6*e.currentTime):n*=1e3,r=E(e),i=_(r),a=(0,o.expandDims)(r,0),e instanceof o.Tensor||r.dispose(),s=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(a,i,n)]);case 1:return s=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(a,i,n)];case 3:s=c.sent(),c.label=4;case 4:for(u=0;u<s.length;++u)for(h=0;h<s[u].keypoints.length;++h)s[u].keypoints[h].name=p[h],s[u].keypoints[h].y*=i.height,s[u].keypoints[h].x*=i.width;return[2,s]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return h(this,void 0,void 0,(function(){var r,i,a,s,u=this;return c(this,(function(l){switch(l.label){case 0:return this.cropRegion||(this.cropRegion=We(null==this.cropRegion,t)),r=(0,o.tidy)((function(){var t=(0,o.tensor2d)([[u.cropRegion.yMin,u.cropRegion.xMin,u.cropRegion.yMax,u.cropRegion.xMax]]),n=(0,o.zeros)([1],"int32"),r=[u.modelInputResolution.height,u.modelInputResolution.width];return(0,o.cast)(o.image.cropAndResize(e,t,n,r,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(i=l.sent(),r.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(a=0;a<i.keypoints.length;++a)i.keypoints[a].y=this.cropRegion.yMin+i.keypoints[a].y*this.cropRegion.height,i.keypoints[a].x=this.cropRegion.xMin+i.keypoints[a].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,n,1)),s=function(e,t,n,r){for(var i={},o=0,a=p;o<a.length;o++){var s=a[o];i[s]=[t[n[s]].y*r.height,t[n[s]].x*r.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var u=(i.left_hip[0]+i.right_hip[0])/2,l=(i.left_hip[1]+i.right_hip[1])/2,h=function(e,t,n,r,i){for(var o=["left_shoulder","right_shoulder","left_hip","right_hip"],a=0,s=0,u=0;u<o.length;u++)(p=Math.abs(r-n[o[u]][0]))>a&&(a=p),(f=Math.abs(i-n[o[u]][1]))>s&&(s=f);for(var l=0,h=0,c=0,d=Object.keys(n);c<d.length;c++){var p,f,m=d[c];e[t[m]].score<.2||((p=Math.abs(r-n[m][0]))>l&&(l=p),(f=Math.abs(i-n[m][1]))>h&&(h=f))}return[a,s,l,h]}(t,n,i,u,l),c=h[0],d=h[1],f=h[2],m=h[3],g=Math.max(1.9*d,1.9*c,1.2*f,1.2*m),y=[u-(g=Math.min(g,Math.max(l,r.width-l,u,r.height-u))),l-g];if(g>Math.max(r.width,r.height)/2)return We(null==e,r);var b=2*g;return{yMin:y[0]/r.height,xMin:y[1]/r.width,yMax:(y[0]+b)/r.height,xMax:(y[1]+b)/r.width,height:(y[0]+b)/r.height-y[0]/r.height,width:(y[1]+b)/r.width-y[1]/r.width}}return We(null==e,r)}(this.cropRegion,i.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(s),[2,[i]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return h(this,void 0,void 0,(function(){var r,i,a,s,u,l,h,d,p,f,m,g=this;return c(this,(function(c){switch(c.label){case 0:return t.width>t.height?(i=this.multiPoseMaxDimension,a=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=o.image.resizeBilinear(e,[a,i]),u=i,l=32*Math.ceil(a/32),s=(0,o.pad)(r,[[0,0],[0,l-a],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*t.width/t.height),a=this.multiPoseMaxDimension,r=o.image.resizeBilinear(e,[a,i]),u=32*Math.ceil(i/32),l=a,s=(0,o.pad)(r,[[0,0],[0,0],[0,u-i],[0,0]])),r.dispose(),e.dispose(),h=(0,o.cast)(s,"int32"),s.dispose(),[4,this.runMultiPersonPoseModel(h)];case 1:for(d=c.sent(),h.dispose(),d=d.filter((function(e){return e.score>=g.minPoseScore})),f=0;f<d.length;++f)for(p=0;p<d[f].keypoints.length;++p)d[f].keypoints[p].y*=l/a,d[f].keypoints[p].x*=u/i;if(this.enableTracking&&(this.tracker.apply(d,n),this.enableSmoothing)){for(f=0;f<d.length;++f)this.keypointFilterMap.has(d[f].id)||this.keypointFilterMap.set(d[f].id,new re(Be)),d[f].keypoints=this.keypointFilterMap.get(d[f].id).apply(d[f].keypoints,n,1);m=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){m.has(t)||g.keypointFilterMap.delete(t)}))}return[2,d]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),i=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:r,xMax:i,height:r-t,width:i-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function He(e){return void 0===e&&(e=Oe),h(this,void 0,void 0,(function(){var t,n,r,i;return c(this,(function(s){switch(s.label){case 0:return t=function(e){var t,n=null==e?Oe:l({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(ze.indexOf(n.modelType)<0)throw new Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat(ze));if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=Re.BoundingBox),n.trackerType===Re.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=Ve(De,e);return t.keypointTrackerParams=l({},De.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=De;else{if(n.trackerType!==Re.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,Ve(Ue,t)):n.trackerConfig=Ue}return n}(e),r=!0,t.modelUrl?(r="string"==typeof t.modelUrl&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,(0,a.loadGraphModel)(t.modelUrl,{fromTFHub:r})]):[3,2];case 1:return n=s.sent(),[3,4];case 2:return i=void 0,"SinglePose.Lightning"===t.modelType?i="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?i="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(i="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,(0,a.loadGraphModel)(i,{fromTFHub:r})];case 3:n=s.sent(),s.label=4;case 4:return"webgl"===(0,o.getBackend)()&&(0,o.env)().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new Ge(n,t)]}}))}))}var je={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},Ke=["MobileNetV1","ResNet50"],qe={MobileNetV1:[8,16],ResNet50:[16]},Xe=[8,16,32],Ye={MobileNetV1:[.5,.75,1],ResNet50:[1]},Qe=[1,2,4],Ze={maxPoses:1,flipHorizontal:!1},Je={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},et=[-123.15,-115.9,-103.06];function tt(e){return Math.floor(e/2)}var nt=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(tt(e),e);)this.exchange(e,tt(e)),e=tt(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function rt(e,t,n,r,i,o){for(var a=o.shape,s=a[0],u=a[1],l=!0,h=Math.max(n-i,0),c=Math.min(n+i+1,s),d=h;d<c;++d){for(var p=Math.max(r-i,0),f=Math.min(r+i+1,u),m=p;m<f;++m)if(o.get(d,m,e)>t){l=!1;break}if(!l)break}return l}function it(e){return h(this,void 0,void 0,(function(){return c(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function ot(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+17)}}function at(e,t,n){var r=ot(e.heatmapY,e.heatmapX,e.id,n),i=r.y,o=r.x;return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function st(e,t,n,r){var i=n.x,o=n.y;return e.some((function(e){var n,a,s,u,l=e.keypoints;return n=o,a=i,(s=l[r].y-n)*s+(u=l[r].x-a)*u<=t}))}var ut=p.reduce((function(e,t,n){return e[t]=n,e}),{}),lt=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[ut[t],ut[n]]})),ht=lt.map((function(e){return e[1]})),ct=lt.map((function(e){return e[0]}));function dt(e,t,n){return e<t?t:e>n?n:e}function pt(e,t,n,r){return{y:dt(Math.round(e.y/t),0,n-1),x:dt(Math.round(e.x/t),0,r-1)}}function ft(e,t){return{x:e.x+t.x,y:e.y+t.y}}function mt(e,t,n,r,i,o,a,s){void 0===s&&(s=2);for(var u=r.shape,l=u[0],h=u[1],c={y:t.y,x:t.x},d=ft(c,function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,pt(c,o,l,h),a)),f=0;f<s;f++){var m=pt(d,o,l,h),g=ot(m.y,m.x,n,i);d=ft({x:m.x*o,y:m.y*o},{x:g.x,y:g.y})}var y=pt(d,o,l,h),b=r.get(y.y,y.x,n);return{y:d.y,x:d.x,name:p[n],score:b}}function gt(e,t,n,r,i,o){var a=t.shape[2],s=ht.length,u=new Array(a),l=e.part,h=e.score,c=at(l,r,n);u[l.id]={score:h,name:p[l.id],y:c.y,x:c.x};for(var d=s-1;d>=0;--d){var f=ht[d],m=ct[d];u[f]&&!u[m]&&(u[m]=mt(d,u[f],m,t,n,r,o))}for(d=0;d<s;++d)f=ct[d],m=ht[d],u[f]&&!u[m]&&(u[m]=mt(d,u[f],m,t,n,r,i));return u}function yt(e,t,n){return n.reduce((function(n,r,i){var o=r.y,a=r.x,s=r.score;return st(e,t,{y:o,x:a},i)||(n+=s),n}),0)/n.length}function bt(e,t,n,r,i,o,a,s){return void 0===a&&(a=.5),void 0===s&&(s=20),h(this,void 0,void 0,(function(){var u,l,h,d,p,f,m,g,y,b,x,v;return c(this,(function(c){switch(c.label){case 0:return[4,it([e,t,n,r])];case 1:for(u=c.sent(),l=u[0],h=u[1],d=u[2],p=u[3],f=[],m=function(e,t,n){for(var r=n.shape,i=r[0],o=r[1],a=r[2],s=new nt(i*o*a,(function(e){return e.score})),u=0;u<i;++u)for(var l=0;l<o;++l)for(var h=0;h<a;++h){var c=n.get(u,l,h);c<e||rt(h,c,u,l,1,n)&&s.enqueue({score:c,part:{heatmapY:u,heatmapX:l,id:h}})}return s}(a,0,l),g=s*s;f.length<o&&!m.empty();)y=m.dequeue(),b=at(y.part,i,h),st(f,g,b,y.part.id)||(x=gt(y,l,h,i,d,p),v=yt(f,g,x),f.push({keypoints:x,score:v}));return[2,f]}}))}))}const xt=(0,o.env)();xt.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),xt.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),xt.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),xt.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!1)),xt.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),xt.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),xt.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),xt.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!0)),xt.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",(()=>!1)),xt.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",(()=>0)),xt.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1));class vt{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}}class wt{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){const r=kt(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;const e=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(e),e}this.numBytesAllocated+=e;const i=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(r).push(i),i}releaseBuffer(e,t,n){if(0===this.freeBuffers.size)return;const r=kt(t,n);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;const i=this.usedBuffers.get(r),o=i.indexOf(e);if(o<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");i.splice(o,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then((()=>{this.releaseBuffer(e,t,n)}),(e=>{}))}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function kt(e,t){return`${e}_${t}`}class St{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,r){const i=e*t*Ct(n),o=It(e,t,n,r);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=i,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const e=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(e),e}this.numBytesAllocated+=i;const a=this.device.createTexture({size:[e,t],format:n,usage:r});return this.usedTextures.get(o).push(a),a}releaseTexture(e,t,n,r,i){if(0===this.freeTextures.size)return;const o=It(t,n,r,i);this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.freeTextures.get(o).push(e),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures.get(o),s=a.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(s,1);const u=t*n*Ct(r);this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function It(e,t,n,r){return`${e}_${t}_${n}_${r}`}function Ct(e){if("rgba8unorm"===e)return 16;throw new Error(e+" is not supported!")}function Tt(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");const n=e.length,r=e.map((e=>`${t}[${e}]`)),i=new Array(n-1);i[n-2]=r[n-1];for(let e=n-3;e>=0;--e)i[e]=`(${i[e+1]} * ${r[e+1]})`;return i}const At=(e,t,n)=>"int32"===n?`atomicAdd(${e}, bitcast<i32>(${t}));`:`\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (${t});\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }`;function Rt(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function _t(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function Pt(...e){let t;switch(e.length){case 0:t="\n        fn main()\n      ";break;case 1:t=`\n        fn main(${e[0]} : i32)\n      `;break;default:throw Error("Unreachable")}return t}function Et(e,t){let n;return n=`\n     ${function(e){return`\n  @compute @workgroup_size(${e.workgroupSize[0]}, ${e.workgroupSize[1]}, ${e.workgroupSize[2]})\n`}(t)}\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ${e?"main(getGlobalIndex());":"main();"};\n      }\n    `,n}const $t="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let modulo: i32 = a % b;\n    if (sign < 0. && modulo != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n",Ft="\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n";function Nt(e){const t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";const n=o.util.computeStrides(e),r=Rt(t),i=[];for(let e=0;e<t;e++)i.push("d"+e);if(1===n.length)return"    fn getCoordsFromIndex(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;\n      return vec2<i32>(d0, d1);\n    }";let a;return a="var index2 = index;"+n.map(((e,t)=>`let ${i[t]} = index2 / uniforms.outShapeStrides.${_t(t)}; ${t===n.length-1?`let ${i[t+1]} = index2 - ${i[t]} * uniforms.outShapeStrides.${_t(t)}`:`index2 = index2 - ${i[t]} * uniforms.outShapeStrides.${_t(t)}`};`)).join(""),`\n    fn getCoordsFromIndex(index : i32) -> ${r} {\n      ${a}\n      return ${r}(${i.join(",")});\n    }\n  `}function Mt(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:o.util.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function zt(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function Ot(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}function Lt(e){return!(e.dispatchLayout.hasOwnProperty("y")&&0!==e.dispatchLayout.y.length||e.dispatchLayout.hasOwnProperty("z")&&0!==e.dispatchLayout.z.length)}const Bt=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function Dt(e,t,n=[1,1,1],r=[1,1,1]){const[i,o,a]=[Math.ceil(Bt(e.x.map((e=>t[e])))/(n[0]*r[0])),e.y?Math.ceil(Bt(e.y.map((e=>t[e])))/(n[1]*r[1])):1,e.z?Math.ceil(Bt(e.z.map((e=>t[e])))/(n[2]*r[2])):1];return[i,o,a]}function Ut(e,t,n=!1){if(n)return[8,8,1];const r=Bt(e.x.map((e=>t[e]))),i=Bt(e.y.map((e=>t[e])));return r<=4?[4,16,1]:i<=4?[16,4,1]:[16,16,1]}function Wt(e,t,n=!1){if(n)return[4,4,1];const r=Bt(e.x.map((e=>t[e]))),i=Bt(e.y.map((e=>t[e])));return r<=4?[1,2,1]:i<=4?[2,1,1]:[2,2,1]}function Vt(e){return{x:e.map(((e,t)=>t))}}function Gt(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error("Unknown dtype "+e)}function Ht(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}var jt;!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(jt||(jt={}));const Kt=(0,o.env)().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD");class qt extends o.KernelBackend{constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!Ht())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query-inside-passes"),this.adapterInfo=new vt(t),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new wt(this.device),this.textureManager=new St(this.device),this.tensorMap=new(0,o.DataStorage)(this,(0,o.engine)()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),(0,o.env)().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return qt.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;const n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;const{complexTensorInfos:r}=this.tensorMap.get(e);return null!=r&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(t&&t.resourceInfo)if(t.external)t.resourceInfo=null;else{if("texture"in t.resourceInfo){const e=t.resourceInfo;e.texture instanceof GPUTexture&&this.textureManager.releaseTexture(e.texture,e.width,e.height,e.format,e.usage),e.texture=null}else{const e=t.resourceInfo;this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage),e.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){this.tensorMap.has(e)&&this.tensorMap.get(e).refCount--}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:n,shape:t,values:e,refCount:1}),r}move(e,t,n,r,i){if("complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:n,values:t,refCount:i})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){const n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const r=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),(0,o.env)().getBool("WEBGPU_USE_PROFILE_TOOL")&&(o.util.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n}=t;if(null==n)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return this.convertAndCacheOnCPU(e,n);let r;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),n=e[0],i=e[1];r=o.backend_util.mergeRealAndImagArrays(n,i)}else{const e=t.resourceInfo,n=await this.getBufferData(e.buffer,e.size);r=o.util.convertBackendValuesAndArrayBuffer(n,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e,t,n){const r=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,n){let r=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");const i={id:this.nextDataId()};this.tensorMap.set(i,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});const a=this.tensorMap.get(i),s=Gt(a.dtype)*o.util.sizeFromShape(a.shape);if(e.buffer.size<s)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${s})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!=(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(r=this.copyBuffer(r,s,r.usage)),a.resourceInfo={size:r.size,usage:r.usage,buffer:r},(0,o.engine)().makeTensorFromDataId(i,t,n,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:n,dtype:r,shape:i,resourceInfo:a}=t;if("complex64"===r)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==a)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const s=a.size,u=this.bufferManager.acquireBuffer(s,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,u,0,s),this.submitQueue();const l=this.makeTensorInfo(i,r),h=(0,o.engine)().makeTensorFromTensorInfo(l);return this.tensorMap.get(l.dataId).resourceInfo={size:s,usage:this.defaultGpuBufferUsage(),buffer:u},{tensorRef:h,buffer:u,bufSize:s}}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>o.util.decodeString(e)));return(0,o.buffer)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,o.buffer)(e.shape,e.dtype,t)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query-inside-passes extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const i=o.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=o.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(i);return s.kernelMs=o.util.sum(u),s.getExtraProfileInfo=()=>u.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,s}makeTensorInfo(e,t,n){return"string"===t&&null!=n&&n.length>0&&o.util.isString(n[0])&&(n=n.map((e=>o.util.encodeString(e)))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){const e=t.resourceInfo;return e.texture instanceof GPUExternalTexture?e.texture:e.texture.createView()}const n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resourceInfo)return;const n=Gt(t.dtype)*o.util.sizeFromShape(t.shape),r=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:r},t.values){const e=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),i=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(i).set(t.values):new Float32Array(i).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,r,0,n);const o={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:e};this.stagingPendingDisposal.push(o)}}makeUniforms(e){let t=0,n=0;const r=[];let i=1;e.forEach((e=>{let a;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:a=4;break;case 2:a=8;break;case 3:case 4:case 5:case 6:a=16;break;default:o.util.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}5!==n&&6!==n||(a=16),a>i&&(i=a),t=Math.ceil(t/a)*a,n=e.data.length,r.push(t),t+=4*e.data.length})),t=Math.ceil(t/i)*i;const a=new ArrayBuffer(t);e.forEach(((e,t)=>{const n=r[t];"int32"===e.type?new Int32Array(a,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(a,n,e.data.length).set(e.data):new Float32Array(a,n,e.data.length).set(e.data)}));const s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(s,0,a,0,t);const u={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:s};return this.uniformPendingDisposal.push(u),{offset:0,size:t,buffer:s}}runWebGPUProgram(e,t,n,r,i){if(i||(i=this.makeTensorInfo(e.outputShape,n)),0===o.util.sizeFromShape(i.shape))return this.tensorMap.get(i.dataId).values=o.util.getTypedArrayFromDType(i.dtype,0),i;this.uploadToGPU(i.dataId),e.dispatch=((e,t)=>{const n=e.limits.maxComputeWorkgroupsPerDimension,r=t.dispatchLayout,i=t.dispatch;if(i.every((e=>e<=n)))return i;o.util.assert(i[0]>n&&void 0===r.y&&void 0===r.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let a=Math.ceil(Math.sqrt(i[0]));return a>n?(a=Math.ceil(Math.cbrt(i[0])),o.util.assert(a<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[a,a,a]):[a,a,1]})(this.device,e);let a=[],s=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),s=t.concat(i).map((e=>e.shape));const n="int32";s.map((e=>{a.push({type:n,data:e})}));const r=o.util.computeStrides(i.shape);if(a.push({type:n,data:r}),e.size){const t=o.util.sizeFromShape(e.outputShape);a.push({type:n,data:[e.isVec4?t/4:t]})}}const u=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}})),l=function(e,t,n,r){let i=e.shaderKey;if(e.isFromPixels)return i;const a=n.map((e=>e.dtype)).concat(r.dtype),s=n.map((e=>o.backend_util.getBroadcastDims(e.shape,r.shape))),u=n.map((e=>o.util.arraysEqual(e.shape,r.shape))).join("_"),l=s.map((e=>e.join("_"))).join(";"),h=zt(e)?"flatDispatch":"";return i+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+t.map((e=>e.length)).join(",")+a.join(",")+e.variableNames.join(",")+l+u+h,i}(e,s,u,i);let h;l in this.pipelineCache?h=this.pipelineCache[l]:(h=((e,t,n,r)=>{const i=function(e,t,n){const r=[],i=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(r.push(`\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ${zt(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${i}u +\n                localIndex);\n        `}\n      }\n    `),n.isFromPixels){r.push(`\n        struct Uniform {\n          size            : i32,\n          numChannels     : i32,\n          outShapeStrides : vec2<i32>,\n        };\n\n        @group(0) @binding(0) var<storage, read_write> result: array<${Ot(t.dtype,n.isVec4)}>;\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      `);const e=Lt(n);return[$t,r.join("\n"),Nt(t.shape),n.getUserCode(),Et(e,n)].join("\n")}let a="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach(((t,n)=>{const r=Rt(e[n].shape.length);a+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${r}, `}));const s=Rt(t.shape.length);a+=`outShape : ${s}, `;const u=Rt(t.shape.length-1);a+=`\n         outShapeStrides: ${u}, `,n.size&&(a+="size : i32, "),n.uniforms&&(a+=n.uniforms),a+="};",a=function(e){return(e=e.replace(/(\w+)\s*:\s*vec(5|6)/g,(e=>"@align(16) "+e))).replace(/vec(5|6)\s*,\s*(\w+)/g,((e,t,n)=>`vec${t}, @align(16) ${n}`))}(a),r.push(a),n.atomic?r.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):r.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<${Ot(t.dtype,n.isVec4)}>;\n    `),n.variableNames.forEach(((t,i)=>{r.push(`\n      @group(0) @binding(${1+i}) var<storage, read> ${t}: array<${n.variableTypes?n.variableTypes[i]:Ot(e[i].dtype,n.isVec4)}>;\n        `)})),""!==a&&r.push(`\n      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n      `);const l=function(e,t){const{x:n,y:r=[],z:i=[]}=t,o=e.length,a=n.length+r.length+i.length;if(a!==o)return"";if(n.length===o)return`fn getOutputCoords() -> ${Rt(o)}{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  `;let s="";const u=[n,r,i];for(let e=0;e<u.length;e++){const t=u[e];if(0!==t.length)if(1===t.length)s+=`let d${t[0]} = i32(globalId[${e}]);`;else{const n=Tt(t,"uniforms.outShape");s+=`var index${e} = i32(globalId[${e}]);`;for(let r=0;r<n.length;r++)s+=`let d${t[r]} = index${e} / ${n[r]};`,r===n.length-1?s+=`let d${t[r+1]} = index${e} - d${t[r]} * ${n[r]};`:s+=`index${e} = index${e} - d${t[r]} * ${n[r]};`}}const l=[];for(let e=0;e<a;e++)l.push("d"+e);const h=Rt(a);let c=`fn getOutputCoords() -> ${h} {\n  ${s}\n`;return 0===l.length?c+=`return ${h}(0); }`:c+=`return ${h}(${l.join(",")}); }`,c}(t.shape,n.dispatchLayout),h=[$t,r.join("\n")+Ft,Nt(t.shape),l,Mt(t.shape.length)];n.atomic||h.push(function(e,t,n){const r=e.length,i=Ot(t,n);let o;if(o=n?`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {\n      result[flatIndex] = ${i}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {\n      result[flatIndex] = ${i}(value);\n    }`:`fn setOutputAtIndex(flatIndex : i32, value : f32) {\n      result[flatIndex] = ${i}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {\n      result[flatIndex] = ${i}(value);\n    }`,r>=2){const e=["d0","d1","d2","d3","d4","d5"].slice(0,r),t=Rt(r);o+=n?`\n      fn setOutputAtCoords(${e.map((e=>e+" : i32")).join(", ")}, value : vec4<f32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex / 4, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>e+" : i32")).join(", ")}, value : vec4<i32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex / 4, value);\n      }\n    `:`\n      fn setOutputAtCoords(${e.map((e=>e+" : i32")).join(", ")}, value : f32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>e+" : i32")).join(", ")}, value : i32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex, value);\n      }\n    `}return o}(t.shape,t.dtype,n.isVec4));const c=e.map(((e,r)=>function(e,t,n,r){let i=function(e,t){const n=e.name,r=e.shape.length,i=Rt(r),o="get"+n.charAt(0).toUpperCase()+n.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,r),s=a.map((e=>e+" : i32")).join(", ");if(r<1)return t?`\n        fn ${o}() -> vec4<f32> {\n          return vec4<f32>(${n}[0]);\n        }\n      `:`\n      fn ${o}() ->f32 {\n        return f32(${n}[0]);\n      }\n    `;const u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let l=r+"D";return 0===r&&(l="1D"),t?`\n      fn ${o}(${s}) -> vec4<f32> {\n        return vec4<f32>(${n}[getIndexFromCoords${l}(${i}(${a.join(",")}),\n          ${u}) / 4]);\n      }\n      `:`\n    fn ${o}(${s}) -> f32 {\n      return f32(${n}[getIndexFromCoords${l}(${i}(${a.join(",")}),\n        ${u})]);\n    }\n   `}(e,n);return e.shape.length<=t.length&&(i+=function(e,t,n,r){const i=e.name,a=i.charAt(0).toUpperCase()+i.slice(1),s="get"+a+"ByOutput",u=e.shape.length,l=t.length,h=Rt(l);if(o.util.arraysEqual(e.shape,t)&&r)return n?`\n      fn ${s}Index(globalIndex : i32) -> vec4<f32> {\n        return vec4<f32>(${i}[globalIndex]);\n      }\n\n      fn ${s}Coords(coords : ${h}) -> vec4<f32> {\n        return vec4<f32>(${i}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);\n      }\n      `:`\n    fn ${s}Index(globalIndex : i32) -> f32 {\n      return f32(${i}[globalIndex]);\n    }\n\n    fn ${s}Coords(coords : ${h}) -> f32 {\n      return f32(${i}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);\n    }\n    `;const c=o.backend_util.getBroadcastDims(e.shape,t),d=l-u;let p="";if(0===u)return n?`\n    fn ${s}Index(globalIndex : i32) -> vec4<f32> {\n      return get${a}();\n    }\n\n    fn ${s}Coords(coords : ${h}) -> vec4<f32> {\n      return get${a}();\n    }\n  `:`\n    fn ${s}Index(globalIndex : i32) -> f32{\n      return get${a}();\n    }\n\n    fn ${s}Coords(coords : ${h}) -> f32{\n      return get${a}();\n    }\n  `;p=l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${_t(e+d)} = 0;`)).join("\n");let f="";if(l<2&&u>0)f="coords";else if(l>1){const t=Rt(u),n=e.shape.map(((e,t)=>"coords."+_t(t+d))).join(", ");f=`${t}(${n})`}else f="coords";const m=`uniforms.${i.charAt(0).toLowerCase()+i.slice(1)}Shape`,g=u+"D";return n?`\n    fn ${s}Index(globalIndex : i32) -> vec4<f32> {\n      var coords = getCoordsFromIndex(globalIndex);\n      ${p}\n      return ${i}[getIndexFromCoords${g}(${f}, ${m}) / 4];\n    }\n\n    fn ${s}Coords(coordsIn : ${h}) -> vec4<f32> {\n      var coords = coordsIn;\n      ${p}\n      return ${i}[getIndexFromCoords${g}(${f}, ${m}) / 4];\n    }\n  `:`\n  fn ${s}Index(globalIndex : i32) -> f32 {\n    var coords = getCoordsFromIndex(globalIndex);\n    ${p}\n    return f32(${i}[getIndexFromCoords${g}(${f}, ${m})]);\n  }\n\n  fn ${s}Coords(coordsIn : ${h}) -> f32 {\n    var coords = coordsIn;\n    ${p}\n    return f32(${i}[getIndexFromCoords${g}(${f}, ${m})]);\n  }\n`}(e,t,n,r)),i}(e,t.shape,n.variableTypes?"vec4<f32>"===n.variableTypes[r]:n.isVec4,n.dispatchLayout.x.length===t.shape.length))).join("\n");h.push(c),h.push(n.getUserCode());const d=Lt(n);return h.push(Et(d,n)),h.join("\n")}(n,{dtype:r.dtype,shape:r.shape},t),a=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})})(this.device,e,u,i),this.pipelineCache[l]=h),r&&(a=[...a,...r]);const c=[this.tensorToBinding(i),...t.map((e=>this.tensorToBinding(e))),this.makeUniforms(a)],d=this.device.createBindGroup({layout:h.getBindGroupLayout(0),entries:c.map(((e,t)=>({binding:t,resource:e})))});this.ensureCommandEncoderReady();const p=this.getComputePass(),f=null!=this.activeTimers;return f&&this.supportTimeQuery&&p.writeTimestamp(this.querySet,0),p.setPipeline(h),p.setBindGroup(0,d),p.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),f&&this.supportTimeQuery&&p.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(i.dataId),(0,o.env)().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),f&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),i}async getTimeFromQuerySet(e){const t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const r=new BigUint64Array(n.getMappedRange()),i=Number(r[1]-r[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),i/1e6}shouldExecuteOnCPU(e,t=Kt){return(0,o.env)().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resourceInfo&&o.util.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}var Xt;qt.nextDataId=0,Ht()&&(0,o.registerBackend)("webgpu",(async()=>{(0,o.env)().set("CHECK_COMPUTATION_FOR_ERRORS",!1);const e={powerPreference:(0,o.env)().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={};t.features.has("timestamp-query-inside-passes")&&(n.requiredFeatures=["timestamp-query-inside-passes"]);const r=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize};const i=await t.requestDevice(n),a=await t.requestAdapterInfo();return new qt(i,a)}),3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.EQUAL=5]="EQUAL",e[e.GREATER=6]="GREATER",e[e.GREATER_EQUAL=7]="GREATER_EQUAL",e[e.INT_DIV=8]="INT_DIV",e[e.LESS=9]="LESS",e[e.LESS_EQUAL=10]="LESS_EQUAL",e[e.LOGICAL_AND=11]="LOGICAL_AND",e[e.LOGICAL_OR=12]="LOGICAL_OR",e[e.MAX=13]="MAX",e[e.MIN=14]="MIN",e[e.MOD=15]="MOD",e[e.MUL=16]="MUL",e[e.NOT_EQUAL=17]="NOT_EQUAL",e[e.POW=18]="POW",e[e.PRELU=19]="PRELU",e[e.SQUARED_DIFFERENCE=20]="SQUARED_DIFFERENCE",e[e.SUB=21]="SUB"}(Xt||(Xt={}));const Yt="\n  if (isnan(a)) { return a; }\n  if (isnan(b)) { return b; }\n  ",Qt="\n  resultTemp = select(\n      resultTemp, vec4<f32>(valueForNaN),\n      vec4<bool>(isNaN) | isnanVec4(a) | isnanVec4(b));\n  ",Zt=`\n  ${Yt}\n  if (b == 0.) {\n    return uniforms.NAN;\n  }\n  var resultTemp = a % b;\n  if ((a < 0. && b < 0.) || (a >= 0. && b > 0.)) {\n    return resultTemp;\n  } else {\n    return (resultTemp + b) % b;\n  }\n`,Jt=`\n  let isNaN = !vec4<bool>(b);\n  let valueForNaN = uniforms.NAN;\n  var resultTemp = vec4<f32>(a % b);\n  ${Qt}\n\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n\n  return resultTemp;\n`,en=`\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n  ${Qt}\n\n  return resultTemp;\n`,tn=`\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n  let valueForNaN = uniforms.NAN;\n  ${Qt}\n  return resultTemp;\n`;function nn(e,t,n="uniforms.NAN"){const r=t?Qt:Yt;return t?`\n    let valueForNaN = ${n};\n    var resultTemp = vec4<f32>(${e}(a, b));\n    `+r+"\n    return resultTemp;\n  ":r+`\n    return ${e}(a, b);\n  `}function rn(e,t){switch(e){case Xt.ADD:return"return a + b;";case Xt.ATAN2:return nn("atan2",t);case Xt.COMPLEX_MULTIPLY_IMAG:return"return areal * bimag + aimag * breal;";case Xt.COMPLEX_MULTIPLY_REAL:return"return areal * breal - aimag * bimag;";case Xt.DIV:return"return a / b;";case Xt.EQUAL:return t?"return vec4<f32>(a == b);":"return f32(a == b);";case Xt.GREATER:return t?"return vec4<f32>(a > b);":"return f32(a > b);";case Xt.GREATER_EQUAL:return t?"return vec4<f32>(a >= b);":"return f32(a >= b);";case Xt.INT_DIV:return t?"\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n":"\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n";case Xt.LESS:return t?"return vec4<f32>(a < b);":"return f32(a < b);";case Xt.LESS_EQUAL:return t?"return vec4<f32>(a <= b);":"return f32(a <= b);";case Xt.LOGICAL_AND:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(a >= 1.0 && b >= 1.0);";case Xt.LOGICAL_OR:return t?"return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));":"return f32(a >= 1.0 || b >= 1.0);";case Xt.MAX:return nn("max",t);case Xt.MIN:return nn("min",t);case Xt.MOD:return t?Jt:Zt;case Xt.MUL:return"return a * b;";case Xt.NOT_EQUAL:return t?en:"\n  if (isnan(a) || isnan(b)) {\n    return 1.0;\n  }\n  return f32(a != b);\n";case Xt.POW:return t?tn:"\n  if(a < 0.0 && floor(b) < b) {\n    return uniforms.NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  if (round(abs(b) % 2.0) != 1.0) {\n    return pow(abs(a), b);\n  }\n  return sign(a) * pow(abs(a), b);\n";case Xt.PRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return b * a; }  return a;";case Xt.SQUARED_DIFFERENCE:return"return (a - b) * (a - b);";case Xt.SUB:return"return a - b;";default:throw new Error(`BinaryType ${e} is not implemented!`)}}var on;!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(on||(on={}));const an=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = ${o.backend_util.ERF_P};\n  let a1 = ${o.backend_util.ERF_A1};\n  let a2 = ${o.backend_util.ERF_A2};\n  let a3 = ${o.backend_util.ERF_A3};\n  let a4 = ${o.backend_util.ERF_A4};\n  let a5 = ${o.backend_util.ERF_A5};\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n`,sn=`\n  if (a >= 0.0) {\n    return ${o.backend_util.SELU_SCALE} * a;\n  } else {\n    return ${o.backend_util.SELU_SCALEALPHA} * (exp(a) - 1.0);\n  }\n`;function un(e,t){switch(e){case on.ABS:return"return abs(a);";case on.ACOS:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n";case on.ACOSH:return"\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n";case on.ASIN:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n";case on.ASINH:return"return asinh(a);";case on.ATAN:return"\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n";case on.ATANH:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n";case on.COS:return"return cos(a);";case on.COSH:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case on.CEIL:return"return ceil(a);";case on.ELU:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case on.ERF:return an;case on.EXP:return"return exp(a);";case on.EXPM1:return"return exp(a) - 1.0;";case on.FLOOR:return"return floor(a);";case on.IS_FINITE:return"return f32(!isnan(a) && !isinf(a));";case on.IS_INF:return"return f32(isinf(a));";case on.IS_NAN:return"return f32(isnan(a));";case on.LINEAR:return"return a;";case on.LOG:return"if (a < 0.0) { return uniforms.NAN; }\n  return log(a);";case on.LOG1P:return"\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n";case on.LOGICAL_NOT:return"return f32(!(a >= 1.0));";case on.NEG:return"return -a;";case on.LEAKYRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return uniforms.alpha * a; } return a;";case on.RECIPROCAL:return"return 1.0 / a;";case on.RELU:return t?"\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n":"return select(a, 0.0, a < 0.0);";case on.RELU6:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case on.ROUND:return"return round(a);";case on.RSQRT:return"return inverseSqrt(a);";case on.SELU:return sn;case on.SIGMOID:return"return 1.0 / (1.0 + exp(-1.0 * a));";case on.SIGN:return"return sign(a);";case on.SIN:return"return sin(a);";case on.SINH:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case on.SOFTPLUS:return"\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n";case on.SQRT:return"return sqrt(a);";case on.SQUARE:return"return a * a;";case on.STEP:return"\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n";case on.TAN:return"return tan(a);";case on.TANH:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case on.TO_INT:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}const ln=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(e+"-component is not supported.")}};function hn(e,t=!1,n=!1,r=3){if(null===e)return"";let i="";if("linear"===e)i=un(on.LINEAR);else if("relu"===e)i=un(on.RELU,n);else if("elu"===e)i=un(on.ELU,n);else if("relu6"===e)i=un(on.RELU6,n);else if("prelu"===e)i=rn(Xt.PRELU,n);else if("sigmoid"===e)i=un(on.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);i=un(on.LEAKYRELU,n)}const o=ln(n?4:1);let a="";return a=t?`\n      fn activation(a : ${o}, coords : vec${r}<i32>) -> ${o} {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ${i}\n      }`:`\n      fn activation(a : ${o}, coords : vec${r}<i32>) -> ${o} {\n        ${i}\n      }`,a}function cn(e,t){return`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `}function dn(e,t,n=!1,r=!1,i=!1,a=1){o.util.assert(e&&1===a||!e,(()=>`transposeA ${e} is not compatible with component size ${a}`));const s=`\n      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}\n\n    `,u=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`\n  fn mm_readA(batch: i32, row: i32, colIn: i32) -> ${ln(a)} {\n    var value = ${ln(a)}(0.0);\n    let col = colIn * ${a};\n    ${n&&i?s:`\n    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}\n    {\n      ${s}\n    }\n    `}\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, colIn: i32) -> ${ln(a)} {\n    let col = colIn * ${a};\n    var value = ${ln(a)}(0.0);\n    ${u}\n    return value;\n  }\n  `}function pn(e,t,n,r,i=!1,o=!1,a=!1,s=1){return`\n  ${dn(n,r,i,o,a,s)}\n  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${ln(s)}) {\n    let col = colIn * ${s};\n    ${i&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ${cn(e,t)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  `}function fn(e,t,n=!1,r=32,i=!1,a=32,s=!1,u=!1){const l=t[1]*e[1],h=t[0]*e[0],c=n?l:r,d=n?r:l,p=c/t[0],f=r/t[1],m=e[1];return o.util.assert((n&&4===p&&4===e[1]||!n&&(3===p||4===p))&&c%t[0]==0&&r%t[1]==0&&4===e[0],(()=>`If transposeA ${n} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n          Otherwise, innerElementSize ${p} must be 3 or 4.\n      tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`)),`\n  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${c/p}>, ${d}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${h/e[0]}>, ${r}>;\n\n  ${Pt()} {\n    let localRow = i32(localId.y);\n    let tileRow = ${s?"0":"localRow * "+m};\n    let tileCol = i32(localId.x);\n\n    let globalRow = ${s?"0":"i32(globalId.y) * "+m};\n    let globalCol = i32(globalId.x);\n    let batch = ${i?"0":"i32(globalId.z)"};\n    let batchA = ${i||!u?"batch":"batch % uniforms.aShape[0]"};\n    let batchB = ${i||!u?"batch":"batch % uniforms.bShape[0]"};\n    let globalRowStart = i32(workgroupId.y) * ${l};\n\n    let numTiles = ${i?""+Math.ceil(a/r):`(uniforms.dimInner - 1) / ${r} + 1`};\n    var kStart = ${i?"i32(globalId.z) * "+a:"0"};\n\n    var acc: array<vec4<f32>, ${m}>;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ${f};\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ${((e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart / ${t} + inputCol);\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart / ${t} + inputCol);\n        `)(n,p)}\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ${f}; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ${r};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${r/p}; k++) {\n            let BCached0 = mm_Bsub[k * ${p}][tileCol];\n            let BCached1 = mm_Bsub[k * ${p} + 1][tileCol];\n            let BCached2 = mm_Bsub[k * ${p} + 2][tileCol];\n            ${3===p?"":`let BCached3 = mm_Bsub[k * ${p} + 3][tileCol];`}\n\n            ${((e,t,n)=>e?`\n        let ACached0 = mm_Asub[k * ${t}][localRow];\n        let ACached1 = mm_Asub[k * ${t} + 1][localRow];\n        let ACached2 = mm_Asub[k * ${t} + 2][localRow];\n        ${3===t?"":`let ACached3 = mm_Asub[k * ${t} + 3][localRow];`}\n        for (var i = 0; i < ${n}; i++) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < ${n}; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`)(n,p,m)}\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }`}const mn=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function gn(e,t,n=!1,r=32,i=!1,a=32,s=!1,u=!1){const l=e[1]*t[1],h=e[0]*t[0],c=n?l:r,d=n?r:l;o.util.assert(d%t[1]==0&&c%t[0]==0&&r%t[1]==0,(()=>`tileAHight ${d} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${r} must be divisible by workgroupSize[1]${t[1]}`));const p=d/t[1],f=c/t[0],m=r/t[1],g=e[1],y=e[0],b=s?`\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ${l};\n      let globalColStart = i32(workgroupId.x) * ${h};\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {\n          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n            ${mn(n)}\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${t[1]}) {\n              for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${t[0]}) {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ${r};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ${y}>;\n        for (var k = 0; k < ${r}; k++) {\n          for (var inner = 0; inner < ${y}; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n          }\n          for (var innerRow = 0; innerRow < ${g}; innerRow++) {\n            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n            for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                  ACached * BCached[innerCol];\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ${g}; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n        for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ${t[0]};\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      `:`\n  let tileRow = i32(localId.y) * ${g};\n  let tileCol = i32(localId.x) * ${y};\n\n  let globalRow = i32(globalId.y) * ${g};\n  let globalCol = i32(globalId.x) * ${y};\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let tileRowA = i32(localId.y) * ${p};\n  let tileColA = i32(localId.x) * ${f};\n  let tileRowB = i32(localId.y) * ${m};\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ${p}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${f}; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ${mn(n)}\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ${r};\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ${y}>;\n    for (var k = 0; k < ${r}; k++) {\n      for (var inner = 0; inner < ${y}; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ${g}; innerRow++) {\n        ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n)}\n        for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n          acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ${g}; innerRow++) {\n    for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  `;return`\n    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${d}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${h}>, ${r}>;\n\n    ${Pt()} {\n      let batch = ${i?"0":"i32(globalId.z)"};\n      let batchA = ${i||!u?"batch":"batch % uniforms.aShape[0]"};\n      let batchB = ${i||!u?"batch":"batch % uniforms.bShape[0]"};\n      let numTiles = ${i?""+Math.ceil(a/r):`(uniforms.dimInner - 1) / ${r} + 1`};\n      var kStart = ${i?"i32(globalId.z) * "+a:"0"};\n\n      var acc : array<array<f32, ${y}>, ${g}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${g}; innerRow++) {\n        for (var innerCol = 0; innerCol < ${y}; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ${b}\n    }\n  `}class yn{constructor(e,t,n=!1,r=!1,i=null,o=null,a=null,s=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=n?e[1]:e[2];if(this.isVec4=(u%4==0&&!n||t[1]%4==0&&n)&&t[2]%4==0&&!r,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const e=function(e,t,n,r=!1){const i=[8,8,1],o=[4,4,1];return r||(e<=8&&(o[1]=1),t<=16&&n<=16&&(i[0]=4)),{workgroupSize:i,elementsPerThread:o}}(t[1],u,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const l=null!=i,h=null!=a;l&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=s,this.transposeA=n,this.transposeB=r,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,n){const r=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];return!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=i,[e%r==0,t%i==0,n%this.tileInner==0]}getUserCode(){return`\n      ${hn(this.activation,this.hasPreluActivationWeights,this.isVec4)}\n      ${pn(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}\n      ${this.isVec4?fn(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.isVectorA,!0):this.isVectorA?function(e,t=!1){o.util.assert(1===e[1]&&1===e[2],(()=>`A linear work group size is required. But got ${e}.`));const n=4*e[0];return`\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    ${Pt()} {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ${n} + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(${(e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t)});\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${n/4}; k++) {\n          let rowB = t * ${n} + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  `}(this.workgroupSize,this.transposeA):gn(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}\n    `}}class bn{constructor(e,t=!1,n=!1,r=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=null!=r,s=null!=o;a&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=a,this.activation=i,this.hasPreluActivationWeights=s,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){var e;return`\n      ${hn(this.activation,this.hasPreluActivationWeights)}\n      ${pn(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${e=this.workgroupSize[0],`\n    var<workgroup> sumValues : array<f32, ${e}>;\n    ${Pt()} {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ${e}) {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ${e/2}u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  `}\n    `}}class xn{constructor(e,t,n,r=!1,i=!1,o=null,a=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];const u=null!=o;u&&this.variableNames.push("bias");const l=null!=s;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=i,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=l,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${i}`}getUserCode(){return`\n      ${hn(this.activation,this.hasPreluActivationWeights)}\n      ${pn(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){const t=e[1],n=e[0],r=t>n?t:n;return`\n  var<workgroup> mm_Asub : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${r}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ${Pt()} {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ${r};\n    globalRowB = globalRowB + ${r};\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ${r};\n      globalRowB = globalRowB + ${r};\n\n      for (var k = 0; k < ${r}; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  `}(this.workgroupSize)}\n    `}}class vn{constructor(e,t,n=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.isVec4=!1,this.splitedDimInner=128,o.util.assert(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.isVec4=(n&&this.outputShape[1]%4==0||!n&&t%4==0)&&this.outputShape[2]%4==0,this.elementsPerThread=[4,4,this.splitedDimInner],this.isVec4||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Dt(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=r,this.shaderKey=`matMulSplitK_${n}_${r}_${this.elementsPerThread}_${this.isVec4}`}getUserCode(){const e=this.isVec4?4:1;return`\n      ${dn(!1,this.transposeB,!1,!1,!1,e)}\n      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${ln(e)}) {\n        let col = colIn * ${e};\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ${e}; i = i + 1) {\n            ${At("&result[flatIndex + i]",e>1?"value[i]":"value","float32")}\n          }\n        }\n      }\n      ${this.isVec4?fn(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):gn(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}\n    `}}class wn{constructor(e,t=null,n=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=r,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey="biasActivation_"+n}getUserCode(){return`\n    ${hn(this.activation,this.hasPreluActivationWeights)}\n    ${Pt("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ${cn(this.addBias,this.activation)}\n        setOutputAtIndex(index, value);\n      }\n    }\n    `}}class kn{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`\n    ${Pt("index")} {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  `}}function Sn(e){const{backend:t,attrs:n}=e,{shape:r,value:i}=n;let{dtype:a}=n;if(a=a||o.util.inferDtype(i),"string"===a){const e=o.util.getArrayFromDType(a,o.util.sizeFromShape(r));return e.fill(i),t.makeTensorInfo(r,a,e)}{const e=new kn(r),n=[{type:"float32",data:[i]}];return t.runWebGPUProgram(e,[],a,n)}}const In={kernelName:o.Fill,backendName:"webgpu",kernelFunc:Sn};function Cn(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:i}=n,a=o.util.sizeFromShape(r.shape),s=o.util.inferFromImplicitShape(i,a),u=o.util.sizeFromShape(s);return o.util.assert(a===u,(()=>`The new shape (${s}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:s,dtype:r.dtype}}const Tn={kernelName:o.Reshape,backendName:"webgpu",kernelFunc:Cn};function An({a:e,b:t,transposeA:n,transposeB:r,backend:i,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:u=0,activation:l=null}){const h=e.shape.length,c=t.shape.length,d=n?e.shape[h-2]:e.shape[h-1],p=r?t.shape[c-1]:t.shape[c-2],f=n?e.shape[h-1]:e.shape[h-2],m=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=o.util.sizeFromShape(g),x=o.util.sizeFromShape(y),v=o.broadcast_util.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);o.util.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[b,d,f]:[b,f,d],k=r?[x,m,p]:[x,p,m],S=Cn({inputs:{x:e},backend:i,attrs:{shape:w}}),I=Cn({inputs:{x:t},backend:i,attrs:{shape:k}}),C=[S,I],T=Math.max(b,x),A=[S,I],R=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[d]}];let _,P;const E=[T,f,m];let $=(0,o.env)().get("WEBGPU_MATMUL_PROGRAM_TYPE");if($<0){const e=(0,o.env)().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:i.thresholdToIncreaseWorkgroups,n=T*Math.ceil(f/32)*Math.ceil(m/32);$=n<=t||f<=8&&n<=2*t?T*f*m<=128?jt.MatMulReduceProgram:1===T&&p>=2e3?jt.MatMulSplitKProgram:jt.MatMulSmallOutputSizeProgram:jt.MatMulPackedProgram}switch($){case jt.MatMulReduceProgram:_=new bn(E,n,r,a,l,s);break;case jt.MatMulSplitKProgram:if(P=Sn({backend:i,attrs:{shape:E,value:0,dtype:e.dtype}}),_=new vn(E,p,n,r),a||l){P=i.runWebGPUProgram(_,A,e.dtype,R,P);const t=new wn(P.shape,a,l,s);let n=null;const r=[P];a&&r.push(a),s&&r.push(s),"leakyrelu"===l&&(n=[{type:"float32",data:[u]}],t.uniforms+=" alpha : f32,");const o=i.runWebGPUProgram(t,r,P.dtype,n);C.push(P);const h=Cn({inputs:{x:o},backend:i,attrs:{shape:v}});C.push(o);for(const e of C)i.disposeData(e.dataId);return h}break;case jt.MatMulSmallOutputSizeProgram:_=new xn(w,k,E,n,r,a,l,s);break;case jt.MatMulPackedProgram:const t=i.adapterInfo.isIntel();_=new yn(w,E,n,r,a,l,s,t);break;default:throw new Error(`Unsupported MatMulProgramType ${$}.`)}a&&A.push(a),s&&A.push(s),"leakyrelu"===l&&(R.push({type:"float32",data:[u]}),_.uniforms+=" alpha : f32,"),P=i.runWebGPUProgram(_,A,e.dtype,R,P);const F=Cn({inputs:{x:P},backend:i,attrs:{shape:v}});C.push(P);for(const e of C)i.disposeData(e.dataId);return F}const Rn={kernelName:o._FusedMatMul,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:o,bias:a,preluActivationWeights:s}=t,{transposeA:u,transposeB:l,activation:h,leakyreluAlpha:c}=r;return An({a:i,b:o,transposeA:u,transposeB:l,backend:n,bias:a,preluActivationWeights:s,leakyreluAlpha:c,activation:h})}};class _n{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="binaryOpComplex_"+e,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${rn(this.op,!1)}\n      }\n\n      ${Pt("index")} {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}}class Pn{constructor(e,t,n){this.size=!0,this.variableNames=["A","B"],this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Vt(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workgroupSize=[256,1,1],this.workPerThread=1):(o.util.arraysEqual(t,n)&&o.util.sizeFromShape(t)%4==0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workgroupSize=[128,1,1]),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1])}getUserCode(){let e;const t=this.isVec4?"vec4<f32>":"f32",n=`\n    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {\n      let isNaN = false;\n      {\n        ${rn(this.op,this.isVec4)}\n      }\n    };\n    `;if("shared"===this.type){const t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);\n          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];\n          let b = getBByOutputIndex(index);`;e=`\n        ${n}\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        ${Pt("index")} {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ${this.lastDimensionSize}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ${r}\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        `}else e=`\n       ${n}\n       ${Pt("index")} {\n         if (index < uniforms.size) {\n           let a = getAByOutputIndex(index);\n           let b = getBByOutputIndex(index);\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       `;return e}}function En(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const $n={kernelName:o.Identity,backendName:"webgpu",kernelFunc:En};function Fn(e){const{inputs:t,backend:n}=e,{real:r,imag:i}=t,o=n.makeTensorInfo(r.shape,"complex64"),a=n.tensorMap.get(o.dataId),s=En({inputs:{x:r},backend:n}),u=En({inputs:{x:i},backend:n});return a.complexTensorInfos={real:s,imag:u},o}const Nn={kernelName:o.Complex,backendName:"webgpu",kernelFunc:Fn};class Mn{constructor(e,t,n=""){this.variableNames=["A"],this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey="unary_"+t}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${un(this.op,!1)}\n      }\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}}function zn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:r,backend:i})=>{const{x:o}=r,a=i,s=n||o.dtype;if(a.shouldExecuteOnCPU([o])&&null!=t){const e=a.tensorMap.get(o.dataId),n=t(e.values,s);return a.makeTensorInfo(o.shape,s,n)}const u=new Mn(o.shape,e);return a.runWebGPUProgram(u,[o],s)}}function On({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:r}){return({inputs:i,backend:a})=>{const{a:s,b:u}=i,l=a;if(n&&"complex64"===s.dtype){const t=l.tensorMap.get(s.dataId),n=l.tensorMap.get(u.dataId);let r,i;if(e!==Xt.MUL)[r,i]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,i={dataId:n.dataId,dtype:n.dtype,shape:s.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},h=new Pn(e,s.shape,u.shape);return l.runWebGPUProgram(h,[i,a],(0,o.upcastType)(n.dtype,r.dtype))}));else{const e=new _n(Xt.COMPLEX_MULTIPLY_REAL,s.shape,u.shape),o=new _n(Xt.COMPLEX_MULTIPLY_IMAG,s.shape,u.shape),a=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u.shape}];r=l.runWebGPUProgram(e,a,"float32"),i=l.runWebGPUProgram(o,a,"float32")}const a=Fn({inputs:{real:r,imag:i},backend:l});return l.disposeData(r.dataId),l.disposeData(i.dataId),a}const h=r||(0,o.upcastType)(s.dtype,u.dtype);if(("string"===s.dtype||"string"===u.dtype||l.shouldExecuteOnCPU([s,u]))&&null!=t){const e=l.tensorMap.get(s.dataId).values,n=l.tensorMap.get(u.dataId).values,r="string"===s.dtype?o.backend_util.fromUint8ToStringArray(e):e,i="string"===s.dtype?o.backend_util.fromUint8ToStringArray(n):n,[a,c]=t(s.shape,u.shape,r,i,h);return l.makeTensorInfo(c,h,a)}const c=new Pn(e,s.shape,u.shape);return l.runWebGPUProgram(c,[s,u],h)}}function Ln(e){return(t,n,r,i,a)=>{const s=o.backend_util.assertAndGetBroadcastShape(t,n),u=s.length,l=o.util.computeStrides(s),h=o.util.sizeFromShape(s),c=o.util.getTypedArrayFromDType(a,h),d=t.length,p=n.length,f=o.util.computeStrides(t),m=o.util.computeStrides(n),g=o.backend_util.getBroadcastDims(t,s),y=o.backend_util.getBroadcastDims(n,s);if(g.length+y.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],i[t%i.length]);else for(let t=0;t<c.length;++t){const n=o.util.indexToLoc(t,u,l),a=n.slice(-d);g.forEach((e=>a[e]=0));const s=o.util.locToIndex(a,d,f),h=n.slice(-p);y.forEach((e=>h[e]=0));const b=o.util.locToIndex(h,p,m);c[t]=e(r[s],i[b])}return[c,s]}}const Bn=Ln(((e,t)=>e+t));function Dn(e){return(t,n,r)=>{const i=o.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)i[n]=e(t[n],r);return i}}const Un=Dn((e=>Math.ceil(e))),Wn=Ln(((e,t)=>e===t?1:0)),Vn=Dn((e=>Math.exp(e))),Gn=Dn((e=>Math.expm1(e))),Hn=Dn((e=>Math.floor(e))),jn=Ln(((e,t)=>e>t?1:0)),Kn=Ln(((e,t)=>e>=t?1:0)),qn=Ln(((e,t)=>e<t?1:0)),Xn=Ln(((e,t)=>e<=t?1:0)),Yn=Dn((e=>Math.log(e))),Qn=Ln(((e,t)=>Math.max(e,t))),Zn=Ln(((e,t)=>Math.min(e,t))),Jn=Ln(((e,t)=>e*t)),er=Ln(((e,t)=>e!==t?1:0));function tr(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}var nr=o.backend_util.RowPartitionType;class rr{constructor(e,t,n,r,i,a,s,u,l,h){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=i,this.defaultValue=a,this.defaultValueShape=s,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=o.backend_util.getRowPartitionTypesHelper(h),this.raggedRank=o.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===nr.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===nr.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case nr.VALUE_ROWIDS:return rr.getMaxWidthValueRowID(t);case nr.ROW_SPLITS:return rr.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type "+nr[this.getRowPartitionTypeByDimension(e-1)])}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],i=0;for(let o=1;o<t;++o){const t=e[o];t!==r&&(r=t,i=Math.max(o-n,i),n=o)}return Math.max(t-n,i)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return or(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;o.backend_util.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=o.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);i[0]<0&&(i[0]=e);for(let e=1;e<=this.raggedRank;++e)i[e]<0&&(i[e]=this.getMaxWidth(e));return i}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),i=[];let a=0;for(let e=0;e<r;++e,a+=t)i.push(a);for(let t=r;t<e;++t)i.push(-1);return o.util.assert(i.length===e,(()=>"Final length of result must be equal to firstDimension.")),i}calculateOutputIndexRowSplit(e,t,n,r){const i=e.length,o=[];for(let a=0;a<i-1;++a){const i=e[a+1]-e[a];let s=Math.min(r,i),u=t[a];-1===u&&(s=0);for(let e=0;e<s;++e)o.push(u),u+=n;for(let e=0;e<i-s;++e)o.push(-1)}if(i>0&&o.length!==e[i-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,n,r){const i=e.length,o=[];if(0===i)return[];let a=0,s=e[0];if(s>=t.length)throw new Error(`Got currentValueRowId=${s}, which is not less than ${t.length}`);let u=t[s];o.push(u);for(let l=1;l<i;++l){const i=e[l];if(i===s)u>=0&&(++a,a<r?u+=n:u=-1);else{if(a=0,s=i,i>=t.length)throw new Error(`Got nextValueRowId=${i} which is not less than ${t.length}`);u=t[i]}o.push(u)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,n,r){const i=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case nr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,n,r);case nr.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,n,r);default:throw new Error("Unsupported partition type: "+nr[o])}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case nr.FIRST_DIM_SIZE:return e[0];case nr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case nr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type "+nr[t])}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=or(t,!1),i=o.util.getArrayFromDType(this.valuesDType,o.util.sizeFromShape(r));if(n[0]*t[0]>0){let o=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)o=this.calculateOutputIndex(e-1,o,n[e],t[e]);this.setOutput(this.raggedRank,o,i,r)}return[r,i]}setOutput(e,t,n,r){if(0===n.length)return;const i=this.values,a=n;let s=r.slice();s=s.slice(e+1);const u=o.util.sizeFromShape(s),l=t.length;let h=this.defaultValue;if(h.length!==u&&1!==h.length){const e=this.defaultValueShape;(0,o.tidy)((()=>{const t=(0,o.reshape)(h,e),n=(0,o.broadcastTo)(t,s);h=n.dataSync()}))}let c=0,d=0,p=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==p){if(d<p){const e=i.subarray(c*u);ir(a.subarray(d*u),e,(p-d)*u)}if(e>=l){const e=n.length;r=Math.floor(e/u)}if(r>p)if(1===this.defaultValue.length)a.subarray(p*u,r*u).fill(this.defaultValue[0]),p=r;else for(;r>p;)ir(a.slice(p*u),h,u),++p;r<0?(c=e+1,d=p):(c=e,d=p,p=d+1)}else++p}}}function ir(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function or(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}const ar=Dn((e=>1/Math.sqrt(e))),sr=Dn((e=>1/(1+Math.exp(-e)))),ur=Dn((e=>Math.sqrt(e))),lr=Ln(((e,t)=>{const n=e-t;return n*n}));class hr{constructor(e,t,n,r,i,a){this.separator=o.util.encodeString(e),this.nGramWidths=t,this.leftPad=o.util.encodeString(n),this.rightPad=o.util.encodeString(r),this.padWidth=i,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,i,o){for(let a=0;a<i;++a){const s=this.getPadWidth(o),u=Math.max(0,s-a),l=Math.max(0,s-(i-(a+1))),h=o-(u+l),c=t+(u>0?0:a-s);let d=0;d+=u*this.leftPad.length;for(let t=0;t<h;++t)d+=e[c+t].length;d+=l*this.rightPad.length,d+=(u+l+h-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<h-1;++t)m(e[c+t]),m(this.separator);if(h>0){m(e[c+h-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let i=1;i<r;++i){let r=t[i]>=e;if(r=r&&t[i]<=n,!r)throw new Error(`Invalid split value ${t[i]}, must be in [${e}, ${n}]`);e=t[i]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const i=r-1,a=o.util.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=i;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=i;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const s=new Array(a[i]);for(let n=0;n<i;++n){const r=t[n];let i=a[n];if(this.nGramWidths.forEach((o=>{const a=t[n+1]-t[n],u=this.getNumNGrams(a,o);this.createNGrams(e,r,s,i,u,o),i+=u})),this.preserveShort&&i===a[n]){const o=t[n+1]-t[n];if(0===o)continue;const a=o+2*this.padWidth,u=1;this.createNGrams(e,r,s,i,u,a)}}return[s,a]}}function cr(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const i=t[0];let o=e.indexOf(i);for(;-1!==o;){const t=e.subarray(0,o);n&&0===t.length||r.push(t),o=(e=e.subarray(o+1)).indexOf(i)}return void(n&&0===e.length||r.push(e))}let i=0;for(let o=0;o<e.length+1;o++)if(o===e.length||-1!==t.indexOf(e[o])){const t=e.subarray(i,o);n&&0===t.length||r.push(t),i=o+1}}const dr=Ln(((e,t)=>e-t)),pr=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function fr(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const i=r-n+1,o=t-n+1,a=Math.log(i),s=.5*Math.exp(2*a/3),u=.5*Math.sqrt(a*s*(i-s)/i)*Math.sign(o-i/2);fr(e,t,Math.max(n,Math.floor(t-o*s/i+u)),Math.min(r,Math.floor(t+(i-o)*s/i+u)))}const i=e[t];let a=n,s=r;for(o.util.swap(e,n,t),pr(e[r],i)>0&&o.util.swap(e,n,r);a<s;){for(o.util.swap(e,a,s),a++,s--;pr(e[a],i)<0;)a+=1;for(;pr(e[s],i)>0;)s-=1}0===pr(e[n],i)?o.util.swap(e,n,s):(s+=1,o.util.swap(e,s,r)),s<=t&&(n=s+1),t<=s&&(r=s-1)}}var mr=Object.freeze({__proto__:null,simpleAbsImpl:function(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t},addImpl:Bn,bincountImpl:function(e,t,n,r,i){const a=o.util.sizeFromShape(r),s=o.util.makeZerosTypedArray(i,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(s[r]+=a>0?t[n]:1)}return s},bincountReduceImpl:function(e,t,n,r=!1){const i=e.shape[0],a=e.shape[1],s=(0,o.buffer)([i,n],t.dtype);for(let o=0;o<i;o++)for(let i=0;i<a;i++){const a=e.get(o,i);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?s.set(1,o,a):t.size>0?s.set(s.get(o,a)+t.get(o,i),o,a):s.set(s.get(o,a)+1,o,a))}return s},castImpl:function(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=o.util.toTypedArray([0],n),[i,a]=Ln(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)},ceilImpl:Un,concatImpl:function(e,t,n,r){const i=o.util.getArrayFromDType(n,o.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=o.util.sizeFromShape(e.shape);i.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?o.backend_util.fromUint8ToStringArray(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)i[o+t]=a[s++]}r+=e.shape[1]}))}return i},equalImpl:Wn,expImpl:Vn,expm1Impl:Gn,floorImpl:Hn,gatherNdImpl:function(e,t,n,r,i,a,s,u,l){const h=(0,o.buffer)([r,a],n);for(let n=0;n<r;n++){const r=[];let o=0;for(let t=0;t<i;t++){const a=e[n*i+t];o+=a*s[t],r.push(a)}if(o<0||o>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<a;e++)h.values[n*a+e]=t.get(...t.indexToLoc(o*a+e))}return h},gatherV2Impl:function(e,t,n){const r=(0,o.buffer)(n,e.dtype);for(let n=0;n<r.size;++n){const i=r.indexToLoc(n).slice(),o=i[0],a=i[2],s=t.locToIndex([o,a]);i[2]=t.values[s];const u=e.locToIndex(i);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r},greaterImpl:jn,greaterEqualImpl:Kn,lessImpl:qn,lessEqualImpl:Xn,linSpaceImpl:function(e,t,n){const r=(t-e)/(n-1),i=o.util.makeZerosTypedArray(n,"float32");i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+r;return i},logImpl:Yn,maxImpl:function(e,t,n,r){const i=o.util.getTypedArrayFromDType(r,o.util.sizeFromShape(n));for(let n=0;n<i.length;++n){const r=n*t;let o=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>o)&&(o=t)}i[n]=o}return i},maximumImpl:Qn,minimumImpl:Zn,multiplyImpl:Jn,negImpl:function(e,t,n){const r=o.util.createScalarValue(-1,n);return Jn([],t,r,e,n)},notEqualImpl:er,prodImpl:function(e,t,n,r){const[i,a]=o.backend_util.computeOutAndReduceShapes(e,r),s=(0,o.upcastType)(t,"int32"),u=o.util.makeZerosTypedArray(o.util.sizeFromShape(i),s),l=o.util.sizeFromShape(a);for(let e=0;e<u.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:i,outDtype:s}},raggedGatherImpl:function(e,t,n,r,i,a,s,u){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const i=o.util.indexToLoc(r,t.length,o.util.computeStrides(t)).join(",");throw new Error(`indices[${i}] = ${e} is not in [0, ${n})`)}}))}(a,s,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:h,valueSlices:c,numValues:d}=function(e,t,n,r){const i=[];let o=0;const a=t.length-1+n.length,s=new Array(a).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],i=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>i)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)s[e].push(t*n)}for(let r=0;r<e.length;++r){let a=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],i=e+t.length-1;if(i>=0){const e=s[i],t=e[e.length-1]-r[a];for(let e=a;e<u;++e)s[i].push(r[e+1]+t)}a=r[a],u=r[u]}u!==a&&(i.push([a,u]),o+=u-a)}return{outSplits:s,valueSlices:i,numValues:o}}(a,s,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,i=o.util.getArrayFromDType("int32",r);t.push(i),e[n].forEach(((e,t)=>i[t]=e))}return t}(h),f=function(e,t,n,r,i){const a=t.slice();a[0]=i;const s=o.util.getArrayFromDType(n,o.util.sizeFromShape(a)),u=e.length;return function(e,t,n,r,i,o){const a=tr(t,2)[1],s=tr(o,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)i[u*s+t]=e[n*a+t];++u}}(e,t,r,0===u?0:u/t[0],s,a),[s,a]}(n,r,i,c,d);return[p,f[0],f[1]]},raggedRangeImpl:function(e,t,n,r,i,a,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");const u=0===t.length,l=0===i.length,h=0===s.length,c=[];u||c.push(t[0]),l||c.push(i[0]),h||c.push(s[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===c.length?1:c[0],p=o.util.getArrayFromDType("int32",d+1);p[0]=0;for(let t=0;t<d;++t){const n=u?e[0]:e[t],i=l?r[0]:r[t],o=h?a[0]:a[t];if(0===o)throw new Error("Requires delta != 0");let s;if(o>0&&i<n||o<0&&i>n)s=0;else if(s=Math.ceil(Math.abs((i-n)/o)),s>2147483647)throw new Error("Requires ((limit - start) / delta) <= 2147483647");p[t+1]=p[t]+s}const f=p[d],m=o.util.getArrayFromDType(n,f);let g=0;for(let t=0;t<d;++t){const n=p[t+1]-p[t];let r=u?e[0]:e[t];const i=h?a[0]:a[t];for(let e=0;e<n;++e)m[g++]=r,r+=i}return[p,m]},raggedTensorToTensorImpl:function(e,t,n,r,i,o,a,s,u,l){return new rr(e,t,n,r,i,o,a,s,u,l).compute()},rangeImpl:function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return o.util.makeZerosTypedArray(0,r);const i=Math.abs(Math.ceil((t-e)/n)),a=o.util.makeZerosTypedArray(i,r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a},rsqrtImpl:ar,scatterImpl:function(e,t,n,r,i,a,s,u,l,h){const c=[r/i,i],d=e.values,p=t.values;if(0===r)return(0,o.buffer)(n,t.dtype);const f=(0,o.buffer)(c,t.dtype);"string"==typeof l||"number"==typeof l?f.values.fill(l):"boolean"==typeof l&&f.values.fill(+l);for(let e=0;e<a;e++){const o=[];let a=0;for(let t=0;t<s;t++){const n=d[e*s+t];o.push(n),a+=n*u[t]}if(a<0||a>=r/i)throw new Error(`Invalid indices: ${o} does not index into ${n}`);for(let n=0;n<i;n++)h?f.values[a*i+n]+=p[e*i+n]:f.values[a*i+n]=0===t.rank?p[0]:p[e*i+n]}return f},sigmoidImpl:sr,sliceImpl:function(e,t,n,r,i){const a=o.slice_util.isSliceContinous(r,t,n),s=o.util.sizeFromShape(n),u=o.util.computeStrides(r);if(a){const n=o.slice_util.computeFlatOffset(t,u);return"string"===i?e.slice(n,n+s):e.subarray(n,n+s)}const l="string"===i?o.backend_util.fromUint8ToStringArray(e):e,h=(0,o.buffer)(r,i,l),c=(0,o.buffer)(n,i);for(let e=0;e<c.size;++e){const n=c.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));c.set(h.get(...r),...n)}return"string"===i?o.backend_util.fromStringArrayToUint8(c.values):c.values},sparseFillEmptyRowsImpl:function(e,t,n,r,i,a,s){const u=t[0],l=a[0],h=new Array(l),c=new Array(u),d=t[1];if(0===l){if(0!==u)throw new Error(o.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[o.util.getArrayFromDType(n,0),[0,d],o.util.getArrayFromDType(i,0),h,c]}let p=!0,f=0;const m=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*d];if(n<0)throw new Error(o.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(o.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++m[n],p=p&&n>=f,f=n}let g=!0;for(let e=0;e<l;++e){const t=0===m[e];h[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&p){const t=e,n=r;for(let e=0;e<u;++e)c[e]=e;return[t,[u,d],n,h,c]}{const t=m[l-1],a=o.util.getArrayFromDType(n,t*d),p=o.util.getArrayFromDType(i,t),f=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*d],i=f[n],o=(0===n?0:m[n-1])+i;f[n]++;for(let n=0;n<d;++n)a[o*d+n]=e[t*d+n];p[o]=r[t],c[t]=o}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];a[t*d+0]=e;for(let e=1;e<d;++e)a[t*d+e]=0;p[t]=s}return[a,[t,d],p,h,c]}},sparseReshapeImpl:function(e,t,n,r,i){const a=o.util.sizeFromShape(r),s=t[0],u=i.length,l=[];let h=1,c=-1;for(let e=0;e<u;++e){const t=i[e];if(-1===t){if(-1!==c)throw new Error(o.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(o.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(e,t));h*=t,l.push(t)}}if(-1!==c){if(h<=0)throw new Error(o.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/h);if(h*e!==a)throw new Error(o.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[c]=e}if(o.util.sizeFromShape(l)!==a)throw new Error(o.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const d=r.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=o.util.getArrayFromDType(n,s*u);for(let t=0;t<s;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*p[r];for(let e=0;e<u;++e)m[t*u+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[s,u],l]},sparseSegmentReductionImpl:function(e,t,n,r,i,a=!1,s=0){const u=r.length,l=[t[0],e.length/t[0]],h=l[1],c=u>0?i[u-1]+1:0;if(c<0)throw new Error(o.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=c;const p=d.reduce(((e,t)=>e*t),1),f=o.util.getArrayFromDType(n,p);if(0===u)return c>0&&f.fill(s),[f,d];if(c<=0)throw new Error(o.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=i[m];for(;;){let t=0;if(g<u){if(t=i[g],b===t){++g;continue}if(b>=t)throw new Error(o.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=c)throw new Error(o.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,c));b>y&&f.fill(s,y*h,b*h);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(o.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<h;t++)f[b*h+t]+=e[n*h+t]}if(a)for(let e=0;e<h;e++)f[b*h+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<c&&f.fill(s,y*h,c*h),[f,d]},sqrtImpl:ur,squaredDifferenceImpl:lr,stridedSliceImpl:function(e,t,n,r){const i=(0,o.buffer)(e,t.dtype);for(let e=0;e<i.size;e++){const o=i.indexToLoc(e),a=new Array(o.length);for(let e=0;e<a.length;e++)a[e]=o[e]*n[e]+r[e];i.set(t.get(...a),...o)}return i},stringNGramsImpl:function(e,t,n,r,i,o,a,s){return new hr(n,r,i,o,a,s).compute(e,t)},stringSplitImpl:function(e,t,n){const r=e.length,i=[];let a=0,s=0;const u=new Array(r);for(let o=0;o<r;++o){const r=i.length;cr(e[o],t,n,i);const l=i.length-r;u[o]=l,a+=l,s=Math.max(s,l)}const l=o.util.getArrayFromDType("int32",2*a),h=new Array(a),c=[r,s];let d=0;for(let e=0;e<r;++e)for(let t=0;t<u[e];++t)l[2*d]=e,l[2*d+1]=t,h[d]=i[d],++d;return[l,h,c]},stringToHashBucketFastImpl:function(e,t){const n=o.util.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=o.util.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n},subImpl:dr,tileImpl:function(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,o.buffer)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),i=new Array(e.rank);for(let t=0;t<i.length;t++)i[t]=n[t]%e.shape[t];const o=e.locToIndex(i);r.values[t]=e.values[o]}return r},topKImpl:function(e,t,n,r,i){const a=t[t.length-1],[s,u]=[e.length/a,a],l=o.util.getTypedArrayFromDType(n,s*r),h=o.util.getTypedArrayFromDType("int32",s*r);for(let t=0;t<s;t++){const n=t*u,o=e.subarray(n,n+u);let a=new Array(o.length);o.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(fr(a,r),a=a.slice(0,r)),i&&a.sort(pr);const s=t*r,c=l.subarray(s,s+r),d=h.subarray(s,s+r);for(let e=0;e<r;e++)c[e]=a[e].value,d[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[(0,o.buffer)(c,n,l),(0,o.buffer)(c,"int32",h)]},transposeImpl:function(e,t,n,r,i){const a=t.length,s=o.util.sizeFromShape(t),u=o.util.computeStrides(t),l=o.util.computeStrides(i),h=o.util.getTypedArrayFromDType(n,o.util.sizeFromShape(i));for(let t=0;t<s;++t){const n=o.util.indexToLoc(t,a,u),i=new Array(n.length);for(let e=0;e<i.length;e++)i[e]=n[r[e]];h[o.util.locToIndex(i,a,l)]=e[t]}return h},uniqueImpl:function(e,t,n,r){const i=o.util.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let e=0;e<i;e++)a[0]*=n[e];a[1]=n[i];for(let e=i+1;e<n.length;e++)a[2]*=n[e];const s={},u=new Int32Array(n[i]),l=new(0,o.TensorBuffer)(a,r,e),h=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[i];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==s[n])u[t]=s[n];else{const e=Object.keys(s).length;s[n]=e,u[t]=e,h.push(t)}}const d=a.slice();d[1]=Object.keys(s).length;const p=new(0,o.TensorBuffer)(d,r);h.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[i]=d[1],{outputValues:p.values,outputShape:f,indices:u}}});const{addImpl:gr,castImpl:yr,ceilImpl:br,concatImpl:xr,equalImpl:vr,expImpl:wr,expm1Impl:kr,floorImpl:Sr,gatherNdImpl:Ir,gatherV2Impl:Cr,greaterEqualImpl:Tr,greaterImpl:Ar,lessEqualImpl:Rr,lessImpl:_r,logImpl:Pr,maxImpl:Er,maximumImpl:$r,minimumImpl:Fr,multiplyImpl:Nr,negImpl:Mr,notEqualImpl:zr,prodImpl:Or,rangeImpl:Lr,rsqrtImpl:Br,scatterImpl:Dr,simpleAbsImpl:Ur,sliceImpl:Wr,stridedSliceImpl:Vr,stringNGramsImpl:Gr,subImpl:Hr,tileImpl:jr,topKImpl:Kr,transposeImpl:qr,uniqueImpl:Xr}=mr,Yr={kernelName:o.Abs,backendName:"webgpu",kernelFunc:zn({opType:on.ABS,cpuKernelImpl:Ur})},Qr={kernelName:o.Acos,backendName:"webgpu",kernelFunc:zn({opType:on.ACOS})},Zr={kernelName:o.Acosh,backendName:"webgpu",kernelFunc:zn({opType:on.ACOSH})},Jr={kernelName:o.Add,backendName:"webgpu",kernelFunc:On({opType:Xt.ADD,cpuKernelImpl:gr,supportsComplex:!0})};class ei{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>"T"+t)),this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));const t=this.variableNames.map((e=>"v"+e)).join(" + ");return`\n      ${Pt("index")} {\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}}const ti={kernelName:o.AddN,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return En({inputs:{x:r[0]},backend:n});const i=r.map((e=>e.dtype)).reduce(((e,t)=>(0,o.upcastType)(e,t))),a=r.map((e=>e.shape)),s=new ei(a);return n.runWebGPUProgram(s,r,i)}};class ni{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){o.util.assert(this.workgroupSize[0]===this.workgroupSize[1],(()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`));const e=this.workgroupSize[0];return`\n      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;\n      ${Pt()} {\n        var x = i32(workgroupId.x) * ${e} + i32(localId.x);\n        var y = i32(workgroupId.y) * ${e} + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ${e} + i32(localId.x);\n        y = i32(workgroupId.x) * ${e} + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}}class ri{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey="transpose_"+t}getUserCode(){const e=Rt(this.outputShape.length),t=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]="resRC."+_t(t);return n.join()}(this.newDim);return`\n      ${Pt("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let resRC = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}}function ii(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{perm:a}=r,s=n,u=i.shape.length,l=new Array(u);for(let e=0;e<l.length;e++)l[e]=i.shape[a[e]];if(n.shouldExecuteOnCPU([i])){const e=s.tensorMap.get(i.dataId).values,t=qr(e,i.shape,i.dtype,a,l);return n.makeTensorInfo(l,i.dtype,t)}if(2===i.shape.length&&o.util.arraysEqual(a,[1,0])){const e=new ni(i.shape,a);return s.runWebGPUProgram(e,[i],i.dtype)}const h=new ri(i.shape,a);return s.runWebGPUProgram(h,[i],i.dtype)}const oi={kernelName:o.Transpose,backendName:"webgpu",kernelFunc:ii};class ai{constructor(e,t){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[n]=o.backend_util.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey="reduce_"+t}getUserCode(){let e="",t="0.0";const n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${n}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       ${Pt("index")} {\n         let outputIndex = index / ${n};\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ${n}) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ${n}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${r}\n        }\n       }\n     `}}function si(e,t,n,r,i){const a=e.shape.length,s=[],u=o.util.parseAxisParam(t,e.shape);let l=u;const h=o.backend_util.getAxesPermutation(l,a);let c=e;null!=h&&(c=ii({inputs:{x:e},attrs:{perm:h},backend:i}),l=o.backend_util.getInnerMostAxes(l.length,a),s.push(c)),o.backend_util.assertAxesAreInnerMostDims(r,l,a);const[d,p]=o.backend_util.computeOutAndReduceShapes(c.shape,l);let f,m=d;if(n&&(m=o.backend_util.expandShapeToKeepDim(d,u)),"max"!==r&&"prod"!==r||!i.shouldExecuteOnCPU([c])){const t=o.util.sizeFromShape(p),n={windowSize:t,inSize:t,batchSize:o.util.sizeFromShape(c.shape)/t,outSize:1},a="mean"===r?"float32":(0,o.sumOutType)(e.dtype),u=[{type:"int32",data:[t]}],l=new ai(n,r),h=i.runWebGPUProgram(l,[c],a,u);s.push(h),f=Cn({inputs:{x:h},attrs:{shape:m},backend:i})}else{const t=i.tensorMap.get(c.dataId).values;switch(r){case"max":const n=Er(t,o.util.sizeFromShape(p),m,e.dtype);f=i.makeTensorInfo(m,e.dtype,n);break;case"prod":const{outVals:a,outShape:s,outDtype:u}=Or(c.shape,c.dtype,t,l);f=i.makeTensorInfo(s,u,a);break;default:throw new Error(r+" CPU implementation is not yet supported.")}}return s.forEach((e=>i.disposeData(e.dataId))),f}const ui={kernelName:o.All,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{keepDims:o,axis:a}=r;return si(i,a,o,"all",n)}},li={kernelName:o.Any,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{keepDims:o,axis:a}=r;return si(i,a,o,"any",n)}};class hi{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op="min"===n?"<":">";const[i,a]=o.backend_util.computeOutAndReduceShapes(e,r);this.outputShape=0===i.length?[1]:i,this.dispatchLayout=Vt(this.outputShape),o.util.sizeFromShape(a)<32||o.util.sizeFromShape(i)>1e3?(this.type="plain",this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Dt(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":"uniforms.xShape."+_t(this.inputShape.length-1),n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${_t(t)},`;return e};return"shared"===this.type?`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      \n      var<workgroup> xBestIndices : array<i32, ${e}>;\n      var<workgroup> xBestValues : array<f32, ${e}>;\n    \n\n      ${Pt("index")} {\n        let outputIndex = index / ${e};\n        let reduceLength = ${t()};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ${e}) {\n          let candidate = getX(${n()} k);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ${e}u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `:`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(${n()} 0);\n          let reduceLength = ${t()};\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(${n()} i);\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      `}}const ci={kernelName:o.ArgMax,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a}=r;let s=o.util.parseAxisParam(a,i.shape);const u=o.backend_util.getAxesPermutation(s,i.shape.length);let l=i;const h=[];null!=u&&(l=ii({inputs:{x:i},backend:n,attrs:{perm:u}}),h.push(l),s=o.backend_util.getInnerMostAxes(s.length,l.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);const c=new hi(l.shape,s[0],"max"),d=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(c,[l],"int32",d);return h.forEach((e=>n.disposeData(e.dataId))),p}},di={kernelName:o.ArgMin,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:a}=r;let s=o.util.parseAxisParam(a,i.shape);const u=o.backend_util.getAxesPermutation(s,i.shape.length);let l=i;const h=[];null!=u&&(l=ii({inputs:{x:i},backend:n,attrs:{perm:u}}),h.push(l),s=o.backend_util.getInnerMostAxes(s.length,l.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);const c=new hi(l.shape,s[0],"min"),d=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(c,[l],"int32",d);return h.forEach((e=>n.disposeData(e.dataId))),p}},pi={kernelName:o.Asin,backendName:"webgpu",kernelFunc:zn({opType:on.ASIN})},fi={kernelName:o.Asinh,backendName:"webgpu",kernelFunc:zn({opType:on.ASINH})},mi={kernelName:o.Atan,backendName:"webgpu",kernelFunc:zn({opType:on.ATAN})},gi={kernelName:o.Atan2,backendName:"webgpu",kernelFunc:On({opType:Xt.ATAN2})},yi={kernelName:o.Atanh,backendName:"webgpu",kernelFunc:zn({opType:on.ATANH})};class bi{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="pool2D_"+t,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`\n      ${Pt("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};\n          var count = 0.0;\n\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, coords[3]);\n              ${e}\n            }\n          }\n\n          setOutputAtIndex(index, ${t});\n        }\n      }\n    `}}class xi{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.stride;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}function vi(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reductionIndices:o,keepDims:a}=r;return si(i,o,a,"max",n)}const wi={kernelName:o.Max,backendName:"webgpu",kernelFunc:vi};function ki(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{keepDims:o,axis:a}=r;return si(i,a,o,"mean",n)}const Si={kernelName:o.Mean,backendName:"webgpu",kernelFunc:ki};function Ii(e,t,n,r){if(1===t.filterWidth&&1===t.filterHeight&&o.util.arraysEqual(t.inShape,t.outShape))return En({inputs:{x:e},backend:r});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){const i=e.shape.length,a=Cn({inputs:{x:e},backend:r,attrs:{shape:[e.shape[i-3]*e.shape[i-2],e.shape[i-1]]}});let s;"avg"===n?s=ki({inputs:{x:a},backend:r,attrs:{axis:0,keepDims:!1}}):(o.util.assert("max"===n,(()=>"Invalid pool type "+n)),s=vi({inputs:{x:a},backend:r,attrs:{reductionIndices:0,keepDims:!1}}));const u=Cn({inputs:{x:s},backend:r,attrs:{shape:t.outShape}});return r.disposeData(a.dataId),r.disposeData(s.dataId),u}let i;const a=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?i=new xi(t):("avg"===n?i=new bi(t,"avg"):(o.util.assert("max"===n,(()=>"Invalid pool type "+n)),i=new bi(t,"max")),a.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),r.runWebGPUProgram(i,[e],e.dtype,a)}const Ci={kernelName:o.AvgPool,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{filterSize:a,strides:s,pad:u,dimRoundingMode:l}=r;return Ii(i,o.backend_util.computePool2DInfo(i.shape,a,s,1,u,l),"avg",n)}};class Ti{constructor(e){this.variableNames=["dy"],this.uniforms="stride : vec2<i32>, pads : vec2<i32>, dilation : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avg_pool2d_backprop"}getUserCode(){return`\n      ${Pt("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilation[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.stride[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilation[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.stride[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}}const Ai={kernelName:o.AvgPoolGrad,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:a}=t,s=a;var u;u=[i,a],Array.isArray(u)||(u=[u]),u.forEach((e=>{null!=e&&o.util.assert("complex64"!==e.dtype,(()=>"avgPoolGrad does not support complex64 tensors in the WebGPU backend."))}));const{filterSize:l,strides:h,pad:c}=r,d=o.backend_util.computePool2DInfo(s.shape,l,h,1,c),p=new Ti(d),f=1/(d.filterHeight*d.filterWidth),m=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[f]}];return n.runWebGPUProgram(p,[i],s.dtype,m)}},Ri={kernelName:o.BatchMatMul,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:o}=t,{transposeA:a,transposeB:s}=r;return An({a:i,b:o,transposeA:a,transposeB:s,backend:n})}};class _i{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Rt(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=Rt(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return Pi.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let n;return n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${Pi[t]} = uniforms.start.${_t(t)} + coords.${Pi[t]};`)),`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          var sourceLoc : ${e};\n          let coords = getCoordsFromIndex(index);\n          ${n.join("\n")}\n          setOutputAtIndex(index, getSource(${t}));\n        }\n      }\n    `}}const Pi=["x","y","z","w","u","v"];function Ei(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{begin:a,size:s}=r,[u,l]=o.slice_util.parseSliceParams(i,a,s);if(o.slice_util.assertParamsValid(i,u,l),n.shouldExecuteOnCPU([i])||"string"===i.dtype){const e=n.tensorMap.get(i.dataId),t=Wr(e.values,u,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,t)}if(0===o.util.sizeFromShape(l))return n.makeTensorInfo(l,i.dtype,[]);const h=new _i(u,l),c=[{type:"int32",data:u}];return n.runWebGPUProgram(h,[i],i.dtype,c)}const $i={kernelName:o.Slice,backendName:"webgpu",kernelFunc:Ei},Fi={kernelName:o.BatchToSpaceND,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:a,crops:s}=r;o.util.assert(i.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const u=a.reduce(((e,t)=>e*t)),l=o.backend_util.getReshaped(i.shape,a,u),h=o.backend_util.getPermuted(l.length,a.length),c=o.backend_util.getReshapedPermuted(i.shape,a,u),d=o.backend_util.getSliceBeginCoords(s,a.length),p=o.backend_util.getSliceSize(c,s,a.length),f=[],m=Cn({inputs:{x:i},backend:n,attrs:{shape:l}}),g=ii({inputs:{x:m},backend:n,attrs:{perm:h}}),y=Cn({inputs:{x:g},backend:n,attrs:{shape:c}}),b=Ei({inputs:{x:y},backend:n,attrs:{begin:d,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeData(e.dataId))),b}},Ni=`\n  fn bincount_write(index: i32, value: f32) {\n    ${At("&result[index]","value","float32")}\n  }\n`;class Mi{constructor(e,t,n=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`\n    ${this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":Ni}\n  ${Pt("index")} {\n    ${1===this.rank?`if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};\n        bincount_write(indexVal, value);\n      }\n    }`:`let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }`}\n  }\n  `}}const zi={kernelName:o.Bincount,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:a}=t,{size:s}=r,u=o.util.sizeFromShape(i.shape),l=o.util.sizeFromShape(a.shape)>0,h=[s],c=a.dtype,d=Sn({backend:n,attrs:{shape:h,value:0,dtype:c}}),p=new Mi([u],l),f=[{type:"int32",data:[s]}],m=l?[i,a]:[i];return n.runWebGPUProgram(p,m,c,f,d)}},Oi=On({opType:Xt.NOT_EQUAL,dtype:"bool",cpuKernelImpl:zr}),Li={kernelName:o.NotEqual,backendName:"webgpu",kernelFunc:Oi};function Bi(e){const{inputs:t,backend:n}=e,{input:r}=t;return En({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.real},backend:n})}const Di={kernelName:o.Real,backendName:"webgpu",kernelFunc:Bi},Ui={kernelName:o.Cast,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:i}=t,{x:a}=n,{dtype:s}=i;if("complex64"===s){if("complex64"===a.dtype)return En({inputs:{x:a},backend:r});const t=(0,o.zeros)(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),i=Fn({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeData(n.dataId),i}if("complex64"===a.dtype){const t=Bi({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:s}});return r.disposeData(t.dataId),n}if(!o.util.hasEncodingLoss(a.dtype,s)){const e=En({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(r.shouldExecuteOnCPU([a])){const e=r.tensorMap.get(a.dataId).values,[t,n,i]=yr(e,a.shape,a.dtype,s);return r.makeTensorInfo(t,n,i)}if("int32"===s)return function(e,t){const n=new Mn(e.shape,on.TO_INT),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===s){const e=r.makeTensorInfo([],"bool",o.util.getTypedArrayFromDType("bool",1)),t=Oi({inputs:{a:a,b:e},backend:r});return r.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}},Wi={kernelName:o.Ceil,backendName:"webgpu",kernelFunc:zn({opType:on.CEIL,cpuKernelImpl:br})};class Vi{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`\n      ${Pt("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    `}}class Gi{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`\n      ${Pt("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    `}}const Hi={kernelName:o.ClipByValue,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{clipValueMin:a,clipValueMax:s}=r;let u;const l=[{type:"float32",data:[a]},{type:"float32",data:[s]}];return u=o.util.sizeFromShape(i.shape)%4==0?new Vi(i.shape):new Gi(i.shape),n.runWebGPUProgram(u,[i],i.dtype,l)}};class ji{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=o.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T"+t)),this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);const t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      ${Pt("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}}function Ki(e){const{inputs:t,backend:n}=e,{input:r}=t;return En({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.imag},backend:n})}const qi={kernelName:o.Imag,backendName:"webgpu",kernelFunc:Ki};function Xi(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Bi({inputs:{input:e},backend:n}))),i=e.map((e=>Ki({inputs:{input:e},backend:n}))),o=Xi(r,t,n),a=Xi(i,t,n),s=Fn({inputs:{real:o,imag:a},backend:n});return r.forEach((e=>n.disposeData(e.dataId))),i.forEach((e=>n.disposeData(e.dataId))),n.disposeData(o.dataId),n.disposeData(a.dataId),s}let i=n.shouldExecuteOnCPU(e);if("string"===r&&(i=!0),i){const i=e.map((e=>{const r=o.util.sizeFromShape(e.shape.slice(t));return Cn({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=i.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=o.backend_util.computeOutShape(i.map((e=>e.shape)),1),u=1===i[0].shape[0],l=xr(a,s,r,u),h=o.backend_util.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(h,r,l);return i.forEach((e=>n.disposeData(e.dataId))),c}const a=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>a){const r=[];for(let i=0;i<e.length;i+=a){const o=e.slice(i,i+a);r.push(Xi(o,t,n))}const i=Xi(r,t,n);for(const e of r)n.disposeData(e.dataId);return i}const{tensors2D:s,outShape:u}=function(e,t,n){const r=o.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Cn({inputs:{x:e},backend:n,attrs:{shape:[o.util.sizeFromShape(e.shape.slice(0,t)),o.util.sizeFromShape(e.shape.slice(t))]}}))),outShape:r}}(e,t,n),l=s.map((e=>e.shape)),h=new ji(l),c=[],d=new Array(l.length-1);if(d.length>0){d[0]=l[0][1],c.push({type:"int32",data:[d[0]]});for(let e=1;e<d.length;e++)d[e]=d[e-1]+l[e][1],c.push({type:"int32",data:[d[e]]})}const p=n.runWebGPUProgram(h,s,s[0].dtype,c);s.forEach((e=>n.disposeData(e.dataId)));const f=Cn({inputs:{x:p},backend:n,attrs:{shape:u}});return n.disposeData(p.dataId),f}function Yi(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r,a=o.util.parseAxisParam(i,t[0].shape)[0],s=t.map((e=>e.shape));o.backend_util.assertParamsConsistent(s,a);const u=o.backend_util.computeOutShape(t.map((e=>e.shape)),a);if(0===o.util.sizeFromShape(u))return n.makeTensorInfo(u,t[0].dtype,[]);const l=t.filter((e=>o.util.sizeFromShape(e.shape)>0));return 1===l.length?En({inputs:{x:l[0]},backend:n}):Xi(l,a,n)}const Qi={kernelName:o.Concat,backendName:"webgpu",kernelFunc:Yi};class Zi{constructor(e,t,n,r,i=!1,o=null,a=!1,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4==0||e.inChannels%3==0)&&this.isChannelsLast||e.outWidth%4==0&&!this.isChannelsLast)&&e.outChannels%4==0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=Ut(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Wt(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!=0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),i&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),a&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=s,this.addBias=i,this.activation=o,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter==0,this.fitBOuter=n%this.tileBOuter==0,this.fitInner=r%this.tileInner==0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?fn(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):gn(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`\n    ${function(e,t,n,r,i=!1,o=null,a=!1,s=4,u=4,l=4){const h=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",c=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",d=e?"uniforms.xShape[1]":"uniforms.xShape[2]",p=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",g=`\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n      let outRow = ${f} / outWidth;\n      let outCol = ${f} % outWidth;\n\n      let WRow = ${m} / (uniforms.filterDims[1] * inChannels);\n      let WCol = ${m} / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n      let xCh = ${m} % inChannels;\n      var resData = ${ln(s)}(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ${d} && xCol >= 0 && xCol < ${p}) {\n        ${h}\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(s)}\n      }\n      return resData;`,y=e?t&&r?`\n      let col = colIn * ${s};\n      ${g}`:`\n      let col = colIn * ${s};\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${g}\n      }\n      return ${ln(s)}(0.0);`:r&&n?`\n      let col = colIn * ${s};\n      ${g}`:`\n      let col = colIn * ${s};\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${g}\n      }\n      return ${ln(s)}(0.0);`,b=""+(e=>{switch(e){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u),x=ln(l),v=ln(e?s:u),w=ln(e?u:s);return`\n      ${hn(o,a,4===l,4)}\n      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${v} {\n        ${e?y:b}\n      }\n\n      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${w} {\n        ${e?b:y}\n      }\n\n      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${x}) {\n        let col = colIn * ${l};\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n        ${c}\n        ${cn(i,o)}\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}\n    ${e}\n  `}}class Ji{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pad: vec2<i32>, stride: vec2<i32>, dilation: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`\n       ${hn(this.activation,this.hasPreluActivationWeights,!1,4)}\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ${cn(this.addBias,this.activation)}\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ${Pt("index")} {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}\n         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}\n         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];\n             let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];\n             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {\n               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     `}}class eo{constructor(e,t){this.variableNames=["x"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey="im2col_"+this.isChannelsLast}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`\n    ${Pt("index")} {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ${n};\n        let col = ${r};\n        let offsetY = (row / uniforms.outWidth) * uniforms.stride[0] - uniforms.pad[0];\n        let xRow = offsetY + uniforms.dilation[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.stride[1] -\n              uniforms.pad[1];\n          let xCol = offsetX + uniforms.dilation[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {\n            value = ${i};\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   `}}function to(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function no({x:e,filter:t,convInfo:n,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:s=0,activation:u=null}){const l=null!=i,h=null!=a,c="channelsLast"===n.dataFormat,d=c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type,p=(0,o.env)().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!p&&(d||1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type)))return function({x:e,filter:t,convInfo:n,backend:r,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:s=null}){const u="channelsLast"===n.dataFormat,l=!u,h=[];let c,d;if(u&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type){const i=n.inHeight*n.inWidth*n.inChannels;c=Cn({inputs:{x:e},backend:r,attrs:{shape:[1,n.batchSize,i]}}),d=Cn({inputs:{x:t},backend:r,attrs:{shape:[1,i,n.outChannels]}})}else c=Cn({inputs:{x:e},backend:r,attrs:{shape:u?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),d=Cn({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(h.push(c),h.push(d),null!=o){const e=to(o.shape,u);null!=e&&(o=Cn({inputs:{x:o},backend:r,attrs:{shape:e}}),h.push(o))}if(null!=i){const e=to(i.shape,u);null!=e&&(i=Cn({inputs:{x:i},backend:r,attrs:{shape:e}}),h.push(i))}const p=An({a:u?c:d,b:u?d:c,transposeA:l,transposeB:!1,backend:r,bias:i,activation:s,preluActivationWeights:o,leakyreluAlpha:a}),f=Cn({inputs:{x:p},backend:r,attrs:{shape:n.outShape}});h.push(p);for(const e of h)r.disposeData(e.dataId);return f}({x:e,filter:t,convInfo:n,backend:r,bias:i,activation:u,preluActivationWeights:a,leakyreluAlpha:s});const f=(0,o.env)().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),m=f>0?f:r.thresholdToIncreaseWorkgroups,g=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if((0,o.env)().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=m)return function({x:e,filter:t,convInfo:n,backend:r,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:s=null}){const{filterWidth:u,filterHeight:l,inChannels:h,strideWidth:c,strideHeight:d,padInfo:p,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:b}=n,x="channelsLast"===b,v=u*l*h,w=m*f,k=x?[n.batchSize,w,v]:[n.batchSize,v,w],S=new eo(k,x),I=[{type:"int32",data:[p.top,p.left]},{type:"int32",data:[d,c]},{type:"int32",data:[y,g]},{type:"int32",data:[f]},{type:"int32",data:[h*u]},{type:"int32",data:[h]}],C=r.runWebGPUProgram(S,[e],e.dtype,I),T=[];T.push(C);const A=Cn({inputs:{x:t},backend:r,attrs:{shape:[1,v,-1]}});if(T.push(A),null!=o){const e=to(o.shape,x);null!=e&&(o=Cn({inputs:{x:o},backend:r,attrs:{shape:e}}),T.push(o))}if(null!=i){const e=to(i.shape,x);null!=e&&(i=Cn({inputs:{x:i},backend:r,attrs:{shape:e}}),T.push(i))}const R=An({a:x?C:A,b:x?A:C,transposeA:!x,transposeB:!1,backend:r,bias:i,activation:s,preluActivationWeights:o,leakyreluAlpha:a}),_=Cn({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});T.push(R);for(const e of T)r.disposeData(e.dataId);return _}({x:e,filter:t,convInfo:n,backend:r,bias:i,preluActivationWeights:a,leakyreluAlpha:s,activation:u});let y;const b=[n.padInfo.top,n.padInfo.left],x=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...b]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(p)y=new Ji(n,l,u,h);else{const e=c?n.outHeight*n.outWidth:n.outChannels,t=c?n.outChannels:n.outHeight*n.outWidth,i=n.filterHeight*n.filterWidth*n.inChannels;x.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[i]});const o=r.adapterInfo.isIntel();y=new Zi(n,e,t,i,l,u,h,o)}const v=[],w=[e,t];l&&(c||1!==i.shape.length||(i=Cn({inputs:{x:i},backend:r,attrs:{shape:[i.shape[0],1,1]}}),v.push(i)),w.push(i)),h&&(c||1!==a.shape.length||(a=Cn({inputs:{x:a},backend:r,attrs:{shape:[a.shape[0],1,1]}}),v.push(a)),w.push(a)),"leakyrelu"===u&&(x.push({type:"float32",data:[s]}),y.uniforms+=" alpha : f32,");const k=r.runWebGPUProgram(y,w,e.dtype,x);for(const e of v)r.disposeData(e.dataId);return k}const ro={kernelName:o.Conv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:a}=t,{strides:s,pad:u,dataFormat:l,dilations:h,dimRoundingMode:c}=n,d=o.backend_util.convertConv2DDataFormat(l);return no({x:i,filter:a,convInfo:o.backend_util.computeConv2DInfo(i.shape,a.shape,s,h,u,c,!1,d),backend:r})}};class io{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey="conv2DDerInput_"+this.isChannelsLast}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`\n    ${Pt("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${n}];\n\n        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              if (${this.isChannelsLast}) {\n                let xValue = getDy(batch, idyR, idyC, d2);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              } else {\n                let xValue = getDy(batch, d2, idyR, idyC);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}class oo{constructor(e){this.variableNames=["x","dy"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey="conv2DDerFilter_"+this.isChannelsLast}getUserCode(){return`\n    ${Pt("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.stride[0] - uniforms.pad[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.stride[1] - uniforms.pad[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (${this.isChannelsLast}) {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}const ao={kernelName:o.Conv2DBackpropFilter,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:a}=t,{strides:s,pad:u,dataFormat:l,dimRoundingMode:h,filterShape:c}=r,d=o.backend_util.convertConv2DDataFormat(l),p=o.backend_util.computeConv2DInfo(i.shape,c,s,1,u,h,!1,d),f=new oo(p),m=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]}];return n.runWebGPUProgram(f,[i,a],i.dtype,m)}};class so{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,o.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4==0&&e.outChannels%4==0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=Ut(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Wt(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.variableTypes=["vec4<f32>","f32"]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?fn(this.elementsPerThread,this.workgroupSize):gn(this.elementsPerThread,this.workgroupSize);return`\n    ${function(e=4){const t=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        \n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ${ln(e)}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ${ln(e)}(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];\n      }\n      return ${ln(e)}(0.0);`;return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${ln(e)} {\n    let col = colIn * ${e};\n    ${t}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${ln(e)} {\n    let col = colIn * ${e};\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(e)}\n    }\n    return ${ln(e)}(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${ln(e)}) {\n    let col = colIn * ${e};\n    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;\n    }\n  }`}(this.isVec4?4:1)}\n    ${e}\n    `}}const uo={kernelName:o.Conv2DBackpropInput,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:a}=t,{inputShape:s,strides:u,pad:l,dataFormat:h,dimRoundingMode:c}=r,d=o.backend_util.convertConv2DDataFormat(h),p=o.backend_util.computeConv2DInfo(s,a.shape,u,1,l,c,!1,d),f=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}];let m;if((0,o.env)().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||p.filterHeight<=2&&p.filterWidth<=2&&p.outChannels<=16&&1===p.inChannels)m=new io(p);else{m=new so(p);const e=p.inHeight*p.inWidth,t=p.inChannels,n=p.filterHeight*p.filterWidth*p.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(m,[i,a],"float32",f)}},lo={kernelName:o.Cos,backendName:"webgpu",kernelFunc:zn({opType:on.COS})},ho={kernelName:o.Cosh,backendName:"webgpu",kernelFunc:zn({opType:on.COSH})};class co{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[i]=t;this.outputShape=[i,n[0],n[1],e],this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,i]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+e],[o,a,s]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+t];return`\n    ${Pt("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${o});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${r};\n        let width_scale = ${a};\n        let in_y = ${i};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${s};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}}const po={kernelName:o.CropAndResize,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:i,boxes:o,boxInd:a}=t,{cropSize:s,method:u,extrapolationValue:l}=r,h=new co(i.shape[3],o.shape,s,u),c=[{type:"float32",data:[l]}];return n.runWebGPUProgram(h,[i,o,a],"float32",c)}};var fo;!function(e){e.Prod="*",e.Sum="+"}(fo||(fo={}));class mo{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===fo.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${go(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let i="",o="";return this.exclusive?(i=this.reverse?"end != "+(r-1):"end != 0",o=this.reverse?"end + 1":"end - 1"):(i=this.reverse?"end + pow2 < "+r:"end >= pow2",o=this.reverse?"end + pow2":"end - pow2"),`\n      ${Pt("index")} {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ${yo(e,"coords",this.op)};\n         var val = ${n};\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (${i}) {\n           let idx = ${o};\n           ${yo(e,"coords",this.op)} = idx;\n           val ${this.op}= getX(${go(e,"coords",this.op)});\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    `}}function go(e,t,n){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function yo(e,t,n){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function bo(e,t,n,r,i,a){const s=t.shape.length,u=o.backend_util.getAxesPermutation([r],s);let l=t;null!=u&&(l=ii({inputs:{x:t},backend:n,attrs:{perm:u}}));const h=o.backend_util.getInnerMostAxes(1,s)[0];if(h!==s-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=`+r);const c=l.shape[h];let d=En({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new mo(e,l.shape,!1,a),i=d,o=[{type:"float32",data:[t]}];d=n.runWebGPUProgram(r,[d],d.dtype,o),n.disposeData(i.dataId)}if(i){const t=new mo(e,l.shape,i,a),r=d,o=[{type:"float32",data:[0]}];d=n.runWebGPUProgram(t,[d],d.dtype,o),n.disposeData(r.dataId)}if(null!=u){const e=ii({inputs:{x:d},backend:n,attrs:{perm:o.backend_util.getUndoAxesPermutation(u)}});return n.disposeData(d.dataId),n.disposeData(l.dataId),e}return d}const xo={kernelName:o.Cumprod,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:o,exclusive:a,reverse:s}=r;return bo(fo.Prod,i,n,o,a,s)}},vo={kernelName:o.Cumsum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:o,exclusive:a,reverse:s}=r;return bo(fo.Sum,i,n,o,a,s)}},wo={kernelName:o.DenseBincount,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:a}=t,{size:s,binaryOutput:u}=r,l=1===i.shape.length,h=o.util.sizeFromShape(a.shape)>0,c=a.dtype,d=l?[i.shape[0]]:[i.shape[0],i.shape[1]],p=Sn({backend:n,attrs:{shape:l?[s]:[i.shape[0],s],value:0,dtype:c}}),f=new Mi(d,h,u),m=[{type:"int32",data:[s]}],g=h?[i,a]:[i];return n.runWebGPUProgram(f,g,c,m,p)}};class ko{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthToSpace_"+t,this.dataFormat=t}getUserCode(){return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const So={kernelName:o.DepthToSpace,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockSize:o,dataFormat:a}=r,s=i.shape[0],u=("NHWC"===a?i.shape[1]:i.shape[2])*o,l=("NHWC"===a?i.shape[2]:i.shape[3])*o,h=("NHWC"===a?i.shape[3]:i.shape[1])/(o*o),c=[{type:"int32",data:[o]}],d=new ko("NHWC"===a?[s,u,l,h]:[s,h,u,l],a);return n.runWebGPUProgram(d,[i],i.dtype,c)}};class Io{constructor(e,t,n,r=!1,i=null,o=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=i,this.hasPreluActivation=o,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`\n      ${hn(this.activation,this.hasPreluActivation,!1,4)}\n\n      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ${Pt()} {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}\n\n        {\n          let wRow = wIndex / ${this.filterWidth};\n          let wCol = wIndex % ${this.filterWidth};\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {\n          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ${cn(this.addBias,this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}class Co{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[4,4,4],this.workPerThread=4,this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1]),o.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`\n      ${hn(this.activation,this.hasPreluActivation,!0,4)}\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ${Pt()} {\n        let batch = i32(globalId.z) / uniforms.outShape[1];\n        let r = i32(globalId.z) % uniforms.outShape[1];\n        let c = i32(globalId.y) * ${this.workPerThread};\n        let d1 = i32(globalId.x) * 4;\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${n}) - uniforms.pad;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ${e}>;\n        var dotProd : array<vec4<f32>, ${this.workPerThread}>;\n        for (var i = 0; i < ${this.workPerThread}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ${e}; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ${this.workPerThread}; i++) {\n                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ${cn(this.addBias,this.activation)}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    `}}class To{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`\n      ${hn(this.activation,this.hasPreluActivation,!1,4)}\n\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;\n          let d2 = coords[${this.isChannelsLast?3:1}];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilation[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilation[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilation[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilation[1];\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilation[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilation[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ${cn(this.addBias,this.activation)}\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}}const Ao={kernelName:o.DepthwiseConv2dNative,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a}=t,{strides:s,pad:u,dataFormat:l,dilations:h,dimRoundingMode:c}=r,d=o.backend_util.convertConv2DDataFormat(l);let p=h;null==p&&(p=[1,1]);const f=o.backend_util.computeConv2DInfo(i.shape,a.shape,s,p,u,c,!0,d),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],g="channelsLast"===f.dataFormat;let y;return!g&&f.inHeight>16&&f.inWidth>16&&1===f.strideHeight&&1===f.strideWidth&&1===f.dilationWidth&&1===f.dilationHeight&&f.inChannels===f.outChannels?y=new Io(f.outShape,f.filterHeight,f.filterWidth):g&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&1===f.dilationHeight&&1===f.dilationWidth&&f.inChannels%4==0?y=new Co(f):(y=new To(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),n.runWebGPUProgram(y,[i,a],i.dtype,m)}};class Ro{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}}const _o={kernelName:o.Diag,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,i=[...r.shape,...r.shape],a=o.util.sizeFromShape(r.shape),s=Cn({inputs:{x:r},backend:n,attrs:{shape:[a]}}),u=new Ro(a),l=n.runWebGPUProgram(u,[s],s.dtype),h=Cn({inputs:{x:l},backend:n,attrs:{shape:i}});return n.disposeData(s.dataId),n.disposeData(l.dataId),h}};class Po{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pad: vec2<i32>, stride: vec2<i32>, dilation: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`\n       ${Pt("index")} {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.stride - uniforms.pad;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilation[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilation[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     `}}const Eo={kernelName:o.Dilation2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a}=t,{strides:s,pad:u,dilations:l}=r,h=o.backend_util.computeDilation2DInfo(i.shape,a.shape,s,u,"NHWC",l),c=[h.padInfo.top,h.padInfo.left],d=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]}],p=new Po(h);return n.runWebGPUProgram(p,[i,a],i.dtype,d)}},$o=On({opType:Xt.MUL,cpuKernelImpl:Nr,supportsComplex:!0}),Fo={kernelName:o.Multiply,backendName:"webgpu",kernelFunc:$o};function No(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:o,keepDims:a}=r;return si(i,o,a,"sum",n)}const Mo={kernelName:o.Sum,backendName:"webgpu",kernelFunc:No},zo={kernelName:o.Einsum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:i}=r,a=t,{allDims:s,summedDims:u,idDims:l}=o.backend_util.decodeEinsumEquation(i,a.length);o.backend_util.checkEinsumDimSizes(s.length,l,a);const{path:h,steps:c}=o.backend_util.getEinsumComputePath(u,l),d=c.length;let p=null,f=s.length;const m=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=o.backend_util.getEinsumPermutation(f,l[t]);let i;o.backend_util.isIdentityPermutation(e)?i=a[t]:(i=ii({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),m.push(i));const s=i.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);o.util.arraysEqual(i.shape,s)||(i=Cn({inputs:{x:i},backend:n,attrs:{shape:s}}),m.push(i)),null===p?p=i:(p=$o({inputs:{a:i,b:p},backend:n}),m.push(p))}e<d-1&&(h[e]>=0&&(p=No({inputs:{x:p},backend:n,attrs:{axis:h[e]-(s.length-f),keepDims:!1}}),m.push(p)),f--)}for(const e of m)e!==p&&n.disposeData(e.dataId);return p}},Oo={kernelName:o.Elu,backendName:"webgpu",kernelFunc:zn({opType:on.ELU})},Lo={kernelName:o.Equal,backendName:"webgpu",kernelFunc:On({opType:Xt.EQUAL,dtype:"bool",cpuKernelImpl:vr})},Bo={kernelName:o.Erf,backendName:"webgpu",kernelFunc:zn({opType:on.ERF})},Do=zn({opType:on.EXP,cpuKernelImpl:wr,dtype:"float32"}),Uo={kernelName:o.Exp,backendName:"webgpu",kernelFunc:Do};function Wo(e){const{inputs:t,attrs:n,backend:r}=e,{dim:i}=n,{input:a}=t,s=a.shape.length,u=a.shape.slice();let l=i;return i<0&&(o.util.assert(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),l=s+i+1),u.splice(l,0,1),Cn({inputs:{x:a},backend:r,attrs:{shape:u}})}const Vo={kernelName:o.ExpandDims,backendName:"webgpu",kernelFunc:Wo},Go={kernelName:o.Expm1,backendName:"webgpu",kernelFunc:zn({opType:on.EXPM1,cpuKernelImpl:kr})};class Ho{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey="fft_"+e}getUserCode(){return`\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ${"real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ${Pt("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  `}}function jo(e,t,n){const r=n.tensorMap.get(e.dataId),i=o.util.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],s=[],u=Cn({inputs:{x:e},backend:n,attrs:{shape:[i/a,a]}});s.push(u);const l=u.shape,h=new Ho("real",l),c=new Ho("imag",l),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],p=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?l[1]:1]}],f=n.runWebGPUProgram(h,d,"float32",p);s.push(f);const m=n.runWebGPUProgram(c,d,"float32",p);s.push(m);const g=Fn({inputs:{real:f,imag:m},backend:n});s.push(g);const y=Cn({inputs:{x:g},backend:n,attrs:{shape:e.shape}});return s.forEach((e=>n.disposeData(e.dataId))),y}const Ko={kernelName:o.FFT,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return jo(r,!1,n)}};class qo{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    `}}const Xo={kernelName:o.FlipLeftRight,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,i=new qo(n.shape);return r.runWebGPUProgram(i,[n],n.dtype)}},Yo={kernelName:o.Floor,backendName:"webgpu",kernelFunc:zn({opType:on.FLOOR,cpuKernelImpl:Sr})},Qo={kernelName:o.FloorDiv,backendName:"webgpu",kernelFunc:On({opType:Xt.INT_DIV,dtype:"int32"})};class Zo{constructor(e,t,n=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey="fromPixels_"+this.importVideo}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};\n      ${Pt("index")} {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ${e};\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}}const Jo={kernelName:o.FromPixels,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:i}=t;const{numChannels:a}=r;if(null==i)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const s="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&i instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&i instanceof OffscreenCanvas,h="undefined"!=typeof ImageBitmap&&i instanceof ImageBitmap,[c,d]=s?[i.videoWidth,i.videoHeight]:[i.width,i.height],p=[d,c,a],f=s||u;if(h||l||f){let e;{if(f){const e=(0,o.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=ea&&e===ta||(ta=e,ea=document.createElement("canvas").getContext("2d",{willReadFrequently:ta})),ea.canvas.width=c,ea.canvas.height=d,ea.drawImage(i,0,0,c,d),i=ea.canvas}const t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,r="rgba8unorm",a=n.textureManager.acquireTexture(p[1],p[0],r,t);n.queue.copyExternalImageToTexture({source:i},{texture:a},[p[1],p[0]]),e={width:c,height:d,format:r,usage:t,texture:a}}const t=o.util.sizeFromShape(p),r=o.util.computeStrides(p),s=new Zo(p,a,!1),u=[{type:"uint32",data:[t]},{type:"uint32",data:[a]},{type:"uint32",data:[...r]}],l=n.makeTensorInfo([d,c],"int32");n.tensorMap.get(l.dataId).resourceInfo=e;const h=n.runWebGPUProgram(s,[l],"int32",u);return n.disposeData(l.dataId),h}const m=i.data;let g=m;if(null!=a&&4!==a){g=new Uint8Array(i.width*i.height*a);const e=m.length;let t=0;for(let n=0;n<e;n++)n%4<a&&(g[t++]=m[n])}const y=n.makeTensorInfo(p,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}};let ea,ta=(0,o.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class na{constructor(e,t,n,r,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],o.backend_util.assertAndGetBroadcastShape(e,t),o.backend_util.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=r&&(o.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset")),null!=i&&(o.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`\n      ${Pt("index")} {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}const ra={kernelName:o.FusedBatchNorm,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r,scale:i,offset:o,mean:a,variance:s}=e,{varianceEpsilon:u}=t,l=n,h=[r,a,s];let c=null;null!=o&&(c=o.shape,h.push(o));let d=null;null!=i&&(d=i.shape,h.push(i));const p=new na(r.shape,a.shape,s.shape,c,d),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(p,h,r.dtype,f)}},ia={kernelName:o.FusedConv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a,bias:s,preluActivationWeights:u}=t,{strides:l,pad:h,dataFormat:c,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,g=o.backend_util.convertConv2DDataFormat(c);return no({x:i,filter:a,convInfo:o.backend_util.computeConv2DInfo(i.shape,a.shape,l,d,h,p,!1,g),backend:n,bias:s,preluActivationWeights:u,leakyreluAlpha:m,activation:f})}},oa={kernelName:o.FusedDepthwiseConv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:a,bias:s,preluActivationWeights:u}=t,{strides:l,pad:h,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=c;null==m&&(m=[1,1]),o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=o.backend_util.computeConv2DInfo(i.shape,a.shape,l,m,h,d,!0),y=[i,a],b=null!=s,x=null!=u;b&&y.push(s),x&&y.push(u);const v=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}];let w;return g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&1===g.dilationHeight&&1===g.dilationWidth&&g.inChannels%4==0?w=new Co(g,b,p,x):(w=new To(g,b,p,x),v.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),"leakyrelu"===p&&(v.push({type:"float32",data:[f]}),w.uniforms+=" alpha : f32,"),n.runWebGPUProgram(w,y,"float32",v)}};class aa{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gathernd_"+e,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Rt(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}const sa={kernelName:o.GatherNd,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:i}=t,a=i.shape,s=a[a.length-1],u=o.util.sizeFromShape(r.shape),[l,h,c,d]=o.backend_util.prepareAndValidate(r,i),p=Cn({inputs:{x:i},backend:n,attrs:{shape:[h,s]}}),f=Cn({inputs:{x:r},backend:n,attrs:{shape:[o.util.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const e=n.readSync(i.dataId),t=n.bufferSync(r),o=Ir(e,t,r.dtype,h,s,c,d,r.shape,u);return n.makeTensorInfo(l,r.dtype,o.values)}const m=new aa(s,[h,c]),g=[{type:"int32",data:[s]},{type:"int32",data:d}],y=n.runWebGPUProgram(m,[f,p],f.dtype,g),b=Cn({inputs:{x:y},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(y.dataId),b}};class ua{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("indexZ"):n.push(""+t[r]);return n.join()}(this.aShape);return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${e}));\n        }\n      }\n    `}}function la(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,indices:a}=t,{axis:s,batchDims:u}=r,l=o.util.parseAxisParam(s,i.shape)[0],h=o.backend_util.segment_util.collectGatherOpShapeInfo(i,a,l,u),c=o.util.sizeFromShape(a.shape),d=[],p=Cn({inputs:{x:i},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=Cn({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,c/h.batchSize]}});d.push(p),d.push(f);const m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize];if(n.shouldExecuteOnCPU([i,a])){const e=n.tensorMap.get(f.dataId).values,t=(0,o.buffer)(f.shape,f.dtype,e),r=n.tensorMap.get(p.dataId).values,i=(0,o.buffer)(p.shape,p.dtype,r),a=Cr(i,t,m);return d.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(h.outputShape,a.dtype,a.values)}const g=new ua(p.shape,m),y=n.runWebGPUProgram(g,[p,f],p.dtype);d.push(y);const b=Cn({inputs:{x:y},backend:n,attrs:{shape:h.outputShape}});return d.forEach((e=>n.disposeData(e.dataId))),b}const ha={kernelName:o.GatherV2,backendName:"webgpu",kernelFunc:la},ca={kernelName:o.Greater,backendName:"webgpu",kernelFunc:On({opType:Xt.GREATER,cpuKernelImpl:Ar,dtype:"bool"})},da={kernelName:o.GreaterEqual,backendName:"webgpu",kernelFunc:On({opType:Xt.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:Tr})},pa={kernelName:o.IFFT,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return jo(r,!0,n)}},fa={kernelName:o.IsFinite,backendName:"webgpu",kernelFunc:zn({opType:on.IS_FINITE,dtype:"bool"})},ma={kernelName:o.IsInf,backendName:"webgpu",kernelFunc:zn({opType:on.IS_INF,dtype:"bool"})},ga={kernelName:o.IsNan,backendName:"webgpu",kernelFunc:zn({opType:on.IS_NAN,dtype:"bool"})},ya={kernelName:o.LeakyRelu,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{alpha:o}=r,a=[{type:"float32",data:[o]}],s=new Mn(i.shape,on.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(s,[i],"float32",a)}},ba={kernelName:o.Less,backendName:"webgpu",kernelFunc:On({opType:Xt.LESS,dtype:"bool",cpuKernelImpl:_r})},xa={kernelName:o.LessEqual,backendName:"webgpu",kernelFunc:On({opType:Xt.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Rr})};class va{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    `}}const wa={kernelName:o.LinSpace,backendName:"webgpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:i,num:o}=n,a=(i-r)/(o-1),s=new va(o),u=[{type:"float32",data:[r]},{type:"float32",data:[a]}];return t.runWebGPUProgram(s,[],"float32",u)}},ka={kernelName:o.Log,backendName:"webgpu",kernelFunc:zn({opType:on.LOG,cpuKernelImpl:Pr})},Sa={kernelName:o.Log1p,backendName:"webgpu",kernelFunc:zn({opType:on.LOG1P})},Ia={kernelName:o.LogicalAnd,backendName:"webgpu",kernelFunc:On({opType:Xt.LOGICAL_AND,dtype:"bool"})},Ca={kernelName:o.LogicalNot,backendName:"webgpu",kernelFunc:zn({opType:on.LOGICAL_NOT})},Ta={kernelName:o.LogicalOr,backendName:"webgpu",kernelFunc:On({opType:Xt.LOGICAL_OR})},Aa="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n";class Ra{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`\n    ${Pt("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ${Aa}\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  `}}class _a{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,o.util.assert(t<=this.maxAllowRadius,(()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`)),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Dt(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`\n    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;\n    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};\n    const maxAllowRadius = ${this.maxAllowRadius};\n\n    ${Pt()} {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ${Aa}\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } `}}const Pa={kernelName:o.LRN,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{depthRadius:o,bias:a,alpha:s,beta:u}=r;let l;l=o>16?new Ra(i.shape):new _a(i.shape,o);const h=[{type:"int32",data:[o]},{type:"float32",data:[a]},{type:"float32",data:[s]},{type:"float32",data:[u]}];return n.runWebGPUProgram(l,[i],i.dtype,h)}},Ea={kernelName:o.Maximum,backendName:"webgpu",kernelFunc:On({opType:Xt.MAX,cpuKernelImpl:$r})},$a={kernelName:o.MaxPool,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{filterSize:a,strides:s,pad:u,dimRoundingMode:l}=r;return Ii(i,o.backend_util.computePool2DInfo(i.shape,a,s,1,u,l),"max",n)}},Fa={kernelName:o.Min,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:o,keepDims:a}=r;return si(i,o,a,"min",n)}},Na={kernelName:o.Minimum,backendName:"webgpu",kernelFunc:On({opType:Xt.MIN,cpuKernelImpl:Fr})};class Ma{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey="mirrorPad_"+n}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),r=1===e?"start":"start[i]",i=1===e?"end":"end[i]",o=1===e?"outC":"outC[i]",a=Rt(e),s=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let start = ${a}(${t});\n          let end = ${a}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${o} < ${r}) {\n              ${o} = ${r} * 2 - ${o} - ${this.offset};\n            } else if(${o} >= ${i}) {\n              ${o} = (${i} - 1) * 2 - ${o} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${s}));\n        }\n      }\n    `}}const za={kernelName:o.MirrorPad,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{paddings:i,mode:o}=t,a=n,s=i.map((e=>({type:"int32",data:[e[0],e[1]]}))),u=new Ma(r.shape,i,o);return a.runWebGPUProgram(u,[r],r.dtype,s)}},Oa={kernelName:o.Mod,backendName:"webgpu",kernelFunc:On({opType:Xt.MOD})},La={kernelName:o.Neg,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.tensorMap.get(r.dataId),[t,i]=Mr(e.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,t)}const i=new Mn(r.shape,on.NEG);return n.runWebGPUProgram(i,[r],r.dtype)}},Ba={kernelName:o.NonMaxSuppressionV3,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:a}=t,{maxOutputSize:s,iouThreshold:u,scoreThreshold:l}=r,h=n.readSync(i.dataId),c=n.readSync(a.dataId),{selectedIndices:d}=o.kernel_impls.nonMaxSuppressionV3Impl(h,c,s,u,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Da={kernelName:o.NonMaxSuppressionV5,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:a}=t,{maxOutputSize:s,iouThreshold:u,scoreThreshold:l,softNmsSigma:h}=r,c=n.readSync(i.dataId),d=n.readSync(a.dataId),p=s,f=u,m=l,g=h,{selectedIndices:y,selectedScores:b}=o.kernel_impls.nonMaxSuppressionV5Impl(c,d,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Ua{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`\n      ${Pt("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    `}}const Wa={kernelName:o.OneHot,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:i}=t,{dtype:a,depth:s,onValue:u,offValue:l}=r,h=o.util.sizeFromShape(i.shape),c=new Ua(h,s),d=Cn({inputs:{x:i},backend:n,attrs:{shape:[h]}}),p=[{type:"float32",data:[u]},{type:"float32",data:[l]}],f=n.runWebGPUProgram(c,[d],a,p);n.disposeData(d.dataId);const m=Cn({inputs:{x:f},backend:n,attrs:{shape:[...i.shape,s]}});return n.disposeData(f.dataId),m}};function Va(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Bi({inputs:{input:r},backend:n}),t=Va({inputs:{x:e},backend:n}),i=Ki({inputs:{input:r},backend:n}),o=Va({inputs:{x:i},backend:n}),a=Fn({inputs:{real:t,imag:o},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),a}return Sn({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Ga={kernelName:o.ZerosLike,backendName:"webgpu",kernelFunc:Va},Ha={kernelName:o.OnesLike,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===i.dtype){const t=Bi({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r}),o=Ki({inputs:{input:i},backend:r}),a=Va({inputs:{x:o},backend:r}),s=Fn({inputs:{real:n,imag:a},backend:r});return r.disposeData(t.dataId),r.disposeData(n.dataId),r.disposeData(o.dataId),r.disposeData(a.dataId),s}return Sn({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:r})}},ja={kernelName:o.Pack,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r;if(1===t.length)return Wo({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const a=t[0].shape,s=t[0].dtype;t.forEach((e=>{o.util.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),o.util.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=Yi({inputs:t.map((e=>{const t=Wo({inputs:{input:e},backend:n,attrs:{dim:i}});return u.push(t),t})),backend:n,attrs:{axis:i}});return u.forEach((e=>n.disposeData(e.dataId))),l}};class Ka{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){const e=this.xShape.length,t=Rt(e),n=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),r=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),i=e>1?`${t}(${n})`:""+n,o=e>1?`${t}(${r})`:""+r,a=e>1?"any(outC < start)":"outC < start",s=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let start = ${i};\n          let end = ${o};\n          let outC = getCoordsFromIndex(index);\n\n          if (${a} || ${s}) {\n            setOutputAtIndex(index, uniforms.constantValue);\n          } else {\n            let coords = outC - start;\n            setOutputAtIndex(index, getX(${u}));\n          }\n        }\n      }\n    `}}const qa=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{paddings:a,constantValue:s}=r;if(a.every((e=>o.util.arraysEqual(e,[0,0]))))return En({inputs:{x:i},backend:n});if(0===o.util.sizeFromShape(i.shape))return Sn({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+i.shape[t]+e[1])),value:s,dtype:i.dtype}});const u=[{type:"float32",data:[s]}];a.map((e=>u.push({type:"int32",data:[e[0],e[1]]})));const l=new Ka(i.shape,a);return n.runWebGPUProgram(l,[i],i.dtype,u)},Xa={kernelName:o.PadV2,backendName:"webgpu",kernelFunc:qa},Ya={kernelName:o.Pow,backendName:"webgpu",kernelFunc:On({opType:Xt.POW})},Qa={kernelName:o.Prelu,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:i}=t,o=new Pn(Xt.PRELU,r.shape,i.shape);return n.runWebGPUProgram(o,[r,i],"float32")}},Za={kernelName:o.Prod,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:o,keepDims:a}=r;return si(i,o,a,"prod",n)}},Ja={kernelName:o.Range,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:i,step:o,dtype:a}=n,s=Lr(r,i,o,a);return t.makeTensorInfo([s.length],a,s)}},es=On({opType:Xt.DIV}),ts={kernelName:o.RealDiv,backendName:"webgpu",kernelFunc:es},ns={kernelName:o.Reciprocal,backendName:"webgpu",kernelFunc:zn({opType:on.RECIPROCAL})},rs={kernelName:o.Relu,backendName:"webgpu",kernelFunc:zn({opType:on.RELU})},is={kernelName:o.Relu6,backendName:"webgpu",kernelFunc:zn({opType:on.RELU6})};class os{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}const as={kernelName:o.ResizeBilinear,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i}=t,{alignCorners:o,size:a,halfPixelCenters:s}=r,[u,l]=a,h=[{type:"float32",data:[o&&u>1?1:0,o&&l>1?1:0]},{type:"float32",data:[s?.5:0]}],c=new os(i.shape,u,l);return n.runWebGPUProgram(c,[i],"float32",h)}};class ss{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey="resizeNearest_"+r}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}const us={kernelName:o.ResizeNearestNeighbor,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i}=t,{alignCorners:o,halfPixelCenters:a,size:s}=r,[u,l]=s,h=[{type:"float32",data:[o&&u>1?1:0,o&&l>1?1:0]},{type:"float32",data:[o?.5:0]}],c=new ss(i.shape,u,l,a);return n.runWebGPUProgram(c,[i],i.dtype,h)}};class ls{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`\n      \n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    \n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    `}}const hs={kernelName:o.Reverse,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{dims:a}=r,s=i.shape.length;if(0===s)return En({inputs:{x:i},backend:n});const u=i.shape,l=[1,1,1,1];u.forEach(((e,t)=>{l[t+4-s]=e}));const h=o.util.parseAxisParam(a,i.shape),c=[0,0,0,0];h.forEach((e=>{c[e+4-s]=1}));const d=[{type:"int32",data:c}],p=Cn({inputs:{x:i},backend:n,attrs:{shape:l}}),f=new ls(l),m=n.runWebGPUProgram(f,[p],p.dtype,d);n.disposeData(p.dataId);const g=Cn({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeData(m.dataId),g}};class cs{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        ${Pt("index")} {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}}const ds={kernelName:o.RotateWithOffset,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:i,fillValue:a,center:s}=t,u=n,l=new cs(r.shape,a),[h,c]=o.backend_util.getImageCenter(s,r.shape[1],r.shape[2]),d=[{type:"float32",data:[h]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(i)]},{type:"float32",data:[Math.cos(i)]}];return"number"==typeof a?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),u.runWebGPUProgram(l,[r],r.dtype,d)}},ps={kernelName:o.Round,backendName:"webgpu",kernelFunc:zn({opType:on.ROUND})},fs={kernelName:o.Rsqrt,backendName:"webgpu",kernelFunc:zn({opType:on.RSQRT,cpuKernelImpl:Br})};class ms{constructor(e,t,n,r,i,o,a,s=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=o,this.type=a,this.sumDupeIndices=s,this.dispatchLayout=Vt(e),this.dispatch=Dt(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${a}_${s}`;const u=Rt(i.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",i="";1===this.dispatchLayout.x.length?(r="flattenedIndex",i="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(r="vec2<i32>(flattenedIndex, coords[1])",i="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");const o=`getUpdates(${Array.from({length:this.updatesRank},((e,t)=>`coords[${t}]`)).join(", ")})`;return`\n    ${i}\n      ${Pt("index")} {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue =\n              ${Ot(this.type,!1)}(${o});\n          let flatIndex = getOutputIndexFromCoords(${r});\n\n          ${this.sumDupeIndices?At("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}\n        }\n      }`}}const gs={kernelName:o.ScatterNd,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:i,updates:a}=t,{shape:s}=r,{sliceRank:u,numUpdates:l,sliceSize:h,strides:c,outputSize:d}=o.backend_util.calculateShapes(a,i,s),p=[d/h,h];if(0===d)return n.makeTensorInfo(s,i.dtype);const f=Cn({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=Cn({inputs:{x:a},backend:n,attrs:{shape:[l,h]}}),g=m.dtype,y=Sn({backend:n,attrs:{shape:p,value:0,dtype:g}}),b=[{type:"int32",data:[u]},{type:"int32",data:c},{type:"int32",data:[o.util.sizeFromShape(m.shape)]}],x=new ms(m.shape,u,f.shape.length,m.shape.length,c,p,g),v=n.runWebGPUProgram(x,[m,f],g,b,y),w=Cn({inputs:{x:v},backend:n,attrs:{shape:s}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(v.dataId),w}};class ys{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey="search_sorted_"+t}getUserCode(){return`\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ${"left"===this.side?"<":"<="} value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    `}}const bs={kernelName:o.SearchSorted,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:i,values:o}=t,{side:a}=r,s=new ys([o.shape[0],o.shape[1]],a),u=[{type:"int32",data:[i.shape[1]]}];return n.runWebGPUProgram(s,[i,o],"int32",u)}};class xs{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],i=[];for(let e=0;e<this.outputShape.length;e++)i.push(""+n[e]),e<this.cRank&&r.push(""+n[e]);e=r.join(),t=i.join()}return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}}const vs={kernelName:o.Select,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:i,e:a}=t,s=new xs(r.shape.length,i.shape,i.shape.length);return n.runWebGPUProgram(s,[r,i,a],(0,o.upcastType)(i.dtype,a.dtype))}},ws={kernelName:o.Selu,backendName:"webgpu",kernelFunc:zn({opType:on.SELU})},ks={kernelName:o.Sigmoid,backendName:"webgpu",kernelFunc:zn({opType:on.SIGMOID})},Ss={kernelName:o.Sign,backendName:"webgpu",kernelFunc:zn({opType:on.SIGN})},Is={kernelName:o.Sin,backendName:"webgpu",kernelFunc:zn({opType:on.SIN})},Cs={kernelName:o.Sinh,backendName:"webgpu",kernelFunc:zn({opType:on.SINH})},Ts=On({opType:Xt.SUB,cpuKernelImpl:Hr,supportsComplex:!0}),As={kernelName:o.Sub,backendName:"webgpu",kernelFunc:Ts},Rs={kernelName:o.Softmax,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:i}=t,{dim:a}=r,s=o.util.parseAxisParam([a],i.shape),u=vi({inputs:{x:i},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),l=o.backend_util.expandShapeToKeepDim(u.shape,s),h=Cn({inputs:{x:u},backend:n,attrs:{shape:l}}),c=Ts({inputs:{a:i,b:h},backend:n}),d=Do({inputs:{x:c},backend:n}),p=No({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:!1}}),f=Cn({inputs:{x:p},backend:n,attrs:{shape:l}}),m=es({inputs:{a:d,b:f},backend:n});return n.disposeData(u.dataId),n.disposeData(h.dataId),n.disposeData(c.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(f.dataId),m}},_s={kernelName:o.Softplus,backendName:"webgpu",kernelFunc:zn({opType:on.SOFTPLUS})},Ps={kernelName:o.SpaceToBatchND,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:a,paddings:s}=r;o.util.assert(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const u=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...s);for(let e=1+a.length;e<i.shape.length;++e)l.push([0,0]);const h=[],c=qa({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),d=o.backend_util.getReshaped(c.shape,a,u,!1),p=o.backend_util.getPermuted(d.length,a.length,!1),f=o.backend_util.getReshapedPermuted(c.shape,a,u,!1),m=Cn({inputs:{x:c},backend:n,attrs:{shape:d}}),g=ii({inputs:{x:m},backend:n,attrs:{perm:p}}),y=Cn({inputs:{x:g},backend:n,attrs:{shape:f}});return h.push(c),h.push(m),h.push(g),h.forEach((e=>n.disposeData(e.dataId))),y}};class Es{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let i=0;i<e;i++)r.push(`(${n[i]} % ${t}aShape[${i}])`);return r.join()}(this.rank,"uniforms.");return`\n      ${Pt("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}}function $s(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reps:a}=r;if(n.shouldExecuteOnCPU([i])||"string"===i.dtype||i.shape.length>=5){const e=n.readSync(i.dataId),t="string"===i.dtype?e.map((e=>o.util.decodeString(e))):e,r=(0,o.buffer)(i.shape,i.dtype,t),s=jr(r,a);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new Es(i.shape,a);return n.runWebGPUProgram(s,[i],i.dtype)}const Fs={kernelName:o.Tile,backendName:"webgpu",kernelFunc:$s},Ns={kernelName:o.SparseToDense,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:i,sparseValues:a,defaultValue:s}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:h,sliceSize:c,strides:d,outputSize:p}=o.backend_util.calculateShapes(a,i,u);if("string"===a.dtype){const e=n.bufferSync(i),t=n.bufferSync(a),r=o.util.decodeString(n.readSync(s.dataId)[0]),f=Dr(e,t,u,p,c,h,l,d,r,!1);return n.makeTensorInfo(u,f.dtype,f.values)}const f=[p/c,c],m=Cn({inputs:{x:i},backend:n,attrs:{shape:[h,l]}}),g=a.shape.length?Cn({inputs:{x:a},backend:n,attrs:{shape:[h,c]}}):En({inputs:{x:a},backend:n}),y=g.dtype,b=n.makeTensorInfo([],y,o.util.makeZerosTypedArray(1,y)),x=Cn({inputs:{x:s},backend:n,attrs:{shape:Array(f.length).fill(1)}}),v=$s({inputs:{x:x},backend:n,attrs:{reps:f}}),w=[{type:"int32",data:[l]},{type:"int32",data:d},{type:"int32",data:[o.util.sizeFromShape([h,c])]}];switch(h){case 0:break;case 1:{const e=new ms([h,c],l,m.shape.length,g.shape.length,d,f,y,!1);n.runWebGPUProgram(e,[g,m],y,w,v)}break;default:{const e=new ms([h,c],l,m.shape.length,b.shape.length,d,f,y,!1);n.runWebGPUProgram(e,[b,m],y,w,v)}{const e=new ms([h,c],l,m.shape.length,g.shape.length,d,f,y);n.runWebGPUProgram(e,[g,m],y,w,v)}}const k=Cn({inputs:{x:v},backend:n,attrs:{shape:u}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(x.dataId),n.disposeData(b.dataId),n.disposeData(v.dataId),k}},Ms={kernelName:o.SplitV,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{numOrSizeSplits:a,axis:s}=r,u=o.util.parseAxisParam(s,i.shape)[0],l=o.backend_util.prepareSplitSize(i,a,u),h=i.shape.length,c=new Array(h).fill(0),d=i.shape.slice();return l.map((e=>{const t=[...d];t[u]=e;const r=Ei({inputs:{x:i},backend:n,attrs:{begin:c,size:t}});return c[u]+=e,r}))}},zs={kernelName:o.Sqrt,backendName:"webgpu",kernelFunc:zn({opType:on.SQRT})},Os={kernelName:o.Square,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t,i=new Mn(n.shape,on.SQUARE);return r.runWebGPUProgram(i,[n],n.dtype)}},Ls={kernelName:o.SquaredDifference,backendName:"webgpu",kernelFunc:On({opType:Xt.SQUARED_DIFFERENCE})},Bs={kernelName:o.Step,backendName:"webgpu",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,i=new Mn(r.shape,on.STEP,"stepAlpha : f32,"),o=[{type:"float32",data:[t.alpha]}];return n.runWebGPUProgram(i,[r],r.dtype,o)}};class Ds{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=Rt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       ${Pt("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}}const Us={kernelName:o.StridedSlice,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{begin:a,end:s,strides:u,beginMask:l,endMask:h,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=o.slice_util.sliceInfo(i.shape,a,s,u,l,h,c,d,p);let k;if(g)k=Cn({inputs:{x:i},backend:n,attrs:{shape:m}});else if(y||b){o.util.assert(i.shape.length>=1,(()=>"Input must have rank at least 1, got: "+i.shape.length));const e=o.slice_util.computeOutShape(x,v,w),t=Ei({inputs:{x:i},backend:n,attrs:{begin:x,size:e}});k=Cn({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeData(t.dataId)}else if(n.shouldExecuteOnCPU([i])){const e=n.readSync(i.dataId),t=(0,o.buffer)(i.shape,i.dtype,e),r=Vr(f,t,w,x);k=n.makeTensorInfo(m,i.dtype,r.values)}else{const e=new Ds(f),t=[{type:"int32",data:x},{type:"int32",data:w}],r=n.runWebGPUProgram(e,[i],i.dtype,t);k=Cn({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}return k}},Ws={kernelName:o.StringNGrams,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:i,nGramWidths:o,leftPad:a,rightPad:s,padWidth:u,preserveShortSequences:l}=r,{data:h,dataSplits:c}=t,d=n.readSync(h.dataId),p=n.readSync(c.dataId),[f,m]=Gr(d,p,i,o,a,s,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(c.shape,"int32",m)]}},Vs={kernelName:o.Tan,backendName:"webgpu",kernelFunc:zn({opType:on.TAN})},Gs={kernelName:o.Tanh,backendName:"webgpu",kernelFunc:zn({opType:on.TANH})};class Hs{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return`\n        ${Pt("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}class js{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`\n        ${Pt("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}}function Ks(e,t){null!==t&&e.disposeData(t.dataId)}function qs(e){let t=1;for(;t<e;)t*=2;return t}const Xs={kernelName:o.TopK,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{k:a,sorted:s}=r,u=i.shape,l=u[u.length-1];if(n.shouldExecuteOnCPU([i])){const e=n.readSync(i.dataId),[t,r]=Kr(e,u,i.dtype,a,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,i.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===l)return[i,Sn({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=o.util.sizeFromShape(u)/l,c=Cn({inputs:{x:i},attrs:{shape:[h,l]},backend:n}),d=qs(a),p=qs(l);let f=null;const m=()=>null===f?[c,c]:[c,f],g=(e,t,r)=>{const i=m(),o=new Hs(r),a=[{type:"int32",data:[l]},{type:"int32",data:[null===f?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],s=f;f=n.runWebGPUProgram(o,i,"int32",a),Ks(n,s)};for(let e=1;e<d;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)g(t,n,[h,p])}for(let e=p;e>d;e/=2){const t=m(),r=new js([h,e/2]),i=[{type:"int32",data:[l]},{type:"int32",data:[null===f?1:0]},{type:"int32",data:[d]}],o=f;f=n.runWebGPUProgram(r,t,"int32",i),Ks(n,o);const a=d/2,s=2*a;for(let e=a;e>=1;e/=2)g(s,e,f.shape)}let y=f;f=Ei({inputs:{x:f},backend:n,attrs:{begin:0,size:[h,a]}}),Ks(n,y);let b=la({inputs:{x:c,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Ks(n,c);const x=u.slice(0,-1);x.push(a),y=f,f=Cn({inputs:{x:f},attrs:{shape:x},backend:n}),Ks(n,y);const v=b;return b=Cn({inputs:{x:b},attrs:{shape:x},backend:n}),Ks(n,v),[b,f]}};class Ys{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ${Pt("index")} {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        `}}const Qs=[Rn,Yr,Qr,Zr,Jr,ti,ui,li,ci,di,pi,fi,mi,gi,yi,Ci,Ai,Ri,Fi,zi,Ui,Wi,Hi,Nn,Qi,ro,ao,uo,lo,ho,po,xo,vo,wo,So,Ao,_o,Eo,zo,Oo,Lo,Bo,Uo,Vo,Go,Ko,In,Xo,Jo,Yo,Qo,ra,ia,oa,sa,ha,ca,da,$n,pa,qi,fa,ma,ga,ya,ba,xa,wa,Sa,ka,Ia,Ca,Ta,Pa,wi,Ea,$a,Si,Fa,Na,za,Oa,Fo,La,Ba,Da,Li,Wa,Ha,ja,Xa,Ya,Qa,Za,Ja,Di,ts,ns,rs,is,Tn,as,us,hs,ds,ps,fs,gs,bs,vs,ws,ks,Ss,Is,Cs,$i,Bs,Us,Ws,Rs,_s,Ps,Ns,Ms,zs,Os,Ls,As,Mo,Vs,Gs,Fs,Xs,{kernelName:o.Transform,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:i,transforms:o}=t,{interpolation:a,fillMode:s,fillValue:u,outputShape:l}=r,[h,c,d,p]=i.shape,[f,m]=null!=l?l:[c,d],g=new Ys([h,f,m,p]),y="nearest"===a?1:2;let b;switch(s){case"constant":default:b=1;break;case"reflect":b=2;break;case"wrap":b=3;break;case"nearest":b=4}const x=[{type:"int32",data:[y]},{type:"int32",data:[b]},{type:"float32",data:[u]}];return n.runWebGPUProgram(g,[i,o],"float32",x)}},oi,{kernelName:o.Unpack,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:i}=t;let{axis:o}=r;o<0&&(o+=i.shape.length);const a=i,s=a.shape.length,u=i.shape[o],l=new Array(s-1);let h=0;for(let e=0;e<s;e++)e!==o&&(l[h++]=a.shape[e]);const c=[],d=new Array(s).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[o]=e;const t=Ei({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=Cn({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,c.push(t)}return c.forEach((e=>n.disposeData(e.dataId))),f}},Ga];for(const e of Qs)(0,o.registerKernel)(e);function Zs(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];switch(t.length){case 0:e="fn main() ";break;case 1:e="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return e}var Js=function(){function e(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=Vt(this.outputShape),this.dispatch=Dt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return e.prototype.getUserCode=function(){return"\n        ".concat(Zs("index")," {\n          if (index < uniforms.size) {\n            let y = B[index * 2];\n            let x = B[index * 2 + 1];\n            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;\n            result[index] = A[outIndex];\n          }\n        }\n        ")},e}();var eu=function(){function e(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,2!==e.length||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=Vt(t),this.dispatch=Dt(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return e.prototype.getUserCode=function(){return"\n    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {\n      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;\n      let outIndexX = outIndexY + uniforms.bShape.z;\n      let outY = i32(B[outIndexY]);\n      let outX = i32(B[outIndexX]);\n      return vec2<i32>(outY, outX);\n    }\n\n    ".concat(Zs("index")," {\n      if (index < uniforms.size) {\n        let indexY = index * ").concat(this.supportedLastDimension,";\n        let indexX = indexY + 1;\n        let heatmapY = A[indexY];\n        let heatmapX = A[indexX];\n        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);\n        result[indexY] = f32(out[0]);\n        result[indexX] = f32(out[1]);\n      }\n    }\n    ")},e}();function tu(e){var t=e.shape,n=t[0],r=t[1],i=t[2];return(0,o.tidy)((function(){var t,a,s=(0,o.reshape)(e,[n*r,i]),u=(0,o.argMax)(s,0),l=(0,o.expandDims)((0,o.div)(u,(0,o.scalar)(r,"int32")),1),h=(0,o.expandDims)((t=u,a=r,(0,o.tidy)((function(){var e=(0,o.div)(t,(0,o.scalar)(a,"int32"));return(0,o.sub)(t,(0,o.mul)(e,(0,o.scalar)(a,"int32")))}))),1);return(0,o.concat)([l,h],1)}))}function nu(e,t,n){return(0,o.tidy)((function(){var r=function(e,t){for(var n=[],r=0;r<p.length;r++){var i=ru(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),a=i.x,s=i.y;n.push(s),n.push(a)}return(0,o.tensor2d)(n,[p.length,2])}(e,n);return(0,o.add)((0,o.cast)((0,o.mul)(e.toTensor(),(0,o.scalar)(t,"int32")),"float32"),r)}))}function ru(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+p.length)}}function iu(e,t,n){return h(this,void 0,void 0,(function(){var r,i,o,a,s,u,l,h,d,f;return c(this,(function(c){switch(c.label){case 0:return r=0,i=tu(e),[4,Promise.all([e.buffer(),t.buffer(),i.buffer()])];case 1:return o=c.sent(),a=o[0],s=o[1],u=o[2],[4,(l=nu(u,n,s)).buffer()];case 2:return h=c.sent(),d=Array.from(function(e,t){for(var n=t.shape[0],r=new Float32Array(n),i=0;i<n;i++){var o=t.get(i,0),a=t.get(i,1);r[i]=e.get(o,a,i)}return r}(a,u)),f=d.map((function(e,t){return r+=e,{y:h.get(t,0),x:h.get(t,1),score:e,name:p[t]}})),i.dispose(),l.dispose(),[2,{keypoints:f,score:r/f.length}]}}))}))}function ou(e,t,n){return h(this,void 0,void 0,(function(){var r,i,a;return c(this,(function(s){return r=tu(e),i=function(e,t,n){return(0,o.tidy)((function(){var r=function(e,t){if((0,o.backend)()instanceof qt)return function(e,t){var n=(0,o.backend)(),r=new eu(e.shape),i=n.runWebGPUProgram(r,[e,t],"float32");return(0,o.engine)().makeTensorFromTensorInfo(i)}(e,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}(e,n);return(0,o.add)((0,o.cast)((0,o.mul)(e,(0,o.scalar)(t,"int32")),"float32"),r)}))}(r,n,t),a=function(e,t){if((0,o.backend)()instanceof qt)return function(e,t){var n=(0,o.backend)(),r=new Js(t.shape),i=n.runWebGPUProgram(r,[e,t],"float32");return(0,o.engine)().makeTensorFromTensorInfo(i)}(e,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}(e,r),[2,[i,a]]}))}))}function au(e,t){return(e-1)%t==0}var su="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",uu="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function lu(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var hu=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;o.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape [".concat(n[1],", ").concat(n[2],"] ")+"must both be equal to or -1"}));var r,i,a=(r=t.inputResolution,i=t.outputStride,{height:lu(r.height,i),width:lu(r.width,i)});!function(e){o.util.assert(Xe.indexOf(e)>=0,(function(){return"outputStride of ".concat(e," is invalid. ")+"It must be either 8 or 16."}))}(t.outputStride),function(e,t){o.util.assert(au(e.height,t),(function(){return"height of ".concat(e.height," is invalid for output stride ")+"".concat(t,".")})),o.util.assert(au(e.width,t),(function(){return"width of ".concat(e.width," is invalid for output stride ")+"".concat(t,".")}))}(a,t.outputStride),this.inputResolution=a,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=Ze),h(this,void 0,void 0,(function(){return c(this,(function(n){return[2,this.estimatePosesGPU(e,t,!1)]}))}))},e.prototype.estimatePosesGPU=function(e,t,n){return void 0===t&&(t=Ze),void 0===n&&(n=!1),h(this,void 0,void 0,(function(){var r,i,a,s,u,h,d,p,f,m,g,y,b,x,v,w,k,S;return c(this,(function(c){switch(c.label){case 0:return r=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1){if((t=l(l({},Je),t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(t.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(t.nmsRadius,"."))}return t}(t),null==e?[2,n?[[],[]]:[]]:(this.maxPoses=r.maxPoses,i=D(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),a=i.imageTensor,s=i.padding,u="ResNet50"===this.architecture?(0,o.add)(a,et):B(a,[-1,1]),h=this.posenetModel.predict(u),"ResNet50"===this.architecture?(d=(0,o.squeeze)(h[2],[0]),p=(0,o.squeeze)(h[3],[0]),f=(0,o.squeeze)(h[0],[0]),m=(0,o.squeeze)(h[1],[0])):(d=(0,o.squeeze)(h[0],[0]),p=(0,o.squeeze)(h[1],[0]),f=(0,o.squeeze)(h[2],[0]),m=(0,o.squeeze)(h[3],[0])),g=(0,o.sigmoid)(p),1!==this.maxPoses?[3,5]:n?[4,ou(g,d,this.outputStride)]:[3,2]);case 1:return b=c.sent(),v=b[0],x=b[1],y=[v,x],[3,4];case 2:return[4,iu(g,d,this.outputStride)];case 3:v=c.sent(),y=[v],c.label=4;case 4:return[3,7];case 5:if(n)throw new Error("GPU renderer only supports single pose!");return[4,bt(g,d,f,m,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:y=c.sent(),c.label=7;case 7:if(n){if(!0===r.flipHorizontal)throw new Error("flipHorizontal is not supported!");w=this.getCanvasInfo(_(e),this.inputResolution,s)}else S=_(e),k=function(e,t,n,r){var i=t.height,o=t.width,a=i/(n.height*(1-r.top-r.bottom)),s=o/(n.width*(1-r.left-r.right)),u=-r.top*n.height,l=-r.left*n.width;if(1===s&&1===a&&0===u&&0===l)return e;for(var h=0,c=e;h<c.length;h++)for(var d=0,p=c[h].keypoints;d<p.length;d++){var f=p[d];f.x=(f.x+l)*s,f.y=(f.y+u)*a}return e}(y,S,this.inputResolution,s),r.flipHorizontal&&(k=function(e,t){for(var n=0,r=e;n<r.length;n++)for(var i=0,o=r[n].keypoints;i<o.length;i++){var a=o[i];a.x=t.width-1-a.x}return e}(k,S));return a.dispose(),u.dispose(),(0,o.dispose)(h),d.dispose(),p.dispose(),f.dispose(),m.dispose(),g.dispose(),[2,n?[y,w]:k]}}))}))},e.prototype.getCanvasInfo=function(e,t,n){var r=e.height,i=e.width,o=r/(t.height*(1-n.top-n.bottom)),a=i/(t.width*(1-n.left-n.right)),s=-n.top*t.height;return[-n.left*t.width,s,a,o,e.width,e.height]},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function cu(e){return void 0===e&&(e=je),h(this,void 0,void 0,(function(){var t,n,r,i,o;return c(this,(function(s){switch(s.label){case 0:return"ResNet50"!==(t=function(e){var t=e||je;if(null==t.architecture&&(t.architecture="MobileNetV1"),Ke.indexOf(t.architecture)<0)throw new Error("Invalid architecture ".concat(t.architecture,". ")+"Should be one of ".concat(Ke));if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),qe[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride ".concat(t.outputStride,". ")+"Should be one of ".concat(qe[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.multiplier&&(t.multiplier=1),Ye[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier ".concat(t.multiplier,". ")+"Should be one of ".concat(Ye[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.quantBytes&&(t.quantBytes=4),Qe.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(t.quantBytes,". ")+"Should be one of ".concat(Qe," ")+"for architecture ".concat(t.architecture,"."));if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(u=t.outputStride,l=t.quantBytes,h="model-stride".concat(u,".json"),n=4===l?uu+"float/"+h:uu+"quant".concat(l,"/")+h,[4,(0,a.loadGraphModel)(t.modelUrl||n)]);case 1:return r=s.sent(),[2,new hu(r,t)];case 2:return i=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},i="model-stride".concat(e,".json");return 4===n?su+"float/".concat(r[t],"/")+i:su+"quant".concat(n,"/").concat(r[t],"/")+i}(t.outputStride,t.multiplier,t.quantBytes),[4,(0,a.loadGraphModel)(t.modelUrl||i)];case 3:return o=s.sent(),[2,new hu(o,t)]}var u,l,h}))}))}function du(e,t){return h(this,void 0,void 0,(function(){var n,r;return c(this,(function(i){switch(e){case _e.PoseNet:return[2,cu(t)];case _e.BlazePose:if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,Ae(t)];if("mediapipe"===n.runtime)return[2,R(t)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(r));case _e.MoveNet:return[2,He(t)];default:throw new Error("".concat(e," is not a supported model name."))}}))}))}var pu={keypointsToNormalizedKeypoints:ee},fu={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}}},{"@mediapipe/pose":"g2BrO","@tensorflow/tfjs-core":"fqGP4","@tensorflow/tfjs-converter":"l98bQ","@parcel/transformer-js/src/esmodule-helpers.js":"14tkN"}],g2BrO:[function(e,t,n){var r=arguments[3];(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var n="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var i=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof r&&r];for(var t=0;t<e.length;++t){var n=e[t];if(n&&n.Math==Math)return n}throw Error("Cannot find global object")}(this);function o(e,t){if(t)e:{var r=i;e=e.split(".");for(var o=0;o<e.length-1;o++){var a=e[o];if(!(a in r))break e;r=r[a]}(t=t(o=r[e=e[e.length-1]]))!=o&&null!=t&&n(r,e,{configurable:!0,writable:!0,value:t})}}function a(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function s(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function u(e){if(!(e instanceof Array)){e=s(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}o("Symbol",(function(e){function t(e,t){this.h=e,n(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var r="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",i=0;return function e(n){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(r+(n||"")+"_"+i++,n)}})),o("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var r="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),o=0;o<r.length;o++){var s=i[r[o]];"function"==typeof s&&"function"!=typeof s.prototype[e]&&n(s.prototype,e,{configurable:!0,writable:!0,value:function(){return a(t(this))}})}return e}));var l="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e};o("Object.assign",(function(e){return e||l}));var h,c="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)h=Object.setPrototypeOf;else{var d;e:{var p={};try{p.__proto__={a:!0},d=p.a;break e}catch(e){}d=!1}h=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=h;function m(e,t){if(e.prototype=c(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n];e.za=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function b(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function x(e,t,n){return e.h=n,{value:t}}function v(e){this.h=new g,this.i=e}function w(e,t,n,r){try{var i=t.call(e.h.j,n);if(!(i instanceof Object))throw new TypeError("Iterator result "+i+" is not an object");if(!i.done)return e.h.m=!1,i;var o=i.value}catch(t){return e.h.j=null,b(e.h,t),k(e)}return e.h.j=null,r.call(e.h,o),k(e)}function k(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(t){e.h.i=void 0,b(e.h,t)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function S(e){this.next=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=k(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.throw,t,e.h.u):(b(e.h,t),t=k(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?w(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),k(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function I(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(r,i){!function e(o){o.done?r(o.value):Promise.resolve(o.value).then(t,n).then(e,i)}(e.next())}))}(new S(new v(e)))}function C(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},o("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.h=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var o=i.setTimeout;n.prototype.j=function(e){o(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.l(e)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(e){return void this.m(e)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;o((function(){if(e.D()){var t=i.console;void 0!==t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=i.CustomEvent,t=i.Event,n=i.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=i.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)a.i(this.h[e]);this.h=null}};var a=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{i(e(t))}catch(e){o(e)}}:t}var i,o,a=new t((function(e,t){i=e,o=t}));return this.T(r(e,i),r(n,o)),a},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(r.i){case 1:e(r.j);break;case 2:t(r.j);break;default:throw Error("Unexpected state: "+r.i)}}var r=this;null==this.h?a.i(n):this.h.push(n),this.u=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var i=s(e),o=i.next();!o.done;o=i.next())r(o.value).T(t,n)}))},t.all=function(e){var n=s(e),i=n.next();return i.done?r([]):new t((function(e,t){function o(t){return function(n){a[t]=n,0==--s&&e(a)}}var a=[],s=0;do{a.push(void 0),s++,r(i.value).T(o(a.length-1),t),i=n.next()}while(!i.done)}))},t})),o("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,r=!1,i={next:function(){if(!r&&n<e.length){var i=n++;return{value:t(i,e[i]),done:!1}}return r=!0,{done:!0,value:void 0}}};return i[Symbol.iterator]=function(){return i},i}(this,(function(e){return e}))}})),o("Array.prototype.fill",(function(e){return e||function(e,t,n){var r=this.length||0;for(0>t&&(t=Math.max(0,r+t)),(null==n||n>r)&&(n=r),0>(n=Number(n))&&(n=Math.max(0,r+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),o("Int8Array.prototype.fill",C),o("Uint8Array.prototype.fill",C),o("Uint8ClampedArray.prototype.fill",C),o("Int16Array.prototype.fill",C),o("Uint16Array.prototype.fill",C),o("Int32Array.prototype.fill",C),o("Uint32Array.prototype.fill",C),o("Float32Array.prototype.fill",C),o("Float64Array.prototype.fill",C),o("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),o("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var i=n[t];if(i===e||Object.is(i,e))return!0}return!1}})),o("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var T=this||self;function A(e,t){e=e.split(".");var n,r=T;e[0]in r||void 0===r.execScript||r.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function R(e){var t;return(t=T.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var _=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,r=Array(n),i="string"==typeof e?e.split(""):e,o=0;o<n;o++)o in i&&(r[o]=t.call(void 0,i[o],o,e));return r},P={},E=null;function $(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),i=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),i=E[n];if(null!=i)return i;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}F();for(var r=0;;){var i=n(-1),o=n(0),a=n(64),s=n(64);if(64===s&&-1===i)break;t(i<<2|o>>4),64!=a&&(t(o<<4&240|a>>2),64!=s&&t(a<<6&192|s))}}(e,(function(e){r[i++]=e})),i!==n?r.subarray(0,i):r}function F(){if(!E){E={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));P[n]=r;for(var i=0;i<r.length;i++){var o=r[i];void 0===E[o]&&(E[o]=i)}}}}var N="undefined"!=typeof Uint8Array,M=!(R("Trident")||R("MSIE"))&&"function"==typeof T.btoa;function z(e){if(!M){var t;void 0===t&&(t=0),F(),t=P[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",i=0,o=0;i<e.length-2;i+=3){var a=e[i],s=e[i+1],u=e[i+2],l=t[a>>2];a=t[(3&a)<<4|s>>4],s=t[(15&s)<<2|u>>6],u=t[63&u],n[o++]=l+a+s+u}switch(l=0,u=r,e.length-i){case 2:u=t[(15&(l=e[i+1]))<<2]||r;case 1:e=e[i],n[o]=t[e>>2]+t[(3&e)<<4|l>>4]+u+r}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var O,L=RegExp("[-_.]","g");function B(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function D(e){if(!M)return $(e);L.test(e)&&(e=e.replace(L,B)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function U(){return O||(O=new Uint8Array(0))}var W={},V="function"==typeof Uint8Array.prototype.slice,G=0,H=0;function j(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=s(X(n,e))).next().value,e=n.next().value,n=t),G=n>>>0,H=e>>>0}var K,q="function"==typeof BigInt;function X(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function Y(e,t){this.i=e>>>0,this.h=t>>>0}function Q(e){if(!e)return K||(K=new Y(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)j(Number(e));else if(q)e=BigInt(e),G=Number(e&BigInt(4294967295))>>>0,H=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);H=G=0;for(var n=e.length,r=t,i=(n-t)%6+t;i<=n;r=i,i+=6)r=Number(e.slice(r,i)),H*=1e6,4294967296<=(G=1e6*G+r)&&(H+=G/4294967296|0,G%=4294967296);t&&(e=(t=s(X(G,H))).next().value,t=t.next().value,G=e,H=t)}return new Y(G,H)}function Z(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function J(){return Error("Failed to read varint, encoding is invalid.")}function ee(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function te(){throw Error("Invalid UTF8")}function ne(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var re,ie,oe,ae=void 0,se="undefined"!=typeof TextDecoder,ue="undefined"!=typeof TextEncoder;function le(e){if(e!==W)throw Error("illegal external caller")}function he(e,t){if(le(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function ce(){return oe||(oe=new he(null,W))}function de(e){le(W);var t=e.V;return null==(t=null==t||N&&null!=t&&t instanceof Uint8Array?t:"string"==typeof t?D(t):null)?t:e.V=t}function pe(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,fe(this,e,t)}function fe(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"==typeof e)return{buffer:D(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===he)return{buffer:de(e)||U(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function me(e,t){if(e.h=t,t>e.j)throw ee(e.j,t)}function ge(e){var t=e.i,n=e.h,r=t[n++],i=127&r;if(128&r&&(i|=(127&(r=t[n++]))<<7,128&r&&(i|=(127&(r=t[n++]))<<14,128&r&&(i|=(127&(r=t[n++]))<<21,128&r&&(i|=(r=t[n++])<<28,128&r&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw J();return me(e,n),i}function ye(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,r=n+t;if(r>e.j)throw ee(t,e.j-n);return e.h=r,n}pe.prototype.reset=function(){this.h=this.l};var be=[];function xe(){this.h=[]}function ve(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function we(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function ke(e,t){if(be.length){var n=be.pop();fe(n,e,t),e=n}else e=new pe(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function Se(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=ge(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw Z(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function Ie(e){switch(e.i){case 0:if(0!=e.i)Ie(e);else e:{for(var t=(e=e.h).h,n=t+10,r=e.i;t<n;)if(0==(128&r[t++])){me(e,t);break e}throw J()}break;case 1:me(e=e.h,e.h+8);break;case 2:2!=e.i?Ie(e):(t=ge(e.h)>>>0,me(e=e.h,e.h+t));break;case 5:me(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!Se(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}Ie(e)}break;default:throw Z(e.i,e.j)}}xe.prototype.length=function(){return this.h.length},xe.prototype.end=function(){var e=this.h;return this.h=[],e},ke.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},ke.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Ce=[];function Te(){this.j=[],this.i=0,this.h=new xe}function Ae(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var Re="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol():void 0;function _e(e,t){return Re?e[Re]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function Pe(e,t){Re?e[Re]&&(e[Re]&=~t):void 0!==e.A&&(e.A&=~t)}function Ee(e){var t;return null==(t=Re?e[Re]:e.A)?0:t}function $e(e,t){Re?e[Re]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function Fe(e){return _e(e,1),e}function Ne(e,t){$e(t,-51&(0|e))}function Me(e,t){$e(t,-41&(18|e))}var ze={};function Oe(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}var Le,Be,De=[];function Ue(e){if(2&Ee(e.o))throw Error("Cannot mutate an immutable Message")}function We(e){var t=e.length;(t=t?e[t-1]:void 0)&&Oe(t)?t.g=1:(t={},e.push((t.g=1,t)))}function Ve(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function Ge(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function He(e,t,n,r){Ue(e),je(e,t,n,r)}function je(e,t,n,r){e.j&&(e.j=void 0),t>=e.i||r?Ve(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function Ke(e,t,n,r){var i=Ge(e,t);Array.isArray(i)||(i=Le);var o=Ee(i);if(1&o||Fe(i),r)2&o||_e(i,2),1&n||Object.freeze(i);else{r=!(2&n);var a=2&o;1&n||!a?r&&16&o&&!a&&Pe(i,16):je(e,t,i=Fe(Array.prototype.slice.call(i)))}return i}function qe(e,t){var n=Ge(e,t),r=null==n?n:"number"==typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=r&&r!==n&&je(e,t,r),r}function Xe(e,t,n,r,i){e.h||(e.h={});var o=e.h[n],a=Ke(e,n,3,i);if(!o){var s=a;o=[];var u=!!(16&Ee(e.o));a=!!(2&Ee(s));var l=s;!i&&a&&(s=Array.prototype.slice.call(s));for(var h=a,c=0;c<s.length;c++){var d=s[c],p=t,f=!1;if(f=void 0!==f&&f,void 0!==(d=Array.isArray(d)?new p(d):f?new p:void 0)){var m=f=Ee(p=d.o);a&&(m|=2),u&&(m|=16),m!=f&&$e(p,m),p=m,h=h||!!(2&p),o.push(d)}}return e.h[n]=o,t=33|(u=Ee(s)),u!=(t=h?-9&t:8|t)&&(h=s,Object.isFrozen(h)&&(h=Array.prototype.slice.call(h)),$e(h,t),s=h),l!==s&&je(e,n,s),(i||r&&a)&&_e(o,2),r&&Object.freeze(o),o}return i||(i=Object.isFrozen(o),r&&!i?Object.freeze(o):!r&&i&&(o=Array.prototype.slice.call(o),e.h[n]=o)),o}function Ye(e,t,n){var r=!!(2&Ee(e.o));if(t=Xe(e,t,n,r,r),e=Ke(e,n,3,r),!(r||8&Ee(e))){for(r=0;r<t.length;r++){if(2&Ee((n=t[r]).o)){var i=ut(n,!1);i.j=n}else i=n;n!==i&&(t[r]=i,e[r]=i.o)}_e(e,8)}return t}function Qe(e,t,n){if(null!=n&&"number"!=typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);He(e,t,n)}function Ze(e,t,n,r,i){Ue(e);var o=Xe(e,n,t,!1,!1);return n=null!=r?r:new n,e=Ke(e,t,2,!1),null!=i?(o.splice(i,0,n),e.splice(i,0,n.o)):(o.push(n),e.push(n.o)),n.C()&&Pe(e,8),n}function Je(e,t){return null==e?t:e}function et(e,t,n){return n=void 0===n?0:n,Je(qe(e,t),n)}function tt(e,t,n,r){if(null!=e){if(Array.isArray(e))e=nt(e,t,n,void 0!==r);else if(Oe(e)){var i,o={};for(i in e)o[i]=tt(e[i],t,n,r);e=o}else e=t(e,r);return e}}function nt(e,t,n,r){var i=Ee(e);r=r?!!(16&i):void 0,e=Array.prototype.slice.call(e);for(var o=0;o<e.length;o++)e[o]=tt(e[o],t,n,r);return n(i,e),e}function rt(e){return e.ja===ze?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(0!=(128&Ee(e)))return We(e=Array.prototype.slice.call(e)),e}else{if(N&&null!=e&&e instanceof Uint8Array)return z(e);if(e instanceof he){var t=e.V;return null==t?"":"string"==typeof t?t:e.V=z(t)}}}return e}(e)}function it(e,t){128&e&&We(t)}function ot(e,t,n){if(n=void 0===n?Me:n,null!=e){if(N&&e instanceof Uint8Array)return e.length?new he(new Uint8Array(e),W):ce();if(Array.isArray(e)){var r=Ee(e);return 2&r?e:!t||32&r||!(16&r||0===r)?(4&(t=Ee(e=nt(e,ot,4&r?Me:n,!0)))&&2&t&&Object.freeze(e),e):($e(e,2|r),e)}return e.ja===ze?st(e):e}}function at(e,t,n,r,i,o,a){if(e=e.h&&e.h[n]){if(2&(r=Ee(e))?r=e:(Me(r,o=_(e,st)),Object.freeze(o),r=o),Ue(t),a=null==r?Le:Fe([]),null!=r){for(o=!!r.length,e=0;e<r.length;e++){var s=r[e];o=o&&!(2&Ee(s.o)),a[e]=s.o}o=1|(o?8:0),((e=Ee(a))&o)!==o&&(Object.isFrozen(a)&&(a=Array.prototype.slice.call(a)),$e(a,e|o)),t.h||(t.h={}),t.h[n]=r}else t.h&&(t.h[n]=void 0);je(t,n,a,i)}else He(t,n,ot(r,o,a),i)}function st(e){return 2&Ee(e.o)||_e((e=ut(e,!0)).o,2),e}function ut(e,t){var n=e.o,r=[];_e(r,16);var i=e.constructor.h;if(i&&r.push(i),i=e.B){r.length=n.length,r.fill(void 0,r.length,n.length);var o={};r[r.length-1]=o}0!=(128&Ee(n))&&We(r),t=t||e.C()?Me:Ne,o=e.constructor,Be=r,r=new o(r),Be=void 0,e.R&&(r.R=e.R.slice()),o=!!(16&Ee(n));for(var a=i?n.length-1:n.length,s=0;s<a;s++)at(e,r,s-e.G,n[s],!1,o,t);if(i)for(var u in i)at(e,r,+u,i[u],!0,o,t);return r}function lt(e,t,n){null==e&&(e=Be),Be=void 0;var r,i=this.constructor.i||0,o=0<i,a=this.constructor.h,s=!1;if(null==e){var u=48,l=!0;o&&(i=0,u|=128),$e(e=a?[a]:[],u)}else{if(!Array.isArray(e))throw Error();if(a&&a!==e[0])throw Error();var h=u=_e(e,0);if((l=0!=(16&h))&&((s=0!=(32&h))||(h|=32)),o){if(128&h)i=0;else if(0<e.length){var c=e[e.length-1];if(Oe(c)&&"g"in c){i=0,h|=128,delete c.g;var d,p=!0;for(d in c){p=!1;break}p&&e.pop()}}}else if(128&h)throw Error();u!==h&&$e(e,h)}if(this.G=(a?0:-1)-i,this.h=void 0,this.o=e,i=(a=this.o.length)-1,a&&Oe(a=this.o[i])?(this.B=a,this.i=i-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,i+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!o&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=l&&!s&&!0,o=this.i,l=0;l<n.length;l++)(s=n[l])<o?(i=e[s+=this.G])?ht(i,t):e[s]=Le:(r||(r=Ve(this)),(i=r[s])?ht(i,t):r[s]=Le)}function ht(e,t){if(Array.isArray(e)){var n=Ee(e),r=1;!t||2&n||(r|=16),(n&r)!==r&&$e(e,n|r)}}function ct(e,t,n){if(n){var r,i={};for(r in n){var o=n[r],a=o.ra;a||(i.J=o.xa||o.oa.W,o.ia?(i.aa=xt(o.ia),a=function(e){return function(t,n,r){return e.J(t,n,r,e.aa)}}(i)):o.ka?(i.Z=vt(o.da.P,o.ka),a=function(e){return function(t,n,r){return e.J(t,n,r,e.Z)}}(i)):a=i.J,o.ra=a),a(t,e,o.da),i={J:i.J,aa:i.aa,Z:i.Z}}}!function(e,t){if(t=t.R){Ae(e,e.h.end());for(var n=0;n<t.length;n++)Ae(e,de(t[n])||U())}}(t,e)}$e(De,23),Le=Object.freeze(De),lt.prototype.toJSON=function(){return nt(this.o,rt,it)},lt.prototype.C=function(){return!!(2&Ee(this.o))},lt.prototype.ja=ze,lt.prototype.toString=function(){return this.o.toString()};var dt=Symbol();function pt(e,t,n){return e[dt]||(e[dt]=function(e,r){return t(e,r,n)})}function ft(e){var t=e[dt];if(!t){var n=$t(e);t=function(e,t){return Ft(e,t,n)},e[dt]=t}return t}function mt(e){var t=function(e){var t=e.ia;return t?ft(t):(t=e.wa)?pt(e.da.P,t,e.ka):void 0}(e),n=e.da,r=e.oa.U;return t?function(e,i){return r(e,i,n,t)}:function(e,t){return r(e,t,n)}}function gt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(At in n||wt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function yt(e,t,n,r,i,o){t.P=e[0];var a=1;if(e.length>a&&"number"!=typeof e[a]){var s=e[a++];n(t,s)}for(;a<e.length;){n=e[a++];for(var u=a+1;u<e.length&&"number"!=typeof e[u];)u++;switch(s=e[a++],u-=a){case 0:r(t,n,s);break;case 1:(u=gt(e,a))?(a++,i(t,n,s,u)):r(t,n,s,e[a++]);break;case 2:i(t,n,s,u=gt(e,u=a++),e[a++]);break;case 3:o(t,n,s,e[a++],e[a++],e[a++]);break;case 4:o(t,n,s,e[a++],e[a++],e[a++],e[a++]);break;default:throw Error("unexpected number of binary field arguments: "+u)}}return t}var bt=Symbol();function xt(e){var t=e[bt];if(!t){var n=Tt(e);t=function(e,t){return Nt(e,t,n)},e[bt]=t}return t}function vt(e,t){var n=e[bt];return n||(n=function(e,n){return ct(e,n,t)},e[bt]=n),n}var wt=Symbol();function kt(e,t){e.push(t)}function St(e,t,n){e.push(t,n.W)}function It(e,t,n,r){var i=xt(r),o=Tt(r).P,a=n.W;e.push(t,(function(e,t,n){return a(e,t,n,o,i)}))}function Ct(e,t,n,r,i,o){var a=vt(r,o),s=n.W;e.push(t,(function(e,t,n){return s(e,t,n,r,a)}))}function Tt(e){var t=e[wt];return t||(t=yt(e,e[wt]=[],kt,St,It,Ct),At in e&&wt in e&&(e.length=0),t)}var At=Symbol();function Rt(e,t){e[0]=t}function _t(e,t,n,r){var i=n.U;e[t]=r?function(e,t,n){return i(e,t,n,r)}:i}function Pt(e,t,n,r,i){var o=n.U,a=ft(r),s=$t(r).P;e[t]=function(e,t,n){return o(e,t,n,s,a,i)}}function Et(e,t,n,r,i,o,a){var s=n.U,u=pt(r,i,o);e[t]=function(e,t,n){return s(e,t,n,r,u,a)}}function $t(e){var t=e[At];return t||(t=yt(e,e[At]={},Rt,_t,Pt,Et),At in e&&wt in e&&(e.length=0),t)}function Ft(e,t,n){for(;Se(t)&&4!=t.i;){var r=t.l,i=n[r];if(!i){var o=n[0];o&&(o=o[r])&&(i=n[r]=mt(o))}if(!i||!i(t,e,r)){r=e,o=(i=t).j,Ie(i);var a=i;if(!a.ca){if(i=a.h.h-o,a.h.h=o,a=a.h,0==i)i=ce();else{if(o=ye(a,i),a.S&&a.m)i=a.i.subarray(o,o+i);else{a=a.i;var s=o;i=s===(i=o+i)?U():V?a.slice(s,i):new Uint8Array(a.subarray(s,i))}i=0==i.length?ce():new he(i,W)}(o=r.R)?o.push(i):r.R=[i]}}}return e}function Nt(e,t,n){for(var r=n.length,i=1==r%2,o=i?1:0;o<r;o+=2)(0,n[o+1])(t,e,n[o]);ct(e,t,i?n[0]:void 0)}function Mt(e,t){return{U:e,W:t}}var zt=Mt((function(e,t,n){if(5!==e.i)return!1;var r=(e=e.h).i,i=e.h,o=r[i],a=r[i+1],s=r[i+2];return r=r[i+3],me(e,e.h+4),e=2*((a=(o<<0|a<<8|s<<16|r<<24)>>>0)>>31)+1,o=a>>>23&255,a&=8388607,He(t,n,255==o?a?NaN:1/0*e:0==o?e*Math.pow(2,-149)*a:e*Math.pow(2,o-150)*(a+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=qe(t,n))){we(e.h,8*n+5),e=e.h;var r=+t;0===r?0<1/r?G=H=0:(H=0,G=2147483648):isNaN(r)?(H=0,G=2147483647):34028234663852886e22<(r=(n=0>r?-2147483648:0)?-r:r)?(H=0,G=(2139095040|n)>>>0):11754943508222875e-54>r?(r=Math.round(r/Math.pow(2,-149)),H=0,G=(n|r)>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,H=0,G=(n|t+127<<23|8388607&r)>>>0),n=G,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),Ot=Mt((function(e,t,n){if(0!==e.i)return!1;var r=e.h,i=0,o=e=0,a=r.i,s=r.h;do{var u=a[s++];i|=(127&u)<<o,o+=7}while(32>o&&128&u);for(32<o&&(e|=(127&u)>>4),o=3;32>o&&128&u;o+=7)e|=(127&(u=a[s++]))<<o;if(me(r,s),!(128>u))throw J();return r=i>>>0,(e=2147483648&(u=e>>>0))&&(u=~u>>>0,0==(r=1+~r>>>0)&&(u=u+1>>>0)),r=4294967296*u+(r>>>0),He(t,n,e?-r:r),!0}),(function(e,t,n){null!=(t=Ge(t,n))&&("string"==typeof t&&Q(t),null!=t&&(we(e.h,8*n),"number"==typeof t?(e=e.h,j(t),ve(e,G,H)):(n=Q(t),ve(e.h,n.i,n.h))))})),Lt=Mt((function(e,t,n){return 0===e.i&&(He(t,n,ge(e.h)),!0)}),(function(e,t,n){if(null!=(t=Ge(t,n))&&null!=t)if(we(e.h,8*n),e=e.h,0<=(n=t))we(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),Bt=Mt((function(e,t,n){if(2!==e.i)return!1;var r=ge(e.h)>>>0,i=ye(e=e.h,r);if(e=e.i,se){var o,a=e;(o=re)||(o=re=new TextDecoder("utf-8",{fatal:!0})),e=i+r,a=0===i&&e===a.length?a:a.subarray(i,e);try{var s=o.decode(a)}catch(e){if(void 0===ae){try{o.decode(new Uint8Array([128]))}catch(e){}try{o.decode(new Uint8Array([97])),ae=!0}catch(e){ae=!1}}throw!ae&&(re=void 0),e}}else{r=(s=i)+r,i=[];for(var u,l,h=null;s<r;)128>(u=e[s++])?i.push(u):224>u?s>=r?te():(l=e[s++],194>u||128!=(192&l)?(s--,te()):i.push((31&u)<<6|63&l)):240>u?s>=r-1?te():128!=(192&(l=e[s++]))||224===u&&160>l||237===u&&160<=l||128!=(192&(a=e[s++]))?(s--,te()):i.push((15&u)<<12|(63&l)<<6|63&a):244>=u?s>=r-2?te():128!=(192&(l=e[s++]))||0!=l-144+(u<<28)>>30||128!=(192&(a=e[s++]))||128!=(192&(o=e[s++]))?(s--,te()):(u=(7&u)<<18|(63&l)<<12|(63&a)<<6|63&o,u-=65536,i.push(55296+(u>>10&1023),56320+(1023&u))):te(),8192<=i.length&&(h=ne(h,i),i.length=0);s=ne(h,i)}return He(t,n,s),!0}),(function(e,t,n){if(null!=(t=Ge(t,n))){var r=!1;if(r=void 0!==r&&r,ue){if(r&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(ie||(ie=new TextEncoder)).encode(t)}else{for(var i=0,o=new Uint8Array(3*t.length),a=0;a<t.length;a++){var s=t.charCodeAt(a);if(128>s)o[i++]=s;else{if(2048>s)o[i++]=s>>6|192;else{if(55296<=s&&57343>=s){if(56319>=s&&a<t.length){var u=t.charCodeAt(++a);if(56320<=u&&57343>=u){s=1024*(s-55296)+u-56320+65536,o[i++]=s>>18|240,o[i++]=s>>12&63|128,o[i++]=s>>6&63|128,o[i++]=63&s|128;continue}a--}if(r)throw Error("Found an unpaired surrogate");s=65533}o[i++]=s>>12|224,o[i++]=s>>6&63|128}o[i++]=63&s|128}}t=i===o.length?o:o.subarray(0,i)}we(e.h,8*n+2),we(e.h,t.length),Ae(e,e.h.end()),Ae(e,t)}})),Dt=Mt((function(e,t,n,r,i){if(2!==e.i)return!1;t=Ze(t,n,r),n=e.h.j,r=ge(e.h)>>>0;var o=e.h.h+r,a=o-n;if(0>=a&&(e.h.j=o,i(t,e,void 0,void 0,void 0),a=o-e.h.h),a)throw Error("Message parsing ended unexpectedly. Expected to read "+r+" bytes, instead read "+(r-a)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=o,e.h.j=n,!0}),(function(e,t,n,r,i){if(null!=(t=Ye(t,r,n)))for(r=0;r<t.length;r++){var o=e;we(o.h,8*n+2);var a=o.h.end();Ae(o,a),a.push(o.i),o=a,i(t[r],e),a=e;var s=o.pop();for(s=a.i+a.h.length()-s;127<s;)o.push(127&s|128),s>>>=7,a.i++;o.push(s),a.i++}}));function Ut(e){return function(t,n){e:{if(Ce.length){var r=Ce.pop();r.setOptions(n),fe(r.h,t,n),t=r}else t=new ke(t,n);try{var i=$t(e),o=Ft(new i.P,t,i);break e}finally{(i=t.h).i=null,i.m=!1,i.l=0,i.j=0,i.h=0,i.S=!1,t.l=-1,t.i=-1,100>Ce.length&&Ce.push(t)}o=void 0}return o}}function Wt(e){return function(){var t=new Te;Nt(this,t,Tt(e)),Ae(t,t.h.end());for(var n=new Uint8Array(t.i),r=t.j,i=r.length,o=0,a=0;a<i;a++){var s=r[a];n.set(s,o),o+=s.length}return t.j=[n],n}}function Vt(e){lt.call(this,e)}m(Vt,lt);var Gt=[Vt,1,Lt,2,zt,3,Bt,4,Bt];function Ht(e){lt.call(this,e,-1,jt)}Vt.prototype.l=Wt(Gt),m(Ht,lt),Ht.prototype.addClassification=function(e,t){return Ze(this,1,Vt,e,t),this};var jt=[1],Kt=Ut([Ht,1,Dt,Gt]);function qt(e){lt.call(this,e)}m(qt,lt);var Xt=[qt,1,zt,2,zt,3,zt,4,zt,5,zt];function Yt(e){lt.call(this,e,-1,Qt)}qt.prototype.l=Wt(Xt),m(Yt,lt);var Qt=[1],Zt=Ut([Yt,1,Dt,Xt]);function Jt(e){lt.call(this,e)}m(Jt,lt);var en=[Jt,1,zt,2,zt,3,zt,4,zt,5,zt,6,Ot],tn=Ut(en);function nn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function rn(e){return Ye(e,Vt,1).map((function(e){var t=Ge(e,1);return{index:null==t?0:t,qa:et(e,2),label:null!=Ge(e,3)?Je(Ge(e,3),""):void 0,displayName:null!=Ge(e,4)?Je(Ge(e,4),""):void 0}}))}function on(e){return{x:et(e,1),y:et(e,2),z:et(e,3),visibility:null!=qe(e,4)?et(e,4):void 0}}function an(e){return Ye(Zt(e),qt,1).map(on)}function sn(e,t){this.i=e,this.h=t,this.m=0}function un(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var r=nn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),i=nn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),o=n.createProgram();if(n.attachShader(o,r),n.attachShader(o,i),n.linkProgram(o),!n.getProgramParameter(o,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(o));r=e.s=o,n.useProgram(r),i=n.getUniformLocation(r,"sampler0"),e.l={O:n.getAttribLocation(r,"aVertex"),N:n.getAttribLocation(r,"aTex"),ya:i},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(i,0)}r=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(r.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(r.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(r.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.O),n.disableVertexAttribArray(r.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"==typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function ln(e){this.h=e}Jt.prototype.l=Wt(en);var hn=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function cn(e,t){return t+e}function dn(e,t){window[e]=t}function pn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||cn,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=s(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.l[n]="function"==typeof r?r():r)}}function fn(e){var t,n,r,i,o,a,s,l,h,c,d;return I((function(p){switch(p.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"==typeof e.h.files?e.h.files(e.l):e.h.files,x(p,I((function(e){switch(e.h){case 1:return e.s=2,x(e,WebAssembly.instantiate(hn),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):p.return();case 2:if(n=p.i,"object"==typeof window)return dn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),dn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),a=t.filter((function(e){return void 0!==e.data})),s=t.filter((function(e){return void 0===e.data})),l=Promise.all(a.map((function(t){var n=mn(e,t.url);if(void 0!==t.path){var r=t.path;n=n.then((function(t){return e.overrideFile(r,t),Promise.resolve(t)}))}return n}))),h=Promise.all(s.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,r;return I((function(i){if(1==i.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,r=e,x(i,t(n),2);r.i=i.i,i.h=0}))})),c=I((function(t){return e.h.graph&&e.h.graph.url?t=x(t,mn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),x(p,Promise.all([h,l,c]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return r=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,u(r)),i=e,x(p,createMediapipeSolutionsWasm(Module),6);case 6:i.i=p.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,o=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,va:"undefined"!=typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(o),p.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(d=e.m.getContext("webgl2",{}))&&!(d=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),p.return();e.K=d,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,p.h=0}}))}function mn(e,t){var n,r;return I((function(i){return t in e.L?i.return(e.L[t]):(n=e.locateFile(t,""),r=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=r,i.return(r))}))}function gn(e,t,n){var r,i,o,a,u,l,h,c,d,p,f,m,g,y;return I((function(b){switch(b.h){case 1:if(!n)return b.return(t);for(r={},i=0,o=s(Object.keys(n)),a=o.next();!a.done;a=o.next())u=a.value,"string"!=typeof(l=n[u])&&"texture"===l.type&&void 0!==t[l.stream]&&++i;1<i&&(e.M=!1),h=s(Object.keys(n)),a=h.next();case 2:if(a.done){b.h=4;break}if(c=a.value,"string"==typeof(d=n[c]))return g=r,y=c,x(b,function(e,t,n){var r;return I((function(i){return"number"==typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?i.return(n):n instanceof e.i.Texture2dDataOut?((r=e.v[t])||(r=new sn(e.i,e.K),e.v[t]=r),i.return(un(r,n,e.M))):i.return(void 0)}))}(e,c,t[d]),14);if(p=t[d.stream],"detection_list"===d.type){if(p){for(var v=p.getRectList(),w=p.getLandmarksList(),k=p.getClassificationsList(),S=[],C=0;C<v.size();++C){var T=tn(v.get(C)),A=void 0;A=void 0===A?0:A,T={la:{sa:et(T,1),ta:et(T,2),height:et(T,3),width:et(T,4),rotation:et(T,5,0),pa:Je(Ge(T,6),A)},ea:an(w.get(C)),ba:rn(Kt(k.get(C)))},S.push(T)}v=S}else v=[];r[c]=v,b.h=7;break}if("proto_list"===d.type){if(p){for(v=Array(p.size()),w=0;w<p.size();w++)v[w]=p.get(w);p.delete()}else v=[];r[c]=v,b.h=7;break}if(void 0===p){b.h=3;break}if("float_list"===d.type){r[c]=p,b.h=7;break}if("proto"===d.type){r[c]=p,b.h=7;break}if("texture"!==d.type)throw Error("Unknown output config type: '"+d.type+"'");return(f=e.v[c])||(f=new sn(e.i,e.K),e.v[c]=f),x(b,un(f,p,e.M),13);case 13:m=b.i,r[c]=m;case 7:d.transform&&r[c]&&(r[c]=d.transform(r[c])),b.h=3;break;case 14:g[y]=b.i;case 3:a=h.next(),b.h=2;break;case 4:return b.return(r)}}))}function yn(e,t){for(var n=t.name||"$",r=[].concat(u(t.wants)),i=new e.i.StringList,o=s(t.wants),a=o.next();!a.done;a=o.next())i.push_back(a.value);o=e.i.PacketListener.implement({onResults:function(i){for(var o={},a=0;a<t.wants.length;++a)o[r[a]]=i.get(a);var s=e.listeners[n];s&&(e.I=gn(e,o,t.outs).then((function(n){n=s(n);for(var i=0;i<t.wants.length;++i){var a=o[r[i]];"object"==typeof a&&a.hasOwnProperty&&a.hasOwnProperty("delete")&&a.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(i,o),i.delete()}function bn(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function xn(e){var t=this;e=e||{},this.h=new pn({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:bn(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:an},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:an},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,r,i;return I((function(o){return 1==o.h?(n=bn(e),r="third_party/mediapipe/modules/pose_landmark/"+n,x(o,mn(t.h,n),2)):(i=o.i,t.h.overrideFile(r,i),o.return(!0))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=pn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return I((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var r=[],i=[],o={},a=s(Object.keys(e)),u=a.next();!u.done;o={X:o.X,Y:o.Y},u=a.next())if(!((u=u.value)in this.l)||this.l[u]!==e[u]){this.l[u]=e[u];var l=t[u];void 0!==l&&(l.onChange&&(o.X=l.onChange,o.Y=e[u],r.push(function(e){return function(){return I((function(t){if(1==t.h)return x(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(o))),l.graphOptionXref&&(u=Object.assign({},{calculatorName:"",calculatorIndex:0},l.graphOptionXref,{valueNumber:1===l.type?e[u]:0,valueBoolean:0===l.type&&e[u],valueString:2===l.type?e[u]:""}),i.push(u)))}0===r.length&&0===i.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(i),this.F=(void 0===this.F?[]:this.F).concat(r))}},e.initialize=function(){var e=this;return I((function(t){return 1==t.h?x(t,fn(e),2):3!=t.h?x(t,function(e){var t,n,r,i,o,a,u,l;return I((function(h){if(1==h.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?h.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,x(h,mn(e,e.h.graph.url),3)):void(h.h=2));for(2!=h.h&&(t=h.i,e.j.loadGraph(t)),n=s(Object.keys(e.D)),r=n.next();!r.done;r=n.next())i=r.value,e.j.overrideFile(i,e.D[i]);if(e.D={},e.h.listeners)for(o=s(e.h.listeners),a=o.next();!a.done;a=o.next())u=a.value,yn(e,u);l=e.l,e.l={},e.setOptions(l),h.h=0}))}(e),3):x(t,function(e){var t,n,r,i,o,a;return I((function(u){switch(u.h){case 1:if(!e.u)return u.return();if(!e.F){u.h=2;break}t=s(e.F),n=t.next();case 3:if(n.done){u.h=5;break}return x(u,(0,n.value)(),4);case 4:n=t.next(),u.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(r=new e.i.GraphOptionChangeRequestList,i=s(e.H),o=i.next();!o.done;o=i.next())a=o.value,r.push_back(a);e.j.changeOptions(r),r.delete(),e.H=void 0}e.u=!1,u.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,r,i,o,a,u,l,h,c,d=this;return I((function(p){switch(p.h){case 1:return d.h.inputs?(n=1e3*(null==t?performance.now():t),x(p,d.I,2)):p.return();case 2:return x(p,d.initialize(),3);case 3:for(r=new d.i.PacketDataList,i=s(Object.keys(e)),o=i.next();!o.done;o=i.next())if(a=o.value,u=d.h.inputs[a]){e:{var f=e[a];switch(u.type){case"video":var m=d.s[u.stream];if(m||(m=new sn(d.i,d.K),d.s[u.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!=typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!=typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=d.s[u.stream])||(m=new ln(d.i),d.s[u.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var b=m.data,v=b.setBoundingBox,w=y,k=g.la,S=new Jt;if(Qe(S,1,k.sa),Qe(S,2,k.ta),Qe(S,3,k.height),Qe(S,4,k.width),Qe(S,5,k.rotation),He(S,6,k.pa),k=S.l(),v.call(b,w,k),g.ea)for(b=0;b<g.ea.length;++b){S=g.ea[b],w=(v=m.data).addNormalizedLandmark,k=y,S=Object.assign({},S,{visibility:S.visibility?S.visibility:0});var I=new qt;Qe(I,1,S.x),Qe(I,2,S.y),Qe(I,3,S.z),S.visibility&&Qe(I,4,S.visibility),S=I.l(),w.call(v,k,S)}if(g.ba)for(b=0;b<g.ba.length;++b)w=(v=m.data).addClassification,k=y,S=g.ba[b],Qe(I=new Vt,2,S.qa),S.index&&He(I,1,S.index),S.label&&He(I,3,S.label),S.displayName&&He(I,4,S.displayName),S=I.l(),w.call(v,k,S)}m=m.data;break e;default:m={}}}switch(l=m,h=u.stream,u.type){case"video":r.pushTexture2d(Object.assign({},l,{stream:h,timestamp:n}));break;case"detections":(c=l).stream=h,c.timestamp=n,r.pushDetectionList(c);break;default:throw Error("Unknown input config type: '"+u.type+"'")}}return d.j.send(r),x(p,d.I,4);case 4:r.delete(),p.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},A("Solution",pn),A("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=xn.prototype).reset=function(){this.h.reset()},e.close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return I((function(t){return x(t,e.h.initialize(),0)}))},e.send=function(e,t){var n=this;return I((function(r){return x(r,n.h.send(e,t),0)}))},e.setOptions=function(e){this.h.setOptions(e)},A("Pose",xn),A("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),A("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),A("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),A("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),A("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),A("VERSION","0.5.1675469404")}).call(this)},{}]},[],0,"parcelRequireaaed");