var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};const t=(e,t)=>{let n;return(...r)=>(clearTimeout(n),n=setTimeout(()=>e(...r),t),n)};var n;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{decComplexRef(e){}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}numDataIds(){return a("numDataIds")}disposeData(e){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return a("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:o}){return a("fusedBatchMatMul")}slice(e,t,n){return a("slice")}stridedSlice(e,t,n,r){return a("stridedSlice")}unstack(e,t){return a("unstack")}reverse(e,t){return a("reverse")}concat(e,t){return a("concat")}neg(e){return a("neg")}add(e,t){return a("add")}addN(e){return a("addN")}subtract(e,t){return a("subtract")}multiply(e,t){return a("multiply")}realDivide(e,t){return a("realDivide")}floorDiv(e,t){return a("floorDiv")}sum(e,t){return a("sum")}prod(e,t){return a("prod")}unsortedSegmentSum(e,t,n){return a("unsortedSegmentSum")}argMin(e,t){return a("argMin")}argMax(e,t){return a("argMax")}equal(e,t){return a("equal")}notEqual(e,t){return a("notEqual")}less(e,t){return a("less")}lessEqual(e,t){return a("lessEqual")}greater(e,t){return a("greater")}greaterEqual(e,t){return a("greaterEqual")}logicalNot(e){return a("logicalNot")}logicalAnd(e,t){return a("logicalAnd")}logicalOr(e,t){return a("logicalOr")}where(e){return a("where")}select(e,t,n){return a("select")}topk(e,t,n){return a("topk")}min(e,t){return a("min")}minimum(e,t){return a("minimum")}mod(e,t){return a("mod")}max(e,t){return a("max")}maximum(e,t){return a("maximum")}all(e,t){return a("all")}any(e,t){return a("any")}squaredDifference(e,t){return a("squaredDifference")}ceil(e){return a("ceil")}floor(e){return a("floor")}round(e){return a("round")}sign(e){return a("sign")}isNaN(e){return a("isNaN")}isInf(e){return a("isInf")}isFinite(e){return a("isFinite")}pow(e,t){return a("pow")}exp(e){return a("exp")}expm1(e){return a("expm1")}softmax(e,t){return a("softmax")}log(e){return a("log")}log1p(e){return a("log1p")}sqrt(e){return a("sqrt")}rsqrt(e){return a("rsqrt")}square(e){return a("square")}reciprocal(e){return a("reciprocal")}relu(e){return a("relu")}relu6(e){return a("relu6")}prelu(e,t){return a("prelu")}elu(e){return a("elu")}eluDer(e,t){return a("eluDer")}selu(e){return a("selu")}int(e){return a("int")}clip(e,t,n){return a("clip")}abs(e){return a("abs")}complexAbs(e){return a("complexAbs")}sigmoid(e){return a("sigmoid")}softplus(e){return a("softplus")}sin(e){return a("sin")}cos(e){return a("cos")}tan(e){return a("tan")}asin(e){return a("asin")}acos(e){return a("acos")}atan(e){return a("atan")}atan2(e,t){return a("atan2")}sinh(e){return a("sinh")}cosh(e){return a("cosh")}tanh(e){return a("tanh")}asinh(e){return a("asinh")}acosh(e){return a("acosh")}atanh(e){return a("atanh")}erf(e){return a("erf")}step(e,t){return a("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return a("fusedConv2d")}conv2d(e,t,n){return a("conv2d")}conv2dDerInput(e,t,n){return a("conv2dDerInput")}conv2dDerFilter(e,t,n){return a("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){return a("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return a("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return a("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return a("depthwiseConv2DDerFilter")}conv3d(e,t,n){return a("conv3d")}conv3dDerInput(e,t,n){return a("conv3dDerInput")}conv3dDerFilter(e,t,n){return a("conv3dDerFilter")}maxPool(e,t){return a("maxPool")}maxPoolBackprop(e,t,n,r){return a("maxPoolBackprop")}avgPool(e,t){return a("avgPool")}avgPoolBackprop(e,t,n){return a("avgPoolBackprop")}avgPool3d(e,t){return a("avgPool3d")}avgPool3dBackprop(e,t,n){return a("avgPool3dBackprop")}maxPool3d(e,t){return a("maxPool3d")}maxPool3dBackprop(e,t,n,r){return a("maxPool3dBackprop")}reshape(e,t){return a("reshape")}cast(e,t){return a("cast")}tile(e,t){return a("tile")}pad(e,t,n){return a("pad")}transpose(e,t){return a("transpose")}gather(e,t,n,r=0){return a("gather")}gatherND(e,t){return a("gatherND")}scatterND(e,t,n){return a("scatterND")}batchToSpaceND(e,t,n){return a("batchToSpaceND")}spaceToBatchND(e,t,n){return a("spaceToBatchND")}resizeBilinear(e,t,n,r,s){return a("resizeBilinear")}resizeBilinearBackprop(e,t,n){return a("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r,s){return a("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return a("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,s,i){return a("batchNorm")}localResponseNormalization4D(e,t,n,r,s){return a("localResponseNormalization4D")}LRNGrad(e,t,n,r,s,i,o){return a("LRNGrad")}multinomial(e,t,n,r){return a("multinomial")}oneHot(e,t,n,r){return a("oneHot")}cumsum(e,t,n,r){return a("cumsum")}nonMaxSuppression(e,t,n,r,s){return a("nonMaxSuppression")}fft(e){return a("fft")}ifft(e){return a("ifft")}complex(e,t){return a("complex")}real(e){return a("real")}imag(e){return a("imag")}cropAndResize(e,t,n,r,s,i){return a("cropAndResize")}depthToSpace(e,t,n){return a("depthToSpace")}split(e,t,n){return a("split")}sparseToDense(e,t,n,r){return a("sparseToDense")}diag(e){return a("diag")}fill(e,t,n){return a("fill")}onesLike(e){return a("onesLike")}zerosLike(e){return a("zerosLike")}linspace(e,t,n){return a("linspace")}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function i(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function o(e,t,n){return Math.max(e,Math.min(t,n))}function u(e){return e%2==0?e:e+1}function l(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function c(e,t,n=""){l(f(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function h(e){l(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function p(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||S(e)&&!n)for(let r=0;r<e.length;++r)p(e[r],t,n);else t.push(e);return t}function d(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function f(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function m(e){return e%1==0}function g(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function y(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function b(e,t=(e=>0),n){return new Promise((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()})}function x(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function v(e,t){const n=t.length;return l((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),l(e.every(e=>m(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function w(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:v(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function k(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function I(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function N(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function S(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function C(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function E(e){return"string"==typeof e||e instanceof String}function T(e){return"number"==typeof e}function _(e){return Array.isArray(e)?_(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":T(e)?"float32":E(e)?"string":"boolean"==typeof e?"bool":"float32"}function A(e){return!!(e&&e.constructor&&e.call&&e.apply)}function R(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function $(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function F(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return function e(t,n,r){const s=new Array;if(1===n.length){const e=n[0];for(let n=0;n<e;n++)s[n]=r[t+n]}else{const a=n[0],i=n.slice(1),o=i.reduce((e,t)=>e*t);for(let n=0;n<a;n++)s[n]=e(t+n*o,i,r)}return s}(0,e,t)}function D(e,t){const n=M(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function M(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function O(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return F(e,new Float32Array(n));if("int32"===t)return F(e,new Int32Array(n));if("bool"===t)return F(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function L(e){e.forEach(t=>{l(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function B(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function P(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function z(e){return e&&e.then&&"function"==typeof e.then}class V{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(z(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function W(){return U}let U=null;var G,H,j,q,K,X,Z,Y,Q=!1;function J(){throw new Error("setTimeout has not been defined")}function ee(){throw new Error("clearTimeout has not been defined")}function te(e){if(j===setTimeout)return setTimeout(e,0);if((j===J||!j)&&setTimeout)return j=setTimeout,setTimeout(e,0);try{return j(e,0)}catch(t){try{return j.call(null,e,0)}catch(t){return j.call(this,e,0)}}}function ne(){X&&Z&&(X=!1,Z.length?K=Z.concat(K):Y=-1,K.length&&re())}function re(){if(!X){var e=te(ne);X=!0;for(var t=K.length;t;){for(Z=K,K=[];++Y<t;)Z&&Z[Y].run();Y=-1,t=K.length}Z=null,X=!1,function(e){if(q===clearTimeout)return clearTimeout(e);if((q===ee||!q)&&clearTimeout)return q=clearTimeout,clearTimeout(e);try{q(e)}catch(t){try{return q.call(null,e)}catch(t){return q.call(this,e)}}}(e)}}function se(e,t){this.fun=e,this.array=t}function ae(){}function ie(){return Q||(Q=!0,G={},H=G={},function(){try{j="function"==typeof setTimeout?setTimeout:J}catch(e){j=J}try{q="function"==typeof clearTimeout?clearTimeout:ee}catch(e){q=ee}}(),K=[],X=!1,Y=-1,H.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];K.push(new se(e,t)),1!==K.length||X||te(re)},se.prototype.run=function(){this.fun.apply(null,this.array)},H.title="browser",H.browser=!0,H.env={},H.argv=[],H.version="",H.versions={},H.on=ae,H.addListener=ae,H.once=ae,H.off=ae,H.removeListener=ae,H.removeAllListeners=ae,H.emit=ae,H.prependListener=ae,H.prependOnceListener=ae,H.listeners=function(e){return[]},H.binding=function(e){throw new Error("process.binding is not supported")},H.cwd=function(){return"/"},H.chdir=function(e){throw new Error("process.chdir is not supported")},H.umask=function(){return 0}),G}var oe=ie();let ue;function le(){if(null==ue){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==oe)t=oe;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}ue=t}return ue}function ce(e,t){const n=function(){const e=le();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const he=ce("kernelRegistry",()=>new Map),pe=ce("gradRegistry",()=>new Map);function de(e,t){const n=be(e,t);return he.get(n)}function fe(e){return pe.get(e)}function me(e){const t=he.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function ge(e){const{kernelName:t,backendName:n}=e,r=be(t,n);he.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),he.set(r,e)}function ye(e){const{kernelName:t}=e;pe.has(t)&&W().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),pe.set(t,e)}function be(e,t){return`${t}_${e}`}function xe(e,t){return"string"===t?ke(e):ve([e],t)}function ve(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=$a121a8f0946211e6c8754f0f6f22a2b8$import$base.flatten(e)),W().getBool("DEBUG")&&$a121a8f0946211e6c8754f0f6f22a2b8$import$base.checkConversionForErrors(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function we(){return W().platform.now()}function ke(e,t="utf-8"){return t=t||"utf-8",W().platform.encode(e,t)}function Ie(e,t="utf-8"){return t=t||"utf-8",W().platform.decode(e,t)}class Ne{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ce)}profileKernel(e,t,n){let r;const s=this.backendTimer.time(()=>{r=n()});if(W().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{Se(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(e=>{Promise.all([e.data(),r,a]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function Se(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Ce{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?y(r+"ms",9):r.error,o=y(e,25),u=t.rank,l=t.size,c=y(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ee(e,t,n,r){const s=$(t),a=function(e,t,n,r){const s=d(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,u="complex64"===n?Ae(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Te(u[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=function e(t,n,r,s,a,i=!0){const o="complex64"===r?2:1,u=n[0],l=n.length;if(0===l){if("complex64"===r){return[Te(Ae(t)[0],0,r)]}return"bool"===r?[_e(t[0])]:[t[0].toString()]}if(1===l){if(u>20){const e=3*o;let n=Array.from(t.slice(0,e)),s=Array.from(t.slice((u-3)*o,u*o));return"complex64"===r&&(n=Ae(n),s=Ae(s)),["["+n.map((e,t)=>Te(e,a[t],r)).join(", ")+", ..., "+s.map((e,t)=>Te(e,a[u-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?Ae(t):Array.from(t)).map((e,t)=>Te(e,a[t],r)).join(", ")+"]"]}const c=n.slice(1),h=s.slice(1),p=s[0]*o,d=[];if(u>20){for(let n=0;n<3;n++){const s=n*p,i=s+p;d.push(...e(t.slice(s,i),c,r,h,a,!1))}d.push("...");for(let n=u-3;n<u;n++){const s=n*p,i=s+p;d.push(...e(t.slice(s,i),c,r,h,a,n===u-1))}}else for(let n=0;n<u;n++){const s=n*p,i=s+p;d.push(...e(t.slice(s,i),c,r,h,a,n===u-1))}const f=2===l?",":"";d[0]="["+d[0]+f;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+f;let m=",\n";for(let e=2;e<l;e++)m+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":m),d}(e,t,n,s,a),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+i),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\n")),u.join("\n")}function Te(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":E(e)?`'${e}'`:"bool"===n?_e(e):parseFloat(e.toFixed(7)).toString(),y(r,t)}function _e(e){return 0===e?"false":"true"}function Ae(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Re{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=d(e),null!=n){const e=n.length;l(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||I(t,this.size),this.strides=$(e)}set(e,...t){0===t.length&&(t=[0]),l(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return $e().makeTensor(this.values,this.shape,this.dtype)}}let $e=null,Fe=null,De=null;class Me{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=d(e),this.strides=$(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Fe.buffer(this.shape,this.dtype,e)}bufferSync(){return Fe.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return F(this.shape,e)}arraySync(){return F(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=$e().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>Ie(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=$e().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Ie(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await $e().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||($e().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Fe.print(this,e)}clone(){return this.throwIfDisposed(),Fe.clone(this)}toString(e=!1){return Ee(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Fe.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),$e().makeVariable(this,e,t,n)}}Object.defineProperty(Me,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class Oe extends Me{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!f(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);$e().disposeTensor(this),this.dataId=e.dataId,$e().incRef(this,null)}dispose(){$e().disposeVariable(this),this.isDisposedInternal=!0}}var Le,Be,Pe,ze,Ve,We,Ue,Ge,He,je;Object.defineProperty(Oe,Symbol.hasInstance,{value:e=>e instanceof Me&&null!=e.assign&&e.assign instanceof Function}),(Be=Le||(Le={})).R0="R0",Be.R1="R1",Be.R2="R2",Be.R3="R3",Be.R4="R4",Be.R5="R5",Be.R6="R6",(ze=Pe||(Pe={})).float32="float32",ze.int32="int32",ze.bool="int32",ze.complex64="complex64",(We=Ve||(Ve={})).float32="float32",We.int32="int32",We.bool="bool",We.complex64="complex64",(Ge=Ue||(Ue={})).float32="float32",Ge.int32="float32",Ge.bool="float32",Ge.complex64="complex64",(je=He||(He={})).float32="complex64",je.int32="complex64",je.bool="complex64",je.complex64="complex64";const qe={float32:Ue,int32:Pe,bool:Ve,complex64:He};function Ke(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return qe[e][t]}function Xe(e){return Ke(e,"int32")}function Ze(e,t){if(e.dtype===t.dtype)return[e,t];const n=Ke(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ye(e,t){return t.some(t=>t.id===e.id)}function Qe(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof Me)return void n.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const a=t;for(const t in a){const s=a[t];r.has(s)||(r.add(s),e(s,n,r))}}(e,t,new Set),t}class Je{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class et{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Je}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ne(this.backendInstance),!0}setupRegisteredKernels(){me(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){me(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof s||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return et.nextTensorId++}nextVariableId(){return et.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return nt.runKernelFunc(t=>t.cast(e,"float32"),t,null,"Cast",n)}}),[],{}),t}runKernel(e,t,n,r,s){return this.runKernelFunc(null,t,null,e,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,s,a,i){let o,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const d=de(r,this.backendName);let f,m;if(null!=d)p=()=>{const e=this.backend.numDataIds();f=d.kernelFunc({inputs:t,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const o=n.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(l){let e=this.getTensorsForGradient(r,t,o);if(null==e){null==i&&(i=[]);const t=o.filter((e,t)=>i[t]);e=(a||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return o};else{if(null==e)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const t=e=>{l&&(u=e.map(e=>this.keep(this.clone(e))))};p=()=>{const n=this.backend.numDataIds();f=this.tidy(()=>e(this.backend,t));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,t,()=>p()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=p()}),l&&this.addTapeNode(r,t,o,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(e=>null!=t[e]?t[e].shape:null),outputShapes:o.map(e=>e.shape),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=fe(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(l(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(e=>t[e])):a=e.map(e=>t[e]);const i=n.filter((e,t)=>s[t]);return a.concat(i)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&E(e[0])&&(s=e.map(e=>ke(e)));const a=r.write(s,t,n),i=new Me(t,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new Me(t,n=n||"float32",e,this.nextTensorId());return this.incRef(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Oe(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*C(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof Oe||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=fe(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=M(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Qe(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(l(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));l(s instanceof Me,()=>"The result y returned by f() must be a tensor.");const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach(e=>r[e.id]=!0),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=D(d(e),"float32");return nt.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach(t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n(()=>o[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!f(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,e=>this.tidy(e),rt);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return l(A(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;l(t.every(e=>e instanceof Me),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc((r,s)=>(n=e(...t,s),l(n.value instanceof Me,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),l(A(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];l(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),l(a.every(e=>e instanceof Me),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return a.forEach((e,t)=>{i[t]=()=>e}),i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=we(),n=await this.backend.time(e);return n.wallMs=we()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Je;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function tt(){const e=le();if(null==e._tfengine){const t=new V(e);e._tfengine=new et(t)}var t;return t=e._tfengine.ENV,U=t,$e=()=>e._tfengine,e._tfengine}et.nextTensorId=0,et.nextVariableId=0;const nt=tt();function rt(e,t){const n={a:e,b:t};return nt.runKernel("Add",n)}function st(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function at(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var it=ie();const ot=W();ot.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ot.registerFlag("IS_BROWSER",()=>at()),ot.registerFlag("IS_NODE",()=>void 0!==it&&void 0!==it.versions&&void 0!==it.versions.node),ot.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ot.registerFlag("PROD",()=>!1),ot.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ot.getBool("DEBUG")),ot.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ot.registerFlag("IS_TEST",()=>!1),ot.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);for(var ut=function(e){var t,n,r=function(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");-1===n&&(n=t);return[n,n===t?0:4-n%4]}(e),s=r[0],a=r[1],i=new pt(function(e,t,n){return 3*(t+n)/4-n}(0,s,a)),o=0,u=a>0?s-4:s;for(n=0;n<u;n+=4)t=ht[e.charCodeAt(n)]<<18|ht[e.charCodeAt(n+1)]<<12|ht[e.charCodeAt(n+2)]<<6|ht[e.charCodeAt(n+3)],i[o++]=t>>16&255,i[o++]=t>>8&255,i[o++]=255&t;2===a&&(t=ht[e.charCodeAt(n)]<<2|ht[e.charCodeAt(n+1)]>>4,i[o++]=255&t);1===a&&(t=ht[e.charCodeAt(n)]<<10|ht[e.charCodeAt(n+1)]<<4|ht[e.charCodeAt(n+2)]>>2,i[o++]=t>>8&255,i[o++]=255&t);return i},lt=function(e){for(var t,n=e.length,r=n%3,s=[],a=0,i=n-r;a<i;a+=16383)s.push(mt(e,a,a+16383>i?i:a+16383));1===r?(t=e[n-1],s.push(ct[t>>2]+ct[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],s.push(ct[t>>10]+ct[t>>4&63]+ct[t<<2&63]+"="));return s.join("")},ct=[],ht=[],pt="undefined"!=typeof Uint8Array?Uint8Array:Array,dt=0,ft="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".length;dt<ft;++dt)ct[dt]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[dt],ht["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(dt)]=dt;function mt(e,t,n){for(var r,s,a=[],i=t;i<n;i+=3)r=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),a.push(ct[(s=r)>>18&63]+ct[s>>12&63]+ct[s>>6&63]+ct[63&s]);return a.join("")}ht["-".charCodeAt(0)]=62,ht["_".charCodeAt(0)]=63;var gt=function(e,t,n,r,s){var a,i,o=8*s-r-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?s-1:0,p=n?-1:1,d=e[t+h];for(h+=p,a=d&(1<<-c)-1,d>>=-c,c+=o;c>0;a=256*a+e[t+h],h+=p,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+e[t+h],h+=p,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=l}return(d?-1:1)*i*Math.pow(2,a-r)},yt=function(e,t,n,r,s,a){var i,o,u,l=8*a-s-1,c=(1<<l)-1,h=c>>1,p=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+h>=1?p/u:p*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(t*u-1)*Math.pow(2,s),i+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;e[n+d]=255&o,d+=f,o/=256,s-=8);for(i=i<<s|o,l+=s;l>0;e[n+d]=255&i,d+=f,i/=256,l-=8);e[n+d-f]|=128*m},bt="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null,xt=wt;function vt(e){if(e>2147483647)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,wt.prototype),t}function wt(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return Nt(e)}return kt(e,t,n)}function kt(e,t,n){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!wt.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var n=0|Tt(e,t),r=vt(n),s=r.write(e,t);s!==n&&(r=r.slice(0,s));return r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(Jt(e,Uint8Array)){var t=new Uint8Array(e);return Ct(t.buffer,t.byteOffset,t.byteLength)}return St(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Jt(e,ArrayBuffer)||e&&Jt(e.buffer,ArrayBuffer))return Ct(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(Jt(e,SharedArrayBuffer)||e&&Jt(e.buffer,SharedArrayBuffer)))return Ct(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return wt.from(r,t,n);var s=function(e){if(wt.isBuffer(e)){var t=0|Et(e.length),n=vt(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!=typeof e.length||en(e.length)?vt(0):St(e);if("Buffer"===e.type&&Array.isArray(e.data))return St(e.data)}(e);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return wt.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function It(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function Nt(e){return It(e),vt(e<0?0:0|Et(e))}function St(e){for(var t=e.length<0?0:0|Et(e.length),n=vt(t),r=0;r<t;r+=1)n[r]=255&e[r];return n}function Ct(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');var r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,wt.prototype),r}function Et(e){if(e>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|e}function Tt(e,t){if(wt.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||Jt(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;for(var s=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return Zt(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Yt(e).length;default:if(s)return r?-1:Zt(e).length;t=(""+t).toLowerCase(),s=!0}}function _t(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return Wt(this,t,n);case"utf8":case"utf-8":return Pt(this,t,n);case"ascii":return zt(this,t,n);case"latin1":case"binary":return Vt(this,t,n);case"base64":return Bt(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Ut(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function At(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function Rt(e,t,n,r,s){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),en(n=+n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof t&&(t=wt.from(t,r)),wt.isBuffer(t))return 0===t.length?-1:$t(e,t,n,r,s);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):$t(e,[t],n,r,s);throw new TypeError("val must be string, number or Buffer")}function $t(e,t,n,r,s){var a,i=1,o=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(s){var c=-1;for(a=n;a<o;a++)if(l(e,a)===l(t,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){for(var h=!0,p=0;p<u;p++)if(l(e,a+p)!==l(t,p)){h=!1;break}if(h)return a}return-1}function Ft(e,t,n,r){n=Number(n)||0;var s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;var a=t.length;r>a/2&&(r=a/2);for(var i=0;i<r;++i){var o=parseInt(t.substr(2*i,2),16);if(en(o))return i;e[n+i]=o}return i}function Dt(e,t,n,r){return Qt(Zt(t,e.length-n),e,n,r)}function Mt(e,t,n,r){return Qt(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function Ot(e,t,n,r){return Qt(Yt(t),e,n,r)}function Lt(e,t,n,r){return Qt(function(e,t){for(var n,r,s,a=[],i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,s=n%256,a.push(s),a.push(r);return a}(t,e.length-n),e,n,r)}function Bt(e,t,n){return 0===t&&n===e.length?lt(e):lt(e.slice(t,n))}function Pt(e,t,n){n=Math.min(e.length,n);for(var r=[],s=t;s<n;){var a,i,o,u,l=e[s],c=null,h=l>239?4:l>223?3:l>191?2:1;if(s+h<=n)switch(h){case 1:l<128&&(c=l);break;case 2:128==(192&(a=e[s+1]))&&(u=(31&l)<<6|63&a)>127&&(c=u);break;case 3:a=e[s+1],i=e[s+2],128==(192&a)&&128==(192&i)&&(u=(15&l)<<12|(63&a)<<6|63&i)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=e[s+1],i=e[s+2],o=e[s+3],128==(192&a)&&128==(192&i)&&128==(192&o)&&(u=(15&l)<<18|(63&a)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),s+=h}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}(r)}wt.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),wt.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(wt.prototype,"parent",{enumerable:!0,get:function(){if(wt.isBuffer(this))return this.buffer}}),Object.defineProperty(wt.prototype,"offset",{enumerable:!0,get:function(){if(wt.isBuffer(this))return this.byteOffset}}),wt.poolSize=8192,wt.from=function(e,t,n){return kt(e,t,n)},Object.setPrototypeOf(wt.prototype,Uint8Array.prototype),Object.setPrototypeOf(wt,Uint8Array),wt.alloc=function(e,t,n){return function(e,t,n){return It(e),e<=0?vt(e):void 0!==t?"string"==typeof n?vt(e).fill(t,n):vt(e).fill(t):vt(e)}(e,t,n)},wt.allocUnsafe=function(e){return Nt(e)},wt.allocUnsafeSlow=function(e){return Nt(e)},wt.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==wt.prototype},wt.compare=function(e,t){if(Jt(e,Uint8Array)&&(e=wt.from(e,e.offset,e.byteLength)),Jt(t,Uint8Array)&&(t=wt.from(t,t.offset,t.byteLength)),!wt.isBuffer(e)||!wt.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var n=e.length,r=t.length,s=0,a=Math.min(n,r);s<a;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},wt.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},wt.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return wt.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=wt.allocUnsafe(t),s=0;for(n=0;n<e.length;++n){var a=e[n];if(Jt(a,Uint8Array))s+a.length>r.length?wt.from(a).copy(r,s):Uint8Array.prototype.set.call(r,a,s);else{if(!wt.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,s)}s+=a.length}return r},wt.byteLength=Tt,wt.prototype._isBuffer=!0,wt.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)At(this,t,t+1);return this},wt.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)At(this,t,t+3),At(this,t+1,t+2);return this},wt.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)At(this,t,t+7),At(this,t+1,t+6),At(this,t+2,t+5),At(this,t+3,t+4);return this},wt.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?Pt(this,0,e):_t.apply(this,arguments)},wt.prototype.toLocaleString=wt.prototype.toString,wt.prototype.equals=function(e){if(!wt.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===wt.compare(this,e)},wt.prototype.inspect=function(){var e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},bt&&(wt.prototype[bt]=wt.prototype.inspect),wt.prototype.compare=function(e,t,n,r,s){if(Jt(e,Uint8Array)&&(e=wt.from(e,e.offset,e.byteLength)),!wt.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0),o=Math.min(a,i),u=this.slice(r,s),l=e.slice(t,n),c=0;c<o;++c)if(u[c]!==l[c]){a=u[c],i=l[c];break}return a<i?-1:i<a?1:0},wt.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},wt.prototype.indexOf=function(e,t,n){return Rt(this,e,t,n,!0)},wt.prototype.lastIndexOf=function(e,t,n){return Rt(this,e,t,n,!1)},wt.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-t;if((void 0===n||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return Ft(this,e,t,n);case"utf8":case"utf-8":return Dt(this,e,t,n);case"ascii":case"latin1":case"binary":return Mt(this,e,t,n);case"base64":return Ot(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Lt(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},wt.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function zt(e,t,n){var r="";n=Math.min(e.length,n);for(var s=t;s<n;++s)r+=String.fromCharCode(127&e[s]);return r}function Vt(e,t,n){var r="";n=Math.min(e.length,n);for(var s=t;s<n;++s)r+=String.fromCharCode(e[s]);return r}function Wt(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var s="",a=t;a<n;++a)s+=tn[e[a]];return s}function Ut(e,t,n){for(var r=e.slice(t,n),s="",a=0;a<r.length-1;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function Gt(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function Ht(e,t,n,r,s,a){if(!wt.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function jt(e,t,n,r,s,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function qt(e,t,n,r,s){return t=+t,n>>>=0,s||jt(e,0,n,4),yt(e,t,n,r,23,4),n+4}function Kt(e,t,n,r,s){return t=+t,n>>>=0,s||jt(e,0,n,8),yt(e,t,n,r,52,8),n+8}wt.prototype.slice=function(e,t){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var r=this.subarray(e,t);return Object.setPrototypeOf(r,wt.prototype),r},wt.prototype.readUintLE=wt.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||Gt(e,t,this.length);for(var r=this[e],s=1,a=0;++a<t&&(s*=256);)r+=this[e+a]*s;return r},wt.prototype.readUintBE=wt.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||Gt(e,t,this.length);for(var r=this[e+--t],s=1;t>0&&(s*=256);)r+=this[e+--t]*s;return r},wt.prototype.readUint8=wt.prototype.readUInt8=function(e,t){return e>>>=0,t||Gt(e,1,this.length),this[e]},wt.prototype.readUint16LE=wt.prototype.readUInt16LE=function(e,t){return e>>>=0,t||Gt(e,2,this.length),this[e]|this[e+1]<<8},wt.prototype.readUint16BE=wt.prototype.readUInt16BE=function(e,t){return e>>>=0,t||Gt(e,2,this.length),this[e]<<8|this[e+1]},wt.prototype.readUint32LE=wt.prototype.readUInt32LE=function(e,t){return e>>>=0,t||Gt(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},wt.prototype.readUint32BE=wt.prototype.readUInt32BE=function(e,t){return e>>>=0,t||Gt(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},wt.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||Gt(e,t,this.length);for(var r=this[e],s=1,a=0;++a<t&&(s*=256);)r+=this[e+a]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*t)),r},wt.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||Gt(e,t,this.length);for(var r=t,s=1,a=this[e+--r];r>0&&(s*=256);)a+=this[e+--r]*s;return a>=(s*=128)&&(a-=Math.pow(2,8*t)),a},wt.prototype.readInt8=function(e,t){return e>>>=0,t||Gt(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},wt.prototype.readInt16LE=function(e,t){e>>>=0,t||Gt(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},wt.prototype.readInt16BE=function(e,t){e>>>=0,t||Gt(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},wt.prototype.readInt32LE=function(e,t){return e>>>=0,t||Gt(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},wt.prototype.readInt32BE=function(e,t){return e>>>=0,t||Gt(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},wt.prototype.readFloatLE=function(e,t){return e>>>=0,t||Gt(e,4,this.length),gt(this,e,!0,23,4)},wt.prototype.readFloatBE=function(e,t){return e>>>=0,t||Gt(e,4,this.length),gt(this,e,!1,23,4)},wt.prototype.readDoubleLE=function(e,t){return e>>>=0,t||Gt(e,8,this.length),gt(this,e,!0,52,8)},wt.prototype.readDoubleBE=function(e,t){return e>>>=0,t||Gt(e,8,this.length),gt(this,e,!1,52,8)},wt.prototype.writeUintLE=wt.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t>>>=0,n>>>=0,r)||Ht(this,e,t,n,Math.pow(2,8*n)-1,0);var s=1,a=0;for(this[t]=255&e;++a<n&&(s*=256);)this[t+a]=e/s&255;return t+n},wt.prototype.writeUintBE=wt.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t>>>=0,n>>>=0,r)||Ht(this,e,t,n,Math.pow(2,8*n)-1,0);var s=n-1,a=1;for(this[t+s]=255&e;--s>=0&&(a*=256);)this[t+s]=e/a&255;return t+n},wt.prototype.writeUint8=wt.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,1,255,0),this[t]=255&e,t+1},wt.prototype.writeUint16LE=wt.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},wt.prototype.writeUint16BE=wt.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},wt.prototype.writeUint32LE=wt.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},wt.prototype.writeUint32BE=wt.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},wt.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var s=Math.pow(2,8*n-1);Ht(this,e,t,n,s-1,-s)}var a=0,i=1,o=0;for(this[t]=255&e;++a<n&&(i*=256);)e<0&&0===o&&0!==this[t+a-1]&&(o=1),this[t+a]=(e/i>>0)-o&255;return t+n},wt.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var s=Math.pow(2,8*n-1);Ht(this,e,t,n,s-1,-s)}var a=n-1,i=1,o=0;for(this[t+a]=255&e;--a>=0&&(i*=256);)e<0&&0===o&&0!==this[t+a+1]&&(o=1),this[t+a]=(e/i>>0)-o&255;return t+n},wt.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},wt.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},wt.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},wt.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},wt.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||Ht(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},wt.prototype.writeFloatLE=function(e,t,n){return qt(this,e,t,!0,n)},wt.prototype.writeFloatBE=function(e,t,n){return qt(this,e,t,!1,n)},wt.prototype.writeDoubleLE=function(e,t,n){return Kt(this,e,t,!0,n)},wt.prototype.writeDoubleBE=function(e,t,n){return Kt(this,e,t,!1,n)},wt.prototype.copy=function(e,t,n,r){if(!wt.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var s=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),s},wt.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!wt.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){var s=e.charCodeAt(0);("utf8"===r&&s<128||"latin1"===r)&&(e=s)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var i=wt.isBuffer(e)?e:wt.from(e,r),o=i.length;if(0===o)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<n-t;++a)this[a+t]=i[a%o]}return this};var Xt=/[^+/0-9A-Za-z-_]/g;function Zt(e,t){var n;t=t||1/0;for(var r=e.length,s=null,a=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!s){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(t-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function Yt(e){return ut(function(e){if((e=(e=e.split("=")[0]).trim().replace(Xt,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Qt(e,t,n,r){for(var s=0;s<r&&!(s+n>=t.length||s>=e.length);++s)t[s+n]=e[s];return s}function Jt(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function en(e){return e!=e}var tn=function(){for(var e=new Array(256),t=0;t<16;++t)for(var n=16*t,r=0;r<16;++r)e[n+r]="0123456789abcdef"[t]+"0123456789abcdef"[r];return e}();function nn(e,t){let n=e;if(S(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||S(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&W().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!S(t))return void l(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);l(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),l(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const s=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],s,r.concat(n))}(e,r,[]),r}function rn(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function sn(e,t,n,r="numeric"){if(e instanceof Me)return rn(r,e.dtype,t,n),e;let s=_(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),rn(r,s,t,n),null==e||!S(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=nn(e,s);S(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?ve(e,s):p(e,[],!0);return nt.makeTensor(i,a,s)}function an(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>sn(e,`${t}[${s}]`,n,r))}function on(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{nt.startScope(n);try{const t=r(...e);return z(t)&&console.error("Cannot return a Promise inside of tidy."),nt.endScope(t),t}catch(e){throw nt.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const un=on({complex_:function(e,t){const n=sn(e,"real","complex"),r=sn(t,"imag","complex");c(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return nt.runKernel("Complex",s)}});function ln(e,t,n,r){if(null==r&&(r=_(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!S(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){L(t);const e=d(t),r=d(n);l(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==d(t.slice(e));l(n[e]===t[e]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return S(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ve(e,r):p(e,[],!0),nt.makeTensor(e,t,r)}function cn(e,t,n){return ln(e,t,nn(e,n),n)}const hn={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var pn=xt;async function dn(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:fn(await Promise.all(r)),specs:n}}function fn(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const mn=void 0!==pn&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function gn(e){return mn?pn.byteLength(e):new Blob([e]).size}function yn(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function bn(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:gn(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:gn(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function xn(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}class vn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==vn.instance&&(vn.instance=new vn),vn.instance}static registerSaveRouter(e){vn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){vn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return vn.getHandlers(e,"save")}static getLoadHandlers(e,t){return vn.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?vn.getInstance().loadRouters:vn.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}const wn=e=>vn.getSaveHandlers(e);function kn(){if(!W().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function In(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Nn{constructor(e){if(this.indexedDB=kn(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>In(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=bn(t),a=s.transaction("model_info_store","readwrite");let i=a.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction("models_store","readwrite");const o=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore("model_info_store");const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}Nn.URL_SCHEME="indexeddb://";const Sn=e=>{return W().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Nn.URL_SCHEME)?(t=e.slice(Nn.URL_SCHEME.length),new Nn(t)):null;var t};vn.registerSaveRouter(Sn),vn.registerLoadRouter(Sn);class Cn{constructor(){this.indexedDB=kn()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>In(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),a=s.objectStore("model_info_store").getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Nn.URL_SCHEME)?t.slice(Nn.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>In(r),r.onsuccess=()=>{const s=r.result,a=s.transaction("model_info_store","readwrite"),i=a.objectStore("model_info_store"),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const En="tensorflowjs_models",Tn="info",_n="model_topology",An="weight_specs",Rn="weight_data",$n="model_metadata";function Fn(e){return{info:[En,e,Tn].join("/"),topology:[En,e,_n].join("/"),weightSpecs:[En,e,An].join("/"),weightData:[En,e,Rn].join("/"),modelMetadata:[En,e,$n].join("/")}}function Dn(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class Mn{constructor(e){if(!W().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Fn(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=bn(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(mn)return pn.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(mn){const t=pn.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Mn.URL_SCHEME="localstorage://";const On=e=>{return W().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Mn.URL_SCHEME)?(t=e.slice(Mn.URL_SCHEME.length),new Mn(t)):null;var t};vn.registerSaveRouter(On),vn.registerLoadRouter(On);class Ln{constructor(){l(W().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),l("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=En+"/",n="/"+Tn;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[Dn(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=Fn(e=(t=e).startsWith(Mn.URL_SCHEME)?t.slice(Mn.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class Bn{constructor(){this.managers={}}static getInstance(){return null==Bn.instance&&(Bn.instance=new Bn),Bn.instance}static registerManager(e,t){l(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),l(e.length>0,()=>"scheme must not be an empty string.");const n=Bn.getInstance();l(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Pn{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(W().get("IS_BROWSER")){W().setPlatform("browser",new Pn);try{Bn.registerManager(Mn.URL_SCHEME,new Ln)}catch(e){}try{Bn.registerManager(Nn.URL_SCHEME,new Cn)}catch(e){}}var zn=ie(),Vn=!1;function Wn(){return Vn||(Vn=!0),{}}const Un=()=>Wn();let Gn;class Hn{constructor(){this.util=Wn(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=W().global.fetch?W().global.fetch(e,t):(null==Gn&&(Gn=Un()),Gn(e,t))}now(){const e=zn.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}function jn(e,t="float32",n){return t=t||"float32",L(e),new Re(e,t,n)}W().get("IS_NODE")&&W().setPlatform("node",new Hn);const qn=on({cast_:function(e,t){const n=sn(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return nt.runKernel("Cast",r,s)}});const Kn=on({clone_:function(e){const t={x:sn(e,"x","clone","string_or_numeric")};return nt.runKernel("Identity",t)}});tt();Fe={buffer:jn,cast:qn,clone:Kn,print:function(e,t=!1){console.log(e.toString(t))}};function Xn(e){return new Promise(e=>setTimeout(e)).then(e)}class Zn{constructor(e){if(!W().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Zn.URL_SCHEME)&&(e=e.slice(Zn.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Xn(()=>a.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Xn(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:bn(e)}}}}Zn.URL_SCHEME="downloads://";function Yn(e,t,n,r){!function(e){l(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){l(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),l(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),l(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(a=>(a.then(a=>{const i=n+ ++s/e.length*(r-n);return t(i),a}),a)))}vn.registerSaveRouter(e=>W().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zn.URL_SCHEME)?function(e="model"){return new Zn(e)}(e.slice(Zn.URL_SCHEME.length)):null);class Qn{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(l("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=W().platform.fetch,l(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&l(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:bn(e),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+s.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,c;if(null!=r){const e=await this.loadWeights(r);[l,c]=e}const h={modelTopology:n,weightSpecs:l,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=u&&(h.userDefinedMetadata=u);const p=t.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,yn(await async function(e,t){null==t&&(t={});const n=null==t.fetchFunc?W().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await Yn(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await Yn(s,t.onProgress,.5,1)}(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Jn(e){return null!=e.match(Qn.URL_SCHEME_REGEX)}Qn.URL_SCHEME_REGEX=/^https?:\/\//;const er=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Jn(e)):Jn(e),n)return tr(e,t)}return null};function tr(e,t){return new Qn(e,t)}function nr(e,t){return tr(e,t)}vn.registerSaveRouter(er),vn.registerLoadRouter(er);const rr=on({matMul_:function(e,t,n=!1,r=!1){let s=sn(e,"a","matMul"),a=sn(t,"b","matMul");[s,a]=Ze(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return nt.runKernel("BatchMatMul",i,o)}});const sr=on({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const s={indices:sn(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return nt.runKernel("OneHot",s,a)}});const ar=on({transpose_:function(e,t){const n=sn(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),l(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{l(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return nt.runKernel("Transpose",r,s)}});on({confusionMatrix_:function(e,t,n){const r=sn(e,"labels","confusionMatrix"),s=sn(t,"predictions","confusionMatrix");l(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),l(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),l(1===s.rank,()=>"Expected the rank of predictions to be 1, but got "+s.rank),l(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),l(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const a=sr(qn(r,"int32"),n),i=sr(qn(s,"int32"),n),o=ar(a),u=rr(o,i);return qn(u,"int32")}});let ir;const or=on({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=de("FromPixels",nt.backendName)){const n={pixels:e},r={numChannels:t};return nt.runKernel("FromPixels",n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,p;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(a||s||o)&&(null==ir&&(ir=document.createElement("canvas").getContext("2d")),ir.canvas.width=u,ir.canvas.height=l,ir.drawImage(e,0,0,u,l),c=ir.getImageData(0,0,u,l).data),4===t)p=new Int32Array(c);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=c[4*n+e]}return function(e,t,n){if(h(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=nn(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ln(e,t,r,n)}(p,[l,u,t],"int32")}});function ur(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===d(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...$(e.shape).map(e=>e/l),1].slice(0,a);return[u,i,l,c]}function lr(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}!function(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}(n,t,e)}function cr(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:d(t.shape)/o,sliceSize:i,strides:[...$(n.slice(0,s)),1],outputSize:d(n)}}function hr(e,t,n){const r=e.shape.length;l(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),l(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)l(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function pr(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function dr(e,t,n){return n<=e?n:n-(t-1)}function fr(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function mr(e,t,n,r,s,a,i,u,l){const c=e.length;let h=new Array(c),p=new Array(c),d=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;h=function(e,t,n,r,s){const a=[...s],i=fr(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=dr(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}(i,l,c,r,e),p=function(e,t,n,r,s){const a=[...s],i=fr(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=dr(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=o(0,a[e],s[e])}return a}(u,l,c,s,e),d=function(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}(a,l,c,e)}else for(let t=0;t<c;t++)h[t]=yr(i,r,a,e,t,l),p[t]=br(u,s,a,e,t,l),d[t]=gr(a,t,l);return{begin:h,end:p,strides:d}}function gr(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function yr(e,t,n,r,s,a){let i=t[s];const u=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o(0,i,l-1),i}function br(e,t,n,r,s,a){let i=t[s];const u=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=u>0?o(0,i,l):o(-1,i,l-1),i}function xr(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function vr(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function wr(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{l(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(l(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function kr(e,t,n,r,s,a,i,o,u){let l=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(l.length));const p=pr(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=e.length-l.length,f=pr(o),m=e.slice();f.forEach(e=>{l[e]=0,c[e]=1,m.splice(e,0,1)});const{begin:g,end:y,strides:b}=mr(m,p,d,l,c,h,s,a,i);l=g,c=y,h=b;const x=pr(u);x.forEach(e=>{c[e]=l[e]+1,h[e]=1});const v=function(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}(l,c,h),w=v.filter((e,t)=>-1===x.indexOf(t));return{nonStrided:h.every(e=>1===e),$begin:l,$end:c,$strides:h,size:v,newShape:m,outShape:w}}class Ir{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Nr{constructor(){this.classNameMap={}}static getMap(){return null==Nr.instance&&(Nr.instance=new Nr),Nr.instance}static register(e){Nr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Sr(e){l(null!=e.className,()=>"Class being registered does not have the static className property defined."),l("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),l(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Nr.register(e)}function Cr(e){W().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Er(){return nt}function Tr(){return nt.memory()}function _r(e,t){return nt.tidy(e,t)}function Ar(e){Qe(e).forEach(e=>e.dispose())}function Rr(e){return nt.keep(e)}function $r(e,t,n=1){return nt.registerBackend(e,t,n)}De=Cr;const Fr=on({add_:function(e,t){let n=sn(e,"a","add"),r=sn(t,"b","add");[n,r]=Ze(n,r);const s={a:n,b:r};return nt.runKernel("Add",s)}});const Dr=on({floorDiv_:function(e,t){let n=sn(e,"a","floorDiv"),r=sn(t,"b","floorDiv");[n,r]=Ze(n,r);const s={a:n,b:r};return nt.runKernel("FloorDiv",s)}});const Mr=on({div_:function(e,t){let n=sn(e,"a","div"),r=sn(t,"b","div");if([n,r]=Ze(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Dr(n,r);const s={a:n,b:r};return nt.runKernel("RealDiv",s,{})}});const Or=on({mul_:function(e,t){let n=sn(e,"a","mul"),r=sn(t,"b","mul");[n,r]=Ze(n,r);const s={a:n,b:r};return nt.runKernel("Multiply",s)}});const Lr=on({abs_:function(e){const t=sn(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return nt.runKernel("ComplexAbs",e)}{const e={x:t};return nt.runKernel("Abs",e)}}});const Br=on({acos_:function(e){const t={x:sn(e,"x","acos")};return nt.runKernel("Acos",t)}});const Pr=on({acosh_:function(e){const t={x:sn(e,"x","acosh")};return nt.runKernel("Acosh",t)}});const zr=on({addN_:function(e){l(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),l(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>sn(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!f(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return nt.runKernel("AddN",r)}});const Vr=on({all_:function(e,t=null,n=!1){const r={x:sn(e,"x","all","bool")},s={axis:t,keepDims:n};return nt.runKernel("All",r,s)}});const Wr=on({any_:function(e,t=null,n=!1){const r={x:sn(e,"x","any","bool")},s={axis:t,keepDims:n};return nt.runKernel("Any",r,s)}});const Ur=on({argMax_:function(e,t=0){const n={x:sn(e,"x","argMax")},r={axis:t};return nt.runKernel("ArgMax",n,r)}});const Gr=on({argMin_:function(e,t=0){const n={x:sn(e,"x","argMin")},r={axis:t};return nt.runKernel("ArgMin",n,r)}});const Hr=on({asin_:function(e){const t={x:sn(e,"x","asin")};return nt.runKernel("Asin",t)}});const jr=on({asinh_:function(e){const t={x:sn(e,"x","asinh")};return nt.runKernel("Asinh",t)}});const qr=on({atan_:function(e){const t={x:sn(e,"x","atan")};return nt.runKernel("Atan",t)}});const Kr=on({atan2_:function(e,t){let n=sn(e,"a","atan2"),r=sn(t,"b","atan2");[n,r]=Ze(n,r);const s={a:n,b:r};return nt.runKernel("Atan2",s)}});const Xr=on({atanh_:function(e){const t={x:sn(e,"x","atanh")};return nt.runKernel("Atanh",t)}});function Zr(e,t,n,r,s="NHWC",a){return Jr(e,[...t,e[3]],n,a,r,null,null,us(s))}function Yr(e,t,n,r,s,a,i="channelsLast"){const[o,u]=ns(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[o,u,e[1],e[1]]}return Jr(e,l,n,r,s,a,!1,i)}function Qr(e,t,n,r,s,a,i="NDHWC"){const[o,u,l]=rs(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return es(e,c,n,r,s,!1,h,a)}function Jr(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,l,c]=e}const[p,d,,f]=t,[m,g]=ns(n),[y,b]=ns(r),x=ss(p,y),v=ss(d,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=ts(e,t,n));const a=e[0],i=e[1],o=as((a-t+2*r)/n+1,s),u=as((i-t+2*r)/n+1,s);return[o,u]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(e/2),p=e-u,d=Math.floor(o/2);l={top:u,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=as((t-a+p+d)/r+1,o),h=as((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,v,a,o),N=i?f*h:f;let S;return"channelsFirst"===o?S=[u,N,k,I]:"channelsLast"===o&&(S=[u,k,I,N]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function es(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,p,l,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=rs(n),[v,w,k]=rs(r),I=ss(d,v),N=ss(f,w),S=ss(m,k),{padInfo:C,outDepth:E,outHeight:T,outWidth:_}=function(e,t,n,r,s,a,i,o,u,l,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=ts(e,t,r));const i=e[0],o=e[1],u=e[2],l=as((i-t+2*s)/r+1,a),c=as((o-t+2*s)/r+1,a),h=as((u-t+2*s)/r+1,a);return[l,c,h,n]}([t,n,r,1],o,1,s,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/i);const e=(p-1)*s+o-t,c=(d-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/s),d=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,l,c,h,y,b,x,I,N,S,o),A=a?g*p:g;let R;return"channelsFirst"===i?R=[u,A,E,T,_]:"channelsLast"===i&&(R=[u,E,T,_,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:E,outHeight:T,outWidth:_,outChannels:A,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function ts(e,t,n,r=1){const s=ss(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function ns(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function rs(e){return"number"==typeof e?[e,e,e]:e}function ss(e,t){return t<=1?e:e+(e-1)*(t-1)}function as(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function is(e){const[t,n,r]=ns(e);return 1===t&&1===n&&1===r}function os(e,t){return is(e)||is(t)}function us(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const ls=on({reshape_:function(e,t){const n={x:sn(e,"x","reshape","string_or_numeric")},r={shape:t};return nt.runKernel("Reshape",n,r)}});const cs=on({avgPool_:function(e,t,n,r,s){const a=sn(e,"x","avgPool","float32");l(os(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=a,o=!1;3===a.rank&&(o=!0,i=ls(a,[1,a.shape[0],a.shape[1],a.shape[2]])),l(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=s&&l(m(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let h=nt.runKernel("AvgPool",u,c);return h=qn(h,a.dtype),o?ls(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const hs=on({avgPool3d_:function(e,t,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Cr("dilations is deprecated, this field will be gone in v3.0.0.");const o=sn(e,"x","avgPool3d","float32");let u=o,c=!1;4===o.rank&&(c=!0,u=ls(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),l(5===u.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`),l("NDHWC"===a,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),l(os(n,i),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=s&&l(m(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const h={x:u},p={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let d=nt.runKernel("AvgPool3D",h,p);return d=qn(d,u.dtype),c?ls(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const ps=on({concat_:function(e,t=0){l(e.length>=1,()=>"Pass at least one tensor to concat");const n=an(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Kn(n[0]);const r=n,s={axis:t};return nt.runKernel("Concat",r,s)}});const ds=on({sigmoid_:function(e){const t={x:sn(e,"x","sigmoid")};return nt.runKernel("Sigmoid",t)}});const fs=on({slice_:function(e,t,n){const r=sn(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return nt.runKernel("Slice",s,a)}});const ms=on({tanh_:function(e){const t={x:sn(e,"x","tanh")};return nt.runKernel("Tanh",t)}});on({basicLSTMCell_:function(e,t,n,r,s,a){const i=sn(e,"forgetBias","basicLSTMCell"),o=sn(t,"lstmKernel","basicLSTMCell"),u=sn(n,"lstmBias","basicLSTMCell"),l=sn(r,"data","basicLSTMCell"),c=sn(s,"c","basicLSTMCell"),h=sn(a,"h","basicLSTMCell"),p=ps([l,h],1),d=rr(p,o),f=Fr(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=fs(f,[0,0],y),x=fs(f,[0,g],y),v=fs(f,[0,2*g],y),w=fs(f,[0,3*g],y),k=Fr(Or(ds(b),ms(x)),Or(c,ds(Fr(i,v))));return[k,Or(ms(k),ds(w))]}});const gs=on({batchToSpaceND_:function(e,t,n){const r=sn(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);l(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),l(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),l(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);const a={x:r},i={blockShape:t,crops:n};return nt.runKernel("BatchToSpaceND",a,i)}});const ys=on({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=sn(e,"x","batchNorm"),o=sn(t,"mean","batchNorm"),u=sn(n,"variance","batchNorm");let c,h;null!=s&&(c=sn(s,"scale","batchNorm")),null!=r&&(h=sn(r,"offset","batchNorm")),l(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),l(null==h||o.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),l(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p={x:function(e){let t;return t=0===e.rank||1===e.rank?ls(e,[1,1,1,e.size]):2===e.rank?ls(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ls(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:c,offset:h,mean:o,variance:u},d={varianceEpsilon:a},f=nt.runKernel("FusedBatchNorm",p,d);return ls(f,i.shape)}});const bs=on({batchNorm2d_:function(e,t,n,r,s,a){const i=sn(e,"x","batchNorm"),o=sn(t,"mean","batchNorm"),u=sn(n,"variance","batchNorm");let c,h;return null!=s&&(c=sn(s,"scale","batchNorm")),null!=r&&(h=sn(r,"offset","batchNorm")),l(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),l(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),l(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&l(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=h&&l(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),ys(i,o,u,h,c,a)}});const xs=on({batchNorm3d_:function(e,t,n,r,s,a){const i=sn(e,"x","batchNorm"),o=sn(t,"mean","batchNorm"),u=sn(n,"variance","batchNorm");let c,h;return null!=s&&(c=sn(s,"scale","batchNorm")),null!=r&&(h=sn(r,"offset","batchNorm")),l(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),l(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),l(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&l(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=h&&l(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),ys(i,o,u,h,c,a)}});const vs=on({batchNorm4d_:function(e,t,n,r,s,a){const i=sn(e,"x","batchNorm"),o=sn(t,"mean","batchNorm"),u=sn(n,"variance","batchNorm");let c,h;return null!=s&&(c=sn(s,"scale","batchNorm")),null!=r&&(h=sn(r,"offset","batchNorm")),l(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),l(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),l(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&l(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=h&&l(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),ys(i,o,u,h,c,a)}});const ws=on({bincount_:function(e,t,n){const r=sn(e,"x","bincount"),s=sn(t,"weights","bincount");l("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),l(n>=0,()=>`size must be non-negative, but got ${n}.`),l(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: `+s.shape+".");const a={x:r,weights:s},i={size:n};return nt.runKernel("Bincount",a,i)}});const ks=on({broadcastTo_:function(e,t){let n=sn(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ls(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return Kn(n);const i={x:n},o={reps:a};return nt.runKernel("Tile",i,o)}});const Is=on({ceil_:function(e){const t={x:sn(e,"x","ceil")};return nt.runKernel("Ceil",t)}});const Ns=on({clipByValue_:function(e,t,n){const r=sn(e,"x","clipByValue");l(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const s={x:r},a={clipValueMin:t,clipValueMax:n};return nt.runKernel("ClipByValue",s,a)}});const Ss=on({concat1d_:function(e){return ps(e,0)}});const Cs=on({concat2d_:function(e,t){return ps(e,t)}});const Es=on({concat3d_:function(e,t){return ps(e,t)}});const Ts=on({concat4d_:function(e,t){return ps(e,t)}});const _s=on({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=sn(e,"x","conv2d"),u=sn(t,"filter","conv2d");let c=o,h=!1;3===o.rank&&(h=!0,c=ls(o,[1,o.shape[0],o.shape[1],o.shape[2]])),l(4===c.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),l(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=i&&l(m(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const p="NHWC"===s?c.shape[3]:c.shape[1];l(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),l(os(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const d={x:c,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=nt.runKernel("Conv2D",d,f);return h?ls(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const As=on({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=sn(e,"x","conv1d"),u=sn(t,"filter","conv1d");let c=o,h=!1;2===o.rank&&(h=!0,c=ls(o,[1,o.shape[0],o.shape[1]])),l(3===c.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),l(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=i&&l(m(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),l(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),l(os(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),l("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const p=ls(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=ls(c,[c.shape[0],1,c.shape[1],c.shape[2]]),f=_s(d,p,[1,n],r,"NHWC",[1,a],i);return ls(f,h?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}});const Rs=on({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){l(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,c=!1;3===t.rank&&(c=!0,u=ls(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),l(4===o.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."),l(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),l(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const h="NHWC"===a?o[3]:o[1],p="NHWC"===a?u.shape[3]:u.shape[1];l(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),l(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),null!=i&&l(m(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const d={dy:u,filter:n},f={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},g=nt.runKernel("Conv2DBackpropInput",d,f);return c?ls(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const $s=on({conv2dTranspose_:function(e,t,n,r,s,a){const i=sn(e,"x","conv2dTranspose"),o=sn(t,"filter","conv2dTranspose");return Rs(n,i,o,r,s,"NHWC",a)}});const Fs=on({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=sn(e,"x","conv3d"),o=sn(t,"filter","conv3d");let u=i,c=!1;4===i.rank&&(c=!0,u=ls(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),l(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),l(5===o.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."),l(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),l(os(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),l("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const h={x:u,filter:o},p={strides:n,pad:r,dataFormat:s,dilations:a},d=nt.runKernel("Conv3D",h,p);return c?ls(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Ds=on({conv3DBackpropInput_:function(e,t,n,r,s){l(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=ls(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],c=i.shape[4];l(5===a.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."),l(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),l(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),l(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),l(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const h={dy:i,filter:n},p={pad:s,strides:r,inputShape:a},d=nt.runKernel("Conv3DBackpropInputV2",h,p);return o?ls(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});on({conv3dTranspose_:function(e,t,n,r,s){const a=sn(e,"x","conv3dTranspose"),i=sn(t,"filter","conv3dTranspose");return Ds(n,a,i,r,s)}});const Ms=on({cos_:function(e){const t={x:sn(e,"x","cos")};return nt.runKernel("Cos",t)}});const Os=on({cosh_:function(e){const t={x:sn(e,"x","cosh")};return nt.runKernel("Cosh",t)}});const Ls=on({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:sn(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return nt.runKernel("Cumsum",s,a)}});const Bs=on({denseBincount_:function(e,t,n,r=!1){const s=sn(e,"x","denseBincount"),a=sn(t,"weights","denseBincount");l("int32"===s.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+s.dtype),l(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),l(n>=0,()=>`size must be non-negative, but got ${n}.`),l(a.size===s.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: `+a.shape+".");const i={x:s,weights:a},o={size:n,binaryOutput:r};return nt.runKernel("DenseBincount",i,o)}});const Ps=on({depthToSpace_:function(e,t,n="NHWC"){const r=sn(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];l(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),l(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),l(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const o={x:r},u={blockSize:t,dataFormat:n};return nt.runKernel("DepthToSpace",o,u)}});const zs=on({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=sn(e,"x","depthwiseConv2d"),u=sn(t,"filter","depthwiseConv2d");let c=o,h=!1;3===o.rank&&(h=!0,c=ls(o,[1,o.shape[0],o.shape[1],o.shape[2]])),l(4===c.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),l(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),l(c.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=i&&l(m(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const p={x:c,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=nt.runKernel("DepthwiseConv2dNative",p,d);return h?ls(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});on({diag_:function(e){const t={x:sn(e,"x","diag")};return nt.runKernel("Diag",t)}});const Vs=on({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=sn(e,"x","dilation2d"),o=sn(t,"filter","dilation2d");l(3===i.rank||4===i.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+"."),l(3===o.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+"."),l("NHWC"===a,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+a);let u=i,c=!1;3===i.rank&&(u=ls(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const h={x:u,filter:o},p={strides:n,pad:r,dilations:s},d=nt.runKernel("Dilation2D",h,p);return c?ls(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function Ws(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Us(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Gs(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const Hs=on({equal_:function(e,t){let n=sn(e,"a","equal"),r=sn(t,"b","equal");[n,r]=Ze(n,r),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("Equal",s)}});const js=on({where_:function(e,t,n){const r=sn(t,"a","where"),s=sn(n,"b","where"),a=sn(e,"condition","where","bool"),i=Gs(r.shape,s.shape),o=ks(r,i),u=ks(s,i);1===a.rank&&l(a.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==a.rank&&c(a.shape,u.shape,"Error in where: ");const h={condition:a,t:o,e:u};return nt.runKernel("Select",h)}});const qs=on({zerosLike_:function(e){const t={x:sn(e,"x","zerosLike")};return nt.runKernel("ZerosLike",t)}});const Ks=on({divNoNan_:function(e,t){let n=sn(e,"a","div"),r=sn(t,"b","div");[n,r]=Ze(n,r);const s=Mr(n,r),a=qs(s),i=Hs(r,a);return js(i,a,s)}});const Xs=on({dot_:function(e,t){const n=sn(e,"t1","dot"),r=sn(t,"t2","dot");l(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(l(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const e=ls(n,[1,-1]),t=ls(r,[-1,1]),s=rr(e,t);return ls(s,[])}if(1===n.rank&&2===r.rank){const e=ls(n,[1,-1]),t=ls(r,[r.shape[0],r.shape[1]]),s=rr(e,t);return ls(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ls(r,[-1,1]),t=rr(n,e);return ls(t,[t.size])}{const e=ls(r,[r.shape[0],r.shape[1]]);return rr(n,e)}}});const Zs=on({elu_:function(e){const t={x:sn(e,"x","elu")};return nt.runKernel("Elu",t)}});const Ys=on({erf_:function(e){let t=sn(e,"x","erf");l("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=qn(t,"float32"));const n={x:t};return nt.runKernel("Erf",n)}});const Qs=on({exp_:function(e){const t={x:sn(e,"x","exp")};return nt.runKernel("Exp",t)}});const Js=on({expandDims_:function(e,t=0){const n=sn(e,"x","expandDims","string_or_numeric");l(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:t};return nt.runKernel("ExpandDims",r,s)}});const ea=on({expm1_:function(e){const t={x:sn(e,"x","expm1")};return nt.runKernel("Expm1",t)}});const ta=on({tile_:function(e,t){const n=sn(e,"x","tile","string_or_numeric");l(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},s={reps:t};return nt.runKernel("Tile",r,s)}});const na=on({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=jn([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=ls(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return ta(Js(i,0),[n[0],1,1]);if(2===n.length)return ta(Js(Js(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ta(Js(Js(Js(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ra(e,t,n){const r={shape:e,value:t,dtype:n};return nt.runKernel("Fill",{},r)}const sa=on({floor_:function(e){const t={x:sn(e,"x","floor")};return nt.runKernel("Floor",t)}});const aa=on({gather_:function(e,t,n=0,r=0){const s={x:sn(e,"x","gather"),indices:sn(t,"indices","gather","int32")},a={axis:n,batchDims:r};return nt.runKernel("GatherV2",s,a)}});const ia=on({greater_:function(e,t){let n=sn(e,"a","greater"),r=sn(t,"b","greater");[n,r]=Ze(n,r),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("Greater",s)}});const oa=on({greaterEqual_:function(e,t){let n=sn(e,"a","greaterEqual"),r=sn(t,"b","greaterEqual");[n,r]=Ze(n,r),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("GreaterEqual",s)}});const ua=on({imag_:function(e){const t={input:sn(e,"input","imag")};return nt.runKernel("Imag",t)}});const la=on({isFinite_:function(e){const t={x:sn(e,"x","isFinite")};return nt.runKernel("IsFinite",t)}});const ca=on({isInf_:function(e){const t={x:sn(e,"x","isInf")};return nt.runKernel("IsInf",t)}});const ha=on({isNaN_:function(e){const t={x:sn(e,"x","isNaN")};return nt.runKernel("IsNan",t)}});const pa=on({leakyRelu_:function(e,t=.2){const n={x:sn(e,"x","leakyRelu")},r={alpha:t};return nt.runKernel("LeakyRelu",n,r)}});const da=on({less_:function(e,t){let n=sn(e,"a","less"),r=sn(t,"b","less");[n,r]=Ze(n,r),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("Less",s)}});const fa=on({lessEqual_:function(e,t){let n=sn(e,"a","lessEqual"),r=sn(t,"b","lessEqual");[n,r]=Ze(n,r),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("LessEqual",s)}});function ma(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return nt.runKernel("LinSpace",{},r)}const ya=on({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=sn(e,"x","localResponseNormalization");l(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),l(m(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=ls(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},c={depthRadius:t,bias:n,alpha:r,beta:s},h=nt.runKernel("LRN",u,c);return o?ls(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const ba=on({log_:function(e){const t={x:sn(e,"x","log")};return nt.runKernel("Log",t)}});const xa=on({log1p_:function(e){const t={x:sn(e,"x","log1p")};return nt.runKernel("Log1p",t)}});function va(e){return nt.customGrad(e)}const wa=on({neg_:function(e){const t={x:sn(e,"x","neg")};return nt.runKernel("Neg",t)}});const ka=on({softplus_:function(e){const t={x:sn(e,"x","softplus")};return nt.runKernel("Softplus",t)}});const Ia=on({logSigmoid_:function(e){const t=sn(e,"x","logSigmoid");return va(e=>({value:wa(ka(wa(e))),gradFunc:t=>Or(t,ds(wa(e)))}))(t)}});const Na=on({max_:function(e,t=null,n=!1){const r={x:sn(e,"x","max")},s={reductionIndices:t,keepDims:n};return nt.runKernel("Max",r,s)}});const Sa=on({sub_:function(e,t){let n=sn(e,"a","sub"),r=sn(t,"b","sub");[n,r]=Ze(n,r);const s={a:n,b:r};return nt.runKernel("Sub",s)}});const Ca=on({sum_:function(e,t=null,n=!1){let r=sn(e,"x","sum");"bool"===r.dtype&&(r=qn(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return nt.runKernel("Sum",s,a)}});const Ea=on({logSoftmax_:function(e,t=-1){const n=sn(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return va((e,n)=>{const r=Na(e,t,!0),s=Sa(e,r),a=Sa(qn(s,"float32"),ba(Ca(Qs(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=Qs(r);return Sa(e,Or(Ca(e,t,!0),s))}}})(n)}});function Ta(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function _a(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function Aa(e,t){return function(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}(e,t.map(e=>1),t)}function Ra(e,t,n){l(Ta(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function $a(e,t){if(Ta(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function Fa(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Da(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ma=on({logSumExp_:function(e,t=null,n=!1){const r=sn(e,"x","logSumExp"),s=v(t,r.shape),a=Na(r,s,!0),i=Sa(r,a),o=Qs(i),u=Ca(o,s),l=ba(u),c=Fr(ls(a,l.shape),l);if(n){const e=Aa(c.shape,s);return ls(c,e)}return c}});const Oa=on({logicalAnd_:function(e,t){const n=sn(e,"a","logicalAnd","bool"),r=sn(t,"b","logicalAnd","bool");Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("LogicalAnd",s)}});const La=on({logicalNot_:function(e){const t={x:sn(e,"x","logicalNot","bool")};return nt.runKernel("LogicalNot",t)}});const Ba=on({logicalOr_:function(e,t){const n=sn(e,"a","logicalOr","bool"),r=sn(t,"b","logicalOr","bool");Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("LogicalOr",s)}});const Pa=on({logicalXor_:function(e,t){const n=sn(e,"a","logicalXor","bool"),r=sn(t,"b","logicalXor","bool");return Gs(n.shape,r.shape),Oa(Ba(e,t),La(Oa(e,t)))}});const za=on({maxPool_:function(e,t,n,r,s){const a=sn(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=ls(a,[1,a.shape[0],a.shape[1],a.shape[2]])),l(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),l(os(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=s&&l(m(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s},h=nt.runKernel("MaxPool",u,c);return o?ls(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Va=on({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Cr("dilations is deprecated, this field will be gone in v3.0.0.");const o=sn(e,"x","maxPool3d");let u=o,c=!1;4===o.rank&&(c=!0,u=ls(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),l(5===u.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`),l("NDHWC"===a,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),l(os(n,i),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=s&&l(m(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const h={x:u},p={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},d=nt.runKernel("MaxPool3D",h,p);return c?ls(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Wa=on({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:sn(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=nt.runKernel("MaxPoolWithArgmax",a,i);return{result:o[0],indexes:o[1]}}});const Ua=on({maximum_:function(e,t){let n=sn(e,"a","maximum"),r=sn(t,"b","maximum");[n,r]=Ze(n,r),"bool"===n.dtype&&(n=qn(n,"int32"),r=qn(r,"int32")),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("Maximum",s)}});const Ga=on({mean_:function(e,t=null,n=!1){const r={x:sn(e,"x","mean")},s={axis:t,keepDims:n};return nt.runKernel("Mean",r,s)}});const Ha=on({min_:function(e,t=null,n=!1){const r={x:sn(e,"x","min")},s={axis:t,keepDims:n};return nt.runKernel("Min",r,s)}});const ja=on({minimum_:function(e,t){let n=sn(e,"a","minimum"),r=sn(t,"b","minimum");[n,r]=Ze(n,r),"bool"===n.dtype&&(n=qn(n,"int32"),r=qn(r,"int32")),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("Minimum",s)}});const qa=on({mirrorPad_:function(e,t,n){l("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=sn(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");l(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)l(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),l(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape `+r.shape);const a={paddings:t,mode:n},i={x:r};return nt.runKernel("MirrorPad",i,a)}});const Ka=on({mod_:function(e,t){let n=sn(e,"a","mod"),r=sn(t,"b","mod");[n,r]=Ze(n,r);const s={a:n,b:r};return nt.runKernel("Mod",s)}});const Xa=on({square_:function(e){const t=sn(e,"x","square");return nt.runKernel("Square",{x:t},{})}});const Za=on({moments_:function(e,t=null,n=!1){const r=v(t,(e=sn(e,"x","moments")).shape),s=Ga(e,r,n);let a=s.shape;n||(a=Aa(s.shape,r));const i=Xa(Sa(qn(e,"float32"),ls(s,a)));return{mean:s,variance:Ga(i,r,n)}}});on({multiRNNCell_:function(e,t,n,r){const s=sn(t,"data","multiRNNCell"),a=an(n,"c","multiRNNCell"),i=an(r,"h","multiRNNCell");let o=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});const Ya=on({multinomial_:function(e,t,n,r=!1){const s=sn(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o={logits:1===i?ls(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=nt.runKernel("Multinomial",o,u);return 1===i?ls(l,[l.size]):l}});const Qa=on({notEqual_:function(e,t){let n=sn(e,"a","notEqual"),r=sn(t,"b","notEqual");[n,r]=Ze(n,r),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("NotEqual",s)}});function Ja(e,t="float32"){if("complex64"===t){const t=Ja(e,"float32"),n=Ja(e,"float32");return un(t,n)}const n=M(d(e),t);return nt.makeTensor(n,e,t)}function ei(e,t="float32"){if("complex64"===t){const t=ei(e,"float32"),n=Ja(e,"float32");return un(t,n)}const n=D(d(e),t);return nt.makeTensor(n,e,t)}const ti=on({onesLike_:function(e){const t={x:sn(e,"x","onesLike")};return nt.runKernel("OnesLike",t)}});on({outerProduct_:function(e,t){const n=sn(e,"v1","outerProduct"),r=sn(t,"v2","outerProduct");l(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=ls(n,[-1,1]),a=ls(r,[1,-1]);return rr(s,a)}});const ni=on({pad_:function(e,t,n=0){const r=sn(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return nt.runKernel("PadV2",a,s)}});on({pad1d_:function(e,t,n=0){return l(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),ni(e,[t],n)}});on({pad2d_:function(e,t,n=0){return l(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),ni(e,t,n)}});on({pad3d_:function(e,t,n=0){return l(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),ni(e,t,n)}});on({pad4d_:function(e,t,n=0){return l(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),ni(e,t,n)}});const ri=on({spaceToBatchND_:function(e,t,n){const r=sn(e,"x","spaceToBatchND");l(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),l(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),l(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const s={x:r},a={blockShape:t,paddings:n};return nt.runKernel("SpaceToBatchND",s,a)}});const si=on({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=sn(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=ls(i,[1,i.shape[0],i.shape[1],i.shape[2]])),l(os(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const c=Yr(o.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),a=e.concat(r,s),i=t.map((e,t)=>(e-a[t]%e)%e),o=s.map((e,t)=>e+i[t]),u=t.map((e,t)=>[r[t],o[t]]),l=t.map((e,t)=>[0,i[t]]);return[u,l]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?o:ri(o,h,f),b=("avg"===n?()=>cs(y,t,a,g):()=>za(y,t,a,g))(),x=d?b:gs(b,h,m);return u?ls(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const ai=on({pow_:function(e,t){let n=sn(e,"base","pow"),r=sn(t,"exp","pow");[n,r]=Ze(n,r);const s={a:n,b:r};return nt.runKernel("Pow",s)}});const ii=on({prelu_:function(e,t){const n={x:sn(e,"x","prelu"),alpha:sn(t,"alpha","prelu")};return nt.runKernel("Prelu",n)}});const oi=on({prod_:function(e,t=null,n=!1){let r=sn(e,"x","prod");"bool"===r.dtype&&(r=qn(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return nt.runKernel("Prod",s,a)}});on({rand_:function(e,t,n){const r=d(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return nt.makeTensor(s,e,n)}});var ui={},li=function(){var e={exports:this};return function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function a(e,t){var n=new r(e),a=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,"object"==typeof e&&e,!1),e.exports}.call({}),ci=function(){var e={exports:this};return function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function a(e,t){var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,"object"==typeof e&&e,!1),e.exports}.call({}),hi=function(){var e={exports:this};return function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function a(e,t){var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,"object"==typeof e&&e,!1),e.exports}.call({}),pi=function(){var e={exports:this};return function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function a(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&(a.x&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,"object"==typeof e&&e,!1),e.exports}.call({}),di=function(){var e={exports:this};return function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function a(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&(a.X&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,"object"==typeof e&&e,!1),e.exports}.call({}),fi=function(){var e={exports:this};return function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function a(e,t){var n=new r(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,"object"==typeof e&&e,!1),e.exports}.call({}),mi={};!function(e,t){var n,r=this,s=t.pow(256,6),a=t.pow(2,52),i=2*a;function o(o,p,d){var f=[],m=c(function e(t,n){var r,s=[],a=typeof t;if(n&&"object"==a)for(r in t)try{s.push(e(t[r],n-1))}catch(e){}return s.length?s:"string"==a?t:t+"\0"}((p=1==p?{entropy:!0}:p||{}).entropy?[o,h(e)]:null==o?function(){try{var t;return n&&(t=n.randomBytes)?t=t(256):(t=new Uint8Array(256),(r.crypto||r.msCrypto).getRandomValues(t)),h(t)}catch(t){var s=r.navigator,a=s&&s.plugins;return[+new Date,r,a,r.screen,h(e)]}}():o,3),f),g=new u(f),y=function(){for(var e=g.g(6),t=s,n=0;e<a;)e=256*(e+n),t*=256,n=g.g(1);for(;e>=i;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|g.g(4)},y.quick=function(){return g.g(4)/4294967296},y.double=y,c(h(g.S),e),(p.pass||d||function(e,n,r,s){return s&&(s.S&&l(s,g),e.state=function(){return l(g,{})}),r?(t.random=e,n):e})(y,m,"global"in p?p.global:this==t,p.state)}function u(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<256;)i[s]=s++;for(s=0;s<256;s++)i[s]=i[a=255&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=255&s+1],n=256*n+i[255&(i[s]=i[a=255&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(256)}function l(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function c(e,t){for(var n,r=e+"",s=0;s<r.length;)t[255&s]=255&(n^=19*t[255&s])+r.charCodeAt(s++);return h(t)}function h(e){return String.fromCharCode.apply(0,e)}if(t.seedrandom=o,c(t.random(),e),mi){mi=o;try{n=Wn()}catch(e){}}else 0}([],Math),mi.alea=li,mi.xor128=ci,mi.xorwow=hi,mi.xorshift7=pi,mi.xor4096=di,mi.tychei=fi,ui=mi;class gi{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=ui.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class yi{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=ui.alea(s.toString()),this.randn=new gi(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class bi{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ui.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}on({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const a=new yi(t,n,r,s),i=jn(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const xi=on({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const a=new gi(t,n,r,!1,s),i=jn(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const vi=on({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=jn(e,r),i=new bi(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function wi(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return nt.runKernel("Range",{},s)}const ki=on({real_:function(e){const t={input:sn(e,"input","real")};return nt.runKernel("Real",t)}});const Ii=on({reciprocal_:function(e){const t={x:sn(e,"x","reciprocal")};return nt.runKernel("Reciprocal",t)}});const Ni=on({relu_:function(e){const t={x:sn(e,"x","relu")};return nt.runKernel("Relu",t)}});const Si=on({relu6_:function(e){const t={x:sn(e,"x","relu6")};return nt.runKernel("Relu6",t)}});const Ci=on({reverse_:function(e,t){const n={x:sn(e,"x","reverse")},r={dims:t};return nt.runKernel("Reverse",n,r)}});on({reverse1d_:function(e){const t=sn(e,"x","reverse");return l(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ci(t,0)}});on({reverse2d_:function(e,t){const n=sn(e,"x","reverse");return l(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Ci(n,t)}});on({reverse3d_:function(e,t){const n=sn(e,"x","reverse");return l(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Ci(n,t)}});on({reverse4d_:function(e,t){const n=sn(e,"x","reverse");return l(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Ci(n,t)}});const Ei=on({round_:function(e){const t={x:sn(e,"x","round")};return nt.runKernel("Round",t)}});const Ti=on({rsqrt_:function(e){const t={x:sn(e,"x","rsqrt")};return nt.runKernel("Rsqrt",t)}});function _i(e,t){if((S(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&S(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ln(e,[],[],t)}const Ai=on({selu_:function(e){const t={x:sn(e,"x","selu")};return nt.runKernel("Selu",t)}});const Ri=on({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=sn(e,"x","separableConv2d"),u=sn(t,"depthwiseFilter","separableConv2d"),c=sn(n,"pointwiseFilter","separableConv2d");let h=o,p=!1;if(3===o.rank&&(p=!0,h=ls(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");l(4===h.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),l(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),l(4===c.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),l(1===c.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),l(1===c.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=u.shape[2],f=u.shape[3];l(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const m=zs(h,u,r,s,i,a),g=_s(m,c,1,"valid",i);return p?ls(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const $i=async function(e,t){const n=sn(e,"x","setdiff1d"),r=sn(t,"y","setdiff1d");l(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),l(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),l(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const u=new Re([o],n.dtype),c=new Re([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]};const Fi=on({sign_:function(e){const t={x:sn(e,"x","sign")};return nt.runKernel("Sign",t)}});const Di=on({sin_:function(e){const t={x:sn(e,"x","sin")};return nt.runKernel("Sin",t)}});const Mi=on({sinh_:function(e){const t={x:sn(e,"x","sinh")};return nt.runKernel("Sinh",t)}});const Oi=on({slice1d_:function(e,t,n){const r=sn(e,"x","slice1d");return l(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),fs(r,[t],[n])}});const Li=on({slice2d_:function(e,t,n){const r=sn(e,"x","slice2d");return l(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),fs(r,t,n)}});const Bi=on({slice3d_:function(e,t,n){const r=sn(e,"x","slice3d");return l(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),fs(r,t,n)}});const Pi=on({slice4d_:function(e,t,n){const r=sn(e,"x","slice4d");return l(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),fs(r,t,n)}});const zi=on({softmax_:function(e,t=-1){const n=sn(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return nt.runKernel("Softmax",r,s)}});const Vi=on({fft_:function(e){l("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return nt.runKernel("FFT",t)}});const Wi=on({ifft_:function(e){l("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return nt.runKernel("IFFT",t)}});const Ui=on({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=ls(e,[n,t]);r=Wi(s)}else{const s=[n,2*(t-1)],a=ls(ki(e),[n,t]),i=ls(ua(e),[n,t]),o=Ci(fs(a,[0,1],[n,t-2]),1),u=Or(Ci(fs(i,[0,1],[n,t-2]),1),_i(-1)),l=ps([a,o],1),c=ps([i,u],1),h=ls(un(l,c),[s[0],s[1]]);r=Wi(h)}if(r=ki(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ls(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const Gi=on({split_:function(e,t,n=0){const r={x:sn(e,"x","split")},s={numOrSizeSplits:t,axis:n};return nt.runKernel("SplitV",r,s)}});const Hi=on({rfft_:function(e,t){l("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,s=fs(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=ps([e,Ja(r)],e.shape.length-1),n=t}else s=e;const a=qs(s),i=ls(un(s,a),[r,n]),o=Vi(i),u=Math.floor(n/2)+1,c=ki(o),h=ua(o),p=Gi(c,[u,n-u],c.shape.length-1),d=Gi(h,[u,n-u],h.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,ls(un(p[0],d[0]),f)}});const ji=on({sqrt_:function(e){const t={x:sn(e,"x","sqrt")};return nt.runKernel("Sqrt",t)}});const qi=on({squaredDifference_:function(e,t){let n=sn(e,"a","squaredDifference"),r=sn(t,"b","squaredDifference");[n,r]=Ze(n,r),Gs(n.shape,r.shape);const s={a:n,b:r};return nt.runKernel("SquaredDifference",s,{})}});const Ki=on({squeeze_:function(e,t){const n=sn(e,"x","squeeze");return ls(n,w(n.shape,t).newShape)}});const Xi=on({stack_:function(e,t=0){const n=an(e,"tensors","stack","string_or_numeric");l(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&l(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:t};return nt.runKernel("Pack",r,s)}});const Zi=on({step_:function(e,t=0){const n={x:sn(e,"x","step")},r={alpha:t};return nt.runKernel("Step",n,r)}});const Yi=on({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,u=0){const l={x:sn(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return nt.runKernel("StridedSlice",l,c)}});const Qi=on({tan_:function(e){const t={x:sn(e,"x","tan")};return nt.runKernel("Tan",t)}});function Ji(e,t){h(e);const n=nn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ln(e,null,n,t)}function eo(e,t,n){if(h(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=nn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ln(e,t,r,n)}const to=on({topk_:function(e,t=1,n=!0){const r=sn(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+t);const a={x:r},i={k:t,sorted:n},[o,u]=nt.runKernel("TopK",a,i);return{values:o,indices:u}}});const no=on({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new gi(t,n,r,!0,s),i=jn(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const ro=on({unique_:function(e,t=0){const n=sn(e,"x","unique","string_or_numeric");l(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[a,i]=nt.runKernel("Unique",r,s);return{values:a,indices:i}}});const so=on({unsortedSegmentSum_:function(e,t,n){const r=sn(e,"x","unsortedSegmentSum"),s=sn(t,"segmentIds","unsortedSegmentSum","int32");l(m(n),()=>"numSegments must be of dtype int");const a={x:r,segmentIds:s},i={numSegments:n};return nt.runKernel("UnsortedSegmentSum",a,i)}});const ao=on({unstack_:function(e,t=0){const n=sn(e,"x","unstack","string_or_numeric");l(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:t};return nt.runKernel("Unpack",r,s)}});function io(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=jn(e,"int32"),s=jn([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const oo=async function(e){const t=sn(e,"condition","whereAsync","bool"),n=await t.data(),r=io(t.shape,n);return e!==t&&t.dispose(),r};const uo=on({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=ls(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ls(t,[1,t.shape[0],t.shape[1],t.shape[2]])),l(4===o.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."),l(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),l(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const c="NHWC"===a?o.shape[3]:o.shape[1],h="NHWC"===a?u.shape[3]:u.shape[1];l(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),l(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`),null!=i&&l(m(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const p={x:o,dy:u},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return nt.runKernel("Conv2DBackpropFilter",p,d)}});function lo(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Or(e,Zi(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function co(e,t){let n=t;const r=Us(e.shape,t.shape);return r.length>0&&(n=Ca(n,r)),ls(n,e.shape)}function ho(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ni(e);if("elu"===t)return Zs(e);if("relu6"===t)return Si(e);if("prelu"===t)return ii(e,n);if("leakyrelu"===t)return pa(e,r);throw new Error(`Unknown fused activation ${t}.`)}const po=(e,t)=>!(e>0)||"linear"===t;const fo=on({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(u=u||"linear",!1===po(nt.state.gradientDepth,u)){let l=_s(e,t,n,r,s,a,i);return null!=o&&(l=Fr(l,o)),ho(l,u,c,h)}const p=sn(e,"x","conv2d"),d=sn(t,"filter","conv2d");let f=p,g=!1;3===p.rank&&(g=!0,f=ls(p,[1,p.shape[0],p.shape[1],p.shape[2]])),l(4===f.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+f.rank+"."),l(4===d.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+d.rank+"."),null!=i&&l(m(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),l(f.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${d.shape[2]}.`),l(os(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),l("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const y=Jr(f.shape,d.shape,n,a,r,i);let b,x;null!=o&&(b=sn(o,"bias","fused conv2d"),[b]=Ze(b,p),Gs(y.outShape,b.shape)),null!=c&&(x=sn(c,"prelu weights","fused conv2d"));const v=(e,t)=>{const[s,i,o,c]=t,h=lo(e,o,u);l(is(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const p=[Rs(i.shape,h,s,n,r),uo(i,h,s.shape,n,r)];if(null!=c){const e=co(c,h);p.push(e)}return p},w={x:f,filter:d,bias:b,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:h};if(null==o){return va((e,t,n)=>{let r=nt.runKernel("FusedConv2D",w,k);return n([t,e,r]),g&&(r=ls(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}})(f,d)}return va((e,t,n,r)=>{let s=nt.runKernel("FusedConv2D",w,k);return r([t,e,s,n]),g&&(s=ls(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}})(f,d,b)}});const mo=on({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=ls(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ls(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return nt.runKernel("DepthwiseConv2dNativeBackpropFilter",l,c)}});const go=on({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=ls(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=nt.runKernel("DepthwiseConv2dNativeBackpropInput",l,c);return u?ls(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const yo=on({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(!1===po(nt.state.gradientDepth,u)){let l=zs(e,t,n,r,s,a,i);return null!=o&&(l=Fr(l,o)),ho(l,u,c,h)}const p=sn(e,"x","depthwiseConv2d"),d=sn(t,"filter","depthwiseConv2d");let f=p,g=!1;3===p.rank&&(g=!0,f=ls(p,[1,p.shape[0],p.shape[1],p.shape[2]])),l(4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),l(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),l(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==a&&(a=[1,1]),l(os(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=i&&l(m(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const y=Jr(f.shape,d.shape,n,a,r,i,!0);let b,x;null!=o&&(b=sn(o,"bias","fused conv2d"),[b]=Ze(b,p),Gs(y.outShape,b.shape)),null!=c&&(x=sn(c,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{l(is(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[s,o,c,h]=t,p=lo(e,c,u),d=go(o.shape,p,s,n,r,a,i),f=mo(o,p,s.shape,n,r,a,i);if(null!=h){return[d,f,co(b,p)]}return[d,f]},w={x:f,filter:d,bias:b,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:h};if(null==o){return va((e,t,n)=>{let r=nt.runKernel("FusedDepthwiseConv2D",w,k);return n([t,e,r]),g&&(r=ls(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}})(f,d)}return va((e,t,n,r)=>{let s=nt.runKernel("FusedDepthwiseConv2D",w,k);return r([t,e,s,n]),g&&(s=ls(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}})(f,d,b)}});const bo=on({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===po(nt.state.gradientDepth,a)){let u=rr(e,t,n,r);return null!=s&&(u=Fr(u,s)),ho(u,a,i,o)}let u=sn(e,"a","fused matMul"),c=sn(t,"b","fused matMul");[u,c]=Ze(u,c);const h=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?c.shape[c.rank-1]:c.shape[c.rank-2],m=n?u.shape[u.rank-1]:u.shape[u.rank-2],g=r?c.shape[c.rank-2]:c.shape[c.rank-1],y=u.shape.slice(0,-2),b=c.shape.slice(0,-2),x=d(y),v=d(b);l(u.rank>=2&&c.rank>=2&&u.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${c.rank}.`),l(f(y,b),()=>`Error in fused matMul: outer dimensions (${y}) and (${b}) of Tensors with shapes ${u.shape} and `+c.shape+" must match."),l(h===p,()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=u.shape.slice(0,-2).concat([m,g]),k=ls(u,n?[x,h,m]:[x,m,h]),I=ls(c,r?[v,g,p]:[v,p,g]);let N,S;null!=s&&(N=sn(s,"bias","fused matMul"),[N]=Ze(N,u),Gs(w,N.shape)),null!=i&&(S=sn(i,"prelu weights","fused matMul"));const C=(e,t)=>{const[i,o,u,l]=t,c=lo(ls(e,u.shape),u,a);let h,p;if(n||r?!n&&r?(h=rr(c,o,!1,!1),p=rr(c,i,!0,!1)):n&&!r?(h=rr(o,c,!1,!0),p=rr(i,c,!1,!1)):(h=rr(o,c,!0,!0),p=rr(c,i,!0,!0)):(h=rr(c,o,!1,!0),p=rr(i,c,!0,!1)),null!=s){return[h,p,co(l,c)]}return[h,p]},E={a:k,b:I,bias:N,preluActivationWeights:S},T={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){return va((e,t,n)=>{const r=nt.runKernel("_FusedMatMul",E,T);return n([e,t,r]),{value:ls(r,w),gradFunc:C}})(k,I)}return va((e,t,n,r)=>{const s=nt.runKernel("_FusedMatMul",E,T);return r([e,t,s,n]),{value:ls(s,w),gradFunc:C}})(k,I,N)}});on({hammingWindow_:function(e){return nu(e,.54,.46)}});const xo=on({hannWindow_:function(e){return nu(e,.5,.5)}});const vo=on({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(fs(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=ps([fs(e,a,t-r),ra([r],s)]);i.push(o),a+=n}return 0===i.length?eo([],[0,t]):ls(ps(i),[i.length,t])}});on({stft_:function(e,t,n,r,s=xo){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=vo(e,t,n),o=Or(i,s(t)),u=[];for(let e=0;e<i.shape[0];e++)u.push(Hi(fs(o,[e,0],[1,t]),r));return ps(u)}});const wo=on({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=sn(e,"image","cropAndResize"),o=sn(t,"boxes","cropAndResize","float32"),u=sn(n,"boxInd","cropAndResize","int32"),c=o.shape[0];l(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),l(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),l(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),l(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),l(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),l("bilinear"===s||"nearest"===s,()=>"method must be bilinear or nearest, but was "+s);const h={image:i,boxes:o,boxInd:u},p={method:s,extrapolationValue:a,cropSize:r};return nt.runKernel("CropAndResize",h,p)}});const ko=on({flipLeftRight_:function(e){const t=sn(e,"image","flipLeftRight","float32");l(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return nt.runKernel("FlipLeftRight",n,{})}});const Io=on({rotateWithOffset_:function(e,t,n=0,r=.5){const s=sn(e,"image","rotateWithOffset","float32");l(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const a={image:s},i={radians:t,fillValue:n,center:r};return nt.runKernel("RotateWithOffset",a,i)}});function No(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),l(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),l(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),l(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),l(1===t.rank,()=>"scores must be a 1D tensor"),l(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0]),l(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const So=on({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=sn(e,"boxes","nonMaxSuppression"),i=sn(t,"scores","nonMaxSuppression"),o=No(a,i,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return nt.runKernel("NonMaxSuppressionV3",{boxes:a,scores:i},u)}});function Co(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Eo)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Eo(e,t){return e>t?1:e<t?-1:0}function To(e,t,n,r,s){return Ro(e,t,n,r,s,0)}function _o(e,t,n,r,s,a){return Ro(e,t,n,r,s,0,!1,a,!0)}function Ao(e,t,n,r,s,a){return Ro(e,t,n,r,s,a,!0)}function Ro(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Do);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=$o(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Fo(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>s&&Co(l,t,Do))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),u&&(m.validOutputs=d),m}function $o(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function Fo(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Do(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Mo=on({equalStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","equalStrict"),r=sn(t,"b","equalStrict");return c(n.shape,r.shape,"Error in equalStrict: "),Hs(n,r)}}),Oo=on({greaterEqualStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","greaterEqualStrict"),r=sn(t,"b","greaterEqualStrict");return c(n.shape,r.shape,"Error in greaterEqualStrict: "),oa(n,r)}}),Lo=on({greaterStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","greaterStrict"),r=sn(t,"b","greaterStrict");return c(n.shape,r.shape,"Error in greaterStrict: "),ia(n,r)}}),Bo=on({lessEqualStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","lessEqualStrict"),r=sn(t,"b","lessEqualStrict");return c(n.shape,r.shape,"Error in lessEqualStrict: "),fa(n,r)}}),Po=on({lessStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","lessStrict"),r=sn(t,"b","lessStrict");return c(n.shape,r.shape,"Error in lessStrict: "),da(n,r)}}),zo=on({notEqualStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","notEqualStrict"),r=sn(t,"b","notEqualStrict");return c(n.shape,r.shape,"Error in notEqualStrict: "),Qa(n,r)}});const Vo=on({addStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","addStrict"),r=sn(t,"b","addStrict");return c(n.shape,r.shape,"Error in addStrict: "),Fr(n,r)}}),Wo=on({divStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","div"),r=sn(t,"b","div");return c(n.shape,r.shape,"Error in divideStrict: "),Mr(n,r)}}),Uo=on({maximumStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","maximumStrict"),r=sn(t,"b","maximumStrict");return c(n.shape,r.shape,"Error in maximumStrict: "),Ua(n,r)}}),Go=on({minimumStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","minimumStrict"),r=sn(t,"b","minimumStrict");return c(n.shape,r.shape,"Error in minimumStrict: "),ja(n,r)}}),Ho=on({modStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","modStrict"),r=sn(t,"b","modStrict");return c(n.shape,r.shape,"Error in modStrict: "),Ka(n,r)}}),jo=on({mulStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","mul"),r=sn(t,"b","mul");return c(n.shape,r.shape,"Error in multiplyStrict: "),Or(n,r)}}),qo=on({powStrict_:function(e,t){return Cr("strict variants of ops have been deprecated and will be removed in future"),c(e.shape,t.shape,"Error in powStrict: "),ai(e,t)}}),Ko=on({squaredDifferenceStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","squaredDifferenceStrict"),r=sn(t,"b","squaredDifferenceStrict");return c(n.shape,r.shape,"Error in squaredDifferenceStrict: "),qi(n,r)}}),Xo=on({subStrict_:function(e,t){Cr("strict variants of ops have been deprecated and will be removed in future");const n=sn(e,"a","subStrict"),r=sn(t,"b","subStrict");return c(n.shape,r.shape,"Error in subStrict: "),Sa(n,r)}});const Zo=on({norm_:function(e,t="euclidean",n=null,r=!1){const s=function e(t,n,r=null){if(0===t.rank)return Lr(t);if(1!==t.rank&&null===r)return e(ls(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Ca(Lr(t),r);if(n===1/0)return Na(Lr(t),r);if(n===-1/0)return Ha(Lr(t),r);if("euclidean"===n||2===n)return ji(Ca(ai(Lr(t),_i(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Na(Ca(Lr(t),r[0]),r[1]-1);if(n===1/0)return Na(Ca(Lr(t),r[1]),r[0]);if(n===-1/0)return Ha(Ca(Lr(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return ji(Ca(Xa(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=sn(e,"x","norm"),t,n);let a=s.shape;if(r){const t=v(n,e.shape);a=Aa(s.shape,t)}return ls(s,a)}});on({movingAverage_:function(e,t,n,r,s=!0){const a=sn(e,"v","movingAverage"),i=sn(t,"x","movingAverage"),o=sn(n,"decay","movingAverage");var u,c;c=i,l((u=a).dtype===c.dtype,()=>`The dtypes of the first(${u.dtype}) and second(${c.dtype}) input must match`),l(f(a.shape,i.shape),()=>"Shape mismatch in v and x");const h=_i(1),p=Sa(h,o);let d=Or(Sa(i,a),p);if(s){l(null!=r,()=>"When using zeroDebias: true, step is required.");const e=sn(r,"step","movingAverage");d=Mr(d,Sa(h,ai(o,e)))}return Fr(a,d)}});const Yo=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=sn(e,"boxes","nonMaxSuppressionAsync"),i=sn(t,"scores","nonMaxSuppressionAsync"),o=No(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=To(l,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Ji(h,"int32")};const Qo=on({scatterND_:function(e,t,n){const r=sn(e,"indices","scatterND","int32"),s=sn(t,"updates","scatterND");lr(s,r,n);const a={indices:r,updates:s},i={shape:n};return nt.runKernel("ScatterNd",a,i)}});const Jo=on({sparseToDense_:function(e,t,n,r=0){const s=sn(e,"sparseIndices","sparseToDense","int32"),a=sn(t,"sparseValues","sparseToDense"),i=sn(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return nt.runKernel("SparseToDense",o,u)}});const eu=on({gatherND_:function(e,t){const n=sn(t,"indices","gatherND","int32"),r={params:sn(e,"x","gatherND"),indices:n};return nt.runKernel("GatherNd",r)}});const tu=on({dropout_:function(e,t,n,r){const s=sn(e,"x","dropout");if(l("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),l(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Me?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(f(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Mr(sa(Fr(vi(a,0,1,"float32",r),i)),i);return Or(s,o)}});function nu(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Ji(s,"float32")}const ru=on({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=sn(e,"boxes","nonMaxSuppression"),o=sn(t,"scores","nonMaxSuppression"),u=No(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=nt.runKernel("NonMaxSuppressionV5",l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const su=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=sn(e,"boxes","nonMaxSuppressionAsync"),o=sn(t,"scores","nonMaxSuppressionAsync"),u=No(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=Ao(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ji(p,"int32"),selectedScores:Ji(d)}};const au=on({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=sn(e,"boxes","nonMaxSuppression"),o=sn(t,"scores","nonMaxSuppression"),u=No(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=nt.runKernel("NonMaxSuppressionV4",l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const iu=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=sn(e,"boxes","nonMaxSuppressionAsync"),o=sn(t,"scores","nonMaxSuppressionAsync"),u=No(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=_o(p,d,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ji(f,"int32"),validOutputs:_i(m,"int32")}};const ou=on({resizeBilinear_:function(e,t,n=!1,r=!1){const s=sn(e,"images","resizeBilinear");l(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),l(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),l(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=ls(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},c=nt.runKernel("ResizeBilinear",o,u);return i?ls(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const uu=on({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=sn(e,"images","resizeNearestNeighbor");l(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),l(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),l("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),l(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=ls(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},c=nt.runKernel("ResizeNearestNeighbor",o,u);return i?ls(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const lu=on({bandPart_:function(e,t,n){l(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),l(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=sn(e,"a","bandPart");l(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=ls(wi(0,a,1,"int32"),[-1,1]),u=wi(0,i,1,"int32"),c=Sa(o,u),h=Oa(fa(c,_i(+t,"int32")),oa(c,_i(-n,"int32"))),p=Ja([a,i],r.dtype);return ls(Xi(ao(ls(r,[-1,a,i])).map(e=>js(h,e,p))),s)}});const cu=on({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,l(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)l(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Gi(e,e.shape[0],0).map(e=>Ki(e,[0]));l(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(nt.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Or(Ca(Or(n[r],e)),n[r]);e=Sa(e,t)}return Mr(e,Zo(e,"euclidean"))}));return t?Xi(n,0):n}});function hu(e,t=!1){return nt.tidy(()=>{l(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=na(n),a=Kn(e);const i=eo([[1]],[1,1]);let o=Kn(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=nt.tidy(()=>{const t=fs(a,[e,e],[n-e,1]),u=Zo(t),l=fs(a,[e,e],[1,1]),c=js(ia(l,0),eo([[-1]]),eo([[1]])),h=Sa(l,Or(c,u)),p=Mr(t,h);o=1===p.shape[0]?Kn(i):ps([i,fs(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=wa(Mr(rr(c,h),u)),f=fs(a,[e,0],[n-e,r]),m=Or(d,o),g=ar(o);if(0===e)a=Sa(f,rr(m,rr(g,f)));else{const t=Sa(f,rr(m,rr(g,f)));a=ps([fs(a,[0,0],[e,r]),t],0)}const y=ar(m),b=fs(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Sa(b,rr(rr(b,o),y));else{const t=Sa(b,rr(rr(b,o),y));s=ps([fs(s,[0,0],[n,e]),t],1)}return[o,a,s]}),Ar([t,u,l])}return!t&&n>r&&(s=fs(s,[0,0],[n,r]),a=fs(a,[0,0],[r,r])),[s,a]})}const pu=on({qr_:function(e,t=!1){if(l(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return hu(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=ao(ls(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach(e=>{const[n,r]=hu(e,t);s.push(n),a.push(r)});return[ls(Xi(s,0),e.shape),ls(Xi(a,0),e.shape)]}}});var du,fu;(fu=du||(du={}))[fu.NONE=0]="NONE",fu[fu.MEAN=1]="MEAN",fu[fu.SUM=2]="SUM",fu[fu.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const mu=on({computeWeightedLoss_:function(e,t,n=du.SUM_BY_NONZERO_WEIGHTS){const r=sn(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=sn(t,"weights","computeWeightedLoss"));const a=null==s?r:Or(r,s);if(n===du.NONE)return a;if(n===du.SUM)return Ca(a);if(n===du.MEAN){if(null==s)return Ga(a);{const e=r.size/s.size,t=Mr(Ca(a),Ca(s));return e>1?Mr(t,_i(e)):t}}if(n===du.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Mr(Ca(a),_i(r.size));{const e=Or(s,ei(r.shape)),t=qn(Ca(Qa(e,_i(0))),"float32");return Mr(Ca(a),t)}}throw Error("Unknown reduction: "+n)}});on({absoluteDifference_:function(e,t,n,r=du.SUM_BY_NONZERO_WEIGHTS){const s=sn(e,"labels","absoluteDifference"),a=sn(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=sn(n,"weights","absoluteDifference")),c(s.shape,a.shape,"Error in absoluteDifference: ");const o=Lr(Sa(s,a));return mu(o,i,r)}});on({cosineDistance_:function(e,t,n,r,s=du.SUM_BY_NONZERO_WEIGHTS){const a=sn(e,"labels","cosineDistance"),i=sn(t,"predictions","cosineDistance");let o=null;null!=r&&(o=sn(r,"weights","cosineDistance")),c(a.shape,i.shape,"Error in cosineDistance: ");const u=_i(1),l=Sa(u,Ca(Or(a,i),n,!0));return mu(l,o,s)}});on({hingeLoss_:function(e,t,n,r=du.SUM_BY_NONZERO_WEIGHTS){let s=sn(e,"labels","hingeLoss");const a=sn(t,"predictions","hingeLoss");let i=null;null!=n&&(i=sn(n,"weights","hingeLoss")),c(s.shape,a.shape,"Error in hingeLoss: ");const o=_i(1);s=Sa(Or(_i(2),s),o);const u=Ni(Sa(o,Or(s,a)));return mu(u,i,r)}});on({huberLoss_:function(e,t,n,r=1,s=du.SUM_BY_NONZERO_WEIGHTS){const a=sn(e,"labels","huberLoss"),i=sn(t,"predictions","huberLoss");let o=null;null!=n&&(o=sn(n,"weights","huberLoss")),c(a.shape,i.shape,"Error in huberLoss: ");const u=_i(r),l=Lr(Sa(i,a)),h=ja(l,u),p=Sa(l,h),d=Fr(Or(_i(.5),Xa(h)),Or(u,p));return mu(d,o,s)}});on({logLoss_:function(e,t,n,r=1e-7,s=du.SUM_BY_NONZERO_WEIGHTS){const a=sn(e,"labels","logLoss"),i=sn(t,"predictions","logLoss");let o=null;null!=n&&(o=sn(n,"weights","logLoss")),c(a.shape,i.shape,"Error in logLoss: ");const u=_i(1),l=_i(r),h=wa(Or(a,ba(Fr(i,l)))),p=Or(Sa(u,a),ba(Fr(Sa(u,i),l))),d=Sa(h,p);return mu(d,o,s)}});on({meanSquaredError_:function(e,t,n,r=du.SUM_BY_NONZERO_WEIGHTS){const s=sn(e,"labels","meanSquaredError"),a=sn(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=sn(n,"weights","meanSquaredError")),c(s.shape,a.shape,"Error in meanSquaredError: ");const o=qi(s,a);return mu(o,i,r)}});on({sigmoidCrossEntropy_:function(e,t,n,r=0,s=du.SUM_BY_NONZERO_WEIGHTS){let a=sn(e,"multiClassLabels","sigmoidCrossEntropy");const i=sn(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=sn(n,"weights","sigmoidCrossEntropy")),c(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=_i(r),t=_i(1),n=_i(.5);a=Fr(Or(a,Sa(t,e)),Or(n,e))}const u=function(e,t){const n=sn(e,"labels","sigmoidCrossEntropyWithLogits"),r=sn(t,"logits","sigmoidCrossEntropyWithLogits");c(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ni(r),a=Or(r,n),i=xa(Qs(wa(Lr(r))));return Fr(Sa(s,a),i)}(a,i);return mu(u,o,s)}});on({softmaxCrossEntropy_:function(e,t,n,r=0,s=du.SUM_BY_NONZERO_WEIGHTS){let a=sn(e,"onehotLabels","softmaxCrossEntropy");const i=sn(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=sn(n,"weights","softmaxCrossEntropy")),c(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=_i(r),t=_i(1),n=_i(a.shape[1]);a=Fr(Or(a,Sa(t,e)),Mr(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return va((e,t,r)=>{const s=Ma(t,[n],!0),a=Sa(qn(t,"float32"),s);r([e,a]);const i=wa(Or(a,e));return{value:Ca(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Aa(e.shape,[n]);return[Or(ls(e,a),Sa(qn(r,"float32"),Qs(s))),Or(ls(e,a),Sa(Qs(s),qn(r,"float32")))]}}})(e,t)}(a,i);return mu(u,o,s)}});const gu={flipLeftRight:ko,resizeNearestNeighbor:uu,resizeBilinear:ou,rotateWithOffset:Io,cropAndResize:wo,nonMaxSuppression:So,nonMaxSuppressionAsync:Yo,nonMaxSuppressionWithScore:ru,nonMaxSuppressionWithScoreAsync:su,nonMaxSuppressionPadded:au,nonMaxSuppressionPaddedAsync:iu},yu={bandPart:lu,gramSchmidt:cu,qr:pu};class bu extends Ir{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return Ar(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){l(A(e),()=>"The f passed in variableGrads(f) must be a function"),l(null==t||Array.isArray(t)&&t.every(e=>e instanceof Oe),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in nt.registeredVariables)t.push(nt.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;l((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:i}=nt.gradients(e,t,null,!0);l(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),l(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Ar(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:_i(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(bu,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class xu extends bu{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=nt.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=nt.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:_r(()=>qs(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:_r(()=>qs(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;_r(()=>{const e=Fr(Or(a,this.rho),Or(Xa(s),1-this.rho)),t=Or(Mr(ji(Fr(i,this.epsilon)),ji(Fr(a,this.epsilon))),s),n=Fr(Or(i,this.rho),Or(Xa(t),1-this.rho));a.assign(e),i.assign(n);const o=Fr(Or(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ar(this.accumulatedGrads.map(e=>e.variable)),Ar(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}xu.className="Adadelta",Sr(xu);class vu extends bu{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=nt.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:_r(()=>ra(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;_r(()=>{const e=Fr(a,Xa(s));a.assign(e);const t=Fr(Or(Mr(s,ji(Fr(e,nt.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ar(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}vu.className="Adagrad",Sr(vu);class wu extends bu{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],_r(()=>{this.accBeta1=_i(t).variable(),this.accBeta2=_i(n).variable()}),null==r&&(this.epsilon=nt.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);_r(()=>{const n=Sa(1,this.accBeta1),r=Sa(1,this.accBeta2);t.forEach((t,s)=>{const a=nt.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:_r(()=>qs(a).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:t+"/v",variable:_r(()=>qs(a).variable(!1))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=Fr(Or(o,this.beta1),Or(i,1-this.beta1)),c=Fr(Or(u,this.beta2),Or(Xa(i),1-this.beta2)),h=Mr(l,n),p=Mr(c,r);o.assign(l),u.assign(c);const d=Fr(Or(Mr(h,Fr(ji(p),this.epsilon)),-this.learningRate),a);a.assign(d)}),this.accBeta1.assign(Or(this.accBeta1,this.beta1)),this.accBeta2.assign(Or(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ar(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Ar(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),_r(()=>{this.accBeta1.assign(ai(this.beta1,this.iterations_+1)),this.accBeta2.assign(ai(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}wu.className="Adam",Sr(wu);class ku extends bu{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],_r(()=>{this.iteration=_i(0).variable(),this.accBeta1=_i(t).variable()}),null==r&&(this.epsilon=nt.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);_r(()=>{const n=Sa(1,this.accBeta1),r=Mr(-this.learningRate,Fr(Or(this.iteration,this.decay),1));t.forEach((t,s)=>{const a=nt.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:qs(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:t+"/v",variable:qs(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=Fr(Or(o,this.beta1),Or(i,1-this.beta1)),c=Or(u,this.beta2),h=Lr(i),p=Ua(c,h);o.assign(l),u.assign(p);const d=Fr(Or(Mr(r,n),Mr(l,Fr(p,this.epsilon))),a);a.assign(d)}),this.iteration.assign(Fr(this.iteration,1)),this.accBeta1.assign(Or(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ar(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Ar(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}ku.className="Adamax",Sr(ku);class Iu extends bu{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=nt.registeredVariables[t];_r(()=>{const e=Fr(Or(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Rr(_i(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Iu.className="SGD",Sr(Iu);class Nu extends Iu{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=_i(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=nt.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:_r(()=>qs(r).variable(e))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&_r(()=>{let e;const t=Fr(Or(this.m,s),a);e=this.useNesterov?Fr(Or(this.c,Fr(a,Or(t,this.m))),r):Fr(Or(this.c,t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ar(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Nu.className="Momentum",Sr(Nu);class Su extends bu{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=nt.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=nt.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:_r(()=>qs(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:_r(()=>qs(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:_r(()=>qs(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;_r(()=>{const e=Fr(Or(a,this.decay),Or(Xa(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,o=Fr(Or(t,this.decay),Or(s,1-this.decay)),u=Mr(Or(s,this.learningRate),ji(Sa(e,Fr(Xa(o),this.epsilon)))),l=Fr(Or(i,this.momentum),u);a.assign(e),t.assign(o),i.assign(l);const c=Sa(r,l);r.assign(c)}else{const e=Fr(Or(a,this.decay),Or(Xa(s),1-this.decay)),t=Fr(Or(i,this.momentum),Mr(Or(s,this.learningRate),ji(Fr(e,this.epsilon))));a.assign(e),i.assign(t);const n=Sa(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ar(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Ar(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Ar(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Su.className="RMSProp",Sr(Su);const Cu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Eu(){return new Promise(e=>Cu(()=>e()))}function Tu(e,t){const n=e[0].length;e.forEach((e,t)=>{l(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),l(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let a=0;a<n;a++)l(a===t||e[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function _u(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}class Au{static sgd(e){return new Iu(e)}static momentum(e,t,n=!1){return new Nu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Su(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new wu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new xu(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new ku(e,t,n,r,s)}static adagrad(e,t=.1){return new vu(e,t)}}const Ru={sgd:Au.sgd,momentum:Au.momentum,adadelta:Au.adadelta,adagrad:Au.adagrad,rmsprop:Au.rmsprop,adamax:Au.adamax,adam:Au.adam};const $u=30;function Fu(e){return e<=$u?e:R(e,Math.floor(Math.sqrt(e)))}function Du(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Mu(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Ou(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Lu(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Bu(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Pu(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function zu(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Vu(...e){W().getBool("IS_TEST")||console.warn(...e)}function Wu(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Uu(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Gu(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Hu(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function ju(e,t,n=0){let r=[];if("number"==typeof t)l(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{l(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}l(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function qu(e){try{return e.map(e=>Ie(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+e)}}const Ku={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(e,Zi(qn(n,"float32"),-1))}}},Xu={kernelName:"Acos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Xa(qn(n,"float32")),r=ji(Sa(_i(1),t));return wa(Mr(e,r))}}}},Zu={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ji(Sa(Xa(qn(n,"float32")),1));return Mr(e,t)}}}},Yu={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gs(n.shape,r.shape);return{a:()=>{let t=e;const r=Us(n.shape,s);return r.length>0&&(t=Ca(t,r)),ls(t,n.shape)},b:()=>{let t=e;const n=Us(r.shape,s);return n.length>0&&(t=Ca(t,n)),ls(t,r.shape)}}}},Qu={kernelName:"AddN",saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},Ju={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qs(n)}}},el={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qs(n)}}},tl={kernelName:"Asin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mr(e,ji(Sa(_i(1),Xa(qn(n,"float32")))))}}},nl={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ji(Fr(_i(1),Xa(qn(n,"float32"))));return Mr(e,t)}}}},rl={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gs(n.shape,r.shape);return{a:()=>{const t=Fr(Xa(n),Xa(r));let a=Or(e,Mr(r,t));const i=Us(n.shape,s);return i.length>0&&(a=Ca(a,i)),ls(a,n.shape)},b:()=>{const t=Fr(Xa(n),Xa(r));let a=wa(Or(e,Mr(n,t)));const i=Us(r.shape,s);return i.length>0&&(a=Ca(a,i)),ls(a,r.shape)}}}},sl={kernelName:"Atan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mr(e,Fr(Xa(qn(n,"float32")),1))}}},al={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mr(e,Sa(_i(1),Xa(qn(n,"float32"))))}}};const il=on({avgPool3dGrad_:function(e,t,n,r,s=[1,1,1],a,i){const o=sn(e,"dy","avgPool3dGrad"),u=sn(t,"input","avgPool3dGrad");let c=o,h=u,p=!1;4===u.rank&&(p=!0,c=ls(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ls(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),l(5===c.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+c.rank+"."),l(5===h.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+h.rank+"."),l(os(r,s),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),null!=i&&l(m(a),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const d={dy:c,input:h},f={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},g=nt.runKernel("AvgPool3DGrad",d,f);return p?ls(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ol={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>il(e,r,s,a,l,o,u)}}};const ul=on({avgPoolGrad_:function(e,t,n,r,s){const a=sn(e,"dy","avgPoolGrad"),i=sn(t,"input","avgPoolGrad");l(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,c=!1;3===i.rank&&(c=!0,o=ls(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=ls(a,[1,a.shape[0],a.shape[1],a.shape[2]])),l(4===u.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+u.rank+"."),l(4===o.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+o.rank+".");const h={dy:u,input:o},p={filterSize:n,strides:r,pad:s},d=nt.runKernel("AvgPoolGrad",h,p);return c?ls(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ll={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ul(e,r,s,a,i)}}},cl={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>rr(e,s,!1,!1),b:()=>rr(e,r,!0,!1)}:a&&!i?{a:()=>rr(s,e,!1,!0),b:()=>rr(r,e,!1,!1)}:{a:()=>rr(s,e,!0,!0),b:()=>rr(e,r,!0,!0)}:{a:()=>rr(e,s,!1,!0),b:()=>rr(r,e,!0,!1)}}},hl={kernelName:"BatchToSpaceND",gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ri(e,r,s)}}},pl={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Ca(e,o,!0)}}},dl={kernelName:"Cast",gradFunc:e=>({x:()=>e.clone()})},fl={kernelName:"Ceil",gradFunc:e=>({x:()=>qs(e)})},ml={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>js(Oa(oa(r,s),fa(r,a)),e,qs(e))}}},gl={kernelName:"ComplexAbs",inputsToSave:["x"],gradFunc:Ku.gradFunc},yl={kernelName:"Concat",saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:s}=n,a=v(s,t[0].shape)[0],i=r.map(e=>e[a]);return Gi(e,i,a).map(e=>()=>e)}},bl={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return l(is(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Rs(r.shape,e,s,i,o,u),filter:()=>uo(r,e,s.shape,i,o,u)}}},xl={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>_s(e,s,a,i,o,1,u),filter:()=>uo(e,r,s.shape,a,i,o,u)}}};const vl=on({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=ls(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=ls(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),l(5===a.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+"."),l(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),l(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),l(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),l(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return nt.runKernel("Conv3DBackpropFilterV2",o,u)}}),wl={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;l(is(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>Ds(i.shape,e,o,s,a),filter:()=>vl(i,e,o.shape,s,a)}}},kl={kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(wa(Di(qn(n,"float32"))),e)}}},Il={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(Mi(qn(n,"float32")),e)}}},Nl={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=$a([s],r.rank);let n=Ls(e,s,a,!i);return null!=t&&(n=ar(n,t)),n}}}},Sl={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;l(is(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,c]=t;return l(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),l(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),l(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),l(os(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),null!=i&&l(m(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),{x:()=>go(u.shape,e,c,s,a,r,i),filter:()=>mo(u,e,c.shape,s,a,r,i)}}},Cl={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>nt.runKernel("Dilation2DBackpropInput",a,n),filter:()=>nt.runKernel("Dilation2DBackpropFilter",i,n)}}},El={kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>nt.runKernel("EluGrad",r)}}},Tl={kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Or(Qs(wa(Xa(n))),2/Math.sqrt(Math.PI));return{x:()=>Or(e,r)}}},_l={kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(e,n)}}},Al={kernelName:"ExpandDims",inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ls(e,n.shape)}}},Rl={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(e,Qs(n))}}},$l={kernelName:"Floor",gradFunc:e=>({x:()=>qs(e)})},Fl={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gs(n.shape,r.shape);return{a:()=>{const t=Mr(e,qn(r,"float32")),a=Us(n.shape,s);return a.length>0?ls(Ca(t,a),n.shape):t},b:()=>{let t=Or(e,qn(n,"float32"));const a=Us(r.shape,s);a.length>0&&(t=ls(Ca(t,a),r.shape));const i=Xa(r);return wa(Mr(t,qn(i,"float32")))}}}},Dl={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?_i(1):o,l=Us(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Sa(s,a),p=Or(e,u),d=Ti(Fr(i,_i(r))),f=Or(Or(Or(d,d),d),_i(-.5));return{x:()=>1===a.rank?ls(Or(Or(e,ta(ls(d,[1,1,1,a.shape[0]]),c)),u),s.shape):ls(Or(Or(e,d),u),s.shape),mean:()=>{let e=Or(Or(d,_i(-1)),p);return 1===a.rank&&(e=Ca(e,l)),ls(e,a.shape)},variance:()=>{let e=Or(Or(f,h),p);return 1===a.rank&&(e=Ca(e,l)),ls(e,a.shape)},scale:()=>{const t=Or(h,d);let n=Or(e,t);return 1===a.rank&&(n=Ca(n,l)),ls(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Ca(t,l)),ls(t,a.shape)}}}},Ml={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=v(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=Ol(0,u),p=Ol(u+1,u+1+c),d=Ll([o,[n],l]),f=ls(e,d),m=ls(s,[n]),g=Ll([[u],h,p]),y=ar(f,g);let b=so(y,m,r.shape[i]);const x=Fa(g);return b=ar(b,x),b},indices:()=>s}}};function Ol(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ll(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Bl={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>qs(n),b:()=>qs(r)}}},Pl={kernelName:"Identity",gradFunc:e=>({x:()=>qn(e,"float32")})},zl={kernelName:"IsFinite",gradFunc:e=>({x:()=>qs(e)})},Vl={kernelName:"IsInf",gradFunc:e=>({x:()=>qs(e)})},Wl={kernelName:"IsNan",gradFunc:e=>({x:()=>qs(e)})},Ul={kernelName:"LeakyRelu",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=ia(r,0);return{x:()=>js(a,e,Or(e,s))}}},Gl={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mr(e,Fr(n,1))}}},Hl={kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mr(e,qn(n,"float32"))}}},jl={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Qs(r);return Sa(e,Or(Ca(e,s,!0),t))}}}};const ql=on({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return nt.runKernel("LRNGrad",o,u)}}),Kl={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>ql(r,s,e,a,i,o,u)}}};function Xl(e,t,n,r){return t.rank<n.rank&&(t=ls(t,Aa(t.shape,r))),e.rank<n.rank&&(e=ls(e,Aa(e.shape,r))),{x:()=>Or(e,qn(Hs(n,t),e.dtype))}}const Zl={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Xl(e,t[1],a,v(s,a.shape));return{x:()=>i.x()}}},Yl={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Or(e,qn(oa(n,r),"float32")),b:()=>Or(e,qn(da(n,r),"float32"))}}};const Ql=on({maxPool3dGrad_:function(e,t,n,r,s,a=[1,1,1],i,o){const u=sn(e,"dy","maxPool3dGrad"),c=sn(t,"input","maxPool3dGrad"),h=sn(n,"output","maxPool3dGrad");let p=u,d=c,f=h,g=!1;4===c.rank&&(g=!0,p=ls(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=ls(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),f=ls(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),l(5===p.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+p.rank+"."),l(5===d.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+d.rank+"."),l(5===f.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+f.rank+"."),l(os(s,a),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`),null!=o&&l(m(i),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const y={dy:p,input:d,output:f},b={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},x=nt.runKernel("MaxPool3DGrad",y,b);return g?ls(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),Jl={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>Ql(e,r,s,a,i,c,u,l)}}};const ec=on({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=sn(e,"dy","maxPoolGrad"),u=sn(t,"input","maxPoolGrad"),c=sn(n,"output","maxPoolGrad");l(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),l(4===o.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+o.rank+"."),l(4===u.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+u.rank+"."),null!=i&&l(m(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const h={dy:o,input:u,output:c},p={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return nt.runKernel("MaxPoolGrad",h,p)}}),tc={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>fs(e,a,r.shape)}}},nc={kernelName:"SpaceToBatchND",gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>gs(e,r,s)}}},rc={kernelName:"SplitV",gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>ps(e,r)}}};const sc=[Ku,Xu,Zu,Yu,Qu,Ju,el,tl,nl,rl,sl,al,ol,ll,cl,hl,pl,dl,fl,ml,gl,yl,xl,bl,wl,kl,Il,Nl,Sl,Cl,{kernelName:"RealDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gs(n.shape,r.shape);return{a:()=>{const t=Mr(e,qn(r,"float32")),a=Us(n.shape,s);return a.length>0?ls(Ca(t,a),n.shape):t},b:()=>{let t=Or(e,qn(n,"float32"));const a=Us(r.shape,s);a.length>0&&(t=ls(Ca(t,a),r.shape));const i=Xa(r);return wa(Mr(t,qn(i,"float32")))}}}},El,Tl,_l,Al,Rl,Fl,$l,Dl,Ml,Bl,Pl,zl,Vl,Wl,Ul,Gl,Hl,jl,Kl,Zl,Zl,Yl,Jl,{kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>ec(e,r,s,a,i,o)}}},{kernelName:"Mean",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=v(s,r.shape),i=d(_a(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach(e=>{t[e]=1});const n=ls(e,t);return Mr(Or(n,ei(r.shape,"float32")),i)}}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Xl(e,i,a,v(s,a.shape));return{x:()=>o.x()}}},{kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Or(e,qn(fa(n,r),"float32")),b:()=>Or(e,qn(ia(n,r),"float32"))}}},{kernelName:"MirrorPad",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>fs(e,a,r.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gs(n.shape,r.shape);return{a:()=>{const t=Us(n.shape,s);return t.length>0?ls(Ca(e,t),n.shape):e},b:()=>{const t=Or(e,wa(sa(Mr(n,r)))),a=Us(r.shape,s);return a.length>0?ls(Ca(t,a),r.shape):t}}}},{kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gs(n.shape,r.shape);return{a:()=>{const t=Or(e,qn(r,"float32")),a=Us(n.shape,s);return a.length>0?ls(Ca(t,a),n.shape):t},b:()=>{const t=Or(e,qn(n,"float32")),a=Us(r.shape,s);return a.length>0?ls(Ca(t,a),r.shape):t}}}},{kernelName:"Neg",gradFunc:e=>({x:()=>wa(e)})},{kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Ja(n.shape,"float32")}}},{kernelName:"OnesLike",gradFunc:e=>({x:()=>qs(e)})},{kernelName:"Pack",saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return ao(e,r).map(e=>()=>e)}},tc,tc,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Gs(a.shape,i.shape);return{a:()=>{const t=qn(i,"float32");let n=Or(e,Or(t,ai(a,Sa(t,_i(1)))));const r=Us(a.shape,o);return r.length>0&&(n=Ca(n,r)),ls(n,a.shape)},b:()=>{const t=ia(a,0),n=js(t,ba(a),qs(a));let r=Or(e,Or(s,n));const u=Us(i.shape,o);return u.length>0&&(r=Ca(r,u)),ls(r,i.shape)}}}},{kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ia(n,0);return{x:()=>js(s,e,Or(e,r)),alpha:()=>{let t=js(s,qs(e),Or(e,n));const a=Us(r.shape,e.shape);return a.length>0&&(t=Ca(t,a)),ls(t,r.shape)}}}},{kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mr(e,wa(Xa(n)))}}},{kernelName:"Relu6",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Or(fa(n,6),Zi(n));return{x:()=>Or(e,qn(r,"float32"))}}},{kernelName:"Relu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(e,qn(Zi(n),"float32"))}}},{kernelName:"Reshape",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ls(e,n.shape)}}},{kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>nt.runKernel("ResizeBilinearGrad",s,n)}}},{kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>nt.runKernel("ResizeNearestNeighborGrad",s,n)}}},{kernelName:"Reverse",gradFunc:(e,t,n)=>{const{dims:r}=n,s=v(r,e.shape);return{x:()=>Ci(e,s)}}},{kernelName:"Round",gradFunc:e=>({x:()=>qs(e)})},{kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wa(Mr(e,Or(ai(n,1.5),2)))}}},{kernelName:"Select",inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>qn(qs(n),"float32"),t:()=>Or(e,qn(n,e.dtype)),e:()=>Or(e,qn(La(n),e.dtype))}}},{kernelName:"Selu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ia(n,_i(0)),r=_i(1.7580993408473768),s=_i(1.0507009873554805),a=Or(e,s),i=Or(Or(e,r),Qs(qn(n,"float32")));return js(t,a,i)}}}},{kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(e,Or(n,Sa(_i(1),n)))}}},{kernelName:"Sign",gradFunc:e=>({x:()=>qs(e)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(Ms(qn(n,"float32")),e)}}},{kernelName:"Sinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(Os(qn(n,"float32")),e)}}},{kernelName:"Slice",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=wr(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>ni(e,l)}}},{kernelName:"Softmax",outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Or(e,r);return{logits:()=>Sa(a,Or(Ca(a,[s],!0),r))}}},{kernelName:"Softplus",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(e,ds(n))}}},nc,nc,rc,rc,{kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mr(e,Or(ji(qn(n,"float32")),2))}}},{kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=_i(2);return{a:()=>Or(e,Or(s,Sa(n,r))),b:()=>Or(e,Or(s,Sa(r,n)))}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(e,Or(qn(n,"float32"),2))}}},{kernelName:"Step",gradFunc:e=>({x:()=>qs(e)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gs(n.shape,r.shape);return{a:()=>{let t=e;const r=Us(n.shape,s);return r.length>0&&(t=Ca(t,r)),ls(t,n.shape)},b:()=>{let t=e;const n=Us(r.shape,s);return n.length>0&&(t=Ca(t,n)),ls(wa(t),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;v(a,r.shape).forEach(e=>{s[e]=1});const i=ls(e,s),o=Or(i,ei(r.shape,"float32"));return{x:()=>o}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mr(e,Xa(Ms(n)))}}},{kernelName:"Tanh",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Or(Sa(_i(1),Xa(n)),e)}}},{kernelName:"Tile",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=qs(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=Fr(t,fs(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=Fr(t,fs(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=Fr(t,fs(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=Fr(t,fs(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Fa(s);return{x:()=>ar(e,a)}}},{kernelName:"Unpack",gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Xi(e,s)}}},{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ua(t,qs(t)),r=aa(e,n);let s=oa(t,_i(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=Js(s,e+1);s=Oa(s,ei(r.shape,"bool"));const i=qs(r);return js(s,r,i)}(e,n)}}},{kernelName:"ZerosLike",gradFunc:e=>({x:()=>qs(e)})}];for(const e of sc)ye(e);var ac,ic,oc;Me.prototype.abs=function(){return this.throwIfDisposed(),Lr(this)},Me.prototype.acos=function(){return this.throwIfDisposed(),Br(this)},Me.prototype.acosh=function(){return this.throwIfDisposed(),Pr(this)},Me.prototype.addStrict=function(e){return this.throwIfDisposed(),Vo(this,e)},Me.prototype.add=function(e){return this.throwIfDisposed(),Fr(this,e)},Me.prototype.all=function(e,t){return this.throwIfDisposed(),Vr(this,e,t)},Me.prototype.any=function(e,t){return this.throwIfDisposed(),Wr(this,e,t)},Me.prototype.argMax=function(e){return this.throwIfDisposed(),Ur(this,e)},Me.prototype.argMin=function(e){return this.throwIfDisposed(),Gr(this,e)},Me.prototype.asScalar=function(){return this.throwIfDisposed(),l(1===this.size,()=>"The array must have only 1 element."),ls(this,[])},Me.prototype.asType=function(e){return this.throwIfDisposed(),qn(this,e)},Me.prototype.as1D=function(){return this.throwIfDisposed(),ls(this,[this.size])},Me.prototype.as2D=function(e,t){return this.throwIfDisposed(),ls(this,[e,t])},Me.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ls(this,[e,t,n])},Me.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ls(this,[e,t,n,r])},Me.prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),ls(this,[e,t,n,r,s])},Me.prototype.asin=function(){return this.throwIfDisposed(),Hr(this)},Me.prototype.asinh=function(){return this.throwIfDisposed(),jr(this)},Me.prototype.atan=function(){return this.throwIfDisposed(),qr(this)},Me.prototype.atan2=function(e){return this.throwIfDisposed(),Kr(this,e)},Me.prototype.atanh=function(){return this.throwIfDisposed(),Xr(this)},Me.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),cs(this,e,t,n,r)},Me.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),gs(this,e,t)},Me.prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),ys(this,e,t,n,r,s)},Me.prototype.broadcastTo=function(e){return this.throwIfDisposed(),ks(this,e)},Me.prototype.cast=function(e){return this.throwIfDisposed(),qn(this,e)},Me.prototype.ceil=function(){return this.throwIfDisposed(),Is(this)},Me.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ns(this,e,t)},Me.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Me&&(e=[e]),ps([this,...e],t)},Me.prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),As(this,e,t,n,r,s,a)},Me.prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),$s(this,e,t,n,r,s)},Me.prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),_s(this,e,t,n,r,s,a)},Me.prototype.cos=function(){return this.throwIfDisposed(),Ms(this)},Me.prototype.cosh=function(){return this.throwIfDisposed(),Os(this)},Me.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Ls(this,e,t,n)},Me.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ps(this,e,t)},Me.prototype.depthwiseConv2D=function(e,t,n,r,s,a){return Cr("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),zs(this,e,t,n,r,s,a)},Me.prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),zs(this,e,t,n,r,s,a)},Me.prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Vs(this,e,t,n,r,s)},Me.prototype.divNoNan=function(e){return this.throwIfDisposed(),Ks(this,e)},Me.prototype.divStrict=function(e){return this.throwIfDisposed(),Wo(this,e)},Me.prototype.div=function(e){return this.throwIfDisposed(),Mr(this,e)},Me.prototype.dot=function(e){return this.throwIfDisposed(),Xs(this,e)},Me.prototype.elu=function(){return this.throwIfDisposed(),Zs(this)},Me.prototype.equalStrict=function(e){return this.throwIfDisposed(),Mo(this,e)},Me.prototype.equal=function(e){return this.throwIfDisposed(),Hs(this,e)},Me.prototype.erf=function(){return this.throwIfDisposed(),Ys(this)},Me.prototype.exp=function(){return this.throwIfDisposed(),Qs(this)},Me.prototype.expandDims=function(e){return this.throwIfDisposed(),Js(this,e)},Me.prototype.expm1=function(){return this.throwIfDisposed(),ea(this)},Me.prototype.fft=function(){return this.throwIfDisposed(),Vi(this)},Me.prototype.flatten=function(){return this.throwIfDisposed(),ls(this,[this.size])},Me.prototype.floor=function(){return this.throwIfDisposed(),sa(this)},Me.prototype.floorDiv=function(e){return this.throwIfDisposed(),Dr(this,e)},Me.prototype.gather=function(e,t){return this.throwIfDisposed(),aa(this,e,t)},Me.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Oo(this,e)},Me.prototype.greaterEqual=function(e){return this.throwIfDisposed(),oa(this,e)},Me.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Lo(this,e)},Me.prototype.greater=function(e){return this.throwIfDisposed(),ia(this,e)},Me.prototype.ifft=function(){return this.throwIfDisposed(),Wi(this)},Me.prototype.irfft=function(){return this.throwIfDisposed(),Ui(this)},Me.prototype.isFinite=function(){return this.throwIfDisposed(),la(this)},Me.prototype.isInf=function(){return this.throwIfDisposed(),ca(this)},Me.prototype.isNaN=function(){return this.throwIfDisposed(),ha(this)},Me.prototype.leakyRelu=function(e){return this.throwIfDisposed(),pa(this,e)},Me.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Bo(this,e)},Me.prototype.lessEqual=function(e){return this.throwIfDisposed(),fa(this,e)},Me.prototype.lessStrict=function(e){return this.throwIfDisposed(),Po(this,e)},Me.prototype.less=function(e){return this.throwIfDisposed(),da(this,e)},Me.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),ya(this,e,t,n,r)},Me.prototype.logSigmoid=function(){return this.throwIfDisposed(),Ia(this)},Me.prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ea(this,e)},Me.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ma(this,e,t)},Me.prototype.log=function(){return this.throwIfDisposed(),ba(this)},Me.prototype.log1p=function(){return this.throwIfDisposed(),xa(this)},Me.prototype.logicalAnd=function(e){return this.throwIfDisposed(),Oa(this,e)},Me.prototype.logicalNot=function(){return this.throwIfDisposed(),La(this)},Me.prototype.logicalOr=function(e){return this.throwIfDisposed(),Ba(this,e)},Me.prototype.logicalXor=function(e){return this.throwIfDisposed(),Pa(this,e)},Me.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),rr(this,e,t,n)},Me.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),za(this,e,t,n,r)},Me.prototype.max=function(e,t){return this.throwIfDisposed(),Na(this,e,t)},Me.prototype.maximumStrict=function(e){return this.throwIfDisposed(),Uo(this,e)},Me.prototype.maximum=function(e){return this.throwIfDisposed(),Ua(this,e)},Me.prototype.mean=function(e,t){return this.throwIfDisposed(),Ga(this,e,t)},Me.prototype.min=function(e,t){return this.throwIfDisposed(),Ha(this,e,t)},Me.prototype.minimumStrict=function(e){return this.throwIfDisposed(),Go(this,e)},Me.prototype.minimum=function(e){return this.throwIfDisposed(),ja(this,e)},Me.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),qa(this,e,t)},Me.prototype.modStrict=function(e){return this.throwIfDisposed(),Ho(this,e)},Me.prototype.mod=function(e){return this.throwIfDisposed(),Ka(this,e)},Me.prototype.mulStrict=function(e){return this.throwIfDisposed(),jo(this,e)},Me.prototype.mul=function(e){return this.throwIfDisposed(),Or(this,e)},Me.prototype.neg=function(){return this.throwIfDisposed(),wa(this)},Me.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Zo(this,e,t,n)},Me.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),zo(this,e)},Me.prototype.notEqual=function(e){return this.throwIfDisposed(),Qa(this,e)},Me.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),sr(this,e,t,n)},Me.prototype.onesLike=function(){return this.throwIfDisposed(),ti(this)},Me.prototype.pad=function(e,t){return this.throwIfDisposed(),ni(this,e,t)},Me.prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),si(this,e,t,n,r,s)},Me.prototype.powStrict=function(e){return this.throwIfDisposed(),qo(this,e)},Me.prototype.pow=function(e){return this.throwIfDisposed(),ai(this,e)},Me.prototype.prelu=function(e){return this.throwIfDisposed(),ii(this,e)},Me.prototype.prod=function(e,t){return this.throwIfDisposed(),oi(this,e,t)},Me.prototype.reciprocal=function(){return this.throwIfDisposed(),Ii(this)},Me.prototype.relu=function(){return this.throwIfDisposed(),Ni(this)},Me.prototype.relu6=function(){return this.throwIfDisposed(),Si(this)},Me.prototype.reshapeAs=function(e){return this.throwIfDisposed(),ls(this,e.shape)},Me.prototype.reshape=function(e){return this.throwIfDisposed(),ls(this,e)},Me.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),ou(this,e,t,n)},Me.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),uu(this,e,t,n)},Me.prototype.reverse=function(e){return this.throwIfDisposed(),Ci(this,e)},Me.prototype.rfft=function(){return this.throwIfDisposed(),Hi(this)},Me.prototype.round=function(){return this.throwIfDisposed(),Ei(this)},Me.prototype.rsqrt=function(){return this.throwIfDisposed(),Ti(this)},Me.prototype.selu=function(){return this.throwIfDisposed(),Ai(this)},Me.prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ri(this,e,t,n,r,s,a)},Me.prototype.sigmoid=function(){return this.throwIfDisposed(),ds(this)},Me.prototype.sign=function(){return this.throwIfDisposed(),Fi(this)},Me.prototype.sin=function(){return this.throwIfDisposed(),Di(this)},Me.prototype.sinh=function(){return this.throwIfDisposed(),Mi(this)},Me.prototype.slice=function(e,t){return this.throwIfDisposed(),fs(this,e,t)},Me.prototype.softmax=function(e){return this.throwIfDisposed(),zi(this,e)},Me.prototype.softplus=function(){return this.throwIfDisposed(),ka(this)},Me.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ri(this,e,t)},Me.prototype.split=function(e,t){return this.throwIfDisposed(),Gi(this,e,t)},Me.prototype.sqrt=function(){return this.throwIfDisposed(),ji(this)},Me.prototype.square=function(){return this.throwIfDisposed(),Xa(this)},Me.prototype.squaredDifference=function(e){return this.throwIfDisposed(),qi(this,e)},Me.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Ko(this,e)},Me.prototype.squeeze=function(e){return this.throwIfDisposed(),Ki(this,e)},Me.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Me?[this,e]:[this,...e];return Xi(n,t)},Me.prototype.step=function(e){return this.throwIfDisposed(),Zi(this,e)},Me.prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Yi(this,e,t,n,r,s,a,i,o)},Me.prototype.subStrict=function(e){return this.throwIfDisposed(),Xo(this,e)},Me.prototype.sub=function(e){return this.throwIfDisposed(),Sa(this,e)},Me.prototype.sum=function(e,t){return this.throwIfDisposed(),Ca(this,e,t)},Me.prototype.tan=function(){return this.throwIfDisposed(),Qi(this)},Me.prototype.tanh=function(){return this.throwIfDisposed(),ms(this)},Me.prototype.tile=function(e){return this.throwIfDisposed(),ta(this,e)},Me.prototype.toBool=function(){return this.throwIfDisposed(),qn(this,"bool")},Me.prototype.toFloat=function(){return this.throwIfDisposed(),qn(this,"float32")},Me.prototype.toInt=function(){return this.throwIfDisposed(),qn(this,"int32")},Me.prototype.topk=function(e,t){return this.throwIfDisposed(),to(this,e,t)},Me.prototype.transpose=function(e){return this.throwIfDisposed(),ar(this,e)},Me.prototype.unique=function(e){return this.throwIfDisposed(),ro(this,e)},Me.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),so(this,e,t)},Me.prototype.unstack=function(e){return this.throwIfDisposed(),ao(this,e)},Me.prototype.where=function(e,t){return this.throwIfDisposed(),js(e,this,t)},Me.prototype.zerosLike=function(){return this.throwIfDisposed(),qs(this)},(ic=ac||(ac={}))[ic.DT_INVALID=0]="DT_INVALID",ic[ic.DT_FLOAT=1]="DT_FLOAT",ic[ic.DT_DOUBLE=2]="DT_DOUBLE",ic[ic.DT_INT32=3]="DT_INT32",ic[ic.DT_UINT8=4]="DT_UINT8",ic[ic.DT_INT16=5]="DT_INT16",ic[ic.DT_INT8=6]="DT_INT8",ic[ic.DT_STRING=7]="DT_STRING",ic[ic.DT_COMPLEX64=8]="DT_COMPLEX64",ic[ic.DT_INT64=9]="DT_INT64",ic[ic.DT_BOOL=10]="DT_BOOL",ic[ic.DT_QINT8=11]="DT_QINT8",ic[ic.DT_QUINT8=12]="DT_QUINT8",ic[ic.DT_QINT32=13]="DT_QINT32",ic[ic.DT_BFLOAT16=14]="DT_BFLOAT16",ic[ic.DT_FLOAT_REF=101]="DT_FLOAT_REF",ic[ic.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",ic[ic.DT_INT32_REF=103]="DT_INT32_REF",ic[ic.DT_UINT8_REF=104]="DT_UINT8_REF",ic[ic.DT_INT16_REF=105]="DT_INT16_REF",ic[ic.DT_INT8_REF=106]="DT_INT8_REF",ic[ic.DT_STRING_REF=107]="DT_STRING_REF",ic[ic.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",ic[ic.DT_INT64_REF=109]="DT_INT64_REF",ic[ic.DT_BOOL_REF=110]="DT_BOOL_REF",ic[ic.DT_QINT8_REF=111]="DT_QINT8_REF",ic[ic.DT_QUINT8_REF=112]="DT_QUINT8_REF",ic[ic.DT_QINT32_REF=113]="DT_QINT32_REF",ic[ic.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(oc||(oc={}));const uc={};function lc(e){return uc[e]}function cc(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return hc(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type){return t.inputNames.slice(e,i).map(e=>hc(e,n,r,s))}const o=hc(t.inputNames.slice(e)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:F(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function hc(e,t,n,r){const[s,a]=fc(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[dc(s,e)]);return void 0!==i?t[dc(s,i)][a]:void 0}function pc(e,t){const[n,r]=fc(e);return[dc(n,t&&t.currentContextId),r]}function dc(e,t){return t?`${e}-${t}`:e}function fc(e){const t=e.split(":");if(1===t.length)return[e,0];return[t[0],Number(t[t.length-1])]}function mc(e,t,n){let r=cc("pad",e,t,n);if("explicit"===r){r=cc("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function gc(e){return e.kept?e:Kn(e)}var yc={};yc.json=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var bc={};bc.json=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var xc={};xc.json=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var vc={};vc.json=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var wc={};wc.json=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var kc={};kc.json=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Ic={};Ic.json=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var Nc={};Nc.json=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var Sc={};Sc.json=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];var Cc={};Cc.json=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var Ec={};Ec.json=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Tc={};Tc.json=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var _c={};_c.json=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var Ac={};Ac.json=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var Rc={};Rc.json=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var $c={};$c.json=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var Fc={};Fc.json=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];var Dc=xt;class Mc{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[yc,bc,xc,vc,wc,kc,Ic,Ec,Cc,Nc,Tc,_c,Ac,Rc,$c,Fc,Sc].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(e=>{const t=i[e];t.inputNames.forEach(e=>{const[n]=pc(e);t.inputs.push(i[n]),i[n].children.push(t)})}),0===Object.keys(c).length?h.forEach(e=>{const t=i[e];0===t.children.length&&u.push(t)}):Object.keys(c).forEach(e=>{const[t]=pc(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=pc(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))}):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=lc(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let s=void 0;switch(n.type){case"string":s=Lc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Lc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=qc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=qc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=Pc(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=Pc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=jc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=jc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Bc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Bc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=Xc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Xc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=Hc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Hc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Kc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Kc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=Wc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Wc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=Uc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Uc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=Vc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Vc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const s=[],a=[];e.signature.inputArg.forEach(e=>{const[t]=pc(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:zc(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n});Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach(e=>{const[n]=pc(e);t.inputs.push(r[n]),r[n].children.push(t)})});const i=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=pc(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))});const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Oc(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=W().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==Dc)return new Dc(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Lc(e,t,n,r=!1){const s=e[t];return null!=s?Oc(s.s,r):n}function Bc(e,t,n){const r=e[t];return r?r.b:n}function Pc(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function zc(e){switch("string"==typeof e&&(e=ac[e]),e){case ac.DT_FLOAT:return"float32";case ac.DT_INT32:case ac.DT_INT64:case ac.DT_INT8:case ac.DT_UINT8:return"int32";case ac.DT_BOOL:return"bool";case ac.DT_DOUBLE:return"float32";case ac.DT_STRING:return"string";default:return null}}function Vc(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Wc(e,t,n){const r=e[t];return r&&r.type?zc(r.type):n}function Uc(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>zc(e)):n}function Gc(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function Hc(e,t,n){const r=e[t];return r&&r.shape?Gc(r.shape):n}function jc(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function qc(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map(e=>Oc(e,r)):n}function Kc(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>Gc(e)):n}function Xc(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Zc{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return hc(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return hc(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Pc(this.node.rawAttrs,e,t);if(null!=n.s)return Lc(this.node.rawAttrs,e,t);if(null!=n.b)return Bc(this.node.rawAttrs,e,t);if(null!=n.shape)return Hc(this.node.rawAttrs,e,t);if(null!=n.type)return Wc(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return jc(this.node.rawAttrs,e,t);if(null!=n.list.s)return qc(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Kc(this.node.rawAttrs,e,t);if(null!=n.list.b)return Xc(this.node.rawAttrs,e,t);if(null!=n.list.type)return Uc(this.node.rawAttrs,e,t)}return t}}function Yc(e,t,n=""){l(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),()=>n+` Shapes ${e} and ${t} must match`)}class Qc{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=_i(0),Rr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Yc(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Rr(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return cn([],[0].concat(this.elementShape));const n=this.readMany(e);return Yc(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Xi(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return cn([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Yc(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ps(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ao(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];_r(()=>{t=ls(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=ls(fs(t,i,o),this.elementShape)}return a});const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class Jc{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Yc(t,e.shape,"TensorList shape mismatch: "),Rr(e)}),this.idTensor=_i(0),this.maxNumElements=r,Rr(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Jc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return Yc(e,this.elementShape,"TensorList shape mismatch: "),_r(()=>{const t=this.tensors.map(t=>ls(t,e));return Xi(t,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return Yc(n.shape,e,"TensorList shape mismatch: "),ls(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Yc(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Rr(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return Yc(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Yc(this.elementShape,t.shape,"TensorList shape mismatch: "),Rr(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return Yc(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?cn([],[0].concat(this.elementShape)):_r(()=>{const t=e.map(e=>ls(this.tensors[e],n));return Xi(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return Yc(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?cn([],[0].concat(this.elementShape)):_r(()=>{const e=this.tensors.map(e=>ls(e,t));return ps(e,0)})}}const eh=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=cc("thenBranch",e,t,n),s=cc("elseBranch",e,t,n),a=cc("cond",e,t,n),i=cc("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=cc("body",e,t,n),s=cc("cond",e,t,n),a=cc("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[gc(cc("pred",e,t,n))];case"Switch":{const r=cc("pred",e,t,n);let s=cc("data",e,t,n);return s.kept||(s=gc(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==hc(e,t,n));if(r){return[gc(hc(r,t,n))]}return}case"Enter":{const r=cc("frameName",e,t,n),s=cc("tensor",e,t,n);return n.enterFrame(r),[gc(s)]}case"Exit":{const r=cc("tensor",e,t,n);return n.exitFrame(),[gc(r)]}case"NextIteration":{const r=cc("tensor",e,t,n);return n.nextIteration(),[gc(r)]}case"TensorArrayV3":{const r=cc("size",e,t,n),s=cc("dtype",e,t,n),a=cc("elementShape",e,t,n),i=cc("dynamicSize",e,t,n),o=cc("clearAfterRead",e,t,n),u=cc("identicalElementShapes",e,t,n),l=cc("name",e,t,n),c=new Qc(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,_i(1)]}case"TensorArrayWriteV3":{const r=cc("tensorArrayId",e,t,n),s=cc("index",e,t,n),a=cc("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=cc("tensorArrayId",e,t,n),s=cc("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=cc("tensorArrayId",e,t,n),s=cc("indices",e,t,n),a=cc("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=cc("tensorArrayId",e,t,n),s=cc("indices",e,t,n),a=cc("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=cc("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=cc("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=cc("tensorArrayId",e,t,n),s=cc("tensor",e,t,n),a=cc("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=cc("tensorArrayId",e,t,n);return[_i(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=cc("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=cc("tensorListId",e,t,n),s=cc("index",e,t,n),a=cc("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=cc("tensorListId",e,t,n),s=cc("index",e,t,n),a=cc("elementShape",e,t,n),i=cc("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=cc("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new Jc([],n,e.dtype,r),i=ao(e,0);return t.forEach((e,t)=>{a.setItem(e,i[t])}),a}(cc("tensor",e,t,n),r,cc("elementShape",e,t,n),cc("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=cc("elementShape",e,t,n),s=cc("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new Jc([],e,t,n)}(r,s,cc(a,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=cc("tensorListId",e,t,n),s=cc("indices",e,t,n),a=cc("elementShape",e,t,n),i=cc("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=cc("tensorListId",e,t,n),s=cc("elementShape",e,t,n),a=cc("elementDType",e,t,n),i=cc("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Yc(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=ao(e);return new Jc(s,t,r)}(cc("tensor",e,t,n),cc("elementShape",e,t,n),cc("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=cc("tensorListId",e,t,n),s=n.getTensorList(r.id),a=cc("dtype",e,t,n),i=cc("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=cc("tensorListId",e,t,n),s=cc("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=cc("tensorListId",e,t,n),s=cc("elementShape",e,t,n),a=cc("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=cc("tensor",e,t,n),s=cc("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=0===r?0:e.size/r,i=_r(()=>{const i=[];e=ls(e,[1,r,a]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,t[r],a];i[r]=ls(fs(e,o,u),n)}return e.dispose(),i}),o=new Jc([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)o.setItem(e,i[e]);return o}(r,cc("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function th(e,t,n){const[r,s]=cc("fusedOps",e,t,n),a="biasadd"===r,i="prelu"===s,o="fusedbatchnorm"===r,u=cc("numArgs",e,t,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=cc("strides",e,t,n),c=mc(e,t,n),h=cc("dataFormat",e,t,n).toUpperCase(),p=cc("dilations",e,t,n),[d,f]=cc("args",e,t,n);return{stride:l,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:s,leakyreluAlpha:cc("leakyreluAlpha",e,t,n)}}function nh(e,t,n){return{boxes:cc("boxes",e,t,n),scores:cc("scores",e,t,n),maxOutputSize:cc("maxOutputSize",e,t,n),iouThreshold:cc("iouThreshold",e,t,n),scoreThreshold:cc("scoreThreshold",e,t,n),softNmsSigma:cc("softNmsSigma",e,t,n)}}class rh{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=_i(0),this.tensorMap=new Map,Rr(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),_r(()=>{const e=ao(t),r=n.length,s=e.length;l(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let t=0;t<r;t++){const r=n[t],s=e[t];Rr(s),this.tensorMap.set(r,s)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return _r(()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Xi(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}function sh(e,t,n,r){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return _r(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Fr(cc("a",e,t,n),cc("b",e,t,n))];case"AddN":return[zr(cc("tensors",e,t,n))];case"FloorMod":case"Mod":return[Ka(cc("a",e,t,n),cc("b",e,t,n))];case"Mul":return[Or(cc("a",e,t,n),cc("b",e,t,n))];case"RealDiv":case"Div":return[Mr(cc("a",e,t,n),cc("b",e,t,n))];case"DivNoNan":return[Ks(cc("a",e,t,n),cc("b",e,t,n))];case"FloorDiv":return[Dr(cc("a",e,t,n),cc("b",e,t,n))];case"Sub":return[Sa(cc("a",e,t,n),cc("b",e,t,n))];case"Minimum":return[ja(cc("a",e,t,n),cc("b",e,t,n))];case"Maximum":return[Ua(cc("a",e,t,n),cc("b",e,t,n))];case"Pow":return[ai(cc("a",e,t,n),cc("b",e,t,n))];case"SquaredDifference":return[qi(cc("a",e,t,n),cc("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return _r(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Lr(cc("x",e,t,n))];case"Acos":return[Br(cc("x",e,t,n))];case"Acosh":return[Pr(cc("x",e,t,n))];case"Asin":return[Hr(cc("x",e,t,n))];case"Asinh":return[jr(cc("x",e,t,n))];case"Atan":return[qr(cc("x",e,t,n))];case"Atan2":return[Kr(cc("x",e,t,n),cc("y",e,t,n))];case"Atanh":return[Xr(cc("x",e,t,n))];case"Ceil":return[Is(cc("x",e,t,n))];case"Complex":return[un(cc("real",e,t,n),cc("imag",e,t,n))];case"Cos":return[Ms(cc("x",e,t,n))];case"Cosh":return[Os(cc("x",e,t,n))];case"Elu":return[Zs(cc("x",e,t,n))];case"Erf":return[Ys(cc("x",e,t,n))];case"Exp":return[Qs(cc("x",e,t,n))];case"Expm1":return[ea(cc("x",e,t,n))];case"Floor":return[sa(cc("x",e,t,n))];case"Log":return[ba(cc("x",e,t,n))];case"Log1p":return[xa(cc("x",e,t,n))];case"Imag":return[ua(cc("x",e,t,n))];case"Neg":return[wa(cc("x",e,t,n))];case"Reciprocal":return[Ii(cc("x",e,t,n))];case"Real":return[ki(cc("x",e,t,n))];case"Relu":return[Ni(cc("x",e,t,n))];case"Round":return[Ei(cc("x",e,t,n))];case"Selu":return[Ai(cc("x",e,t,n))];case"Sigmoid":return[ds(cc("x",e,t,n))];case"Sin":return[Di(cc("x",e,t,n))];case"Sign":return[Fi(cc("x",e,t,n))];case"Sinh":return[Mi(cc("x",e,t,n))];case"Softplus":return[ka(cc("x",e,t,n))];case"Sqrt":return[ji(cc("x",e,t,n))];case"Square":return[Xa(cc("x",e,t,n))];case"Tanh":return[ms(cc("x",e,t,n))];case"Tan":return[Qi(cc("x",e,t,n))];case"ClipByValue":return[Ns(cc("x",e,t,n),cc("clipValueMin",e,t,n),cc("clipValueMax",e,t,n))];case"Relu6":return[Si(cc("x",e,t,n))];case"Rsqrt":return[Ti(hc(e.inputNames[0],t,n))];case"Prod":return[oi(cc("x",e,t,n),cc("axes",e,t,n))];case"LeakyRelu":return[pa(cc("x",e,t,n),cc("alpha",e,t,n))];case"Prelu":return[ii(cc("x",e,t,n),cc("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return eh(e,t,n);case"convolution":return _r(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=cc("stride",e,t,n),s=cc("pad",e,t,n),a=cc("dataFormat",e,t,n).toUpperCase(),i=cc("dilation",e,t,n);return[As(cc("x",e,t,n),cc("filter",e,t,n),r,s,a,i)]}case"Conv2D":{const r=cc("strides",e,t,n),s=mc(e,t,n),a=cc("dataFormat",e,t,n).toUpperCase(),i=cc("dilations",e,t,n);return[_s(cc("x",e,t,n),cc("filter",e,t,n),[r[1],r[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=th(e,t,n);return[fo({x:cc("x",e,t,n),filter:cc("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=th(e,t,n);return[yo({x:cc("x",e,t,n),filter:cc("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=cc("outputShape",e,t,n),s=cc("strides",e,t,n),a=mc(e,t,n);return[$s(cc("x",e,t,n),cc("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=cc("strides",e,t,n),s=mc(e,t,n),a=cc("dilations",e,t,n),i=cc("dataFormat",e,t,n).toUpperCase();return[zs(cc("input",e,t,n),cc("filter",e,t,n),[r[1],r[2]],s,i,[a[1],a[2]])]}case"Conv3D":{const r=cc("strides",e,t,n),s=cc("pad",e,t,n),a=cc("dataFormat",e,t,n).toUpperCase(),i=cc("dilations",e,t,n);return[Fs(cc("x",e,t,n),cc("filter",e,t,n),[r[1],r[2],r[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=cc("strides",e,t,n),s=cc("pad",e,t,n),a=cc("kernelSize",e,t,n);return[cs(cc("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=cc("strides",e,t,n),s=cc("pad",e,t,n),a=cc("kernelSize",e,t,n);return[za(cc("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=cc("strides",e,t,n),s=cc("pad",e,t,n),a=cc("kernelSize",e,t,n),i=cc("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Wa(cc("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,i);return[o,u]}case"AvgPool3D":{const r=cc("strides",e,t,n),s=cc("pad",e,t,n),a=cc("kernelSize",e,t,n);return[hs(cc("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=cc("strides",e,t,n),s=cc("pad",e,t,n),a=cc("kernelSize",e,t,n);return[Va(cc("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=cc("strides",e,t,n),s=cc("pad",e,t,n),a=cc("dilations",e,t,n),i=r[1],o=r[2],u=a[1],l=a[2];return[Vs(cc("x",e,t,n),cc("filter",e,t,n),[i,o],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return _r(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=cc("shape",e,t,n),s=cc("dtype",e,t,n);return[ra(r,cc("value",e,t,n),s)]}case"LinSpace":return[ma(cc("start",e,t,n),cc("stop",e,t,n),cc("num",e,t,n))];case"Multinomial":{const r=cc("logits",e,t,n),s=cc("numSamples",e,t,n),a=cc("seed",e,t,n);return[Ya(r,s,a)]}case"OneHot":{const r=cc("indices",e,t,n),s=cc("depth",e,t,n),a=cc("onValue",e,t,n),i=cc("offValue",e,t,n);return[sr(r,s,a,i)]}case"Ones":return[ei(cc("shape",e,t,n),cc("dtype",e,t,n))];case"OnesLike":return[ti(cc("x",e,t,n))];case"RandomUniform":return[vi(cc("shape",e,t,n),cc("minval",e,t,n),cc("maxval",e,t,n),cc("dtype",e,t,n))];case"Range":return[wi(cc("start",e,t,n),cc("stop",e,t,n),cc("step",e,t,n),cc("dtype",e,t,n))];case"TruncatedNormal":{const r=cc("shape",e,t,n),s=cc("mean",e,t,n),a=cc("stdDev",e,t,n),i=cc("seed",e,t,n);return[no(r,s,a,cc("dtype",e,t,n),i)]}case"Zeros":return[Ja(cc("shape",e,t,n),cc("dtype",e,t,n))];case"ZerosLike":return[qs(cc("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=nh(e,t,n),l=await gu.nonMaxSuppressionWithScoreAsync(r,s,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=nh(e,t,n),u=cc("padToMaxOutputSize",e,t,n),l=await gu.nonMaxSuppressionPaddedAsync(r,s,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=nh(e,t,n);return[await gu.nonMaxSuppressionAsync(r,s,a,i,o)]}case"Where":{const r=qn(cc("condition",e,t,n),"bool"),s=[await oo(r)];return r.dispose(),s}case"ListDiff":return $i(cc("x",e,t,n),cc("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return _r(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=cc("x",e,t,n),s=cc("k",e,t,n),a=cc("sorted",e,t,n),i=to(r,s,a);return[i.values,i.indices]}case"Unique":{const r=cc("x",e,t,n),s=ro(r);return[s.values,s.indices]}case"UniqueV2":{const r=cc("x",e,t,n),s=cc("axis",e,t,n),a=ro(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return _r(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=cc("images",e,t,n),s=cc("size",e,t,n),a=cc("alignCorners",e,t,n),i=cc("halfPixelCenters",e,t,n);return[gu.resizeBilinear(r,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{const r=cc("images",e,t,n),s=cc("size",e,t,n),a=cc("alignCorners",e,t,n),i=cc("halfPixelCenters",e,t,n);return[gu.resizeNearestNeighbor(r,[s[0],s[1]],a,i)]}case"CropAndResize":{const r=cc("image",e,t,n),s=cc("boxes",e,t,n),a=cc("boxInd",e,t,n),i=cc("cropSize",e,t,n),o=cc("method",e,t,n),u=cc("extrapolationValue",e,t,n);return[gu.cropAndResize(r,s,a,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return _r(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=cc("default",e,t,n);return[hc(e.name,t,n)||r];case"Placeholder":return[hc(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[gc(cc("x",e,t,n))];case"IdentityN":return cc("x",e,t,n).map(e=>gc(e));case"Snapshot":return[gc(cc("x",e,t,n))];case"Shape":return[Ji(cc("x",e,t,n).shape,"int32")];case"ShapeN":return cc("x",e,t,n).map(e=>Ji(e.shape));case"Size":return[_i(cc("x",e,t,n).size,"int32")];case"Rank":return[_i(cc("x",e,t,n).rank,"int32")];case"NoOp":return[_i(1)];case"Print":const s=cc("x",e,t,n),a=cc("data",e,t,n),i=cc("message",e,t,n),o=cc("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,o));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return _r(()=>((e,t,n)=>{switch(e.op){case"Equal":return[Hs(cc("a",e,t,n),cc("b",e,t,n))];case"NotEqual":return[Qa(cc("a",e,t,n),cc("b",e,t,n))];case"Greater":return[ia(cc("a",e,t,n),cc("b",e,t,n))];case"GreaterEqual":return[oa(cc("a",e,t,n),cc("b",e,t,n))];case"Less":return[da(cc("a",e,t,n),cc("b",e,t,n))];case"LessEqual":return[fa(cc("a",e,t,n),cc("b",e,t,n))];case"LogicalAnd":return[Oa(cc("a",e,t,n),cc("b",e,t,n))];case"LogicalNot":return[La(cc("a",e,t,n))];case"LogicalOr":return[Ba(cc("a",e,t,n),cc("b",e,t,n))];case"Select":case"SelectV2":return[js(cc("condition",e,t,n),cc("a",e,t,n),cc("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return _r(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[rr(cc("a",e,t,n),cc("b",e,t,n),cc("transposeA",e,t,n),cc("transposeB",e,t,n))];case"Transpose":return[ar(cc("x",e,t,n),cc("perm",e,t,n))];case"_FusedMatMul":const[r,s]=cc("fusedOps",e,t,n),a="biasadd"===r,i="prelu"===s,o=cc("numArgs",e,t,n),u=cc("leakyreluAlpha",e,t,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=cc("args",e,t,n);return[bo({a:cc("a",e,t,n),b:cc("b",e,t,n),transposeA:cc("transposeA",e,t,n),transposeB:cc("transposeB",e,t,n),bias:l,activation:s,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return _r(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ys(cc("x",e,t,n),cc("mean",e,t,n),cc("variance",e,t,n),cc("offset",e,t,n),cc("scale",e,t,n),cc("epsilon",e,t,n))];case"LRN":return[ya(cc("x",e,t,n),cc("radius",e,t,n),cc("bias",e,t,n),cc("alpha",e,t,n),cc("beta",e,t,n))];case"Softmax":return[zi(cc("x",e,t,n))];case"LogSoftmax":return[Ea(cc("x",e,t,n))];case"SparseToDense":return[Jo(cc("sparseIndices",e,t,n),cc("outputShape",e,t,n),cc("sparseValues",e,t,n),cc("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return _r(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=cc("axis",e,t,n),s=cc("keepDims",e,t,n);return[Na(cc("x",e,t,n),r,s)]}case"Mean":{const r=cc("axis",e,t,n),s=cc("keepDims",e,t,n);return[Ga(cc("x",e,t,n),r,s)]}case"Min":{const r=cc("axis",e,t,n),s=cc("keepDims",e,t,n);return[Ha(cc("x",e,t,n),r,s)]}case"Sum":{const r=cc("axis",e,t,n),s=cc("keepDims",e,t,n);return[Ca(cc("x",e,t,n),r,s)]}case"All":{const r=cc("axis",e,t,n),s=cc("keepDims",e,t,n);return[Vr(cc("x",e,t,n),r,s)]}case"Any":{const r=cc("axis",e,t,n),s=cc("keepDims",e,t,n);return[Wr(cc("x",e,t,n),r,s)]}case"ArgMax":{const r=cc("axis",e,t,n);return[Ur(cc("x",e,t,n),r)]}case"ArgMin":{const r=cc("axis",e,t,n);return[Gr(cc("x",e,t,n),r)]}case"Prod":{const r=cc("axis",e,t,n),s=cc("keepDims",e,t,n);return[oi(cc("x",e,t,n),r,s)]}case"Cumsum":{const r=cc("axis",e,t,n),s=cc("exclusive",e,t,n),a=cc("reverse",e,t,n);return[Ls(cc("x",e,t,n),r,s,a)]}case"Bincount":const r=cc("x",e,t,n),s=cc("weights",e,t,n),a=cc("size",e,t,n);return[ws(r,s,a)];case"DenseBincount":{const r=cc("x",e,t,n),s=cc("weights",e,t,n),a=cc("size",e,t,n),i=cc("binaryOutput",e,t,n);return[Bs(r,s,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return _r(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=cc("n",e,t,n),s=cc("axis",e,t,n);let a=cc("tensors",e,t,n);return a=a.slice(0,r),[ps(a,s)]}case"Gather":{const r=cc("x",e,t,n),s=cc("indices",e,t,n);return[aa(r,qn(s,"int32"),0)]}case"GatherV2":{const r=cc("axis",e,t,n),s=cc("batchDims",e,t,n),a=cc("x",e,t,n),i=cc("indices",e,t,n);return[aa(a,qn(i,"int32"),r,s)]}case"Reverse":{const r=cc("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const a=cc("x",e,t,n);return[Ci(a,s)]}case"ReverseV2":{const r=cc("axis",e,t,n),s=cc("x",e,t,n);return[Ci(s,r)]}case"Slice":{const r=cc("begin",e,t,n),s=cc("size",e,t,n);return[fs(cc("x",e,t,n),r,s)]}case"StridedSlice":{const r=cc("begin",e,t,n),s=cc("end",e,t,n),a=cc("strides",e,t,n),i=cc("beginMask",e,t,n),o=cc("endMask",e,t,n),u=cc("ellipsisMask",e,t,n),l=cc("newAxisMask",e,t,n),c=cc("shrinkAxisMask",e,t,n),h=cc("x",e,t,n);return[Yi(h,r,s,a,i,o,u,l,c)]}case"Pack":return _r(()=>{const r=cc("axis",e,t,n),s=cc("tensors",e,t,n),a=s[0].shape,i=Ki(s[0]).shape,o=s.map(e=>{const t=f(e.shape,a);if(!t&&!f(Ki(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:ls(e,a)});return[Xi(o,r)]});case"Unpack":{const r=cc("axis",e,t,n),s=cc("tensor",e,t,n);return ao(s,r)}case"Tile":{const r=cc("reps",e,t,n);return[ta(cc("x",e,t,n),r)]}case"Split":case"SplitV":{const r=cc("axis",e,t,n),s=cc("numOrSizeSplits",e,t,n),a=cc("x",e,t,n);return Gi(a,s,r)}case"ScatterNd":{const r=cc("indices",e,t,n),s=cc("values",e,t,n),a=cc("shape",e,t,n);return[Qo(r,s,a)]}case"GatherNd":{const r=cc("x",e,t,n),s=cc("indices",e,t,n);return[eu(r,s)]}case"SparseToDense":{const r=cc("sparseIndices",e,t,n),s=cc("outputShape",e,t,n),a=cc("sparseValues",e,t,n),i=cc("defaultValue",e,t,n);return[Jo(r,a,s,a.dtype===i.dtype?i:qn(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return _r(()=>((e,t,n)=>{switch(e.op){case"FFT":return[Vi(cc("x",e,t,n))];case"IFFT":return[Wi(cc("x",e,t,n))];case"RFFT":return[Hi(cc("x",e,t,n))];case"IRFFT":return[Ui(cc("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return _r(()=>((e,t,n)=>{switch(e.op){case"Cast":return[qn(cc("x",e,t,n),cc("dtype",e,t,n))];case"ExpandDims":{const r=cc("axis",e,t,n);return[Js(cc("x",e,t,n),r)]}case"Squeeze":{const r=cc("axis",e,t,n);return[Ki(cc("x",e,t,n),r)]}case"Reshape":return[ls(cc("x",e,t,n),cc("shape",e,t,n))];case"MirrorPad":return[qa(cc("x",e,t,n),cc("padding",e,t,n),cc("mode",e,t,n))];case"PadV2":case"Pad":return[ni(cc("x",e,t,n),cc("padding",e,t,n),cc("constantValue",e,t,n))];case"SpaceToBatchND":{const r=cc("blockShape",e,t,n),s=cc("paddings",e,t,n);return[ri(cc("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=cc("blockShape",e,t,n),s=cc("crops",e,t,n);return[gs(cc("x",e,t,n),r,s)]}case"DepthToSpace":{const r=cc("blockSize",e,t,n),s=cc("dataFormat",e,t,n).toUpperCase();return[Ps(cc("x",e,t,n),r,s)]}case"BroadcastTo":return[ks(cc("x",e,t,n),cc("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=cc("keyDType",e,t,n),a=cc("valueDType",e,t,n),i=new rh(s,a);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=cc("tableHandle",e,t,n,r),a=cc("keys",e,t,n),i=cc("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=cc("tableHandle",e,t,n,r),a=cc("keys",e,t,n),i=cc("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=lc(e.op);if(s&&s.customExecutor)return s.customExecutor(new Zc(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return z(s)?s.then(e=>[].concat(e)):[].concat(s)}class ah{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function ih(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map(e=>fc(e)[0]);let c=[];null!=r&&(c=r.map(e=>fc(e.name)[0]));const h=[...t];for(;h.length>0;){const e=h.pop();(ch(e)||hh(e)||ph(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>s.has(e))),s.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),h.push(e))}):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const oh=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],uh=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],lh=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function ch(e){return oh.indexOf(e.op)>=0}function hh(e){return uh.indexOf(e.op)>=0}function ph(e){return lh.indexOf(e.op)>=0}class dh{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new dh(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=ih(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map(e=>e.name),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map(e=>fc(e)[0]).map(t=>e.nodes[t]),o=e.initNodes;i.forEach(e=>{r.has(e.name)&&a.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&a.push(e)}),null!=o&&o.forEach(e=>{r.has(e.name)&&a.push(e)});const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&a.push(e)})}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[fc(e)[0]]),s=t.map(e=>fc(e)[0]);let a=s.map(e=>this.graph.nodes[e]);0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const u={},l={};return _r(()=>{const n=new ah(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,s]=fc(t),a=[];a[s]=e[t],r[n]=a});const a=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=sh(t,r,n,this._resourceManager);if(z(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),t.map(e=>hc(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=function(e,t,n){return t[dc(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!s.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const a=new ah(this.weightMap,r,s,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),o=t.map(e=>hc(e,i,a)),u=o.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach(e=>{i[e].forEach(e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()})}),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map(e=>this.graph.nodes[fc(e)[0]]),i=n.map(e=>fc(e)[0]);let o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=ih(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),d=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=fc(t),s=[];s[r]=e[t],d[n]=s});const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter(e=>!ch(e)&&!hc(e.name,d,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&cc("isConstant",e.node,r,n)&&([c]=pc(e.node.name,n)),null==r[e.node.name]){const h=sh(e.node,r,n,this._resourceManager);c||([c]=pc(e.node.name,n));const p=n.currentContext;z(h)?l.push(h.then(l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u),l))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach(e=>{const[i]=pc(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!hc(e,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!hc(e,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=fc(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;l(e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t),()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&l(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=fc(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e},{})}checkOutputs(e){e.forEach(e=>{const[t]=fc(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class fh{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class mh{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new fh}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=nr(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,vn.getLoadHandlers(t,n));if(0===r.length)r.push(nr(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,u=d(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=hn[n.dtype],c=e.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=xn()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*o}else if("string"===i){const t=d(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=hn[i],a=e.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=cn(e,o,"float32"),i=cn(r,o,"float32");n[t]=un(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[t]=cn(l,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new dh(Mc.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Mc.Instance.transformGraph(e.modelInitializer);this.initializer=new dh(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=wn(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Me||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function gh(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new mh(e,t);return await n.load(),n}var yh=function(){return(yh=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};function bh(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function xh(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}const vh=e=>({startEndTensor:e,startPoint:fs(e,[0,0],[-1,2]),endPoint:fs(e,[0,2],[-1,2])}),wh={strides:[8,16],anchors:[2,6]};function kh(e,t){let n,r,s;if(e.topLeft instanceof Me&&e.bottomRight instanceof Me){const[a,i]=_r(()=>[ps([Sa(t-1,e.topLeft.slice(0,1)),e.topLeft.slice(1,1)]),ps([Sa(t-1,e.bottomRight.slice(0,1)),e.bottomRight.slice(1,1)])]);n=a,r=i,null!=e.landmarks&&(s=_r(()=>{const n=Sa(Ji([t-1,0]),e.landmarks),r=Ji([1,-1]);return Or(n,r)}))}else{const[a,i]=e.topLeft,[o,u]=e.bottomRight;n=[t-1-a,i],r=[t-1-o,u],null!=e.landmarks&&(s=e.landmarks.map(e=>[t-1-e[0],e[1]]))}const a={topLeft:n,bottomRight:r};return null!=s&&(a.landmarks=s),null!=e.probability&&(a.probability=e.probability instanceof Me?e.probability.clone():e.probability),a}function Ih(e,t){return _r(()=>{let n;return n=e.hasOwnProperty("box")?e.box:e,((e,t)=>{const n=Or(e.startPoint,t),r=Or(e.endPoint,t),s=Cs([n,r],1);return vh(s)})(n,t).startEndTensor.squeeze()})}class Nh{constructor(e,t,n,r,s,a){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){const r=[];for(let s=0;s<n.strides.length;s++){const a=n.strides[s],i=Math.floor((t+a-1)/a),o=Math.floor((e+a-1)/a),u=n.anchors[s];for(let e=0;e<i;e++){const t=a*(e+.5);for(let e=0;e<o;e++){const n=a*(e+.5);for(let e=0;e<u;e++)r.push([n,t])}}}return r}(t,n,wh),this.anchors=eo(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=Ji([t,n]),this.iouThreshold=s,this.scoreThreshold=a}async getBoundingBoxes(e,t,n=!0){const[r,s,a]=_r(()=>{const t=e.resizeBilinear([this.width,this.height]),n=Or(Sa(t.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),s=function(e,t,n){const r=fs(e,[0,1],[-1,2]),s=Fr(r,t),a=fs(e,[0,3],[-1,2]),i=Mr(a,n),o=Mr(s,n),u=Mr(i,2),l=Sa(o,u),c=Fr(o,u),h=Or(l,n),p=Or(c,n);return Cs([h,p],1)}(r,this.anchors,this.inputSize),a=fs(r,[0,0],[-1,1]);return[r,s,ds(a).squeeze()]}),i=console.warn;console.warn=()=>{};const o=gu.nonMaxSuppression(s,a,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=i;const u=await o.array();o.dispose();let l=u.map(e=>fs(s,[e,0],[1,-1]));t||(l=await Promise.all(l.map(async e=>{const t=await e.array();return e.dispose(),t})));const c=e.shape[1],h=e.shape[2];let p;p=t?Mr([h,c],this.inputSize):[h/this.inputSizeData[0],c/this.inputSizeData[1]];const d=[];for(let e=0;e<l.length;e++){const s=l[e],i=_r(()=>{const i=vh(s instanceof Me?s:eo(s));if(!n)return i;const o=u[e];let l;return l=t?this.anchors.slice([o,0],[1,2]):this.anchorsData[o],{box:i,landmarks:fs(r,[o,5],[1,-1]).squeeze().reshape([6,-1]),probability:fs(a,[o],[1]),anchor:l}});d.push(i)}return s.dispose(),a.dispose(),r.dispose(),{boxes:d,scaleFactor:p}}async estimateFaces(e,t=!1,n=!1,r=!0){const[,s]=function(e){return e instanceof Me?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),a=_r(()=>(e instanceof Me||(e=or(e)),e.toFloat().expandDims(0))),{boxes:i,scaleFactor:o}=await this.getBoundingBoxes(a,t,r);return a.dispose(),t?i.map(e=>{const t=Ih(e,o);let a={topLeft:t.slice([0],[2]),bottomRight:t.slice([2],[2])};if(r){const{landmarks:t,probability:n,anchor:r}=e,s=t.add(r).mul(o);a.landmarks=s,a.probability=n}return n&&(a=kh(a,s)),a}):Promise.all(i.map(async e=>{const t=Ih(e,o);let a;if(r){const[n,r,s]=await Promise.all([e.landmarks,t,e.probability].map(async e=>e.array())),i=e.anchor,[u,l]=o,c=n.map(e=>[(e[0]+i[0])*u,(e[1]+i[1])*l]);a={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:c,probability:s},(e=>{e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()})(e.box),e.landmarks.dispose(),e.probability.dispose()}else{const e=await t.array();a={topLeft:e.slice(0,2),bottomRight:e.slice(2)}}return t.dispose(),n&&(a=kh(a,s)),a}))}}async function Sh({maxFaces:e=10,inputWidth:t=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:s=.75}={}){const a=await gh("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new Nh(a,t,n,e,r,s)}var Ch={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function Eh(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Th(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function _h(e,t){void 0===t&&(t=1.5);var n=Th(e),r=Eh(e),s=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],landmarks:e.landmarks}}var Ah=[[1,0,0],[0,1,0],[0,0,1]];function Rh(e,t){return[[1,0,e],[0,1,t],[0,0,1]]}function $h(e,t){for(var n=0,r=0;r<e.length;r++)n+=e[r]*t[r];return n}function Fh(e,t){for(var n=[],r=0;r<e.length;r++)n.push(e[r][t]);return n}function Dh(e,t){for(var n=[],r=e.length,s=0;s<r;s++){n.push([]);for(var a=0;a<r;a++)n[s].push($h(e[s],Fh(t,a)))}return n}function Mh(e,t){var n=Math.cos(e),r=Math.sin(e),s=[[n,-r,0],[r,n,0],[0,0,1]],a=Dh(Rh(t[0],t[1]),s);return Dh(a,Rh(-t[0],-t[1]))}var Oh=[13,Ch.midwayBetweenEyes[0]],Lh=[3,2],Bh=Ch.leftEyeLower0,Ph=[Bh[0],Bh[Bh.length-1]],zh=Ch.rightEyeLower0,Vh=[zh[0],zh[zh.length-1]],Wh=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function Uh(e,t,n,r){for(var s=0;s<Wh.length;s++){var a=Wh[s],i=a.key,o=a.indices,u=Ch[""+n+i];if(null==r||r.includes(i))for(var l=0;l<o.length;l++){var c=o[l];e[u[l]]=[t[c][0],t[c][1],(t[c][2]+e[u[l]][2])/2]}}}var Gh=function(){function e(e,t,n,r,s,a,i){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=e,this.meshDetector=t,this.irisModel=i,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=s,this.maxFaces=a}return e.prototype.transformRawCoords=function(e,t,n,r){var s,a,i,o,u=this,l=Eh({startPoint:t.startPoint,endPoint:t.endPoint}),c=[l[0]/this.meshWidth,l[1]/this.meshHeight],h=e.map((function(e){return[c[0]*(e[0]-u.meshWidth/2),c[1]*(e[1]-u.meshHeight/2),e[2]]})),p=Mh(n,[0,0]),d=h.map((function(e){return function(e,t){return[$h(e,t[0]),$h(e,t[1])]}(e,p).concat([e[2]])})),f=(a=[[(s=r)[0][0],s[1][0]],[s[0][1],s[1][1]]],i=[s[0][2],s[1][2]],o=[-$h(a[0],i),-$h(a[1],i)],[a[0].concat(o[0]),a[1].concat(o[1]),[0,0,1]]),m=Th({startPoint:t.startPoint,endPoint:t.endPoint}).concat([1]),g=[$h(m,f[0]),$h(m,f[1])];return d.map((function(e){return[e[0]+g[0],e[1]+g[1],e[2]]}))},e.prototype.getLeftToRightEyeDepthDifference=function(e){return e[Ph[0]][2]-e[Vh[0]][2]},e.prototype.getEyeBox=function(e,t,n,r,s){void 0===s&&(s=!1);var a=function(e){var t=Th(e),n=Eh(e),r=Math.max.apply(Math,n)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],landmarks:e.landmarks}}(_h(this.calculateLandmarksBoundingBox([e[n],e[r]]),2.3)),i=Eh(a),o=gu.cropAndResize(t,[[a.startPoint[1]/this.meshHeight,a.startPoint[0]/this.meshWidth,a.endPoint[1]/this.meshHeight,a.endPoint[0]/this.meshWidth]],[0],[64,64]);return s&&(o=gu.flipLeftRight(o)),{box:a,boxSize:i,crop:o}},e.prototype.getEyeCoords=function(e,t,n,r){void 0===r&&(r=!1);for(var s=[],a=0;a<76;a++){var i=e[3*a],o=e[3*a+1],u=e[3*a+2];s.push([(r?1-i/64:i/64)*n[0]+t.startPoint[0],o/64*n[1]+t.startPoint[1],u])}return{rawCoords:s,iris:s.slice(71)}},e.prototype.getAdjustedIrisCoords=function(e,t,n){var r=e[Ch[n+"EyeUpper0"][3]][2],s=e[Ch[n+"EyeLower0"][4]][2],a=(r+s)/2;return t.map((function(e,t){var n=a;return 2===t?n=r:4===t&&(n=s),[e[0],e[1],n]}))},e.prototype.predict=function(e,t){return bh(this,void 0,void 0,(function(){var n,r,s,a,i=this;return xh(this,(function(o){switch(o.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(e,!1,!0)]:[3,2];case 1:return n=o.sent(),r=n.boxes,s=n.scaleFactor,0===r.length?(this.regionsOfInterest=[],[2,null]):(a=r.map((function(e){var t,n,r={startPoint:e.box.startPoint.squeeze().arraySync(),endPoint:e.box.endPoint.squeeze().arraySync()},a=_h((n=s,{startPoint:[(t=r).startPoint[0]*n[0],t.startPoint[1]*n[1]],endPoint:[t.endPoint[0]*n[0],t.endPoint[1]*n[1]]}));return yh({},a,{landmarks:e.landmarks.arraySync()})})),r.forEach((function(e){null!=e&&null!=e.startPoint&&(e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose())})),this.updateRegionsOfInterest(a),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,o.label=3;case 3:return[2,_r((function(){return i.regionsOfInterest.map((function(n,r){var s,a=n.landmarks.length>=468,o=Oh[0],u=Oh[1];!1===a&&(o=Lh[0],u=Lh[1]),s=function(e,t){var n;return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(n.landmarks[o],n.landmarks[u]);var l=Th({startPoint:n.startPoint,endPoint:n.endPoint}),c=[l[0]/e.shape[2],l[1]/e.shape[1]],h=e,p=Ah;0!==s&&(h=gu.rotateWithOffset(e,s,0,c),p=Mh(-s,l));var d=function(e,t,n){var r=t.shape[1],s=t.shape[2],a=[[e.startPoint[1]/r,e.startPoint[0]/s,e.endPoint[1]/r,e.endPoint[0]/s]];return gu.cropAndResize(t,a,[0],n)}({startPoint:n.startPoint,endPoint:n.endPoint},h,[i.meshHeight,i.meshWidth]).div(255),f=i.meshDetector.predict(d),m=f[1],g=f[2],y=ls(g,[-1,3]).arraySync();if(t){var b=i.getEyeBox(y,d,Ph[0],Ph[1],!0),x=b.box,v=b.boxSize,w=b.crop,k=i.getEyeBox(y,d,Vh[0],Vh[1]),I=k.box,N=k.boxSize,S=k.crop,C=i.irisModel.predict(ps([w,S])).dataSync(),E=C.slice(0,228),T=i.getEyeCoords(E,x,v,!0),_=T.rawCoords,A=T.iris,R=C.slice(228),$=i.getEyeCoords(R,I,N),F=$.rawCoords,D=$.iris,M=i.getLeftToRightEyeDepthDifference(y);Math.abs(M)<30?(Uh(y,_,"left"),Uh(y,F,"right")):M<1?Uh(y,_,"left",["EyeUpper0","EyeLower0"]):Uh(y,F,"right",["EyeUpper0","EyeLower0"]);var O=i.getAdjustedIrisCoords(y,A,"left"),L=i.getAdjustedIrisCoords(y,D,"right");y=y.concat(O).concat(L)}var B=i.transformRawCoords(y,n,s,p),P=eo(B),z=_h(i.calculateLandmarksBoundingBox(B));return i.regionsOfInterest[r]=yh({},z,{landmarks:P.arraySync()}),{coords:eo(y,[y.length,3]),scaledCoords:P,box:z,flag:m.squeeze()}}))}))]}}))}))},e.prototype.updateRegionsOfInterest=function(e){for(var t=0;t<e.length;t++){var n=e[t],r=this.regionsOfInterest[t],s=0;if(r&&r.startPoint){var a=n.startPoint,i=a[0],o=a[1],u=n.endPoint,l=u[0],c=u[1],h=r.startPoint,p=h[0],d=h[1],f=r.endPoint,m=f[0],g=f[1],y=Math.max(i,p),b=Math.max(o,d),x=(Math.min(l,m)-y)*(Math.min(c,g)-b);s=x/((l-i)*(c-o)+(m-p)*(g-o)-x)}s<.25&&(this.regionsOfInterest[t]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,e.length)},e.prototype.clearRegionOfInterest=function(e){null!=this.regionsOfInterest[e]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,e).concat(this.regionsOfInterest.slice(e+1)))},e.prototype.shouldUpdateRegionsOfInterest=function(){var e=this.regionsOfInterest.length,t=0===e;return 1===this.maxFaces||t?t:e!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},e.prototype.calculateLandmarksBoundingBox=function(e){var t=e.map((function(e){return e[0]})),n=e.map((function(e){return e[1]}));return{startPoint:[Math.min.apply(Math,t),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,t),Math.max.apply(Math,n)]}},e}(),Hh=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function jh(e){return bh(this,void 0,void 0,(function(){var t,n,r,s,a,i,o,u,l,c,h,p,d,f,m;return xh(this,(function(g){switch(g.label){case 0:return t=e.maxContinuousChecks,n=void 0===t?5:t,r=e.detectionConfidence,s=void 0===r?.9:r,a=e.maxFaces,i=void 0===a?10:a,o=e.iouThreshold,u=void 0===o?.3:o,l=e.scoreThreshold,c=void 0===l?.75:l,h=e.shouldLoadIrisModel,p=void 0===h||h,d=e.modelUrl,f=e.irisModelUrl,p?[4,Promise.all([qh(i,u,c),Kh(d),Xh(f)])]:[3,2];case 1:return m=g.sent(),[3,4];case 2:return[4,Promise.all([qh(i,u,c),Kh(d)])];case 3:m=g.sent(),g.label=4;case 4:return[2,new Qh(m[0],m[1],n,s,i,p?m[2]:null)]}}))}))}function qh(e,t,n){return bh(this,void 0,void 0,(function(){return xh(this,(function(r){return[2,Sh({maxFaces:e,iouThreshold:t,scoreThreshold:n})]}))}))}function Kh(e){return bh(this,void 0,void 0,(function(){return xh(this,(function(t){return null!=e?[2,gh(e)]:[2,gh("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function Xh(e){return bh(this,void 0,void 0,(function(){return xh(this,(function(t){return null!=e?[2,gh(e)]:[2,gh("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]}))}))}function Zh(e,t){if(e.mesh instanceof Me){var n=_r((function(){var n=Ji([t-1,0,0]),r=Ji([1,-1,1]);return _r((function(){return[ps([Sa(t-1,e.boundingBox.topLeft.slice(0,1)),e.boundingBox.topLeft.slice(1,1)]),ps([Sa(t-1,e.boundingBox.bottomRight.slice(0,1)),e.boundingBox.bottomRight.slice(1,1)]),Sa(n,e.mesh).mul(r),Sa(n,e.scaledMesh).mul(r)]}))})),r=n[0],s=n[1],a=n[2],i=n[3];return Object.assign({},e,{boundingBox:{topLeft:r,bottomRight:s},mesh:a,scaledMesh:i})}return Object.assign({},e,{boundingBox:{topLeft:[t-1-e.boundingBox.topLeft[0],e.boundingBox.topLeft[1]],bottomRight:[t-1-e.boundingBox.bottomRight[0],e.boundingBox.bottomRight[1]]},mesh:e.mesh.map((function(e){var n=e.slice(0);return n[0]=t-1-e[0],n})),scaledMesh:e.scaledMesh.map((function(e){var n=e.slice(0);return n[0]=t-1-e[0],n}))})}var Yh,Qh=function(){function e(e,t,n,r,s,a){this.kind="MediaPipeFaceMesh",this.pipeline=new Gh(e,t,192,192,n,s,a),this.detectionConfidence=r}return e.getAnnotations=function(){return Ch},e.getUVCoords=function(){return Hh},e.prototype.estimateFaces=function(e){return bh(this,void 0,void 0,(function(){var t,n,r,s,a,i,o,u,l,c,h,p,d=this;return xh(this,(function(f){switch(f.label){case 0:if(t=e.returnTensors,n=void 0!==t&&t,r=e.flipHorizontal,s=void 0!==r&&r,a=e.predictIrises,i=void 0===a||a,o=e.input,i&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return u=function(e){return e instanceof Me?[e.shape[0],e.shape[1]]:[e.height,e.width]}(o),l=u[1],c=_r((function(){return o instanceof Me||(o=or(o)),o.toFloat().expandDims(0)})),"webgl"!==nt.backendName?[3,2]:(p=W().get("WEBGL_PACK_DEPTHWISECONV"),W().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(c,i)]);case 1:return h=f.sent(),W().set("WEBGL_PACK_DEPTHWISECONV",p),[3,4];case 2:return[4,this.pipeline.predict(c,i)];case 3:h=f.sent(),f.label=4;case 4:return c.dispose(),null!=h&&h.length>0?[2,Promise.all(h.map((function(e,t){return bh(d,void 0,void 0,(function(){var r,a,o,u,c,h,p,d,f,m,g,y,b,x,v=this;return xh(this,(function(w){switch(w.label){case 0:return r=e.coords,a=e.scaledCoords,o=e.box,u=e.flag,c=[u],n||(c=c.concat([r,a])),[4,Promise.all(c.map((function(e){return bh(v,void 0,void 0,(function(){return xh(this,(function(t){return[2,e.array()]}))}))})))];case 1:if(h=w.sent(),p=h[0],u.dispose(),p<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(t),n)return d={kind:"MediaPipePredictionTensors",faceInViewConfidence:p,mesh:r,scaledMesh:a,boundingBox:{topLeft:Ji(o.startPoint),bottomRight:Ji(o.endPoint)}},s?[2,Zh(d,l)]:[2,d];for(x in f=h.slice(1),m=f[0],g=f[1],a.dispose(),r.dispose(),y={kind:"MediaPipePredictionValues",faceInViewConfidence:p,boundingBox:{topLeft:o.startPoint,bottomRight:o.endPoint},mesh:m,scaledMesh:g},s&&(y=Zh(y,l)),b={},Ch)(i||!1===x.includes("Iris"))&&(b[x]=Ch[x].map((function(e){return y.scaledMesh[e]})));return y.annotations=b,[2,y]}}))}))})))]:[2,[]]}}))}))},e}();let Jh;function ep(){return null==Jh&&(Jh=nt.backend.epsilon()),Jh}(Yh||(n=Yh={},n)).mediapipeFacemesh="mediapipe-facemesh";class tp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tp.prototype)}}class np extends Error{constructor(e){super(e),Object.setPrototypeOf(this,np.prototype)}}class rp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rp.prototype)}}class sp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sp.prototype)}}class ap extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ap.prototype)}}Error;function ip(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function op(e,t){if(!e)throw new ap(t)}function up(e,t){let n=0;for(const r of e)r===t&&n++;return n}function lp(e){return 1===e.length?e[0]:e}function cp(e){return Array.isArray(e)?e:[e]}function hp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function pp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let dp={};function fp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function mp(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in dp)a=dp[s];else if(a=t[s],null==a)throw new rp(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new rp(r+": Improper config format: "+JSON.stringify(a)+".\n'className' and 'config' must set.");const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in dp?[o,u]=dp.className:i in t&&([o,u]=t[i]),null==o)throw new rp(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(dp))e[t]=dp[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},dp);for(const e of Object.keys(n))dp[e]=n[e];!function e(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>e(t));else{const n=Object.keys(t);for(const r of n){const n=t[r];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?e(n):t[r]=n.value)}}}(a.config);const r=u(o,a.config,n,s);return dp=Object.assign({},t),r}{const e=Object.assign({},dp);for(const e of Object.keys(n))dp[e]=n[e];const t=new o(a.config);return dp=Object.assign({},e),t}}}function gp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function yp(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function bp(e){if(null==e)throw new rp("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function xp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new rp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function vp(e,t,n=0,r=1/0){return op(n>=0),op(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function wp(e,t){Array.isArray(e)?(l(e.length>0,()=>t+" is unexpectedly an empty array."),e.forEach((e,n)=>wp(e,`element ${n+1} of ${t}`))):l(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got `+function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"==typeof t?`"${t}"`:""+t}(e)+".")}function kp(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Ip(e,t){return _r(()=>ji(Ca(Or(e,e),t,!0)))}class Np extends Ir{getConfig(){return{}}}class Sp extends Np{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _r(()=>{const t=Ip(e,this.axis),n=Ns(t,0,this.maxValue);return Or(e,Mr(n,Fr(ep(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Sp.className="MaxNorm",Sr(Sp);class Cp extends Np{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _r(()=>Mr(e,Fr(ep(),Ip(e,this.axis))))}getConfig(){return{axis:this.axis}}}Cp.className="UnitNorm",Sr(Cp);class Ep extends Np{apply(e){return Ni(e)}}Ep.className="NonNeg",Sr(Ep);class Tp extends Np{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _r(()=>{const t=Ip(e,this.axis),n=Fr(Or(this.rate,Ns(t,this.minValue,this.maxValue)),Or(1-this.rate,t));return Or(e,Mr(n,Fr(ep(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Tp.className="MinMaxNorm",Sr(Tp);const _p={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ap(e){return fp(e)}function Rp(e,t={}){return mp(e,Nr.getMap().classNameMap,t,"constraint")}function $p(e){if(null==e)return null;if("string"==typeof e){return Rp({className:e in _p?_p[e]:e,config:{}})}return e instanceof Np?e:Rp(e)}const Fp=["channelsFirst","channelsLast"],Dp=["nearest","bilinear"],Mp=["valid","same","causal"],Op=["max","avg"],Lp=["sum","mul","concat","ave"],Bp=new Map;function Pp(e){xp(Fp,"DataFormat",e)}function zp(e){xp(Mp,"PaddingMode",e)}function Vp(e){xp(Op,"PoolMode",e)}const Wp=[];function Up(e,t){Wp.push(e);try{const e=t();return Wp.pop(),e}catch(e){throw Wp.pop(),e}}function Gp(e){if(!qp(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Wp.length?"":Wp.join("/")+"/")+e}function Hp(e){if(!qp(e))throw new Error("Not a valid tensor name: '"+e+"'");Bp.has(e)||Bp.set(e,0);const t=Bp.get(e);if(Bp.set(e,Bp.get(e)+1),t>0){const n=`${e}_${t}`;return Bp.set(n,1),n}return e}const jp=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function qp(e){return!!e.match(jp)}function Kp(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Xp(e){return Ji(e=Array.isArray(e)?new Float32Array(e):e)}function Zp(e){return Ha(Xp(e)).dataSync()[0]}function Yp(e){return Na(Xp(e)).dataSync()[0]}function Qp(e,t){if(t<e)throw new rp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Jp(e,t){return e.asType(t)}function ed(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function td(e,t,n){return _r(()=>{switch(e.rank){case 1:return Oi(e,t,n);case 2:return Li(e,[t,0],[n,e.shape[1]]);case 3:return Bi(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Pi(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return fs(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return fs(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new rp("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}})}function nd(e,t,n){return _r(()=>{switch(e.rank){case 1:return Oi(e,t,n);case 2:return Li(e,[0,t],[e.shape[0],n]);case 3:return Bi(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Pi(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new rp("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function rd(e,t,n,r){return _r(()=>{switch(e.rank){case 1:return Oi(e,t,n);case 2:switch(r){case 1:return td(e,t,n);case 2:return nd(e,t,n);default:throw new rp("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return td(e,t,n);case 2:return Bi(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return nd(e,t,n);default:throw new rp("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return td(e,t,n);case 2:return Pi(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Pi(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return nd(e,t,n);default:throw new rp("The axis is not within the rank of the tensor "+r)}default:throw new rp("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function sd(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),ps(e,t)}function ad(e,t){switch(e.rank){case 1:return Ss([e,t]);case 2:return Cs([e,t],0);case 3:return Es([e,t],0);case 4:return Ts([e,t],0);default:throw new rp("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function id(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new rp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ta(e,t)}function od(e,t=0,n=1,r,s){return xi(e,t,n,r,s)}function ud(e,t,n,r){if(e.rank<2||t.rank<2)throw new sp(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new sp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = `+t.shape)}if(2===e.rank&&2===t.rank){return bo({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?hd(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=t.transpose(c).reshape([u,-1]);const h=[...s,...l];return bo({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?hd(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function ld(e,t,n){return _r(()=>(t=Array.isArray(t)?Ji(t,"int32"):t.toInt(),aa(e,t,n)))}function cd(e){return Or(e,e)}function hd(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new rp("Unexpected bias dimensions: "+t.rank+"; expected it to be 1 or "+e);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new rp("Unsupported input rank by biasAdd: "+t.rank)}function pd(e,t,n){return _r(()=>(null==n&&(n="channelsLast"),Pp(n),e.add(hd(e.rank,t,n))))}function dd(e,t,n,r){return _r(()=>tu(e,t,n,r))}function fd(e,t,n=!1){return n?e():t()}const md=["fanIn","fanOut","fanAvg"],gd=["normal","uniform","truncatedNormal"];class yd extends Ir{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class bd extends yd{apply(e,t){return Ja(e,t)}}bd.className="Zeros",Sr(bd);class xd extends yd{apply(e,t){return ei(e,t)}}xd.className="Ones",Sr(xd);class vd extends yd{constructor(e){if(super(),"object"!=typeof e)throw new rp("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new rp("config must have value set but got "+e);this.value=e.value}apply(e,t){return _r(()=>Or(_i(this.value),ei(e,t)))}getConfig(){return{value:this.value}}}vd.className="Constant",Sr(vd);class wd extends yd{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return vi(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}wd.className="RandomUniform",Sr(wd);class kd extends yd{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sp(`randomNormal does not support dType ${t}.`);return od(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}kd.className="RandomNormal",Sr(kd);class Id extends yd{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sp(`truncatedNormal does not support dType ${t}.`);return no(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Id.className="TruncatedNormal",Sr(Id);class Nd extends yd{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return _r(()=>{if(2!==e.length||e[0]!==e[1])throw new rp("Identity matrix initializer can only be used for 2D square matrices.");return Or(this.gain,na(e[0]))})}getConfig(){return{gain:this.gain}}}Nd.className="Identity",Sr(Nd);class Sd extends yd{constructor(e){if(super(),e.scale<0)throw new rp("scale must be a positive float. Got: "+e.scale);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,xp(md,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){xp(gd,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Pp(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Kp(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Kp(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Kp(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sp(`${this.getClassName()} does not support dType ${t}.`);return no(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return vi(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Sd.className="VarianceScaling",Sr(Sd);class Cd extends Sd{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sd.className}}Cd.className="GlorotUniform",Sr(Cd);class Ed extends Sd{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sd.className}}Ed.className="GlorotNormal",Sr(Ed);class Td extends Sd{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sd.className}}Td.className="HeNormal",Sr(Td);class _d extends Sd{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sd.className}}_d.className="HeUniform",Sr(_d);class Ad extends Sd{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sd.className}}Ad.className="LeCunNormal",Sr(Ad);class Rd extends Sd{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sd.className}}Rd.className="LeCunNormal",Sr(Rd);class $d extends yd{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new sp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return _r(()=>{if(e.length<2)throw new sp("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=od(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=yu.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Or(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}$d.className="Orthogonal",Sr($d);const Fd={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Dd(e,t={}){return mp(e,Nr.getMap().classNameMap,t,"initializer")}function Md(e){return fp(e)}function Od(e){if("string"==typeof e){const t=e in Fd?Fd[e]:e;if("GlorotNormal"===t)return new Ed;if("GlorotUniform"===t)return new Cd;if("HeNormal"===t)return new Td;if("HeUniform"===t)return new _d;if("LeCunNormal"===t)return new Ad;if("LeCunUniform"===t)return new Rd;{const e={};return e.className=t,e.config={},Dd(e)}}return e instanceof yd?e:Dd(e)}let Ld=0;function Bd(){return Ld++}const Pd={};function zd(e=""){return e in Pd||(Pd[e]=0),Pd[e]+=1,e+Pd[e].toString()}function Vd(e){return Array.isArray(e)&&Array.isArray(e[0])}function Wd(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ud(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new rp("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function Gd(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new rp("Expected exactly 1 Shape; got "+e.length)}return e}function Hd(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}class jd{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Bd(),n=null==n?"Variable":n,this.originalName=Gp(n),this.name=Hp(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return nt.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function qd(e){return e.map(e=>e.read())}function Kd(e){e.forEach(e=>{e[0].write(e[1])})}class Xd{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Zd{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Bd(),null!=a&&(this.originalName=Gp(a),this.name=Hp(this.originalName)),this.rank=t.length}}let Yd=0;class Qd{constructor(e,t){this.callArgs=t,this.id=Yd++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Jd=0;class ef extends Ir{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Jd++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=hp(e)+"_"+zd(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new np(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new rp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return lp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return lp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new tp("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new tp("Layer "+this.name+" is not connected, no input to return.");return lp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new tp("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new tp("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return lp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=cp(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=cp(this.inputSpec);if(e.length!==t.length)throw new rp(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: `+e);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new rp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new rp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new rp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new rp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new rp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new rp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=cp(e);let r=!0;for(const e of n)if(!(e instanceof Zd)){r=!1;break}let s=!0;for(const e of n)if(e instanceof Zd){s=!1;break}if(r===s)throw new rp("Arguments to apply() must be all SymbolicTensors or all Tensors");return Up(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of cp(e))t.push(n.shape);this.build(lp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=cp(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=lp(a),null!=this.activityRegularizer)throw new sp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=cp(e);const t=[];for(const n of e)t.push(n.shape);return lp(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Zd(a,n,this,cp(e),t,this.name,r)):new Zd(a,r,this,cp(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new sp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(e)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new tp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new tp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new np(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Hd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return qd(e?this.trainableWeights:this.weights)}setWeights(e){_r(()=>{const t=this.weights;if(t.length!==e.length)throw new rp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=qd(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!f(a.shape,o.shape))throw new rp(`Layer weight shape ${a.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}Kd(n)})}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new rp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Od("zeros"));const o=r.apply(t,n),u=new jd(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss(()=>s.apply(u.read())),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=cp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=cp(e);t=cp(t),n=cp(n),r=cp(r),s=Wd(s),a=Wd(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Qd({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class tf extends ef{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:zd("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new rp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new rp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new rp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Zd(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Qd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new rp("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}var nf,rf;async function sf(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Ar(r)}}function af(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}tf.className="InputLayer",Sr(tf),(rf=nf||(nf={}))[rf.SILENT=0]="SILENT",rf[rf.VERBOSE=1]="VERBOSE";class of{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class uf{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class lf extends of{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=_r(()=>Fr(this.totals[e],Or(r,n)));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:_r(()=>{const n=Or(Mr(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Rr(t[e])}))}}class cf extends of{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class hf extends of{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");T(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=we();return(...s)=>{const a=we();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await sf(n),r.push(this.yield(e,t,n))),r.push(Eu()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await sf(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await sf(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Eu()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await sf(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await sf(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Eu()):T(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await sf(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await sf(e),await this.trainEnd(e))}}function pf(e,t){if(null==e&&(e={}),e instanceof of)return[e];if(Array.isArray(e)&&e[0]instanceof of)return e;return cp(e).map(e=>new hf(e,t))}class df{constructor(){}static registerCallbackConstructor(e,t){l(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, but got "+e),df.checkForDuplicate(t),null==df.constructors[e]&&(df.constructors[e]=[]),df.constructors[e].push(t)}static checkForDuplicate(e){for(const t in df.constructors){df.constructors[+t].forEach(t=>{if(t===e)throw new rp("Duplicate callback constructor.")})}}static clear(){df.constructors={}}static createCallbacks(e){const t=[];for(const n in df.constructors){const r=+n;e>=r&&t.push(...df.constructors[r])}return t.map(e=>new e)}}function ff(e,t,n,r,s,a,i,o,u){const l=new cf,c=[new lf,...df.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new uf(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function mf(e,t={},n=!1){return mp(e,Nr.getMap().classNameMap,t,"layer",n)}function gf(e,t){return _r(()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=Ca(cd(e),t,!0),r=ra(n.shape,ep()),s=ji(Ua(n,r));return Mr(e,s)})}function yf(e,t){return _r(()=>Ga(cd(Sa(t,e)),-1))}function bf(e,t){return _r(()=>Ga(Lr(Sa(t,e)),-1))}function xf(e,t){return _r(()=>{const n=Sa(e,t),r=Ns(Lr(e),ep(),Number.MAX_VALUE),s=Lr(Mr(n,r));return Or(100,Ga(s,-1))})}function vf(e,t,n=!1){return _r(()=>{if(n)t=zi(t);else{const e=Ca(t,t.shape.length-1,!0);t=Mr(t,e)}return t=Ns(t,ep(),1-ep()),wa(Ca(Or(e.toFloat(),ba(t)),t.shape.length-1))})}function wf(e,t,n=!1){return _r(()=>{const r=sa(function(e){const t=[Kp(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Ns(t,ep(),1-ep())).shape;return vf(sr(r,s[s.length-1]).reshape(s),t,n)})}function kf(e,t){return _r(()=>{let n;return n=Ns(t,ep(),1-ep()),n=ba(Mr(n,Sa(1,n))),Ga(function(e,t){if(!f(e.shape,t.shape))throw new rp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return _r(()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())})}(e,n),-1)})}function If(e,t){return _r(()=>{const n=gf(e,-1),r=gf(t,-1),s=Or(n,r);return wa(Ca(s,-1))})}df.constructors={};const Nf={meanSquaredError:yf,meanAbsoluteError:bf,meanAbsolutePercentageError:xf,meanSquaredLogarithmicError:function(e,t){return _r(()=>{const n=Ns(t,ep(),Number.MAX_VALUE),r=ba(Fr(1,n)),s=Ns(e,ep(),Number.MAX_VALUE),a=ba(Fr(1,s));return Ga(cd(Sa(r,a)),-1)})},squaredHinge:function(e,t){return _r(()=>{const n=Ua(0,Sa(1,Or(e,t)));return Ga(cd(n),-1)})},hinge:function(e,t){return _r(()=>{const n=Ua(0,Sa(1,Or(e,t)));return Ga(n,-1)})},categoricalHinge:function(e,t){return _r(()=>{const n=Ca(Or(e,t),-1),r=Na(Or(Sa(1,e),t),-1);return Ua(0,Fr(1,Sa(r,n)))})},logcosh:function(e,t){return _r(()=>{const n=Math.log(2),r=Sa(t,e),s=Sa(Fr(r,ka(Or(-2,r))),n);return Ga(s,-1)})},categoricalCrossentropy:vf,sparseCategoricalCrossentropy:wf,binaryCrossentropy:kf,kullbackLeiblerDivergence:function(e,t){return _r(()=>{const n=Ns(e,ep(),1),r=Ns(t,ep(),1);return Ca(Or(e,ba(Mr(n,r))),-1)})},poisson:function(e,t){return _r(()=>{const n=ba(Fr(ep(),t));return Ga(Sa(t,Or(e,n)),-1)})},cosineProximity:If};function Sf(e){if("string"==typeof e){if(e in Nf)return Nf[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new rp(t)}return e}function Cf(e,t){return _r(()=>{const n=Or(.5,ti(t)),r=Jp(ia(t,n),e.dtype);return Ga(Hs(e,r),-1)})}function Ef(e,t){return _r(()=>Jp(Hs(Ur(e,-1),Ur(t,-1)),"float32"))}function Tf(e,t){return kf(e,t)}function _f(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),Hs(e,t).asType("float32")}const Af=vf,Rf=wf,$f={binaryAccuracy:Cf,categoricalAccuracy:Ef,precision:function(e,t){return _r(()=>{const n=function(e,t){return _r(()=>Oa(e.equal(1),t.equal(1)).sum().cast("float32"))}(e,t),r=function(e,t){return _r(()=>Oa(e.equal(0),t.equal(1)).sum().cast("float32"))}(e,t),s=n.add(r);return js(ia(s,0),n.div(s),0).cast("float32")})},categoricalCrossentropy:Af,sparseCategoricalCrossentropy:Rf,mse:yf,MSE:yf,mae:bf,MAE:bf,mape:xf,MAPE:xf,cosine:If};function Ff(e){if("string"==typeof e&&e in $f)return $f[e];if("string"!=typeof e&&null!=e)return e;throw new rp("Unknown metric "+e)}function Df(e){if(op(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(const n of Object.keys(Nf))if(Nf[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys($f))if($f[n]===e){t=n;break}return void 0!==t?t:e.name}}function Mf(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const n=Object.keys(t);for(const r of n){if("string"!=typeof r)return!1;if(!e(t[r]))return!1}return!0}if(Array.isArray(t)){for(const n of t)if(!e(n))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Of(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Lf(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Bf(o[e],n,r):Pf(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?Hd(e.collectedTrainableWeights):Hd(e.trainableWeights);return t}(e),l=Hd(e.nonTrainableWeights);r("Total params: "+(u+l)),r("Trainable params: "+u),r("Non-trainable params: "+l),r("_".repeat(t))}function Lf(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Bf(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Lf([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Pf(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),u=0===a.length?"":a[0];Lf([`${i} (${o})`,s,e.countParams().toString(),u],t,r);for(let e=1;e<a.length;++e)Lf(["","","",a[e]],t,r)}function zf(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}class Vf{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Vf)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new rp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return qn(t,e.dtype)}catch(n){throw new rp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Zd){if(null==this.id2Value[e.id])throw new rp("Nonexistent key: "+e.name);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new rp("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof Zd){if(null==this.id2Value[e.id])throw new rp("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new rp("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Ar(this.id2Mask)}}const Wf={},Uf={};function Gf(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map(e=>e.name),u=[],c=t.names();for(const e of o)-1!==c.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=o.join(",")+"|"+t.names().join(",");let p,d;if(null==Wf[h]){const e=function(e,t){l(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const s=jf(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=jf(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:Hf(r)}}(i,t);p=e.sorted,d=e.recipientCounts,Wf[h]=p,Uf[h]=d}p=Wf[h],d={},s||Object.assign(d,Uf[h]);const f=new Vf(t);for(let e=0;e<p.length;++e){if(null!=r){const e=Tr().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof tf)continue;const l=[],c=[],h=[];let m=!1;for(const e of a.inputs){const n=f.getValue(e),r=f.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||h.push(n))}m&&((n=n||{}).mask=c[0]);const g=cp(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=qf(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}s||Ar(h)}return f.disposeMasks(),a?u:u[0]}function Hf(e){const t={};for(const n in e)t[n]=e[n].size;return t}function jf(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function qf(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Kf extends ef{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=zd(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],yp(this.inputs).length!==this.inputs.length)throw new rp("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(e=>e.name));yp(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(e=>e.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;op(0===n,"input layer has >1 nodes"),op(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof tf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new np(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Kf.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(s[e])}let d=Object.keys(p).map(e=>parseInt(e,10)).sort(gp);this.layers=[];for(const e of d){const t=p[e];t.sort((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof Kf&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map(e=>parseInt(e,10)).sort(gp);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new np("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${e.name}". The following previous layers were accessed without issue: `+m);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map(e=>e.name);for(const e of g){const t=g.filter(t=>t===e).length;if(1!==t)throw new np(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Qd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new rp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new rp("Duplicate weight name: "+t.originalName);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new rp("Provided weight data has no target variable: "+r);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new rp(`${e.length} of ${r} weights are not set: `+e)}Kd(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 2.8.5",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=function e(t,n){if(null==t)return null;if("string"==typeof t)return hp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const r=[],s=t.length;for(let a=0;a<s;++a){const s=t[a];zf(n,a,s)?r.push(s):r.push(e(s,n))}return r}{const n={};for(const r of Object.keys(t)){const s=t[r],a=hp(r);n[a]="name"!==r&&"className"!==r||"string"!=typeof s?e(s,r):s}return n}}(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return _r(()=>{e=cp(e);const n=new Vf;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Gf(this.outputs,n,t)})}computeMask(e,t){return _r(()=>{let n;return e=cp(e),n=null==t?ip(null,e.length):cp(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=Wd(e);if(t.length!==this.inputLayers.length)throw new rp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(gp);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Wd(t.computeOutputShape(lp(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){n[`${t.name}_${a}_${e}`]=s[e]}}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];op(t in n),s.push(n[t])}return lp(s)}runInternalGraph(e,t){null==t&&(t=ip(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(gp);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=cp(t.call(e,l)),u=cp(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map(e=>e[0]),i=a.map(e=>e[1]),null==l.mask&&(l.mask=i),o=cp(t.call(r,l)),u=cp(t.computeMask(r,i));if(t.activityRegularizer)throw new sp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){op(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Kf?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=Kf.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new rp(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new rp("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new rp("No such layer: "+e)}calculateLosses(){return _r(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Kf.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=Kf.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Kf.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=Kf.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=Kf.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(lp(n),r)}function u(e){const n=e.name,a=mf(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new rp("Corrupted configuration, expected array for nodeData: "+e);i(a,e)})}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!bp(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];op(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];op(t in s);const a=s[t].inboundNodes[n].outputTensors;p.push(a[r])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new rp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){_r(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function Xf(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Zf(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=_r(()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());Ar(t);const s=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])}),Ji(s,"float32")}return null}function Yf(e,t){return Or(e,t)}function Qf(e,t){let n,r;const s=t;n=s.xs,r=s.ys,l(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t);const a=Jf("input",e.inputNames,n),i=Jf("output",e.outputNames,r),o=a[0].shape[0];l(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: `+JSON.stringify(e.inputNames)+")"),l(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(e.outputNames)+")");for(let t=0;t<a.length;t++)l(a[t].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let t=0;t<i.length;t++)l(i[t].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function Jf(e,t,n){if(n instanceof Me)return[n];if(Array.isArray(n))return l(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const s of t){if(null==n[s])throw new rp(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function em(e,t,n){const r=null!=n.batchesPerEpoch;if(l(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),l(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),l(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),l(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),l(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(tm(n.validationData))l(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const e=function(e){if(3===e.length)throw new sp("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=s?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const h=pf(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=ff(h,p,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,c);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await d.onEpochBegin(m);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Qf(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Xf(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Zf(s[e],null,t[e]))}const l=r.concat(s).concat(i),p=o(l);Ar(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];a[t]=n,Rr(n)}await d.onBatchEnd(h,a),af(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=tm(n.validationData)?cp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):cp(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,l),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function tm(e){return"function"==typeof e.iterator}function nm(e){l(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got "+e)}function rm(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>td(e,t,n-t)):td(e,t,n-t)}function sm(e,t){return _r(()=>null==e?null:Array.isArray(e)?e.map(e=>sm(e,t)):ld(e,"int32"===t.dtype?t:t.toInt()))}function am(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}async function im(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,o,u,l,c,h;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;nm(p);const d=!1,f=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,p);s=f[0],a=f[1],h=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new sp("validationData including sample weights is not supported yet."):new rp("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");o=r.validationData[0],u=r.validationData[1];const t=!0,n=await e.standardizeUserData(o,u,null,null,t,p);l=n[0],c=n[1],m=l.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];l=rm(s,e,t),s=rm(s,0,e),c=rm(a,e,t),a=rm(a,0,e),m=l.concat(c)}else null!=r.validationSteps&&(g=!0);const y=s.concat(a).concat(h);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;g?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map(e=>"val_"+e))):(v=null,m=[],w=x.slice());const k=pf(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,a,o,u,l,c,h,p,d,f,m){null==s&&(s=32),null==a&&(a=1),null==h&&(h=!0),null==d&&(d=0);let g=!1;if(null!=l&&null!=c&&(g=!0),null!=m&&(g=!0,null==f))throw new rp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=e.checkNumSamples(n,s,f,"steps_per_epoch");let b;null!=y&&(b=Qp(0,y)),null==o&&(o=1);const{callbackList:x,history:v}=ff(u,o,a,d,y,f,s,g,p);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let o=d;o<a;++o){await x.onEpochBegin(o);const a={};if(null!=f)throw new sp("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new sp("batch shuffling is not implemneted yet");h&&i(b);const o=Ji(b),u=am(y,s);for(let i=0;i<u.length;++i){const h={};if(await x.onBatchBegin(i,h),_r(()=>{const p=u[i][0],d=u[i][1],f=td(o,p,d-p);h.batch=i,h.size=d-p;const m=sm(n,f),y=t(m);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,Rr(n)}if(i===u.length-1&&g){const t=e.testLoop(l,c,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];Rr(s),a["val_"+n]=s}}}),await x.onBatchEnd(i,h),af(h),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(o,a),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,x,p,r.epochs,r.verbose,k,v,m,r.shuffle,w,r.initialEpoch,null,null)}finally{e.isTraining=!1,um(s,t),um(a,n),um(l,o),um(c,u),null!=h&&Ar(h)}}function om(e){const t=[];e instanceof Me&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ed(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function um(e,t){if(null==e)return;const n=[];if(t instanceof Me)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Me)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach(e=>{e.isDisposed||e.dispose()})}function lm(e){return Array.isArray(e)}function cm(e){return!function(e){return e instanceof Me}(e)&&!lm(e)}function hm(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(lm(e)&&e.length>0)t=!0;else if(cm(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new rp(`Error when checking model ${s} expected no data, but got `+e)}return[]}if(null==e)return t.map(e=>null);let a;if(cm(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new rp(`No data provided for "${n}". Need data for each key in: `+t);a.push(e[n])}}else if(lm(e)){if((e=e).length!==t.length)throw new rp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): `+e);a=e}else{if(e=e,t.length>1)throw new rp(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+e.shape);a=[e]}if(a=om(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new rp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape `+i.shape);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u>=0&&o!==u)throw new rp(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function pm(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new rp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new rp(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(e.shape)+".");a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new rp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape `+JSON.stringify(i.shape));for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new rp(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class dm extends Kf{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new rp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Of(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Ru.adagrad(.01),Adadelta:()=>Ru.adadelta(1,.95,ep()),Adam:()=>Ru.adam(.001,.9,.999,ep()),Adamax:()=>Ru.adamax(.002,.9,.999,ep(),0),RMSProp:()=>Ru.rmsprop(.001,.9,0,ep()),SGD:()=>Ru.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new rp("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof bu))throw new rp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new rp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map(e=>Sf(e))}else{const n=Sf(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new rp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Sf(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Up("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Up("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===kf?-1!==["accuracy","acc"].indexOf(i)?r=Cf:-1!==["crossentropy","ce"].indexOf(i)&&(r=Tf):this.lossFunctions[e]===wf?-1!==["accuracy","acc"].indexOf(i)?r=_f:-1!==["crossentropy","ce"].indexOf(i)&&(r=Rf):-1!==["accuracy","acc"].indexOf(i)?r=Ef:-1!==["crossentropy","ce"].indexOf(i)&&(r=Af),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Ff(i);a=e,n=""+Df(i)}let t;Up(n,()=>{t=a}),s(e,n,t)}})(r[e])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;nm(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return lp(this.testLoop(i,a,r,n.verbose,n.steps))}finally{um(s[0],e),um(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new sp("Verbose mode is not implemented yet.");l(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=_r(()=>{if(t.value){const{xs:n,ys:r}=Qf(e,t.value),i=n.concat(r),l=_r(()=>s(i));if(Ar(i),0===u)for(let e=0;e<l.length;++e)a.push(_i(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=_r(()=>Fr(a[e],Or(c,t))),u>0&&Ar(n)}Ar(l),o+=c,++u}return a}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Mr(a[e],o),Ar(t)}return lp(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new rp(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+t)}else{if(null==e)throw new rp("Either the input data should have a defined shape, or "+r+" shoud be specified.");s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new rp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Vf;if(e instanceof Me&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new rp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new rp("No value is provided for the model's input "+t.name);a.add(t,n)}const i=Gf(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=ip(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(e=>e.name);for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new rp("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return _r(()=>{const r=this.checkNumSamples(e);if(n)throw new sp("Verbose predictLoop() is not implemented yet.");const s=am(r,t),a=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t){_r(()=>{const n=s[t][0],r=s[t][1],a=rm(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Vf(i);return Gf(this.outputs,o)}).forEach((e,t)=>a[t].push(e))}return lp(a.map(e=>ps(e,0)))})}predict(e,t={}){const n=om(e);pm(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return nm(r),this.predictLoop(n,r)}finally{um(n,e)}}predictOnBatch(e){pm(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new np("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===wf?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=yp(e.map(e=>e.shape[0]));r.sort();const s=yp(t.map(e=>e.shape[0]));if(s.sort(),r.length>1)throw new rp("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(e=>e.shape)));if(s.length>1)throw new rp("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(e=>e.shape)));if(r.length>0&&s.length>0&&!f(r,s))throw new rp(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=hm(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=hm(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[yf,kf,vf];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===vf&&1===a.shape[a.shape.length-1])throw new rp(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new rp(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new rp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Xf(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Zf(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return _r(()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new sp("Verbose mode is not implemented yet.");if(null!=s)throw new sp("steps mode in testLoop() is not implemented yet");{const r=am(a,n),s=Ji(Qp(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=td(s,a,o-a),l=sm(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(_i(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Fr(i[e],Or(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Mr(i[e],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(up(e,r)>1){s+="_"+up(e.slice(0,n),r)}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Vf(e),o=Gf(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Yf(n,s[e]));const a=Ga(n);t.push(a),u=0===e?n:Fr(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Ga(t(r[s],o[s]))}Rr(n),a.push(n)}return u=Ga(u),this.calculateLosses().forEach(e=>{u=Fr(u,e)}),u},!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>_r(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Vf(a),o=Gf(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Ga(r(s[e],o[e]));n=0===e?a:Fr(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Ga(n(s[r],o[r]));t.push(a)}return t})}async fit(e,t,n={}){return im(this,e,t,n)}async fitDataset(e,t){return em(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Ar(a),lp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Tr().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Tr().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=hp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>hp(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=hp(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[hp(Df(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>hp(Df(e)));{const e={};for(const t in this.metrics)e[t]=hp(Df(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=mf(function e(t,n){if(null===t)return null;if("string"==typeof t)return pp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const r=[],s=t.length;for(let a=0;a<s;++a){const s=t[a];zf(n,a,s)?r.push(s):r.push(e(s,n))}return r}{const n={};for(const r of Object.keys(t)){const s=t[r];if("name"===r&&"string"==typeof s)n[r]=s;else{const t=pp(r);n[t]=e(s,t)}}return n}}(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=pp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>pp(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=pp(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>pp(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=pp(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=wn(e);if(0===t.length)throw new rp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new rp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new rp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await dn(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.8.5",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await dn(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=yn([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Mf(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Mf(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}dm.className="Model",Sr(dm);class fm extends dm{}fm.className="Functional",Sr(fm);class mm extends dm{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:zd("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new rp("Negative dimension size caused by adding layer "+e.name+" with input shape ["+e.inboundNodes[0].inputTensors[0].shape+"]")}add(e){const t=e instanceof mm||e instanceof dm;let n;if(t){if(n=e,1!==n.outputs.length)throw new rp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new rp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new rp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new rp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new tf({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new rp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new rp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,n,r){if((null==n||null!=r&&r>0)&&(n=t.sourceLayer,r=t.nodeIndex),0===n.inboundNodes.length)return[t];{const t=n.inboundNodes[r];if(0===t.inboundLayers.length)return t.inputTensors;{const n=[];for(let r=0;r<t.inboundLayers.length;r++){const s=e(t.inputTensors[r],t.inboundLayers[r],t.nodeIndices[r]);for(const e of s)-1===n.indexOf(e)&&n.push(e)}return n}}}(this.outputs[0])}this.inboundNodes=[],new Qd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ip(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Gd(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new dm({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new np("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new np("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new np("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new np("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new rp("Legacy serialization format not supported yet.");s=t}else l(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof mm))throw new sp("Sequential.fromConfig called on non-Sequential input: "+i);for(const e of s){const t=mf(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new rp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new rp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}mm.className="Sequential",Sr(mm);class gm extends Ir{getConfig(){return{}}}class ym extends gm{apply(e,t=1){return function(e,t=1){if(1!==t)throw new sp(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Zs(e)}(e,t)}}ym.className="elu",Sr(ym);class bm extends gm{apply(e){return Ai(e)}}bm.className="selu",Sr(bm);class xm extends gm{apply(e){return Ni(e)}}xm.className="relu",Sr(xm);class vm extends gm{apply(e){return _r(()=>ja(6,Ni(e)))}}vm.className="relu6",Sr(vm);class wm extends gm{apply(e){return e}}wm.className="linear",Sr(wm);class km extends gm{apply(e){return ds(e)}}km.className="sigmoid",Sr(km);class Im extends gm{apply(e){return function(e){return _r(()=>{const t=Fr(.5,Or(.2,e));return Ns(t,0,1)})}(e)}}Im.className="hardSigmoid",Sr(Im);class Nm extends gm{apply(e){return ka(e)}}Nm.className="softplus",Sr(Nm);class Sm extends gm{apply(e){return function(e){return _r(()=>Mr(e,Lr(e).add(1)))}(e)}}Sm.className="softsign",Sr(Sm);class Cm extends gm{apply(e){return ms(e)}}Cm.className="tanh",Sr(Cm);class Em extends gm{apply(e,t=-1){return zi(e,t)}}Em.className="softmax",Sr(Em);class Tm extends gm{apply(e,t=-1){return Ea(e,t)}}Tm.className="logSoftmax",Sr(Tm);class _m extends gm{apply(e,t=1){return _r(()=>ds(e.mul(t)).mul(e))}}function Am(e){return e.getClassName()}function Rm(e,t={}){return mp(e,Nr.getMap().classNameMap,t,"activation")}function $m(e){if(null==e){const e={className:"linear",config:{}};return Rm(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Rm(t)}return e instanceof gm?e:Rm(e)}_m.className="swish",Sr(_m);class Fm extends Ir{}class Dm extends Fm{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return _r(()=>{let t=Ja([1]);return this.hasL1&&(t=Fr(t,Ca(Or(this.l1,Lr(e))))),this.hasL2&&(t=Fr(t,Ca(Or(this.l2,cd(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Dm.className="L1L2",Sr(Dm);const Mm={l1l2:"L1L2"};function Om(e){return fp(e)}function Lm(e,t={}){return mp(e,Nr.getMap().classNameMap,t,"regularizer")}function Bm(e){if(null==e)return null;if("string"==typeof e){return Lm({className:e in Mm?Mm[e]:e,config:{}})}return e instanceof Fm?e:Lm(e)}class Pm extends ef{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ud(e);let n=Ni(e);return null!=this.maxValue&&(n=Ns(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Pm.className="ReLU",Sr(Pm);class zm extends ef{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ud(e);return pa(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}zm.className="LeakyReLU",Sr(zm);class Vm extends ef{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Od(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Bm(e.alphaRegularizer),this.alphaConstraint=$p(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new rp("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Gd(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Xd({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ud(e),ii(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Md(this.alphaInitializer),alphaRegularizer:Om(this.alphaRegularizer),alphaConstraint:Ap(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Vm.className="PReLU",Sr(Vm);class Wm extends ef{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new sp(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ud(e);return Zs(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Wm.className="ELU",Sr(Wm);class Um extends ef{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ud(e);return n.mul(Jp(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Um.className="ThresholdedReLU",Sr(Um);class Gm extends ef{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Em).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Ud(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Hm(e,t,n){if("number"==typeof e)return ip(e,t);if(e.length!==t)throw new rp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new rp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number `+a)}return e;var r}function jm(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function qm(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Yp([n-t,0]);else{if("same"!==r)throw new rp(`Unsupport padding mode: ${r}.`);e*=t}return e}function Km(e,t){return _r(()=>(Pp(t),"channelsFirst"===t?ar(e,[0,2,3,1]):e))}function Xm(e,t){return _r(()=>(Pp(t),"channelsFirst"===t?ar(e,[0,2,3,4,1]):e))}function Zm(e,t,n,r=[1,1],s="valid",a,i,o=null){return _r(()=>{if(null==a&&(a="channelsLast"),Pp(a),3!==e.rank&&4!==e.rank)throw new rp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new rp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Km(e,a);if("causal"===s)throw new sp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=fo({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=ar(u,[0,3,1,2])),u})}Gm.className="Softmax",Sr(Gm);class Ym extends ef{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ym.verifyArgs(t),this.rank=e,wp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new sp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Hm(t.kernelSize,e,"kernelSize"),this.strides=Hm(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,zp(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Pp(this.dataFormat),this.activation=$m(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Od(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=$p(t.biasConstraint),this.biasRegularizer=Bm(t.biasRegularizer),this.activityRegularizer=Bm(t.activityRegularizer),this.dilationRate=Hm(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new rp("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new rp("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new rp("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(op("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!vp(e.kernelSize,"number",1,3))throw new rp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Am(this.activation),useBias:this.useBias,biasInitializer:Md(this.biasInitializer),biasRegularizer:Om(this.biasRegularizer),activityRegularizer:Om(this.activityRegularizer),biasConstraint:Ap(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Qm extends Ym{constructor(e,t){super(e,t),this.kernel=null,Qm.verifyArgs(t),this.filters=t.filters,wp(this.filters,"filters"),this.kernelInitializer=Od(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=$p(t.kernelConstraint),this.kernelRegularizer=Bm(t.kernelRegularizer)}build(e){e=Gd(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new rp("The channel dimension of the input should be defined. Found "+e[t]);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return _r(()=>{let t;e=Ud(e);const n=null==this.bias?null:this.bias.read(),r=kp(this.activation.getClassName());if(null!=r&&2===this.rank)t=Zm(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return _r(()=>{if(null==a&&(a="channelsLast"),Pp(a),3!==e.shape.length)throw new rp("The input of a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead.");if(3!==t.shape.length)throw new rp("The kernel for a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new rp("The bias for a conv1dWithBias operation should be 1, but is "+t.shape.length+" instead");if("channelsFirst"===a&&(e=ar(e,[0,2,1])),"causal"===s)throw new sp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=As(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=pd(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Zm(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new sp("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return _r(()=>{if(null==a&&(a="channelsLast"),Pp(a),4!==e.rank&&5!==e.rank)throw new rp("conv3dWithBias expects input to be of rank 4 or 5, but received "+e.rank+".");if(4!==t.rank&&5!==t.rank)throw new rp("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+e.rank+".");let o=Xm(e,a);if("causal"===s)throw new sp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Fs(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=pd(o,n)),"channelsFirst"===a&&(o=ar(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=Gd(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=jm(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Md(this.kernelInitializer),kernelRegularizer:Om(this.kernelRegularizer),kernelConstraint:Ap(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new rp("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}}class Jm extends Qm{constructor(e){super(2,e),Jm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!vp(e.kernelSize,"number",1,2))throw new rp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Jm.className="Conv2D",Sr(Jm);class eg extends Qm{constructor(e){super(3,e),eg.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new rp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}eg.className="Conv3D",Sr(eg);class tg extends Jm{constructor(e){if(super(e),this.inputSpec=[new Xd({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new rp("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=Gd(e)).length)throw new rp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new rp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Xd({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return _r(()=>{let t=Ud(e);if(4!==t.shape.length)throw new rp("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,qm(i,c,u,this.padding),qm(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ar(t,[0,2,3,1]));let d=$s(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=ar(d,[0,3,1,2])),null!=this.bias&&(d=pd(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d})}computeOutputShape(e){const t=(e=Gd(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=qm(t[r],o,a,this.padding),t[s]=qm(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}tg.className="Conv2DTranspose",Sr(tg);class ng extends Qm{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new rp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new rp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new rp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(t.padding));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Od(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Bm(t.depthwiseRegularizer),this.depthwiseConstraint=$p(t.depthwiseConstraint),this.pointwiseInitializer=Od(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Bm(t.pointwiseRegularizer),this.pointwiseConstraint=$p(t.pointwiseConstraint)}build(e){if((e=Gd(e)).length<this.rank+2)throw new rp(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new rp("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new Xd({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return _r(()=>{let t;if(e=Ud(e),1===this.rank)throw new sp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ar(e,[0,2,3,1])),t=Ri(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=pd(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ar(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Md(this.depthwiseInitializer),e.pointwiseInitializer=Md(this.pointwiseInitializer),e.depthwiseRegularizer=Om(this.depthwiseRegularizer),e.pointwiseRegularizer=Om(this.pointwiseRegularizer),e.depthwiseConstraint=Ap(this.depthwiseConstraint),e.pointwiseConstraint=Ap(this.pointwiseConstraint),e}}ng.className="SeparableConv";class rg extends ng{constructor(e){super(2,e)}}rg.className="SeparableConv2D",Sr(rg);class sg extends Qm{constructor(e){super(1,e),sg.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!vp(e.kernelSize,"number",1,1))throw new rp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}sg.className="Conv1D",Sr(sg);class ag extends ef{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return _r(()=>{if(e=Ud(e),"channelsLast"===this.dataFormat){const t=rd(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return rd(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=rd(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return rd(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ag.className="Cropping2D",Sr(ag);class ig extends ef{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pp(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,xp(Dp,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return _r(()=>{let t=Ud(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ar(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return ar(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ig.className="UpSampling2D",Sr(ig);class og extends Ym{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Od(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=$p(e.depthwiseConstraint),this.depthwiseRegularizer=Bm(e.depthwiseRegularizer)}build(e){if((e=Gd(e)).length<4)throw new rp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new rp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _r(()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return _r(()=>{null==s&&(s="channelsLast"),Pp(s);let i=Km(e,s);if(4!==e.rank)throw new rp("Input for depthwiseConv2d is required to be 4-D, but is instead "+e.rank+"-D");if(4!==t.rank)throw new rp("depthwiseKernel is required to be 4-D, but is instead "+t.rank+"-D");return i=zs(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=ar(i,[0,3,1,2])),i})}(e=Ud(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=pd(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=Gd(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=jm(t,this.kernelSize[0],this.padding,this.strides[0]),a=jm(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Md(this.depthwiseInitializer),e.depthwiseRegularizer=Om(this.depthwiseRegularizer),e.depthwiseConstraint=Ap(this.depthwiseRegularizer),e}}function ug(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new rp("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function lg(e,t,n,r=!1,s,a,i=!1,o=!1){return _r(()=>{const u=t.shape.length;if(u<3)throw new rp(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Qp(2,u));if(t=ar(t,l),null!=a)throw new sp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===u-1&&(s=Js(s,-1)),s=ar(s,l)),r&&(t=Ci(t,0),null!=s&&(s=Ci(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=ao(t);let m,g;null!=s&&(m=ao(s));for(let t=0;t<d;++t){const n=f[t],r=_r(()=>e(n,p));if(null==s)h=r[0],p=r[1];else{const e=_r(()=>{const e=m[t],n=ti(e).sub(e);return{output:r[0].mul(e).add(p[0].mul(n)),newStates:p.map((t,s)=>r[1][s].mul(e).add(t.mul(n)))}});h=e.output,p=e.newStates}o&&c.push(h)}if(o){g=Xi(c,1)}return[h,g,p]})}og.className="DepthwiseConv2D",Sr(og);class cg extends ef{constructor(e){let t;if(super(e),null==e.cell)throw new rp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new bg({cells:e.cell}):e.cell,null==t.stateSize)throw new rp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Xd({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Qp(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null)}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Vd(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return _r(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new sp("Constants support is not implemented in RNN yet.");Vd(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Xd({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!f(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new rp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=s.map(e=>new Xd({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){_r(()=>{if(!this.stateful)throw new tp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new rp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Ja([n,e])):this.states_=[Ja([n,this.cell.stateSize])];else if(null==e)Ar(this.states_),null!=this.keptStates&&(Ar(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Ja([n,e])):this.states_[0]=Ja([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new rp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);!0===t?this.keptStates.push(this.states_.slice()):Ar(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!f(r.shape,a))throw new rp(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>Rr(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=ug(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Xd({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof Zd){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return _r(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Ud(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new rp(`RNN Layer has ${a} state(s) but was passed `+s.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=lg((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h})}getInitialState(e){return _r(()=>{let t=Ja(e.shape);return t=Ca(t,[1,2]),t=ed(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?id(t,[1,e]):t):this.cell.stateSize>1?[id(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===cg.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=mf(t.cell,n);return new e(Object.assign(t,{cell:r}))}}cg.className="RNN",Sr(cg);class hg extends ef{}class pg extends hg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,wp(this.units,"units"),this.activation=$m(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Od(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Od(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Od(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Bm(e.kernelRegularizer),this.recurrentRegularizer=Bm(e.recurrentRegularizer),this.biasRegularizer=Bm(e.biasRegularizer),this.kernelConstraint=$p(e.kernelConstraint),this.recurrentConstraint=$p(e.recurrentConstraint),this.biasConstraint=$p(e.biasConstraint),this.dropout=Zp([1,Yp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zp([1,Yp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Gd(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _r(()=>{if(2!==(e=e).length)throw new rp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xg({ones:()=>ti(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xg({ones:()=>ti(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=ud(null!=a?Or(e,a):e,this.kernel.read()),null!=this.bias&&(s=pd(s,this.bias.read())),null!=i&&(n=Or(n,i));let o=Fr(s,ud(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Am(this.activation),useBias:this.useBias,kernelInitializer:Md(this.kernelInitializer),recurrentInitializer:Md(this.recurrentInitializer),biasInitializer:Md(this.biasInitializer),kernelRegularizer:Om(this.kernelRegularizer),recurrentRegularizer:Om(this.recurrentRegularizer),biasRegularizer:Om(this.biasRegularizer),activityRegularizer:Om(this.activityRegularizer),kernelConstraint:Ap(this.kernelConstraint),recurrentConstraint:Ap(this.recurrentConstraint),biasConstraint:Ap(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}pg.className="SimpleRNNCell",Sr(pg);class dg extends cg{constructor(e){e.cell=new pg(e),super(e)}call(e,t){return _r(()=>{null!=this.cell.dropoutMask&&(Ar(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ar(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return new e(t)}}dg.className="SimpleRNN",Sr(dg);class fg extends hg{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new rp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,wp(this.units,"units"),this.activation=$m(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$m(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Od(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Od(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Od(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Bm(e.kernelRegularizer),this.recurrentRegularizer=Bm(e.recurrentRegularizer),this.biasRegularizer=Bm(e.biasRegularizer),this.kernelConstraint=$p(e.kernelConstraint),this.recurrentConstraint=$p(e.recurrentConstraint),this.biasConstraint=$p(e.biasConstraint),this.dropout=Zp([1,Yp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zp([1,Yp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Gd(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _r(()=>{if(2!==(e=e).length)throw new rp("GRUCell expects 2 input Tensors (inputs, h, c), got "+e.length+".");const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xg({ones:()=>ti(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xg({ones:()=>ti(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=Or(e,s[0]));let l=ud(e,this.kernel.read());this.useBias&&(l=pd(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Or(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=Gi(c,[2*this.units,this.units],c.rank-1),d=ud(r,h),[f,m,g]=Gi(l,3,l.rank-1),[y,b]=Gi(d,2,d.rank-1);i=this.recurrentActivation.apply(Fr(f,y)),o=this.recurrentActivation.apply(Fr(m,b));const x=ud(Or(o,r),p);u=this.activation.apply(Fr(g,x));const v=Fr(Or(i,r),Or(Fr(1,wa(i)),u));return[v,v]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Am(this.activation),recurrentActivation:Am(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Md(this.kernelInitializer),recurrentInitializer:Md(this.recurrentInitializer),biasInitializer:Md(this.biasInitializer),kernelRegularizer:Om(this.kernelRegularizer),recurrentRegularizer:Om(this.recurrentRegularizer),biasRegularizer:Om(this.biasRegularizer),activityRegularizer:Om(this.activityRegularizer),kernelConstraint:Ap(this.kernelConstraint),recurrentConstraint:Ap(this.recurrentConstraint),biasConstraint:Ap(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}fg.className="GRUCell",Sr(fg);class mg extends cg{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fg(e),super(e)}call(e,t){return _r(()=>{null!=this.cell.dropoutMask&&(Ar(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ar(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}mg.className="GRU",Sr(mg);class gg extends hg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,wp(this.units,"units"),this.activation=$m(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$m(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Od(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Od(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Od(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Bm(e.kernelRegularizer),this.recurrentRegularizer=Bm(e.recurrentRegularizer),this.biasRegularizer=Bm(e.biasRegularizer),this.kernelConstraint=$p(e.kernelConstraint),this.recurrentConstraint=$p(e.recurrentConstraint),this.biasConstraint=$p(e.biasConstraint),this.dropout=Zp([1,Yp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zp([1,Yp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Gd(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends yd{apply(t,r){const s=e.apply([n]),a=(new xd).apply([n]),i=e.apply([2*n]);return ad(ad(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return _r(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new rp("LSTMCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xg({ones:()=>ti(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xg({ones:()=>ti(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Or(e,a[0]));let h=ud(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Or(r,i[0])),h=Fr(h,ud(r,this.recurrentKernel.read())),this.useBias&&(h=pd(h,this.bias.read()));const[p,d,f,m]=Gi(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=Fr(Or(u,s),Or(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Or(c,this.activation.apply(l));return[g,g,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Am(this.activation),recurrentActivation:Am(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Md(this.kernelInitializer),recurrentInitializer:Md(this.recurrentInitializer),biasInitializer:Md(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Om(this.kernelRegularizer),recurrentRegularizer:Om(this.recurrentRegularizer),biasRegularizer:Om(this.biasRegularizer),activityRegularizer:Om(this.activityRegularizer),kernelConstraint:Ap(this.kernelConstraint),recurrentConstraint:Ap(this.recurrentConstraint),biasConstraint:Ap(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}gg.className="LSTMCell",Sr(gg);class yg extends cg{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gg(e),super(e)}call(e,t){return _r(()=>{null!=this.cell.dropoutMask&&(Ar(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ar(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}yg.className="LSTM",Sr(yg);class bg extends hg{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return _r(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)})}build(e){let t;Vd(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{Up("RNNCell_"+r,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(mf(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return qd(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Kd(t)}}function xg(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>dd(t(),n),i=()=>fd(a,t,r);if(!s||s<=1)return Rr(i().clone());return Array(s).fill(void 0).map(i).map(e=>Rr(e.clone()))}bg.className="StackedRNNCells",Sr(bg);var vg=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class wg extends cg{constructor(e){if(e.unroll)throw new sp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new sp("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Xd({ndim:5})]}call(e,t){return _r(()=>{if(null!=this.cell.dropoutMask&&(Ar(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ar(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new rp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return _r(()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Ja([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){_r(()=>{if(!this.stateful)throw new tp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new rp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ja(s)):this.states_=[Ja(s)];else if(null==e)Ar(this.states_),null!=this.keptStates&&(Ar(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ja(s)):this.states_[0]=Ja(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new rp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);t?this.keptStates.push(this.states_.slice()):Ar(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!f(n.shape,r))throw new rp(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>Rr(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=jm(u,r[0],s,a[0],i[0]),h=jm(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}wg.className="ConvRNN2D";class kg extends gg{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,wp(this.filters,"filters"),this.kernelSize=Hm(n,2,"kernelSize"),this.kernelSize.forEach(e=>wp(e,"kernelSize")),this.strides=Hm(r||1,2,"strides"),this.strides.forEach(e=>wp(e,"strides")),this.padding=s||"valid",zp(this.padding),this.dataFormat=a||"channelsLast",Pp(this.dataFormat),this.dilationRate=Hm(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>wp(e,"dilationRate"))}build(e){var t;e=Gd(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new rp("The channel dimension of the input should be defined. Found "+e[n]);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends yd{apply(e,t){return sd([n.apply([r]),ei([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return _r(()=>{if(3!==e.length)throw new rp("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xg({ones:()=>ti(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Or(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xg({ones:()=>ti(s),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,v]=Gi(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?Gi(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,N,this.padding);const[S,C,E,T]=Gi(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,E),g=this.recurrentConv(g,T);const _=this.recurrentActivation.apply(Fr(u,d)),A=this.recurrentActivation.apply(Fr(l,f)),R=Fr(Or(A,a),Or(_,this.activation.apply(Fr(c,m)))),$=Or(this.recurrentActivation.apply(Fr(h,g)),this.activation.apply(R));return[$,$,R]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=vg(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=_s(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?pd(s,n,this.dataFormat):s}recurrentConv(e,t){return _s(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}kg.className="ConvLSTM2DCell",Sr(kg);class Ig extends wg{constructor(e){const t=new kg(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Ig.className="ConvLSTM2D",Sr(Ig);class Ng extends ef{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return _r(()=>{this.invokeCallHook(e,t);const n=Ud(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return fd(()=>dd(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Ng.className="Dropout",Sr(Ng);class Sg extends Ng{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Sg.className="SpatialDropout1D",Sr(Sg);class Cg extends ef{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,wp(this.units,"units"),this.activation=$m(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Od(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Od(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=$p(e.kernelConstraint),this.biasConstraint=$p(e.biasConstraint),this.kernelRegularizer=Bm(e.kernelRegularizer),this.biasRegularizer=Bm(e.biasRegularizer),this.activityRegularizer=Bm(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Gd(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Gd(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return _r(()=>{this.invokeCallHook(e,t);const n=Ud(e),r=kp(this.activation.getClassName());let s;return null!=r?s=ud(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=ud(n,this.kernel.read()),null!=this.bias&&(s=pd(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const e={units:this.units,activation:Am(this.activation),useBias:this.useBias,kernelInitializer:Md(this.kernelInitializer),biasInitializer:Md(this.biasInitializer),kernelRegularizer:Om(this.kernelRegularizer),biasRegularizer:Om(this.biasRegularizer),activityRegularizer:Om(this.activityRegularizer),kernelConstraint:Ap(this.kernelConstraint),biasConstraint:Ap(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Cg.className="Dense",Sr(Cg);class Eg extends ef{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Gd(e);for(const t of e.slice(1))if(null==t)throw new rp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Kp(e,1)]}call(e,t){return _r(()=>{this.invokeCallHook(e,t);let n=Ud(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new rp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Kp(e.shape,1)];return e.reshape(t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Eg.className="Flatten",Sr(Eg);class Tg extends ef{constructor(e){super(e),this.supportsMasking=!0,this.activation=$m(e.activation)}call(e,t){return _r(()=>{this.invokeCallHook(e,t);const n=Ud(e);return this.activation.apply(n)})}getConfig(){const e={activation:Am(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Tg.className="Activation",Sr(Tg);class _g extends ef{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return _r(()=>{return e=Ud(e),t=e,n=this.n,_r(()=>{if(2!==t.shape.length)throw new rp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return id(ed(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}_g.className="RepeatVector",Sr(_g);class Ag extends ef{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new rp("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=Kp(e);if(null!==a){if(0===s||i%s!=0)throw new rp(n);r[a]=i/s}else if(i!==s)throw new rp(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return _r(()=>{this.invokeCallHook(e,t);const n=Ud(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Ag.className="Reshape",Sr(Ag);class Rg extends ef{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");const t=Qp(1,e.dims.length+1);if(!f(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Xd({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Gd(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return ar(Ud(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Rg.className="Permute",Sr(Rg);class $g extends ef{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ud(e);return Wr(Qa(n,this.maskValue),-1)}call(e,t){return _r(()=>{this.invokeCallHook(e,t);const n=Ud(e),r=Wr(Qa(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}$g.className="Masking",Sr($g);class Fg extends ef{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(cp(e.inputLength))}this.inputDim=e.inputDim,wp(this.inputDim,"inputDim"),this.outputDim=e.outputDim,wp(this.outputDim,"outputDim"),this.embeddingsInitializer=Od(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Bm(e.embeddingsRegularizer),this.activityRegularizer=Bm(e.activityRegularizer),this.embeddingsConstraint=$p(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return _r(()=>this.maskZero?(e=Ud(e),Qa(e,qs(e))):null)}computeOutputShape(e){if(e=Gd(e),null==this.inputLength)return[...e,this.outputDim];const t=cp(this.inputLength);if(t.length!==e.length-1)throw new rp(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new rp(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return _r(()=>{this.invokeCallHook(e,t);let n=Ud(e);"int32"!==n.dtype&&(n=Jp(n,"int32"));return ld(this.embeddings.read(),n.as1D()).reshape(Gd(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Md(this.embeddingsInitializer),embeddingsRegularizer:Om(this.embeddingsRegularizer),activityRegularizer:Om(this.activityRegularizer),embeddingsConstraint:Ap(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Fg.className="Embedding",Sr(Fg);class Dg extends ef{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new sp}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new rp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Gd(e)]),(e=e).length<2)throw new rp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=yp(t),t.length>1)throw new rp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map(e=>e.length);-1===e.indexOf(null)&&1===yp(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return _r(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=Yp(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ed(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.reshape([s].concat(Kp(e.slice(1))));i=ar(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const s=Qp(1,e).concat([0]);t.push(ar(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=ar(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(Qp(0,s-1));r=ar(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=yp(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return _r(()=>{if(null==t)return null;if(!Array.isArray(t))throw new rp("`mask` should be an Array");if(!Array.isArray(e))throw new rp("`inputs` should be an Array");if(t.length!==e.length)throw new rp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:Js(e,0)))[0];for(let e=1;e<t.length-1;++e)n=Oa(n,t[e]);return n})}}class Mg extends Dg{constructor(e){super(e)}mergeFunction(e){return _r(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Fr(t,e[n]);return t})}}Mg.className="Add",Sr(Mg);class Og extends Dg{constructor(e){super(e)}mergeFunction(e){return _r(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Or(t,e[n]);return t})}}Og.className="Multiply",Sr(Og);class Lg extends Dg{constructor(e){super(e)}mergeFunction(e){return _r(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Fr(t,e[n]);return Or(1/e.length,t)})}}Lg.className="Average",Sr(Lg);class Bg extends Dg{constructor(e){super(e)}mergeFunction(e){return _r(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ua(t,e[n]);return t})}}Bg.className="Maximum",Sr(Bg);class Pg extends Dg{constructor(e){super(e)}mergeFunction(e){return _r(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ja(t,e[n]);return t})}}Pg.className="Minimum",Sr(Pg);class zg extends Dg{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new rp("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(f(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new rp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return _r(()=>sd(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new rp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new rp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new rp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new rp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return _r(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(ti(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(Js(t[n],-1)):r.push(t[n]);const s=ps(r,this.axis);return Vr(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Vg(e,t){for(;e<0;)e+=t;return e}zg.className="Concatenate",Sr(zg);class Wg extends Dg{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){l(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new sp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new rp(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new rp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>Vg(t,e[n].shape.length)):[Vg(this.axes,n.shape.length),Vg(this.axes,r.shape.length)],this.normalize&&(n=gf(n,t[0]),r=gf(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new sp("batchDot is not implemented for tensors of 4D or higher rank yet");if(l(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length),l(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new sp("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return _r(()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Vg(this.axes,e.length),Vg(this.axes,t.length)],n}computeOutputShape(e){l(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new sp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Wg.className="Dot",Sr(Wg);class Ug extends ef{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return _r(()=>{this.invokeCallHook(e,t);const n=Ud(e);return fd(()=>od(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}}Ug.className="GaussianNoise",Sr(Ug);class Gg extends ef{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return _r(()=>{this.invokeCallHook(e,t);const n=Ud(e);if(this.rate>0&&this.rate<1){return fd(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(od(n.shape,1,e))},()=>n,t.training||!1)}return n})}}Gg.className="GaussianDropout",Sr(Gg);class Hg extends ef{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ud(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return _r(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return fd(()=>{const t=Ud(e),r=-1.7580993408473766;let s=oa(vi(n),this.rate);s=Jp(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)},()=>Ud(e),t.training||!1)}return e})}}function jg(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=bs(e,t,n,r,s,a);else if(3===e.rank)i=xs(e,t,n,r,s,a);else{if(4!==e.rank)throw new sp(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=vs(e,t,n,r,s,a)}return i}function qg(e,t,n,r,s=.001){return f(r.slice().sort(),Qp(0,e.rank-1))?function(e,t,n,r,s=.001){return _r(()=>{const a=Za(e,r),i=a.mean,o=a.variance;return[jg(e,i,o,n,t,s),i,o]})}(e,t,n,r,s):function(e,t,n,r,s=.001){return _r(()=>{const a=Za(e,r),i=a.mean,o=a.variance,u=[];for(const t of Qp(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=i.reshape(u),c=o.reshape(u),h=null==t?null:t.reshape(u),p=null==n?null:n.reshape(u);return[jg(e,l,c,p,h,s),i,o]})}(e,t,n,r,s)}Hg.className="AlphaDropout",Sr(Hg);class Kg extends ef{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Od(e.betaInitializer||"zeros"),this.gammaInitializer=Od(e.gammaInitializer||"ones"),this.movingMeanInitializer=Od(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Od(e.movingVarianceInitializer||"ones"),this.betaConstraint=$p(e.betaConstraint),this.gammaConstraint=$p(e.gammaConstraint),this.betaRegularizer=Bm(e.betaRegularizer),this.gammaRegularizer=Bm(e.gammaRegularizer)}build(e){e=Gd(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new rp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(e)+".");this.inputSpec=[new Xd({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return _r(()=>{const n=null!=t.training&&t.training,r=Ud(e),s=r.shape,a=s.length,i=Qp(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=ip(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!f(l,Qp(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,s=this.scale?this.gamma.read().reshape(u):null;return jg(r,e,t,n,s,this.epsilon)}return jg(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=qg(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{_r(()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,d,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Md(this.betaInitializer),gammaInitializer:Md(this.gammaInitializer),movingMeanInitializer:Md(this.movingMeanInitializer),movingVarianceInitializer:Md(this.movingVarianceInitializer),betaRegularizer:Om(this.betaRegularizer),gammaRegularizer:Om(this.gammaRegularizer),betaConstraint:Ap(this.betaConstraint),gammaConstraint:Ap(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Kg.className="BatchNormalization",Sr(Kg);class Xg extends ef{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Od(e.betaInitializer||"zeros"),this.gammaInitializer=Od(e.gammaInitializer||"ones"),this.betaRegularizer=Bm(e.betaRegularizer),this.gammaRegularizer=Bm(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Gd(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error("Invalid axis: "+e);if(this.axis.length!==yp(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Ud(e),r=n.shape,s=r.length;return _r(()=>{let{mean:e,variance:t}=Za(n,this.axis,!0);const a=ip(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=e.tile(l),t=t.tile(l),o=o.tile(c),u=u.tile(c),jg(n,e,t,u,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Md(this.betaInitializer),gammaInitializer:Md(this.gammaInitializer),betaRegularizer:Om(this.betaRegularizer),gammaRegularizer:Om(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Xg.className="LayerNormalization",Sr(Xg);class Zg extends ef{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new rp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new rp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new rp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Xd({ndim:4})]}computeOutputShape(e){let t,n;return e=Gd(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return _r(()=>{return t=Ud(e),n=this.padding,r=this.dataFormat,_r(()=>{if(4!==t.rank)throw new rp("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new rp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new rp(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ni(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Yg(e,t,n,r,s,a){return _r(()=>{let i;Pp(s),Vp(a),zp(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Km(e,s);const o="same"===r?"same":"valid";return i="max"===a?za(e,t,n,o):cs(e,t,n,o),"channelsFirst"===s&&(i=ar(i,[0,3,1,2])),i})}function Qg(e,t,n,r,s,a){return _r(()=>{let i;Pp(s),Vp(a),zp(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Xm(e,s);const o="same"===r?"same":"valid";return i="max"===a?Va(e,t,n,o):hs(e,t,n,o),"channelsFirst"===s&&(i=ar(i,[0,4,1,2,3])),i})}Zg.className="ZeroPadding2D",Sr(Zg);class Jg extends ef{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new rp("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(wp(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new rp("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}wp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,zp(this.padding),this.inputSpec=[new Xd({ndim:3})]}computeOutputShape(e){const t=jm((e=Gd(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return _r(()=>{this.invokeCallHook(e,t),e=ed(Ud(e),2);const n=this.poolingFunction(Ud(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ki(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class ey extends Jg{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pp(s),zp(r),Yg(e,t,n,r,s,"max")}}ey.className="MaxPooling1D",Sr(ey);class ty extends Jg{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pp(s),zp(r),Yg(e,t,n,r,s,"avg")}}ty.className="AveragePooling1D",Sr(ty);class ny extends ef{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new rp("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides];wp(this.poolSize,"poolSize"),wp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pp(this.dataFormat),zp(this.padding),this.inputSpec=[new Xd({ndim:4})]}computeOutputShape(e){e=Gd(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=jm(t,this.poolSize[0],this.padding,this.strides[0]),n=jm(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return _r(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ud(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ry extends ny{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pp(s),zp(r),Yg(e,t,n,r,s,"max")}}ry.className="MaxPooling2D",Sr(ry);class sy extends ny{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pp(s),zp(r),Yg(e,t,n,r,s,"avg")}}sy.className="AveragePooling2D",Sr(sy);class ay extends ef{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new rp("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];wp(this.poolSize,"poolSize"),wp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pp(this.dataFormat),zp(this.padding),this.inputSpec=[new Xd({ndim:5})]}computeOutputShape(e){e=Gd(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=jm(t,this.poolSize[0],this.padding,this.strides[0]),n=jm(n,this.poolSize[1],this.padding,this.strides[1]),r=jm(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return _r(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ud(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class iy extends ay{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pp(s),zp(r),Qg(e,t,n,r,s,"max")}}iy.className="MaxPooling3D",Sr(iy);class oy extends ay{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pp(s),zp(r),Qg(e,t,n,r,s,"avg")}}oy.className="AveragePooling3D",Sr(oy);class uy extends ef{constructor(e){super(e),this.inputSpec=[new Xd({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new sp}}class ly extends uy{constructor(e){super(e||{})}call(e,t){return _r(()=>{const t=Ud(e);return Ga(t,1)})}}ly.className="GlobalAveragePooling1D",Sr(ly);class cy extends uy{constructor(e){super(e||{})}call(e,t){return _r(()=>{const t=Ud(e);return Na(t,1)})}}cy.className="GlobalMaxPooling1D",Sr(cy);class hy extends ef{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pp(this.dataFormat),this.inputSpec=[new Xd({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new sp}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class py extends hy{call(e,t){return _r(()=>{const t=Ud(e);return"channelsLast"===this.dataFormat?Ga(t,[1,2]):Ga(t,[2,3])})}}py.className="GlobalAveragePooling2D",Sr(py);class dy extends hy{call(e,t){return _r(()=>{const t=Ud(e);return"channelsLast"===this.dataFormat?Na(t,[1,2]):Na(t,[2,3])})}}dy.className="GlobalMaxPooling2D",Sr(dy);class fy extends ef{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=mf(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class my extends fy{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Gd(e)).length<3)throw new rp("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Gd(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return _r(()=>lg((e,n)=>[Ud(this.layer.call(e,t)),[]],e=Ud(e),[],!1,null,null,!1,!0)[1])}}my.className="TimeDistributed",Sr(my);class gy extends fy{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=mf(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=mf(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,xp(Lp,"BidirectionalMergeMode",s),e.weights)throw new sp("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):lp(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=ug(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new rp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map(e=>new Xd({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new sp("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Zd;for(const e of a)if(e instanceof Zd!==o)throw new rp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return _r(()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ci(s,1)),"concat"===this.mergeMode?i=sd([r,s]):"sum"===this.mergeMode?i=Fr(r,s):"ave"===this.mergeMode?i=Or(.5,Fr(r,s)):"mul"===this.mergeMode?i=Or(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Up(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Up(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=mf(t.layer);if(delete t.layer,null!=t.numConstants)throw new sp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function yy(e,t){return function e(t,n,r=new Map,s=new Set){if(null==t)return null;if(s.has(t))throw new Error("Circular references are not supported.");if(r.has(t))return r.get(t);const a=n(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(vy(t)){const a=Array.isArray(t)?[]:{};s.add(t);for(const i in t){const o=t[i],u=e(o,n,r,s);a[i]=u}return s.delete(t),a}throw new Error("Can't recurse into non-iterable type: "+t)}return r.set(t,a.value),a.value}(e,t)}function by(e,t=xy){return function e(t,n,r=new Set){const s=t[0];if(r.has(s))throw new Error("Circular references are not supported.");const a=n(t);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(vy(s)){const a=Array.isArray(s)?[]:{};r.add(s);for(const i in s){const s=t.map(e=>e[i]),o=e(s,n,r);a[i]=o}return r.delete(s),a}throw new Error("Can't recurse into non-iterable type: "+s)}return a.value}(e,t)}function xy(e){return null===e?null:vy(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function vy(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Me))}function wy(e){return e instanceof Me?{value:e.clone(),recurse:!1}:vy(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}gy.className="Bidirectional",Sr(gy);class ky{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Iy extends ky{constructor(){super(Iy.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Iy.INITIAL_CAPACITY=32;class Ny{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Fy(this,e)}filter(e){return new Ry(this,e)}map(e){return new $y(this,e)}mapAsync(e){return new Dy(this,e)}serialMapAsync(e){return new Dy(this,e).serial()}flatmap(e){return new Oy(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new Ay(this,e,t)}columnMajorBatch(e,t=!0,n=xy){return this.rowMajorBatch(e,t).map(e=>by(e,n))}concatenate(e,t){return new Ly(new Sy([this,e]),t)}take(e){return e<0||null==e?this:new _y(this,e)}skip(e){return e<0||null==e?this:new Ty(this,e)}prefetch(e){return new zy(this,e)}shuffle(e,t){return new Vy(this,e,t)}serial(){return new Ey(this)}}class Sy extends Ny{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,yy(t,wy)),done:!1};var t}}class Cy extends Ny{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}}class Ey extends Ny{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class Ty extends Ny{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Ar(e.value)}return this.upstream.next()}}class _y extends Ny{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Ay extends Ny{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Ry extends Ny{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ar(e.value)}}}class $y extends Ny{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Qe(e.value),n=this.transform(e.value),r=Qe(n);for(const e of t)Ye(e,r)||e.dispose();return{value:n,done:!1}}}class Fy extends Ny{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Dy extends Ny{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Qe(e.value),n=await this.transform(e.value),r=Qe(n);for(const e of t)Ye(e,r)||e.dispose();return{value:n,done:!1}}}class My extends Ny{constructor(){super(),this.outputQueue=new Iy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Oy extends My{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Qe(e.value),n=this.transform(e.value),r=Qe(n);this.outputQueue.pushAll(n);for(const e of t)Ye(e,r)||e.dispose();return!0}}class Ly extends Ny{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var By,Py;(Py=By||(By={}))[Py.FAIL=0]="FAIL",Py[Py.SHORTEST=1]="SHORTEST",Py[Py.LONGEST=2]="LONGEST";class zy extends Ny{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new ky(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Vy extends zy{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ui.alea(n||we().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Wy{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return l(e>0,()=>"batchSize needs to be positive, but it is\n      "+e),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Uy(async()=>(await n.iterator()).columnMajorBatch(e,t,Gy),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Uy(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Uy(async()=>(await t.iterator()).filter(t=>_r(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Uy(async()=>(await t.iterator()).map(t=>_r(()=>e(t))),this.size)}mapAsync(e){const t=this;return Uy(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Uy(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Uy(async()=>{const n=new Cy(async()=>({value:await t.iterator(),done:!1}));var r,s;return r=n.take(e),new Ly(r,s)},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Uy(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=ui.alea(t||we().toString());return Uy(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Uy(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Uy(e,t=null){return new class extends Wy{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Gy(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof Me||S(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Me?Xi(e):cn(e)}(e),recurse:!1}}var n,r;return{value:null,recurse:!0}}Wy.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function Hy(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&l("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}const jy=io;class qy extends s{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r(this,Er())}write(e,t,n){this.firstUse&&(this.firstUse=!1,W().get("IS_NODE")&&Vu("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&E(n[0])){const s=n.map(e=>ke(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Wu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>Ie(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return jn(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Er().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=we();e();return{kernelMs:we()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Hy([e],"where");const t=this.readSync(e.dataId);return jy(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Ky(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Xy={kernelName:"Abs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Hy(t,"abs");let r=new Float32Array(d(t.shape));return r=Ky(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}};function Zy(e){return(t,n,r,s,a)=>{const i=Gs(t,n),o=i.length,u=$(i),l=k(a,d(i)),c=t.length,h=n.length,p=$(t),f=$(n),m=Ws(t,i),g=Ws(n,i);if(m.length+g.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=P(t,o,u),a=n.slice(-c);m.forEach(e=>a[e]=0);const i=B(a,c,p),d=n.slice(-h);g.forEach(e=>d[e]=0);const y=B(d,h,f);l[t]=e(r[i],s[y])}return[l,i]}}function Yy(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const Qy={kernelName:"Complex",backendName:"cpu",kernelFunc:Yy};function Jy(e,t,n="float32"){if("complex64"===n){return Yy({inputs:{real:Jy(e,t,"float32"),imag:Jy(e,t,"float32")},backend:e})}const r=M(d(t),n);return e.makeTensorInfo(t,n,r)}function eb(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const tb={kernelName:"Identity",backendName:"cpu",kernelFunc:eb};function nb(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const rb={kernelName:"Real",backendName:"cpu",kernelFunc:nb};function sb(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return eb({inputs:{x:s},backend:n});const e=Jy(n,s.shape,s.dtype),t=sb({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Yy({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=nb({inputs:{input:s},backend:n}),t=sb({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!N(s.dtype,a)){const e=eb({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=ve([0],s.dtype),[r,a]=Zy((e,t)=>e!==t?1:0)(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const ab={kernelName:"Cast",backendName:"cpu",kernelFunc:sb};function ib(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;Hy([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c=r||a.dtype,[h,p]=t(a.shape,i.shape,u,l,c);return o.makeTensorInfo(p,c,h)}:({inputs:e,backend:s})=>{const{a:a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=sb({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=sb({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=Yy({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function ob(e){return(t,n,r,s,a,i)=>{const o=Gs(t,n),u=d(o),l=o.length,c=$(o),h=k("float32",u),p=k("float32",u),f=Ws(t,o),m=Ws(n,o),g=Wu(r,s),y=Wu(a,i),b=t.length,x=$(t),v=n.length,w=$(n);if(f.length+m.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%y.length,s=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);h[t]=s.real,p[t]=s.imag}else for(let t=0;t<h.length;t++){const n=P(t,l,c),r=n.slice(-b);f.forEach(e=>r[e]=0);const s=B(r,b,x),a=n.slice(-v);m.forEach(e=>a[e]=0);const i=B(a,v,w),o=e(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const ub=Zy((e,t)=>e+t),lb=ib("Add",ub,ob((e,t,n,r)=>({real:e+n,imag:t+r}))),cb={kernelName:"Add",backendName:"cpu",kernelFunc:lb};function hb(e,t,n,r,s){const a=d(r),i=M(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function pb(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=jn([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}function db(e){return(t,n,r)=>{const s=k(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function fb(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Hy(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=d(i.shape),c=n||i.dtype,h=I(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],s);return o.makeTensorInfo(i.shape,c,h)}}function mb(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Hy(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}const gb=db(e=>Math.ceil(e)),yb={kernelName:"Ceil",backendName:"cpu",kernelFunc:mb("Ceil",gb)};function bb(e,t,n,r){const s=I(n,d(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=d(e.shape);s.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const a="string"===n?qu(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]})}return s}const xb=db(e=>Math.exp(e)),vb=mb("Exp",xb),wb={kernelName:"Exp",backendName:"cpu",kernelFunc:vb},kb=db(e=>Math.expm1(e)),Ib={kernelName:"Expm1",backendName:"cpu",kernelFunc:mb("Expm1",kb)},Nb=db(e=>Math.floor(e)),Sb={kernelName:"Floor",backendName:"cpu",kernelFunc:mb("Floor",Nb)};function Cb(e,t,n){const r=jn(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);r.values[n]=e.values[u]}return r}const Eb=Zy((e,t)=>e>t?1:0),Tb={kernelName:"Greater",backendName:"cpu",kernelFunc:ib("Greater",Eb,null,"bool")},_b=Zy((e,t)=>e<t?1:0),Ab={kernelName:"Less",backendName:"cpu",kernelFunc:ib("Less",_b,null,"bool")};function Rb(e,t,n){const r=(t-e)/(n-1),s=M(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const $b=db(e=>Math.log(e)),Fb={kernelName:"Log",backendName:"cpu",kernelFunc:mb("Log",$b)};function Db(e,t,n,r){const s=k(r,d(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}const Mb=Zy((e,t)=>Math.max(e,t)),Ob={kernelName:"Maximum",backendName:"cpu",kernelFunc:ib("Maximum",Mb)},Lb=Zy((e,t)=>Math.min(e,t)),Bb={kernelName:"Minimum",backendName:"cpu",kernelFunc:ib("Minimum",Lb)},Pb=Zy((e,t)=>e*t),zb=ob((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),Vb=ib("Multiply",Pb,zb),Wb={kernelName:"Multiply",backendName:"cpu",kernelFunc:Vb};function Ub(e,t,n){const r=xe(-1,n);return Pb([],t,r,e,n)}const Gb={kernelName:"Neg",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Hy(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=Ub(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},Hb={kernelName:"NotEqual",backendName:"cpu",kernelFunc:ib("NotEqual",Zy((e,t)=>e!==t?1:0),null,"bool")};function jb(e,t,n,r,s){const a=t.length,i=d(t),o=$(t),u=$(s),l=k(n,d(s));for(let t=0;t<i;++t){const n=P(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[B(s,a,u)]=e[t]}return l}function qb(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;Hy(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=jb(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const Kb={kernelName:"Transpose",backendName:"cpu",kernelFunc:qb};function Xb(e,t,n,r){const[s,a]=_a(e,r),i=Ke(t,"int32"),o=M(d(s),i),u=d(a);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const Zb={kernelName:"Prod",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Hy(s,"prod");const o=s.shape.length,u=v(a,s.shape),l=$a(u,o);let c=u,h=s;const p=[];null!=l&&(h=qb({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(h),c=Da(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Xb(h.shape,h.dtype,d,c);let y=m;return i&&(y=Aa(m,u)),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}};function Yb(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return M(0,r);const s=M(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const Qb=db(e=>1/Math.sqrt(e)),Jb={kernelName:"Rsqrt",backendName:"cpu",kernelFunc:mb("Rsqrt",Qb)};function ex(e,t,n,r,s){const a=xr(r,t,n),i=d(n),o=$(r);if(a){const n=vr(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u=jn(r,s,"string"===s?qu(e):e),l=jn(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map((e,n)=>e+t[n]);l.set(u.get(...r),...n)}return"string"===s?l.values.map(e=>ke(e)):l.values}function tx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;Hy(s,"slice");const[o,u]=wr(s,a,i);hr(s,o,u);const l=ex(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const nx={kernelName:"Slice",backendName:"cpu",kernelFunc:tx},rx={kernelName:"SquaredDifference",backendName:"cpu",kernelFunc:ib("SquaredDifference",Zy((e,t)=>{const n=e-t;return n*n}))};function sx(e,t,n,r){const s=jn(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const ax=Zy((e,t)=>e-t),ix=ib("Sub",ax,ob((e,t,n,r)=>({real:e-n,imag:t-r}))),ox={kernelName:"Sub",backendName:"cpu",kernelFunc:ix};function ux(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=jn(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}function lx(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=k(n,i*r),l=k("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort((e,t)=>t.value-e.value);const i=t*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[jn(c,n,u),jn(c,"int32",l)]}function cx(e,t,n,r){const s=v(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),u=new Re(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new Re(h,r);l.forEach((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,e,r),n,t,r)});const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}$r("cpu",()=>new qy,1);const hx=fb("Elu",e=>e>=0?e:Math.exp(e)-1),px={kernelName:"Elu",backendName:"cpu",kernelFunc:hx};function dx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;Hy([s],"leakyRelu");const i=d(s.shape),o=n.data.get(s.dataId).values,u=k("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const fx={kernelName:"LeakyRelu",backendName:"cpu",kernelFunc:dx},mx=Zy((e,t)=>e<0?t*e:e);function gx(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Hy([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=mx(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const yx={kernelName:"Prelu",backendName:"cpu",kernelFunc:gx},bx=fb("Relu",e=>Math.max(0,e)),xx={kernelName:"Relu",backendName:"cpu",kernelFunc:bx},vx=fb("Relu6",e=>Math.min(Math.max(0,e),6)),wx={kernelName:"Relu6",backendName:"cpu",kernelFunc:vx};function kx(e,t,n,r,s){if("linear"===n)return eb({inputs:{x:t},backend:e});if("relu"===n)return bx({inputs:{x:t},backend:e});if("elu"===n)return hx({inputs:{x:t},backend:e});if("relu6"===n)return vx({inputs:{x:t},backend:e});if("prelu"===n)return gx({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return dx({inputs:{x:t},backend:e,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Ix(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=d(s.shape),o=x(a,i),u=d(o);l(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Nx={kernelName:"Reshape",backendName:"cpu",kernelFunc:Ix};function Sx(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;Hy([s,a],"matMul");const u=s.shape.length,c=a.shape.length,h=i?s.shape[u-2]:s.shape[u-1],p=o?a.shape[c-1]:a.shape[c-2],f=i?s.shape[u-1]:s.shape[u-2],m=o?a.shape[c-2]:a.shape[c-1],g=s.shape.slice(0,-2),y=a.shape.slice(0,-2),b=d(g),x=d(y);l(u>=2&&c>=2&&(b===x||1===b||1===x),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`);const v=(b>x?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([f,m]);l(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);const w=o?[x,m,p]:[x,p,m],k=Ix({inputs:{x:s},backend:n,attrs:{shape:i?[b,h,f]:[b,f,h]}}),I=Ix({inputs:{x:a},backend:n,attrs:{shape:w}}),N=i?k.shape[1]:k.shape[2],S=i?k.shape[2]:k.shape[1],C=o?I.shape[1]:I.shape[2],E=Math.max(b,x),T=n.data.get(k.dataId).values,_=n.data.get(I.dataId).values,A=$(k.shape),R=$(I.shape),[F,D,M]=i?[A[0],1,A[1]]:[A[0],A[1],1],[O,L,B]=o?[1,R[1],R[0]]:[R[1],1,R[0]],P=S*C,z=jn([E,S,C],k.dtype),V=z.values,W=n.blockSize;for(let e=0;e<E;e++)for(let t=0;t<S;t+=W)for(let n=0;n<C;n+=W)for(let r=0;r<N;r+=W){const s=Math.min(t+W,S),a=Math.min(n+W,C),i=Math.min(r+W,N);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,b-1)*F,a=Math.min(e,x-1)*B;n+=T[r+o*D+s*M]*_[s*O+t*L+a]}V[e*P+(o*C+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,z.dtype,z.values)}const Cx={kernelName:"BatchMatMul",backendName:"cpu",kernelFunc:Sx};const Ex={kernelName:"_FusedMatMul",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=Sx({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=lb({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=kx(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}},Tx={kernelName:"Acos",backendName:"cpu",kernelFunc:fb("Acos",e=>Math.acos(e))},_x={kernelName:"Acosh",backendName:"cpu",kernelFunc:fb("Acosh",e=>Math.acosh(e))};const Ax={kernelName:"AddN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Hy(t,"addN");const s=r.map(e=>n.data.get(e.dataId).values),a=jn(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};const Rx={kernelName:"All",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Hy(s,"all");const o=v(a,s.shape);let u=o;const l=$a(u,s.shape.length);let c=s;null!=l&&(c=qb({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Da(u.length,s.shape.length)),Ra("all",u,c.shape.length);const[h,p]=_a(c.shape,u),f=d(p),m=M(d(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n&&r}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,m);if(i){const e=Ix({inputs:{x:y},backend:n,attrs:{shape:Aa(h,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const $x={kernelName:"Any",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Hy(s,"any");const o=v(a,s.shape);let u=o;const l=$a(u,s.shape.length);let c=s;null!=l&&(c=qb({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Da(u.length,s.shape.length)),Ra("any",u,c.shape.length);const[h,p]=_a(c.shape,u),f=d(p),m=M(d(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n||r}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,m);if(i){const e=Ix({inputs:{x:y},backend:n,attrs:{shape:Aa(h,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const Fx={kernelName:"ArgMax",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Hy(s,"argMax");let i=v(a,s.shape);const o=$a(i,s.shape.length);let u=s;const l=[];null!=o&&(u=qb({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Da(i.length,u.shape.length)),i=[i[0]],Ra("argMax",i,u.shape.length);const[c,h]=_a(u.shape,i),p=M(d(c),"int32"),f=d(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const s=m[t+e];s>n&&(n=s,r=e)}p[e]=r}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",p)}};const Dx={kernelName:"ArgMin",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Hy(s,"argMin");let i=v(a,s.shape);const o=$a(i,s.shape.length);let u=s;const l=[];null!=o&&(u=qb({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Da(i.length,u.shape.length)),i=[i[0]],Ra("argMin",i,u.shape.length);const[c,h]=_a(u.shape,i),p=M(d(c),"int32"),f=d(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const s=m[t+e];s<n&&(n=s,r=e)}p[e]=r}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",p)}},Mx={kernelName:"Asin",backendName:"cpu",kernelFunc:fb("Asin",e=>Math.asin(e))},Ox={kernelName:"Asinh",backendName:"cpu",kernelFunc:fb("Asinh",e=>Math.asinh(e))},Lx={kernelName:"Atan",backendName:"cpu",kernelFunc:fb("Atan",e=>Math.atan(e))},Bx={kernelName:"Atan2",backendName:"cpu",kernelFunc:ib("Atan2",Zy((e,t)=>Math.atan2(e,t)))},Px={kernelName:"Atanh",backendName:"cpu",kernelFunc:fb("Atanh",e=>Math.atanh(e))};function zx(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=jn(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<p;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/v:y}}}return m}function Vx(e,t,n,r,s=!1,a=!1){const i=jn(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=jn(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>v&&(v=l,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+u)}}i.set(w,e,n,o,t)}}return i}function Wx(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=jn(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const S=w*i-m;let C=S;for(;C<0;)C+=l;const E=Math.min(s.inDepth,p+S),T=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+i),w=T+n*I;for(let n=0;n<s.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const d=Math.min(s.inWidth,f+i),g=w+n*N;let k=b,I=0,S=0;for(let n=C;n<E;n+=l){const s=x+n*r[1];for(let n=p;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<d;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===a?I/S:k}}}}return x}const Ux={kernelName:"AvgPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Hy(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;l(os(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Yr(s.shape,a,i,1,o,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&f(c.inShape,c.outShape))h=eb({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=$(s.shape),r=zx(e,s.shape,s.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}};const Gx={kernelName:"AvgPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l,dilations:c}=r;Hy(s,"avgPool3d");let h=c;null==h&&(h=[1,1,1]);const p=Qr(s.shape,a,i,h,o,u,l),d=Wx(n.data.get(s.dataId).values,s.shape,s.dtype,$(s.shape),p,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const Hx={kernelName:"AvgPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;Hy([s,a],"avgPool3DGrad");const h=Qr(a.shape,i,o,l,u,c),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=h.dilationDepth,x=h.dilationHeight,v=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,I=h.effectiveFilterWidth,N=w-1-h.padInfo.front,S=I-1-h.padInfo.left,C=k-1-h.padInfo.top,E=jn(a.shape,"float32"),T=1/(m*g*y),_=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const a=n-N,i=r-C,o=s-S;let u=0;for(let n=0;n<w;n+=b){const r=(a+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const s=(i+n)/d;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<I;n+=v){const a=(o+n)/f;if(a<0||a>=h.outWidth||Math.floor(a)!==a)continue;u+=_.get(e,r,s,a,t)}}}E.set(u*T,e,n,r,s,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}};const jx={kernelName:"AvgPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Hy([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Yr(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=jn(i.shape,"float32"),k=1/(d*f),I=n.data.get(s.dataId).values,N=jn(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;i+=N.get(e,r,s,t)}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const qx={kernelName:"FusedBatchNorm",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;l(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),l(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),l(null==a||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Hy([s,o,u,a,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const h=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=d.length,v=p.length;let w=0,k=0,I=0,N=0;for(let e=0;e<h.length;++e)g[e]=m[w++]+(h[e]-p[k++])*f[I++]/Math.sqrt(d[N++]+c),w>=y&&(w=0),k>=v&&(k=0),I>=b&&(I=0),N>=x&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};const Kx={kernelName:"BatchToSpaceND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;Hy([s],"batchToSpaceND");const o=a.reduce((e,t)=>e*t),u=Ou(s.shape,a,o),l=Lu(u.length,a.length),c=Bu(s.shape,a,o),h=Pu(i,a.length),p=zu(c,i,a.length),d=Ix({inputs:{x:s},backend:n,attrs:{shape:u}}),f=qb({inputs:{x:d},backend:n,attrs:{perm:l}}),m=Ix({inputs:{x:f},backend:n,attrs:{shape:c}}),g=tx({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const Xx={kernelName:"Bincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=hb(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},Zx={kernelName:"ClipByValue",backendName:"cpu",kernelFunc:fb("ClipByValue",(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})},Yx={kernelName:"ComplexAbs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(d(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Qx(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Jx={kernelName:"Imag",backendName:"cpu",kernelFunc:Qx};function ev(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=v(s,t[0].shape)[0];let i=_u(t.map(e=>e.shape),a);if(0===d(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>d(e.shape)>0);if(1===o.length)return eb({inputs:{x:o[0]},backend:n});if(Tu(o.map(e=>e.shape),a),"complex64"===o[0].dtype){const e=o.map(e=>nb({inputs:{input:e},backend:n})),t=o.map(e=>Qx({inputs:{input:e},backend:n})),r=ev({inputs:e,backend:n,attrs:{axis:a}}),s=ev({inputs:t,backend:n,attrs:{axis:a}}),i=Yy({inputs:{real:r,imag:s},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map(e=>{const t=d(e.shape.slice(a));return Ix({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),l=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));i=_u(u.map(e=>e.shape),1);const c=1===u[0].shape[0],h=bb(l,i,t[0].dtype,c),p=_u(o.map(e=>e.shape),a),f=n.makeTensorInfo(p,t[0].dtype,h);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}const tv={kernelName:"Concat",backendName:"cpu",kernelFunc:ev};function nv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;Hy([s,a],"conv2d");const h=us(u),p=Jr(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new Re(p.outShape,s.dtype),w=$(s.shape),k=$(a.shape),I=w[0],N=x?w[1]:w[2],S=x?w[2]:1,C=x?1:w[1],E=v.strides[0],T=x?v.strides[1]:v.strides[2],_=x?v.strides[2]:1,A=x?1:v.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(a.dataId).values,D=v.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*E;for(let e=0;e<p.outHeight;++e){const r=n+e*T,s=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const a=e*k[0],i=t+n*N;for(let e=0;e<p.outWidth;++e){const t=r+e*_,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=i+r*S;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=R[s+e*C];for(let e=0;e<p.outChannels;++e)D[t+e*A]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const rv={kernelName:"Conv2D",backendName:"cpu",kernelFunc:nv};const sv={kernelName:"Conv2DBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;Hy([s,a],"conv2dBackpropFilter");const h=us(u),p=Jr(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Re(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new Re(s.shape,s.dtype,w),N=new Re(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/d)),n=Math.min(p.outHeight,(p.inHeight+v-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-v;for(let e=s;e<a;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*N.get(l,c,e,o):I.get(l,i,t,n)*N.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const av={kernelName:"Conv2DBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;Hy([s,a],"conv2dBackpropInput");const h=$(a.shape),p=$(s.shape);let d=us(l);const f=Jr(i,a.shape,o,1,u,c,!1,d),m=new Re(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:E,outChannels:T,outHeight:_,outWidth:A,strideHeight:R,strideWidth:F}=f;d=f.dataFormat;const D=I-1-f.padInfo.top,M=N-1-f.padInfo.left,O="channelsLast"===d,L=m.strides[0],B=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,z=O?1:m.strides[1],V=p[0],W=O?p[1]:p[2],U=O?p[2]:1,G=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){const r=n-D,s=Math.max(0,Math.ceil(r/R)),a=Math.min(_,(I+r)/R);for(let i=0;i<E;++i){const o=i-M,u=Math.max(0,Math.ceil(o/F)),l=Math.min(A,(N+o)/F);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=V*e+W*n+U*r,i=x*(I-1-s)+v*(N-1-(r*F-o))+w*t;for(let e=0;e<T;++e){c+=y[a+G*e]*b[i+e]}}}g[L*e+B*n+P*i+z*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const iv={kernelName:"Conv3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;Hy([s,a],"conv3d");const l=es(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new Re(l.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,N=$(s.shape),S=$(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*v.strides[1],s=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*d;if(n<0||n>=l.inDepth)continue;const a=e*S[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*S[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*S[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const ov={kernelName:"Conv3DBackpropFilterV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;Hy([s,a],"conv3dBackpropFilterV2");const l=$(s.shape),c=$(a.shape),h=es(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Re(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,N=n.data.get(a.dataId).values,[S,C,E,T]=c,_=n.data.get(s.dataId).values,[A,R,F,D]=l,M=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((M-e)/p)),n=Math.min(h.outDepth,(h.inDepth+M-e)/p),r=e*v;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((L-s)/d)),i=Math.min(h.outHeight,(h.inHeight+L-s)/d),o=s*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-M)*R+h,n=m*C+y;for(let e=a;e<i;++e){const a=(s+e*d-L)*F+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*T+i;g+=_[(r+e*f-O)*D+a+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const uv={kernelName:"Conv3DBackpropInputV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;Hy([s],"conv3dBackpropInputV2");const l=$(s.shape),c=$(a.shape),h=es(u,a.shape,o,1,i),p=new Re(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=l,I=n.data.get(a.dataId).values,[N,S,C,E]=c,{batchSize:T,filterDepth:_,filterHeight:A,filterWidth:R,inChannels:F,inDepth:D,inHeight:M,inWidth:O,outChannels:L,outDepth:B,outHeight:P,outWidth:z,strideDepth:V,strideHeight:W,strideWidth:U}=h,G=_-1-h.padInfo.front,H=A-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const r=n-G,s=Math.max(0,Math.ceil(r/V)),a=Math.min(B,(_+r)/V);for(let i=0;i<M;++i){const o=i-H,u=Math.max(0,Math.ceil(o/W)),l=Math.min(P,(A+o)/W);for(let c=0;c<O;++c){const h=c-j,p=Math.max(0,Math.ceil(h/U)),T=Math.min(z,(R+h)/U);let $=0;for(let n=s;n<a;++n){const s=n*V-r;for(let r=u;r<l;++r){const a=r*W-o;for(let i=p;i<T;++i){const o=x*e+v*n+w*r+k*i,u=N*(_-1-s)+S*(A-1-a)+C*(R-1-(i*U-h))+E*t;for(let e=0;e<L;++e){$+=b[o+e]*I[u+e]}}}}d[f*e+m*n+g*i+y*c+t]=$}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},lv={kernelName:"Cos",backendName:"cpu",kernelFunc:fb("Cos",e=>Math.cos(e))},cv={kernelName:"Cosh",backendName:"cpu",kernelFunc:fb("Cosh",e=>Math.cosh(e))};const hv={kernelName:"CropAndResize",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=o,y=jn([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=$(s.shape),k=$(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(p-1)+u*f:.5*(r+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const l=v[a];a=r+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const p=v[a];a=r+m*w[2]+s*w[1]+i*w[0];const d=l+(c-l)*b,f=p+(v[a]-p)*b;a=r+u*k[2]+t*k[1]+e*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(p-1)+n*f:.5*(r+a)*(p-1);if(s<0||s>p-1){for(let r=0;r<d;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<d;r++){const s=r+o*w[2]+u*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=v[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const pv={kernelName:"Cumsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Hy(s,"cumsum");const u=$a([a],s.shape.length);let l=s;null!=u&&(l=qb({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=Da(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Ke(l.dtype,"int32"),p=M(d(l.shape),h),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)p[n]=i?0:f[n];else{const r=g(e,t-1);p[n]=i?f[r]+p[r]:f[n]+p[r]}}const y=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=qb({inputs:{x:y},backend:n,attrs:{perm:Fa(u)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),e}return y}};const dv={kernelName:"DenseBincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=hb(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=pb(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+s.shape.length+".")}};const fv={kernelName:"DepthToSpace",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;l("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i),l(a>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+a);const o=s.shape[0],u=s.shape[1],c=s.shape[2],h=s.shape[3],p=u*a,d=c*a,f=h/(a*a),m=n.data.get(s.dataId).values,g=new Float32Array(o*p*d*f);let y=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*f;for(let t=0;t<f;++t){const r=t+i+h*(s+c*(n+u*e));g[y++]=m[r]}}}return n.makeTensorInfo([o,p,d,f],s.dtype,g)}};function mv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;Hy([s,a],"depthwiseConv2DNative");const h=$(s.shape),p=$(a.shape);let d=u;null==d&&(d=[1,1]),l(os(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const f=Jr(s.shape,a.shape,i,d,o,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new Re(f.outShape,s.dtype),N=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,C=I.values;for(let e=0;e<f.batchSize;++e){const t=e*h[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*I.strides[1],s=e*f.strideHeight-v;for(let e=0;e<m;++e){const n=s+e*y;if(n<0||n>=f.inHeight)continue;const a=e*p[0],i=t+n*h[1];for(let e=0;e<f.outWidth;++e){const t=r+e*I.strides[2],n=e*f.strideWidth-w;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const s=a+e*p[1],o=i+r*f.inChannels;let u=t,l=s;for(let e=0;e<f.inChannels;++e){const t=N[o+e];for(let e=0;e<k;++e)C[u+e]+=t*S[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const gv={kernelName:"DepthwiseConv2dNative",backendName:"cpu",kernelFunc:mv};const yv={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;Hy([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Jr(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Re(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new Re(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new Re(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=s;e<a;++e){const n=r+e*d-y;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const bv={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;Hy([s,a],"depthwiseConv2DNativeBackpropInput");const h=$(s.shape),p=$(a.shape),d=Jr(c,a.shape,i,o,u,l,!0),f=new Re(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[N,S,C]=p,{batchSize:E,filterHeight:T,filterWidth:_,inChannels:A,inHeight:R,inWidth:F,outChannels:D,outHeight:M,outWidth:O,strideHeight:L,strideWidth:B}=d,P=T-1-d.padInfo.top,z=_-1-d.padInfo.left,V=D/A;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-P,s=Math.max(0,Math.ceil(r/L)),a=Math.min(M,(T+r)/L);for(let i=0;i<F;++i){const o=i-z,u=Math.max(0,Math.ceil(o/B)),l=Math.min(O,(_+o)/B);let c=0;for(let n=s;n<a;++n){const s=n*L-r;for(let r=u;r<l;++r){const a=v*e+w*n+k*r,i=N*(T-1-s)+S*(_-1-(r*B-o))+C*t;for(let e=0;e<V;++e){c+=x[a+(t*V+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const xv={kernelName:"Diag",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=d(r.shape),a=n.data.get(r.dataId).values,i=jn([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},vv={kernelName:"Dilation2D",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:N,filterWidth:S,dilationHeight:C,dilationWidth:E,outShape:T}=Zr(r.shape,s.shape,a,i,"NHWC",o),_=d(T),A=T.length,R=I(r.dtype,_);for(let e=0;e<f;++e)for(let t=0;t<b;++t){const n=t*w-v.top;for(let a=0;a<x;++a){const i=a*k-v.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<N;++t){const a=n+t*C;if(a>=0&&a<m)for(let n=0;n<S;++n){const d=i+n*E;if(d>=0&&d<g){const i=B([e,a,d,o],c,$(r.shape)),f=B([t,n,o],p,$(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}R[B([e,t,a,o],A,$(T))]=u}}}return{dataId:u.write(ve(R,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},wv={kernelName:"Dilation2DBackpropFilter",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,c=t,h=F(r.shape,c.data.get(r.dataId).values),p=F(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=Zr(r.shape,s.shape,i,o,"NHWC",u);l(a.rank===C.length,()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${C.length}, but got `+a.rank);const E=F(C,c.data.get(a.dataId).values),T=O(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const s=r*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*N;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=s+n*S;if(l>=0&&l<m){const s=h[e][r][l][a]+p[t][n][a];s>i&&(i=s,o=t,u=n)}}}T[o][u][a]+=E[e][t][r][a]}}}return{dataId:c.write(ve(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},kv={kernelName:"Dilation2DBackpropInput",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,c=t,h=F(r.shape,c.data.get(r.dataId).values),p=F(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=Zr(r.shape,s.shape,i,o,"NHWC",u);l(a.rank===C.length,()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${C.length}, but got `+a.rank);const E=F(C,c.data.get(a.dataId).values),T=O(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const s=r*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<k;++t){const r=n+t*N;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=s+n*S;if(l>=0&&l<m){const s=h[e][r][l][a]+p[t][n][a];s>i&&(i=s,o=r,u=l)}}}T[e][o][u][a]+=E[e][t][r][a]}}}return{dataId:c.write(ve(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const Iv={kernelName:"EluGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Hy([r,s],"eluGrad");const a=new Float32Array(d(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},Nv=ib("Equal",Zy((e,t)=>e===t?1:0),null,"bool"),Sv={kernelName:"Equal",backendName:"cpu",kernelFunc:Nv},Cv={kernelName:"Erf",backendName:"cpu",kernelFunc:fb("Erf",e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+.3275911*n);return t*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-n*n))})};function Ev(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(l(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),Ix({inputs:{x:s},backend:n,attrs:{shape:o}})}const Tv={kernelName:"ExpandDims",backendName:"cpu",kernelFunc:Ev},_v=ib("RealDiv",Zy((e,t)=>e/t)),Av={kernelName:"RealDiv",backendName:"cpu",kernelFunc:_v};function Rv(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=d(l),h=k("float32",c),p=k("float32",c);for(let e=0;e<s;e++){const r=tx({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=tx({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=Yy({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=$v(i,t,n),d=Wu(l,c);for(let t=0;t<a;t++){const n=Uu(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),g=Yy({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function $v(e,t,n){const r=d(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=function e(t,n,r,s,a){if(1===r)return{real:t,imag:n};const i=Wu(t,n),o=r/2,u=function(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}(i),l=u.real,c=u.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",c),f=Yy({inputs:{real:p,imag:d},backend:a}),m=function(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}(i),g=m.real,y=m.imag,b=[g.length],x=a.makeTensorInfo(b,"float32",g),v=a.makeTensorInfo(b,"float32",y),w=Yy({inputs:{real:x,imag:v},backend:a}),k=e(l,c,o,s,a),I=k.real,N=k.imag,S=[I.length],C=a.makeTensorInfo(S,"float32",I),E=a.makeTensorInfo(S,"float32",N),T=Yy({inputs:{real:C,imag:E},backend:a}),_=e(g,y,o,s,a),A=_.real,R=_.imag,$=[A.length],F=a.makeTensorInfo($,"float32",A),D=a.makeTensorInfo($,"float32",R),M=Yy({inputs:{real:F,imag:D},backend:a}),O=function(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}(r,s),L=[O.real.length],B=a.makeTensorInfo(L,"float32",O.real),P=a.makeTensorInfo(L,"float32",O.imag),z=Yy({inputs:{real:B,imag:P},backend:a}),V=Vb({inputs:{a:z,b:M},backend:a}),W=lb({inputs:{a:T,b:V},backend:a}),U=ix({inputs:{a:T,b:V},backend:a}),G=nb({inputs:{input:W},backend:a}),H=nb({inputs:{input:U},backend:a}),j=Qx({inputs:{input:W},backend:a}),q=Qx({inputs:{input:U},backend:a}),K=ev({inputs:[G,H],backend:a,attrs:{axis:0}}),X=ev({inputs:[j,q],backend:a,attrs:{axis:0}}),Z=a.data.get(K.dataId).values,Y=a.data.get(X.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(X),{real:Z,imag:Y}}(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",xe(r,"float32")),i=eb({inputs:{x:a},backend:n}),u=Av.kernelFunc({inputs:{a:e,b:a},backend:n}),l=Av.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}return function(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}(function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Hu(s*r,t,n),u=Uu(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),Gu(r,a,i,s)}return r}(Wu(a,i),r,t));var o}const Fv={kernelName:"FFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=d(r.shape),a=r.shape[r.shape.length-1],i=Ix({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Rv(i,!1,n),u=Ix({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Dv(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||_(s),o=I(i,d(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const Mv={kernelName:"Fill",backendName:"cpu",kernelFunc:Dv};const Ov={kernelName:"FlipLeftRight",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=k(r.dtype,d(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let r=0;r<u;r++){const s=r*l;for(let o=0;o<l;o++){const h=[i,e,r,o][2],p=Math.round(u-h),d=t+n+s+o;let f=c[d];if(p>=0&&p<u){f=c[t+n+p*l+o]}a[d]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Lv={kernelName:"FloorDiv",backendName:"cpu",kernelFunc:ib("FloorDiv",Zy((e,t)=>Math.floor(e/t)),null,"int32")};const Bv={kernelName:"FusedConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=nv({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=lb({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=kx(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const Pv={kernelName:"FusedDepthwiseConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=mv({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=lb({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=kx(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const zv={kernelName:"GatherNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=d(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,h]=ur(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=jn([l,c],r.dtype),f=n.data.get(s.dataId).values,m=n.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=[];let n=0;for(let r=0;r<o;r++){const s=f[e*o+r];n+=s*h[r],t.push(s)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)p.values[e*c+t]=m[n*c+t]}return n.makeTensorInfo(u,p.dtype,p.values)}};const Vv={kernelName:"GatherV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;Hy([s,a],"gatherV2");let u=o;null==o&&(u=0);const l=d(a.shape),c=Du(s,a,v(i,s.shape)[0],u),h=Ix({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=Ix({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}}),f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize],m=n.bufferSync(p),g=Cb(n.bufferSync(h),m,f);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(c.outputShape,g.dtype,g.values)}},Wv={kernelName:"GreaterEqual",backendName:"cpu",kernelFunc:ib("GreaterEqual",Zy((e,t)=>e>=t?1:0),null,"bool")};const Uv={kernelName:"IFFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=d(r.shape),a=r.shape[r.shape.length-1],i=Ix({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Rv(i,!0,n),u=Ix({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Gv={kernelName:"IsFinite",backendName:"cpu",kernelFunc:fb("IsFinite",e=>Number.isFinite(e)?1:0,"bool")},Hv={kernelName:"IsInf",backendName:"cpu",kernelFunc:fb("IsInf",e=>Math.abs(e)===1/0?1:0,"bool")},jv={kernelName:"IsNan",backendName:"cpu",kernelFunc:fb("IsNan",e=>Number.isNaN(e)?1:0,"bool")},qv={kernelName:"LessEqual",backendName:"cpu",kernelFunc:ib("LessEqual",Zy((e,t)=>e<=t?1:0),null,"bool")};const Kv={kernelName:"LinSpace",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Rb(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},Xv={kernelName:"Log1p",backendName:"cpu",kernelFunc:fb("Log1p",e=>Math.log1p(e))},Zv={kernelName:"LogicalAnd",backendName:"cpu",kernelFunc:ib("LogicalAnd",Zy((e,t)=>e&&t),null,"bool")},Yv={kernelName:"LogicalNot",backendName:"cpu",kernelFunc:fb("LogicalNot",e=>e?0:1,"bool")},Qv={kernelName:"LogicalOr",backendName:"cpu",kernelFunc:ib("LogicalOr",Zy((e,t)=>e||t),null,"bool")};const Jv={kernelName:"LRN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;Hy(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,p=d(s.shape),f=new Float32Array(p);function m(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<p;e++){const t=m(e),n=h[e]*Math.pow(i+o*t,-u);f[e]=n}return n.makeTensorInfo(s.shape,s.dtype,f)}};const ew={kernelName:"LRNGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;Hy(i,"LRNGrad");const h=d(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,g=n.data.get(a.dataId).values,y=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(m[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*m[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=f[e],y[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,y)}};function tw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=v(a,u);let h=c;const p=$a(h,l);let f=o.data.get(s.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];f=jb(f,u,s.dtype,p,e),h=Da(h.length,l),u=e}Hy(s,"max"),Ra("max",h,l);const[m,g]=_a(u,h),y=Db(f,d(g),m,s.dtype),b=o.write(y,m,s.dtype);let x=m;if(i){x=Aa(m,c)}return{dataId:b,shape:x,dtype:s.dtype}}const nw={kernelName:"Max",backendName:"cpu",kernelFunc:tw};const rw={kernelName:"MaxPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Hy(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;l(os(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Yr(s.shape,a,i,1,o,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&f(c.inShape,c.outShape))h=eb({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=$(s.shape),r=zx(e,s.shape,s.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}};const sw={kernelName:"MaxPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l,dilations:c}=r;Hy(s,"maxPool3d");let h=c;null==h&&(h=[1,1,1]);const p=Qr(s.shape,a,i,h,o,u,l),d=Wx(n.data.get(s.dataId).values,s.shape,s.dtype,$(s.shape),p,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const aw={kernelName:"MaxPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;Hy([s,a],"maxPool3DGrad");const h=Qr(a.shape,i,o,l,u,c),p=function(e,t){const n=jn(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const w=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=p;r<w;r+=o){const s=r-l;for(let a=k;a<I;a+=u){const i=a-d,o=e.get(m,t,r,a,g);o>=N&&(N=o,S=n*c*h+s*c+i)}}}n.set(S,m,y,r,s,g)}}}return n}(n.bufferSync(a),h),d=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterDepth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=x-1-h.padInfo.front,I=w-1-h.padInfo.left,N=v-1-h.padInfo.top,S=jn(a.shape,"float32"),C=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const a=n-k,i=r-N,o=s-I;let u=0;for(let n=0;n<x;n+=g){const r=(a+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const a=(i+s)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=b){const l=(o+i)/m;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;const c=x*v*w-1-p.get(e,r,a,l,t)===n*v*w+s*w+i?1:0;if(0===c)continue;u+=C.get(e,r,a,l,t)*c}}}S.set(u,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const iw={kernelName:"MaxPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Hy([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Yr(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=jn(p.outShape,o.dtype,Vx(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,I=jn(o.shape,"float32"),N=n.data.get(s.dataId).values,S=jn(s.shape,"float32",N);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;if(0===u)continue;i+=S.get(e,r,o,t)*u}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const ow={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;Hy(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Yr(r.shape,s,a,[1,1],i),[h,p]=function(e,t,n,r,s){const a=zx(e,0,n,$(t),s,"max"),i=Vx(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function uw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;Hy(s,"sum"),o="bool"===s.dtype?sb({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):eb({inputs:{x:s},backend:n});const u=o.shape.length,l=v(a,o.shape),c=$a(l,u);let h=l,p=o;null!=c&&(p=qb({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Da(h.length,u)),Ra("sum",h,p.shape.length);const[f,m]=_a(p.shape,h);let g=Jy(n,f,Ke(p.dtype,"int32"));const y=d(m),b=n.data.get(g.dataId).values,x=n.data.get(p.dataId).values;for(let e=0;e<b.length;++e){const t=e*y;let n=0;for(let e=0;e<y;++e)n+=x[t+e];b[e]=n}if(i){const e=g;g=Ix({inputs:{x:g},backend:n,attrs:{shape:Aa(g.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),g}const lw={kernelName:"Sum",backendName:"cpu",kernelFunc:uw};const cw={kernelName:"Mean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=v(a,s.shape),u=d(_a(s.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=sb({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=_v({inputs:{a:h,b:c},backend:n});l.push(p);const f=uw({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};const hw={kernelName:"Min",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Hy(s,"min");const o=v(a,s.shape);let u=o;const l=$a(u,s.shape.length);let c=s;null!=l&&(c=qb({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Da(u.length,s.shape.length)),Ra("min",u,c.shape.length);const[h,p]=_a(c.shape,u),f=d(p),m=M(d(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];r<n&&(n=r)}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,m);if(i){const e=Ix({inputs:{x:y},backend:n,attrs:{shape:Aa(h,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const pw={kernelName:"MirrorPad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;Hy(s,"mirrorPad");const o=a.map((e,t)=>e[0]+s.shape[t]+e[1]),u=a.map(e=>e[0]),l=a.map((e,t)=>e[0]+s.shape[t]),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,f=$(s.shape),m=d(o),g=o.length,y=$(o),b=k(s.dtype,m);for(let e=0;e<m;e++){let t=P(e,g,y);for(let e=0;e<g;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map((e,t)=>e-u[t]);const n=B(t,p,f);b[e]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},dw={kernelName:"Mod",backendName:"cpu",kernelFunc:ib("Mod",Zy((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))};function fw(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=v([o],s.shape),l=tw({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Aa(l.shape,u),h=Ix({inputs:{x:l},backend:n,attrs:{shape:c}}),p=ix({inputs:{a:s,b:h},backend:n}),d=vb({inputs:{x:p},backend:n}),f=uw({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=Ix({inputs:{x:f},backend:n,attrs:{shape:c}}),g=_v({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const mw={kernelName:"Softmax",backendName:"cpu",kernelFunc:fw};const gw={kernelName:"Multinomial",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;Hy(s,"multinomial");const u=o?s:fw({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,a],f=M(d(p),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=ui.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();f[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){f[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",f)}},yw=To;const bw={kernelName:"NonMaxSuppressionV3",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;Hy(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=yw(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},xw=_o;const vw={kernelName:"NonMaxSuppressionV4",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;Hy(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=xw(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},ww=Ao;const kw={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;Hy(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=ww(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};const Iw={kernelName:"OneHot",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;Hy(s,"oneHot");const u=d(s.shape),l=new Float32Array(u*a);l.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<a&&(l[e*a+c[e]]=i);return n.makeTensorInfo([...s.shape,a],"int32",l)}};function Nw(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=nb({inputs:{input:r},backend:n}),t=Nw({inputs:{x:e},backend:n}),s=Qx({inputs:{input:r},backend:n}),a=Nw({inputs:{x:s},backend:n}),i=Yy({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return Dv({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Sw={kernelName:"ZerosLike",backendName:"cpu",kernelFunc:Nw};const Cw={kernelName:"OnesLike",backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=nb({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Qx({inputs:{input:s},backend:r}),i=Nw({inputs:{x:a},backend:r}),o=Yy({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return Dv({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Ew(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Ev({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(e=>{c(a,e.shape,"All tensors passed to stack must have matching shapes"),l(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=ev({inputs:t.map(e=>{const t=Ev({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const Tw={kernelName:"Pack",backendName:"cpu",kernelFunc:Ew};const _w={kernelName:"PadV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;Hy(s,"pad");const o=a.map((e,t)=>e[0]+s.shape[t]+e[1]),u=a.map(e=>e[0]),l=n.data.get(s.dataId).values,c=d(s.shape),h=s.shape.length,p=$(s.shape),f=d(o),m=o.length,g=$(o),y=k(s.dtype,f);0!==i&&y.fill(i);for(let e=0;e<c;e++){y[B(P(e,h,p).map((e,t)=>e+u[t]),m,g)]=l[e]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},Aw={kernelName:"Pow",backendName:"cpu",kernelFunc:ib("Pow",Zy((e,t)=>Math.pow(e,t)))};const Rw={kernelName:"Range",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=Yb(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},$w={kernelName:"Reciprocal",backendName:"cpu",kernelFunc:fb("Reciprocal",e=>1/e)};const Fw={kernelName:"ResizeBilinear",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Hy(s,"resizeBilinear");const u=$(s.shape),[l,c]=o,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(d([h,l,c,m])),b=[a&&l>1?p-1:p,a&&c>1?f-1:f],x=[a&&l>1?l-1:l,a&&c>1?c-1:c];let v=0;const w=b[0]/x[0],k=b[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(p-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(f-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],p=o+a*u[2],d=l+a*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[p+e]-t)*r,i=a+(n+(g[d+e]-n)*r-a)*s;y[v++]=i}}}return n.makeTensorInfo([h,l,c,m],"float32",y)}};const Dw={kernelName:"ResizeBilinearGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Hy([a,s],"resizeBilinearGrad");const o=$(s.shape),[u,l,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&p>1?l-1:l,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*o[1],i=t+s*o[1],u=n-r,p=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,d=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],w=p*l,k=p*s,I=u*l,N=u*s;for(let e=0;e<h;e++){const t=x[v++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};const Mw={kernelName:"ResizeNearestNeighbor",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Hy(s,"resizeNearestNeighbor");const u=$(s.shape),[l,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}};const Ow={kernelName:"ResizeNearestNeighborGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Hy([a,s],"resizeNearestNeighborGrad");const o=$(s.shape),u=$(a.shape),[l,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(l*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-N/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<I;a++){const l=a+s;if(l<0||l>=d)continue;const p=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const s=p+t*u[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const Lw={kernelName:"Reverse",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;Hy(s,"reverse");const i=s.shape.length,o=v(a,s.shape);if(0===i)return eb({inputs:{x:s},backend:n});const u=new Re(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=s.shape[e]-1-n[e]),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Bw={kernelName:"RotateWithOffset",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=k(r.dtype,d(r.shape)),[l,c,h,p]=r.shape,[f,m]=Mu(i,c,h),g=Math.sin(s),y=Math.cos(s),b=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],d=o[2],x=o[1];let v=(d-f)*y-(x-m)*g,w=(d-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=a;if("number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c){k=b[t+w*(h*p)+v*p+i]}u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Pw={kernelName:"Round",backendName:"cpu",kernelFunc:fb("Round",e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})};function zw(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],h=e.values,p=t.values;if(0===r)return jn(n,t.dtype);const d=jn(c,t.dtype);d.values.fill(u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=p[e*s+n]:d.values[u*s+n]=0===t.rank?p[0]:p[e*s+n]}return d}const Vw={kernelName:"ScatterNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=cr(0,s,i),p=zw(n.bufferSync(s),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};const Ww={kernelName:"Select",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;Hy([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=Ke(s.dtype,a.dtype),h=M(d(s.shape),c);let p=0;const f=0===i||i>1||1===s.shape.length?1:d(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<f;t++)1===o[e]?h[p++]=u[e]:h[p++]=l[e];return n.makeTensorInfo(s.shape,c,h)}},Uw={kernelName:"Selu",backendName:"cpu",kernelFunc:fb("Selu",e=>e>=0?1.0507009873554805*e:1.7580993408473768*(Math.exp(e)-1))},Gw={kernelName:"Sigmoid",backendName:"cpu",kernelFunc:fb("Sigmoid",e=>1/(1+Math.exp(-e)))},Hw={kernelName:"Sign",backendName:"cpu",kernelFunc:fb("Sign",e=>e<0?-1:e>0?1:0)},jw={kernelName:"Sin",backendName:"cpu",kernelFunc:fb("Sin",e=>Math.sin(e))},qw={kernelName:"Sinh",backendName:"cpu",kernelFunc:fb("Sinh",e=>Math.sinh(e))},Kw=Math.log(1.1920928955078125e-7)+2,Xw={kernelName:"Softplus",backendName:"cpu",kernelFunc:fb("Softplus",e=>{const t=e>-Kw,n=e<Kw,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})};const Zw={kernelName:"SpaceToBatchND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;Hy([s],"spaceToBatchND");const o=d(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=_w.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Ou(l.shape,a,o,!1),h=Lu(c.length,a.length,!1),p=Bu(l.shape,a,o,!1),f=Ix({inputs:{x:l},backend:n,attrs:{shape:c}}),m=qb({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Ix({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const Yw={kernelName:"SparseToDense",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=cr(0,s,o),d=zw(n.bufferSync(s),n.bufferSync(a),o,p,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}};const Qw={kernelName:"SplitV",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=v(i,s.shape)[0],u=ju(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map(e=>{const t=[...c];t[o]=e;const r=tx({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r})}},Jw={kernelName:"Sqrt",backendName:"cpu",kernelFunc:fb("Sqrt",e=>Math.sqrt(e))},ek={kernelName:"Square",backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Hy(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},tk={kernelName:"Step",backendName:"cpu",kernelFunc:fb("Step",(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})};const nk={kernelName:"StridedSlice",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;Hy(s,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=kr(s.shape,a,i,o,u,l,c,h,p),x=Ix({inputs:{x:s},backend:n,attrs:{shape:y}});let v;if(d){const e=tx({inputs:{x:x},backend:n,attrs:{begin:f,size:g}});v=Ix({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some(e=>0===e))v=n.makeTensorInfo(b,s.dtype,[]);else{const e=sx(b,n.bufferSync(x),m,f);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=Ix({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},rk={kernelName:"Tan",backendName:"cpu",kernelFunc:fb("Tan",e=>Math.tan(e))},sk=fb("Tanh",e=>Math.tanh(e));const ak=[Ex,Xy,Tx,_x,cb,Ax,Rx,$x,Fx,Dx,Mx,Ox,Lx,Bx,Px,Ux,Gx,Hx,jx,Cx,qx,Kx,Xx,ab,yb,Zx,Qy,Yx,tv,sv,av,rv,ov,uv,iv,lv,cv,hv,pv,dv,fv,gv,yv,bv,xv,vv,kv,wv,Av,px,Iv,Sv,Cv,wb,Tv,Ib,Fv,Mv,Ov,Sb,Lv,Bv,Pv,zv,Vv,Tb,Wv,tb,Uv,Jx,Gv,Hv,jv,fx,Ab,qv,Kv,Fb,Xv,Zv,Yv,Qv,Jv,ew,Ob,rw,sw,aw,iw,ow,nw,cw,hw,Bb,pw,dw,gw,Wb,Gb,bw,vw,kw,Hb,Iw,Cw,Tw,_w,Aw,yx,Zb,Rw,rb,$w,xx,wx,Nx,Fw,Dw,Mw,Ow,Lw,Bw,Pw,Jb,Vw,Ww,Uw,Gw,Hw,jw,qw,nx,mw,Xw,Zw,Yw,Qw,Jw,ek,rx,tk,nk,ox,lw,rk,{kernelName:"Tanh",backendName:"cpu",kernelFunc:sk},{kernelName:"Tile",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;Hy(s,"tile");const i=ux(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:"TopK",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;Hy(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=lx(o,s.shape,s.dtype,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},Kb,{kernelName:"Unique",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Hy(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=cx(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:"Unpack",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=tx({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[e]=Ix({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},{kernelName:"UnsortedSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;Hy(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=Ev({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=xe(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=Nv({inputs:{a:r,b:c},backend:n}),i=sb({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=Vb({inputs:{a:i,b:s},backend:n}),h=uw({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(a),u.push(i),u.push(l),u.push(h)}const h=Ew({inputs:o,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},Sw];for(const e of ak)ge(e);const ik={},ok={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function uk(e){if(!(e in ik)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete ik[e]},!1),1===e)return t.getContext("webgl",ok)||t.getContext("experimental-webgl",ok);return t.getContext("webgl2",ok)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;ik[e]=t}const t=ik[e];return t.isContextLost()?(delete ik[e],uk(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ik[e])}var lk,ck,hk,pk,dk,fk;function mk(e,t){return[t,e]}function gk(e){const t=d(e);return g(Math.ceil(t/4))}function yk(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function bk(e,t){const n=e;let r,s,a,i,o,u,l,c,h,p;return 2===W().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function xk(e,t){const n=t();return W().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}(ck=lk||(lk={}))[ck.DENSE=0]="DENSE",ck[ck.SHARED_BATCH=1]="SHARED_BATCH",(pk=hk||(hk={}))[pk.RENDER=0]="RENDER",pk[pk.UPLOAD=1]="UPLOAD",pk[pk.PIXELS=2]="PIXELS",pk[pk.DOWNLOAD=3]="DOWNLOAD",(fk=dk||(dk={}))[fk.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",fk[fk.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",fk[fk.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",fk[fk.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",fk[fk.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function vk(e){return!!(W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function wk(e,t){return Ak(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function kk(e,t){const n=Ak(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(xk(e,()=>e.shaderSource(n,t)),xk(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=Ik.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map((e,t)=>y((t+1).toString(),a)+e);let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+y(l[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Ik=/ERROR: [0-9]+:([0-9]+):/g;function Nk(e,t){if(xk(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Sk(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(xk(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),xk(e,()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i)),xk(e,()=>e.enableVertexAttribArray(o)),!0)}function Ck(e,t,n){!function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(e,n),xk(e,()=>e.activeTexture(e.TEXTURE0+n)),xk(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function Ek(e,t,n){xk(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),xk(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Tk(e,t){xk(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),xk(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function _k(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function Ak(e,t,n){const r=xk(e,()=>t());if(null==r)throw new Error(n);return r}function Rk(e,t=2){return d(e.slice(0,e.length-t))}function $k(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Fk(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Rk(e),...$k(e)]),t}function Dk(e){return e%2==0}function Mk(e,t){if(f(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Dk(n)&&Dk(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Dk(e[0])&&Dk(t[0])}let Ok,Lk;function Bk(e,t){return null!=e.getExtension(t)}function Pk(e){try{if(null!=uk(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function zk(e){if(0===e)return!1;const t=uk(e);if(1!==e){if(Bk(t,"EXT_color_buffer_float"))return Vk(t);const e="EXT_color_buffer_half_float";if(Bk(t,e)){const n=t.getExtension(e);return function(e,t){const n=bk(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}if(!Bk(t,"OES_texture_float"))return!1;if(!Bk(t,"WEBGL_color_buffer_float"))return!1;return Vk(t)}function Vk(e){const t=bk(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function Wk(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&l("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}const Uk=W();function Gk(){let e,t,n,r,s,a,i,o,u,l;return 2===W().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function Hk(e,t,n="index"){const r=$(t);return r.map((t,s)=>`${`int ${e[s]} = ${n} / ${t}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`).join("")}function jk(e){const t=$(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Uk.registerFlag("HAS_WEBGL",()=>Uk.getNumber("WEBGL_VERSION")>0),Uk.registerFlag("WEBGL_VERSION",()=>Pk(2)?2:Pk(1)?1:0),Uk.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Uk.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Uk.get("WEBGL_VERSION")),Uk.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Uk.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Uk.registerFlag("WEBGL_PACK",()=>Uk.getBool("HAS_WEBGL")),Uk.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_PACK_CLIP",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Uk.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_PACK_REDUCE",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_LAZILY_UNPACK",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_CONV_IM2COL",()=>Uk.getBool("WEBGL_PACK")),Uk.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==Ok){const t=uk(e);Ok=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ok}(Uk.getNumber("WEBGL_VERSION"))),Uk.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==Lk){const t=uk(e);Lk=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Lk)}(Uk.getNumber("WEBGL_VERSION"))),Uk.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=Uk.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=uk(e);return t=Bk(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Bk(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),Uk.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Uk.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!st()),Uk.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=uk(e);if(1===e){if(!Bk(t,"OES_texture_float"))return!1}else if(!Bk(t,"EXT_color_buffer_float"))return!1;return Vk(t)}(Uk.getNumber("WEBGL_VERSION"))),Uk.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Uk.getBool("WEBGL_FORCE_F16_TEXTURES")&&Uk.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Uk.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>zk(Uk.getNumber("WEBGL_VERSION"))),Uk.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=Uk.getNumber("WEBGL_VERSION"))&&null!=uk(e).fenceSync;var e}),Uk.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Uk.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Uk.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});const qk="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class Kk{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=lk.DENSE;const t=gk(e),n=Gk();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Hk(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Xk{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=lk.DENSE;const t=gk(e),n=Gk();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Hk(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Zk{constructor(e){this.variableNames=["A"],this.outTexUsage=hk.DOWNLOAD;const t=Gk();this.outputShape=e,this.userCode=`\n      ${qk}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Yk{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=hk.DOWNLOAD;const t=Gk();this.outputShape=e,this.userCode=`\n      ${qk}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Qk{constructor(e,t,n=!1){this.variableNames=["A"];const r=Gk(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${jk(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class Jk{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Gk(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${jk(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function eI(e){const t=Gk();return function(e,t){const n=Ak(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(xk(e,()=>e.shaderSource(n,t)),xk(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function tI(e){return function(e,t){const n=Ak(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return xk(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),xk(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function nI(e){return function(e,t){const n=Ak(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return xk(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),xk(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}function rI(e,t,n,r,s,a){!function(e,t){const n=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}(t,n);const i=function(e){return Ak(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return xk(e,()=>e.bindTexture(o,i)),xk(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),xk(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),xk(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),xk(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),xk(e,()=>e.texImage2D(o,0,r,t,n,0,s,a,null)),xk(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function sI(e){return e.internalFormatFloat}function aI(e){return e.internalFormatHalfFloat}function iI(e){return e.downloadTextureFormat}function oI(e){return e.internalFormatPackedFloat}function uI(e){return e.internalFormatPackedHalfFloat}function lI(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=yk(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class cI{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=W().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){ik[e]=t}(t,e)):this.gl=uk(t);let n="WEBGL_color_buffer_float";if(1===W().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=wk(this.gl,e),Bk(this.gl,t))this.textureHalfFloatExtension=wk(this.gl,t);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Bk(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=wk(this.gl,"EXT_color_buffer_half_float");else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Bk(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Bk(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=tI(this.gl),this.indexBuffer=nI(this.gl),this.framebuffer=function(e){return Ak(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=bk(this.gl,this.textureHalfFloatExtension)}get debug(){return W().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;xk(e,()=>e.finish()),xk(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),xk(e,()=>e.deleteFramebuffer(this.framebuffer)),xk(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),xk(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),xk(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=mk(t,n);return rI(e,s,a,sI(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=mk(t,n);return rI(e,s,a,aI(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=mk(t,n);return rI(e,s,a,iI(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){xk(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?xk(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):xk(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),xk(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,u;xk(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),xk(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),xk(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=yk(t,n);return rI(e,s,a,uI(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=yk(t,n);return rI(e,s,a,oI(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Tk(this.gl,this.framebuffer),this.outputTexture=null),xk(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[s,a]=mk(t,n),i=new Uint8Array(t*n*4);return xk(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return lI(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();xk(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));const a=16*t*n;return xk(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),xk(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),xk(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(W().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return xk(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=kk(t,e),r=eI(t),s=function(e){return Ak(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return xk(t,()=>t.attachShader(s,r)),xk(t,()=>t.attachShader(s,n)),function(e,t){if(xk(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&Nk(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return xk(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Sk(e,t,"clipSpacePos",n,3,20,0)&&Sk(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&xk(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Nk(this.gl,this.program),xk(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Ak(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),xk(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){xk(e,()=>Ck(e,t,r)),xk(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=yk(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Nk(this.gl,this.program),_k(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),xk(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xk(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=wk(this.gl,2===W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b(()=>this.disposed||this.isQueryAvailable(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||b(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ek(this.gl,e,this.framebuffer),this.debug&&_k(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Ek(this.gl,this.outputTexture,this.framebuffer),this.debug&&_k(this.gl)):Tk(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;Ek(r,e,this.framebuffer),this.debug&&_k(r),this.outputTexture=e,xk(r,()=>r.viewport(0,0,t,n)),xk(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),xk(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function hI(e,t,n,r){const s=[];e.forEach(e=>{const t=d(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))});const a=s.join("\n"),i=e.map(e=>function(e,t,n=!1){let r="";r+=n?dI(e):pI(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Ws(e.shapeInfo.logicalShape,t.logicalShape),u=wI(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${h[e+l]} = 0;`).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+l]).join(", ");let f="return outputValue;";const m=1===d(e.shapeInfo.logicalShape),g=1===d(t.logicalShape);if(1!==a||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?f="return vec4(outputValue.x);":o.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&f(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=wI(u),c=Ws(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map(e=>`coords.${d[e+h]} = 0;`).join("\n");let m="";m=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+d[t+h]).join(", ");return`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(e,t));return r}(e,t,r)).join("\n"),o=t.texShape,u=Gk(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${fI}\n    ${mI}\n    ${gI}\n  `}(u);t.isPacked?(c=function(e,t){switch(e.length){case 0:return bI();case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(f(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t){switch(e.length){case 0:return bI();case 1:return function(e,t){if(1===t[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){if(f(e,t))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=Hk(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=Hk(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=Hk(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Hk(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=yI);return[p,l,h,a,c,i,n].join("\n")}function pI(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape,o=xI(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${vI(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=xI(t);if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `;if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&f(t,s)){const e=s[0],t=s[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=w(t),o=a;if(o.length<t.length){const t=kI(e,o),n=["row","col"];return`\n      ${pI(t)}\n      float ${r}(int row, int col) {\n        return ${r}(${II(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${vI(e)}\n      }\n    `;const u=s[0],l=s[1],c=xI(n);if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=w(t),u=i;if(u.length<t.length){const t=kI(e,u),n=["row","col","depth"];return`\n        ${pI(t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${II(n,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${vI(e)}\n      }\n    `;const l=e.shapeInfo.texShape,c=l[0],h=l[1],p=e.shapeInfo.flatOffset;if(h===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const d=xI(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${d};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:o,keptDims:u}=w(t);if(o.length<t.length){const t=kI(e,o),n=["row","col","depth","depth2"];return`\n      ${pI(t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${II(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${vI(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const d=xI(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${d});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=w(t);if(u.length<t.length){const t=kI(e,u),n=["row","col","depth","depth2","depth3"];return`\n      ${pI(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${II(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${vI(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=xI(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=w(t);if(s.length<t.length){const t=kI(e,s),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${pI(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${II(n,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${vI(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=xI(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function dI(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Gk();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=Gk();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],i=s[1],o=Gk();if(null!=s&&f(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=t.slice(1),s=[1,2],a=kI(e,n),i=["b","row","col"];return`\n        ${dI(a)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${II(i,s)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(t[2]/2),l=u*Math.ceil(t[1]/2),c=Gk();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l}, ${u}, b, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],p=`b${e} * ${c} + `+p;const d=Gk();return`\n    vec4 ${s}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${d.texture2D}(${r}, uv);\n    }\n  `}(e)}}const fI="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mI="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gI="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yI="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function bI(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function xI(e){return"offset"+e}function vI(e){const t=e.name,n=d(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function wI(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function kI(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function II(e,t){return t.map(t=>e[t]).join(", ")}function NI(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!f(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!f(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function SI(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function CI(e,t){return 1===t?[e]:SI(e,t)}class EI{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=CI("rc",t),r=wI(t),s=function(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=t[t.length-1-n]+","+a;n.push(a)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class TI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Hk(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${jk(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class _I{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=RI(t,n),s=$I(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=AI(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===dk.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===dk.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===dk.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===dk.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===dk.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=RI(n,r),a=$I(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=AI(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=W().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function AI(e,t,n,r,s){const a=function(e,t){switch(e){case dk.PACKED_2X2_FLOAT32:return oI(t);case dk.PACKED_2X2_FLOAT16:return uI(t);case dk.UNPACKED_FLOAT32:return sI(t);case dk.UNPACKED_FLOAT16:return aI(t);case dk.PACKED_4X1_UNSIGNED_BYTE:return iI(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let i;if(s){const[t,n]=yk(e[0],e[1]);i=t*n}else{const[t,n]=mk(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,a)}function RI(e,t){if(e===hk.UPLOAD)return dk.PACKED_2X2_FLOAT32;if(e===hk.RENDER||null==e)return function(e){return W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?dk.PACKED_2X2_FLOAT32:dk.UNPACKED_FLOAT32:e?dk.PACKED_2X2_FLOAT16:dk.UNPACKED_FLOAT16}(t);if(e===hk.DOWNLOAD||e===hk.PIXELS)return dk.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function $I(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class FI{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class DI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class MI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=CI("rc",t),r=wI(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const OI=io,LI={};class BI extends s{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!W().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=uk(W().getNumber("WEBGL_VERSION"));this.binaryCache=((t=W().getNumber("WEBGL_VERSION"))in LI||(LI[t]={}),LI[t]),this.gpgpu=new cI(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new _I(this.gpgpu),this.numMBBeforeWarning=null==W().global.screen?1024:W().global.screen.height*W().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r(this,Er())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((W().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||W().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:hk.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,r){if(W().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:hk.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new DI(i,"return x;"):new FI(i,"return x;");const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=we()),"complex64"===r){c=Wu(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=we()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new DI(r,"return x;"):new FI(r,"return x;");const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===W().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&W().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...gk(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Wu(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=d(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>Ie(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return jn(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!vk(n)){if(W().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=d(t);if(W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...gk(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=W().getBool("WEBGL_PACK")&&!0===r,i=a?Fk(t):t,o=a?new Yk(i):new Zk(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=p(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),a=p(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:a[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:we(),endMs:null}}endTimer(e){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=we(),e)}async getQueryTime(e){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return W().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Er().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return W().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every(e=>null==this.texData.get(e.dataId).texture&&d(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Vu("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return OI(e.shape,t)}packedUnaryOp(e,t,n){const r=new DI(e.shape,t);return this.compileAndRun(r,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Ky(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"return abs(x);",e.dtype);const t=new FI(e.shape,"return abs(x);");return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&E(n[0])){const s=n.map(e=>ke(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Er().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new MI(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new EI(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Rk(e.shape),...$k(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Rk(t),...$k(t)],a=new TI(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=Fk(r);let i;i=n?new Xk(a):new Kk(a);return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===lk.DENSE){const t=gk(e.outputShape);i.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===d(a.shape))return i.values=k(a.dtype,0),a;const o=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&d(t.shape)<=W().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Mk(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(a.dataId);const l={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach(e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`});const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,u,l),h=this.getAndSaveBinary(c,()=>function(e,t,n,r){const s=t.userCode,a=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=a.map(e=>e.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=hI(a,o,s,t.packedInputs),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===W().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;p[r]=e.getUniformLocation(l,r,s),p["offset"+r]=e.getUniformLocation(l,"offset"+r,s)}return{program:t,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,u,l)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(e,t,n,r,s){NI(t.inShapeInfos,n),NI([t.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===W().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations["offset"+s];if(null!=a)if(n.isUniform)if(d(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)}),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)})),!W().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,r,s);return Er().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!W().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=_r(()=>{if(!W().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=W().getBool("DEBUG");W().set("DEBUG",!1);const t=this.abs(_i(1e-8)).dataSync()[0];if(W().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let c;l&&(c=we());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?u(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=w(e);e=t.newShape}let r=d(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Rk(e);let n=2,s=2;return e.length&&([n,s]=$k(e)),r=t*(n/2)*(s/2),g(r).map(e=>2*e)}return g(r)}(n,o),t.texShape=h),null!=s){const e=Fk(n);let a,i=h[1],u=h[0];const p=s instanceof Uint8Array;o?([i,u]=yk(h[0],h[1]),a=new Jk(e,[u,i],p)):a=new Qk(e,[u,i],p);const d=this.makeTensorInfo([u,i],r);this.texData.get(d.dataId).usage=p?hk.PIXELS:hk.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,u,s);const f=!0,m=this.runWebGLProgram(a,[d],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=we()-c)}else{const e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*C(t)}}at()&&$r("webgl",()=>new BI,2);class PI{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Gs(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class zI{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Gs(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===d(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${wI(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=CI("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function VI(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const WI={kernelName:"Identity",backendName:"webgl",kernelFunc:VI};function UI(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=VI({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=VI({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},a}const GI={kernelName:"Complex",backendName:"webgl",kernelFunc:UI};const HI={kernelName:"LeakyRelu",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",xe(a,"float32")),o=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zI("\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",s.shape,i.shape):new PI("return (a < 0.) ? b * a : a;",s.shape,i.shape),u=n.runWebGLProgram(o,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),u}};const jI={kernelName:"Prelu",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zI("\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",r.shape,s.shape):new PI("return (a < 0.) ? b * a : a;",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function qI({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new DI(i.shape,t):new FI(i.shape,e),o.runWebGLProgram(l,[i],u)}}function KI({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new PI(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],Ke(n.dtype,r.dtype))}),a=UI({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Ke(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=s){const e=c.texData.get(u.dataId),t=c.texData.get(l.dataId),[n,r]=s(u.shape,l.shape,e.values,t.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let p;return p=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new zI(t,u.shape,l.shape,n):new PI(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function XI(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?"\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n":"return (a < 0.) ? b * a : a;";if("leakyrelu"===e)return t?"\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n":"return (a < 0.) ? b * a : a;";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class ZI{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const YI="return areal * breal - aimag * bimag;",QI="return areal * bimag + aimag * breal;";class JI{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Gs(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}function eN(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Ke(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new JI(YI,r.shape,s.shape),i=new JI(QI,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=UI({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=Pb(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zI("return a * b;",r.shape,s.shape):new PI("return a * b;",r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const tN={kernelName:"Multiply",backendName:"webgl",kernelFunc:eN};function nN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=d(s.shape),u=x(a,o),c=d(u);l(o===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const h=i.texData.get(s.dataId);return!h.isPacked||Mk(s.shape,u)||null!==h.texture&&Mk(h.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[Rk(e.shape),...$k(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[Rk(t),...$k(t)],i=new TI(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,u,i)}const rN={kernelName:"Reshape",backendName:"webgl",kernelFunc:nN};class sN{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${m(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class aN{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function iN(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Fu(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new sN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new sN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new aN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class oN{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=wI(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class uN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=wI(this.rank),s=SI("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function lN(e,t,n){const r=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uN(e.shape,t):new oN(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function cN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=v(s,e.shape);let o=i;const u=$a(o,a),l=null!=u;let c=e;l&&(c=lN(e,u,r),o=Da(o.length,a)),Ra("sum",o,a);const[h,p]=_a(c.shape,o);let f=h;n&&(f=Aa(h,i));const m=d(p),g=nN({inputs:{x:c},attrs:{shape:[d(e.shape)/m,m]},backend:r}),y=iN(g,Xe(e.dtype),"sum",r),b=nN({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),l&&r.disposeIntermediateTensorInfo(c),b}(s,a,i,n)}const hN={kernelName:"Sum",backendName:"webgl",kernelFunc:cN};function pN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(i.shouldExecuteOnCPU([s])){const e=jb(i.texData.get(s.dataId).values,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype);i.texData.get(l.dataId).values=e}else l=lN(s,a,i);return l}const dN={kernelName:"Transpose",backendName:"webgl",kernelFunc:pN};function fN({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=e.shape.length,h=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],f=r?t.shape[h-1]:t.shape[h-2],m=n?e.shape[c-1]:e.shape[c-2],g=r?t.shape[h-2]:t.shape[h-1],y=e.shape.slice(0,-2),b=t.shape.slice(0,-2),x=d(y),v=d(b);l(c>=2&&h>=2&&(x===v||1===x||1===v),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${y}) and (${b}).`);const w=(x>v?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([m,g]);l(p===f,()=>`Error in matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const k=n?[x,p,m]:[x,m,p],I=r?[v,g,f]:[v,f,g],N=nN({inputs:{x:e},backend:s,attrs:{shape:k}}),S=nN({inputs:{x:t},backend:s,attrs:{shape:I}}),C=[N,S],E=Math.max(x,v),T=n?N.shape[1]:N.shape[2],_=null!=a,A=null!=i,R="leakyrelu"===u,$=null!=u?XI(u,!0):null;let F;if((1===m||1===g)&&T>1e3&&!1===(_||A||R||null!=$)){let e=N,t=S;n&&(e=pN({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),C.push(e)),r&&(t=pN({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),C.push(t));const a=1===g;let i=e;1!==g&&(i=nN({inputs:{x:e},backend:s,attrs:{shape:[E,T,1]}}),C.push(i));const o=1===g?2:1;let u=t;a&&(u=nN({inputs:{x:t},backend:s,attrs:{shape:[E,1,T]}}),C.push(u));const l=eN({inputs:{a:i,b:u},backend:s});F=cN({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),C.push(l)}else{const u=Ke(e.dtype,t.dtype),l=new ZI(k,I,[E,m,g],n,r,_,$,A,R),c=[N,S];if(null!=a&&c.push(a),A&&c.push(i),R){const e=s.makeTensorInfo([],"float32",xe(o,"float32"));c.push(e),C.push(e)}F=s.runWebGLProgram(l,c,u)}const D=nN({inputs:{x:F},backend:s,attrs:{shape:w}});C.push(F);for(const e of C)s.disposeIntermediateTensorInfo(e);return D}const mN={kernelName:"_FusedMatMul",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return fN({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}};const gN={kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=Ky(n.texData.get(r.dataId).values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new DI(r.shape,"return abs(x);"):new FI(r.shape,"return abs(x);"),n.runWebGLProgram(s,[r],r.dtype)}},yN={kernelName:"Acos",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"})},bN={kernelName:"Acosh",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"})},xN={kernelName:"Add",backendName:"webgl",kernelFunc:KI({opSnippet:"return a + b;",packedOpSnippet:"return a + b;",supportsComplex:!0,cpuKernelImpl:ub})};class vN{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class wN{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const kN={kernelName:"AddN",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return VI({inputs:{x:s[0]},backend:r});if(s.length>W().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map(e=>e.dtype).reduce((e,t)=>Ke(e,t)),i=s.map(e=>e.shape),o=W().getBool("WEBGL_PACK")?new wN(s[0].shape,i):new vN(s[0].shape,i);return r.runWebGLProgram(o,s,a)}};const IN={kernelName:"All",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=v(a,s.shape);let l=u;const c=$a(l,o);let h=s;null!=c&&(h=pN({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Da(l.length,o)),Ra("all",l,o);const[p,f]=_a(h.shape,l),m=nN({inputs:{x:h},backend:n,attrs:{shape:[-1,d(f)]}}),g=iN(m,m.dtype,"all",n);let y;if(i){y=nN({inputs:{x:g},backend:n,attrs:{shape:Aa(p,u)}})}else y=nN({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),y}};const NN={kernelName:"Any",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=v(a,s.shape);let l=u;const c=$a(l,o);let h=s;null!=c&&(h=pN({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Da(l.length,o)),Ra("any",l,o);const[p,f]=_a(h.shape,l),m=nN({inputs:{x:h},backend:n,attrs:{shape:[-1,d(f)]}}),g=iN(m,m.dtype,"any",n);let y;if(i){y=nN({inputs:{x:g},backend:n,attrs:{shape:Aa(p,u)}})}else y=nN({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),y}};class SN{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class CN{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,l(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=wI(o),c=CI("coords",o);let h,p;if(1===a){p=o+1;const e=wI(p);h=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[o-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[o-2]};`}else p=o,h=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map(e=>"int "+e),g=CI("sourceLocR",p-1).concat("inIdx.r"),y=CI("sourceLocG",p-1).concat("inIdx.g"),b=CI("sourceLocB",p-1).concat("inIdx.b"),x=CI("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function EN(e,t,n,r){const s=[n];if(Ra("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!W().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=_a(t.shape,s),o=d(i),u=nN({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(u);const l=function e(t,n,r,s=null){let a=n.shape[0],i=n.shape[1];null!=s&&(a=s.shape[0],i=s.shape[1]);const o=Fu(i),u={windowSize:o,inSize:i,batchSize:a,outSize:Math.ceil(i/o)},l=new SN(u,r,null==s),c=[n];null!=s&&c.push(s);const h=t.runWebGLProgram(l,c,"int32");if(1===h.shape[1])return h;const p=e(t,n,r,h);return t.disposeIntermediateTensorInfo(h),p}(e,u,r);n.push(l);const c=nN({inputs:{x:l},backend:e,attrs:{shape:a}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),c}return function e(t,n,r,s=null){const a=null!=s?s.shape:n.shape,i=Fu(a[a.length-1]),o=new CN(a,i,r,null==s),u=null==s?[n]:[n,s],l=t.runWebGLProgram(o,u,"int32");if(l.shape.length===n.shape.length){const s=e(t,n,r,l);return t.disposeIntermediateTensorInfo(l),s}return l}(e,t,r)}const TN={kernelName:"ArgMax",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=v(a,s.shape);const o=$a(i,s.shape.length);let u=s;const l=[];null!=o&&(u=pN({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Da(i.length,u.shape.length)),Ra("argMax",[i[0]],u.shape.length);const c=EN(n,u,i[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}};const _N={kernelName:"ArgMin",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=v(a,s.shape);const o=$a(i,s.shape.length);let u=s;const l=[];null!=o&&(u=pN({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Da(i.length,u.shape.length)),Ra("argMin",[i[0]],u.shape.length);const c=EN(n,u,i[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},AN={kernelName:"Asin",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"})},RN={kernelName:"Asinh",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"})},$N={kernelName:"Atan",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"})},FN={kernelName:"Atan2",backendName:"webgl",kernelFunc:KI({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})},DN={kernelName:"Atanh",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"})};class MN{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class ON{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const LN={kernelName:"AvgPool",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Wk(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;l(os(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Yr(s.shape,a,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&f(c.inShape,c.outShape))return VI({inputs:{x:s},backend:n});const h=new MN(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};const BN={kernelName:"AvgPool3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Qr(s.shape,a,i,[1,1,1],o,u,l),h=new ON(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class PN{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zN{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VN={kernelName:"AvgPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Qr(i.shape,o,u,[1,1,1],l,c),p=new zN(h);return n.runWebGLProgram(p,[s],i.dtype)}};const WN={kernelName:"AvgPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Wk([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Yr(i.shape,o,u,1,l),h=new PN(c);return n.runWebGLProgram(h,[s],i.dtype)}};const UN={kernelName:"BatchMatMul",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return fN({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class GN{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Gs(e,t),Gs(e,n);let i="0.0";null!=r&&(Gs(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Gs(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class HN{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Gs(e,t),Gs(e,n);let i="vec4(0.0)";null!=r&&(Gs(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Gs(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const jN={kernelName:"FusedBatchNorm",backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;l(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),l(null==i||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),l(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,s,a];let h=null;null!=i&&(h=i.shape,c.push(i));let p=null;null!=o&&(p=o.shape,c.push(o));const d=W().getBool("WEBGL_PACK_NORMALIZATION")?new HN(r.shape,s.shape,a.shape,h,p,u):new GN(r.shape,s.shape,a.shape,h,p,u);return t.runWebGLProgram(d,c,c[0].dtype)}};class qN{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=wI(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return KN.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${KN[t]} = start[${t}] + coords.${KN[t]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const KN=["x","y","z","w","u","v"];class XN{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=wI(this.rank),n=CI("coords",this.rank),r=CI("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function ZN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,u]=wr(s,a,i);if(hr(s,o,u),0===d(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=ex(n.texData.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,e)}const{isPacked:l}=n.texData.get(s.dataId),c=xr(s.shape,o,u);if(l||!c){const e=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new XN(u):new qN(u),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=vr(t,$(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),a}(s,o,u,n)}const YN={kernelName:"Slice",backendName:"webgl",kernelFunc:ZN},QN={kernelName:"BatchToSpaceND",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;l(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=a.reduce((e,t)=>e*t),u=Ou(s.shape,a,o),c=Lu(u.length,a.length),h=Bu(s.shape,a,o),p=Pu(i,a.length),d=zu(h,i,a.length),f=[],m=nN({inputs:{x:s},backend:n,attrs:{shape:u}}),g=pN({inputs:{x:m},backend:n,attrs:{perm:c}}),y=nN({inputs:{x:g},backend:n,attrs:{shape:h}}),b=ZN({inputs:{x:y},backend:n,attrs:{begin:p,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}};const JN={kernelName:"Bincount",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=hb(n.readSync(s.dataId),n.readSync(a.dataId),a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},eS=KI({opSnippet:"return float(a != b);",dtype:"bool"}),tS={kernelName:"NotEqual",backendName:"webgl",kernelFunc:eS};function nS(e){const{inputs:t,backend:n}=e,{input:r}=t;return VI({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const rS={kernelName:"Real",backendName:"webgl",kernelFunc:nS};const sS={kernelName:"Cast",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return VI({inputs:{x:a},backend:r});const t=Ja(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=UI({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=nS({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!N(a.dtype,i)){const e=VI({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new FI(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",k("bool",1)),t=eS({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},aS={kernelName:"Ceil",backendName:"webgl",kernelFunc:qI({opSnippet:"return ceil(x);",packedOpSnippet:"return ceil(x);",cpuKernelImpl:gb})};class iS{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class oS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const uS={kernelName:"ClipByValue",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=W().getBool("WEBGL_PACK_CLIP")?new oS(s.shape):new iS(s.shape);const u=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,u)}};class lS{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function cS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const hS={kernelName:"ComplexAbs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new lS(r.shape),i=[cS(r,s.complexTensorInfos.real),cS(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class pS{constructor(e){this.outputShape=[],this.outputShape=_u(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class dS{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_u(e,t);const n=this.outputShape,r=n.length,s=wI(r),a=CI("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${fS(i,u,t)}),\n            vec2(${fS(l,u,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${fS(i,u,d)}),\n          vec2(${fS(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function fS(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function mS(e){const{inputs:t,backend:n}=e,{input:r}=t;return VI({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const gS={kernelName:"Imag",backendName:"webgl",kernelFunc:mS};function yS(e,t,n){const r=_u(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>nN({inputs:{x:e},attrs:{shape:[-1,d(e.shape.slice(t))]},backend:n})),outShape:r}}function bS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=v(s,t[0].shape)[0],i=_u(t.map(e=>e.shape),a);if(0===d(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>d(e.shape)>0);if(1===o.length)return VI({inputs:{x:o[0]},backend:n});return Tu(o.map(e=>e.shape),a),function e(t,n,r){const s=t[0].dtype;if("complex64"===s){const s=t.map(e=>nS({inputs:{input:e},backend:r})),a=t.map(e=>mS({inputs:{input:e},backend:r})),i=e(s,n,r),o=e(a,n,r),u=UI({inputs:{real:i,imag:o},backend:r});return s.forEach(e=>r.disposeIntermediateTensorInfo(e)),a.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}if("string"===s){const{tensors2D:e,outShape:a}=yS(t,n,r),i=bb(e.map(e=>({vals:r.readSync(e.dataId),shape:e.shape})),a,s,1===e[0].shape[0]),o=_u(t.map(e=>e.shape),n),u=r.makeTensorInfo(o,s,i);return e.forEach(e=>r.disposeIntermediateTensorInfo(e)),u}if(t.length>W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(t.length/2),a=e(t.slice(0,s),n,r),i=e(t.slice(s),n,r),o=e([a,i],n,r);return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}if(W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const e=new dS(t.map(e=>e.shape),n);return r.runWebGLProgram(e,t,s)}const{tensors2D:a,outShape:i}=yS(t,n,r),o=new pS(a.map(e=>e.shape)),u=r.runWebGLProgram(o,a,s);a.forEach(e=>r.disposeIntermediateTensorInfo(e));const l=nN({inputs:{x:u},attrs:{shape:i},backend:r});return r.disposeIntermediateTensorInfo(u),l}(o,a,n)}const xS={kernelName:"Concat",backendName:"webgl",kernelFunc:bS};class vS{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class wS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kS{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=s*r,m=Gk(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function IS({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,c=r.texData.get(e.dataId),h=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],y=(1===p||1===d)&&h>1e3,b=u[2]%2!=0&&!!c.isPacked;if(!y&&W().getBool("WEBGL_LAZILY_UNPACK")&&W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const h=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),p={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,l(Mk(c.shape,p.shape),()=>`packed reshape ${c.shape} to ${p.shape} isn't free`);const y=nN({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(y);const b=fN({a:p,b:y,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),x=r.texData.get(b.dataId);l(x.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=d,x.shape=n.outShape,m=VI({inputs:{x:b},backend:r}),m.shape=n.outShape,g.push(b)}else{const l=nN({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=nN({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=fN({a:l,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=nN({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function NS({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=u*l*c,y=p*h,b=[g,y],x=[],v=nN({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=nN({inputs:{x:t},backend:r,attrs:{shape:[1,g,d(t.shape)/g]}});x.push(v),x.push(w);const k=new kS(b,v.shape,n),I=r.runWebGLProgram(k,[v],"float32"),N=nN({inputs:{x:I},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(N);const S=null!=s,C=null!=a,E="leakyrelu"===o,T=o?XI(o,!0):null,_=new ZI(N.shape,w.shape,[1,y,n.outChannels],!0,!1,S,T,C,E),A=[N,w];if(s&&A.push(s),C&&A.push(a),E){const e=r.makeTensorInfo([],"float32",xe(i,"float32"));A.push(e),x.push(e)}const R=r.runWebGLProgram(_,A,"float32"),$=nN({inputs:{x:R},backend:r,attrs:{shape:m?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});x.push(R);for(const e of x)r.disposeIntermediateTensorInfo(e);return $}const SS={kernelName:"Conv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=us(u),p=Jr(s.shape,a.shape,i,l,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(W().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])d=NS({x:s,filter:a,convInfo:p,backend:n});else{const e=new vS(p);d=n.runWebGLProgram(e,[s,a],"float32")}else d=IS({x:s,filter:a,convInfo:p,backend:n});const f=nN({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class CS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ES{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class TS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _S{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const AS={kernelName:"Conv2DBackpropFilter",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=us(u),p=Jr(s.shape,c,i,1,o,l,!1,h),d=new CS(p);return n.runWebGLProgram(d,[s,a],"float32")}};const RS={kernelName:"Conv2DBackpropInput",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=us(l),p=Jr(i,a.shape,o,1,u,c,!1,h),d=new ES(p);return n.runWebGLProgram(d,[s,a],"float32")}};const $S={kernelName:"Conv3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=es(s.shape,a.shape,i,u,o),c=new wS(l);return n.runWebGLProgram(c,[s,a],"float32")}};const FS={kernelName:"Conv3DBackpropFilterV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,l=es(s.shape,u,i,1,o),c=new TS(l);return n.runWebGLProgram(c,[s,a],"float32")}};const DS={kernelName:"Conv3DBackpropInputV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,l=es(u,a.shape,o,1,i),c=new _S(l);return n.runWebGLProgram(c,[s,a],"float32")}},MS={kernelName:"Cos",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"})},OS={kernelName:"Cosh",backendName:"webgl",kernelFunc:qI({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"})};class LS{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+d],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const BS={kernelName:"CropAndResize",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new LS(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};class PS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${zS(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+a:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${wI(r)} coords = getOutputCoords();\n        int end = ${VS(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${VS(r,"coords")} = idx;\n          val += getX(${zS(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function zS(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function VS(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const WS={kernelName:"Cumsum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,u=s.shape.length,l=$a([a],u);let c=s;null!=l&&(c=pN({inputs:{x:s},backend:n,attrs:{perm:l}}));const h=Da(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=`+a);const p=s.shape[h];let d=VI({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new PS(c.shape,!1,o),r=t.getCustomSetupFunc(e),s=d;d=n.runWebGLProgram(t,[d],d.dtype,r),n.disposeIntermediateTensorInfo(s)}if(i){const e=new PS(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=pN({inputs:{x:d},backend:n,attrs:{perm:Fa(l)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}};const US={kernelName:"DenseBincount",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=hb(n.readSync(s.dataId),n.readSync(a.dataId),a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=pb(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+s.shape.length+".")}};class GS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const HS={kernelName:"DepthToSpace",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;l(a>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+a);const o=s.shape[0],u="NHWC"===i?s.shape[1]:s.shape[2],c="NHWC"===i?s.shape[2]:s.shape[3],h="NHWC"===i?s.shape[3]:s.shape[1],p=u*a,d=c*a,f=h/(a*a),m=new GS("NHWC"===i?[o,p,d,f]:[o,f,p,d],a,i);return n.runWebGLProgram(m,[s],s.dtype)}};class jS{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class qS{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let e=0;e<f;e++)for(let t=0;t<m;t++)y+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<f;e++)for(let t=0;t<g;t++){const n=2*t;if(y+=`\n          xR = xRCorner + ${e*p};\n          xC = xCCorner + ${n*d};\n        `,1===h){if(n<m&&(y+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<m)){const t=l%2==0?u(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(y+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(y+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),y+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):y+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<m&&(y+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,l%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<m&&(y+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<m&&(y+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),y+="}");n<m&&(y+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<m&&(y+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<f;e++)for(let t=0;t<m;t++)y+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let b="",x="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${y}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const KS={kernelName:"DepthwiseConv2dNative",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;let h=u;null==h&&(h=[1,1]),l(os(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const p=Jr(s.shape,a.shape,i,h,o,c,!0);let d;return d=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new qS(p):new jS(p),n.runWebGLProgram(d,[s,a],"float32")}};class XS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const YS={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Jr(s.shape,c,i,o,u,l,!0),p=new XS(h);return n.runWebGLProgram(p,[s,a],"float32")}};const QS={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Jr(c,a.shape,i,o,u,l,!0),p=new ZS(h);return n.runWebGLProgram(p,[s,a],"float32")}};class JS{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const eC={kernelName:"Diag",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=d(r.shape),i=nN({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new JS(a),u=n.runWebGLProgram(o,[i],i.dtype),l=nN({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class tC{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const nC={kernelName:"Dilation2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=Zr(s.shape,a.shape,i,o,"NHWC",u);let c;const h=new tC(l);c=n.runWebGLProgram(h,[s,a],"float32");const p=nN({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}},rC={kernelName:"Elu",backendName:"webgl",kernelFunc:qI({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"})},sC={kernelName:"EluGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zI("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new PI("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},aC={kernelName:"Equal",backendName:"webgl",kernelFunc:KI({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"})},iC={kernelName:"Erf",backendName:"webgl",kernelFunc:qI({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n'})},oC=qI({opSnippet:"return exp(x);",packedOpSnippet:"return exp(x);",cpuKernelImpl:xb}),uC={kernelName:"Exp",backendName:"webgl",kernelFunc:oC};function lC(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(l(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),nN({inputs:{x:a},backend:r,attrs:{shape:o}})}const cC={kernelName:"ExpandDims",backendName:"webgl",kernelFunc:lC},hC={kernelName:"Expm1",backendName:"webgl",kernelFunc:qI({opSnippet:"return exp(x) - 1.0;",packedOpSnippet:"return exp(x) - 1.0;",cpuKernelImpl:kb})};class pC{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?r+".0":"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function dC(e,t,n){const r=n.texData.get(e.dataId),s=d(e.shape),a=e.shape[e.shape.length-1],i=nN({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,u=new pC("real",o,t),l=new pC("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),f=UI({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=nN({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const fC={kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return dC(r,!1,n)}};class mC{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function gC(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||_(s),"string"===a){const e=I(a,d(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new mC(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],a,n)}}const yC={kernelName:"Fill",backendName:"webgl",kernelFunc:gC};class bC{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const xC={kernelName:"FlipLeftRight",backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new bC(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},vC={kernelName:"Floor",backendName:"webgl",kernelFunc:qI({opSnippet:"return floor(x);",packedOpSnippet:"return floor(x);",cpuKernelImpl:Nb})},wC={kernelName:"FloorDiv",backendName:"webgl",kernelFunc:KI({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"})};class kC{constructor(e){this.variableNames=["A"];const t=Gk(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class IC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Gk(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const NC={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,u="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[l,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,l],p=[c,l,a];(o||i||u)&&(null==SC&&(SC=document.createElement("canvas").getContext("2d")),SC.canvas.width=l,SC.canvas.height=c,SC.drawImage(s,0,0,l,c),s=SC.canvas);const d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=hk.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const f=W().getBool("WEBGL_PACK")?new IC(p):new kC(p),m=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),m}};let SC;const CC={kernelName:"FusedConv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=us(c),g=Jr(s.shape,a.shape,u,h,l,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(W().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=NS({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===d,u=d?XI(d,!1):null,l=new vS(g,e,u,t,r),c=[s,a];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",xe(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=IS({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=nN({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}};const EC={kernelName:"FusedDepthwiseConv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=[];let g=h;null==g&&(g=[1,1]),l(os(u,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);const y=Jr(s.shape,a.shape,u,g,c,p,!0),b=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?XI(d,b):null,v=[s,a],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",xe(f,"float32"));v.push(e),m.push(e)}let N;N=b?new qS(y,w,x,k,I):new jS(y,w,x,k,I);const S=n.runWebGLProgram(N,v,"float32");return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}};class TC{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=wI(t.length),s=wI(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const _C={kernelName:"GatherNd",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],[o,u,l,c]=ur(r,s),h=nN({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=nN({inputs:{x:r},backend:n,attrs:{shape:[d(r.shape)/l,l]}}),f=new TC(i,c,[u,l]),m=n.runWebGLProgram(f,[p,h],p.dtype),g=nN({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class AC{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=wI(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+n[t]);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const RC={kernelName:"GatherV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=Du(s,a,v(i,s.shape)[0],o),l=d(a.shape),c=[],h=nN({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=nN({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}});c.push(h),c.push(p);const f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=Cb(n.bufferSync(h),e,f);return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,t.dtype,t.values)}const m=new AC(h.shape,f),g=n.runWebGLProgram(m,[h,p],h.dtype);c.push(g);const y=nN({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},$C={kernelName:"Greater",backendName:"webgl",kernelFunc:KI({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Eb,dtype:"bool"})},FC={kernelName:"GreaterEqual",backendName:"webgl",kernelFunc:KI({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"})};const DC={kernelName:"IFFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return dC(r,!0,n)}},MC={kernelName:"IsFinite",backendName:"webgl",kernelFunc:qI({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"})},OC={kernelName:"IsInf",backendName:"webgl",kernelFunc:qI({opSnippet:"return float(isinf(x));",dtype:"bool"})},LC={kernelName:"IsNan",backendName:"webgl",kernelFunc:qI({opSnippet:"return float(isnan(x));",dtype:"bool"})},BC={kernelName:"Less",backendName:"webgl",kernelFunc:KI({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:_b,dtype:"bool"})},PC={kernelName:"LessEqual",backendName:"webgl",kernelFunc:KI({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"})};const zC={kernelName:"LinSpace",backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Rb(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},VC={kernelName:"Log",backendName:"webgl",kernelFunc:qI({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:$b})},WC={kernelName:"Log1p",backendName:"webgl",kernelFunc:qI({opSnippet:"return log(1.0 + x);"})},UC={kernelName:"LogicalAnd",backendName:"webgl",kernelFunc:KI({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"})},GC={kernelName:"LogicalNot",backendName:"webgl",kernelFunc:qI({opSnippet:"return float(!(x >= 1.0));"})},HC={kernelName:"LogicalOr",backendName:"webgl",kernelFunc:KI({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"})};class jC{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class qC{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const KC={kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,l=W().getBool("WEBGL_PACK_NORMALIZATION")?new qC(s.shape,a,i,o,u):new jC(s.shape,a,i,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class XC{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const ZC={kernelName:"LRNGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new XC(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function YC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=v(a,s.shape);let l=u;const c=$a(l,o),h=null!=c,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=jb(e,s.shape,s.dtype,c,t);f=n.makeTensorInfo(t,s.dtype);n.texData.get(f.dataId).values=r}else f=lN(s,c,n);l=Da(l.length,o)}Ra("max",l,o);const[m,g]=_a(f.shape,l);let y,b=m;if(i&&(b=Aa(m,u)),p){const e=Db(n.texData.get(f.dataId).values,d(g),b,s.dtype);y=n.makeTensorInfo(b,s.dtype);n.texData.get(y.dataId).values=e}else y=function(e,t,n,r){const s=d(t),a=nN({inputs:{x:e},attrs:{shape:[d(e.shape)/s,s]},backend:r}),i=iN(a,e.dtype,"max",r),o=nN({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,b,n);return h&&n.disposeIntermediateTensorInfo(f),y}const QC={kernelName:"Max",backendName:"webgl",kernelFunc:YC},JC={kernelName:"Maximum",backendName:"webgl",kernelFunc:KI({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Mb})};const eE={kernelName:"MaxPool",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Wk(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;l(os(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Yr(s.shape,a,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&f(c.inShape,c.outShape))return VI({inputs:{x:s},backend:n});const h=new MN(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};const tE={kernelName:"MaxPool3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Qr(s.shape,a,i,[1,1,1],o,l,u),h=new ON(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class nE{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rE{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const sE={kernelName:"MaxPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Qr(i.shape,o,u,[1,1,1],l,c),p=new ON(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new rE(h),m=n.runWebGLProgram(f,[s,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}};const aE={kernelName:"MaxPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Wk([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Yr(o.shape,u,l,1,c,h),d=new MN(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new nE(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const iE={kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;l(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];l(os(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const h=Yr(r.shape,s,a,c,i),[p,d]=function(e,t,n,r){let s=new MN(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new MN(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,h,u);return[p,d]}};const oE={kernelName:"Mean",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=v(a,r.shape);let l=u;const c=$a(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(p){const e=i.texData.get(m.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=jb(e,r.shape,r.dtype,c,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=lN(r,c,i);f.push(m),l=Da(l.length,o)}Ra("sum",l,o);const[g,y]=_a(m.shape,l);let b=g;s&&(b=Aa(g,u));const x=function(e,t,n,r){const s=d(t),a=nN({inputs:{x:e},attrs:{shape:[d(e.shape)/s,s]},backend:r}),i=iN(a,"float32","mean",r),o=nN({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(m,y,b,i);for(const e of f)i.disposeIntermediateTensorInfo(e);return x}};const uE={kernelName:"Min",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=v(a,s.shape);let l=u;const c=$a(l,o);let h=s;null!=c&&(h=pN({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Da(l.length,s.shape.length)),Ra("min",l,o);const[p,f]=_a(h.shape,l),m=nN({inputs:{x:h},backend:n,attrs:{shape:[-1,d(f)]}}),g=iN(m,m.dtype,"min",n);let y;if(i){y=nN({inputs:{x:g},backend:n,attrs:{shape:Aa(p,u)}})}else y=nN({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),y}},lE={kernelName:"Minimum",backendName:"webgl",kernelFunc:KI({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Lb})};class cE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=wI(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class hE{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=wI(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=CI("rc",r),u=CI("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const pE={kernelName:"MirrorPad",backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hE(r.shape,s,a):new cE(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},dE={kernelName:"Mod",backendName:"webgl",kernelFunc:KI({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};class fE{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const mE=KI({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),gE={kernelName:"RealDiv",backendName:"webgl",kernelFunc:mE},yE=KI({opSnippet:"return a - b;",packedOpSnippet:"return a - b;",supportsComplex:!0,cpuKernelImpl:ax}),bE={kernelName:"Sub",backendName:"webgl",kernelFunc:yE};function xE(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=v([a],s.shape),o=YC({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Aa(o.shape,i),l=nN({inputs:{x:o},backend:n,attrs:{shape:u}}),c=yE({inputs:{a:s,b:l},backend:n}),h=oC({inputs:{x:c},backend:n}),p=cN({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=nN({inputs:{x:p},backend:n,attrs:{shape:u}}),f=mE({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const vE={kernelName:"Softmax",backendName:"webgl",kernelFunc:xE};const wE={kernelName:"Multinomial",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:xE({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new fE(l,c,a),p=h.getCustomSetupFunc(i),d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}};const kE={kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=Ub(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new DI(r.shape,"return -x;"):new FI(r.shape,"return -x;"),n.runWebGLProgram(s,[r],r.dtype)}},IE=To;const NE={kernelName:"NonMaxSuppressionV3",backendName:"webgl",kernelFunc:function(e){Vu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=IE(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},SE=_o;const CE={kernelName:"NonMaxSuppressionV4",backendName:"webgl",kernelFunc:function(e){Vu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=SE(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},EE=Ao;const TE={kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(e){Vu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=EE(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class _E{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const AE={kernelName:"OneHot",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,u=d(s.shape),l=new _E(u,a,i,o),c=nN({inputs:{x:s},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const p=nN({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function RE(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=nS({inputs:{input:r},backend:n}),t=RE({inputs:{x:e},backend:n}),s=mS({inputs:{input:r},backend:n}),a=RE({inputs:{x:s},backend:n}),i=UI({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return gC({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const $E={kernelName:"ZerosLike",backendName:"webgl",kernelFunc:RE};const FE={kernelName:"OnesLike",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=nS({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=mS({inputs:{input:s},backend:r}),i=RE({inputs:{x:a},backend:r}),o=UI({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return gC({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const DE={kernelName:"Pack",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return lC({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(e=>{c(a,e.shape,"All tensors passed to stack must have matching shapes"),l(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=bS({inputs:t.map(e=>{const t=lC({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class ME{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=wI(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class OE{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=wI(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=CI("rc",r),u=CI("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[s+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const LE=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OE(s.shape,a,i):new ME(s.shape,a,i);return n.runWebGLProgram(o,[s],s.dtype)},BE={kernelName:"PadV2",backendName:"webgl",kernelFunc:LE},PE={kernelName:"Pow",backendName:"webgl",kernelFunc:KI({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};const zE={kernelName:"Prod",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],l=v(a,s.shape);let c=l;const h=$a(c,o);let p,f=s;if(null!=h&&(f=pN({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Da(c.length,o),u.push(f)),Ra("prod",c,o),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:s}=Xb(f.shape,f.dtype,e,c);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=_a(f.shape,c),r=d(t),a=nN({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=iN(a,Xe(s.dtype),"prod",n);p=nN({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(p);const e=Aa(p.shape,l);p=nN({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},VE=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=Yb(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},WE={kernelName:"Range",backendName:"webgl",kernelFunc:VE},UE={kernelName:"Reciprocal",backendName:"webgl",kernelFunc:qI({opSnippet:"return 1.0 / x;"})},GE={kernelName:"Relu",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"})},HE={kernelName:"Relu6",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"})};class jE{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class qE{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const KE={kernelName:"ResizeBilinear",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qE(s.shape,u,l,a,i):new jE(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],"float32")}};class XE{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ZE={kernelName:"ResizeBilinearGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new XE(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class YE{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const QE={kernelName:"ResizeNearestNeighbor",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=new YE(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class JE{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const eT={kernelName:"ResizeNearestNeighborGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new JE(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class tT{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=wI(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class nT{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=CI("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=wI(n);function o(n){const r=e.map((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const rT={kernelName:"Reverse",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=v(a,s.shape);if(0===i)return VI({inputs:{x:s},backend:n});const u=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nT(s.shape,o):new tT(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class sT{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],a=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[u,l]=Mu(r,s,a),c=u.toFixed(3),h=l.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const aT={kernelName:"RotateWithOffset",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new sT(r.shape,s,a,i);return o.runWebGLProgram(u,[r],r.dtype)}},iT={kernelName:"Round",backendName:"webgl",kernelFunc:qI({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"})},oT={kernelName:"Rsqrt",backendName:"webgl",kernelFunc:qI({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Qb})};class uT{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=wI(s.length),u=wI(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const lT={kernelName:"ScatterNd",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=cr(0,s,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,s.dtype);const d=nN({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=nN({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new uT(u,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=nN({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class cT{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&a.push(""+n[r]);r=a.join(),s=i.join()}const a=wI(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const hT={kernelName:"Select",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new cT(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Ke(s.dtype,a.dtype))}},pT={kernelName:"Selu",backendName:"webgl",kernelFunc:qI({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = 1.0507009873554805;\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n"})},dT={kernelName:"Sigmoid",backendName:"webgl",kernelFunc:qI({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"})},fT={kernelName:"Sign",backendName:"webgl",kernelFunc:qI({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"})},mT={kernelName:"Sin",backendName:"webgl",kernelFunc:qI({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"})},gT={kernelName:"Sinh",backendName:"webgl",kernelFunc:qI({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"})},yT={kernelName:"Softplus",backendName:"webgl",kernelFunc:qI({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"})},bT={kernelName:"SpaceToBatchND",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;l(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=a.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const c=[],h=LE({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),p=Ou(h.shape,a,o,!1),d=Lu(p.length,a.length,!1),f=Bu(h.shape,a,o,!1),m=nN({inputs:{x:h},backend:n,attrs:{shape:p}}),g=pN({inputs:{x:m},backend:n,attrs:{perm:d}}),y=nN({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(h),c.push(m),c.push(g),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}};const xT={kernelName:"SparseToDense",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=cr(0,s,o),p=new uT(l,u,s.shape.length,a.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[a,s,i],a.dtype),f=nN({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}};const vT={kernelName:"SplitV",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=v(i,s.shape)[0],u=ju(s,a,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map(e=>{const t=[...h];t[o]=e;const r=ZN({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r})}},wT={kernelName:"Sqrt",backendName:"webgl",kernelFunc:qI({opSnippet:"return sqrt(x);"})},kT={kernelName:"Square",backendName:"webgl",kernelFunc:qI({opSnippet:"return x * x;"})},IT={kernelName:"SquaredDifference",backendName:"webgl",kernelFunc:KI({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"})};const NT={kernelName:"Step",backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new FI(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class ST{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=wI(n.length),a=wI(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const CT={kernelName:"StridedSlice",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=kr(s.shape,a,i,o,u,l,c,h,p),x=nN({inputs:{x:s},backend:n,attrs:{shape:y}});let v;if(d){const e=ZN({inputs:{x:x},backend:n,attrs:{begin:f,size:g}});v=nN({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some(e=>0===e))v=n.makeTensorInfo(b,s.dtype,[]);else{if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=sx(b,jn(x.shape,x.dtype,e),m,f);v=n.makeTensorInfo(b,x.dtype,t.values)}else{const e=new ST(f,m,b);v=n.runWebGLProgram(e,[x],x.dtype)}}const w=nN({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},ET={kernelName:"Tan",backendName:"webgl",kernelFunc:qI({opSnippet:"return tan(x);"})},TT={kernelName:"Tanh",backendName:"webgl",kernelFunc:qI({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"})};class _T{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=wI(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function AT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype){const e=n.readSync(s.dataId).map(e=>Ie(e)),t=ux(jn(s.shape,s.dtype,e),a);return n.makeTensorInfo(t.shape,t.dtype,t.values)}const i=new _T(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const RT={kernelName:"Tile",backendName:"webgl",kernelFunc:AT};const $T={kernelName:"TopK",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[u,l]=lx(o,s.shape,s.dtype,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const FT={kernelName:"Unique",backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Wk(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=cx(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};const DT={kernelName:"Unpack",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[a]=e;const t=ZN({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=nN({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class MT{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const OT=[KC,ZC,mN,gN,yN,bN,xN,kN,IN,NN,TN,_N,AN,RN,FN,$N,DN,BN,LN,VN,WN,UN,jN,QN,JN,sS,aS,uS,hS,GI,xS,AS,RS,SS,FS,DS,$S,MS,OS,BS,WS,US,HS,YS,QS,KS,eC,nC,rC,sC,aC,iC,uC,cC,hC,fC,yC,xC,vC,wC,NC,CC,EC,_C,RC,$C,FC,WI,DC,gS,MC,OC,LC,HI,BC,PC,zC,WC,VC,UC,GC,HC,QC,tE,eE,sE,aE,iE,JC,oE,uE,lE,pE,dE,wE,tN,kE,NE,CE,TE,tS,AE,FE,DE,BE,PE,jI,zE,WE,rS,gE,UE,HE,GE,rN,KE,ZE,QE,eT,rT,aT,iT,oT,lT,hT,pT,dT,fT,mT,gT,YN,vE,yT,bT,xT,vT,wT,kT,IT,NT,CT,bE,hN,ET,TT,RT,$T,dN,FT,DT,{kernelName:"UnsortedSegmentSum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let l=0;const c=$a([l],o);let h=s;null!=c&&(h=pN({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=Da(1,o)[0]);const p=function(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}(h.shape,l,i),f=d([h.shape[l]]),m=nN({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});u.push(m);const g=Xe(s.dtype),y=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=function(e,t){let n,r=!1;for(e<=$u?(n=e,r=!0):n=R(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=R(e,n+1);return n}(o,a),c=new MT({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const p=VE({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=AT({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});u.push(p),u.push(d);return y(h,t,d,s,a)},b=nN({inputs:{x:y(m,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:p}});let x=b;if(null!=c){u.push(b);const e=Fa(c);x=pN({inputs:{x:x},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},$E];for(const e of OT)ge(e);Math.PI;const LT=.5*Math.PI,BT=async(e,t)=>{const n=Performance.now,r=await t.estimateFaces({input:e,returnTensors:!1,flipHorizontal:!0,predictIrises:!0});if(r.length>0)for(let e=0,t=r.length;e<t;e++){const t=r[e],{boundingBox:s,mesh:a,scaledMesh:i,annotations:o}=t,{bottomRight:u,topLeft:l}=s,{noseTip:c,noseBottom:h,noseRightCorner:p}=o,d=i[109],f=i[400],m=f[1]-d[1],{leftEyeIris:g,rightEyeIris:y,leftEyeLower0:b,rightEyeLower0:x,midwayBetweenEyes:v}=o,w=g[0],k=y[0],I=v[0],N=Math.abs(w[0]-k[0]),S=w[2]<k[2],C=2*(I[0]-w[0])/N-1,E=b[0][0],T=x[0][0],_=b[0][1],A=x[0][1],R=v[0][0],$=(v[0][1],-1*(R-E)),F=R-T,{rightCheek:D,leftCheek:M,silhouette:O}=o;t.lookingRight=!S,t.eyeDirection=-1*C,t.eyeDistance=N,t.headHeight=m;const L=-1*(Math.atan2($,F)-2),B=(Math.atan2(d[2],f[2])-1.9-.2)/LT,P=E-T,z=_-A,V=-1*(Math.atan2(P,z)+LT);t.pitch=B,t.roll=V,t.yaw=L;const{lipsUpperInner:W,lipsLowerInner:U}=o,G=W.length,H=W[0],j=U[0],q=W[5],K=U[5],X=W[G-1],Z=U[G-1],Y=K[0]-q[0],Q=K[1]-q[1],J=(Z[0],j[0],X[1],H[1],Math.sqrt(Y*Y+Q*Q)),ee=Math.sqrt(Y*Y+Q*Q);t.mouthRange=J,t.mouthRatio=J/m,t.mouthWidth=ee,t.mouthOpen=J/(.25*m),t.happiness=0,t.time=n}return r},PT=async(e,t)=>{await nt.ready();const n=t.maxFaces,r=await function(e,t){return void 0===e&&(e=Yh.mediapipeFacemesh),void 0===t&&(t={}),bh(this,void 0,void 0,(function(){return xh(this,(function(n){if(e===Yh.mediapipeFacemesh)return[2,jh(t)];throw new Error(e+" is not a valid package name.")}))}))}(Yh.mediapipeFacemesh,t),s=async(t,a,i=null)=>{if(!i||i()){const t=await BT(e,r);if(t.length>0){const e=Math.min(n,t.length),r=[];for(let n=0;n<e;++n){const e=t[n];r.push(e)}a&&a(r)}else a&&a(null)}t&&requestAnimationFrame(()=>s(t,a,i))};return s},zT=2*Math.PI,VT=(e,t,n)=>e>n?n:e<t?t:e;const WT=["♫","𝅗𝅥","𝅘𝅥","𝅘𝅥𝅮","𝅘𝅥𝅯","𝅘𝅥𝅰","𝅘𝅥𝅱","𝅘𝅥𝅲"],UT=["accordion-mp3","acoustic_bass-mp3","acoustic_grand_piano-mp3","acoustic_guitar_nylon-mp3","acoustic_guitar_steel-mp3","agogo-mp3","alto_sax-mp3","applause-mp3","bagpipe-mp3","banjo-mp3","baritone_sax-mp3","bassoon-mp3","bird_tweet-mp3","blown_bottle-mp3","brass_section-mp3","breath_noise-mp3","bright_acoustic_piano-mp3","celesta-mp3","cello-mp3","choir_aahs-mp3","church_organ-mp3","clarinet-mp3","clavinet-mp3","contrabass-mp3","distortion_guitar-mp3","drawbar_organ-mp3","dulcimer-mp3","electric_bass_finger-mp3","electric_bass_pick-mp3","electric_grand_piano-mp3","electric_guitar_clean-mp3","electric_guitar_jazz-mp3","electric_guitar_muted-mp3","electric_piano_1-mp3","electric_piano_2-mp3","english_horn-mp3","fiddle-mp3","flute-mp3","french_horn-mp3","fretless_bass-mp3","fx_1_rain-mp3","fx_2_soundtrack-mp3","fx_3_crystal-mp3","fx_4_atmosphere-mp3","fx_5_brightness-mp3","fx_6_goblins-mp3","fx_7_echoes-mp3","fx_8_scifi-mp3","glockenspiel-mp3","guitar_fret_noise-mp3","guitar_harmonics-mp3","gunshot-mp3","harmonica-mp3","harpsichord-mp3","helicopter-mp3","honkytonk_piano-mp3","kalimba-mp3","koto-mp3","lead_1_square-mp3","lead_2_sawtooth-mp3","lead_3_calliope-mp3","lead_4_chiff-mp3","lead_5_charang-mp3","lead_6_voice-mp3","lead_7_fifths-mp3","lead_8_bass__lead-mp3","marimba-mp3","melodic_tom-mp3","music_box-mp3","muted_trumpet-mp3","oboe-mp3","ocarina-mp3","orchestra_hit-mp3","orchestral_harp-mp3","overdriven_guitar-mp3","pad_1_new_age-mp3","pad_2_warm-mp3","pad_3_polysynth-mp3","pad_4_choir-mp3","pad_5_bowed-mp3","pad_6_metallic-mp3","pad_7_halo-mp3","pad_8_sweep-mp3","pan_flute-mp3","percussive_organ-mp3","piccolo-mp3","pizzicato_strings-mp3","recorder-mp3","reed_organ-mp3","reverse_cymbal-mp3","rock_organ-mp3","seashore-mp3","shakuhachi-mp3","shamisen-mp3","shanai-mp3","sitar-mp3","slap_bass_1-mp3","slap_bass_2-mp3","soprano_sax-mp3","steel_drums-mp3","string_ensemble_1-mp3","string_ensemble_2-mp3","synth_bass_1-mp3","synth_bass_2-mp3","synth_brass_1-mp3","synth_brass_2-mp3","synth_choir-mp3","synth_drum-mp3","synth_strings_1-mp3","synth_strings_2-mp3","taiko_drum-mp3","tango_accordion-mp3","telephone_ring-mp3","tenor_sax-mp3","timpani-mp3","tinkle_bell-mp3","tremolo_strings-mp3","trombone-mp3","trumpet-mp3","tuba-mp3","tubular_bells-mp3","vibraphone-mp3","viola-mp3","violin-mp3","voice_oohs-mp3","whistle-mp3","woodblock-mp3","xylophone-mp3"],GT=e=>e&&e.length>1?e.replaceAll("_"," ").replace("-mp3",""):"",HT=UT.map(e=>GT(e)),jT=["A","Ab","B","Bb","C","D","Db","E","Eb","F","G","Gb"],qT=["Ab","Bb","Db","Eb","Gb"],KT=["A","B","C","D","E","F","G"],XT=()=>UT[Math.floor(Math.random()*UT.length)];let ZT,YT,QT,JT,e_,t_,n_,r_,s_,a_,i_,o_=0,u_=!1;const l_=()=>e_,c_=()=>{const e=e_.gain.value+.1*(o_-e_.gain.value);e_.gain.setValueAtTime(e,ZT.currentTime),e_.gain.value===o_||requestAnimationFrame(c_)};const h_=(e="mp3",t=".")=>{const n=[];for(let r=0;r<jT.length;++r){const s=jT[r];"A"===s&&n.push("A0".concat(t).concat(e));for(let r=1;r<8;++r)n.push("".concat(s).concat(r).concat(t).concat(e));"C"===s&&n.push("C8".concat(t).concat(e))}return n},p_=h_("",""),d_={};p_.forEach(e=>{d_[e]=e});const f_=(e="alto_sax-mp3",t="./FluidR3_GM")=>{const n="".concat(t,"/").concat(e);return h_().map(e=>async function(e){const t=await fetch(e),n=await t.arrayBuffer();return await ZT.decodeAudioData(n)}("".concat(n,"/").concat(e)))},m_=window.AudioContext||window.webkitAudioContext;let g_=new Worker("data:application/javascript,!function()%7Bvar%20e%3D!1%2Ct%3D-1%2Cn%3D-1%2Ca%3D0%2Cs%3D0%2Ci%3D!1%2Cr%3Dfunction()%7Breturn.001*(performance.now()-t)%7D%2Co%3Dfunction()%7Bi%3Fi%3D!1%3A(performance.now()%3E%3Dn%26%26(n%2B%3Da%2Cs%2B%2B%2CpostMessage(%7Bevent%3A%22tick%22%2Ctime%3Ar()%2Cintervals%3As%7D))%2CrequestAnimationFrame(o))%7D%2Cc%3Dfunction()%7Bvar%20i%3Darguments.length%3E0%26%26void%200!%3D%3Darguments%5B0%5D%3Farguments%5B0%5D%3A250%3Ba%3Di%2Cn%3Dt%2Bi%2Ce%7C%7C(t%3Dperformance.now()%2Ce%3D!0%2CpostMessage(%7Bevent%3A%22starting%22%2Ctime%3A0%2Cintervals%3As%7D))%2Co()%2CpostMessage(%7Bevent%3A%22tick%22%2Ctime%3Ar()%2Cintervals%3As%7D)%7D%3Bself.onmessage%3Dfunction(t)%7Bvar%20n%3Dt.data%3Bswitch(n.command)%7Bcase%22start%22%3Ac(n.interval)%3Bbreak%3Bcase%22stop%22%3Ai%3D!0%2Ce%3D!1%2CpostMessage(%7Bevent%3A%22stopping%22%2Ctime%3Ar()%2Cintervals%3As%7D)%3Bbreak%3Bcase%22update%22%3Ac(n.interval)%7D%7D%7D()%3B%0A%2F%2F%23%20sourceMappingURL%3Ddata%3Aapplication%2Fjson%3Bcharset%3Dutf-8%3Bbase64%2CeyJtYXBwaW5ncyI6IllBQUEsSUFTSUEsR0FBWSxFQUNaQyxHQUFhLEVBRWJDLEdBQWdCLEVBQ2hCQyxFQUFNLEVBQ05DLEVBQVksRUFDWkMsR0FBTyxFQUVMQyxFQUFVLFdBQUEsTUFBd0MsTUFBakNDLFlBQVlDLE1BQVFQLElBT3JDUSxFQUFPLFdBRUxKLEVBRUFBLEdBQU8sR0FJR0UsWUFBWUMsT0FHUE4sSUFHZkEsR0FBZ0JDLEVBRWhCQyxJQUVBTSxZQUFZLENBQUVDLE1BbkNILE9BbUNxQkMsS0FBS04sSUFBV0YsVUFBQUEsS0FHcERTLHNCQUFzQkosS0FHcEJLLEVBQVEsV0FBZ0IsSUFBZkMsRUFBZUMsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLEdBQUFBLFVBQUEsR0FBTixJQUVwQmIsRUFBTVksRUFHTmIsRUFBZUQsRUFBWWMsRUFFdEJmLElBRUFDLEVBQVlNLFlBQVlDLE1BQ3pCUixHQUFZLEVBQ1pVLFlBQVksQ0FBQ0MsTUF0REUsV0FzRG9CQyxLQUFLLEVBQUdSLFVBQUFBLEtBSS9DSyxJQUdBQyxZQUFZLENBQUNDLE1BM0RFLE9BMkRnQkMsS0FBS04sSUFBV0YsVUFBQUEsS0FTbkRlLEtBQUtDLFVBQVksU0FBQUMsR0FFYixJQUFNQyxFQUFPRCxFQUFFQyxLQUVmLE9BQVFBLEVBQUtDLFNBRVQsSUFqRlUsUUFrRk5ULEVBQU1RLEVBQUtQLFVBQ1gsTUFFSixJQXBGVSxPQXFFZFYsR0FBTyxFQUNQTCxHQUFZLEVBQ1pVLFlBQVksQ0FBRUMsTUFsRUssV0FrRWlCQyxLQUFLTixJQUFXRixVQUFBQSxJQWU1QyxNQUVKLElBdkZZLFNBd0ZSVSxFQUFNUSxFQUFLUCIsInNvdXJjZXMiOlsiLi9zb3VyY2UvdGltaW5nLnJlcXVlc3RmcmFtZS53b3JrZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ01EX1NUQVJUID0gXCJzdGFydFwiXG5jb25zdCBDTURfU1RPUCAgPSBcInN0b3BcIlxuY29uc3QgQ01EX1VQREFURSAgPSBcInVwZGF0ZVwiXG5cbmNvbnN0IEVWRU5UX1JFQURZID0gXCJyZWFkeVwiXG5jb25zdCBFVkVOVF9TVEFSVElORyA9IFwic3RhcnRpbmdcIlxuY29uc3QgRVZFTlRfU1RPUFBJTkcgPSBcInN0b3BwaW5nXCJcbmNvbnN0IEVWRU5UX1RJQ0sgPSBcInRpY2tcIlxuXG5sZXQgaXNSdW5uaW5nID0gZmFsc2VcbmxldCBzdGFydFRpbWUgPSAtMVxubGV0IGN1cnJlbnRUaW1lID0gLTFcbmxldCBuZXh0SW50ZXJ2YWwgPSAtMVxubGV0IGdhcCA9IDBcbmxldCBpbnRlcnZhbHMgPSAwXG5sZXQgZXhpdCA9IGZhbHNlXG5cbmNvbnN0IGVsYXBzZWQgPSAoKSA9PiAocGVyZm9ybWFuY2Uubm93KCkgLSBzdGFydFRpbWUpICogMC4wMDFcblxuY29uc3QgcmVzZXQgPSAoKSA9PntcbiAgICBpbnRlcnZhbHMgPSAwXG4gICAgc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KClcbn1cblxuY29uc3QgbG9vcCA9ICgpID0%2BIHtcblxuICAgIGlmIChleGl0KVxuICAgIHtcbiAgICAgICAgZXhpdCA9IGZhbHNlXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGN1cnJlbnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KClcbiAgXG4gICAgLy8gaWYgdGhlIGN1cnJlbnRUaW1lIGlzIGVxdWFsIG9yIGdyZWF0ZXIgdG8gb3VyIHJvbGxpbmcgdGltZSArIGludGVydmFsXG4gICAgaWYgKGN1cnJlbnRUaW1lID49IG5leHRJbnRlcnZhbClcbiAgICB7XG4gICAgICAgIC8vIGl0IGhhcyBoYXBwZW5lZCEgc28gcmUtYWRqdXN0IHRoZSBuZXh0IGludGVydmFsXG4gICAgICAgIG5leHRJbnRlcnZhbCArPSBnYXBcbiAgICAgICAgLy8gdXBkYXRlIG91ciBjb3VudGVyXG4gICAgICAgIGludGVydmFscysrXG4gICAgICAgIC8vIGNhbGxiYWNrXG4gICAgICAgIHBvc3RNZXNzYWdlKHsgZXZlbnQ6RVZFTlRfVElDSywgdGltZTplbGFwc2VkKCksIGludGVydmFscyB9KVxuICAgIH1cblxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShsb29wKVxufVxuXG5jb25zdCBzdGFydCA9IChpbnRlcnZhbD0yNTApPT57XG5cbiAgICBnYXAgPSBpbnRlcnZhbFxuICAgXG4gICAgLy8gd29yayBvdXQgdGhlIG5leHQgc3RlcCBmcm9tIHRoaXMgc3RlcC4uLlxuICAgIG5leHRJbnRlcnZhbCA9IHN0YXJ0VGltZSArIGludGVydmFsXG5cbiAgICBpZiAoIWlzUnVubmluZylcbiAgICB7ICAgXG4gICAgICAgICBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKVxuICAgICAgICBpc1J1bm5pbmcgPSB0cnVlXG4gICAgICAgIHBvc3RNZXNzYWdlKHtldmVudDpFVkVOVF9TVEFSVElORywgdGltZTowLCBpbnRlcnZhbHN9KVxuICAgIH1cbiAgIFxuICAgIC8vIExvb3BcbiAgICBsb29wKClcblxuICAgIC8vIElOSVRJQUwgdGlja1xuICAgIHBvc3RNZXNzYWdlKHtldmVudDpFVkVOVF9USUNLLCB0aW1lOmVsYXBzZWQoKSwgaW50ZXJ2YWxzfSlcbn1cblxuY29uc3Qgc3RvcCA9ICgpID0%2BIHtcbiAgICBleGl0ID0gdHJ1ZVxuICAgIGlzUnVubmluZyA9IGZhbHNlXG4gICAgcG9zdE1lc3NhZ2UoeyBldmVudDpFVkVOVF9TVE9QUElORywgdGltZTplbGFwc2VkKCksIGludGVydmFscyB9KVxufVxuXG5zZWxmLm9ubWVzc2FnZSA9IGUgPT4ge1xuXG4gICAgY29uc3QgZGF0YSA9IGUuZGF0YVxuXG4gICAgc3dpdGNoIChkYXRhLmNvbW1hbmQpXG4gICAge1xuICAgICAgICBjYXNlIENNRF9TVEFSVDpcbiAgICAgICAgICAgIHN0YXJ0KGRhdGEuaW50ZXJ2YWwpXG4gICAgICAgICAgICBicmVha1xuXG4gICAgICAgIGNhc2UgQ01EX1NUT1A6XG4gICAgICAgICAgICBzdG9wKClcbiAgICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgY2FzZSBDTURfVVBEQVRFOlxuICAgICAgICAgICAgc3RhcnQoZGF0YS5pbnRlcnZhbClcbiAgICAgICAgICAgIGJyZWFrXG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImlzUnVubmluZyIsInN0YXJ0VGltZSIsIm5leHRJbnRlcnZhbCIsImdhcCIsImludGVydmFscyIsImV4aXQiLCJlbGFwc2VkIiwicGVyZm9ybWFuY2UiLCJub3ciLCJsb29wIiwicG9zdE1lc3NhZ2UiLCJldmVudCIsInRpbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzdGFydCIsImludGVydmFsIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwic2VsZiIsIm9ubWVzc2FnZSIsImUiLCJkYXRhIiwiY29tbWFuZCJdLCJ2ZXJzaW9uIjozLCJmaWxlIjoidGltaW5nLnJlcXVlc3RmcmFtZS53b3JrZXIuSEFTSF9SRUZfNmEwYjFlZmNlOGQyNGIyZjdjNGZlYTkxMjc0M2U5NGYuanMubWFwIn0%3D%0A"),y_=-1,b_=1,x_=null,v_=!1,w_=0,k_=0;const I_=()=>x_.currentTime,N_=e=>{b_=e,g_.postMessage({command:"update",interval:b_,time:I_()})};var S_={},C_={};C_.VERSION="0.8.0";const E_=()=>document.fullscreenEnabled||document.mozFullScreenEnabled||document.documentElement.webkitRequestFullScreen,T_=()=>document.fullscreenElement?(document.exitFullscreen&&document.exitFullscreen(),!1):(E_()&&document.documentElement.requestFullscreen(),!0),__=e=>{if("string"==typeof e){const t=e.toLowerCase();return"true"===t||"1"===t||"false"!==t&&"0"!==t&&e}return Array.isArray(e)?e.toString():data},A_=()=>{new URLSearchParams(window.location.search).duet=!0},R_=()=>{new URLSearchParams(window.location.search).duet=!1},$_="hsl(22, 28%, 87%)",F_="hsl(30, 6%, 14%)",D_="hsl(27, 30%, 45%)",M_="hsl(23, 22%, 30%)",O_="hsl(196, 18%, 33%)",L_="hsl(28, 69%, 38%)",B_={dots:"red",mouth:"rgba(255,0,0,0.5)",mouthClosed:"rgba(255,0,0,0.2)",lipsUpperInner:"pink",lipsLowerInner:"pink",midwayBetweenEyes:"blue",leftEyeLower0:"red",rightEyeLower0:"red",leftEyeIris:"yellow",rightEyeIris:"yellow"},P_=document.querySelector("progress");let z_,V_,W_,U_,G_,H_;S_.progressBar=P_,S_.buttonQuantise=W_,S_.buttonMIDI=U_,S_.buttonVideo=G_,S_.controls=H_;const j_=(e,n=700,r=0,s=!1)=>{let a=null,i=-1,o=-1,u=null;const l=t(t=>{e.innerHTML=t},n);return e?(t,c=n)=>{s&&(t=t.split(/!|\./i).join("<br>")),u=t,""!==e.innerHTML&&a==t||(clearTimeout(o),a=t,0===c?(clearTimeout(i),e.innerHTML=t):i=l(t),r>0&&(o=(t=>{o=setTimeout(()=>{e.innerHTML=""},r*t)})(t.length)))}:null};S_.bindTextElement=j_;const q_=j_(document.getElementById("feedback"),20);S_.setFeedback=q_;const K_=j_(document.getElementById("toast"),20,900,!0);S_.setToast=K_;S_.setControls=e=>{document.getElementById("person-a-controls").appendChild(e)};const X_=(e,t)=>{const n=document.getElementById("camera").querySelector("select"),r=e.map((e,t)=>'<option value="'.concat(e.deviceId,'">').concat(e.label,"</option>"));n.innerHTML='<optgroup label="Detected Cameras">'.concat(r.join(""),"</optgroup>"),n.addEventListener("change",r=>{const s=n.options.selectedIndex;t(e[s])})};S_.setupCameraForm=X_;const Z_=e=>{const t=UT.map((e,t)=>'<label for="'.concat(e,'">').concat(HT[t],'<input id="').concat(e,'" name="instrument-selector" type="radio" value="').concat(e,'"></input></label>'));return"".concat(t.join(""))};S_.setupInstrumentForm=Z_;const Y_=e=>{let t=!1;return U_.addEventListener("mousedown",async n=>(n.preventDefault(),e&&e(),t=!0,!1),{once:!0}),{setText:e=>U_.innerHTML=test}};S_.setupMIDIButton=Y_;const Q_=e=>e.addEventListener("mouseover",e=>{const t=e.target.getAttribute("aria-label")||e.target.innerHTML;K_(t),console.log("event",e.target.innerHTML)});S_.addTooltip=Q_;const J_=(e,t)=>{const n=document.getElementById(e);return n.addEventListener("click",e=>{t&&t({element:n})}),n};S_.setButton=J_;const eA=(e,t,n)=>{const r=J_(e,()=>{n=!n,"LABEL"===r.parentNode.nodeName&&r.parentNode.classList.toggle("checked",n),console.log(e,r,r.parentNode.nodeName),t(n)});return n&&(r.setAttribute("checked",n),r.parentNode.classList.toggle("checked",n)),r};S_.setToggle=eA;const tA=()=>{};S_.showReloadButton=tA;const nA=e=>{const t=document.querySelector("main"),n=document.querySelector("h1"),r=document.getElementById("button-solo"),s=document.getElementById("button-duet");if(H_=document.getElementById("controls"),S_.controls=H_,z_=document.getElementById("button-instrument"),G_=document.getElementById("button-video"),S_.buttonVideo=G_,V_=document.getElementById("button-record"),U_=document.getElementById("button-midi"),S_.buttonMIDI=U_,W_=document.getElementById("button-quantise"),S_.buttonQuantise=W_,E_()){const t=eA("button-fullscreen",n=>{e.fullscreen=T_(),t.classList.toggle("fs",e.fullscreen),console.log("fullscreen",e.fullscreen)},!1)}else document.getElementById("button-fullscreen").classList.toggle("hide",!0);e.duet?(n.innerHTML+=" duet",s.classList.toggle("hide",!0),r.classList.toggle("hide",!1),t.classList.add("duet"),s.addEventListener("click",e=>R_,!1)):(r.classList.toggle("hide",!0),s.classList.toggle("hide",!1),t.classList.add("solo"),r.addEventListener("click",e=>A_,!1));H_.querySelectorAll("button, label").forEach(e=>Q_(e)),H_.addEventListener("submit",e=>{e.preventDefault()},!0)};S_.setupInterface=nA;const rA=(e,t=5)=>{const n=[];for(let r=0;r<t;++r){const t=e();n.push(t)}let r=0;return(...e)=>{r=r+1<t?r+1:0;(0,n[r])(...e)}},sA=()=>{const e=ZT.createOscillator(),t=ZT.createOscillator(),n=ZT.createGain(),r=ZT.createGain();e.type="triangle",t.type="sine";return e.connect(n),t.connect(r),n.connect(l_()),r.connect(l_()),(s=1,a=.05,i=.01,o=.5)=>{const u=ZT.currentTime;n.gain.cancelScheduledValues(u),r.gain.cancelScheduledValues(u),e.frequency.cancelScheduledValues(u),t.frequency.cancelScheduledValues(u),n.gain.setValueAtTime(1,u),n.gain.exponentialRampToValueAtTime(1e-7,u+a),r.gain.setValueAtTime(1,ZT.currentTime),r.gain.exponentialRampToValueAtTime(1e-7,u+a),e.frequency.setValueAtTime(120,ZT.currentTime),e.frequency.exponentialRampToValueAtTime(i,u+a),t.frequency.setValueAtTime(50,ZT.currentTime),t.frequency.exponentialRampToValueAtTime(i,u+a);try{e.start(u),t.start(u)}catch(e){}}},aA=()=>{const e=ZT.createOscillator(),t=ZT.createGain(),n=ZT.createGain(),r=ZT.createBufferSource(),s=ZT.createBuffer(1,4096,ZT.sampleRate),a=ZT.createBiquadFilter();a.type="highpass",e.type="triangle",e.frequency.value=100;const i=s.getChannelData(0);for(var o=0;o<4096;o++)i[o]=Math.random();r.buffer=s,r.loop=!0,e.connect(t),t.connect(l_()),r.connect(a),a.connect(n),n.connect(l_());return(s=1,i=.2)=>{const o=ZT.currentTime;n.gain.cancelScheduledValues(o),n.gain.setValueAtTime(1,o),n.gain.exponentialRampToValueAtTime(1e-7,o+i),t.gain.cancelScheduledValues(o),t.gain.setValueAtTime(1e-7,o),t.gain.exponentialRampToValueAtTime(1e-7,o+i/2),a.frequency.cancelScheduledValues(o),a.frequency.setValueAtTime(100,o),a.frequency.linearRampToValueAtTime(1e3,o+i);try{e.start(o),r.start(o)}catch(e){}}},iA=()=>{const e=ZT.createGain(),t=ZT.createBiquadFilter();t.type="bandpass",t.frequency.value=1e4;const n=ZT.createBiquadFilter();n.type="highpass",n.frequency.value=7e3;const r=[2,3,4.16,5.43,6.79,8.21].map(e=>{const n=ZT.createOscillator();return n.type="square",n.frequency.value=40*e,n.connect(t),n});t.connect(n),n.connect(e),e.connect(l_());return(t=1,n=.05)=>{const s=ZT.currentTime;e.gain.cancelScheduledValues(s),r.forEach(e=>e.frequency.cancelScheduledValues(s)),e.gain.setValueAtTime(1,s),e.gain.exponentialRampToValueAtTime(1e-7,s+n);try{r.forEach(e=>e.start(s))}catch(e){}}},oA=()=>{const e=((e=2)=>rA(sA,e))(),t=((e=3)=>rA(iA,e))();return{kick:e,snare:((e=3)=>rA(aA,e))(),hat:t,cowbell:(()=>{const e=ZT.createGain(),t=ZT.createBiquadFilter();t.type="bandpass",t.frequency.value=2640,t.Q.value=3.5;const n=[587,845].map(e=>{const n=ZT.createOscillator();return n.type="triangle",n.frequency.value=1*e,n.connect(t),n});t.connect(e),e.connect(l_());return(t=1,r=.05)=>{const s=ZT.currentTime;e.gain.cancelScheduledValues(s),n.forEach(e=>e.frequency.cancelScheduledValues(s)),e.gain.setValueAtTime(1,s),e.gain.exponentialRampToValueAtTime(1e-7,s+r);try{n.forEach(e=>e.start(s))}catch(e){}}})(),clack:(()=>{const e=ZT.createGain(),t=ZT.createBiquadFilter();t.type="bandpass",t.frequency.value=2640,t.Q.value=3.5;const n=ZT.createBiquadFilter();n.type="highpass",n.frequency.value=7e3;const r=[587,845],s=r.map(e=>{const n=ZT.createOscillator();return n.type="triangle",n.frequency.value=1*e,n.connect(t),n});t.connect(n),n.connect(e),e.connect(l_());return(t=1,n=.05,a=1)=>{const i=ZT.currentTime;e.gain.cancelScheduledValues(i),s.forEach((e,t)=>{e.frequency.cancelScheduledValues(i),e.frequency.value=a*r[t]}),e.gain.setValueAtTime(1,i),e.gain.exponentialRampToValueAtTime(1e-7,i+n);try{s.forEach(e=>e.start(i))}catch(e){}}})()}};var uA,lA,cA,hA,pA,dA=!1;function fA(){return dA||(dA=!0,uA={},lA=ie(),"S:\\Synch\\Work\\Code\\musicalface\\MusicalFace\\node_modules\\jazz-midi",cA="./bin/",(hA=lA.versions.node.split("."))[0]<=10?cA+="10_15/":hA[0]<=11&&(cA+="11_15/"),"win32"==lA.platform&&"ia32"==lA.arch?cA+="win32/jazz":"win32"==lA.platform&&"x64"==lA.arch?cA+="win64/jazz":"darwin"==lA.platform&&"x64"==lA.arch?cA+="macos64/jazz":"linux"==lA.platform&&"x64"==lA.arch?cA+="linux64/jazz":"linux"==lA.platform&&"arm"==lA.arch&&(cA+="linuxa7/jazz"),uA=require(cA),pA=require("S:\\Synch\\Work\\Code\\musicalface\\MusicalFace\\node_modules\\jazz-midi/package.json"),uA.package=pA),uA}var mA,gA=!1;function yA(){!function(e,t){if("object"==typeof mA)mA=t();else{if(e||(e=window),e.JZZ&&e.JZZ.MIDI)return;e.JZZ=t()}}(mA={},(function(){var t,n,r,s,a,i="undefined"==typeof window?e:window,o=Date.now||function(){return(new Date).getTime()},u=o(),l="undefined"!=typeof performance&&performance.now?function(){return performance.now()}:function(){return o()-u},c=function(e){setTimeout(e,0)};function h(){this._orig=this,this._ready=!1,this._queue=[],this._log=[]}function p(e,t){this._bad?t instanceof Function&&t.apply(this,[new Error(this._err())]):e instanceof Function&&e.apply(this,[this])}function d(e,t){this._bad?e._crash(this._err()):setTimeout((function(){e._resume()}),t)}function f(e){this._bad&&e._break(this._err()),e._resume()}function m(e,t,n){e[n]=function(){var e=arguments,r=t._image();return this._push(f,[r]),r[n].apply(r,e)}}function g(e){this._bad||(e instanceof Function?e.apply(this):console.log(e))}function y(e){this._bad&&(e instanceof Function?e.apply(this):console.log(e))}function b(e){this._bad?e._crash(this._err()):(this._break("Closed"),e._resume())}function x(e){if(e.length){var t=e.shift();if(e.length){var n=this;this._slip(y,[function(){x.apply(n,[e])}])}try{this._repair(),t.apply(this)}catch(e){this._break(e.toString())}}else this._break()}function v(e,t){for(var n=0;n<e.length;n++)if(e[n]===t)return;e.push(t)}function w(e,t){for(var n=0;n<e.length;n++)if(e[n]===t)return void e.splice(n,1)}function k(){h.apply(this)}function I(e,t,n){if(void 0===t)return I(e,[],[]);if(e instanceof Object){for(var r=0;r<t.length;r++)if(t[r]===e)return n[r];var s;for(var a in s=e instanceof Array?[]:{},t.push(e),n.push(s),e)e.hasOwnProperty(a)&&(s[a]=I(e[a],t,n));return s}return e}h.prototype._exec=function(){for(;this._ready&&this._queue.length;){var e=this._queue.shift();e[0].apply(this,e[1])}},h.prototype._push=function(e,t){this._queue.push([e,t]),h.prototype._exec.apply(this)},h.prototype._slip=function(e,t){this._queue.unshift([e,t])},h.prototype._pause=function(){this._ready=!1},h.prototype._resume=function(){this._ready=!0,h.prototype._exec.apply(this)},h.prototype._break=function(e){this._orig._bad=!0,this._orig._log.push(e||"Unknown JZZ error")},h.prototype._repair=function(){this._orig._bad=!1},h.prototype._crash=function(e){this._break(e),this._resume()},h.prototype._err=function(){return this._log[this._log.length-1]},h.prototype.log=function(){return I(this._log)},h.prototype._image=function(){var e=function(){};e.prototype=this._orig;var t=new e;return t._ready=!1,t._queue=[],t},h.prototype._thenable=function(){var e=this,t=function(){};t.prototype=e;var n=new t;return n.then=function(t,n){return e._push(p,[t,n]),this},n},h.prototype.wait=function(e){if(!e)return this;var t=this._image();return this._push(d,[t,e]),t._thenable()},h.prototype.and=function(e){return this._push(g,[e]),this._thenable()},h.prototype.or=function(e){return this._push(y,[e]),this._thenable()},h.prototype._info={},h.prototype.info=function(){var e=I(this._orig._info);return void 0===e.engine&&(e.engine="none"),void 0===e.sysex&&(e.sysex=!0),e},h.prototype.name=function(){return this.info().name},h.prototype.close=function(){var e=new h;return this._close&&this._push(this._close,[]),this._push(b,[e]),e._thenable()},k.prototype=new h,k.prototype._info={name:"JZZ.js",ver:"1.1.7",version:"1.1.7",inputs:[],outputs:[]};var N,S=[],C=[],E=[],T=[];function _(){var e,t;for(N._info.engine=Y._type,N._info.version=Y._version,N._info.sysex=Y._sysex,N._info.inputs=[],N._info.outputs=[],S=[],C=[],Y._allOuts={},Y._allIns={},e=0;e<Y._outs.length;e++)(t=Y._outs[e]).engine=Y,Y._allOuts[t.name]=t,N._info.outputs.push({id:t.name,name:t.name,manufacturer:t.manufacturer,version:t.version,engine:Y._type}),S.push(t);for(e=0;e<Q._outs.length;e++)t=Q._outs[e],N._info.outputs.push({id:t.name,name:t.name,manufacturer:t.manufacturer,version:t.version,engine:t.type}),S.push(t);for(e=0;e<Y._ins.length;e++)(t=Y._ins[e]).engine=Y,Y._allIns[t.name]=t,N._info.inputs.push({id:t.name,name:t.name,manufacturer:t.manufacturer,version:t.version,engine:Y._type}),C.push(t);for(e=0;e<Q._ins.length;e++)t=Q._ins[e],N._info.inputs.push({id:t.name,name:t.name,manufacturer:t.manufacturer,version:t.version,engine:t.type}),C.push(t);if(N._watcher&&N._watcher._handles.length){var r=function(e,t,n,r){if(!function(e,t,n,r){var s;if(e.length!=n.length||t.length!=r.length)return!0;for(s=0;s<e.length;s++)if(e[s].name!=n[s].name)return!0;for(s=0;s<t.length;s++)if(t[s].name!=r[s].name)return!0;return!1}(e,t,n,r))return;var s,a=[],i=[],o=[],u=[],l={};for(s=0;s<e.length;s++)l[e[s].name]=!0;for(s=0;s<n.length;s++)l[n[s].name]||a.push(n[s]);for(l={},s=0;s<n.length;s++)l[n[s].name]=!0;for(s=0;s<e.length;s++)l[e[s].name]||o.push(e[s]);for(l={},s=0;s<t.length;s++)l[t[s].name]=!0;for(s=0;s<r.length;s++)l[r[s].name]||i.push(r[s]);for(l={},s=0;s<r.length;s++)l[r[s].name]=!0;for(s=0;s<t.length;s++)l[t[s].name]||u.push(t[s]);return{inputs:{added:a,removed:o},outputs:{added:i,removed:u}}}(T,E,N._info.inputs,N._info.outputs);if(r){for(n=0;n<r.inputs.removed.length;n++)(t=Y._inMap[r.inputs.removed[n].name])&&t._closeAll();for(n=0;n<r.outputs.removed.length;n++)(t=Y._outMap[r.outputs.removed[n].name])&&t._closeAll();K(r)}}T=N._info.inputs,E=N._info.outputs}function A(){this._bad||Y._refresh(this)}function R(e,t){var n,r;e instanceof Function&&(e=e(t)),e instanceof Array||(e=[e]);var s=[],a=[],i=t.slice(),o=s;for(n=0;n<e.length;n++)if(void 0===e[n])o=a;else if(e[n]instanceof RegExp)for(r=0;r<i.length;r++)e[n].test(i[r].name)&&(o.push(i[r]),i.splice(r,1),r--);else for(r=0;r<i.length;r++)(e[n]+""==r+""||e[n]===i[r].name||e[n]instanceof Object&&e[n].name===i[r].name)&&(o.push(i[r]),i.splice(r,1),r--);return o==s?s:s.concat(i).concat(a)}function $(e,t){var n;n=t instanceof RegExp?"Port matching "+t+" not found":t instanceof Object||void 0===t?"Port not found":'Port "'+t+'" not found',e._crash(n)}function F(e,t){if(this._bad)e._crash(this._err());else{var n=R(t,S);if(!n.length)return void $(e,t);for(var r=function(e){return function(){e.engine._openOut(this,e.name)}},s=0;s<n.length;s++)n[s]=r(n[s]);e._slip(x,[n]),e._resume()}}function D(e,t){if(this._bad)e._crash(this._err());else{var n=R(t,C);if(!n.length)return void $(e,t);for(var r=function(e){return function(){e.engine._openIn(this,e.name)}},s=0;s<n.length;s++)n[s]=r(n[s]);e._slip(x,[n]),e._resume()}}function M(e,t){this._bad?e._crash():(e._slip(j,[t]),e._resume())}function O(){h.apply(this),this._handles=[],this._outs=[]}function L(e){this._bad||this._receive(e)}function B(e){this._emit(e)}function P(e){v(e instanceof Function?this._orig._handles:this._orig._outs,e)}function z(e){void 0===e?(this._orig._handles=[],this._orig._outs=[]):w(e instanceof Function?this._orig._handles:this._orig._outs,e)}function V(e,t){this._orig._mpe||(this._orig._mpe=new Xe),this._orig._mpe.setup(e,t)}function W(e){if(e!=parseInt(e)||e<0||e>15)throw RangeError("Bad channel value (must not be less than 0 or more than 15): "+e)}function U(e,t){O.apply(this),this._port=e._orig,this._chan=t,m(this,this._port,"ch"),m(this,this._port,"mpe"),m(this,this._port,"connect"),m(this,this._port,"disconnect"),m(this,this._port,"close")}function G(e,t,n){O.apply(this),this._port=e._orig,this._master=t,this._band=n,m(this,this._port,"ch"),m(this,this._port,"mpe"),m(this,this._port,"connect"),m(this,this._port,"disconnect"),m(this,this._port,"close")}function H(){h.apply(this),this._handles=[],m(this,N,"refresh"),m(this,N,"openMidiOut"),m(this,N,"openMidiIn"),m(this,N,"onChange"),m(this,N,"close")}function j(e){e instanceof Function&&(this._orig._handles.length||Y._watch(),v(this._orig._handles,e))}function q(e){void 0===e?this._orig._handles=[]:w(this._orig._handles,e),this._orig._handles.length||Y._unwatch()}function K(e){for(t=0;t<N._watcher._handles.length;t++)N._watcher._handles[t].apply(N,[e])}k.prototype.refresh=function(){return this._push(A,[]),this._thenable()},k.prototype.openMidiOut=function(e){var t=new O;return this._push(A,[]),this._push(F,[t,e]),t._thenable()},k.prototype._openMidiOutNR=function(e){var t=new O;return this._push(F,[t,e]),t._thenable()},k.prototype.openMidiIn=function(e){var t=new O;return this._push(A,[]),this._push(D,[t,e]),t._thenable()},k.prototype._openMidiInNR=function(e){var t=new O;return this._push(D,[t,e]),t._thenable()},k.prototype.onChange=function(e){this._orig._watcher||(this._orig._watcher=new H);var t=this._orig._watcher._image();return this._push(M,[t,e]),t._thenable()},k.prototype._close=function(){Y._close()},O.prototype=new h,O.prototype._filter=function(e){if(this._orig._mpe){var t,n=0;this._handles&&this._handles.length&&(n=this._handles.length,t=this._handles[0]),this._outs&&this._outs.length&&(n=this._outs.length,t=this._outs[0]),1!=n||t._mpe||(e=this._orig._mpe.filter(e))}return e},O.prototype._receive=function(e){this._emit(this._filter(e))},O.prototype.send=function(){return this._push(L,[ye.apply(null,arguments)]),this._thenable()},O.prototype.note=function(e,t,n,r){return this.noteOn(e,t,n),r>0&&this.wait(r).noteOff(e,t),this._thenable()},O.prototype._emit=function(e){var t;for(t=0;t<this._handles.length;t++)this._handles[t].apply(this,[ye(e)._stamp(this)]);for(t=0;t<this._outs.length;t++){var n=ye(e);n._stamped(this._outs[t])||this._outs[t].send(n._stamp(this))}},O.prototype.emit=function(e){return this._push(B,[e]),this._thenable()},O.prototype.connect=function(e){return this._push(P,[e]),this._thenable()},O.prototype.disconnect=function(e){return this._push(z,[e]),this._thenable()},O.prototype.connected=function(){return this._orig._handles.length+this._orig._outs.length},O.prototype.ch=function(e){if(void 0===e)return this;W(e);var t=new U(this,e);return this._push(f,[t]),t._thenable()},O.prototype.mpe=function(e,t){if(void 0===e&&void 0===t)return this;Xe.validate(e,t);var n=t?new G(this,e,t):new U(this,e);return this._push(V,[e,t]),this._push(f,[n]),n._thenable()},U.prototype=new O,U.prototype.channel=function(){return this._chan},U.prototype._receive=function(e){this._port._receive(e)},U.prototype.note=function(e,t,n){return this.noteOn(e,t),n&&this.wait(n).noteOff(e),this._thenable()},G.prototype=new O,G.prototype.channel=function(){return this._master},G.prototype._receive=function(e){this._port._receive(e)},G.prototype.note=function(e,t,n){return this.noteOn(e,t),n&&this.wait(n).noteOff(e),this._thenable()},H.prototype=new h,H.prototype.connect=function(e){return this._push(j,[e]),this._thenable()},H.prototype.disconnect=function(e){return this._push(q,[e]),this._thenable()};var X,Z,Y={_outs:[],_ins:[]},Q={_outs:[],_ins:[]};function J(){if(mA)return e=fA(),Y._type="node",Y._main=e,Y._pool=[],Y._newPlugin=function(){return new e.MIDI},void oe();var e;this._break()}function ee(){var e=document.createElement("div");e.style.visibility="hidden",document.body.appendChild(e);var t=document.createElement("object");t.style.visibility="hidden",t.style.width="0px",t.style.height="0px",t.classid="CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90",t.type="audio/x-jazz",document.body.appendChild(t),t.isJazz?function(e){Y._type="plugin",Y._main=e,Y._pool=[e],Y._newPlugin=function(){var t=document.createElement("object");return t.style.visibility="hidden",t.style.width="0px",e.style.height="0px",t.classid="CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90",t.type="audio/x-jazz",document.body.appendChild(t),t.isJazz?t:void 0},oe()}(t):this._break()}if("undefined"!=typeof navigator&&navigator.requestMIDIAccess){X=navigator,Z=navigator.requestMIDIAccess;try{-1!=Z.toString().indexOf("JZZ(")&&(Z=void 0)}catch(e){}}function te(){if(Z){var e=this;return Z.call(X,{}).then((function(t){ue(t),e._resume()}),(function(t){e._crash(t)})),void this._pause()}this._break()}function ne(){if(Z){var e=this;return Z.call(X,{sysex:!0}).then((function(t){ue(t,!0),e._resume()}),(function(t){e._crash(t)})),void this._pause()}this._break()}function re(){var e,t,n=this;this._pause(),document.addEventListener("jazz-midi-msg",(function r(){if(e=!0,t||(t=document.getElementById("jazz-midi-msg")),t){var s=[];try{s=JSON.parse(t.innerText)}catch(e){}t.innerText="",document.removeEventListener("jazz-midi-msg",r),"version"===s[0]?(!function(e,t){function n(){for(var e=0;e<this.clients.length;e++)this._close(this.clients[e])}var r;Y._type="extension",Y._version=t,Y._sysex=!0,Y._pool=[],Y._outs=[],Y._ins=[],Y._inArr=[],Y._outArr=[],Y._inMap={},Y._outMap={},Y._outsW=[],Y._insW=[],Y.refreshClients=[],Y._msg=e,Y._newPlugin=function(){var e={id:Y._pool.length};Y._pool.push(e),e.id?document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["new"]})):e.ready=!0},Y._newPlugin(),Y._refresh=function(e){Y.refreshClients.push(e),e._pause(),c((function(){document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["refresh"]}))}))},Y._openOut=function(e,t){var r=Y._outMap[t];if(!r){Y._pool.length<=Y._outArr.length&&Y._newPlugin();var s=Y._pool[Y._outArr.length];(r={name:t,clients:[],info:{name:t,manufacturer:Y._allOuts[t].manufacturer,version:Y._allOuts[t].version,type:"MIDI-out",sysex:Y._sysex,engine:Y._type},_start:function(){document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["openout",s.id,t]}))},_close:function(e){Y._closeOut(e)},_closeAll:n,_receive:function(e){if(e.length){var t=e.slice();t.splice(0,0,"play",s.id),document.dispatchEvent(new CustomEvent("jazz-midi",{detail:t}))}}}).plugin=s,s.output=r,Y._outArr.push(r),Y._outMap[t]=r}e._orig._impl=r,v(r.clients,e._orig),e._info=r.info,e._receive=function(e){r._receive(e)},e._close=function(){r._close(this)},r.open||(e._pause(),r.plugin.ready&&r._start())},Y._openIn=function(e,t){var r=Y._inMap[t];if(!r){Y._pool.length<=Y._inArr.length&&Y._newPlugin();var s=Y._pool[Y._inArr.length];(r={name:t,clients:[],info:{name:t,manufacturer:Y._allIns[t].manufacturer,version:Y._allIns[t].version,type:"MIDI-in",sysex:Y._sysex,engine:Y._type},_start:function(){document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["openin",s.id,t]}))},_close:function(e){Y._closeIn(e)},_closeAll:n}).plugin=s,s.input=r,Y._inArr.push(r),Y._inMap[t]=r}e._orig._impl=r,v(r.clients,e._orig),e._info=r.info,e._close=function(){r._close(this)},r.open||(e._pause(),r.plugin.ready&&r._start())},Y._closeOut=function(e){var t=e._impl;w(t.clients,e._orig),!t.clients.length&&t.open&&(t.open=!1,document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["closeout",t.plugin.id]})))},Y._closeIn=function(e){var t=e._impl;w(t.clients,e._orig),!t.clients.length&&t.open&&(t.open=!1,document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["closein",t.plugin.id]})))},Y._close=function(){Y._unwatch()},Y._watch=function(){Y._insW=Y._ins,Y._outsW=Y._outs,r=setInterval((function(){document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["refresh"]}))}),250)},Y._unwatch=function(){clearInterval(r),r=void 0},document.addEventListener("jazz-midi-msg",(function(){var e,t,n,r=Y._msg.innerText.split("\n");for(Y._msg.innerText="",t=0;t<r.length;t++){var s=[];try{s=JSON.parse(r[t])}catch(e){}if(s.length)if("refresh"===s[0]){if(s[1].ins){for(n=0;n<s[1].ins.length;n++)s[1].ins[n].type=Y._type;Y._ins=s[1].ins}if(s[1].outs){for(n=0;n<s[1].outs.length;n++)s[1].outs[n].type=Y._type;Y._outs=s[1].outs}for(_(),n=0;n<Y.refreshClients.length;n++)Y.refreshClients[n]._resume();Y.refreshClients=[]}else if("version"===s[0]){var a=Y._pool[s[1]];a&&(a.ready=!0,a.input&&a.input._start(),a.output&&a.output._start())}else if("openout"===s[0]){if(e=Y._pool[s[1]].output)if(s[2]==e.name){if(e.open=!0,e.clients)for(n=0;n<e.clients.length;n++)e.clients[n]._resume()}else if(e.clients)for(n=0;n<e.clients.length;n++)e.clients[n]._crash()}else if("openin"===s[0]){if(e=Y._pool[s[1]].input)if(s[2]==e.name){if(e.open=!0,e.clients)for(n=0;n<e.clients.length;n++)e.clients[n]._resume()}else if(e.clients)for(n=0;n<e.clients.length;n++)e.clients[n]._crash()}else if("midi"===s[0]&&(e=Y._pool[s[1]].input)&&e.clients)for(n=0;n<e.clients.length;n++){var i=ye(s.slice(3));e.clients[n]._emit(i)}}}))}(t,s[2]),n._resume()):n._crash()}}));try{document.dispatchEvent(new Event("jazz-midi"))}catch(e){}c((function(){e||n._crash()}))}function se(){this._pause();var e=this;c((function(){e._crash()}))}function ae(e){for(var t=[],n=function(e){var t=["node","extension","plugin","webmidi"];if(!e||!e.engine)return t;var n,r,s,a=e.engine instanceof Array?e.engine:[e.engine],i={},o=[],u=[];for(s=0;s<a.length;s++){var l=a[s].toString().toLowerCase();i[l]||(i[l]=!0,"none"===l&&(n=!0),"etc"!==l&&void 0!==l||(r=!0),r?u.push(l):o.push(l),w(t,l))}(r||o.length||u.length)&&(n=!1);return n?[]:o.concat(r?t:u)}(e),r=0;r<n.length;r++)"webmidi"==n[r]?(e&&!0===e.sysex&&t.push(ne),e&&!0===e.sysex&&!0!==e.degrade||t.push(te)):"node"==n[r]?(t.push(J),t.push(se)):"extension"==n[r]?t.push(re):"plugin"==n[r]&&t.push(ee);return t.push(ie),t}function ie(){Y._type="none",Y._version="1.1.7",Y._sysex=!0,Y._outs=[],Y._ins=[],Y._refresh=function(){_()},Y._watch=function(){},Y._unwatch=function(){},Y._close=function(){}}function oe(){var e;function t(){for(var e=0;e<this.clients.length;e++)this._close(this.clients[e])}Y._inArr=[],Y._outArr=[],Y._inMap={},Y._outMap={},Y._outsW=[],Y._insW=[],Y._version=Y._main.version,Y._sysex=!0,Y._refresh=function(){var e,t;for(Y._outs=[],Y._ins=[],e=0;(t=Y._main.MidiOutInfo(e)).length;e++)Y._outs.push({type:Y._type,name:t[0],manufacturer:t[1],version:t[2]});for(e=0;(t=Y._main.MidiInInfo(e)).length;e++)Y._ins.push({type:Y._type,name:t[0],manufacturer:t[1],version:t[2]});_()},Y._openOut=function(e,n){var r=Y._outMap[n];if(!r){Y._pool.length<=Y._outArr.length&&Y._pool.push(Y._newPlugin()),r={name:n,clients:[],info:{name:n,manufacturer:Y._allOuts[n].manufacturer,version:Y._allOuts[n].version,type:"MIDI-out",sysex:Y._sysex,engine:Y._type},_close:function(e){Y._closeOut(e)},_closeAll:t,_receive:function(e){e.length&&this.plugin.MidiOutRaw(e.slice())}};var s=Y._pool[Y._outArr.length];r.plugin=s,Y._outArr.push(r),Y._outMap[n]=r}if(!r.open){var a=r.plugin.MidiOutOpen(n);if(a!==n)return a&&r.plugin.MidiOutClose(),void e._break();r.open=!0}e._orig._impl=r,v(r.clients,e._orig),e._info=r.info,e._receive=function(e){r._receive(e)},e._close=function(){r._close(this)}},Y._openIn=function(e,n){var r,s=Y._inMap[n];if(!s){Y._pool.length<=Y._inArr.length&&Y._pool.push(Y._newPlugin());(s={name:n,clients:[],info:{name:n,manufacturer:Y._allIns[n].manufacturer,version:Y._allIns[n].version,type:"MIDI-in",sysex:Y._sysex,engine:Y._type},_close:function(e){Y._closeIn(e)},_closeAll:t,handle:function(e,t){for(var n=0;n<this.clients.length;n++){var r=ye(t);this.clients[n]._emit(r)}}}).onmidi=(r=s,function(e,t){r.handle(e,t)});var a=Y._pool[Y._inArr.length];s.plugin=a,Y._inArr.push(s),Y._inMap[n]=s}if(!s.open){var i=s.plugin.MidiInOpen(n,s.onmidi);if(i!==n)return i&&s.plugin.MidiInClose(),void e._break();s.open=!0}e._orig._impl=s,v(s.clients,e._orig),e._info=s.info,e._close=function(){s._close(this)}},Y._closeOut=function(e){var t=e._impl;w(t.clients,e._orig),!t.clients.length&&t.open&&(t.open=!1,t.plugin.MidiOutClose())},Y._closeIn=function(e){var t=e._impl;w(t.clients,e._orig),!t.clients.length&&t.open&&(t.open=!1,t.plugin.MidiInClose())},Y._close=function(){for(var e=0;e<Y._inArr.length;e++)Y._inArr[e].open&&Y._inArr[e].plugin.MidiInClose();Y._unwatch()},Y._watch=function(){e||(e=setInterval((function(){Y._refresh()}),250))},Y._unwatch=function(){e&&clearInterval(e),e=void 0}}function ue(e,t){var n;function r(){for(var e=0;e<this.clients.length;e++)this._close(this.clients[e])}Y._type="webmidi",Y._version=43,Y._sysex=!!t,Y._access=e,Y._inMap={},Y._outMap={},Y._outsW=[],Y._insW=[],Y._refresh=function(){Y._outs=[],Y._ins=[],Y._access.outputs.forEach((function(e){Y._outs.push({type:Y._type,name:e.name,manufacturer:e.manufacturer,version:e.version})})),Y._access.inputs.forEach((function(e){Y._ins.push({type:Y._type,name:e.name,manufacturer:e.manufacturer,version:e.version})})),_()},Y._openOut=function(e,t){var n,s=Y._outMap[t];s||(s={name:t,clients:[],info:{name:t,manufacturer:Y._allOuts[t].manufacturer,version:Y._allOuts[t].version,type:"MIDI-out",sysex:Y._sysex,engine:Y._type},_close:function(e){Y._closeOut(e)},_closeAll:r,_receive:function(e){s.dev&&e.length&&this.dev.send(e.slice())}}),Y._access.outputs.forEach((function(e){e.name===t&&(n=e)})),n?(s.dev=n,Y._outMap[t]=s,e._orig._impl=s,v(s.clients,e._orig),e._info=s.info,e._receive=function(e){s._receive(e)},e._close=function(){s._close(this)},s.dev.open&&(e._pause(),s.dev.open().then((function(){e._resume()}),(function(){e._crash()})))):e._break()},Y._openIn=function(e,t){var n,s,a=Y._inMap[t];if(a||(a={name:t,clients:[],info:{name:t,manufacturer:Y._allIns[t].manufacturer,version:Y._allIns[t].version,type:"MIDI-in",sysex:Y._sysex,engine:Y._type},_close:function(e){Y._closeIn(e)},_closeAll:r,handle:function(e){for(var t=0;t<this.clients.length;t++){var n=ye([].slice.call(e.data));this.clients[t]._emit(n)}}}),Y._access.inputs.forEach((function(e){e.name===t&&(n=e)})),n){a.dev=n;a.dev.onmidimessage=(s=a,function(e){s.handle(e)}),Y._inMap[t]=a,e._orig._impl=a,v(a.clients,e._orig),e._info=a.info,e._close=function(){a._close(this)},a.dev.open&&(e._pause(),a.dev.open().then((function(){e._resume()}),(function(){e._crash()})))}else e._break()},Y._closeOut=function(e){var t=e._impl;w(t.clients,e._orig),t.clients.length||(t.dev&&t.dev.close&&t.dev.close(),t.dev=void 0)},Y._closeIn=function(e){var t=e._impl;w(t.clients,e._orig),t.clients.length||(t.dev&&(t.dev.onmidimessage=null,t.dev.close&&t.dev.close()),t.dev=void 0)},Y._close=function(){Y._unwatch()},Y._watch=function(){Y._access.onstatechange=function(){n=!0,c((function(){n&&(Y._refresh(),n=!1)}))}},Y._unwatch=function(){Y._access.onstatechange=void 0}}var le=function(e){return N||function(e){Ze(),(N=new k)._options=e,N._push(x,[ae(e)]),N.refresh(),N._resume()}(e),N._thenable()};function ce(){var e=this instanceof ce?this:e=new ce;return ce.prototype.reset.apply(e,arguments),e}function he(){29.97==this.type&&!this.second&&this.frame<2&&this.minute%10&&(this.frame=2)}function pe(e){return[[24,25,29.97,30][e[7]>>1&3],(1&e[7])<<4|e[6],e[5]<<4|e[4],e[3]<<4|e[2],e[1]<<4|e[0]]}function de(e){var t;switch(!e.backwards&&e.quarter>=4?e.decrFrame():e.backwards&&e.quarter<4&&e.incrFrame(),e.quarter>>1){case 0:t=e.frame;break;case 1:t=e.second;break;case 2:t=e.minute;break;default:t=e.hour}return 1&e.quarter?t>>=4:t&=15,7==e.quarter&&(25==e.type?t|=2:29.97==e.type?t|=4:30==e.type&&(t|=6)),!e.backwards&&e.quarter>=4?e.incrFrame():e.backwards&&e.quarter<4&&e.decrFrame(),t|e.quarter<<4}function fe(e){return 25==e.type?32|e.hour:29.97==e.type?64|e.hour:30==e.type?96|e.hour:e.hour}function me(e){return e<10?"0"+e:e}function ge(e){for(var t=[],n=0;n<e.length;n++)t[n]=me(e[n]);return t.join(":")}function ye(e){var t,n=this instanceof ye?this:n=new ye;if(e instanceof ye){for(t in n._from=e._from.slice(),e)e.hasOwnProperty(t)&&"_from"!=t&&(n[t]=e[t]);return n}if(n._from=[],void 0===e)return n;var r=e instanceof Array?e:arguments;for(t=0;t<r.length;t++)a=r[t],1==t&&(n[0]>=128&&n[0]<=175&&(a=ye.noteValue(a)),n[0]>=192&&n[0]<=207&&(a=ye.programValue(a))),(a!=parseInt(a)||a<0||a>255)&&ve(r[t]),n.push(a);return n}le.JZZ=le,le.version="1.1.7",le.info=function(){return k.prototype.info()},le.Widget=function(e){var t=new O;if(e instanceof Object)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t._resume(),t},k.prototype.Widget=le.Widget,le.addMidiIn=function(e,t){var n=I(t._info||{});n.name=e,n.type=n.type||"javascript",n.manufacturer=n.manufacturer||"virtual",n.version=n.version||"0.0";var r={_info:function(){return n},_openIn:function(e){e._pause(),e._info=I(n),e._close=function(){t.disconnect(e)},t.connect(e),e._resume()}};return le.lib.registerMidiIn(e,r)},le.addMidiOut=function(e,t){var n=I(t._info||{});n.name=e,n.type=n.type||"javascript",n.manufacturer=n.manufacturer||"virtual",n.version=n.version||"0.0";var r={_info:function(){return n},_openOut:function(e){e._pause(),e._info=I(n),e._close=function(){e.disconnect()},P.apply(e,[t]),e._resume()}};return le.lib.registerMidiOut(e,r)},ce.prototype.reset=function(e){if(e instanceof ce)return this.setType(e.getType()),this.setHour(e.getHour()),this.setMinute(e.getMinute()),this.setSecond(e.getSecond()),this.setFrame(e.getFrame()),this.setQuarter(e.getQuarter()),this;var t=e instanceof Array?e:arguments;return this.setType(t[0]),this.setHour(t[1]),this.setMinute(t[2]),this.setSecond(t[3]),this.setFrame(t[4]),this.setQuarter(t[5]),this},ce.prototype.isFullFrame=function(){return 0==this.quarter||4==this.quarter},ce.prototype.getType=function(){return this.type},ce.prototype.getHour=function(){return this.hour},ce.prototype.getMinute=function(){return this.minute},ce.prototype.getSecond=function(){return this.second},ce.prototype.getFrame=function(){return this.frame},ce.prototype.getQuarter=function(){return this.quarter},ce.prototype.setType=function(e){if(void 0===e||24==e)this.type=24;else if(25==e)this.type=25;else if(29.97==e)this.type=29.97,he.apply(this);else{if(30!=e)throw RangeError("Bad SMPTE frame rate: "+e);this.type=30}return this.frame>=this.type&&(this.frame=this.type-1),this},ce.prototype.setHour=function(e){if(void 0===e&&(e=0),e!=parseInt(e)||e<0||e>=24)throw RangeError("Bad SMPTE hours value: "+e);return this.hour=e,this},ce.prototype.setMinute=function(e){if(void 0===e&&(e=0),e!=parseInt(e)||e<0||e>=60)throw RangeError("Bad SMPTE minutes value: "+e);return this.minute=e,he.apply(this),this},ce.prototype.setSecond=function(e){if(void 0===e&&(e=0),e!=parseInt(e)||e<0||e>=60)throw RangeError("Bad SMPTE seconds value: "+e);return this.second=e,he.apply(this),this},ce.prototype.setFrame=function(e){if(void 0===e&&(e=0),e!=parseInt(e)||e<0||e>=this.type)throw RangeError("Bad SMPTE frame number: "+e);return this.frame=e,he.apply(this),this},ce.prototype.setQuarter=function(e){if(void 0===e&&(e=0),e!=parseInt(e)||e<0||e>=8)throw RangeError("Bad SMPTE quarter frame: "+e);return this.quarter=e,this},ce.prototype.incrFrame=function(){return this.frame++,this.frame>=this.type&&(this.frame=0,this.second++,this.second>=60&&(this.second=0,this.minute++,this.minute>=60&&(this.minute=0,this.hour=this.hour>=23?0:this.hour+1))),he.apply(this),this},ce.prototype.decrFrame=function(){return!this.second&&2==this.frame&&29.97==this.type&&this.minute%10&&(this.frame=0),this.frame--,this.frame<0&&(this.frame=29.97==this.type?29:this.type-1,this.second--,this.second<0&&(this.second=59,this.minute--,this.minute<0&&(this.minute=59,this.hour=this.hour?this.hour-1:23))),this},ce.prototype.incrQF=function(){return this.backwards=!1,this.quarter=this.quarter+1&7,0!=this.quarter&&4!=this.quarter||this.incrFrame(),this},ce.prototype.decrQF=function(){return this.backwards=!0,this.quarter=this.quarter+7&7,3!=this.quarter&&7!=this.quarter||this.decrFrame(),this},ce.prototype.read=function(e){if(e instanceof ye||(e=ye.apply(null,arguments)),240==e[0]&&127==e[1]&&1==e[3]&&1==e[4]&&247==e[9])return this.type=[24,25,29.97,30][e[5]>>5&3],this.hour=31&e[5],this.minute=e[6],this.second=e[7],this.frame=e[8],this.quarter=0,this._=void 0,this._b=void 0,this._f=void 0,!0;if(241==e[0]&&void 0!==e[1]){var t=e[1]>>4,n=15&e[1];return 0==t?7==this._&&(7==this._f&&(this.reset(pe(this._a)),this.incrFrame()),this.incrFrame()):3==t?4==this._&&this.decrFrame():4==t?3==this._&&this.incrFrame():7==t&&0===this._&&(0===this._b&&(this.reset(pe(this._a)),this.decrFrame()),this.decrFrame()),this._a||(this._a=[]),this._a[t]=n,this._f=this._f===t-1||0==t?t:void 0,this._b=this._b===t+1||7==t?t:void 0,this._=t,this.quarter=t,!0}return!1},ce.prototype.toString=function(){return ge([this.hour,this.minute,this.second,this.frame])},le.SMPTE=ce,ye.prototype=[],ye.prototype.constructor=ye;var be={};ye.noteValue=function(e){return void 0===e?void 0:be[e.toString().toLowerCase()]},ye.programValue=function(e){return e},ye.freq=function(e,t){return void 0===t&&(t=440),t*Math.pow(2,(ke(ye.noteValue(e),e)-69)/12)},ye.shift=function(e,t){return void 0===t&&(t=440),12*Math.log2(e/t)},ye.to14b=function(e){return e<=0?0:e>=1?16383:Math.floor(16384*e)};var xe={c:0,d:2,e:4,f:5,g:7,a:9,b:11,h:11};for(r in xe)if(xe.hasOwnProperty(r))for(a=0;a<12&&!((s=xe[r]+12*a)>127);a++)be[r+a]=s,s>0&&(be[r+"b"+a]=s-1,be[r+"bb"+a]=s-2),s<127&&(be[r+"#"+a]=s+1,be[r+"##"+a]=s+2);for(a=0;a<128;a++)be[a]=a;function ve(e){throw RangeError("Bad MIDI value: "+e)}function we(e){return W(e),parseInt(e)}function ke(e,t){return(e!=parseInt(e)||e<0||e>127)&&ve(void 0===t?e:t),parseInt(e)}function Ie(e,t){return(e!=parseInt(e)||e<0||e>255)&&ve(void 0===t?e:t),parseInt(e)}function Ne(e){return(e!=parseInt(e)||e<0||e>16383)&&ve(e),127&parseInt(e)}function Se(e){return(e!=parseInt(e)||e<0||e>16383)&&ve(e),parseInt(e)>>7}var Ce={noteOff:function(e,t,n){return void 0===n&&(n=64),[128+we(e),ke(ye.noteValue(t),t),ke(n)]},noteOn:function(e,t,n){return void 0===n&&(n=127),[144+we(e),ke(ye.noteValue(t),t),ke(n)]},aftertouch:function(e,t,n){return[160+we(e),ke(ye.noteValue(t),t),ke(n)]},control:function(e,t,n){return[176+we(e),ke(t),ke(n)]},program:function(e,t){return[192+we(e),ke(ye.programValue(t),t)]},pressure:function(e,t){return[208+we(e),ke(t)]},pitchBend:function(e,t,n){return void 0===n?[224+we(e),Ne(t),Se(t)]:[224+we(e),ke(n),ke(t)]},pitchBendF:function(e,t){return Ce.pitchBend(e,ye.to14b((t+1)/2))},bankMSB:function(e,t){return[176+we(e),0,ke(t)]},bankLSB:function(e,t){return[176+we(e),32,ke(t)]},modMSB:function(e,t){return[176+we(e),1,ke(t)]},modLSB:function(e,t){return[176+we(e),33,ke(t)]},breathMSB:function(e,t){return[176+we(e),2,ke(t)]},breathLSB:function(e,t){return[176+we(e),34,ke(t)]},footMSB:function(e,t){return[176+we(e),4,ke(t)]},footLSB:function(e,t){return[176+we(e),36,ke(t)]},portamentoMSB:function(e,t){return[176+we(e),5,ke(t)]},portamentoLSB:function(e,t){return[176+we(e),37,ke(t)]},dataMSB:function(e,t){return[176+we(e),6,ke(t)]},dataLSB:function(e,t){return[176+we(e),38,ke(t)]},volumeMSB:function(e,t){return[176+we(e),7,ke(t)]},volumeLSB:function(e,t){return[176+we(e),39,ke(t)]},balanceMSB:function(e,t){return[176+we(e),8,ke(t)]},balanceLSB:function(e,t){return[176+we(e),40,ke(t)]},panMSB:function(e,t){return[176+we(e),10,ke(t)]},panLSB:function(e,t){return[176+we(e),42,ke(t)]},expressionMSB:function(e,t){return[176+we(e),11,ke(t)]},expressionLSB:function(e,t){return[176+we(e),43,ke(t)]},damper:function(e,t){return[176+we(e),64,t?127:0]},portamento:function(e,t){return[176+we(e),65,t?127:0]},sostenuto:function(e,t){return[176+we(e),66,t?127:0]},soft:function(e,t){return[176+we(e),67,t?127:0]},dataIncr:function(e){return[176+we(e),96,0]},dataDecr:function(e){return[176+we(e),97,0]},nrpnLSB:function(e,t){return[176+we(e),98,ke(t)]},nrpnMSB:function(e,t){return[176+we(e),99,ke(t)]},rpnLSB:function(e,t){return[176+we(e),100,ke(t)]},rpnMSB:function(e,t){return[176+we(e),101,ke(t)]},allSoundOff:function(e){return[176+we(e),120,0]},allNotesOff:function(e){return[176+we(e),123,0]}},Ee={mtc:function(e){return[241,de(e)]},songPosition:function(e,t){return void 0===t?[242,Ne(e),Se(e)]:[242,ke(t),ke(e)]},songSelect:function(e){return[243,ke(e)]},tune:function(){return[246]},clock:function(){return[248]},start:function(){return[250]},continue:function(){return[251]},stop:function(){return[252]},active:function(){return[254]},sxIdRequest:function(){return[240,126,127,6,1,247]},sxFullFrame:function(e){return[240,127,127,1,1,fe(e),e.getMinute(),e.getSecond(),e.getFrame(),247]},sxMasterVolume:function(e){return[240,127,127,4,1,Ne(e=ye.to14b(e)),Se(e),247]},sxMasterFineTuning:function(e){return[240,127,127,4,3,Ne(e=ye.to14b((e%1+1)/2)),Se(e),247]},sxMasterCoarseTuning:function(e){return[240,127,127,4,4,0,64+e-e%1,247]},reset:function(){return[255]}},Te={bank:function(e,t,n){return void 0===n?[Ce.bankMSB(e,Se(t)),Ce.bankLSB(e,Ne(t))]:[Ce.bankMSB(e,t),Ce.bankLSB(e,n)]},modF:function(e,t){return Te.mod(e,ye.to14b(t))},mod:function(e,t,n){return void 0===n?[Ce.modMSB(e,Se(t)),Ce.modLSB(e,Ne(t))]:[Ce.modMSB(e,t),Ce.modLSB(e,n)]},breathF:function(e,t){return Te.breath(e,ye.to14b(t))},breath:function(e,t,n){return void 0===n?[Ce.breathMSB(e,Se(t)),Ce.breathLSB(e,Ne(t))]:[Ce.breathMSB(e,t),Ce.breathLSB(e,n)]},footF:function(e,t){return Te.foot(e,ye.to14b(t))},foot:function(e,t,n){return void 0===n?[Ce.footMSB(e,Se(t)),Ce.footLSB(e,Ne(t))]:[Ce.footMSB(e,t),Ce.footLSB(e,n)]},portamentoTimeF:function(e,t){return Te.portamentoTime(e,ye.to14b(t))},portamentoTime:function(e,t,n){return void 0===n?[Ce.portamentoMSB(e,Se(t)),Ce.portamentoLSB(e,Ne(t))]:[Ce.portamentoMSB(e,t),Ce.portamentoLSB(e,n)]},dataF:function(e,t){return Te.data(e,ye.to14b(t))},data:function(e,t,n){return void 0===n?[Ce.dataMSB(e,Se(t)),Ce.dataLSB(e,Ne(t))]:[Ce.dataMSB(e,t),Ce.dataLSB(e,n)]},volumeF:function(e,t){return Te.volume(e,ye.to14b(t))},volume:function(e,t,n){return void 0===n?[Ce.volumeMSB(e,Se(t)),Ce.volumeLSB(e,Ne(t))]:[Ce.volumeMSB(e,t),Ce.volumeLSB(e,n)]},balanceF:function(e,t){return Te.balance(e,ye.to14b((t+1)/2))},balance:function(e,t,n){return void 0===n?[Ce.balanceMSB(e,Se(t)),Ce.balanceLSB(e,Ne(t))]:[Ce.balanceMSB(e,t),Ce.balanceLSB(e,n)]},panF:function(e,t){return Te.pan(e,ye.to14b((t+1)/2))},pan:function(e,t,n){return void 0===n?[Ce.panMSB(e,Se(t)),Ce.panLSB(e,Ne(t))]:[Ce.panMSB(e,t),Ce.panLSB(e,n)]},expressionF:function(e,t){return Te.expression(e,ye.to14b(t))},expression:function(e,t,n){return void 0===n?[Ce.expressionMSB(e,Se(t)),Ce.expressionLSB(e,Ne(t))]:[Ce.expressionMSB(e,t),Ce.expressionLSB(e,n)]},nrpn:function(e,t,n){return void 0===n?[Ce.nrpnMSB(e,Se(t)),Ce.nrpnLSB(e,Ne(t))]:[Ce.nrpnMSB(e,t),Ce.nrpnLSB(e,n)]},rpn:function(e,t,n){return void 0===n?[Ce.rpnMSB(e,Se(t)),Ce.rpnLSB(e,Ne(t))]:[Ce.rpnMSB(e,t),Ce.rpnLSB(e,n)]},rpnPitchBendRange:function(e,t){return Te.rpn(e,0,0).concat(Te.data(e,ke(t-t%1),Math.floor(t%1*128)))},rpnFineTuning:function(e,t){return Te.rpn(e,0,1).concat(Te.dataF(e,(t%1+1)/2))},rpnCoarseTuning:function(e,t){return Te.rpn(e,0,2).concat([Ce.dataMSB(e,64+t-t%1)])},rpnTuning:function(e,t){return Te.rpnCoarseTuning(e,t).concat(Te.rpnFineTuning(e,t))},rpnTuningA:function(e,t){return Te.rpnTuning(e,ye.shift(t))}},_e={sxMasterTuning:function(e){return[Ee.sxMasterCoarseTuning(e),Ee.sxMasterFineTuning(e)]},sxMasterTuningA:function(e){return _e.sxMasterTuning(ye.shift(e))}};function Ae(e,t){var n=new ye;return n.ff=Ie(e),n.dd=void 0===t?"":function(e){e=""+e;for(var t=0;t<e.length;t++)e.charCodeAt(t)>255&&ve(e[t]);return e}(t),n}var Re={smf:function(e){if(e instanceof ye)return new ye(e);var t=e instanceof Array?e:arguments,n=Ie(t[0]),r="";return 2==t.length?r=Ge(t[1]):t.length>2&&(r=Ge(Array.prototype.slice.call(t,1))),Ae(n,r)},smfSeqNumber:function(e){if(e==parseInt(e)){if(e<0||e>65535)throw RangeError("Sequence number out of range: "+e);e=String.fromCharCode(e>>8)+String.fromCharCode(255&e)}else if(0==(e=""+e).length)e="\0\0";else if(1==e.length)e="\0"+e;else if(e.length>2)throw RangeError("Sequence number out of range: "+Ke(e));return Ae(0,e)},smfText:function(e){return Ae(1,le.lib.toUTF8(e))},smfCopyright:function(e){return Ae(2,le.lib.toUTF8(e))},smfSeqName:function(e){return Ae(3,le.lib.toUTF8(e))},smfInstrName:function(e){return Ae(4,le.lib.toUTF8(e))},smfLyric:function(e){return Ae(5,le.lib.toUTF8(e))},smfMarker:function(e){return Ae(6,le.lib.toUTF8(e))},smfCuePoint:function(e){return Ae(7,le.lib.toUTF8(e))},smfProgName:function(e){return Ae(8,le.lib.toUTF8(e))},smfDevName:function(e){return Ae(9,le.lib.toUTF8(e))},smfChannelPrefix:function(e){if(e==parseInt(e))W(e),e=String.fromCharCode(e);else if(0==(e=""+e).length)e="\0";else if(e.length>1||e.charCodeAt(0)>15)throw RangeError("Channel number out of range: "+Ke(e));return Ae(32,e)},smfMidiPort:function(e){if(e==parseInt(e)){if(e<0||e>127)throw RangeError("Port number out of range: "+e);e=String.fromCharCode(e)}else if(0==(e=""+e).length)e="\0";else if(e.length>1||e.charCodeAt(0)>127)throw RangeError("Port number out of range: "+Ke(e));return Ae(33,e)},smfEndOfTrack:function(e){if(""!=Ge(e))throw RangeError("Unexpected data: "+Ke(Ge(e)));return Ae(47)},smfTempo:function(e){if(3==(""+e).length)return Ae(81,e);if(e==parseInt(e)&&e>0&&e<=16777215)return Ae(81,String.fromCharCode(e>>16)+String.fromCharCode(e>>8&255)+String.fromCharCode(255&e));throw RangeError("Out of range: "+Ke(Ge(e)))},smfBPM:function(e){return Re.smfTempo(Math.round(6e7/e))},smfSMPTE:function(e){if(e instanceof ce)return Ae(84,String.fromCharCode(e.hour)+String.fromCharCode(e.minute)+String.fromCharCode(e.second)+String.fromCharCode(e.frame)+String.fromCharCode(e.quarter%4*25));var t=""+e;if(5==t.length)return Ae(84,e);var n=e instanceof Array?e:Array.prototype.slice.call(arguments);return n.splice(0,0,30),Re.smfSMPTE(new ce(n))},smfTimeSignature:function(e,t,n,r){var s,a,i,o,u=(""+e).match(/^\s*(\d+)\s*\/\s*(\d+)\s*$/);if(u){if(s=parseInt(u[1]),a=parseInt(u[2]),s>0&&s<=255&&a&&!(a&a-1)){for(i=a,a=0,i>>=1;i;i>>=1)a++;return i=t==parseInt(t)?t:24,o=n==parseInt(n)?n:8,Ae(88,String.fromCharCode(s)+String.fromCharCode(a)+String.fromCharCode(i)+String.fromCharCode(o))}if(4==(""+e).length)return Ae(88,e)}else{if(e==parseInt(e)&&t==parseInt(t)&&t&&!(t&t-1)){for(s=e,a=0,i=t,i>>=1;i;i>>=1)a++;return i=n==parseInt(n)?n:24,o=r==parseInt(r)?r:8,Ae(88,String.fromCharCode(s)+String.fromCharCode(a)+String.fromCharCode(i)+String.fromCharCode(o))}if(4==(""+e).length)return Ae(88,e)}throw RangeError("Wrong time signature: "+Ke(Ge(e)))},smfKeySignature:function(e){var t=(e=""+e).match(/^\s*([A-H][b#]?)\s*(|maj|major|dur|m|min|minor|moll)\s*$/i);if(t){var n={CB:0,GB:1,DB:2,AB:3,EB:4,BB:5,F:6,C:7,G:8,D:9,A:10,E:11,B:12,H:12,"F#":13,"C#":14,"G#":15,"D#":16,"A#":17}[t[1].toUpperCase()],r={"":0,MAJ:0,MAJOR:0,DUR:0,M:1,MIN:1,MINOR:1,MOLL:1}[t[2].toUpperCase()];void 0!==n&&void 0!==r&&(r&&(n-=3),(n-=7)>=-7&&n<0?e=String.fromCharCode(256+n)+String.fromCharCode(r):n>=0&&n<=7&&(e=String.fromCharCode(n)+String.fromCharCode(r)))}if(2==e.length&&e.charCodeAt(1)<=1&&(e.charCodeAt(0)<=7||e.charCodeAt(0)<=255&&e.charCodeAt(0)>=249))return Ae(89,e);throw RangeError("Incorrect key signature: "+Ke(e))},smfSequencer:function(e){return Ae(127,Ge(e))}};function $e(e,t,n){e.prototype[t]=function(){return this.send(n.apply(0,arguments))}}function Fe(e,t,n){e.prototype[t]=function(){for(var e=n.apply(0,arguments),t=this,r=0;r<e.length;r++)t=t.send(e[r]);return t}}function De(e,t,n){e.prototype[t]=function(){return this.send(n.apply(0,[this._chan].concat(Array.prototype.slice.call(arguments))))}}function Me(e,t,n){e.prototype[t]=function(){for(var e=n.apply(0,[this._chan].concat(Array.prototype.slice.call(arguments))),t=this,r=0;r<e.length;r++)t=t.send(e[r]);return t}}function Oe(e,t){ye[e]=function(){return new ye(t.apply(0,arguments))}}function Le(e,t){ye[e]=function(){return t.apply(0,arguments)}}function Be(e,t){ye[e]=function(){var e,n=[],r=t.apply(0,arguments);for(e=0;e<r.length;e++)n.push(new ye(r[e]));return n}}function Pe(e,t){Oe(e,t),G.prototype[e]=function(){var e,n=Array.prototype.slice.call(arguments);n.length<t.length?n=[this._master].concat(n):(e=ke(ye.noteValue(n[0],n[0])),n[0]=this._master);var r=t.apply(0,n);return r.mpe=e,this.send(r),this}}for(r in Ee)Ee.hasOwnProperty(r)&&Oe(r,Ee[r]);for(r in Re)Re.hasOwnProperty(r)&&Le(r,Re[r]);for(r in Ce)Ce.hasOwnProperty(r)&&Pe(r,Ce[r]);for(r in Te)Te.hasOwnProperty(r)&&Be(r,Te[r]);for(r in _e)_e.hasOwnProperty(r)&&Be(r,_e[r]);function ze(e,t){for(r in Ee)Ee.hasOwnProperty(r)&&$e(e,r,Ee[r]);for(r in Re)Re.hasOwnProperty(r)&&$e(e,r,Re[r]);for(r in Ce)Ce.hasOwnProperty(r)&&$e(e,r,Ce[r]);for(r in Te)Te.hasOwnProperty(r)&&Fe(e,r,Te[r]);for(r in _e)_e.hasOwnProperty(r)&&Fe(e,r,_e[r]);if(t){for(r in Ce)Ce.hasOwnProperty(r)&&De(t,r,Ce[r]);for(r in Te)Te.hasOwnProperty(r)&&Me(t,r,Te[r])}}ze(O,U),G.prototype.noteOn=function(e,t){var n=ye.noteOn(this._master,e,t);return n._mpe=n[1],this.send(n),this},G.prototype.noteOff=function(e,t){var n=ye.noteOff(this._master,e,t);return n._mpe=n[1],this.send(n),this},G.prototype.aftertouch=function(e,t){var n=ye.aftertouch(this._master,e,t);return n._mpe=n[1],this.send(n),this};var Ve,We={a:10,b:11,c:12,d:13,e:14,f:15,A:10,B:11,C:12,D:13,E:14,F:15};for(r=0;r<16;r++)We[r]=r;function Ue(e){for(var t=[],n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function Ge(e){return e instanceof Array?function(e){for(var t="",n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t}(e):void 0===e?"":""+e}function He(e){return(e<16?"0":"")+e.toString(16)}function je(e){for(var t=[],n=0;n<e.length;n++)t[n]=He(e[n]);return t.join(" ")}function qe(e){return e.length?": "+je(Ue(e)):""}function Ke(e){return e.length?": "+function(e){for(var t="",n=0;n<e.length;n++)"\n"==e[n]?t+="\\n":"\r"==e[n]?t+="\\r":"\t"==e[n]?t+="\\t":e.charCodeAt(n)<32?t+="\\x"+He(e.charCodeAt(n)):t+=e[n];return t}(le.lib.fromUTF8(e)):""}function Xe(){var e=this instanceof Xe?this:e=new Xe;return e.reset(),arguments.length&&Xe.prototype.setup.apply(e,arguments),e}function Ze(){if(!Ve&&"undefined"!=typeof window){var e=window.AudioContext||window.webkitAudioContext;if(e){(Ve=new e)&&!Ve.createGain&&(Ve.createGain=Ve.createGainNode);var t=function(){if("running"!=Ve.state){Ve.resume();var e=Ve.createOscillator(),n=Ve.createGain();try{n.gain.value=0}catch(e){}n.gain.setTargetAtTime(0,Ve.currentTime,.01),e.connect(n),n.connect(Ve.destination),e.start||(e.start=e.noteOn),e.stop||(e.stop=e.noteOff),e.start(.1),e.stop(.11)}else document.removeEventListener("touchstart",t),document.removeEventListener("touchend",t),document.removeEventListener("mousedown",t),document.removeEventListener("keydown",t)};document.addEventListener("touchstart",t),document.addEventListener("touchend",t),document.addEventListener("mousedown",t),document.addEventListener("keydown",t),t()}}}ye.prototype.getChannel=function(){if(32==this.ff&&1==this.dd.length&&this.dd.charCodeAt(0)<16)return this.dd.charCodeAt(0);var e=this[0];return void 0===e||e<128||e>239?void 0:15&e},ye.prototype.setChannel=function(e){if(void 0===(e=We[e]))return this;if(32==this.ff)this.dd=String.fromCharCode(e);else{var t=this[0];void 0!==t&&t>=128&&t<=239&&(this[0]=240&t|e)}return this},ye.prototype.getNote=function(){var e=this[0];if(!(void 0===e||e<128||e>175))return this[1]},ye.prototype.setNote=function(e){var t=this[0];return void 0===t||t<128||t>175||void 0!==(e=ye.noteValue(e))&&(this[1]=e),this},ye.prototype.getVelocity=function(){var e=this[0];if(!(void 0===e||e<128||e>159))return this[2]},ye.prototype.setVelocity=function(e){var t=this[0];return void 0===t||t<128||t>159||(e=parseInt(e))>=0&&e<128&&(this[2]=e),this},ye.prototype.getSysExChannel=function(){if(240==this[0])return this[2]},ye.prototype.setSysExChannel=function(e){return 240==this[0]&&this.length>2&&(e=parseInt(e))>=0&&e<128&&(this[2]=e),this},ye.prototype.getData=function(){if(void 0!==this.dd)return this.dd.toString()},ye.prototype.setData=function(e){return this.dd=Ge(e),this},ye.prototype.getText=function(){if(void 0!==this.dd)return le.lib.fromUTF8(this.dd)},ye.prototype.setText=function(e){return this.dd=le.lib.toUTF8(e),this},ye.prototype.getTempo=function(){if(81==this.ff&&void 0!==this.dd)return 65536*this.dd.charCodeAt(0)+256*this.dd.charCodeAt(1)+this.dd.charCodeAt(2)},ye.prototype.getBPM=function(){var e=this.getTempo();if(e)return 6e7/e},ye.prototype.getTimeSignature=function(){if(88==this.ff&&void 0!==this.dd)return[this.dd.charCodeAt(0),1<<this.dd.charCodeAt(1)]},ye.prototype.getKeySignature=function(){if(89==this.ff&&void 0!==this.dd){var e=this.dd.charCodeAt(0),t=this.dd.charCodeAt(1);if(128&e&&(e-=256),e>=-7&&e<=7&&t>=0&&t<=1)return[e,["Cb","Gb","Db","Ab","Eb","Bb","F","C","G","D","A","E","B","F#","C#","G#","D#","A#"][t?e+10:e+7],!!t]}},ye.prototype.isNoteOn=function(){var e=this[0];return!(void 0===e||e<144||e>159)&&this[2]>0},ye.prototype.isNoteOff=function(){var e=this[0];return!(void 0===e||e<128||e>159)&&(e<144||0==this[2])},ye.prototype.isSysEx=function(){return 240==this[0]},ye.prototype.isFullSysEx=function(){return 240==this[0]&&247==this[this.length-1]},ye.prototype.isSMF=function(){return this.ff>=0&&this.ff<=127},ye.prototype.isEOT=function(){return 47==this.ff},ye.prototype.isTempo=function(){return 81==this.ff},ye.prototype.isTimeSignature=function(){return 88==this.ff},ye.prototype.isKeySignature=function(){return 89==this.ff},ye.prototype.toString=function(){var e,t;if(!this.length){if(void 0!==this.ff){if(e="ff"+He(this.ff)+" -- ",0==this.ff)e+="Sequence Number: "+function(e){for(var t=0,n=0;n<e.length;n++)t=(t<<8)+e.charCodeAt(n);return t}(this.dd);else if(this.ff>0&&this.ff<10)e+=["","Text","Copyright","Sequence Name","Instrument Name","Lyric","Marker","Cue Point","Program Name","Device Name"][this.ff]+Ke(this.dd);else if(32==this.ff)e+="Channel Prefix"+qe(this.dd);else if(33==this.ff)e+="MIDI Port"+qe(this.dd);else if(47==this.ff)e+="End of Track"+qe(this.dd);else if(81==this.ff){e+="Tempo: "+Math.round(100*this.getBPM())/100+" bpm"}else if(84==this.ff)e+="SMPTE Offset: "+ge(Ue(this.dd));else if(88==this.ff){var n=1<<this.dd.charCodeAt(1);e+="Time Signature: "+this.dd.charCodeAt(0)+"/"+n,e+=" "+this.dd.charCodeAt(2)+" "+this.dd.charCodeAt(3)}else if(89==this.ff){e+="Key Signature: ";var r=this.getKeySignature();r?(e+=r[1],r[2]&&(e+=" min")):e+="invalid"}else 127==this.ff?e+="Sequencer Specific"+qe(this.dd):e+="SMF"+qe(this.dd);return e}return"empty"}if(e=je(this),this[0]<128)return e;if(t={241:"MIDI Time Code",242:"Song Position",243:"Song Select",244:"Undefined",245:"Undefined",246:"Tune request",248:"Timing clock",249:"Undefined",250:"Start",251:"Continue",252:"Stop",253:"Undefined",254:"Active Sensing",255:"Reset"}[this[0]])return e+" -- "+t;var s=this[0]>>4;return(t={8:"Note Off",10:"Aftertouch",12:"Program Change",13:"Channel Aftertouch",14:"Pitch Wheel"}[s])?e+" -- "+t:9==s?e+" -- "+(this[2]?"Note On":"Note Off"):11!=s?e:((t={0:"Bank Select MSB",1:"Modulation Wheel MSB",2:"Breath Controller MSB",4:"Foot Controller MSB",5:"Portamento Time MSB",6:"Data Entry MSB",7:"Channel Volume MSB",8:"Balance MSB",10:"Pan MSB",11:"Expression Controller MSB",12:"Effect Control 1 MSB",13:"Effect Control 2 MSB",16:"General Purpose Controller 1 MSB",17:"General Purpose Controller 2 MSB",18:"General Purpose Controller 3 MSB",19:"General Purpose Controller 4 MSB",32:"Bank Select LSB",33:"Modulation Wheel LSB",34:"Breath Controller LSB",36:"Foot Controller LSB",37:"Portamento Time LSB",38:"Data Entry LSB",39:"Channel Volume LSB",40:"Balance LSB",42:"Pan LSB",43:"Expression Controller LSB",44:"Effect control 1 LSB",45:"Effect control 2 LSB",48:"General Purpose Controller 1 LSB",49:"General Purpose Controller 2 LSB",50:"General Purpose Controller 3 LSB",51:"General Purpose Controller 4 LSB",64:"Damper Pedal On/Off",65:"Portamento On/Off",66:"Sostenuto On/Off",67:"Soft Pedal On/Off",68:"Legato Footswitch",69:"Hold 2",70:"Sound Controller 1",71:"Sound Controller 2",72:"Sound Controller 3",73:"Sound Controller 4",74:"Sound Controller 5",75:"Sound Controller 6",76:"Sound Controller 7",77:"Sound Controller 8",78:"Sound Controller 9",79:"Sound Controller 10",80:"General Purpose Controller 5",81:"General Purpose Controller 6",82:"General Purpose Controller 7",83:"General Purpose Controller 8",84:"Portamento Control",88:"High Resolution Velocity Prefix",91:"Effects 1 Depth",92:"Effects 2 Depth",93:"Effects 3 Depth",94:"Effects 4 Depth",95:"Effects 5 Depth",96:"Data Increment",97:"Data Decrement",98:"Non-Registered Parameter Number LSB",99:"Non-Registered Parameter Number MSB",100:"Registered Parameter Number LSB",101:"Registered Parameter Number MSB",120:"All Sound Off",121:"Reset All Controllers",122:"Local Control On/Off",123:"All Notes Off",124:"Omni Mode Off",125:"Omni Mode On",126:"Mono Mode On",127:"Poly Mode On"}[this[1]])||(t="Undefined"),e+" -- "+t)},ye.prototype._stamp=function(e){return this._from.push(e._orig?e._orig:e),this},ye.prototype._unstamp=function(e){if(void 0===e)this._from=[];else{e._orig&&(e=e._orig);var t=this._from.indexOf(e);t>-1&&this._from.splice(t,1)}return this},ye.prototype._stamped=function(e){e._orig&&(e=e._orig);for(var t=0;t<this._from.length;t++)if(this._from[t]==e)return!0;return!1},le.MIDI=ye,Xe.validate=function(e){var t=e instanceof Array?e:arguments;if(t[0]!=parseInt(t[0])||t[0]<0||t[0]>14)throw RangeError("Bad master channel value: "+t[0]);if(t[1]!=parseInt(t[1])||t[1]<0||t[0]+t[1]>15)throw RangeError("Bad zone size value: "+t[1])},Xe.prototype.reset=function(){for(var e=0;e<16;e++)this[e]={band:0,master:e}},Xe.prototype.setup=function(e,t){var n;Xe.validate(e,t);var r=e+t;if((this[e].master!=e||this[e].band!=t)&&(t||this[e].band)){for(this[e].band?r<(n=e+this[e].band)&&(r=n):this[e].master==e-1?(n=e-1,r<(n+=this[n].band)&&(r=n),this[e-1]={band:0,master:e-1}):this[e].master!=e&&(n=this[e].master,r<(n+=this[n].band)&&(r=n),this[this[e].master].band=e-this[e].master-1),this[e].master=e,this[e].band=t,n=e+1;n<=e+t;n++)this[n].band&&r<n+this[n].band&&(r=n+this[n].band),this[n]={band:0,master:e};for(;n<=r;n++)this[n]={band:0,master:n}}},Xe.prototype.filter=function(e){var t=e.getChannel();if(!this[t]||!this[this[t].master].band)return e;var n,r,s,a=this[t].master,i=this[a].band;if(void 0!==e._mpe){for(s=256,n=a+1;n<=a+i;n++)if(this[n].notes){for(s>this[n].notes.length&&(t=n,s=this[n].notes.length),r=0;r<this[n].notes.length;r++)if(this[n].notes[r]==e._mpe){t=n,s=-1;break}}else s>0&&(t=n,s=0);e.setChannel(t),e._mpe=void 0}return t==a||(e.isNoteOn()?(this[t].notes||(this[t].notes=[]),v(this[t].notes,e.getNote())):e.isNoteOff()&&this[t].notes&&w(this[t].notes,e.getNote())),e},le.MPE=Xe,(le.lib={}).now=l,le.lib.schedule=c,le.lib.openMidiOut=function(e,t){var n=new O;return t._openOut(n),n._info=t._info(e),n},le.lib.openMidiIn=function(e,t){var n=new O;return t._openIn(n),n._info=t._info(e),n},le.lib.registerMidiOut=function(e,t){for(var n=t._info(e),r=0;r<Q._outs.length;r++)if(Q._outs[r].name==n.name)return!1;return n.engine=t,Q._outs.push(n),N&&(_(),N._bad&&(N._repair(),N._resume())),!0},le.lib.registerMidiIn=function(e,t){for(var n=t._info(e),r=0;r<Q._ins.length;r++)if(Q._ins[r].name==n.name)return!1;return n.engine=t,Q._ins.push(n),N&&(_(),N._bad&&(N._repair(),N._resume())),!0},le.lib.copyMidiHelpers=ze,le.lib.getAudioContext=function(){return Ze(),Ve};var Ye="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";le.lib.fromBase64=function(e){var t,n,r,s,a,i,o="",u=0;for(e=e.replace(/[^A-Za-z0-9+/=]/g,"");u<e.length;)t=Ye.indexOf(e.charAt(u++))<<2|(s=Ye.indexOf(e.charAt(u++)))>>4,n=(15&s)<<4|(a=Ye.indexOf(e.charAt(u++)))>>2,r=(3&a)<<6|(i=Ye.indexOf(e.charAt(u++))),o+=String.fromCharCode(t),64!=a&&(o+=String.fromCharCode(n)),64!=i&&(o+=String.fromCharCode(r));return o},le.lib.toBase64=function(e){var t,n,r,s,a,i=0,o=0,u="",l=[];if(!e)return e;do{t=(a=e.charCodeAt(i++)<<16|e.charCodeAt(i++)<<8|e.charCodeAt(i++))>>18&63,n=a>>12&63,r=a>>6&63,s=63&a,l[o++]=Ye.charAt(t)+Ye.charAt(n)+Ye.charAt(r)+Ye.charAt(s)}while(i<e.length);u=l.join("");var c=e.length%3;return c?u.slice(0,c-3)+"===".slice(c):u},le.lib.fromUTF8=function(e){e=void 0===e?"":""+e;var t,n,r,s="";for(t=0;t<e.length;t++){if((n=e.charCodeAt(t))>255)return e;if(n<128)s+=e[t];else if(192==(224&n)){if(n=(31&n)<<6,++t>=e.length)return e;if(128!=(192&(r=e.charCodeAt(t))))return e;n+=63&r,s+=String.fromCharCode(n)}else if(224==(240&n)){if(n=(15&n)<<12,++t>=e.length)return e;if(128!=(192&(r=e.charCodeAt(t))))return e;if(n+=(63&r)<<6,++t>=e.length)return e;if(128!=(192&(r=e.charCodeAt(t))))return e;n+=63&r,s+=String.fromCharCode(n)}else if(240==(248&n)){if(n=(7&n)<<18,++t>=e.length)return e;if(128!=(192&(r=e.charCodeAt(t))))return e;if(n+=(63&r)<<12,++t>=e.length)return e;if(128!=(192&(r=e.charCodeAt(t))))return e;if(n+=(63&r)<<6,++t>=e.length)return e;if(128!=(192&(r=e.charCodeAt(t))))return e;if((n+=63&r)>1114111)return e;n-=65536,s+=String.fromCharCode(55296+(n>>10)),s+=String.fromCharCode(56320+(1023&n))}}return s},le.lib.toUTF8=function(e){e=void 0===e?"":""+e;var t,n,r="";for(t=0;t<e.length;t++)(n=e.charCodeAt(t))<128?r+=e[t]:n<2048?(r+=String.fromCharCode(192+(n>>6)),r+=String.fromCharCode(128+(63&n))):n<65536?(r+=String.fromCharCode(224+(n>>12)),r+=String.fromCharCode(128+(n>>6&63)),r+=String.fromCharCode(128+(63&n))):(r+=String.fromCharCode(240+(n>>18)),r+=String.fromCharCode(128+(n>>12&63)),r+=String.fromCharCode(128+(n>>6&63)),r+=String.fromCharCode(128+(63&n)));return r};var Qe=[],Je={},et={},tt=i.Promise;function nt(e,t,n){this.name=e,this.message=t,this.code=n}function rt(e,t){this.bubbles=!1,this.cancelBubble=!1,this.cancelable=!1,this.currentTarget=t,this.defaultPrevented=!1,this.eventPhase=0,this.path=[],this.port=e,this.returnValue=!0,this.srcElement=t,this.target=t,this.timeStamp=l(),this.type="statechange"}function st(e,t){this.bubbles=!1,this.cancelBubble=!1,this.cancelable=!1,this.currentTarget=e,this.data=t,this.defaultPrevented=!1,this.eventPhase=0,this.path=[],this.receivedTime=l(),this.returnValue=!0,this.srcElement=e,this.target=e,this.timeStamp=this.receivedTime,this.type="midimessage"}function at(e,t){e&&(e.onstatechange&&e.onstatechange(new rt(e,e)),t.onstatechange&&t.onstatechange(new rt(e,t)))}function it(e,t){var n=this,r=!1,s=null,a=null;this.type="input",this.id=t.id,this.name=t.name,this.manufacturer=t.man,this.version=t.ver,Object.defineProperty(this,"state",{get:function(){return t.connected?"connected":"disconnected"},enumerable:!0}),Object.defineProperty(this,"connection",{get:function(){return r?t.proxy?"open":"pending":"closed"},enumerable:!0}),Object.defineProperty(this,"onmidimessage",{get:function(){return a},set:function(e){if(e instanceof Function){if(a=e,!r)try{n.open()}catch(e){}}else a=null},enumerable:!0}),Object.defineProperty(this,"onstatechange",{get:function(){return s},set:function(e){s=e instanceof Function?e:null},enumerable:!0}),this.open=function(){return new tt((function(s,a){r?s(n):t.open().then((function(){r||(r=!0,at(n,e)),s(n)}),(function(){a(new nt("InvalidAccessError","Port is not available",15))}))}))},this.close=function(){return new tt((function(s){r&&(r=!1,t.close(),at(n,e)),s(n)}))},Object.freeze(this)}function ot(e){for(var t,n;e.length;){for(t=0;t<e.length&&!(e[t]==parseInt(e[t])&&e[t]>=128&&e[t]<=255&&247!=e[t]);t++);if(e.splice(0,t),!e.length)return;if(240==e[0]){for(t=1;t<e.length&&247!=e[t];t++);if(t==e.length)return;return e.splice(0,t+1)}if((n=lt(e[0])+1)>e.length)return;for(t=1;t<n&&!(e[t]!=parseInt(e[t])||e[t]<0||e[t]>=128);t++);if(t==n)return e.splice(0,t);e.splice(0,t)}}function ut(e,n,r,s){var a=this;this.id=e,this.name=n,this.man=r,this.ver=s,this.connected=!0,this.ports=[],this.pending=[],this.proxy=void 0,this.queue=[],this.onmidi=function(e){var n;for(a.queue=a.queue.concat(e.slice()),n=ot(a.queue);n;n=ot(a.queue))for(t=0;t<a.ports.length;t++)a.ports[t][0].onmidimessage&&(240!=n[0]||a.ports[t][1])&&a.ports[t][0].onmidimessage(new st(a,new Uint8Array(n)))}}function lt(e){return e>=128&&e<=191||e>=224&&e<=239||242==e?2:e>=192&&e<=223||241==e||243==e?1:0}"function"!=typeof tt&&((tt=function(e){this.executor=e}).prototype.then=function(e,t){"function"!=typeof e&&(e=function(){}),"function"!=typeof t&&(t=function(){}),this.executor(e,t)}),ut.prototype.open=function(){var e=this;return new tt((function(t,n){var r;e.proxy||!e.connected?t():(e.pending.push([t,n]),1==e.pending.length&&le().openMidiIn(e.name).or((function(){for(r=0;r<e.pending.length;r++)e.pending[r][1]();e.pending=[]})).and((function(){for(e.proxy=this,e.proxy.connect(e.onmidi),r=0;r<e.pending.length;r++)e.pending[r][0]();e.pending=[]})))}))},ut.prototype.close=function(){var e;if(this.proxy){for(e=0;e<this.ports.length;e++)if("open"==this.ports[e].connection)return;this.proxy.close(),this.proxy=void 0}},ut.prototype.disconnect=function(){this.connected=!1,this.proxy&&(this.proxy.close(),this.proxy=void 0)},ut.prototype.reconnect=function(){var e,t,n=this,r=[];for(this.connected=!0,e=0;e<Qe.length;e++)"closed"==(t=Qe[e].inputs.get(this.id)).connection?at(t,Qe[e]):r.push([t,Qe[e]]);r.length&&le()._openMidiInNR(n.name).or((function(){for(e=0;e<r.length;e++)r[e][0].close()})).and((function(){for(n.proxy=this,n.proxy.connect(n.onmidi),e=0;e<r.length;e++)at(r[e][0],r[e][1])}))};var ct="Failed to execute 'send' on 'MIDIOutput': ";function ht(e,t){var n=this,r=!1,s=null;this.type="output",this.id=t.id,this.name=t.name,this.manufacturer=t.man,this.version=t.ver,Object.defineProperty(this,"state",{get:function(){return t.connected?"connected":"disconnected"},enumerable:!0}),Object.defineProperty(this,"connection",{get:function(){return r?t.proxy?"open":"pending":"closed"},enumerable:!0}),Object.defineProperty(this,"onstatechange",{get:function(){return s},set:function(e){s=e instanceof Function?e:null},enumerable:!0}),this.open=function(){return new tt((function(s,a){r?s(n):t.open().then((function(){r||(r=!0,at(n,e)),s(n)}),(function(){a(new nt("InvalidAccessError","Port is not available",15))}))}))},this.close=function(){return new tt((function(s){r&&(r=!1,n.clear(),t.close(),at(n,e)),s(n)}))},this.clear=function(){},this.send=function(s,a){if(function(e,t){var n,r,s,a=[];for(n=0;n<e.length;n++)if(e[n]!=parseInt(e[n])||e[n]<0||e[n]>255)throw TypeError(ct+e[n]+" is not a UInt8 value.");for(r=0,n=0;n<e.length;n++)if(r){if(e[n]>127)throw TypeError(ct+"Unexpected status byte at index "+n+" ("+e[n]+").");s.push(e[n]),r--}else{if(e[n]<128)throw TypeError(ct+"Running status is not allowed at index "+n+" ("+e[n]+").");if(247==e[n])throw TypeError(ct+"Unexpected end of system exclusive message at index "+n+" ("+e[n]+").");if(s=[e[n]],a.push(s),240==e[n]){if(!t)throw new nt("InvalidAccessError",ct+"System exclusive messag is not allowed at index "+n+" ("+e[n]+").",15);for(r=-1;n<e.length;n++)if(s.push(e[n]),247==e[n]){r=0;break}}else r=lt(e[n])}if(r)throw TypeError(ct+"Message is incomplete")}(s,e.sysexEnabled),!t.connected)throw new nt("InvalidStateError","Port is not connected",11);if(r){var i=l();a>i?setTimeout((function(){t.proxy.send(s)}),a-i):t.proxy.send(s)}else this.open().then((function(){n.send(s,a)}))},Object.freeze(this)}function pt(e,t,n,r){this.id=e,this.name=t,this.man=n,this.ver=r,this.connected=!0,this.ports=[],this.pending=[],this.proxy=void 0}function dt(e){this.has=function(t){return e.hasOwnProperty(t)&&e[t].connected},this.keys=function(){try{var t=new Map;for(var n in e)this.has(n)&&t.set(n,this.get(n));return t.keys()}catch(e){}},this.values=function(){try{var t=new Map;for(var n in e)this.has(n)&&t.set(n,this.get(n));return t.values()}catch(e){}},this.entries=function(){try{var t=new Map;for(var n in e)this.has(n)&&t.set(n,this.get(n));return t.entries()}catch(e){}},this.forEach=function(t,n){for(var r in void 0===n&&(n=this),e)this.has(r)&&t.call(n,this.get(r),r,this)},Object.defineProperty(this,"size",{get:function(){var t=0;for(var n in e)this.has(n)&&t++;return t},enumerable:!0})}function ft(e,t){this.get=function(n){if(et.hasOwnProperty(n)&&et[n].connected)return t[n]||(t[n]=new it(e,et[n]),et[n].ports.push([t[n],e.sysexEnabled])),t[n]},Object.freeze(this)}function mt(e,t){this.get=function(n){if(Je.hasOwnProperty(n)&&Je[n].connected)return t[n]||(t[n]=new ht(e,Je[n]),Je[n].ports.push([t[n],e.sysexEnabled])),t[n]},Object.freeze(this)}function gt(e){var t,n,r,s;for(t=0;t<e.inputs.added.length;t++)r=e.inputs.added[t],et.hasOwnProperty(r.id)||(et[r.id]=new ut(r.id,r.name,r.manufacturer,r.version)),et[r.id].reconnect();for(t=0;t<e.outputs.added.length;t++)r=e.outputs.added[t],Je.hasOwnProperty(r.id)||(Je[r.id]=new pt(r.id,r.name,r.manufacturer,r.version)),Je[r.id].reconnect();for(t=0;t<e.inputs.removed.length;t++)if(r=e.inputs.removed[t],et.hasOwnProperty(r.id)){for(s=[],n=0;n<Qe.length;n++)s.push([Qe[n].inputs.get(r.id),Qe[n]]);for(et[r.id].disconnect(),n=0;n<s.length;n++)at(s[n][0],s[n][1])}for(t=0;t<e.outputs.removed.length;t++)if(r=e.outputs.removed[t],Je.hasOwnProperty(r.id)){for(s=[],n=0;n<Qe.length;n++)s.push([Qe[n].outputs.get(r.id),Qe[n]]);for(Je[r.id].disconnect(),n=0;n<s.length;n++)at(s[n][0],s[n][1])}}function yt(e){var t,n,r=null;this.sysexEnabled=e,this.inputs=new ft(this,{}),this.outputs=new mt(this,{}),Object.defineProperty(this,"onstatechange",{get:function(){return r},set:function(e){r=e instanceof Function?e:null},enumerable:!0}),Object.freeze(this);var s=N._info;for(t=0;t<s.inputs.length;t++)n=s.inputs[t],et.hasOwnProperty(n.id)||(et[n.id]=new ut(n.id,n.name,n.manufacturer,n.version));for(t=0;t<s.outputs.length;t++)n=s.outputs[t],Je.hasOwnProperty(n.id)||(Je[n.id]=new pt(n.id,n.name,n.manufacturer,n.version));Qe.length||le().onChange(gt),Qe.push(this)}return pt.prototype.open=function(){var e=this;return new tt((function(t,n){var r;e.proxy||!e.connected?t():(e.pending.push([t,n]),1==e.pending.length&&le().openMidiOut(e.name).or((function(){for(r=0;r<e.pending.length;r++)e.pending[r][1]();e.pending=[]})).and((function(){for(e.proxy=this,r=0;r<e.pending.length;r++)e.pending[r][0]();e.pending=[]})))}))},pt.prototype.close=function(){var e;if(this.proxy){for(e=0;e<this.ports.length;e++)if("open"==this.ports[e].connection)return;this.proxy.close(),this.proxy=void 0}},pt.prototype.disconnect=function(){this.connected=!1,this.proxy&&(this.proxy.close(),this.proxy=void 0)},pt.prototype.reconnect=function(){var e,t,n=this,r=[];for(this.connected=!0,e=0;e<Qe.length;e++)"closed"==(t=Qe[e].outputs.get(this.id)).connection?at(t,Qe[e]):r.push([t,Qe[e]]);r.length&&le()._openMidiOutNR(n.name).or((function(){for(e=0;e<r.length;e++)r[e][0].close()})).and((function(){for(n.proxy=this,e=0;e<r.length;e++)at(r[e][0],r[e][1])}))},ft.prototype=new dt(et),ft.prototype.constructor=ft,mt.prototype=new dt(Je),mt.prototype.constructor=mt,le.requestMIDIAccess=function(e){return new tt((function(t,n){le.JZZ(e).or((function(){})).and((function(){var r=!(!e||!e.sysex);if(r&&!this.info().sysex)n(new nt("SecurityError","Sysex is not allowed",18));else{var s=new yt(r);t(s)}}))}))},"undefined"==typeof navigator||navigator.requestMIDIAccess||(navigator.requestMIDIAccess=le.requestMIDIAccess),le.close=function(){Y._close&&Y._close()},le}))}var bA=ie();class xA{constructor(e=!1){this.eventMap={},this.eventsSuspended=1==e}addListener(e,t,n={}){if("string"==typeof e&&e.length<1||e instanceof String&&e.length<1||"string"!=typeof e&&!(e instanceof String)&&e!==xA.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if("function"!=typeof t)throw new TypeError("The callback must be a function.");const r=new vA(e,this,t,n);return this.eventMap[e]||(this.eventMap[e]=[]),n.prepend?this.eventMap[e].unshift(r):this.eventMap[e].push(r),r}addOneTimeListener(e,t,n={}){n.remaining=1,this.addListener(e,t,n)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(e,t){return void 0===e?!!(this.eventMap[xA.ANY_EVENT]&&this.eventMap[xA.ANY_EVENT].length>0)||Object.entries(this.eventMap).some(([,e])=>e.length>0):!!(this.eventMap[e]&&this.eventMap[e].length>0)&&(t instanceof vA?this.eventMap[e].filter(e=>e===t).length>0:"function"==typeof t?this.eventMap[e].filter(e=>e.callback===t).length>0:null==t)}get eventNames(){return Object.keys(this.eventMap)}getListeners(e){return this.eventMap[e]||[]}suspendEvent(e){this.getListeners(e).forEach(e=>{e.suspended=!0})}unsuspendEvent(e){this.getListeners(e).forEach(e=>{e.suspended=!1})}getListenerCount(e){return this.getListeners(e).length}emit(e,...t){if("string"!=typeof e&&!(e instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.eventsSuspended)return;let n=[],r=this.eventMap[xA.ANY_EVENT]||[];return this.eventMap[e]&&(r=r.concat(this.eventMap[e])),r.forEach(e=>{if(e.suspended)return;let r=[...t];Array.isArray(e.arguments)&&(r=r.concat(e.arguments)),e.remaining>0&&(n.push(e.callback.apply(e.context,r)),e.count++),--e.remaining<1&&e.remove()}),n}removeListener(e,t,n={}){if(void 0===e)return void(this.eventMap={});if(!this.eventMap[e])return;let r=this.eventMap[e].filter(e=>t&&e.callback!==t||n.remaining&&n.remaining!==e.remaining||n.context&&n.context!==e.context);r.length?this.eventMap[e]=r:delete this.eventMap[e]}async waitFor(e,t={}){return t.duration=parseInt(t.duration),(isNaN(t.duration)||t.duration<=0)&&(t.duration=1/0),new Promise((n,r)=>{let s,a=this.addListener(e,()=>{clearTimeout(s),n()},{remaining:1});t.duration!==1/0&&(s=setTimeout(()=>{a.remove(),r("The duration expired before the event was emitted.")},t.duration))})}get eventCount(){return Object.keys(this.eventMap).length}}class vA{constructor(e,t,n,r={}){if("string"!=typeof e&&!(e instanceof String)&&e!==xA.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!t)throw new ReferenceError("The 'target' parameter is mandatory.");if("function"!=typeof n)throw new TypeError("The 'callback' must be a function.");void 0===r.arguments||Array.isArray(r.arguments)||(r.arguments=[r.arguments]),(r=Object.assign({context:t,remaining:1/0,arguments:void 0,duration:1/0},r)).duration!==1/0&&setTimeout(()=>this.remove(),r.duration),this.event=e,this.target=t,this.callback=n,this.context=r.context,this.remaining=parseInt(r.remaining)>=1?parseInt(r.remaining):1/0,this.count=0,this.arguments=r.arguments,this.suspended=!1}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}class wA extends xA{constructor(e,t){super(),this.input=e,this.number=t}destroy(){this.input=null,this.number=null,this.removeListener()}_parseEvent(e){let t=null;e.data[0]!==CA.MIDI_SYSTEM_MESSAGES.sysex&&(t=e.data.slice(1));let n={target:this,data:Array.from(e.data),rawData:e.data,statusByte:e.data[0],dataBytes:t,timestamp:e.timeStamp,type:"midimessage"};this.emit("midimessage",n),this._parseEventForStandardMessages(e)}getStructuredMidiMessage(e){return{command:e[0]>>4,data1:e.length>1?e[1]:void 0,data2:e.length>2?e[2]:void 0}}_parseEventForStandardMessages(e){let{command:t,data1:n,data2:r}=this.getStructuredMidiMessage(e.data),s={target:this,data:Array.from(e.data),rawData:e.data,timestamp:e.timeStamp};t===CA.MIDI_CHANNEL_VOICE_MESSAGES.noteoff||t===CA.MIDI_CHANNEL_VOICE_MESSAGES.noteon&&0===r?(s.type="noteoff",s.note=new SA(n,{rawRelease:r}),s.release=s.note.release,s.rawRelease=s.note.rawRelease):t===CA.MIDI_CHANNEL_VOICE_MESSAGES.noteon?(s.type="noteon",s.note=new SA(n,{rawAttack:r}),s.attack=s.note.attack,s.rawAttack=s.note.rawAttack):t===CA.MIDI_CHANNEL_VOICE_MESSAGES.keyaftertouch?(s.type="keyaftertouch",s.note=new SA(n),s.value=r/127,s.rawValue=r):t===CA.MIDI_CHANNEL_VOICE_MESSAGES.controlchange&&n>=0&&n<=119?(s.type="controlchange",s.controller={number:n,name:this.getCcNameByNumber(n)},s.value=r/127,s.rawValue=r):t===CA.MIDI_CHANNEL_VOICE_MESSAGES.channelmode&&n>=120&&n<=127?(s.type="channelmode",s.controller={number:n,name:this.getChannelModeByNumber(n)},s.value=r,this._parseChannelModeMessage(e)):t===CA.MIDI_CHANNEL_VOICE_MESSAGES.programchange?(s.type="programchange",s.value=n+1,s.rawValue=n):t===CA.MIDI_CHANNEL_VOICE_MESSAGES.channelaftertouch?(s.type="channelaftertouch",s.value=n/127,s.rawValue=n):t===CA.MIDI_CHANNEL_VOICE_MESSAGES.pitchbend?(s.type="pitchbend",s.value=((r<<7)+n-8192)/8192,s.rawValue=(r<<7)+n):s.type="unknownmessage",this.emit(s.type,s)}getChannelModeByNumber(e){if(CA.validation&&(e=Math.floor(e)),!(e>=120&&e<=127))return!1;for(let t in CA.MIDI_CHANNEL_MODE_MESSAGES)if(CA.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===CA.MIDI_CHANNEL_MODE_MESSAGES[t])return t}_parseChannelModeMessage(e){let t,n;e.data.length>1&&(t=e.data[1],n=e.data.length>2?e.data[2]:void 0);let r={target:this,data:Array.from(e.data),rawData:e.data,timestamp:e.timeStamp,type:this.getChannelModeByNumber(t)};"localcontrol"===r.type&&(r.value=127===n),"omnimodeon"===r.type?(r.type="omnimode",r.value=!0):"omnimodeoff"===r.type&&(r.type="omnimode",r.value=!1),"monomodeon"===r.type?(r.type="monomode",r.value=!0):"polymodeon"===r.type&&(r.type="monomode",r.value=!1),this.emit(r.type,r)}getCcNameByNumber(e){if(CA.validation&&!((e=parseInt(e))>=0&&e<=119))throw new RangeError("Invalid control change number.");for(let t in CA.MIDI_CONTROL_CHANGE_MESSAGES)if(CA.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(t)&&e===CA.MIDI_CONTROL_CHANGE_MESSAGES[t])return t;return!1}}class kA extends xA{constructor(e){super(),this._midiInput=e,this.channels=[];for(let e=1;e<=16;e++)this.channels[e]=new wA(this,e);this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null,await this.close(),this._midiInput=null}_onStateChange(e){let t={timestamp:CA.time,target:this};"open"===e.port.connection?(t.type="opened",this.emit("opened",t)):"closed"===e.port.connection&&"connected"===e.port.state?(t.type="closed",this.emit("closed",t)):"closed"===e.port.connection&&"disconnected"===e.port.state?(t.type="disconnected",t.target={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):"pending"===e.port.connection&&"disconnected"===e.port.state||console.warn("This statechange event was not caught: ",e.port.connection,e.port.state)}_onMidiMessage(e){let t=null;e.data[0]!==CA.MIDI_SYSTEM_MESSAGES.sysex&&(t=e.data.slice(1));let n={target:this,data:Array.from(e.data),rawData:e.data,statusByte:e.data[0],dataBytes:t,timestamp:e.timeStamp,type:"midimessage"};if(this.emit("midimessage",n),e.data[0]<240){let t=1+(15&e.data[0]);this.channels[t]._parseEvent(e)}else e.data[0]<=255&&this._parseEvent(e)}_parseEvent(e){let t=e.data[0];var n={target:this,data:Array.from(e.data),rawData:e.data,timestamp:e.timeStamp};t===CA.MIDI_SYSTEM_MESSAGES.sysex?n.type="sysex":t===CA.MIDI_SYSTEM_MESSAGES.timecode?n.type="timecode":t===CA.MIDI_SYSTEM_MESSAGES.songposition?n.type="songposition":t===CA.MIDI_SYSTEM_MESSAGES.songselect?(n.type="songselect",n.song=e.data[1]+1):t===CA.MIDI_SYSTEM_MESSAGES.tunerequest?n.type="tunerequest":t===CA.MIDI_SYSTEM_MESSAGES.clock?n.type="clock":t===CA.MIDI_SYSTEM_MESSAGES.start?n.type="start":t===CA.MIDI_SYSTEM_MESSAGES.continue?n.type="continue":t===CA.MIDI_SYSTEM_MESSAGES.stop?n.type="stop":t===CA.MIDI_SYSTEM_MESSAGES.activesensing?n.type="activesensing":t===CA.MIDI_SYSTEM_MESSAGES.reset?n.type="reset":n.type="unknownmidimessage",this.emit(n.type,n)}async open(){try{return await this._midiInput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){return this._midiInput?this._midiInput.close():Promise.resolve()}getChannelModeByNumber(){CA.validation&&console.warn("The 'getChannelModeByNumber()' method has been moved to the 'InputChannel' class.")}addListener(e,t,n){if(CA.validation){if("function"==typeof n){let e=null!=t?[].concat(t):void 0;t=n,n={channels:e}}if(void 0!==CA.MIDI_CHANNEL_VOICE_MESSAGES[e]&&void 0===n.channels)throw new Error("For channel-specific events, 'options.channels' must be defined.")}let r=[];return void 0===CA.MIDI_CHANNEL_VOICE_MESSAGES[e]?r.push(super.addListener(e,t,n)):CA.sanitizeChannels(n.channels).forEach(s=>{r.push(this.channels[s].addListener(e,t,n))}),r}addOneTimeListener(e,t,n={}){return n.remaining=1,this.addListener(e,t,n)}on(e,t,n,r){return this.addListener(e,t,n,r)}hasListener(e,t,n={}){if(CA.validation){if("function"==typeof n){let e=[].concat(t);t=n,n={channels:e}}if(void 0!==CA.MIDI_CHANNEL_VOICE_MESSAGES[e]&&void 0===n.channels)throw new Error("For channel-specific events, 'options.channels' must be defined.")}return void 0!==CA.MIDI_CHANNEL_VOICE_MESSAGES[e]?CA.sanitizeChannels(n.channels).every(n=>this.channels[n].hasListener(e,t)):super.hasListener(e,t)}removeListener(e,t,n={}){if(CA.validation&&"function"==typeof n){let e=[].concat(t);t=n,n={channels:e}}if(void 0===n.channels&&(n.channels=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),null==e)return CA.sanitizeChannels(n.channels).forEach(e=>this.channels[e].removeListener()),super.removeListener();void 0!==CA.MIDI_CHANNEL_VOICE_MESSAGES[e]?CA.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].removeListener(e,t,n)}):super.removeListener(e,t,n)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return CA.validation&&console.warn("The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class."),!1}}class IA extends xA{constructor(e,t){super(),this.output=e,this.number=t}destroy(){this.output=null,this.number=null,this.removeListener()}send(e,t=[],n={}){return this.output.send(e,t,n),this}setKeyAftertouch(e,t,n={}){if(CA.validation){if(n.useRawValue&&(n.rawValue=n.useRawValue),isNaN(parseFloat(t)))throw new RangeError("Invalid key aftertouch value.");if(n.rawValue){if(!(t>=0&&t<=127&&Number.isInteger(t)))throw new RangeError("Key aftertouch raw value must be an integer between 0 and 127.")}else if(!(t>=0&&t<=1))throw new RangeError("Key aftertouch value must be a float between 0 and 1.")}return n.rawValue||(t=Math.round(127*t)),CA.getValidNoteArray(e,n).forEach(e=>{this.send((CA.MIDI_CHANNEL_VOICE_MESSAGES.keyaftertouch<<4)+(this.number-1),[e.number,t],CA.convertToTimestamp(n.time))}),this}sendControlChange(e,t,n={}){if("string"==typeof e&&(e=CA.MIDI_CONTROL_CHANGE_MESSAGES[e]),CA.validation){if(void 0===e)throw new TypeError("Control change must be identified with a valid name or an integer between 0 and 119.");if(!Number.isInteger(e)||!(e>=0&&e<=119))throw new TypeError("Control change number must be an integer between 0 and 119.");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new TypeError("Control change value must be an integer between 0 and 127")}return this.send((CA.MIDI_CHANNEL_VOICE_MESSAGES.controlchange<<4)+(this.number-1),[e,t],CA.convertToTimestamp(n.time)),this}_selectNonRegisteredParameter(e,t={}){return this.sendControlChange(99,e[0],t),this.sendControlChange(98,e[1],t),this}_deselectRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_deselectNonRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_selectRegisteredParameter(e,t={}){return this.sendControlChange(101,e[0],t),this.sendControlChange(100,e[1],t),this}_setCurrentParameter(e,t={}){return e=[].concat(e),this.sendControlChange(6,e[0],t),e.length<2||this.sendControlChange(38,e[1],t),this}decrementRegisteredParameter(e,t={}){if(Array.isArray(e)||(e=CA.MIDI_REGISTERED_PARAMETER[e]),CA.validation){if(void 0===e)throw new TypeError("The specified registered parameter is invalid.");let t=!1;if(Object.getOwnPropertyNames(CA.MIDI_REGISTERED_PARAMETER).forEach(n=>{CA.MIDI_REGISTERED_PARAMETER[n][0]===e[0]&&CA.MIDI_REGISTERED_PARAMETER[n][1]===e[1]&&(t=!0)}),!t)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(97,0,t),this._deselectRegisteredParameter(t),this}incrementRegisteredParameter(e,t={}){if(Array.isArray(e)||(e=CA.MIDI_REGISTERED_PARAMETER[e]),CA.validation){if(void 0===e)throw new TypeError("The specified registered parameter is invalid.");let t=!1;if(Object.getOwnPropertyNames(CA.MIDI_REGISTERED_PARAMETER).forEach(n=>{CA.MIDI_REGISTERED_PARAMETER[n][0]===e[0]&&CA.MIDI_REGISTERED_PARAMETER[n][1]===e[1]&&(t=!0)}),!t)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(96,0,t),this._deselectRegisteredParameter(t),this}playNote(e,t={}){if(this.sendNoteOn(e,t),t.duration>0&&isFinite(String(t.duration).trim()||NaN)){let n={time:CA.convertToTimestamp(t.time)+t.duration,release:t.release,rawRelease:t.rawRelease};this.sendNoteOff(e,n)}return this}sendNoteOff(e,t={}){if(CA.validation){if(null!=t.rawRelease&&!(t.rawRelease>=0&&t.rawRelease<=127))throw new RangeError("The 'rawRelease' option must be an integer between 0 and 127");if(null!=t.release&&!(t.release>=0&&t.release<=1))throw new RangeError("The 'release' option must be an number between 0 and 1");t.rawVelocity&&(t.rawRelease=t.velocity,console.warn("The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.")),t.velocity&&(t.release=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;null!=t.rawRelease?n=t.rawRelease:isNaN(t.release)||(n=Math.round(127*t.release));let r={rawRelease:parseInt(n)};return CA.getValidNoteArray(e,r).forEach(e=>{this.send((CA.MIDI_CHANNEL_VOICE_MESSAGES.noteoff<<4)+(this.number-1),[e.number,e.rawRelease],CA.convertToTimestamp(t.time))}),this}stopNote(e,t={}){return this.sendNoteOff(e,t)}sendNoteOn(e,t={}){if(CA.validation){if(null!=t.rawAttack&&!(t.rawAttack>=0&&t.rawAttack<=127))throw new RangeError("The 'rawAttack' option must be an integer between 0 and 127");if(null!=t.attack&&!(t.attack>=0&&t.attack<=1))throw new RangeError("The 'attack' option must be an number between 0 and 1");t.rawVelocity&&(t.rawAttack=t.velocity,t.rawRelease=t.release,console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.")),t.velocity&&(t.attack=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;null!=t.rawAttack?n=t.rawAttack:isNaN(t.attack)||(n=Math.round(127*t.attack));let r={rawAttack:n};return CA.getValidNoteArray(e,r).forEach(e=>{this.send((CA.MIDI_CHANNEL_VOICE_MESSAGES.noteon<<4)+(this.number-1),[e.number,e.rawAttack],CA.convertToTimestamp(t.time))}),this}sendChannelMode(e,t,n={}){if("string"==typeof e&&(e=CA.MIDI_CHANNEL_MODE_MESSAGES[e]),CA.validation){if(void 0===e)throw new TypeError("Invalid channel mode message name or number.");if(isNaN(e)||!(e>=120&&e<=127))throw new TypeError("Invalid channel mode message number.");if(isNaN(parseInt(t))||t<0||t>127)throw new RangeError("Value must be an integer between 0 and 127.")}return this.send((CA.MIDI_CHANNEL_VOICE_MESSAGES.channelmode<<4)+(this.number-1),[e,t],CA.convertToTimestamp(n.time)),this}setOmniMode(e,t={}){return void 0===e||e?this.sendChannelMode("omnimodeon",0,t):this.sendChannelMode("omnimodeoff",0,t),this}setChannelAftertouch(e,t={}){if(CA.validation){if(isNaN(parseFloat(e)))throw new RangeError("Invalid channel aftertouch value.");if(t.rawValue){if(!(e>=0&&e<=127&&Number.isInteger(e)))throw new RangeError("Channel aftertouch raw value must be an integer between 0 and 127.")}else if(!(e>=0&&e<=1))throw new RangeError("Channel aftertouch value must be a float between 0 and 1.")}return this.send((CA.MIDI_CHANNEL_VOICE_MESSAGES.channelaftertouch<<4)+(this.number-1),[Math.round(127*e)],CA.convertToTimestamp(t.time)),this}setMasterTuning(e,t={}){if(e=parseFloat(e)||0,CA.validation&&!(e>-65&&e<64))throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");let n=Math.floor(e)+64,r=e-Math.floor(e);r=Math.round((r+1)/2*16383);let s=r>>7&127,a=127&r;return this.setRegisteredParameter("channelcoarsetuning",n,t),this.setRegisteredParameter("channelfinetuning",[s,a],t),this}setModulationRange(e,t,n={}){if(CA.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!(null==t||Number.isInteger(t)&&t>=0&&t<=127))throw new RangeError("If specified, the cents value must be an integer between 0 and 127.")}return t>=0&&t<=127||(t=0),this.setRegisteredParameter("modulationrange",[e,t],n),this}setNonRegisteredParameter(e,t,n={}){if(t=[].concat(t),CA.validation){if(!Array.isArray(e)||!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the NRPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the NRPN must be between 0 and 127.");t.forEach(e=>{if(!(e>=0&&e<=127))throw new RangeError("The data bytes of the NRPN must be between 0 and 127.")})}return this._selectNonRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectNonRegisteredParameter(n),this}setPitchBend(e,t={}){if(CA.validation)if(t.rawValue&&Array.isArray(e)){if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The pitch bend LSB must be an integer between 0 and 127.")}else if(t.rawValue&&!Array.isArray(e)){if(!(e>=0&&e<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}else{if(isNaN(e)||null===e)throw new RangeError("Invalid pitch bend value.");if(!(e>=-1&&e<=1))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}let n=0,r=0;if(t.rawValue&&Array.isArray(e))n=e[0],r=e[1];else if(t.rawValue&&!Array.isArray(e))n=e;else{let t=Math.round((e+1)/2*16383);n=t>>7&127,r=127&t}return this.send((CA.MIDI_CHANNEL_VOICE_MESSAGES.pitchbend<<4)+(this.number-1),[r,n],CA.convertToTimestamp(t.time)),this}setPitchBendRange(e,t,n={}){if(CA.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError("The cents value must be an integer between 0 and 127.")}return this.setRegisteredParameter("pitchbendrange",[e,t],n),this}setProgram(e,t={}){if(e=parseInt(e)||1,CA.validation&&!(e>=1&&e<=128))throw new RangeError("The program number must be between 1 and 128.");return this.send((CA.MIDI_CHANNEL_VOICE_MESSAGES.programchange<<4)+(this.number-1),[e-1],CA.convertToTimestamp(t.time)),this}setRegisteredParameter(e,t,n={}){if(Array.isArray(e)||(e=CA.MIDI_REGISTERED_PARAMETER[e]),CA.validation){if(!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the RPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the RPN must be between 0 and 127.");[].concat(t).forEach(e=>{if(!(e>=0&&e<=127))throw new RangeError("The data bytes of the RPN must be between 0 and 127.")})}return this._selectRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectRegisteredParameter(n),this}setTuningBank(e,t={}){if(CA.validation&&(!Number.isInteger(e)||!(e>=1&&e<=128)))throw new RangeError("The tuning bank number must be between 1 and 128.");return this.setRegisteredParameter("tuningbank",e-1,t),this}setTuningProgram(e,t={}){if(CA.validation&&(!Number.isInteger(e)||!(e>=1&&e<=128)))throw new RangeError("The tuning program number must be between 1 and 128.");return this.setRegisteredParameter("tuningprogram",e-1,t),this}setLocalControl(e,t={}){return e?this.sendChannelMode("localcontrol",127,t):this.sendChannelMode("localcontrol",0,t)}turnNotesOff(e={}){return this.sendChannelMode("allnotesoff",0,e)}turnSoundOff(e={}){return this.sendChannelMode("allsoundoff",0,e)}resetAllControllers(e={}){return this.sendChannelMode("resetallcontrollers",0,e)}setPolyphonicMode(e,t={}){return"mono"===e?this.sendChannelMode("monomodeon",0,t):this.sendChannelMode("polymodeon",0,t)}}class NA extends xA{constructor(e){if(super(),CA.validation&&(!e||"output"!==e.type))throw new TypeError("The supplied MIDIOutput is invalid.");this._midiOutput=e,this.channels=[];for(let e=1;e<=16;e++)this.channels[e]=new IA(this,e);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiOutput.onstatechange=null,await this.close(),this._midiOutput=null}_onStateChange(e){let t={timestamp:CA.time};"open"===e.port.connection?(t.type="opened",t.target=this,this.emit("opened",t)):"closed"===e.port.connection&&"connected"===e.port.state?(t.type="closed",t.target=this,this.emit("closed",t)):"closed"===e.port.connection&&"disconnected"===e.port.state?(t.type="disconnected",t.target={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):"pending"===e.port.connection&&"disconnected"===e.port.state||console.warn("This statechange event was not caught:",e.port.connection,e.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}send(e,t=[],n={}){if(Array.isArray(t)||(t=[t]),CA.validation){if(!(parseInt(e)>=128&&parseInt(e)<=255))throw new RangeError("The status must be an integer between 128 and 255.");t.forEach(e=>{if(e=parseInt(e),isNaN(e))throw new TypeError("Data bytes must be integers.");if(!(parseInt(e)>=0&&parseInt(e)<=255))throw new RangeError("The data bytes must be integers between 0 and 255.")}),"number"==typeof n&&(n={time:n})}return this._midiOutput.send([e].concat(t),CA.convertToTimestamp(n.time)),this}sendSysex(e,t,n={}){return t=(e=[].concat(e)).concat(t,CA.MIDI_SYSTEM_MESSAGES.sysexend),this.send(CA.MIDI_SYSTEM_MESSAGES.sysex,t,{time:n.time}),this}clear(){return this._midiOutput.clear?this._midiOutput.clear():CA.validation&&console.warn("The 'clear()' method has not yet been implemented in your environment."),this}sendTimecodeQuarterFrame(e,t={}){if(CA.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The value must be an integer between 0 and 127.");return this.send(CA.MIDI_SYSTEM_MESSAGES.timecode,e,{time:t.time}),this}setSongPosition(e,t={}){var n=(e=Math.floor(e)||0)>>7&127,r=127&e;return this.send(CA.MIDI_SYSTEM_MESSAGES.songposition,[n,r],{time:t.time}),this}sendSongPosition(e,t={}){return CA.validation&&console.warn("The sendSongPosition() method has been deprecated. Use setSongPosition() instead."),this.setSongPosition(e,t)}setSong(e,t={}){if(CA.validation&&(e=parseInt(e),isNaN(e)||!(e>=1&&e<=128)))throw new RangeError("The program value must be between 1 and 128");return this.send(CA.MIDI_SYSTEM_MESSAGES.songselect,[e],{time:t.time}),this}sendSongSelect(e,t={}){return CA.validation&&console.warn("The sendSongSelect() method has been deprecated. Use setSong() instead."),this.setSong(e,t)}sendTuneRequest(e={}){return this.send(CA.MIDI_SYSTEM_MESSAGES.tunerequest,void 0,{time:e.time}),this}sendClock(e={}){return this.send(CA.MIDI_SYSTEM_MESSAGES.clock,void 0,{time:e.time}),this}sendStart(e={}){return this.send(CA.MIDI_SYSTEM_MESSAGES.start,void 0,{time:e.time}),this}sendContinue(e={}){return this.send(CA.MIDI_SYSTEM_MESSAGES.continue,void 0,{time:e.time}),this}sendStop(e={}){return this.send(CA.MIDI_SYSTEM_MESSAGES.stop,void 0,{time:e.time}),this}sendActiveSensing(e={}){return this.send(CA.MIDI_SYSTEM_MESSAGES.activesensing,[],{time:e.time}),this}sendReset(e={}){return this.send(CA.MIDI_SYSTEM_MESSAGES.reset,void 0,{time:e.time}),this}sendTuningRequest(e={}){return CA.validation&&console.warn("The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead."),this.sendTuneRequest(e)}setKeyAftertouch(e,t,n={},r={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;t=n,(n=r).channels=e}return null==n.channels&&(n.channels="all"),CA.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setKeyAftertouch(e,t,n)}),this}sendKeyAftertouch(e,t,n,r={}){return CA.validation&&console.warn("The sendKeyAftertouch() method has been deprecated. Use setKeyAftertouch() instead."),r.channels=t,this.setKeyAftertouch(e,n,r)}sendControlChange(e,t,n={},r={}){if(CA.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),CA.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendControlChange(e,t,n)}),this}setPitchBendRange(e,t,n={},r={}){if(CA.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),CA.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setPitchBendRange(e,t,n)}),this}setRegisteredParameter(e,t,n={},r={}){if(CA.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),CA.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setRegisteredParameter(e,t,n)}),this}setChannelAftertouch(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setChannelAftertouch(e,t)}),this}sendChannelAftertouch(e,t,n={}){return CA.validation&&console.warn("The sendChannelAftertouch() method has been deprecated. Use setChannelAftertouch()."),n.channels=t,this.setChannelAftertouch(e,n)}setPitchBend(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setPitchBend(e,t)}),this}sendPitchBend(e,t,n={}){return CA.validation&&console.warn("The sendPitchBend() method has been deprecated. Use setPitchBend() instead."),n.channels=t,this.setPitchBend(e,n)}setProgram(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setProgram(e,t)}),this}sendProgramChange(e,t,n={}){return CA.validation&&console.warn("The sendProgramChange() method has been deprecated. Use setProgram() instead."),n.channels=t,this.setProgram(e,n)}setModulationRange(e,t,n={},r={}){if(CA.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),CA.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setModulationRange(e,t,n)}),this}setMasterTuning(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setMasterTuning(e,t)}),this}setTuningProgram(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setTuningProgram(e,t)}),this}setTuningBank(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setTuningBank(e,t)}),this}sendChannelMode(e,t,n={},r={}){if(CA.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),CA.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].sendChannelMode(e,t,n)}),this}turnSoundOff(e={},t={}){if(CA.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let n=e;(e=t).channels=n}return null==e.channels&&(e.channels="all"),CA.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].turnSoundOff(e)}),this}turnNotesOff(e={},t={}){if(CA.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let n=e;(e=t).channels=n}return null==e.channels&&(e.channels="all"),CA.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].turnNotesOff(e)}),this}resetAllControllers(e={},t={}){if(CA.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let n=e;(e=t).channels=n}return null==e.channels&&(e.channels="all"),CA.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].resetAllControllers(e)}),this}setPolyphonicMode(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setPolyphonicMode(e,t)}),this}setLocalControl(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setLocalControl(e,t)}),this}setOmniMode(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].setOmniMode(e,t)}),this}setNonRegisteredParameter(e,t,n={},r={}){if(CA.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let e=n;(n=r).channels=e}return null==n.channels&&(n.channels="all"),CA.sanitizeChannels(n.channels).forEach(r=>{this.channels[r].setNonRegisteredParameter(e,t,n)}),this}incrementRegisteredParameter(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].incrementRegisteredParameter(e,t)}),this}decrementRegisteredParameter(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].decrementRegisteredParameter(e,t)}),this}sendNoteOff(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendNoteOff(e,t)}),this}stopNote(e,t){return this.sendNoteOff(e,t)}playNote(e,t={},n={}){if(CA.validation&&(t.rawVelocity&&console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' instead."),t.velocity&&console.warn("The 'velocity' option is deprecated. Use 'velocity' instead."),Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].playNote(e,t)}),this}sendNoteOn(e,t={},n={}){if(CA.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let e=t;(t=n).channels=e}return null==t.channels&&(t.channels="all"),CA.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendNoteOn(e,t)}),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}}class SA{constructor(e,t={}){Number.isInteger(e)?this.number=e:this.name=e,this.duration=null==t.duration?1/0:t.duration,this.attack=null==t.attack?.5:t.attack,this.release=null==t.release?.5:t.release,null!=t.rawAttack&&(this.rawAttack=t.rawAttack),null!=t.rawRelease&&(this.rawRelease=t.rawRelease)}get name(){return CA.NOTES[this._number%12]+CA.getOctave(this.number)}set name(e){if(CA.validation&&!1===CA.guessNoteNumber(e))throw new Error("Invalid note name.");this._number=CA.guessNoteNumber(e)}get number(){return this._number}set number(e){if(CA.validation&&!1===CA.guessNoteNumber(e))throw new Error("Invalid note number.");this._number=CA.guessNoteNumber(e)}get duration(){return this._duration}set duration(e){if(CA.validation&&(e=parseFloat(e),isNaN(e)||null===e||e<0))throw new RangeError("Invalid duration.");this._duration=e}get attack(){return this._rawAttack/127}set attack(e){if(CA.validation&&(e=parseFloat(e),isNaN(e)||null===e||!(e>=0&&e<=1)))throw new RangeError("Invalid attack value.");this._rawAttack=Math.round(127*e)}get rawAttack(){return this._rawAttack}set rawAttack(e){if(CA.validation&&(e=parseFloat(e),isNaN(e)||null===e||!(e>=0&&e<=127)))throw new RangeError("Invalid rawAttack value.");this._rawAttack=e}get release(){return this._rawRelease/127}set release(e){if(CA.validation&&(e=parseFloat(e),isNaN(e)||null===e||!(e>=0&&e<=1)))throw new RangeError("Invalid release value.");this._rawRelease=Math.round(127*e)}get rawRelease(){return this._rawRelease}set rawRelease(e){if(CA.validation&&(e=parseFloat(e),isNaN(e)||null===e||!(e>=0&&e<=127)))throw new RangeError("Invalid rawRelease value.");this._rawRelease=e}get octave(){return Math.floor(Math.floor(this._number)/12-1)}}const CA=new class extends xA{constructor(){super(),this.interface=null,this.validation=!0,this._inputs=[],this._outputs=[],this._stateChangeQueue=[],this._octaveOffset=0,this.isNode&&(e.performance=Wn().performance,e.navigator=(gA||(gA=!0,yA()),mA))}async enable(e={},t=!1){if(this.enabled)return Promise.resolve();this.validation=!1!==e.validation,this.validation&&("function"==typeof e&&(e={callback:e,sysex:t}),t&&(e.sysex=!0)),this.supported||await new Promise((t,n)=>{const r=this.time,s=setInterval(()=>{if(this.supported)clearInterval(s),t();else if(this.time>r+1500){clearInterval(s);let t=new Error("Web MIDI API support is not available in your environment.");"function"==typeof e.callback&&e.callback(t),n(t)}},25)});try{this.interface=await navigator.requestMIDIAccess({sysex:e.sysex,software:e.software})}catch(t){return"function"==typeof e.callback&&e.callback(t),Promise.reject(t)}let n={timestamp:this.time,target:this,type:"enabled"};this.emit("enabled",n),"function"==typeof e.callback&&e.callback(),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{let e=await this._updateInputsAndOutputs();return Promise.resolve({inputs:e[0],outputs:e[1]})}catch(e){return Promise.reject(e)}}async disable(){if(!this.supported)throw new Error("The Web MIDI API is not supported by your environment.");return this._destroyInputsAndOutputs().then(()=>{this.isNode&&navigator.close(),this.interface&&(this.interface.onstatechange=void 0),this.interface=null;let e={timestamp:this.time,target:this,type:"disabled"};this.emit("disabled",e),this.removeListener()})}getInputById(e){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return!1}for(let t=0;t<this.inputs.length;t++)if(this.inputs[t].id===e.toString())return this.inputs[t];return!1}getInputByName(e){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return!1;e=e.toString()}for(let t=0;t<this.inputs.length;t++)if(~this.inputs[t].name.indexOf(e))return this.inputs[t];return!1}getOutputByName(e){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return!1;e=e.toString()}for(let t=0;t<this.outputs.length;t++)if(~this.outputs[t].name.indexOf(e))return this.outputs[t];return!1}getOutputById(e){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return!1}for(let t=0;t<this.outputs.length;t++)if(this.outputs[t].id===e.toString())return this.outputs[t];return!1}getNoteNumberByName(e){this.validation&&"string"!=typeof e&&(e="");let t=e.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)/i);if(!t)return!1;let n={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[t[1].toUpperCase()],r=12*(parseInt(t[3])+1-Math.floor(this.octaveOffset))+n;return t[2].toLowerCase().indexOf("b")>-1?r-=t[2].length:t[2].toLowerCase().indexOf("#")>-1&&(r+=t[2].length),!(r<0||r>127)&&r}noteNameToNumber(e){return console.warn("The noteNameToNumber() method has been deprecated. Use getNoteNumberByName() instead."),this.getNoteNumberByName(e)}getOctave(e){return this.validation&&(e=parseInt(e)),!isNaN(e)&&e>=0&&e<=127&&Math.floor(e/12-1)+this.octaveOffset}sanitizeChannels(e){let t;if(this.validation)if("all"===e)t=["all"];else if("none"===e)return[];return t=Array.isArray(e)?e:[e],t.indexOf("all")>-1&&(t=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),t.map((function(e){return parseInt(e)})).filter((function(e){return e>=1&&e<=16}))}toMIDIChannels(e){return this.validation&&console.warn("The toMIDIChannels() method has been deprecated. Use sanitizeChannels() instead."),this.sanitizeChannels(e)}guessNoteNumber(e){let t=!1;return Number.isInteger(e)&&e>=0&&e<=127||parseInt(e)>=0&&parseInt(e)<=127?t=parseInt(e):("string"==typeof e||e instanceof String)&&(t=this.getNoteNumberByName(e)),!1!==t&&t}getValidNoteArray(e,t={}){let n=[];return Array.isArray(e)||(e=[e]),e.forEach(e=>{n.push(this.getNoteObject(e,t))}),n}getNoteObject(e,t){if(e instanceof SA)return e;{let n=this.guessNoteNumber(e);if(!1!==n)return new SA(n,t);throw new TypeError(`The input could not be parsed as a note (${e})`)}}convertToTimestamp(e){let t=!1,n=parseFloat(e);return!isNaN(n)&&("string"==typeof e&&"+"===e.substring(0,1)?n>=0&&(t=this.time+n):n>=0&&(t=n),t)}async _destroyInputsAndOutputs(){let e=[];return this.inputs.forEach(t=>e.push(t.destroy())),this.outputs.forEach(t=>e.push(t.destroy())),Promise.all(e).then(()=>{this._inputs=[],this._outputs=[]})}_onInterfaceStateChange(e){this._updateInputsAndOutputs();let t={timestamp:e.timeStamp,type:e.port.state};this.interface&&"connected"===e.port.state?"output"===e.port.type?(t.port=this.getOutputById(e.port.id),t.target=t.port):"input"===e.port.type&&(t.port=this.getInputById(e.port.id),t.target=t.port):(t.port={connection:"closed",id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},t.target=t.port),this.emit(e.port.state,t)}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){let e=[];for(let e=0;e<this._inputs.length;e++){let t=!0,n=this.interface.inputs.values();for(let r=n.next();r&&!r.done;r=n.next())if(this._inputs[e]._midiInput===r.value){t=!1;break}t&&this._inputs.splice(e,1)}return this.interface&&this.interface.inputs.forEach(t=>{let n=!0;for(let e=0;e<this._inputs.length;e++)this._inputs[e]._midiInput===t&&(n=!1);if(n){let n=new kA(t);this._inputs.push(n),e.push(n.open())}}),Promise.all(e)}async _updateOutputs(){let e=[];for(let e=0;e<this._outputs.length;e++){let t=!0,n=this.interface.outputs.values();for(let r=n.next();r&&!r.done;r=n.next())if(this._outputs[e]._midiOutput===r.value){t=!1;break}t&&(this._outputs[e].close(),this._outputs.splice(e,1))}return this.interface&&this.interface.outputs.forEach(t=>{let n=!0;for(let e=0;e<this._outputs.length;e++)this._outputs[e]._midiOutput===t&&(n=!1);if(n){let n=new NA(t);this._outputs.push(n),e.push(n.open())}}),Promise.all(e)}get enabled(){return null!==this.interface}get inputs(){return this._inputs}get isNode(){return"[object process]"===Object.prototype.toString.call(void 0!==bA?bA:0)}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be a valid number.");this._octaveOffset=e}get outputs(){return this._outputs}get supported(){return!(!navigator||!navigator.requestMIDIAccess)}get sysexEnabled(){return!(!this.interface||!this.interface.sysexEnabled)}get time(){return performance.now()}get MIDI_CHANNEL_VOICE_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,nrpn:11,programchange:12,channelaftertouch:13,pitchbend:14}}get MIDI_CHANNEL_MESSAGES(){return console.warn("MIDI_CHANNEL_MESSAGES has been deprecated. Use MIDI_CHANNEL_VOICE_MESSAGES instead."),this.MIDI_CHANNEL_VOICE_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}get MIDI_CONTROL_CHANGE_MESSAGES(){return{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101}}get MIDI_INTERFACE_EVENTS(){return["connected","disconnected"]}get MIDI_NRPN_MESSAGES(){return{entrymsb:6,entrylsb:38,increment:96,decrement:97,paramlsb:98,parammsb:99,nullactiveparameter:127}}get MIDI_REGISTERED_PARAMETER(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}get MIDI_SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}get NOTES(){return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}};CA.constructor=null;const EA=async e=>async function(e){return new Promise(async(t,n)=>{const r=()=>{e.width=e.naturalWidth,e.height=e.naturalHeight};e.naturalWidth>0?(r(),t(e)):(e.onloaded=()=>{r(),t(e)},e.onerror=e=>n(e))})}(e),TA=document.querySelector("canvas"),_A=TA.getContext("2d");let AA=TA.width,RA=TA.height;const $A=(e,t=4,n="red",r=!0)=>{_A.fillStyle=n,_A.strokeStyle=n,_A.moveTo(e[0][0],e[0][1]),_A.beginPath();for(let n=0,s=e.length;n<s;n++){const s=e[n][0],a=e[n][1];_A.arc(s,a,t,0,zT),r&&_A.lineTo(s,a)}_A.fill(),r&&_A.stroke()},FA=(e,t="blue")=>{_A.fillStyle=t;const n=e[0],r=e[1],s=e[2],a=e[3],i=e[4];_A.strokeWidth=0;_A.beginPath(),_A.fillStyle="blue",_A.arcTo(s[0],s[1],r[0],r[1],6),_A.arcTo(r[0],r[1],i[0],i[1],6),_A.arcTo(i[0],i[1],a[0],a[1],6),_A.arcTo(a[0],a[1],s[0],s[1],6),_A.fill();_A.beginPath(),_A.fillStyle="black",_A.arc(n[0],n[1],2,0,zT),_A.fill()},DA=(e,t,n=5,r="blue",s=!1)=>{_A.fillStyle=r,_A.beginPath(),_A.arc(t[0],t[1],n,0,zT),_A.fill(),_A.beginPath(),_A.arc(e[0],e[1],n,0,zT),_A.fill(),_A.beginPath(),_A.moveTo(e[0],e[1]),_A.strokeStyle="orange",_A.fillStyle="orange",_A.lineTo(t[0],t[1]),s&&(_A.stroke(),_A.fillStyle=O_,_A.font="12px Oxanium",_A.textAlign="center",_A.fillText("".concat(Math.floor(mouthRange),"px"),e[0],e[1]-20))},MA=(e,t="yellow",n=!0)=>{const{annotations:r,mouthRange:s,mouthWidth:a,mouthOpen:i}=e,{lipsUpperInner:o,lipsLowerInner:u}=r,l=[o,u],c=o[5],h=u[5],p=_A.createLinearGradient(0,0,a,s);p.addColorStop(0,t),p.addColorStop(.5,F_),p.addColorStop(1,t),_A.beginPath(),_A.moveTo(o[0][0],o[0][1]),_A.fillStyle=p;for(let e=0,t=l.length;e<t;e++){const t=l[e];for(let e=0,n=t.length;e<n;e++){const n=t[e][0],r=t[e][1];_A.lineTo(n,r)}}return _A.fill(),n&&DA(h,c,5),{lipUpperMiddle:c,lipLowerMiddle:h}},OA=(e,t,n="",r="10px",s="center")=>{_A.font="900 ".concat(r," Oxanium"),_A.textAlign=s,_A.fillStyle=$_,_A.strokeStyle=F_,_A.strokeText("".concat(n),e,t),_A.fillText("".concat(n),e,t)},LA=(e,t,n=[],r="10px",s=20)=>{let a=t;for(const t of n)OA(e,a,t,r,"left"),a+=s},BA=(e,t,n="")=>{const{bottomRight:r,topLeft:s}=e,a="".concat(t.toUpperCase()," - ").concat(n);OA(s[0],s[1],a,"24px")},PA=function(e){return e*e};let zA=0;const VA=e=>zA+=e;let WA=0;const UA=(e,t=0)=>{let n=t;const r=e.length-1;return{reset:()=>(n=0,e[n]),previous:()=>{const t=n-1;return n=t<0?r:t,e[n]},next:()=>{const t=n+1;return n=t>r?0:t,e[n]},position:t=>e[t],length:e.length,current:()=>e[n],set:t=>e=t}},GA=[[255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0]],HA=[[0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0]],jA=[[255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0]],qA=(UA(GA[0]),UA(HA[0]),UA(jA[0]),(e,t,...n)=>{const r=e.next();return r>0&&(t(r,...n),!0)}),KA=["No faces found!","Look at me and open your mouth","Move your face close to the screen","Try and put it in the centre","Make sure you allowed the camera!"],XA=["Welcome to the interFACE","Smile at the screen to begin...","Tilt your head forwards and backwards to change octave","Roll your head left and right to change pitch","Then open you mouth to make it louder!","Change instruments by tapping your face on screen","or hold your finger down to see all instruments","Facing left plays the black keys","Facing right plays the white keys","Connect a MIDI instrument and click the MIDI button","Use your eyes to shape the sound","To play the MIDI instrument with your head","Change tempo and quantize using the secret keys","","","","","","","","","","","Arrow Up - add more bars","Arrow Down - remove a bar","Arrow Left - previous instrument","Arrow Right - next instrument","A - 808","S - Snare","D - Closed Hat","Q - Clack","W - Cowbell","","","","","","","","","","","","","","","","","","","","","OMG I can't believe you are still here!","Secret Keys are as follows","B - Play percussive accompanyment (alpha)","TAB - show more info on screen"],ZA=e=>KA[e%(KA.length-1)],YA=["a","b","c"].map(e=>"person-".concat(e)),QA={...B_,delayTime:.14,delayLength:10,mouseHoldDuration:.6,feedback:.1,mouthCutOff:.2,mouthSilence:.05,volumeRate:.7,precision:3,ease:e=>e};class JA{constructor(e,t,n,r={}){this.options=Object.assign({},QA,r),this.name=e,this.counter=0,this.instrumentLoading=!1,this.data=null,this.audioContext=t,this.active=!1,this.tracks=0,this.octave=4,this.midiActive=!1,this.midiChannel="all",this.hue=r.hue||360*Math.random(),this.saturation=40,this.precision=Math.pow(10,parseInt(this.options.precision)),this.singing=!1,this.isMouthOpen=!1,this.mouseDownAt=-1,this.lastNoteName="A0",this.debug=r.debug||!1,this.mouthScale=((e,t=1)=>{const n=1/(t-e);return t=>n*(t-e)})(this.options.mouthCutOff),this.stereoNode=t.createStereoPanner();const s=t.createDelay(this.options.delayLength),a=t.createGain();s.delayTime.value=this.options.delayTime,a.gain.value=this.options.feedback,this.gainNode=t.createGain(),this.gainNode.gain.value=0,this.stereoNode.connect(this.gainNode),this.gainNode.connect(n),this.button=document.getElementById(e),this.button.addEventListener("mousedown",e=>{this.mouseDownAt=t.currentTime;const n=()=>{this.mouseDownFor<this.options.mouseHoldDuration?requestAnimationFrame(n):this.isMouseDown&&(this.mouseDownAt=-1,this.showForm())};n(),e.preventDefault()}),this.button.addEventListener("mouseup",e=>{this.mouseDownFor;this.instrumentLoading||this.loadInstrument(XT()),this.mouseDownAt=-1,e.preventDefault()}),this.button.addEventListener("mouseover",e=>{this.isMouseOver=!0}),this.button.addEventListener("mouseout",e=>{this.isMouseOver=!1})}get mouseDownFor(){return this.audioContext.currentTime-this.mouseDownAt}get isMouseDown(){return this.mouseDownAt>-1}get isMouseHeld(){return this.options.mouseHoldDuration<this.mouseDownFor}get controlsID(){return"".concat(this.name,"-controls")}get controls(){return document.getElementById(this.controlsID)}get instrumentName(){return this.instrument?this.instrument.name:"loading"}get instrumentTitle(){return this.instrument?this.instrument.title:"loading"}get instrumentIndex(){return UT.indexOf(this.instrumentName)}get hasMIDI(){return this.midi&&this.midiChannel}update(e){this.counter++,this.data=e}draw(e,t=!0){if(!e&&!this.prediction)return;e||(e=this.prediction);let n=this.hue;this.instrumentLoading&&(n+=120);let r=this.saturation;const s=this.options;s.dots=n,s.mouth="hsla(".concat((n+30)%360,",").concat(r,"%,40%,0.8)"),s.mouthClosed="hsla(".concat((n+30)%360,",").concat(r,"%,10%,0.99)"),s.lipsUpperInner="hsla(".concat((n+50)%360,",").concat(r,"%,50%,1)"),s.lipsLowerInner="hsla(".concat((n+50)%360,",").concat(r,"%,50%,1)"),s.midwayBetweenEyes="hsla(".concat((n+270)%360,",").concat(r,"%,50%,1)"),s.leftEyeLower0="hsla(".concat((n+300)%360,",").concat(r,"%,50%,0.8)"),s.rightEyeLower0="hsla(".concat((n+300)%360,",").concat(r,"%,50%,0.8)"),s.leftEyeIris="hsla(".concat((n+90)%360,",").concat(r,"%,50%,1)"),s.rightEyeIris="hsla(".concat((n+90)%360,",").concat(r,"%,50%,1)"),((e,t=60,n=3,r=!1,s=!0)=>{const{scaledMesh:a}=e,i=a.length;for(let e=0;e<i;e++){const o=a[e][0],u=a[e][1],l=1-(a[e][2]+45)/45,c=VT(n*PA(l),1,n),h=VT(l,.5,1);if(_A.beginPath(),s&&e===zA%i)_A.stroke(),_A.font="22px Oxanium",_A.textAlign="center",_A.fillStyle=F_,_A.fillText("#".concat(e),o+c+1,u),_A.fillStyle="hsla(0,90%,70%,1)",_A.arc(o,u,3*c,0,zT);else{const n=r?(WA+++t+360*e/i)%360:t;_A.fillStyle="hsla(".concat(n,",70%,50%,").concat(h,")"),_A.arc(o,u,c,0,zT)}_A.fill()}})(e,s.dots,3,this.instrumentLoading,this.debug),((e,t=B_,n=!1,r=!1,s=!1)=>{const{scaledMesh:a,annotations:i}=e,{lipsUpperInner:o,lipsLowerInner:u}=i;MA(e,r&&n?t.mouth:t.mouthClosed,s);const{leftEyeIris:l,rightEyeIris:c}=i;FA(l,t.leftEyeIris),FA(c,t.rightEyeIris)})(e,s,this.singing,this.isMouthOpen,this.debug);const{bottomRight:a,topLeft:i}=e.boundingBox,o=Math.abs(a[0]-i[0]),u=Math.abs(a[1]-i[1]);if(this.counter%12==0&&(this.button.style.setProperty("--person-a-x","".concat(a[0])),this.button.style.setProperty("--person-a-y",i[1]),this.button.style.setProperty("--person-a-w",o),this.button.style.setProperty("--person-a-h",u)),!t)return;const{silhouette:l}=e.annotations;if(this.isMouseOver||this.instrumentLoading)if(this.isMouseDown&&!this.instrumentLoading){const t=1-this.mouseDownFor/this.options.mouseHoldDuration,r=100-Math.ceil(100*t);this.isMouseHeld?(BA(e.boundingBox,this.instrumentTitle,"Select"),$A(l,4,"hsla(".concat(n,",50%,").concat(r,"%,0.3)"),!0),LA(e.boundingBox.topLeft[0],e.boundingBox.topLeft[1]+40,["Press me"],"14px")):(BA(e.boundingBox,this.instrumentTitle,"".concat(100-r)),$A(l,4,"hsla(".concat(n,",50%,").concat(r,"%,0.5)"),!0),LA(e.boundingBox.topLeft[0],e.boundingBox.topLeft[1]+40,["Hold me to see all instruments"],"14px"))}else BA(e.boundingBox,this.instrumentTitle,""),$A(l,4,"hsla("+n+",50%,50%,0.3)",!0);else if(this.instrumentLoading)BA(e.boundingBox,this.instrumentTitle,"loading...");else{const t=(this.debug," ".concat(this.lastNoteName));if(BA(e.boundingBox,this.instrumentTitle,t+(this.singing?WT[this.counter%(WT.length-1)]:this.isMouthOpen?"~":"")),this.debug){const t=["gain:".concat(this.gainNode.gain.value.toFixed(2)),"pitch:".concat(e.pitch.toFixed(3)),"roll:".concat(e.roll.toFixed(3)),"yaw:".concat(e.yaw.toFixed(3)),"eyes:".concat(e.eyeDirection.toFixed(3)),"mouth:".concat(e.mouthOpen.toFixed(3)),"dims:".concat(e.mouthWidth.toFixed(2),"x").concat(e.mouthRange.toFixed(2)),(e.lookingRight,"left")];LA(e.boundingBox.topLeft[0],e.boundingBox.topLeft[1]+40,t,"14px")}}}sing(){if(!this.data||this.tracks>18)return;const e=this.data,t=this.options,n=e.mouthOpen,r=e.yaw,s=VT(.5*(e.pitch+1),0,1),a=VT(e.roll+.5,0,1),i=VT(e.eyeDirection,-1,1),o=VT(n,0,1),u=(t.ease(o),Math.round(7*s));this.octave=u;const l=e.lookingRight,c=((e,t=3,n=!1)=>{let r,s;return n?(r=Math.floor(e*(qT.length-1)),s=qT[r]):(r=Math.floor(e*(KT.length-1)),s=KT[r]),"".concat(s).concat(VT(t,1,7))})(a,this.octave,l);let h;if(this.lastNoteName=c,this.hue=360*a,this.saturation=100*n,this.stereoNode.pan.value=i,this.instrument&&o>=t.mouthCutOff){const e=this.instrument[c];e||console.log("note not found!",{noteName:c,roll:a,octave:this.octave,isMinor:l}),this.tracks++;((e,t=0,n=t_,r={loop:!1})=>new Promise((s,a)=>{const i=ZT.createBufferSource();i.buffer=e,i.loop=r.loop,i.connect(n),i.onended=()=>{i.disconnect(),u_=!1,s()},i.onerror=e=>{i.disconnect(),u_=!1,a(e)},"suspended"===ZT.state&&ZT.resume(),0==t?i.start():i.start(0,ZT.currentTime-t),u_=!0}))(e,0,this.stereoNode).then(()=>{this.active=!1,this.tracks--});if(h=this.mouthScale(o),h=t.ease(h),h=Math.round(h*this.precision)/this.precision,this.hasMIDI){const e={channels:this.midiChannel,attack:o};this.midi.playNote(c,e),this.midiActive=!0}this.singing=!0,this.isMouthOpen=!0,this.active=!0}else o>t.mouthSilence&&o<t.mouthCutOff?(h=0,this.singing=!1,this.isMouthOpen=!0):(h=0,this.singing=!1,this.isMouthOpen=!1,this.hasMIDI&&(this.midi.stopNote(c),this.midiActive=!1));return this.hasMIDI&&0!==i&&this.midi.setPitchBend(i),this.gainNode.gain.value=this.gainNode.gain.value+(h-this.gainNode.gain.value)*t.volumeRate,{yaw:r,pitch:s,lipPercentage:n}}async loadRandomInstrument(e){return await this.loadInstrument(XT(),e)}async loadPreviousInstrument(e){const t=this.index,n=t-1<0?0:t-1;return await this.loadInstrument(UT[n],e)}async loadNextInstrument(e){const t=this.index,n=t+1>=UT.length?0:t+1;return await this.loadInstrument(UT[n],e)}async loadInstrument(e,t){return this.instrumentLoading=!0,this.instrument=await(async(e="alto_sax-mp3",t="./FluidR3_GM",n)=>{const r={title:GT(e),name:e},s=await Promise.all(f_(e,t));return p_.forEach((e,t)=>{r[e.split(".")[0]]=s[t]}),r})(e),this.instrumentLoading=!1,t&&t(e),this.button.dispatchEvent(new CustomEvent("instrumentchange",{detail:{instrument:this.instrument,instrumentName:e}})),e}setMIDI(e,t="all"){this.midiChannel=t,this.midi=e,console.log("MIDI set for person",this,"Channel:"+this.midiChannel,{midi:e,channel:t,hasMIDI:this.hasMIDI})}onInstrumentInput(e){const t=e.target.id;this.hideForm(),this.loadInstrument(t),e.preventDefault()}showForm(){this.controls.innerHTML=Z_();this.controls.querySelectorAll("input").forEach(e=>e.addEventListener("change",e=>this.onInstrumentInput(e)),!1);const e=document.getElementById(this.instrumentName);e?e.focus():this.controls.focus()}hideForm(){this.controls.innerHTML=""}}var eR,tR={};function nR(e,t,n,r,s,a){if("undefined"!=typeof window)return arguments.length>1?document.cookie=e+"="+encodeURIComponent(t)+(n?"; expires="+new Date(+new Date+1e3*n).toUTCString()+(r?"; path="+r:"")+(s?"; domain="+s:"")+(a?"; secure":""):""):decodeURIComponent((("; "+document.cookie).split("; "+e+"=")[1]||"").split(";")[0])}eR=tR,"object"==typeof tR?tR=function(e,t,n,r,s){for(t=t.split?t.split("."):t,r=0;r<t.length;r++)e=e?e[t[r]]:s;return e===s?n:e}:eR.dlv=function(e,t,n,r,s){for(t=t.split?t.split("."):t,r=0;r<t.length;r++)e=e?e[t[r]]:s;return e===s?n:e};var rR=nR,sR=nR;function aR(e){return nR(e,"",-1)}function iR(e){return(iR="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function oR(e){var t;try{void 0===(t=JSON.parse(e))&&(t=e),"true"===t&&(t=!0),"false"===t&&(t=!1),parseFloat(t)===t&&"object"!==iR(t)&&(t=parseFloat(t))}catch(n){t=e}return t}var uR="object"===("undefined"==typeof self?"undefined":iR(self))&&self.self===self&&self||"object"===(void 0===e?"undefined":iR(e))&&e.global===e&&e||void 0,lR=function(){try{if("undefined"==typeof localStorage||"undefined"==typeof JSON)return!1;localStorage.setItem("_t_","1"),localStorage.removeItem("_t_")}catch(e){return!1}return!0}(),cR=function(){try{nR("_c_","1");var e=-1!==document.cookie.indexOf("_c_");return nR("_c_","",-1),e}catch(e){return!1}}();function hR(e){return{cookie:oR(rR(e)),localStorage:oR(localStorage.getItem(e)),global:uR[e]||null}}function pR(e){return"string"==typeof e?e:e.storage}function dR(e){return lR&&(!e||"localStorage"===e)}function fR(e){return cR&&(!e||"cookie"===e)}var mR,gR={getItem:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e)return null;var n=pR(t);if("all"===n)return hR(e);if(dR(n)){var r=localStorage.getItem(e);if(r||"localStorage"===n)return oR(r)}if(fR(n)){var s=rR(e);if(s||"cookie"===n)return oR(s)}return uR[e]||null},setItem:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e||!t)return!1;var r=pR(n),s=JSON.stringify(t);if(dR(r)){var a=oR(localStorage.getItem(e));return localStorage.setItem(e,s),{value:t,oldValue:a,location:"localStorage"}}if(fR(r)){var i=oR(rR(e));return sR(e,s),{value:t,oldValue:i,location:"cookie"}}var o=uR[e];return uR[e]=t,{value:t,oldValue:o,location:"global"}},removeItem:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e)return!1;var n=pR(t);return dR(n)?(localStorage.removeItem(e),"localStorage"):fR(n)?(aR(e),"cookie"):(uR[e]=void 0,"global")}},yR=(mR=tR)&&mR.__esModule?mR.default:mR;function bR(e){return(bR="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function xR(e){return"function"==typeof e}function vR(e){return"string"==typeof e}function wR(e){return"boolean"==typeof e}function kR(e){if("object"!==bR(e)||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function IR(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(e){return null}}var NR="undefined"!=typeof document;function SR(e){return function(e){var t,n={},r=/([^&=]+)=?([^&]*)/g;for(;t=r.exec(e);){var s=IR(t[1]),a=IR(t[2]);"[]"===s.substring(s.length-2)?(s=s.substring(0,s.length-2),(n[s]||(n[s]=[])).push(a)):n[s]=""===a||a}for(var i in n){var o=i.split("[");o.length>1&&(CR(n,o.map((function(e){return e.replace(/[?[\]\\ ]/g,"")})),n[i]),delete n[i])}return n}(function(e){if(e){var t=e.match(/\?(.*)/);return t&&t[1]?t[1].split("#")[0]:""}return NR&&window.location.search.substring(1)}(e))}function CR(e,t,n){for(var r=t.length-1,s=0;s<r;++s){var a=t[s];a in e||(e[a]={}),e=e[a]}e[t[r]]=n}function ER(){for(var e="",t=0,n=4294967295*Math.random()|0;t++<36;){var r="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx"[t-1],s=15&n;e+="-"==r||"4"==r?r:("x"==r?s:3&s|8).toString(16),n=t%8==0?4294967295*Math.random()|0:n>>4}return e}var TR=function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}};var _R=function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)};var AR=function(){throw new TypeError("Invalid attempt to spread non-iterable instance")};var RR=function(e){return TR(e)||_R(e)||AR()};function $R(e,t){return e(t={exports:{}},t.exports),t.exports}var FR=$R((function(e){function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(r){return"function"==typeof Symbol&&"symbol"===t(Symbol.iterator)?e.exports=n=function(e){return t(e)}:e.exports=n=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":t(e)},n(r)}e.exports=n}));var DR=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e};function MR(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}var OR=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?MR(n,!0).forEach((function(t){DR(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):MR(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e},LR="@@redux/"+Math.random().toString(36),BR=function(){return"function"===("undefined"==typeof Symbol?"undefined":FR(Symbol))&&Symbol.observable||"@@observable"}();function PR(e,t,n){if("function"===FR(t)&&"undefined"===FR(n)&&(n=t,t=void 0),"undefined"!==FR(n)){if("function"!==FR(n))throw new Error("enhancer != function");return n(PR)(e,t)}if("function"!==FR(e))throw new Error("reducer != function");var r=e,s=t,a=[],i=a,o=!1;function u(){i===a&&(i=a.slice())}function l(){return s}function c(e){if("function"!==FR(e))throw new Error("Listener != function");var t=!0;return u(),i.push(e),function(){if(t){t=!1,u();var n=i.indexOf(e);i.splice(n,1)}}}function h(e){if(!kR(e))throw new Error("Act != obj");if("undefined"===FR(e.type))throw new Error("ActType undefined");if(o)throw new Error("Dispatch in reducer");try{o=!0,s=r(s,e)}finally{o=!1}for(var t=a=i,n=0;n<t.length;n++){(0,t[n])()}return e}return h({type:"@@redux/INIT"}),DR({dispatch:h,subscribe:c,getState:l,replaceReducer:function(e){if("function"!==FR(e))throw new Error("next reducer != function");r=e,h({type:"@@redux/INIT"})}},BR,(function(){var e=c;return DR({subscribe:function(t){if("object"!==FR(t))throw new TypeError("Observer != obj");function n(){t.next&&t.next(l())}return n(),{unsubscribe:e(n)}}},BR,(function(){return this}))}))}function zR(e,t){var n=t&&t.type;return"action "+(n&&n.toString()||"?")+"reducer "+e+" returns undefined"}function VR(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var s=t[r];"function"===FR(e[s])&&(n[s]=e[s])}var a,i=Object.keys(n);try{!function(e){Object.keys(e).forEach((function(t){var n=e[t],r=n(void 0,{type:"@@redux/INIT"});if("undefined"===FR(r)||"undefined"===FR(n(void 0,{type:LR})))throw new Error("reducer "+t+" undefined")}))}(n)}catch(e){a=e}return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;if(a)throw a;for(var r=!1,s={},o=0;o<i.length;o++){var u=i[o],l=n[u],c=e[u],h=l(c,t);if("undefined"===FR(h)){var p=zR(u,t);throw new Error(p)}s[u]=h,r=r||h!==c}return r?s:e}}function WR(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}function UR(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(n,r,s){var a,i=e(n,r,s),o=i.dispatch,u={getState:i.getState,dispatch:function(e){return o(e)}};return a=t.map((function(e){return e(u)})),o=WR.apply(void 0,RR(a))(i.dispatch),OR(OR({},i),{},{dispatch:o})}}}var GR=["bootstrap","params","campaign","initializeStart","initialize","initializeEnd","ready","resetStart","reset","resetEnd","pageStart","page","pageEnd","pageAborted","trackStart","track","trackEnd","trackAborted","identifyStart","identify","identifyEnd","identifyAborted","userIdChanged","registerPlugins","enablePlugin","disablePlugin","online","offline","setItemStart","setItem","setItemEnd","setItemAborted","removeItemStart","removeItem","removeItemEnd","removeItemAborted"],HR=["name","EVENTS","config","loaded"],jR=GR.reduce((function(e,t){return e[t]=t,e}),{registerPluginType:function(e){return"registerPlugin:".concat(e)},pluginReadyType:function(e){return"ready:".concat(e)}});function qR(e){return GR.includes(e)}var KR="__anon_id",XR="__user_id",ZR="__user_traits",YR=/^utm_/,QR=/^an_prop_/,JR=/^an_trait_/;function e$(e){var t=e.storage,n=t.setItem,r=t.getItem;return function(t){return function(s){return function(a){if(a.type===jR.bootstrap){var i=a.params,o=a.user;r(KR)||n(KR,o.anonymousId);var u=Object.keys(a.params);if(u.length){var l=i.an_uid,c=i.an_event,h=u.reduce((function(e,t){if(t.match(YR)||t.match(/^(d|g)clid/)){var n=t.replace(YR,""),r="campaign"===n?"name":n;e.campaign[r]=i[t]}return t.match(QR)&&(e.props[t.replace(QR,"")]=i[t]),t.match(JR)&&(e.traits[t.replace(JR,"")]=i[t]),e}),{campaign:{},props:{},traits:{}});t.dispatch(OR(OR({type:jR.params,raw:i},h),l?{userId:l}:{})),l&&setTimeout((function(){return e.identify(l,h.traits)}),0),c&&setTimeout((function(){return e.track(c,h.props)}),0),Object.keys(h.campaign).length&&t.dispatch({type:jR.campaign,campaign:h.campaign})}}return s(a)}}}}var t$="userId",n$="anonymousId";function r$(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(n.type===jR.setItemEnd){if(n.key===KR)return OR(OR({},t),{anonymousId:n.value});if(n.key===XR)return OR(OR({},t),{userId:n.value})}switch(n.type){case jR.identify:return Object.assign({},t,{userId:n.userId,traits:OR(OR({},t.traits),n.traits)});case jR.reset:return[t$,n$,"traits"].forEach((function(e){uR[a$(e)]=null})),[XR,KR,ZR].forEach((function(t){e.removeItem(t)})),Object.assign({},t,{userId:null,anonymousId:null,traits:{}});default:return t}}}function s$(e,t){return{userId:t.getItem(XR)||e.an_uid,anonymousId:t.getItem(KR)||e.an_aid||ER(),traits:t.getItem(ZR)||{}}}var a$=function(e){return"__TEMP__"+e};function i$(e){return function(t,n,r){var s=n.getState("user")[t];if(s)return s;if(r&&kR(r)&&r[t])return r[t];var a=s$({},e)[t];return a||(uR[a$(t)]?uR[a$(t)]:null)}}function o$(e){var t=e.storage,n=t.setItem,r=t.removeItem,s=t.getItem;return function(e){return function(t){return function(a){var i=a.userId,o=a.traits,u=a.options,l=a.callback;if(a.type===jR.reset&&([XR,ZR,KR].forEach((function(e){return r(e)})),[t$,n$,"traits"].forEach((function(e){uR[a$(e)]=void 0})),xR(l)&&l()),a.type===jR.identify){s(KR)||n(KR,ER());var c=s(XR),h=s(ZR)||{};c&&c!==i&&e.dispatch({type:jR.userIdChanged,old:{userId:c,traits:h},new:{userId:i,traits:o},options:u}),i&&n(XR,i),o&&n(ZR,OR(OR({},h),o))}return t(a)}}}}var u$=$R((function(e){var t=function(e){var t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},s=r.iterator||"@@iterator",a=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function o(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{o({},"")}catch(e){o=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var s=t&&t.prototype instanceof h?t:h,a=Object.create(s.prototype),i=new I(r||[]);return a._invoke=function(e,t,n){var r="suspendedStart";return function(s,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===s)throw a;return S()}for(n.method=s,n.arg=a;;){var i=n.delegate;if(i){var o=v(i,n);if(o){if(o===c)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var u=l(e,t,n);if("normal"===u.type){if(r=n.done?"completed":"suspendedYield",u.arg===c)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r="completed",n.method="throw",n.arg=u.arg)}}}(e,n,i),a}function l(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var c={};function h(){}function p(){}function d(){}var f={};f[s]=function(){return this};var m=Object.getPrototypeOf,g=m&&m(m(N([])));g&&g!==t&&n.call(g,s)&&(f=g);var y=d.prototype=h.prototype=Object.create(f);function b(e){["next","throw","return"].forEach((function(t){o(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){var r;this._invoke=function(s,a){function i(){return new t((function(r,i){!function r(s,a,i,o){var u=l(e[s],e,a);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==typeof h&&n.call(h,"__await")?t.resolve(h.__await).then((function(e){r("next",e,i,o)}),(function(e){r("throw",e,i,o)})):t.resolve(h).then((function(e){c.value=e,i(c)}),(function(e){return r("throw",e,i,o)}))}o(u.arg)}(s,a,r,i)}))}return r=r?r.then(i,i):i()}}function v(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,v(e,t),"throw"===t.method))return c;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var r=l(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,c;var s=r.arg;return s?s.done?(t[e.resultName]=s.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,c):s:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,c)}function w(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function k(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(w,this),this.reset(!0)}function N(e){if(e){var t=e[s];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,a=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return a.next=a}}return{next:S}}function S(){return{value:void 0,done:!0}}return p.prototype=y.constructor=d,d.constructor=p,p.displayName=o(d,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,o(e,i,"GeneratorFunction")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},b(x.prototype),x.prototype[a]=function(){return this},e.AsyncIterator=x,e.async=function(t,n,r,s,a){void 0===a&&(a=Promise);var i=new x(u(t,n,r,s),a);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},b(y),o(y,i,"Generator"),y[s]=function(){return this},y.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=N,I.prototype={constructor:I,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var o=n.call(a,"catchLoc"),u=n.call(a,"finallyLoc");if(o&&u){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(o){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var s=this.tryEntries[r];if(s.tryLoc<=this.prev&&n.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,c):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),c},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),k(n),c}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;k(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:N(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),c}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}}));function l$(e,t,n,r,s,a,i){try{var o=e[a](i),u=o.value}catch(e){return void n(e)}o.done?t(u):Promise.resolve(u).then(r,s)}var c$=function(e){return function(){var t=this,n=arguments;return new Promise((function(r,s){var a=e.apply(t,n);function i(e){l$(a,r,s,i,o,"next",e)}function o(e){l$(a,r,s,i,o,"throw",e)}i(void 0)}))}},h$={};function p$(e,t){h$[e]&&xR(h$[e])&&(h$[e](t),delete h$[e])}function d$(e,t,n){return new Promise((function(r,s){return t()?r(e):n<1?s(OR(OR({},e),{},{queue:!0})):(a=10,new Promise((function(e){return setTimeout(e,a)}))).then((function(a){return d$(e,t,n-10).then(r,s)}));var a}))}function f$(e,t,n){var r=t(),s=e.getState(),a=s.plugins,i=s.context,o=s.queue,u=s.user;if(!i.offline&&o&&o.actions&&o.actions.length){var l=o.actions.reduce((function(e,t,n){return a[t.plugin].loaded?(e.process.push(t),e.processIndex.push(n)):(e.requeue.push(t),e.requeueIndex.push(n)),e}),{processIndex:[],process:[],requeue:[],requeueIndex:[]});if(l.processIndex&&l.processIndex.length){l.processIndex.forEach((function(t){var s=o.actions[t],i=s.plugin,l=s.payload.type,c=r[i][l];if(c&&xR(c)){var h=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return[t$,n$].reduce((function(e,n){return g$(e,t,n)}),e)}(s.payload,u);c({payload:h,config:a[i].config,instance:n});var p="".concat(l,":").concat(i);e.dispatch(OR(OR({},h),{},{type:p,_:{called:p,from:"queueDrain"}}))}}));var c=o.actions.filter((function(e,t){return!~l.processIndex.indexOf(t)}));o.actions=c}}}function m$(e,t,n){return setInterval((function(){return f$(e,t,n)}),3e3)}function g$(e,t,n){return e.hasOwnProperty(n)&&!e[n]&&t[n]?Object.assign({},e,DR({},"".concat(n),t[n])):e}var y$=function(e){if(Array.isArray(e))return e};var b$=function(e,t){var n=[],r=!0,s=!1,a=void 0;try{for(var i,o=e[Symbol.iterator]();!(r=(i=o.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){s=!0,a=e}finally{try{r||null==o.return||o.return()}finally{if(s)throw a}}return n};var x$=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")};var v$=function(e,t){return y$(e)||b$(e,t)||x$()};function w$(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return Object.keys(e).filter((function(e){var r=n.plugins||{};return wR(r[e])?r[e]:!1!==r.all&&(!t[e]||!1!==t[e].enabled)})).map((function(t){return e[t]}))}var k$=/Start$/,I$=/^bootstrap/,N$=/^ready/;function S$(e,t,n,r,s){return C$.apply(this,arguments)}function C$(){return(C$=c$(u$.mark((function e(t,n,r,s,a){var i,o,u,l,c,h,p,d,f,m,g,y;return u$.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=xR(n)?n():n,o=t.type,u=o.replace(k$,""),!t._||!t._.called){e.next=5;break}return e.abrupt("return",t);case 5:return l=r.getState(),c=w$(i,l.plugins,t.options),o===jR.initializeStart&&t.fromEnable&&(c=Object.keys(l.plugins).filter((function(e){var n=l.plugins[e];return t.plugins.includes(e)&&!n.initialized})).map((function(e){return i[e]}))),h=c.map((function(e){return e.name})),p=D$(o,c,i),e.next=12,T$({action:t,data:{exact:p.before,namespaced:p.beforeNS},state:l,allPlugins:i,allMatches:p,instance:r,store:s,EVENTS:a});case 12:if(!O$(d=e.sent,h.length)){e.next=15;break}return e.abrupt("return",d);case 15:if(o!==u){e.next=19;break}f=d,e.next=22;break;case 19:return e.next=21,T$({action:OR(OR({},d),{},{type:u}),data:{exact:p.during,namespaced:p.duringNS},state:l,allPlugins:i,allMatches:p,instance:r,store:s,EVENTS:a});case 21:f=e.sent;case 22:if(!o.match(k$)){e.next=29;break}return m="".concat(u,"End"),e.next=26,T$({action:OR(OR({},f),{},{type:m}),data:{exact:p.after,namespaced:p.afterNS},state:l,allPlugins:i,allMatches:p,instance:r,store:s,EVENTS:a});case 26:g=e.sent,(y=E$(g))&&y({payload:g});case 29:return e.abrupt("return",d);case 30:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function E$(e){return!!e.meta&&Object.keys(e.meta).reduce((function(t,n){var r=e.meta[n];return xR(r)?r:t}),!1)}function T$(e){return _$.apply(this,arguments)}function _$(){return(_$=c$(u$.mark((function e(t){var n,r,s,a,i,o,u,l,c,h,p,d,f,m,g,y,b,x;return u$.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.data,r=t.action,s=t.instance,a=t.state,i=t.allPlugins,o=t.allMatches,u=t.store,l=t.EVENTS,c=a.plugins,h=a.context,p=r.type,d=p.match(k$),f=n.exact.map((function(e){return e.pluginName})),d&&(f=o.during.map((function(e){return e.pluginName}))),m=P$(s,f),g=n.exact.reduce((function(e,t){var n=t.pluginName,r=t.methodName,s=!1;return r.match(/^initialize/)||r.match(/^reset/)||(s=!c[n].loaded),h.offline&&r.match(/^(page|track|identify)/)&&(s=!0),e["".concat(n)]=s,e}),{}),e.next=10,n.exact.reduce(function(){var e=c$(u$.mark((function e(t,a,o){var u,l,h;return u$.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return u=a.pluginName,e.next=3,t;case 3:if(l=e.sent,!n.namespaced||!n.namespaced[u]){e.next=11;break}return e.next=7,n.namespaced[u].reduce(function(){var e=c$(u$.mark((function e(t,n,r){var a,o,l,h;return u$.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=function(e,t,n){return function(r,s){var a=n||t;return OR(OR({},e),{},{abort:{reason:r,plugins:s||[t],caller:p,from:a}})}},e.next=3,t;case 3:if(a=e.sent,n.method&&xR(n.method)){e.next=6;break}return e.abrupt("return",a);case 6:return z$(n.methodName,n.pluginName),e.next=9,n.method({payload:a,instance:s,abort:o(a,u,n.pluginName),config:R$(n.pluginName,c,i),plugins:c});case 9:return l=e.sent,h=kR(l)?l:{},e.abrupt("return",Promise.resolve(OR(OR({},a),h)));case 12:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),Promise.resolve(r));case 7:h=e.sent,l[u]=h,e.next=12;break;case 11:l[u]=r;case 12:return e.abrupt("return",Promise.resolve(l));case 13:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),Promise.resolve({}));case 10:return y=e.sent,e.next=13,n.exact.reduce(function(){var e=c$(u$.mark((function e(t,r,a){var o,l,h,f,b,x,v,w,k,I,N,S;return u$.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=n.exact.length===a+1,l=r.pluginName,h=i[l],e.next=5,t;case 5:if(f=e.sent,b=y[l]?y[l]:{},d&&(b=f),!M$(b,l)){e.next=11;break}return A$({data:b,method:p,instance:s,pluginName:l,store:u}),e.abrupt("return",Promise.resolve(f));case 11:if(!M$(f,l)){e.next=14;break}return o&&A$({data:f,method:p,instance:s,store:u}),e.abrupt("return",Promise.resolve(f));case 14:if(!g.hasOwnProperty(l)||!0!==g[l]){e.next=17;break}return u.dispatch({type:"queue",plugin:l,payload:b,_:{called:"queue",from:"queueMechanism"}}),e.abrupt("return",Promise.resolve(f));case 17:return x=m(y[l],i[l]),e.next=20,h[p]({abort:x.abort,payload:b,instance:s,config:R$(l,c,i),plugins:c});case 20:return v=e.sent,w=kR(v)?v:{},k=OR(OR({},f),w),M$(I=y[l],l)?A$({data:I,method:p,instance:s,pluginName:l,store:u}):(N="".concat(p,":").concat(l),(N.match(/:/g)||[]).length<2&&!p.match(I$)&&!p.match(N$)&&(S=d?k:b,s.dispatch(OR(OR({},S),{},{type:N,_:{called:N,from:"submethod"}})))),e.abrupt("return",Promise.resolve(k));case 26:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),Promise.resolve(r));case 13:if(b=e.sent,p.match(k$)||p.match(/^registerPlugin/)||p.match(N$)||p.match(I$)||p.match(/^params/)||p.match(/^userIdChanged/)){e.next=21;break}if(l.plugins.includes(p),!b._||b._.originalAction!==p){e.next=18;break}return e.abrupt("return",b);case 18:x=OR(OR({},b),{_:{originalAction:b.type,called:b.type,from:"engineEnd"}}),O$(b,n.exact.length)&&!p.match(/End$/)&&(x=OR(OR({},x),{type:b.type+"Aborted"})),u.dispatch(x);case 21:return e.abrupt("return",b);case 22:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function A$(e){var t=e.data,n=e.method,r=(e.instance,e.pluginName),s=n+"Aborted"+(r?":"+r:"");e.store.dispatch(OR(OR({},t),{},{type:s,_:{called:s,from:"abort"}}))}function R$(e,t,n){var r=t[e]||n[e];return r&&r.config?r.config:{}}function $$(e,t){return t.reduce((function(t,n){return n[e]?t.concat({methodName:e,pluginName:n.name,method:n[e]}):t}),[])}function F$(e,t){var n=function(e){return e.replace(k$,"")}(e),r=t?":".concat(t):"";return["".concat(e).concat(r),"".concat(n).concat(r),"".concat(n,"End").concat(r)]}function D$(e,t,n){var r=F$(e).map((function(e){return $$(e,t)}));return t.reduce((function(n,r){var s=r.name,a=F$(e,s).map((function(e){return $$(e,t)})),i=v$(a,3),o=i[0],u=i[1],l=i[2];return o.length&&(n.beforeNS[s]=o),u.length&&(n.duringNS[s]=u),l.length&&(n.afterNS[s]=l),n}),{before:r[0],beforeNS:{},during:r[1],duringNS:{},after:r[2],afterNS:{}})}function M$(e,t){var n=e.abort;return!!n&&(!0===n||(B$(n,t)||n&&B$(n.plugins,t)))}function O$(e,t){var n=e.abort;if(!n)return!1;if(!0===n||vR(n))return!0;var r=n.plugins;return L$(n)&&n.length===t||L$(r)&&r.length===t}function L$(e){return Array.isArray(e)}function B$(e,t){return!(!e||!L$(e))&&e.includes(t)}function P$(e,t){return function(n,r,s){var a=r.config,i=r.name,o="".concat(i,".").concat(n.type);s&&(o=s.event);var u=n.type.match(k$)?function(e,t,n,r,s){return function(a,i){var o=r?r.name:e,u=i&&L$(i)?i:n;if(r&&(!(u=i&&L$(i)?i:[e]).includes(e)||1!==u.length))throw new Error("Method ".concat(t," can only abort ").concat(e," plugin. ").concat(JSON.stringify(u)," input valid"));return OR(OR({},s),{},{abort:{reason:a,plugins:u,caller:t,_:o}})}}(i,o,t,s,n):function(e,t){return function(){throw new Error(e.type+" action not cancellable. Remove abort in "+t)}}(n,o);return{payload:W$(n),instance:e,config:a||{},abort:u}}}function z$(e,t){var n=V$(e);if(n&&n.name===t){var r=V$(n.method),s=r?"or "+r.method:"";throw new Error([t+" plugin is calling method "+e,"Plugins cant call self","Use ".concat(n.method," ").concat(s," in ").concat(t," plugin insteadof ").concat(e)].join("\n"))}}function V$(e){var t=e.match(/(.*):(.*)/);return!!t&&{method:t[1],name:t[2]}}function W$(e){return Object.keys(e).reduce((function(t,n){return"type"===n||(kR(e[n])?t[n]=Object.assign({},e[n]):t[n]=e[n]),t}),{})}function U$(e,t,n){var r={};return function(s){return function(a){return function(){var i=c$(u$.mark((function i(o){var u,l,c,h,p,d,f,m,g,y,b,x;return u$.wrap((function(i){for(;;)switch(i.prev=i.next){case 0:if(u=o.type,l=o.abort,c=o.plugins,h=o,!l){i.next=4;break}return i.abrupt("return",a(o));case 4:if(u===jR.enablePlugin&&s.dispatch({type:jR.initializeStart,plugins:c,disabled:[],fromEnable:!0,ts:o.ts}),u===jR.disablePlugin&&setTimeout((function(){p$(o.ts)}),0),u===jR.initializeEnd&&(p=t(),d=Object.keys(p),f=d.filter((function(e){return c.includes(e)})).map((function(e){return p[e]})),m=[],g=[],y=o.disabled,b=f.map((function(e){var t=e.loaded,n=e.name;return d$(e,t,1e4).then((function(t){return r[n]||(s.dispatch({type:jR.pluginReadyType(n),name:n,events:Object.keys(e).filter((function(e){return!HR.includes(e)}))}),r[n]=!0),m=m.concat(n),e})).catch((function(e){if(e instanceof Error)throw new Error(e);return g=g.concat(e.name),e}))})),Promise.all(b).then((function(e){var t={plugins:m,failed:g,disabled:y};setTimeout((function(){d.length===b.length+y.length&&s.dispatch(OR(OR({},{type:jR.ready}),t)),p$(o.ts,t)}),0)}))),u===jR.bootstrap){i.next=13;break}return/^ready:([^:]*)$/.test(u)&&setTimeout((function(){return f$(s,t,e)}),0),i.next=11,S$(o,t,e,s,n);case 11:return x=i.sent,i.abrupt("return",a(x));case 13:return i.abrupt("return",a(h));case 14:case"end":return i.stop()}}),i)})));return function(e){return i.apply(this,arguments)}}()}}}function G$(){return(new Date).getTime()}function H$(e){return function(t){return function(t){return function(n){var r=n.type,s=n.key,a=n.value,i=n.options;if(r===jR.setItem||r===jR.removeItem){if(n.abort)return t(n);r===jR.setItem?e.setItem(s,a,i):e.removeItem(s,i)}return t(n)}}}}var j$,q$,K$,X$,Z$=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},Y$=function e(){var t=this;Z$(this,e),DR(this,"before",[]),DR(this,"after",[]),DR(this,"addMiddleware",(function(e,n){t[n]=t[n].concat(e)})),DR(this,"removeMiddleware",(function(e,n){var r=t[n].findIndex((function(t){return t===e}));-1!==r&&(t[n]=[].concat(RR(t[n].slice(0,r)),RR(t[n].slice(r+1))))})),DR(this,"dynamicMiddlewares",(function(e){return function(n){return function(r){return function(s){var a={getState:n.getState,dispatch:function(e){return n.dispatch(e)}},i=t[e].map((function(e){return e(a)}));return WR.apply(void 0,RR(i))(r)(s)}}}}))};function Q$(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0,r={};if("initialize:aborted"===n.type)return t;if(/^registerPlugin:([^:]*)$/.test(n.type)){var s=J$(n.type,"registerPlugin"),a=e()[s];if(!a||!s)return t;var i=n.enabled;return r[s]={enabled:i,initialized:!!i&&Boolean(!a.initialize),loaded:!!i&&Boolean(a.loaded()),config:a.config||{}},OR(OR({},t),r)}if(/^initialize:([^:]*)$/.test(n.type)){var o=J$(n.type,jR.initialize),u=e()[o];return u&&o?(r[o]=OR(OR({},t[o]),{initialized:!0,loaded:Boolean(u.loaded())}),OR(OR({},t),r)):t}if(/^ready:([^:]*)$/.test(n.type))return r[n.name]=OR(OR({},t[n.name]),{loaded:!0}),OR(OR({},t),r);switch(n.type){case jR.disablePlugin:return OR(OR({},t),eF(n.plugins,!1,t));case jR.enablePlugin:return OR(OR({},t),eF(n.plugins,!0,t));default:return t}}}function J$(e,t){return e.substring(t.length+1,e.length)}function eF(e,t,n){return e.reduce((function(e,r){return e[r]=OR(OR({},n[r]),{enabled:t}),e}),n)}j$=function(){if(!NR)return!1;var e=navigator.appVersion;return~e.indexOf("Win")?"Windows":~e.indexOf("Mac")?"MacOS":~e.indexOf("X11")?"UNIX":~e.indexOf("Linux")?"Linux":"Unknown OS"}(),q$=NR?document.referrer:null,K$=function(){if(NR){var e=navigator,t=e.language,n=e.languages,r=e.userLanguage;return r||(n&&n.length?n[0]:t)}}(),X$=function(){try{return Intl.DateTimeFormat().resolvedOptions().timeZone}catch(e){}}();var tF={initialized:!1,sessionId:ER(),app:null,version:null,debug:!1,offline:!!NR&&!navigator.onLine,os:{name:j$},userAgent:NR?navigator.userAgent:"node",library:{name:"analytics",version:"0.9.2"},timezone:X$,locale:K$,campaign:{},referrer:q$};function nF(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:tF,t=arguments.length>1?arguments[1]:void 0,n=e.initialized,r=t.type,s=t.campaign;switch(r){case jR.campaign:return OR(OR({},e),{campaign:s});case jR.offline:return OR(OR({},e),{offline:!0});case jR.online:return OR(OR({},e),{offline:!1});default:return n?e:OR(OR(OR({},tF),e),{initialized:!0})}}var rF=["plugins","reducers","storage"];function sF(e){return Object.keys(e).reduce((function(t,n){return rF.includes(n)||(t[n]=e[n]),t}),{})}function aF(e){var t=e;try{t=JSON.parse(JSON.stringify(e))}catch(e){}return t}var iF=/#.*$/;function oF(e){var t=/(http[s]?:\/\/)?([^\/\s]+\/)(.*)/g.exec(e);return"/"+(t&&t[3]?t[3].split("?")[0].replace(iF,""):"")}function uF(e){var t=function(){if(NR)for(var e,t=document.getElementsByTagName("link"),n=0;e=t[n];n++)if("canonical"===e.getAttribute("rel"))return e.getAttribute("href")}();return t?t.match(/\?/)?t:t+e:window.location.href.replace(iF,"")}var lF=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!NR)return e;var t=document,n=t.title,r=t.referrer,s=window,a=s.location,i=s.innerWidth,o=s.innerHeight,u=a.hash,l=a.search,c=uF(l),h={title:n,url:c,path:oF(c),hash:u,search:l,width:i,height:o};return r&&""!==r&&(h.referrer=r),OR(OR({},h),e)},cF={last:{},history:[]};function hF(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:cF,t=arguments.length>1?arguments[1]:void 0,n=t.properties,r=t.options,s=t.meta;switch(t.type){case jR.page:var a=aF(OR({properties:n,meta:s},Object.keys(r).length&&{options:r}));return OR(OR({},e),{last:a,history:e.history.concat(a)});default:return e}}var pF={last:{},history:[]};function dF(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:pF,t=arguments.length>1?arguments[1]:void 0,n=t.type,r=t.meta,s=t.options,a=t.event,i=t.properties;switch(n){case jR.track:var o=aF(OR(OR({event:a,properties:i},Object.keys(s).length&&{options:s}),{},{meta:r}));return OR(OR({},e),{last:o,history:e.history.concat(o)});default:return e}}var fF={actions:[]};function mF(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:fF,t=arguments.length>1?arguments[1]:void 0,n=t.type,r=t.payload;switch(n){case"queue":var s;return s=r&&r.type&&r.type===jR.identify?[t].concat(e.actions):e.actions.concat(t),OR(OR({},e),{},{actions:s});case"dequeue":return[];default:return e}}function gF(e,t,n){if(!NR)return!1;var r=window[(n?"add":"remove")+"EventListener"];e.split(" ").forEach((function(e){r(e,t)}))}function yF(e){var t=gF.bind(null,"online offline",(function(t){return Promise.resolve(!navigator.onLine).then(e)}));return t(!0),function(e){return t(!1)}}function bF(){return Array.prototype.slice.call(arguments).reduce((function(e,t){return e||(xR(t)?t:e)}),!1)}function xF(){return uR.__analytics__=[],function(e){return function(t,n,r){var s=e(t,n,r),a=s.dispatch;return Object.assign(s,{dispatch:function(e){var t=e.action||e;return uR.__analytics__.push(t),a(e)}})}}}function vF(e){return function(){return WR(WR.apply(null,arguments),xF())}}function wF(e){return e?vR(e)?[e]:e:[]}var kF=function(e,t,n){return{type:jR.setItemStart,timestamp:G$(),key:e,value:t,options:n}},IF=function(e,t){return{type:jR.removeItemStart,timestamp:G$(),key:e,options:t}};function NF(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.reducers||{},n=(e.plugins||[]).reduce((function(e,t){if(xR(t))return e.middlewares=e.middlewares.concat(t),e;if(t.NAMESPACE&&(t.name=t.NAMESPACE),!t.name)throw new Error("https://lytics.dev/errors/1");var n=t.EVENTS?Object.keys(t.EVENTS).map((function(e){return t.EVENTS[e]})):[],r=!(!1===t.enabled),s=!(t.config&&!1===t.config.enabled);e.pluginEnabled[t.name]=r&&s,delete t.enabled,t.methods&&(e.methods[t.name]=Object.keys(t.methods).reduce((function(e,n){return e[n]=F(t.methods[n]),e}),{}),delete t.methods);var a=Object.keys(t).concat(n),i=new Set(e.events.concat(a));if(e.events=Array.from(i),e.pluginsArray=e.pluginsArray.concat(t),e.plugins[t.name])throw new Error(t.name+" already loaded");return e.plugins[t.name]=t,e.plugins[t.name].loaded||(e.plugins[t.name].loaded=function(){return!0}),e}),{plugins:{},pluginEnabled:{},methods:{},pluginsArray:[],middlewares:[],events:[]}),r=e.storage?e.storage:{getItem:function(e){return uR[e]},setItem:function(e,t){return uR[e]=t},removeItem:function(e){return uR[e]=void 0}},s=i$(r),a=n.plugins,i=n.events.filter((function(e){return!HR.includes(e)})),o=new Set(i.concat(GR).filter((function(e){return!HR.includes(e)}))),u=Array.from(o).sort(),l=i.sort(),c=function(){return a},h=new Y$,p=h.addMiddleware,d=h.removeMiddleware,f=h.dynamicMiddlewares,m=function(){throw new Error("Abort disabled in listener")},g=function(e,t){return function(n){t&&t(n),e(n)}},y=SR(),b=s$(y,r),x=OR({enable:function(e,t){var n=ER();return new Promise((function(r){h$[n]=g(r,t),_.dispatch({type:jR.enablePlugin,plugins:wF(e),ts:n,_:{originalAction:jR.enablePlugin}})}))},disable:function(e,t){var n=ER();return new Promise((function(r){h$[n]=g(r,t),_.dispatch({type:jR.disablePlugin,plugins:wF(e),ts:n,_:{originalAction:jR.disablePlugin}})}))}},n.methods),v={identify:function(e,t,n,r){var a=vR(e)?e:null,i=kR(e)?e:t,o=n||{},u=v.user();uR[a$(t$)]=a;var l=a||i.userId||s(t$,v,i);return new Promise((function(e,s){_.dispatch(OR(OR({type:jR.identifyStart,userId:l,traits:i||{},options:o,anonymousId:u.anonymousId},u.id&&u.id!==a&&{previousId:u.id}),{},{meta:{timestamp:G$(),callback:g(e,bF(t,n,r))}}))}))},track:function(e,t,n,r){var a=kR(e)?e.event:e;if(!a||!vR(a))throw new Error("Event missing");var i=kR(e)?e:t||{},o=kR(n)?n:{};return new Promise((function(e,u){_.dispatch({type:jR.trackStart,event:a,properties:i,options:o,userId:s(t$,v,t),anonymousId:s(n$,v,t),meta:{timestamp:G$(),callback:g(e,bF(t,n,r))}})}))},page:function(e,t,n){var r=kR(e)?e:{},a=kR(t)?t:{};return new Promise((function(i,o){_.dispatch({type:jR.pageStart,properties:lF(r),options:a,userId:s(t$,v,r),anonymousId:s(n$,v,r),meta:{timestamp:G$(),callback:g(i,bF(e,t,n))}})}))},user:function(e){if(e===t$||"id"===e)return s(t$,v);var t=v.getState("user");return e?yR(t,e):t},reset:function(e){return new Promise((function(t,n){_.dispatch({type:jR.resetStart,timestamp:G$(),callback:g(t,e)})}))},ready:function(e){return v.on(jR.ready,e)},on:function(e,t){if(!e||!xR(t))return!1;if(e===jR.bootstrap)throw new Error(".on disabled for "+e);var n=/Start$|Start:/;if("*"===e){var r=function(e){return function(e){return function(r){return r.type.match(n)&&t({payload:r,instance:v,plugins:a}),e(r)}}},s=function(e){return function(e){return function(r){return r.type.match(n)||t({payload:r,instance:v,plugins:a}),e(r)}}};return p(r,SF),p(s,CF),function(){d(r,SF),d(s,CF)}}var i=e.match(n)?SF:CF,o=function(n){return function(n){return function(r){return r.type===e&&t({payload:r,instance:v,plugins:a,abort:m}),n(r)}}};return p(o,i),function(){return d(o,i)}},once:function(e,t){if(!e||!xR(t))return!1;if(e===jR.bootstrap)throw new Error(".once disabled for "+e);var n=v.on(e,(function(e){var r=e.payload;t({payload:r,instance:v,plugins:a,abort:m}),n()}));return n},getState:function(e){var t=_.getState();return e?yR(t,e):Object.assign({},t)},dispatch:function(e){var t=vR(e)?{type:e}:e;if(qR(t.type))throw new Error("reserved action "+t.type);var n=t.meta||{},r=e._||{},s=OR(OR({},t),{},{meta:OR({timestamp:G$()},n),_:OR({originalAction:t.type},r)});_.dispatch(s)},enablePlugin:x.enable,disablePlugin:x.disable,plugins:x,storage:{getItem:r.getItem,setItem:function(e,t,n){_.dispatch(kF(e,t,n))},removeItem:function(e,t){_.dispatch(IF(e,t))}},setAnonymousId:function(e,t){v.storage.setItem(KR,e,t)},events:{all:u,core:GR,plugins:l}},w=n.middlewares.concat([f(SF),U$(v,c,{all:u,plugins:l}),H$(r),e$(v),o$(v),f(CF)]),k={context:nF,user:r$(r),page:hF,track:dF,plugins:Q$(c),queue:mF},I=WR,N=WR;if(NR&&e.debug){var S=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;S&&(I=S({trace:!0,traceLimit:25})),N=function(){return 0===arguments.length?xF():kR(FR(arguments[0]))?vF():vF().apply(null,arguments)}}var C=sF(e),E=n.pluginsArray.reduce((function(e,t){var r=t.name,s=t.config,a=t.loaded,i=n.pluginEnabled[r];return e[r]={enabled:i,initialized:!!i&&Boolean(!t.initialize),loaded:Boolean(a()),config:s||{}},e}),{}),T={context:C,user:b,plugins:E},_=PR(VR(OR(OR({},k),t)),T,N(I(UR.apply(void 0,RR(w))))),A=Object.keys(a);_.dispatch({type:jR.bootstrap,plugins:A,config:C,params:y,user:b});var R=A.filter((function(e){return n.pluginEnabled[e]})),$=A.filter((function(e){return!n.pluginEnabled[e]}));function F(e){return function(){var t=Array.prototype.slice.call(arguments),n=Array.apply(null,Array(e.length)).map((function(){})).map((function(e,n){if(t[n]||!1===t[n]||null===t[n])return t[n]})).concat(v);return e.apply({instance:v},n)}}return _.dispatch({type:jR.registerPlugins,plugins:A,enabled:n.pluginEnabled}),n.pluginsArray.map((function(e,t){var r=e.bootstrap,s=e.config,a=e.name;r&&xR(r)&&r({instance:v,config:s,payload:e}),_.dispatch({type:jR.registerPluginType(a),name:a,enabled:n.pluginEnabled[a],plugin:e}),n.pluginsArray.length===t+1&&_.dispatch({type:jR.initializeStart,plugins:R,disabled:$})})),yF((function(e){_.dispatch({type:e?jR.offline:jR.online})})),m$(_,c,v),v}var SF="before",CF="after";var EF=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e};function TF(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}var _F=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?TF(n,!0).forEach((function(t){EF(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):TF(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e};function AF(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function RF(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){AF(e,t,n[t])}))}return e}var $F={trackingId:null,debug:!1,anonymizeIp:!1,customDimensions:{},resetCustomDimensionsOnPage:[],setCustomDimensionsToPage:!0},FF={};function DF(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=!1,n=OF(e),r=n.instanceName,s=n.instancePrefix;return{name:"google-analytics",config:RF({},$F,e),initialize:function(e){var t=e.config,n=e.instance;if(!t.trackingId)throw new Error("No GA trackingId defined");var a=t.customScriptSrc||"https://www.google-analytics.com/analytics.js";if(MF(a)&&function(e,t,n,r,s,a,i){e.GoogleAnalyticsObject=s,e.ga=e.ga||function(){(e.ga.q=e.ga.q||[]).push(arguments)},e.ga.l=1*new Date,a=t.createElement(n),i=t.getElementsByTagName(n)[0],a.async=1,a.src=r,i.parentNode.insertBefore(a,i)}(window,document,"script",a,"ga"),!FF[r]){var i=RF({cookieDomain:t.domain||"auto",siteSpeedSampleRate:t.siteSpeedSampleRate||1,sampleRate:t.sampleRate||100,allowLinker:!0},t.cookieConfig);if(r&&(i.name=r),ga("create",t.trackingId,i),t.debug&&(ga("".concat(s,"set"),"sendHitTask",null),window.ga_debug={trace:!0}),t.anonymizeIp&&ga("".concat(s,"set"),"anonymizeIp",!0),t.tasks){["customTask","previewTask","checkProtocolTask","validationTask","checkStorageTask","historyImportTask","samplerTask","buildHitTask","sendHitTask","timingTask","displayFeaturesTask"].forEach((function(e){if(t.tasks.hasOwnProperty(e)){var n=t.tasks[e];"function"==typeof n?ga(t.tasks[e]):null===n&&ga("".concat(s,"set"),e,n)}}))}var o=(n.user()||{}).traits||{};if(Object.keys(o).length){var u=PF(o,t);ga("".concat(s,"set"),u)}FF[r]=!0}},page:function(e){var n=e.payload,r=e.config,a=e.instance,i=n.properties,o=r.resetCustomDimensionsOnPage,u=r.customDimensions,l=a.getState("context.campaign");if(!MF()){if(o&&o.length){var c=o.reduce((function(e,t){return u[t]&&(e[u[t]]=null),e}),{});Object.keys(c).length&&ga("".concat(s,"set"),c)}var h=i.path||document.location.pathname,p={page:h,title:i.title,location:i.url},d={page:h,title:i.title};i.referrer!==document.referrer&&(d.referrer=i.referrer);var f=RF({},p,BF(l),VF(i,r,s));ga("".concat(s,"set"),d),t&&delete f.location,ga("".concat(s,"send"),"pageview",f),t=!0}},track:function(e){var t=e.payload,n=e.config,r=e.instance,s=t.properties,a=t.event,i=s.label,o=s.value;LF({hitType:"event",event:a,label:i,category:s.category||"All",value:o,nonInteraction:s.nonInteraction,campaign:r.getState("context.campaign")},n,t)},identify:function(e){var t=e.payload,n=e.config;WF(t.userId,t.traits,n)},loaded:function(){return!!window.gaplugins}}}function MF(e){return e?!function(e){var t=document.querySelectorAll("script[src]");return!!Object.keys(t).filter((function(n){return(t[n].src||"")===e})).length}(e):"undefined"==typeof ga}function OF(e){var t=e.instanceName;return{instancePrefix:t?"".concat(t,"."):"",instanceName:t}}function LF(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0;if(!MF()){var r=OF(t),s=r.instancePrefix,a={hitType:e.hitType||"event",eventAction:e.event,eventLabel:e.label,eventCategory:e.category||"All",nonInteraction:void 0!==e.nonInteraction&&!!e.nonInteraction};e.value&&(a.eventValue=UF(e.value));var i=BF(e),o=VF(n.properties,t,s),u=RF({},a,i,o);return ga("".concat(s,"send"),"event",u),u}}function BF(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={},n=e.name,r=e.source,s=e.medium,a=e.content,i=e.keyword;return n&&(t.campaignName=n),r&&(t.campaignSource=r),s&&(t.campaignMedium=s),a&&(t.campaignContent=a),i&&(t.campaignKeyword=i),t}function PF(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.customDimensions;return Object.keys(n).reduce((function(t,r){var s=n[r],a=zF(e,r)||e[r];return"boolean"==typeof a&&(a=a.toString()),a||0===a?(t[s]=a,t):t}),{})}function zF(e,t,n,r,s){for(t=t.split?t.split("."):t,r=0;r<t.length;r++)e=e?e[t[r]]:s;return e===s?n:e}function VF(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,r=PF(e,t);return Object.keys(r).length?t.setCustomDimensionsToPage?(ga("".concat(n,"set"),r),{}):r:{}}function WF(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!MF()){var r=OF(n),s=r.instancePrefix;if(e&&ga("".concat(s,"set"),"userId",e),Object.keys(t).length){var a=PF(t,n);ga("".concat(s,"set"),a)}}}function UF(e){return!e||e<0?0:Math.round(e)}var GF=DF;let HF;const jF=(e="Interface",t="G-1XT0GV0L6J")=>(HF=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={storage:gR};return NF(_F(_F({},t),e))}({app:e,plugins:[GF({trackingId:t})]}),HF.page(),HF),qF=document.documentElement,KF=document.querySelector("main"),XF=document.querySelector("video"),ZF=document.querySelector("img"),{isRecording:YF,startRecording:QF,stopRecording:JF}=(e=>{let t,n=!1;return{isAvailable:()=>!!(window&&window.MediaRecorder&&"function"==typeof window.MediaRecorder.isTypeSupported&&window.Blob),downloadRecording:()=>{var e=new Blob(recordedChunks,{type:"video/webm"}),t=URL.createObjectURL(e),n=document.createElement("a");document.body.appendChild(n),n.style="display: none",n.href=t,n.download="test.webm",n.click(),window.URL.revokeObjectURL(t)},encodeRecording:(e,t="audio/mp3;")=>new Blob(e,{type:t}),startRecording:e=>new Promise((r,s)=>{if(n)return s("already recording");t=[],YT=new MediaRecorder(e),YT.ondataavailable=n=>{t.push(n.data),r({mediaRecorder:YT,dataArray:t,stream:e})},YT.onwarning=function(e){console.log("onwarning fired")},YT.onerror=e=>{switch(console.log("onerror fired"),e.name){case"InvalidState":case"OutOfMemory":case"IllegalStreamModification":case"OtherRecordingError":case"GenericError":break;default:console.error("MediaRecorder Error",e)}},YT.start(),n=!0}),stopRecording:()=>new Promise((e,r)=>{if(!n)return r("Not recording");YT.onstop=r=>{n=!1,e(t)},YT.stop()}),isRecording:()=>n}})(),eD=((e="Plops")=>{const n=localStorage.getItem(e),r=Object.assign({},JSON.parse(n)),s=t(t=>{localStorage.setItem(e,JSON.stringify(t))},20);return{save:s,has:e=>!!r[e],removeItem:e=>{delete r[e]},getItem:e=>r[e],setItem:(e,t)=>(r[e]=Object.assign({},t,r[e]),s(r),r)}})(),tD=[];let nD,rD,sD,aD,iD,oD,uD,lD,cD,hD=XF,pD=16,dD=!0,fD=!1,mD=!1,gD=!1,yD=!1;qF.classList.add("loading");const bD=(e=>{{const t=Object.assign({},e),n=new URLSearchParams(window.location.search);for(const[e,r]of n)t[e]=__(r);return t}})({metronome:!1,backingTrack:!1,clear:!0,transparent:!0,synch:!0,debug:!1,muted:!1,duet:!1,quantise:!0,text:!0,spectrogram:!0}),xD={maxFaces:bD.duet?2:1,shouldLoadIrisModel:!0},vD=async(e,t)=>tD.map(async n=>{const r=await n[e](t);return eD.setItem(n.name,{instrument:r}),q_("".concat(n.name," has ").concat(r," loaded")),console.log("".concat(n.name," has ").concat(r," loaded")),r}),wD=async e=>await vD("loadRandomInstrument",e),kD=e=>{bD.duet;if(null==tD[e]){const t={dots:"green",leftEyeIris:"blue",rightEyeIris:"blue",hue:360*Math.random(),debug:bD.debug},n=YA[e],r=eD.has(n)?eD.getItem(n):{},s=new JA(n,ZT,sD,t),a=r.instrument||XT();return s.button.addEventListener("instrumentchange",e=>{const{detail:t}=e;eD.setItem(n,{instrument:t.instrumentName})}),s.loadInstrument(a,e=>{}),aD&&aD.outputs&&aD.outputs.length>0&&s.setMIDI(aD.outputs[0]),tD.push(s),s}return tD[e]},ID=(e=0,t=0)=>{const n=kD(e);n.setMIDI(aD.outputs[t]),console.log("Enabling MIDI for",n)},ND=async()=>{try{aD=await new Promise((e,t)=>{CA.enable().then(t=>{e(CA)}).catch(e=>t(e))}),aD.outputs.length>0?(console.log("MIDI devices",aD.outputs,aD),q_("MIDI Available<br>Stand By",0),ID(0,0)):(console.log("No MIDI devices detected",aD),q_("MIDI Available but no instruments detected",0),K_("No MIDI Device connected"),KF.classList.toggle("midi-no-devices",!0)),aD.addListener("connected",e=>{console.log(e),q_("MIDI Device connected!"),aD.outputs.length>0&&(KF.classList.toggle("midi-no-devices",!1),tD.forEach((e,t)=>ID(t,0))),iD.setText("Click to disable")}),aD.addListener("disconnected",e=>{console.log(e),q_("Lost MIDI Device connection"),aD.outputs.length>0||KF.classList.toggle("midi-no-devices",!0)}),mD=aD,KF.classList.add("midi-available"),K_(aD.outputs.length>0?"MIDI Connected":"Connect a MIDI Device to continue")}catch(e){return console.error("Total failure",e),q_("MIDI NOT Available<br>"+e,0),!1}return!0},SD=async e=>{let t;gD=!0;try{t=await(async(e,t)=>new Promise(async(n,r)=>{let s;(e=e||document.createElement("video")).onloadedmetadata=t=>{e.play(),e.width=e.videoWidth,e.height=e.videoHeight,n(s)},e.onerror=e=>r(s);const a={};t?a.deviceId={exact:t}:a.facingMode="user";const i={video:a,audio:!1};try{s=await navigator.mediaDevices.getUserMedia(i),e.srcObject=s}catch(e){r(e)}}))(XF,e),eD.setItem("cameraId",e)}catch(t){throw console.error(e,"Camera errored",t),t}return gD=!1,t};q_("Initialising...<br> Please wait");let CD=null;var ED,TD,_D=!1;function AD(){return _D||(_D=!0,ED={},TD={},ED=function(e){return function(t){return TD[t]?TD[t]:TD[t]=e(t).catch((function(e){throw delete TD[t],e}))}}),ED}var RD,$D,FD=!1;function DD(){return FD||(FD=!0,RD={},$D=AD(),RD=$D((function(t){return new Promise((n,r)=>{let s="i"+(""+Math.random()).slice(2);e[s]=e=>{n(e),a()};let a=()=>{delete e[s],i.onerror=null,i.remove()},i=document.createElement("script");i.async=!0,i.type="module",i.charset="utf-8",i.textContent=`import * as m from '${t}'; ${s}(m);`,i.onerror=function(e){r(e),a()},document.head.appendChild(i)})}))),RD}var MD,OD,LD,BD,PD=!1;function zD(){return OD||(OD=function(){try{throw new Error}catch(t){var e=(""+t.stack).match(/(https?|file|ftp):\/\/[^)\n]+/g);if(e)return VD(e[0])}return"/"}()),OD}function VD(e){return(""+e).replace(/^((?:https?|file|ftp):\/\/.+)\/[^/]+$/,"$1")+"/"}function WD(e){let t=(""+e).match(/(https?|file|ftp):\/\/[^/]+/);if(!t)throw new Error("Origin not found");return t[0]}export function $f8e3232e83f0b4b967dc34b60ada38c$init(){return PD||(PD=!0,OD=null,(MD={}).getBundleURL=zD,LD=VD,MD.getBaseURL=LD,BD=WD,MD.getOrigin=BD),MD}var UD,GD=!1;function HD(){return GD||(GD=!0,UD={},UD=DD()($f8e3232e83f0b4b967dc34b60ada38c$init().getBundleURL()+"update.d1e14477.js")),UD}const jD=async()=>{if(dD)requestAnimationFrame(jD);else if(qF.classList.remove("loading"),fD)qF.classList.add("failure");else if(qF.classList.add("loaded"),CD){const{update:e}=await HD(),t=document.getElementById("shared-controls"),n=await CD(t),r=await e();console.log("%c Loaded App ".concat("0.8.0"," ").concat(n?"Installable":r?"Update Available":""),"color:white;font-size:2rem;background:blue;"),K_(n?"You can install this as an app! Click install below":r?"Update available":"")}else console.log("Loaded Webpage","0.8.0")};var qD,KD=!1;function XD(){return KD||(KD=!0,qD={},qD=DD()($f8e3232e83f0b4b967dc34b60ada38c$init().getBundleURL()+"install.22ef6dfe.js")),qD}var ZD,YD=!1;function QD(){return YD||(YD=!0,ZD={},ZD=DD()($f8e3232e83f0b4b967dc34b60ada38c$init().getBundleURL()+"share-menu.2672dc76.js")),ZD}((e,t)=>{let n=0;nA(bD),t(n++/10),eA("button-quantise",e=>{bD.quantise=e,K_("Quantise "+(bD.quantise?"enabled":"disabled"))},bD.quantise),eA("button-metronome",e=>{bD.metronome=e,K_("Metronome "+(bD.metronome?"enabled":"disabled"))},bD.metronome),eA("button-spectrogram",e=>{bD.spectrogram=e,K_("Spectrogram "+(bD.spectrogram?"enabled":"disabled"))},bD.spectrogram);const r=()=>"hidden"===XF.style.visibility;eA("button-overlay",e=>XF.style.visibility=r()?"visible":"hidden",!r()),eA("button-clear",e=>bD.clear=!bD.clear,bD.clear),J_("button-video",e=>wD()),t(n++/10),oD=jF("InterFACE"),PT(hD,e).then(async e=>{try{if(q_("Setting things up"),t(n++/10),ZF&&(q_("Image downloaded...<br> Please wait"),rD=await EA(ZF)),t(n++/10),XF){const e=eD.has("cameraId")?eD.getItem("cameraId"):void 0;q_(e?"Found saved camera":"Attempting to locate camera...");try{nD=await SD(e)}catch(e){q_("Could not oppen saved camera, looking for another..."),nD=await SD(),eD.removeItem("cameraId")}const r=(await(async()=>navigator.mediaDevices.enumerateDevices())()).filter(e=>"videoinput"===e.kind);r.length>1&&X_(r,async e=>{nD=SD(e.deviceId),K_("Camera ".concat(e.label," changed"),0)}),q_("Camera located!",0),t(n++/10)}KF.style.setProperty("--width",XF.width),KF.style.setProperty("--height",XF.height),KF.classList.toggle("landscape",XF.width>XF.height),KF.classList.toggle("portrait",XF.width<XF.height),KF.classList.toggle("square",XF.width===XF.height),r=XF.width,s=XF.height,AA=r||TA.width,RA=s||TA.height,t(n++/10)}catch(e){const t=String(e).replace("NotAllowedError: ","");return q_("Camera could not be accessed<br>"+t,0),K_(t),dD=!1,fD=!0,void(e=>{HF&&HF.track("Error",{category:"Fails",label:e,value:42})})("Camera Rejected or Not allowed")}var r,s;try{sD=((e=2048,t=1,n=1)=>(ZT=new(window.AudioContext||window.webkitAudioContext),e_=ZT.createGain(),e_.gain.value=0,s_=ZT.createDynamicsCompressor(),s_.threshold.value=-70,s_.knee.value=40,s_.ratio.value=15,s_.attack.value=.2,s_.release.value=.5,a_=ZT.createConvolver(),t_=ZT.createDelay(.01),n_=ZT.createGain(),n_.gain.value=.2,r_=ZT.createAnalyser(),r_.minDecibels=-90,r_.maxDecibels=-10,r_.smoothingTimeConstant=.85,r_.fftSize=256,QT=r_.frequencyBinCount,JT=new Uint8Array(QT),t_.connect(n_),n_.connect(t_),t_.connect(e_),e_.connect(s_),s_.connect(r_),i_=ZT.createScriptProcessor(e,t,n),r_.connect(ZT.destination),t_))(),q_("Audio Available...<br>Instrument undefined Sounds downloaded",0),t(n++/10),uD=oA(),lD={kick:UA(GA[0]),hat:UA(jA[0]),snare:UA(HA[0])},q_("Audio available...<br>Instrument Sounds ready"),t(n++/10)}catch(e){return fD=!0,void q_("Something went wrong with the Audio<br>"+e,0)}try{await(async()=>(iD=Y_(async e=>(await ND(),q_("MIDI available<br>Connecting to instruments...",0),console.log("User input detected so enabling MIDI!"),KF.classList.add("midi-activated"),!1)),!0))()?(KF.classList.add("midi"),q_("MIDI available<br>Click the button to connect",0)):(KF.classList.add("midi","no-instrument"),q_("MIDI available<br>Connect an instrument <small>and click the button</small>",0)),t(n++/10)}catch(e){console.log("no MIDI!",e),KF.classList.add("no-midi"),q_("MIDI unavailable, or no instrument connected<br>"+e,0)}TA.width=hD.width,TA.height=hD.height,KF.classList.add(hD.nodeName.toLowerCase()),o_=1,c_();let a=0;t(n++/10),dD=!1;e(hD===XF,e=>{if(gD)return;let t="";if(a++,bD.transparent)if(bD.clear)_A.clearRect(0,0,AA,RA);else{const e=.01*a;((e=0,t=-1)=>{_A.save(),_A.drawImage(TA,e,t),_A.restore()})(Math.sin(e),Math.cos(e))}else n=hD,_A.save(),_A.translate(AA,0),_A.scale(-1,1),_A.drawImage(n,0,0),_A.restore();var n,r;if(bD.quantise&&((e,t=-1,n="")=>{for(let e=0,n=t+1;e<n;++e)_A.fillStyle=e===t?D_:L_,_A.strokeStyle=e===t?L_:M_,_A.lineWidth=4,_A.beginPath(),_A.arc(20*e+20,20,4,0,zT),_A.fill(),_A.stroke()})(0,w_),bD.spectrogram&&(r_.getByteFrequencyData(JT),((e,t)=>{const n=AA/t*2;let r,s=0;for(let a=0;a<t;a++)r=e[a],_A.fillStyle="hsla("+r/RA*360+",50%,50%,0.3)",_A.fillRect(s,0,n,r),s+=n+1})(JT,QT)),e)for(let n=0,r=e.length;n<r;++n){const r=e[n],s=kD(n);if(!(r&&r.faceInViewConfidence>.9))return void(yD?q_(ZA(Math.floor(a/100))):(KF.classList.toggle("".concat(s.name,"-active"),!1),KF.classList.toggle("no-faces",!0),yD=!0));yD&&(yD=!1,KF.classList.toggle("".concat(s.name,"-active"),!0),KF.classList.toggle("no-faces",!1)),s.update(r),s.draw(r,bD.text),bD.quantise||bD.muted||s.sing(),t+="<br>PITCH:".concat(r.pitch," ROLL:").concat(r.roll," YAW:").concat(r.yaw," MOUTH:").concat(Math.ceil(100*r.mouthRange/QA.LIPS_RANGE),"%")}q_(e?(r=Math.floor(a/100),XA[r%(XA.length-1)]):ZA(Math.floor(a/100)))},()=>!gD);((e,t=200)=>{k_=0,null===x_&&(x_=new m_,"suspended"===x_.state&&x_.resume()),b_=t,g_.onmessage=n=>{const r=I_(),s=n.data;switch(s.event){case"starting":s.time;y_=r,v_=!0;break;case"tick":const a=s.intervals,i=a*t*.001,o=r-y_,u=s.time,l=u%t*.001,c=u-o,h=Math.floor(u/t);w_=++k_%16,e&&e({bar:w_,bars:16,barsElapsed:k_,timePassed:u,elapsed:o,expected:i,drift:c,level:h,intervals:a,lag:l});break;default:console.log("message: ",n)}},g_.onerror=e=>{console.error("error...",{error:e}),g_.postMessage({error:e,time:x_.currentTime})},g_.postMessage({command:"start",time:x_.currentTime,interval:t}),I_()})(({bar:e,bars:t,barsElapsed:n,timePassed:r,elapsed:s,expected:a,drift:i,level:o,intervals:u,lag:l})=>{if(!bD.muted){if(bD.metronome){const e=.01;uD.clack(e,t%4==0?1:2)}if(bD.quantise)for(let e=0,t=tD.length;e<t;++e){kD(e).sing()}if(bD.backingTrack&&0===e){const e=qA(lD.kick,uD.kick),t=qA(lD.snare,uD.snare),n=qA(lD.hat,uD.hat);console.error("backing|",{kick:e,snare:t,hat:n})}0}},2403/16)})})(Object.assign({},xD,{}),e=>{P_.setAttribute("value",e)}),q_("Loading...<br>Please wait"),(async()=>{try{const{installer:e}=await XD();CD=await e(!0);await QD()}catch(e){console.error("PWA",e)}})(),jD(),window.onbeforeunload=()=>{},window.addEventListener("keydown",async e=>{switch(e.key){case"CapsLock":bD.debug=!bD.debug,tD.forEach(e=>e.debug=bD.debug),K_("DEBUG : ".concat(bD.debug));break;case"Space":wD();break;case"ArrowLeft":(async e=>{await vD("loadPreviousInstrument",e)})();break;case"ArrowRight":(async e=>{await vD("loadNextInstrument",e)})();break;case"ArrowUp":pD=++pD>32?32:pD,N_(2403/16),K_("Bars : ".concat(pD));break;case"ArrowDown":pD=--pD<1?1:pD,N_(2403/16),K_("Bars ".concat(pD));break;case",":VA(-1);break;case".":VA(1);break;case"w":uD.cowbell();break;case"a":uD.kick();break;case"s":uD.snare();break;case"d":uD.hat();break;case"q":uD.clack();break;case"b":bD.backingTrack=!bD.backingTrack,K_(bD.backingTrack?"Backing track starting":"Ending Backing Track");break;case"c":bD.clear=!bD.clear;break;case"t":bD.text=!bD.text;break;case"r":YF()?(console.error("Recording END",cD),K_("Recording Ended - now encoding"),JF().then(e=>{const t=encodeRecording(e,"audio/mp3;"),n=window.URL.createObjectURL(t);console.error("Recording END",{recording:e,audioSrc:n,mp3:t})})):(K_("Recording START"),console.error("Recording START",sD),cD=await QF(sD),console.error("Recording...",cD));break;case"Tab":break;case"v":XF.style.visibility="hidden"===XF.style.visibility?"visible":"hidden";break;case"m":bD.metronome=!bD.metronome,K_(bD.metronome?"Quantised enabled":"Quantise disabled");break;default:wD()}console.log("key",bD,e)});export function $c02f97239ce81f7a7e662de49329e4a6$init(){return S_}export function $c5fbe04bc1746de483307477d7b0013$init(){return C_}
//# sourceMappingURL=source.ee3055dd.js.map
