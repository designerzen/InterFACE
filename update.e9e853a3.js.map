{"mappings":"2wCAAoC,cAEvBA,EAAUC,SAAA,IAAgBC,SAAS,CAACC,EAAQC,SAGpDC,EADAC,EAAc,QAkBZC,EAAgB,KACrBF,EAAIG,QAAQC,YAAAA,CAAcC,KAAM,iBAChCC,OAAOC,SAASC,UAIb,kBAAmBC,UAGtBH,OAAOI,iBAAiB,QAAQd,UAE/BI,QAAYS,UAAUE,cAAcC,SAAAA,EAAAA,yBACrBZ,EAAIa,YAELJ,UAAUK,QAAAA,OAEjBC,QAAoBN,UAAUK,QAAQE,WACxCD,IAEHd,EAlCgB,EAACgB,EAAOC,EAAW,QACxB,IAAVD,QAEI,gBAIFE,EAAKD,EAAW,EAAI,EAAIA,EAGxBE,EAAIC,KAAKC,MAAMD,KAAKE,IAAIN,GAASI,KAAKE,IAJlC,cAMHC,YAAYP,EAAQI,KAAKI,IANtB,KAM6BL,IAAIM,QAAQP,IAAO,IAJpDQ,CAAS,QAAS,KAAM,KAAM,MAIkCP,IAsBrDQ,CAAYb,EAAYc,QAIxC7B,EAAI8B,cAAgBlC,gBACbmC,EAAY/B,EAAIa,WACtBkB,EAAUC,cAAgBpC,aACD,cAApBmC,EAAUE,SAETxB,UAAUE,cAAAA,OAEPuB,QAAyBzB,UAAUE,cAAcwB,kBACnDD,GAAoBA,EAAiB/B,SAGxCL,EAAQI,QAGTH,EAAO,0BAIRA,EAAO,sBAOXA,EAAO,kCAKIqC,EAASxC,oBAEdyC,QAAkB1C,eAGf,4DAGH2C,EAASC,SAASC,cAAc,iBACtCF,EAAOG,UAAUC,IAAI,oBACrBJ,EAAOK,UAAY,wBAGnBL,EAAO5B,iBAAiB,SAAS,IAAI2B,KAAAA,CAAcO,MAAK,IACxDL,SAASM,gBAAgBC,YAAYR,IAE9B,QAEDS,UAEC","sources":["./source/update.js"],"sourcesContent":["import {setToast, setFeedback} from './ui'\r\n\r\nexport const updater = async () => new Promise( (resolve,reject)  => {\r\n\t\r\n\tlet storageUsed = 0\r\n\tlet reg\r\n\r\n\tconst formatBytes = (bytes, decimals = 2) => {\r\n\t\tif (bytes === 0)\r\n\t\t{\r\n\t\t\treturn '0 Bytes';\r\n\t\t} \r\n\t  \r\n\t\tconst k = 1024;\r\n\t\tconst dm = decimals < 0 ? 0 : decimals;\r\n\t\tconst sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n\t  \r\n\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\t  \r\n\t\treturn parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n\t}\r\n\r\n\tconst installUpdate = () => {\r\n\t\treg.waiting.postMessage({ type: 'SKIP_WAITING' });\r\n\t\twindow.location.reload();\r\n\t}\r\n\t\r\n\t// Check that service workers are supported\r\n\tif ('serviceWorker' in navigator) \r\n\t{\r\n\t\t// Use the window load event to keep the page load performant\r\n\t\twindow.addEventListener('load', async () => {\r\n\t\t\t\r\n\t\t\treg = await navigator.serviceWorker.register('service-worker.js');\r\n\t\t\tconst worker = reg.installing;\r\n\t\t\r\n\t\t\tif (worker && navigator.storage) \r\n\t\t\t{\r\n\t\t\t\tconst storageData = await navigator.storage.estimate();\r\n\t\t\t\tif (storageData) \r\n\t\t\t\t{\r\n\t\t\t\t\tstorageUsed = formatBytes(storageData.usage);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treg.onupdatefound = async () => {\r\n\t\t\t\tconst newWorker = reg.installing;\r\n\t\t\t\tnewWorker.onstatechange = async () => {\r\n\t\t\t\t\tif (newWorker.state === 'installed') \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (navigator.serviceWorker) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst registeredWorker = await navigator.serviceWorker.getRegistration();\r\n\t\t\t\t\t\t\tif (registeredWorker && registeredWorker.waiting) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// show update icon!\r\n\t\t\t\t\t\t\t\tresolve(installUpdate);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\treject(\"No Service Worker\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// not instaLLed\r\n\t\t\t\t\t\treject(\"Not Installed\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t}else{\r\n\t\treject(\"Service Workers not allowed\");\r\n\t}\r\n})\r\n\r\n// \r\nexport const update = async () => {\r\n\ttry{\r\n\t\tconst updateApp = await updater();\r\n\r\n\t\t// wait around\r\n\t\tsetToast(\"An Update is available! Press update to install it\" )\r\n\t\t\t\r\n\t\t// reveal update button?\r\n\t\tconst button = document.createElement('button')\r\n\t\tbutton.classList.add(\"update-available\")\r\n\t\tbutton.innerHTML = \"Update to new version\"\r\n\t\t\r\n\t\t// on button press...\r\n\t\tbutton.addEventListener('click', ()=>updateApp(), {once:true} )\r\n\t\tdocument.documentElement.appendChild(button)\r\n\r\n\t\treturn true\r\n\r\n\t}catch(error){\r\n\t\t// no updates\r\n\t\treturn false\r\n\t}\r\n}\r\n"],"names":["updater","async","Promise","resolve","reject","reg","storageUsed","installUpdate","waiting","postMessage","type","window","location","reload","navigator","addEventListener","serviceWorker","register","installing","storage","storageData","estimate","bytes","decimals","dm","i","Math","floor","log","parseFloat","pow","toFixed","sizes","formatBytes","usage","onupdatefound","newWorker","onstatechange","state","registeredWorker","getRegistration","update","updateApp","button","document","createElement","classList","add","innerHTML","once","documentElement","appendChild","error"],"version":3,"file":"update.e9e853a3.js.map"}