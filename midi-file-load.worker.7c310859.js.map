{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-3df6e31b018a236a.js","source/audio/midi/midi-file-load.worker.js","source/audio/midi/midi-file-load.js","source/audio/midi/midi-stream.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","source/audio/midi/midi-decode.js","source/audio/midi/midi-command.js","source/audio/midi/midi-track.js","source/audio/midi/general-midi.js","source/audio/midi/midi-commands.js","source/audio/notes.js","source/maths/maths.js","source/utils.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"a8fb9c35fdafe466\";module.bundle.HMR_BUNDLE_ID = \"e9b2d09d7c310859\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import {\r\n\tloadMIDIFile,\r\n\tloadMIDIFileThroughClient\r\n} from './midi-file-load'\r\n\r\n// Capture public methods\r\nself.onmessage = e => {\r\n\tconsole.error(\"MIDI:Worker\",e)\r\n\r\n    const data = e.data\r\n    switch (data.command)\r\n    {\r\n        case \"loadMIDIFile\":\r\n\t\t\tloadMIDIFile(data.url, data.options).then( midi => {\r\n\r\n\t\t\t\tconsole.error(\"MIDI:Worker loaded\", {url:data.url, midi})\r\n\r\n\t\t\t\tpostMessage({ \r\n\t\t\t\t\tevent:data.command, \r\n\t\t\t\t\tmidi\r\n\t\t\t\t})\r\n\t\t\t})\r\n            break\r\n\r\n        case \"loadMIDIFileThroughClient\":\r\n\t\t\tloadMIDIFileThroughClient(data.url, data.options ).then( midi => {\r\n\t\t\t\tconsole.error(\"MIDI:Worker loaded\", {url:data.url, midi})\r\n\t\t\t\tpostMessage({ \r\n\t\t\t\t\tevent:data.command, \r\n\t\t\t\t\tmidi\r\n\t\t\t\t})\r\n\t\t\t})\r\n            break\r\n    }\r\n}","// Midi File\r\n// ==============\r\n// Abstract    - Load a .midi file from a local server\r\n// Description - Buffers a .midi file into memory, parse the commands\r\n// Use         - Load( file.midi, onComplete ) and wait for the callback\r\n\r\nimport MIDIStream from './midi-stream'\r\nimport { decodeMIDI } from './midi-decode'\r\nimport { base64DecToArr } from '../../utils'\r\n\r\n/**\r\n * Clean data\r\n * @param {String} data - raw data\r\n * @returns String of decoded MIDI data\r\n */\r\n const sanitizeResponse = ( data ) => {\r\n\tconst chars = []\r\n\tfor (let i = 0, quantity = data.length; i < quantity; ++i)\r\n\t{\r\n\t\tchars[i] = String.fromCharCode(data.charCodeAt(i) & 255)\r\n\t}\r\n\treturn chars.join('')\r\n}\r\n\r\n/**\r\n * Convert an array of integers into a string of bytes\r\n * NB. & 255 is not neccessary\r\n * @param {*} arrayBuffer \r\n * @returns {String} String Bytes\r\n */\r\nconst arrayBufferToBytes = arrayBuffer => Array.prototype.map.call( arrayBuffer, ch => String.fromCharCode(ch) ).join('')\r\n\r\n/**\r\n * ASCII to Bytes  bufferToBinaryString\r\n * WebWorker compatable atob.\r\n * NB. This is very costly - try and avoid\r\n * @returns \r\n */\r\nconst asciiToBinary = ( ascii ) => {\t\r\n\treturn (typeof window == \"object\" && typeof document == \"object\" && window.document === document) ?\r\n\t\twindow.atob : \r\n\t\tarrayBufferToBytes( base64DecToArr(ascii) )\r\n}\r\n\r\n/**\r\n * load From Base64 String\r\n * @param {string} arr - UInt8Array\r\n * @param {Object} options -\r\n * @returns \r\n */\r\nconst loadMIDIFromArray = async ( arr, options={}, progressCallback=null ) => new Promise( (resolve,reject) => {\r\n\ttry{\r\n\t\tconst data = arrayBufferToBytes( new Uint8Array(arr) )\r\n\t\tconst stream = new MIDIStream( data )\r\n\t\tresolve( decodeMIDI(stream, options) )\r\n\t}catch(error){\r\n\t\treject(error)\r\n\t}\r\n})\r\n\r\n/**\r\n * load From Base64 String\r\n * @param {string} file - Base64 string as raw bytes\r\n * @param {Object} options -\r\n * @returns \r\n */\r\nconst loadMIDIFromBase64 = async ( file, options={}, progressCallback=null ) => new Promise( (resolve,reject) => {\r\n\ttry{\r\n\t\tconst encoded = file.split(',')[1]\r\n\t\tconst data = asciiToBinary(encoded)\r\n\t\tconst stream = new MIDIStream( data )\r\n\t\tresolve( decodeMIDI(stream, options) )\r\n\t}catch(error){\r\n\t\treject(error)\r\n\t}\r\n})\r\n\r\n/**\r\n * loadMIDIFromFile\r\n * FIXME: Use fetch rather than XMLHttpRequest?\r\n * @param {string} url - url\r\n */\r\nexport const loadMIDIFromFile = (url, options={}, progressCallback=null) => new Promise( (resolve,reject) => {\r\n    const fetch = new XMLHttpRequest()\r\n    fetch.open(\"GET\", url, true)\r\n    fetch.responseType = \"arraybuffer\"\r\n\tfetch.onerror = error => reject(error)\r\n\tfetch.onreadystatechange = (e) => {\r\n\t\t/*\r\n\t\t0: request not initialized\r\n\t\t1: server connection established\r\n\t\t2: request received\r\n\t\t3: processing request\r\n\t\t4: request finished and response is ready\r\n\t\t*/\r\n\t\tif (fetch.readyState === 4 && fetch.status === 200)\r\n\t\t{\r\n\t\t\tconst arrayBuffer = fetch.response\r\n\t\t\tif (arrayBuffer) {\r\n\t\t\t  const byteArray = new Uint8Array(arrayBuffer)\r\n\t\t\t  const midi =loadMIDIFromArray(byteArray, options, progressCallback )\r\n\t\t\t  resolve(midi)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n    // fetch.onload = () => {}\r\n    fetch.send(null)\r\n})\r\n\r\n/**\r\n * Open a file from the client's local machine and load it\r\n * into memory\r\n * @param {*} file \r\n * @param {*} progressCallback \r\n * @returns \r\n */\r\nconst loadRawFile = (file, progressCallback, base64=true) => new Promise( (resolve,reject) => {\r\n\tconst fileReader = new FileReader()\r\n\tfileReader.onload = event => resolve(fileReader.result)\r\n\tfileReader.onprogress = event => progressCallback && progressCallback(event)\r\n\tfileReader.onerror = event => reject(fileReader.error)\r\n\tbase64 ? \r\n\t\tfileReader.readAsDataURL(file) :\r\n\t\tfileReader.readAsArrayBuffer(file)\r\n})\r\n\r\n\r\n/**\r\n * url can either be a file name as a string or \r\n * it can be a base64 encoded midi file\r\n * @param {string} urlOrBlob - URL string or base64 encoded string\r\n * @returns {MIDITrack} MIDIStream instance\r\n */\r\nexport const loadMIDIFile = ( urlOrBlob, options={}, progressCallback=null ) => new Promise( async (resolve,reject) => {\r\n\tconst isString = typeof urlOrBlob === \"string\"\r\n\tlet midiFile\r\n\r\n\tif (isString)\r\n\t{\r\n\t\tconst isBase64 = urlOrBlob.indexOf('base64,') === -1\r\n\t\tif (isBase64)\r\n\t\t{\r\n\t\t\tmidiFile = await loadMIDIFromFile( urlOrBlob, options, progressCallback ) \r\n\t\t}else{\r\n\t\t\tmidiFile = await loadMIDIFromBase64( urlOrBlob, options, progressCallback )\r\n\t\t}\r\n\t\tconsole.error(\"loadMIDIFile via BASE64\",{urlOrBlob, midiFile})\r\n\t\t\r\n\t}else{\r\n\r\n\t\tmidiFile = await loadMIDIFromArray( urlOrBlob, options, progressCallback )\r\n\t\tconsole.error(\"loadMIDIFile via ArrayBuffer\",{ urlOrBlob, midiFile})\r\n\t}\r\n\tresolve(midiFile)\r\n})\r\n\r\n/**\r\n * Load MIDI Performance from FILE / String / Local\r\n * @param {string} file \r\n * @param {Object} options \r\n * @param {Function} progressCallback \r\n * @param {Function} useBase64 - false \r\n * @returns {MIDITrack}\r\n */\r\nexport const loadMIDIFileThroughClient = async (file, options, progressCallback, useBase64=false ) => {\r\n\t\r\n\tconst rawFile = await loadRawFile( file, progressCallback, useBase64 )\r\n\tconst midiTrack = await loadMIDIFile( rawFile, {\r\n\t\t...options,\r\n\t\ttrackName:(file.name).split(\".mid\")[0].replace(\"_\", \" \")\r\n\t}, progressCallback )\r\n\treturn midiTrack\r\n}","/**\r\n * Midi Stream\r\n * Abstract    - A string based byte nibbler and convertor\r\n * Description - Feed it a data file then request bytes as needed\r\n */\r\nexport default class MIDIStream {\r\n\r\n\tposition = 0\r\n\tstr\r\n\r\n\t/**\r\n\t * Create an instance of a MIDI data stream\r\n\t * @param {String} data - RAW data\r\n\t */\r\n\tconstructor(data) {\r\n\t\tthis.str = data\r\n\t}\r\n\r\n\t/**\r\n\t * Read X length of the internal string\r\n\t * @param {*} length \r\n\t * @returns {String} \r\n\t */\r\n\tread(length) {\r\n\t\tconst result = this.str.substr(this.position, length)\r\n\t\tthis.position += length\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Read a big-endian 32-bit integer\r\n\t * @returns {String} XXXX\r\n\t */\r\n\treadInt32() {\r\n\t\tconst result = (\r\n\t\t\t(this.str.charCodeAt(this.position) << 24)\r\n\t\t\t+ (this.str.charCodeAt(this.position + 1) << 16)\r\n\t\t\t+ (this.str.charCodeAt(this.position + 2) << 8)\r\n\t\t\t+ this.str.charCodeAt(this.position + 3))\r\n\t\tthis.position += 4\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Read a big-endian 16-bit integer\r\n\t * @returns {String} XX\r\n\t */\r\n\treadInt16() {\r\n\t\tconst result = (\r\n\t\t\t(this.str.charCodeAt(this.position) << 8)\r\n\t\t\t+ this.str.charCodeAt(this.position + 1))\r\n\t\tthis.position += 2\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * read an 8-bit integer\r\n\t * @param {Boolean} signed \r\n\t * @returns {String} X\r\n\t */\r\n\treadInt8(signed = false) {\r\n\t\tconst result = this.str.charCodeAt(this.position)\r\n\t\tif (signed && result > 127) {\r\n\t\t\tresult -= 256\r\n\t\t}\r\n\t\tthis.position += 1\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Read a MIDI-style variable-length integer\r\n\t * (big-endian value in groups of 7 bits,\r\n\t * with top bit set to signify that another byte follows)\r\n\t * @returns {Number} A\r\n\t */\r\n\treadVarInt() {\r\n\t\tlet result = 0\r\n\t\twhile (true) {\r\n\t\t\tconst b = this.readInt8(false)\r\n\t\t\tif (b & 0x80) {\r\n\t\t\t\tresult += (b & 0x7f)\r\n\t\t\t\tresult <<= 7\r\n\t\t\t} else {\r\n\t\t\t\treturn result + b\r\n\t\t\t\t// b is the last byte\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// End of File - bool\r\n\teof() {\r\n\t\treturn this.position >= this.str.length\r\n\t}\r\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/*//////////////////////////////////////////////////////////////////////////////\r\n\r\nMIT Licence\r\n\r\nMidi File\r\n==============\r\nAbstract    - decode a .midi file from an object in memory\r\nDescription - Buffers a .midi file into memory, parses the commands\r\nUse         - Load( file.midi, onComplete ) and wait for the callback\r\nMethods     -\r\nInspired by - https://github.com/gasman/jasmid/blob/master/stream.js#L2\r\nReferences  - http://www.indiana.edu/~emusic/etext/MIDI/chapter3_MIDI3.shtml\r\n\r\nChannel Voice\r\n    Control the instrument's 16 voices (timbres, patches), plays notes, sends\r\n    controller data, etc.\r\n\r\nChannel Mode\r\n    Define instrument's response to Voice messages, sent over instrument's\r\n    'basic' channel\r\n\r\nSystem Common\r\n    Messages intended to all networked instruments and devices\r\n\r\nSystem Real-Time\r\n    Intended for all networked instruments and devices. Contain only status\r\n    bytes and is used for syncronization of all devices. essentially a timing\r\n    clock\r\n\r\nSystem Exclusive\r\n    Originally used for manufacturer-specific codes, such as editor/librarians,\r\n    has been expanded to include MIDI Time Code, MIDI Sample Dump Standard and\r\n    MIDI Machine Control\r\n\r\n//////////////////////////////////////////////////////////////////////////////*/\r\nimport MIDIStream from './midi-stream'\r\nimport MIDICommand from './midi-command'\r\nimport MIDITrack from './midi-track'\r\nimport * as MIDICommands from './midi-commands'\r\nimport {convertMIDINoteNumberToName} from '../notes'\r\n\r\nconst TIME_CODE_BASED = \"time-code-based\" \r\nconst METRIC_TIME = \"metrical\"\r\n\r\n// some systems leave the last byte out\r\n// to preserve memory but here we can\r\n// re-add it if we want to :)\r\nlet lastEventTypeByte\r\n\r\n/**\r\n * Take a 4 byte chunk out of the data set\r\n * @param {MidiStream} stream \r\n * @returns {Object}\r\n */\r\nconst readChunk = (stream, size=4) => \r\n{\r\n\tconst chunk = {}\r\n\t// Each midi event message is 4 bytes big...\r\n\tchunk.id = stream.read(size)\r\n\tchunk.length = stream.readInt32()\r\n\tchunk.data = stream.read(chunk.length)\r\n\treturn chunk\r\n}\r\n\r\n/**\r\n * Get the amount of frames per second from the division\r\n * @param {Number} timeDivision \r\n * @returns {Number}\r\n */\r\nconst getFramesPerSecond = timeDivision => {\r\n    const bit8_15 = (timeDivision & 0xFF00) >> 8\r\n    const flippedBit8_15 = bit8_15 ^ 0xFF\r\n    return flippedBit8_15 + 1\r\n}\r\n\r\n/**\r\n * Convert Raw header data into readable object data\r\n * @param {MidiStream} stream \r\n * @param {Object} options - defaults\r\n * @returns \r\n */\r\nconst decodeHeader = ( stream, options={} ) =>\r\n{\r\n\tconst headerChunk = readChunk(stream)\r\n\tconst headerType = headerChunk.id\r\n\t\r\n\tif (headerType !== 'MThd' && headerType !== 'MTrk' || headerChunk.length !== 6)\r\n\t{\r\n\t\tthrow \".mid file could not be read - header chunk 'MThd'/'MTrk' was not found\"\r\n\t}\r\n\r\n\tconst headerStream = new MIDIStream(headerChunk.data)\r\n\r\n\tconst formatType = headerStream.readInt16()\r\n\tconst trackCount = headerStream.readInt16()\r\n\tconst timeDivision = headerStream.readInt16()\r\n\r\n\tconst isTimeCodeBased = timeDivision & 0x8000 \r\n\tconst timeCodeType = isTimeCodeBased ? TIME_CODE_BASED : METRIC_TIME\r\n\t\r\n\tswitch( headerType )\r\n\t{\r\n\t\tcase \"MThd\":\r\n\t\t\tconst division = {}\r\n\t\t\tif (timeCodeType === TIME_CODE_BASED) {\r\n\t\t\t\tdivision.ticksPerFrame = timeDivision & 0x00FF\r\n\t\t\t\tdivision.framesPerSecond = getFramesPerSecond(timeDivision)\r\n\t\t\t} else {\r\n\t\t\t\tdivision.ticksPerQuarterNote = timeDivision & 0x7FFF\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tformatType, trackCount, timeDivision, isTimeCodeBased, timeCodeType, division\r\n\t\t\t}\r\n\t\t\t\r\n\t\tcase \"MTrk\":\t\r\n\t\t\treturn {\r\n\t\t\t\tformatType, trackCount, timeDivision, isTimeCodeBased, timeCodeType\r\n\t\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * \r\n * @param {MIDITrack} track \r\n * @param {MidiStream} stream \r\n * @returns \r\n */\r\nconst decodeTracks = ( track, stream ) => \r\n{\r\n\tconst quantity = track.header.trackCount\r\n\tfor (let i = 0; i < quantity; i++)\r\n\t{\r\n\t\tconst trackChunk = readChunk(stream)\r\n\t\tswitch(trackChunk.id)\r\n\t\t{\r\n\t\t\tcase \"MTrk\":\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase \"MThd\":\r\n\t\t\t\tthrow `Still working on MThd implementation... ${trackChunk.id}`\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow `Unexpected chunk - expected MTrk, got ${trackChunk.id}`\r\n\t\t}\r\n\t\t\r\n\t\tconst trackStream = new MIDIStream(trackChunk.data)\r\n\t\twhile (!trackStream.eof())\r\n\t\t{\r\n\t\t\tconst event = convertEventToCommand(trackStream)\r\n\t\t\t//tracks[i].push(event);\r\n\t\t\ttrack.addEvent(i,event)\r\n\t\t}\r\n\t}\r\n\treturn track\r\n}\r\n\r\n/**\r\n * \r\n * @param {MidiStream} stream \r\n * @returns {MIDICommand}\r\n */\r\nconst convertEventToCommand = (stream) => \r\n{\r\n\tconst event = new MIDICommand()\r\n\tconst time = stream.readVarInt()\r\n\tconst eventTypeByte = stream.readInt8()\r\n\r\n\tevent.deltaTime = time\r\n\r\n\tconst isSystemEvent = (eventTypeByte & 0xf0) === 0xf0\r\n\treturn isSystemEvent ? \r\n\t\tdecodeSystemEvent( stream, event, eventTypeByte) :\r\n\t\tdecodeChannelEvent( stream, event, eventTypeByte)\r\n}\r\n\r\n/**\r\n * Control the instrument's 16 voices (timbres, patches),\r\n * plays notes, sends controller data, etc.\r\n * @param {MIDIStream} stream -\r\n * @param {MIDICommand} event -\r\n * @param {number} eventTypeByte - \r\n * @returns {MIDICommand}\r\n */\r\nconst decodeChannelEvent = (stream, event, eventTypeByte ) =>\r\n{\r\n\tlet firstParameter\r\n\r\n\tif ((eventTypeByte & 0x80) === 0)\r\n\t{\r\n\t\t/* running status - \r\n\t\treuse lastEventTypeByte as the event type.\r\n\t\tthis allows bytes to be saved if the command repeats\r\n\t\t\teventTypeByte is actually the first parameter\r\n\t\t*/\r\n\t\tfirstParameter = eventTypeByte\r\n\t\teventTypeByte = lastEventTypeByte\r\n\t} else {\r\n\t\tfirstParameter = stream.readInt8()\r\n\t\tlastEventTypeByte = eventTypeByte\r\n\t}\r\n\r\n\tconst eventType = eventTypeByte >> 4\r\n\t\r\n\tevent.channel = eventTypeByte & 0x0f\r\n\tevent.type = MIDICommands.TYPE_CHANNEL\r\n\t//event.raw = `\"type\":${event.type},\"channel\":${event.channel}`\r\n\r\n\tswitch (eventType)\r\n\t{\r\n\t\tcase 0x08:\r\n\t\t\tevent.subtype = MIDICommands.COMMAND_NOTE_OFF\r\n\t\t\t//'noteOff';\r\n\t\t\tevent.noteNumber = firstParameter\r\n\t\t\tevent.noteName = convertMIDINoteNumberToName(firstParameter)\r\n\t\t\tevent.velocity = stream.readInt8()\r\n\t\t\t//event.raw += `\"subtype\":${event.subtype},\"noteNumber\":${firstParameter}`\r\n\t\t\treturn event\r\n\r\n\t\tcase 0x09:\r\n\t\t\tevent.noteNumber = firstParameter\r\n\t\t\tevent.noteName = convertMIDINoteNumberToName(firstParameter)\r\n\t\t\tevent.velocity = stream.readInt8()\r\n\t\t\tif (event.velocity === 0)\r\n\t\t\t{\r\n\t\t\t\tevent.subtype = MIDICommands.COMMAND_NOTE_OFF\r\n\t\t\t} else {\r\n\t\t\t\tevent.subtype = MIDICommands.COMMAND_NOTE_ON;//'noteOn';\r\n\t\t\t}\r\n\t\t\treturn event\r\n\r\n\t\tcase 0x0a:\r\n\t\t\tevent.subtype = MIDICommands.COMMAND_NOTE_AFTER_TOUCH;//'noteAftertouch';\r\n\t\t\tevent.noteNumber = firstParameter\r\n\t\t\tevent.noteName = convertMIDINoteNumberToName(firstParameter)\r\n\t\t\tevent.amount = stream.readInt8()\r\n\t\t\treturn event\r\n\r\n\t\tcase 0x0b:\r\n\t\t\tevent.subtype = MIDICommands.COMMAND_CONTROLLER;//'controller';\r\n\t\t\tevent.controllerType = firstParameter\r\n\t\t\tevent.value = stream.readInt8()\r\n\t\t\treturn event\r\n\r\n\t\tcase 0x0c:\r\n\t\t\tevent.subtype = MIDICommands.COMMAND_PROGRAM_CHANGE;//'programChange';\r\n\t\t\tevent.programNumber = firstParameter\r\n\t\t\treturn event\r\n\r\n\t\tcase 0x0d:\r\n\t\t\tevent.subtype = MIDICommands.COMMAND_CHANNEL_AFTER_TOUCH;//'channelAftertouch';\r\n\t\t\tevent.amount = firstParameter\r\n\t\t\treturn event\r\n\r\n\t\tcase 0x0e:\r\n\t\t\tevent.subtype = MIDICommands.COMMAND_PITCH_BEND\r\n\t\t\tevent.value = firstParameter + (stream.readInt8() << 7)\r\n\r\n\t\t\treturn event;\r\n\r\n\t\tdefault:\r\n\t\t\tthrow \"Unrecognised MIDI event type: \" + eventType;\r\n\t\t\t/*\r\n\t\t\tconsole.log(\"Unrecognised MIDI event type: \" + eventType);\r\n\t\t\tstream.readInt8();\r\n\t\t\tevent.subtype = 'unknown';\r\n\t\t\treturn event;\r\n\t\t\t*/\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {MIDIStream} stream \r\n * @param {MIDICommand} event \r\n * @param {number} eventTypeByte \r\n * @returns MIDICommand\r\n */\r\nconst decodeSystemEvent = ( stream, event, eventTypeByte ) =>\r\n{\r\n\t// system / meta event\r\n\tif (eventTypeByte === 0xff)\r\n\t{\r\n\t\t// meta event\r\n\t\tevent.type =  MIDICommands.TYPE_META\r\n\t\tconst subtypeByte = stream.readInt8()\r\n\t\tconst length = stream.readVarInt()\r\n\r\n\t\tswitch(subtypeByte)\r\n\t\t{\r\n\t\t\tcase 0x00:\r\n\t\t\t\tevent.subtype = 'sequenceNumber'\r\n\t\t\t\tif (length !== 2) { throw \"Expected length for sequenceNumber event is 2, got \" + length}\r\n\t\t\t\tevent.sequenceNumber = stream.readInt16()\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x01:\r\n\t\t\t\tevent.subtype = 'text'\r\n\t\t\t\tevent.text = stream.read(length)\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x02:\r\n\t\t\t\tevent.subtype = 'copyrightNotice'\r\n\t\t\t\tevent.text = stream.read(length)\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x03:\r\n\t\t\t\tevent.subtype = 'trackName'\r\n\t\t\t\tevent.text = stream.read(length)\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x04:\r\n\t\t\t\tevent.subtype = 'instrumentName'\r\n\t\t\t\tevent.text = stream.read(length)\r\n\t\t\t\treturn event;\r\n\r\n\t\t\tcase 0x05:\r\n\t\t\t\tevent.subtype = 'lyrics'\r\n\t\t\t\tevent.text = stream.read(length)\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x06:\r\n\t\t\t\tevent.subtype = 'marker'\r\n\t\t\t\tevent.text = stream.read(length)\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x07:\r\n\t\t\t\tevent.subtype = 'cuePoint'\r\n\t\t\t\tevent.text = stream.read(length)\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x20:\r\n\t\t\t\tevent.subtype = 'midiChannelPrefix'\r\n\t\t\t\tif (length !== 1){ throw \"Expected length for midiChannelPrefix event is 1, got \" + length}\r\n\t\t\t\tevent.channel = stream.readInt8()\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x2f:\r\n\t\t\t\tevent.subtype = 'endOfTrack'\r\n\t\t\t\tif (length !== 0) { throw \"Expected length for endOfTrack event is 0, got \" + length }\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x51:\r\n\t\t\t\tevent.subtype = 'setTempo'\r\n\t\t\t\tif (length !== 3) { throw \"Expected length for setTempo event is 3, got \" + length}\r\n\t\t\t\tevent.microsecondsPerBeat = (\r\n\t\t\t\t\t(stream.readInt8() << 16)\r\n\t\t\t\t\t+ (stream.readInt8() << 8)\r\n\t\t\t\t\t+ stream.readInt8()\r\n\t\t\t\t)\r\n\t\t\t\treturn event;\r\n\r\n\t\t\tcase 0x54:\r\n\t\t\t\tevent.subtype = 'smpteOffset'\r\n\t\t\t\tif (length !== 5) { throw \"Expected length for smpteOffset event is 5, got \" + length}\r\n\t\t\t\tconst hourByte = stream.readInt8()\r\n\r\n\t\t\t\t// magic\r\n\t\t\t\tevent.frameRate = {\r\n\t\t\t\t\t0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\r\n\t\t\t\t}[hourByte & 0x60]\r\n\t\t\t\t//console.error( event.frameRate )\r\n\r\n\t\t\t\tevent.hour = hourByte & 0x1f\r\n\t\t\t\tevent.min = stream.readInt8()\r\n\t\t\t\tevent.sec = stream.readInt8()\r\n\t\t\t\tevent.frame = stream.readInt8()\r\n\t\t\t\tevent.subframe = stream.readInt8()\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x58:\r\n\t\t\t\tevent.subtype = 'timeSignature'\r\n\t\t\t\tif (length !== 4){ throw \"Expected length for timeSignature event is 4, got \" + length }\r\n\t\t\t\tevent.numerator = stream.readInt8()\r\n\t\t\t\tevent.denominator = Math.pow(2, stream.readInt8())\r\n\t\t\t\tevent.metronome = stream.readInt8()\r\n\t\t\t\tevent.thirtyseconds = stream.readInt8()\r\n\t\t\t\treturn event\r\n\r\n\t\t\tcase 0x59:\r\n\t\t\t\tevent.subtype = 'keySignature'\r\n\t\t\t\tif (length !== 2){ throw \"Expected length for keySignature event is 2, got \" + length;}\r\n\t\t\t\tevent.key = stream.readInt8(true)\r\n\t\t\t\tevent.scale = stream.readInt8()\r\n\t\t\t\treturn event;\r\n\r\n\t\t\tcase 0x7f:\r\n\t\t\t\tevent.subtype = 'sequencerSpecific'\r\n\t\t\t\tevent.data = stream.read(length)\r\n\t\t\t\treturn event;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t// console.log(\"Unrecognised meta event subtype: \" + subtypeByte);\r\n\t\t\t\tevent.subtype = 'unknown'\r\n\t\t\t\tevent.data = stream.read(length)\r\n\t\t\t\treturn event;\r\n\t\t}\r\n\r\n\t} else if (eventTypeByte === 0xf0) {\r\n\r\n\t\tevent.type = MIDICommands.TYPE_SYSTEM_EXCLUSIVE\r\n\t\tconst length = stream.readVarInt()\r\n\t\tevent.data = stream.read(length)\r\n\t\treturn event;\r\n\r\n\t} else if (eventTypeByte === 0xf7) {\r\n\r\n\t\tevent.type = MIDICommands.TYPE_DIVIDED_SYSTEM_EXCLUSIVE\r\n\t\tconst length = stream.readVarInt()\r\n\t\tevent.data = stream.read(length)\r\n\t\treturn event\r\n\r\n\t} else {\r\n\t\tthrow \"Unrecognised MIDI event type byte: \" + eventTypeByte\r\n\t}\r\n}\r\n\r\n/**\r\n * Pass in a stream of raw data - get resolved data classes\r\n * @param {MidiStream} stream \r\n * @returns {MIDITrack}\r\n */\r\nexport const decodeMIDI = ( stream, options={} ) =>\r\n{\r\n\tconst header = decodeHeader( stream)\r\n\tconst track = new MIDITrack( header, options )\r\n\treturn decodeTracks( track, stream )\r\n}","export default class MIDICommand\r\n{\r\n\t// Uint8Array\r\n\traw\r\n\r\n\ttime = 0\r\n\ttimeCode = 0\r\n\r\n\tdeltaTime\r\n\tframeRate\r\n\tchannel\r\n\r\n\ttype\r\n\tsubtype\r\n\ttext\r\n\tdata\r\n\r\n\thour\r\n\tmin\r\n\tsec\r\n\tframe\r\n\tsubframe\r\n\tmicrosecondsPerBeat\r\n\r\n\tkey\r\n\tscale\r\n\tnumerator\r\n\tdenominator\r\n\tmetronome\r\n\tthirtyseconds\r\n\r\n\tamount\r\n\tnoteNumber\r\n\t// not an official MIDI spec but we use it in our app\r\n\tnoteName\r\n\tvelocity\r\n\r\n\t// pitch value from MIDI is 0 -> 16383\r\n\tvalue\r\n\r\n\tcontrollerType\r\n\tprogramNumber\r\n\tsequenceNumber\r\n\r\n\tconstructor(){\r\n\t}\r\n\r\n\ttoString()\r\n\t{\r\n\t\tlet output = `${this.time}. MIDI:Input::${this.subtype} Type:${this.type}`\r\n\t\tif (this.channel){ output += ` [Channel ${this.channel}] ` }\r\n\t\tif (this.noteNumber){ output += ` Note:${this.noteNumber} -> ${this.noteName}` }\r\n\t\tif (this.velocity){ output += ` Velocity:${this.velocity}` }\r\n\t\treturn output + '\\n'\r\n\t}\r\n}\r\n","import { GENERAL_MIDI_INSTRUMENTS } from './general-midi'\r\nimport MIDICommand from './midi-command'\r\nimport * as MIDICommands from './midi-commands'\r\n\r\nexport default class MidiTrack\r\n{\r\n\t// :MidiHeader\r\n\theader\r\n\r\n\t// :Array<MIDICommands>\r\n\ttracks = []\r\n\tcommands = []\r\n\tinstruments = []\r\n\tnoteOnCommands = []\r\n\r\n\ttrackName = \"\"\r\n\tmeta = \"\"\r\n\tcopyrightNotice = \"Copyright held by respective owners\"\r\n\tlyrics = \"\"\r\n\r\n\ttrackPosition = 0\r\n\tcommandPosition = 0\r\n\tduration = 0\r\n\r\n\tmimeType = \"audio/mid\"\r\n\r\n\tget ticksPerBeat(){\r\n\t\t// return \r\n\t}\r\n\r\n\tget tempo(){\r\n\t\t\r\n\t}\r\n\r\n\tget timeSignature(){\r\n\t\treturn [4,4]\r\n\t}\r\n\r\n\tgetMatchingCommands( types=[MIDICommands.COMMAND_NOTE_ON], type=\"channel\" )\r\n\t{\r\n\t\t// check if array or string and if string make array\r\n\t\tif (typeof types === String)\r\n\t\t{\r\n\t\t\ttypes = [types]\r\n\t\t}\r\n\t\treturn this.commands.filter( value => {\r\n\t\t\t//console.log(\"getMatchingCommands\",value.type === type,value)\r\n\t\t\t\r\n\t\t\tif (value.type === type)\r\n\t\t\t{\r\n\t\t\t\tconst typePosition = types.indexOf(value.subtype)\r\n\t\t\t\t//console.log(\"typePosition > -1\", typePosition > -1, types, value.subType)\r\n\t\t\t\treturn typePosition > -1\r\n\t\t\t}else{\r\n\t\t\t\t//console.log(\"getMatchingCommands\",value.type,value)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn false\r\n\t\t})\r\n\t}\r\n\r\n\tgetNextNoteCommand(){\r\n\r\n\t\tconst commands = []\r\n\t\tlet track = this.tracks[++this.trackPosition]\r\n\t\twhile ( track && track.subtype !== MIDICommands.COMMAND_NOTE_ON || track.subtype !== MIDICommands.COMMAND_NOTE_OFF  )\r\n\t\t{\r\n\t\t\ttrack = this.tracks[++this.trackPosition]\r\n\t\t}\r\n\r\n\t\twhile ( track && ( track.subtype === MIDICommands.COMMAND_NOTE_ON || track.subtype === MIDICommands.COMMAND_NOTE_OFF )  )\r\n\t\t{\r\n\t\t\tcommands.push(track)\r\n\t\t\ttrack = this.tracks[++this.trackPosition]\r\n\t\t}\r\n\t\t\r\n\t\treturn commands\r\n\t}\r\n\r\n\tgetNextNoteOnCommand(){\r\n\r\n\t\tconst commands = []\r\n\t\tlet track = this.tracks[++this.trackPosition]\r\n\t\r\n\t\twhile ( track && track.subtype === MIDICommands.COMMAND_NOTE_ON )\r\n\t\t{\r\n\t\t\tcommands.push(track)\r\n\t\t\ttrack = this.tracks[ ++this.trackPosition ]\r\n\t\t}\r\n\t\t\r\n\t\treturn commands\r\n\t}\r\n\r\n\tgetNextCommands(){\r\n\t\treturn this.tracks[ ++this.trackPosition ]\r\n\t}\r\n\r\n\tgetNextNoteOnCommand(){\r\n\t\treturn this.noteOnCommands[ ++this.commandPosition ]\r\n\t}\r\n\r\n\tgetDurationUntilNextCommand(){\r\n\t\tconst r = this.tracks[ this.trackPosition + 1 ]\r\n\t\treturn r ? r.deltaTime : -1\r\n\t}\r\n\r\n\t/**\r\n\t * If you want all of the events to also be stretchable\r\n\t * we can condense an entire track into 1 second and\r\n\t * move all of the events proportionally so that the \r\n\t * timings align with whatever you would like to fit it too\r\n\t * @param {MIDICommand} command \r\n\t */\r\n\tconvertTimeToFraction( command ){\r\n\t\treturn command.time / this.duration\r\n\t}\r\n\r\n\tcopyCommand( command ) {\r\n\t\tconst copy = new MIDICommand()\r\n\t\tfor (let i in command)\r\n\t\t{\r\n\t\t\tcopy[i] = command[i]\r\n\t\t}\r\n\t\treturn copy\r\n\t}\r\n\r\n\tconstructor( header=null, defaultOptions={} )\r\n\t{\r\n\t\tif (header) \r\n\t\t{\r\n\t\t\tthis.header = header\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i in defaultOptions)\r\n\t\t{\r\n\t\t\t// check to see if they are one of our subclasses...\r\n\t\t\tswitch (i)\r\n\t\t\t{\r\n\t\t\t\t// case \"header\": \r\n\t\t\t\t// \tthis.header = defaultOptions[i]\r\n\t\t\t\t// \tbreak\r\n\r\n\t\t\t\tcase \"commands\":\r\n\t\t\t\tcase \"noteOnCommands\":\r\n\t\t\t\t\tthis[i] = defaultOptions[i].map( command => this.copyCommand(command) )\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// check if is command\r\n\t\t\t\t\tthis[i] = defaultOptions[i]\r\n\t\t\t\t\tconsole.log(i, this[i] )\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t// A way of adding an event and multiple events to track\r\n\taddEvent( index, midiCommand )\r\n\t{\r\n\t\t// current previous event\r\n\t\tconst currentFinalCommand = this.commands[this.commands.length - 1]\r\n\t\t\r\n\t\t// check to see if there is an pocket already open\r\n\t\t// open a new pocket\r\n\t\tif (midiCommand.type === MIDICommands.TYPE_META)\r\n\t\t{\r\n\t\t\tswitch( midiCommand.subtype )\r\n\t\t\t{\r\n\t\t\t\tcase \"trackName\":\r\n\t\t\t\t\tif (midiCommand.text && midiCommand.text !== \"Untitled\" )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis[midiCommand.subtype] = midiCommand.text\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t\r\n\t\t\t\tcase \"text\":\r\n\t\t\t\tcase \"copyrightNotice\":\r\n\t\t\t\tcase \"lyrics\":\r\n\t\t\t\t\tif (midiCommand.text)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis[midiCommand.subtype] += midiCommand.text\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (midiCommand.text)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.meta += midiCommand.text\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}else{\r\n\r\n\t\t\t// Deal with instrument changes\r\n\t\t\tswitch( midiCommand.subtype )\r\n\t\t\t{\r\n\t\t\t\tcase MIDICommands.COMMAND_PROGRAM_CHANGE:\r\n\t\t\t\t\tconst instrumentName = GENERAL_MIDI_INSTRUMENTS[midiCommand.programNumber]\r\n\t\t\t\t\tthis.instruments.push( instrumentName )\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\r\n\t\t\tswitch( midiCommand.subtype )\r\n\t\t\t{\r\n\t\t\t\tcase MIDICommands.COMMAND_NOTE_ON:\r\n\t\t\t\tcase MIDICommands.COMMAND_NOTE_OFF:\r\n\t\t\t\tcase MIDICommands.COMMAND_CONTROLLER:\r\n\t\t\t\tcase MIDICommands.COMMAND_PITCH_BEND:\r\n\t\t\t\tcase MIDICommands.COMMAND_PROGRAM_CHANGE:\r\n\t\t\t\tcase MIDICommands.COMMAND_CHANNEL_AFTER_TOUCH:\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t// add multidimnsionally?\r\n\t\t\t\t\tif (!currentFinalCommand)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// first command!\r\n\t\t\t\t\t\t//console.log( \"Adding command\", {currentFinalCommand, midiCommand} )\r\n\t\t\t\t\t\tthis.tracks.push([midiCommand])\r\n\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\tif (midiCommand.deltaTime === 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst previousDeltaTime = currentFinalCommand.timeCode\r\n\t\t\t\t\t\t\tmidiCommand.timeCode = previousDeltaTime\r\n\t\t\t\t\t\t\tmidiCommand.time = this.duration\r\n\r\n\t\t\t\t\t\t\t// modify command to contain correct timecode\r\n\t\t\t\t\t\t\tconst commandsAtLocation = this.tracks[ this.tracks.length - 1 ]\r\n\t\t\t\t\t\t\tcommandsAtLocation.push(midiCommand)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//console.log( \"Appending deltaTime 0\", {commandsAtLocation, currentFinalCommand, midiCommand} )\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\t\t// add to duration\r\n\t\t\t\t\t\t\tthis.duration += midiCommand.deltaTime || 0 \r\n\r\n\t\t\t\t\t\t\tmidiCommand.timeCode = midiCommand.deltaTime\r\n\t\t\t\t\t\t\tmidiCommand.time = this.duration\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//console.log( \"Adding\", {currentFinalCommand, midiCommand} )\r\n\t\t\t\t\t\t\tthis.tracks.push([midiCommand])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.commands.push(midiCommand)\r\n\t\t\t}\r\n\r\n\t\t\tswitch( midiCommand.subtype )\r\n\t\t\t{\r\n\t\t\t\tcase MIDICommands.COMMAND_NOTE_ON:\r\n\t\t\t\t\tthis.noteOnCommands.push(midiCommand)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\t\r\n\ttoString()\r\n\t{\r\n\t\treturn `MIDI:Track::${this.commands.map( track => track.toString() ).join(\", \")}`\r\n\t}\r\n\r\n\r\n\tcommandToJSON( command )\r\n\t{\r\n\t\tlet output = `${command.time}. MIDI:Input::${command.subtype} Type:${command.type}`\r\n\t\tif (command.channel){ output += ` [Channel ${command.channel}] ` }\r\n\t\tif (command.noteNumber){ output += ` Note:${command.noteNumber} -> ${command.noteName}` }\r\n\t\tif (command.velocity){ output += ` Velocity:${command.velocity}` }\r\n\t\treturn output\r\n\t}\r\n\r\n\t// To load save midi tracks in a web friendlier way, we can serialise it to JSON\r\n\ttoJSON()\r\n\t{\r\n\t\tconst o = this.commands.map( command => commandToJSON(command) )\r\n\t\treturn o // `[${this.tracks.map( track => track.toString() ).join(\",\")}]`\r\n\t}\r\n}","// [General MIDI Instrument Patch Map](https://www.midi.org/specifications/item/gm-level-1-sound-set)\r\n// [General MIDI Instrument Patch Map](http://cs.uccs.edu/~cs525/midi/midi.html)\r\n/*\r\nGeneral MIDI Level 1 Instrument Families\r\n\r\nThe General MIDI Level 1 instrument sounds are grouped by families.\r\nIn each family are 8 specific instruments.\r\n\r\nPC# \tFamily Name\r\n1-8 \tPiano\r\n9-16 \tChromatic Percussion\r\n17-24 \tOrgan\r\n25-32 \tGuitar\r\n33-40 \tBass\r\n41-48 \tStrings\r\n49-56 \tEnsemble\r\n57-64 \tBrass\r\n65-72 \tReed\r\n73-80 \tPipe\r\n81-88 \tSynth Lead\r\n89-96 \tSynth Pad\r\n97-104 \tSynth Effects\r\n105-112 Ethnic\r\n113-120 Percussive\r\n121-128 Sound Effects\r\n\r\nOn MIDI Channel 10, each MIDI Note number (\"Key#\") corresponds to a different drum sound, as shown below.\r\nGM-compatible instruments must have the sounds on the keys shown here.\r\n\r\nWhile many current instruments also have additional sounds above or below the range show here,\r\nand may even have additional \"kits\" with variations of these sounds, only these sounds are supported\r\nby General MIDI Level 1 devices.\r\n\r\n*/\r\nexport const GENERAL_MIDI_INSTRUMENTS = [\r\n\t\"acoustic grand piano\",\r\n\t\"bright acoustic piano\",\r\n\t\"electric grand piano\",\r\n\t\"honky-tonk piano\",\r\n\t\"electric piano 1\",\r\n\t\"electric piano 2\",\r\n\t\"harpsichord\",\r\n\t\"clavi\",\r\n\t\"celesta\",\r\n\t\"glockenspiel\",\r\n\t\"music box\",\r\n\t\"vibraphone\",\r\n\t\"marimba\",\r\n\t\"xylophone\",\r\n\t\"tubular bells\",\r\n\t\"dulcimer\",\r\n\t\"drawbar organ\",\r\n\t\"percussive organ\",\r\n\t\"rock organ\",\r\n\t\"church organ\",\r\n\t\"reed organ\",\r\n\t\"accordion\",\r\n\t\"harmonica\",\r\n\t\"tango accordion\",\r\n\t\"acoustic guitar (nylon)\",\r\n\t\"acoustic guitar (steel)\",\r\n\t\"electric guitar (jazz)\",\r\n\t\"electric guitar (clean)\",\r\n\t\"electric guitar (muted)\",\r\n\t\"overdriven guitar\",\r\n\t\"distortion guitar\",\r\n\t\"guitar harmonics\",\r\n\t\"acoustic bass\",\r\n\t\"electric bass (finger)\",\r\n\t\"electric bass (pick)\",\r\n\t\"fretless bass\",\r\n\t\"slap bass 1\",\r\n\t\"slap bass 2\",\r\n\t\"synth bass 1\",\r\n\t\"synth bass 2\",\r\n\t\"violin\",\r\n\t\"viola\",\r\n\t\"cello\",\r\n\t\"contrabass\",\r\n\t\"tremolo strings\",\r\n\t\"pizzicato strings\",\r\n\t\"orchestral harp\",\r\n\t\"timpani\",\r\n\t\"string ensemble 1\",\r\n\t\"string ensemble 2\",\r\n\t\"synthstrings 1\",\r\n\t\"synthstrings 2\",\r\n\t\"choir aahs\",\r\n\t\"voice oohs\",\r\n\t\"synth voice\",\r\n\t\"orchestra hit\",\r\n\t\"trumpet\",\r\n\t\"trombone\",\r\n\t\"tuba\",\r\n\t\"muted trumpet\",\r\n\t\"french horn\",\r\n\t\"brass section\",\r\n\t\"synthbrass 1\",\r\n\t\"synthbrass 2\",\r\n\t\"soprano sax\",\r\n\t\"alto sax\",\r\n\t\"tenor sax\",\r\n\t\"baritone sax\",\r\n\t\"oboe\",\r\n\t\"english horn\",\r\n\t\"bassoon\",\r\n\t\"clarinet\",\r\n\t\"piccolo\",\r\n\t\"flute\",\r\n\t\"recorder\",\r\n\t\"pan flute\",\r\n\t\"blown bottle\",\r\n\t\"shakuhachi\",\r\n\t\"whistle\",\r\n\t\"ocarina\",\r\n\t\"lead 1 (square)\",\r\n\t\"lead 2 (sawtooth)\",\r\n\t\"lead 3 (calliope)\",\r\n\t\"lead 4 (chiff)\",\r\n\t\"lead 5 (charang)\",\r\n\t\"lead 6 (voice)\",\r\n\t\"lead 7 (fifths)\",\r\n\t\"lead 8 (bass + lead)\",\r\n\t\"pad 1 (new age)\",\r\n\t\"pad 2 (warm)\",\r\n\t\"pad 3 (polysynth)\",\r\n\t\"pad 4 (choir)\",\r\n\t\"pad 5 (bowed)\",\r\n\t\"pad 6 (metallic)\",\r\n\t\"pad 7 (halo)\",\r\n\t\"pad 8 (sweep)\",\r\n\t\"fx 1 (rain)\",\r\n\t\"fx 2 (soundtrack)\",\r\n\t\"fx 3 (crystal)\",\r\n\t\"fx 4 (atmosphere)\",\r\n\t\"fx 5 (brightness)\",\r\n\t\"fx 6 (goblins)\",\r\n\t\"fx 7 (echoes)\",\r\n\t\"fx 8 (sci-fi)\",\r\n\t\"sitar\",\r\n\t\"banjo\",\r\n\t\"shamisen\",\r\n\t\"koto\",\r\n\t\"kalimba\",\r\n\t\"bag pipe\",\r\n\t\"fiddle\",\r\n\t\"shanai\",\r\n\t\"tinkle bell\",\r\n\t\"agogo\",\r\n\t\"steel drums\",\r\n\t\"woodblock\",\r\n\t\"taiko drum\",\r\n\t\"melodic tom\",\r\n\t\"synth drum\",\r\n\t\"reverse cymbal\",\r\n\t\"guitar fret noise\",\r\n\t\"breath noise\",\r\n\t\"seashore\",\r\n\t\"bird tweet\",\r\n\t\"telephone ring\",\r\n\t\"helicopter\",\r\n\t\"applause\",\r\n\t\"gunshot\",\r\n]\r\n\r\nexport const GENERAL_MIDI_INSTRUMENT_FAMILY_NAMES = [\r\n\t\"piano\",\r\n\t\"chromatic percussion\",\r\n\t\"organ\",\r\n\t\"guitar\",\r\n\t\"bass\",\r\n\t\"strings\",\r\n\t\"ensemble\",\r\n\t\"brass\",\r\n\t\"reed\",\r\n\t\"pipe\",\r\n\t\"synth lead\",\r\n\t\"synth pad\",\r\n\t\"synth effects\",\r\n\t\"ethnic\",\r\n\t\"percussive\",\r\n\t\"sound effects\",\r\n]\r\n\r\nexport const GENERAL_MIDI_INSTRUMENT_FAMILY_IDS = {\r\n\t0: \"piano\",\r\n\t7: \"chromatic percussion\",\r\n\t12: \"organ\",\r\n\t25: \"guitar\",\r\n\t33: \"bass\",\r\n\t41: \"strings\",\r\n\t49: \"ensemble\",\r\n\t57: \"brass\",\r\n\t65: \"reed\",\r\n\t69: \"pipe\",\r\n\t81: \"synth lead\",\r\n\t89: \"synth pad\",\r\n\t97: \"synth effects\",\r\n\t// some rasict shit right here akin to \"world\" music\r\n\t105: \"ethnic\",\r\n\t113: \"percussive\",\r\n\t123: \"sound effects\"\r\n}\r\n\r\nexport const GENERAL_MIDI_FAMILIES = new Map()\r\n\r\n// This creates a Map of instument arrays\r\nexport const GENERAL_MIDI_INSTRUMENT_FAMILIES = {}\r\n\r\nexport const FAMILY_DICTIONARY = {}\r\nlet latch = GENERAL_MIDI_INSTRUMENT_FAMILY_IDS[0]\r\nGENERAL_MIDI_INSTRUMENTS.forEach( (instrument, index) => {\r\n\t\r\n\tif (GENERAL_MIDI_INSTRUMENT_FAMILY_IDS[index])\r\n\t{\r\n\t\tlatch = GENERAL_MIDI_INSTRUMENT_FAMILY_IDS[index]\r\n\t}\r\n\t// GENERAL_MIDI_INSTRUMENT_FAMILY_IDS[index]\r\n\tGENERAL_MIDI_FAMILIES.set( latch, [...(GENERAL_MIDI_FAMILIES.get(latch) || []), instrument] )\r\n\tFAMILY_DICTIONARY[instrument] = latch\r\n})\r\n\r\n\r\nexport const DrumKitByPatchID = {\r\n\t 0: \"standard kit\",\r\n\t 8: \"room kit\",\r\n\t16: \"power kit\",\r\n\t24: \"electronic kit\",\r\n\t25: \"tr-808 kit\",\r\n\t32: \"jazz kit\",\r\n\t40: \"brush kit\",\r\n\t48: \"orchestra kit\",\r\n\t56: \"sound fx kit\",\r\n}\r\n\r\n/*\r\n\r\nChannel 10 Drum sounds (overwrites the noteNumber)\r\n\r\nDrum Sound - 35\r\nAcoustic Bass Drum - 36\r\nBass Drum 1 - 37\r\nSide Stick 38 \r\nAcoustic Snare - 39\r\nHand Clap 40\r\nElectric Snare 41\r\nLow Floor Tom 42\r\nClosed Hi Hat 43\r\nHigh Floor Tom 44\r\nPedal Hi-Hat 45\r\nLow Tom 46\r\nOpen Hi-Hat 47\r\nLow-Mid Tom 48\r\nHi-Mid Tom 49\r\nCrash Cymbal 1 50\r\nHigh Tom 51\r\nRide Cymbal 1 52\r\nChinese Cymbal 53\r\nRide Bell 54\r\nTambourine 55\r\nSplash Cymbal 56\r\nCowbell 57\r\nCrash Cymbal 2 58\r\nVibraslap 59\r\nRide Cymbal 2 60\r\nHi Bongo 61\r\nLow Bongo 62\r\nMute Hi Conga 63\r\nOpen Hi Conga 64\r\nLow Conga 65\r\nHigh Timbale 66\r\nLow Timbale 67\r\nHigh Agogo 68\r\nLow Agogo 69\r\nCabasa 70\r\nMaracas 71\r\nShort Whistle \r\n72\r\nLong Whistle \r\n73\r\nShort Guiro \r\n74\r\nLong Guiro \r\n75\r\nClaves\r\n76\r\nHi Wood Block\r\n77\r\nLow Wood Block\r\n78\r\nMute Cuica\r\n79\r\nOpen Cuica\r\n80\r\nMute Triangle\r\n81\r\nOpen Triangle\r\n*/","// Types!\r\nexport const TYPE_CHANNEL                   = 'channel'\r\nexport const TYPE_META                      = 'meta'\r\nexport const TYPE_SYSTEM_EXCLUSIVE          = 'sysEx'\r\nexport const TYPE_DIVIDED_SYSTEM_EXCLUSIVE  = 'dividedSysEx'\r\n\r\n// Commands!\r\nexport const COMMAND_NOTE_OFF               = 'noteOff'\r\nexport const COMMAND_NOTE_ON                = 'noteOn'\r\nexport const COMMAND_NOTE_AFTER_TOUCH       = 'noteAftertouch'\r\nexport const COMMAND_CONTROLLER             = 'controller'\r\nexport const COMMAND_PROGRAM_CHANGE         = 'programChange'\r\n\r\nexport const COMMAND_CHANNEL_AFTER_TOUCH    = 'channelAftertouch'\r\nexport const COMMAND_CHANNEL_PRESSURE       = 'channelPressure'\r\n\r\nexport const COMMAND_PITCH_BEND             = 'pitchBend'\r\nexport const COMMAND_SYSTEM_MESSAGE         = 'systemMessage'\r\n\r\nexport const COMMANDS = [\r\n\tCOMMAND_NOTE_OFF,\r\n\tCOMMAND_NOTE_ON,\r\n\tCOMMAND_NOTE_AFTER_TOUCH,\r\n\tCOMMAND_CONTROLLER,\r\n\tCOMMAND_PROGRAM_CHANGE,\r\n\tCOMMAND_CHANNEL_PRESSURE,\r\n\tCOMMAND_PITCH_BEND,\r\n\tCOMMAND_SYSTEM_MESSAGE\r\n]","\r\nimport {clamp} from \"../maths/maths\"\r\n\r\n// Memoize as much as possible\r\n\r\nconst NOTES_ALPHABETICAL = [\"A\",\"Ab\",\"B\",\"Bb\",\"C\",\"D\", \"Db\",\"E\", \"Eb\", \"F\", \"G\",\"Gb\"]\r\n// const CONVERSION_NOTES = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"]\r\n\r\nconst NOTES_BLACK = [\"Ab\", \"Bb\", \"Db\", \"Eb\", \"Gb\"]\r\nconst NOTES_WHITE = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\" ]\r\nconst NOTES_BLACK_INDEXES = NOTES_BLACK.length - 1\r\nconst NOTES_WHITE_INDEXES = NOTES_WHITE.length - 1\r\nconst NOTE_RANGE = NOTES_ALPHABETICAL.length\r\n\r\n// renamed white notes\r\nexport const SOLFEGE_SCALE = ['Doe', 'Ray', 'Me', 'Far', 'Sew', 'La', 'Tea' ]\r\n\r\n// this is an object with the keys being the NOTE_NAMES\r\n// MIDI conversion stuff\r\nconst NOTE_NAME_MAP = {}\r\nconst NOTE_FRIENDLY_NAME_MAP = {}\r\nconst TEST_MAP = {}\r\n\r\nconst MIDI_NOTE_NUMBER_MAP = []\r\nconst MIDI_NOTE_NUMBERS = []\r\nconst MIDI_NOTE_NAMES = []\r\nconst GENERAL_MIDI_INSTRUMENTS = []\r\n\r\n/**\r\n * returns a note name from an index and offset\r\n * @param {Number} index \r\n * @param {Number} offset \r\n * @returns {Number} noteNumber\r\n */\r\nconst getNoteFromBank = (index=0, offset=0) => {\r\n\tconst rotation = index + offset\r\n\treturn NOTES_ALPHABETICAL[ rotation < 0 ? NOTE_RANGE + rotation : rotation % NOTE_RANGE ]\r\n}\r\n\r\n/**\r\n * The instruments are all named the same way and this method\r\n * creates the data model\r\n * @param {String} fileType - audio file type (wav, ogg or mp3)\r\n * @param {String} dot - delimiter before file type\r\n * @returns {String} Array containing the following strings...\r\n * A0-7 / Ab1-7 / B0-7 / Bb1-Bb7 / C1-C8 / D1-7 / Db1-7 / E1-7 / Eb1-7 / F1-7 / G1-7 / Gb1-7\r\n */\r\nexport const createInstrumentBanks = (fileType=\"mp3\", dot=\".\")=>{\r\n\tconst bank = []\r\n\tfor (let b=0; b<NOTES_ALPHABETICAL.length;++b)\r\n\t{\r\n\t\tconst key = NOTES_ALPHABETICAL[b]\r\n\t\t\r\n\t\tif (key===\"A\")\r\n\t\t{\r\n\t\t\tbank.push( `A0${dot}${fileType}` )\r\n\r\n\t\t}else if (key===\"B\"){\r\n\r\n\t\t\tbank.push( `B0${dot}${fileType}` )\r\n\t\t}\r\n\r\n\t\tfor (let i=1; i<8; ++i)\r\n\t\t{\r\n\t\t\tbank.push( `${key}${i}${dot}${fileType}` )\r\n\t\t}\r\n\r\n\t\t// add an extra one for C\r\n\t\tif (key===\"C\")\r\n\t\t{\r\n\t\t\tbank.push( `C8${dot}${fileType}` )\r\n\t\t}\r\n\t}\r\n\treturn bank\r\n}\r\nconst extractKeyAndOctave = note => {\r\n\tconst key = note.charAt(0)\r\n\tconst octave = parseInt( note.charAt( note.length - 1 ) ) // + 1\r\n\treturn {\r\n\t\tkey, octave\r\n\t}\r\n}\r\n\r\nconst friendly = note => {\r\n\tconst {key, octave} = extractKeyAndOctave(note)\r\n\tnote = note.replace( octave, `-${octave}` )\r\n\tnote = note.replace(\"b\",\"#\")\r\n\treturn note\r\n}\r\n\r\n\r\nexport const NOTE_NAMES = createInstrumentBanks('','')\r\n\r\n// for each name we do a clever thing innit...\r\nconst NOTE_NAMES_FRIENDLY = NOTE_NAMES.map( note => friendly(note) )\r\n\r\n\r\n// NB. We only have instruments for the GM Range so \r\n//\t\tall MIDI numbers below 21 should be ignored really!\r\nfor(let noteNumber = 0; noteNumber < 127; noteNumber++) \r\n{\r\n\t// MIDI scale starts at octave = -1\r\n\tconst octave = ((noteNumber / NOTE_RANGE) | 0) - 1\r\n\tconst key = getNoteFromBank(noteNumber % NOTE_RANGE, 4)\r\n\tconst midiNoteName = `${key}${octave}`\r\n\r\n\r\n\tNOTE_FRIENDLY_NAME_MAP[midiNoteName] = NOTE_NAMES_FRIENDLY[noteNumber]\r\n\r\n\tNOTE_NAME_MAP[midiNoteName] = noteNumber\r\n\r\n\tMIDI_NOTE_NUMBERS[noteNumber] = midiNoteName\r\n\tMIDI_NOTE_NAMES[noteNumber] = midiNoteName\r\n\tMIDI_NOTE_NUMBER_MAP[noteNumber] = {octave,key}\r\n\r\n\t// ensure that it exists in our super array...\r\n\tconst hasSample = NOTE_NAMES.indexOf(midiNoteName) > -1\r\n\tGENERAL_MIDI_INSTRUMENTS[noteNumber] = hasSample ? midiNoteName : `UNKNOWN`\r\n}\r\n\r\n// console.error(\"MIDI\", { NOTE_NAME_MAP })\r\n// // console.error(\"MIDI\", { NOTES_ALPHABETICAL, CHROMATIC, CONVERSION_NOTES, MIDI_NOTE_NUMBERS, MIDI_CONVERTOR })\r\n// console.error({GENERAL_MIDI_INSTRUMENTS, NOTES_ALPHABETICAL, MIDI_NOTE_NUMBERS, MIDI_NOTE_NUMBER_MAP, NOTE_NAME_MAP, NOTE_NAMES,NOTE_FRIENDLY_NAME_MAP, NOTE_NAMES_FRIENDLY})\r\n\r\n\r\n// export const getNoteText = noteName => {\r\n// \tconst note = noteName.charAt(0)\r\n// \tlet octave\r\n// \t// if we have 3 figures we swap out the 2nd one for a \r\n// \tif (noteName.length === 3)\r\n// \t{\r\n// \t\toctave = parseInt( noteName.charAt(2) ) + 1\r\n// \t\treturn `${note}#${octave}`\r\n// \t}\r\n// \toctave = parseInt( noteName.charAt(1) ) + 1\r\n// \treturn `${note}${octave}`\r\n// }\r\n\r\n\r\n/**\r\n * what percentage of an octave results in\r\n * which musical notes\r\n * @param {*} percent \r\n * @param {Number} octave - octaves 1-7\r\n * @param {Boolean} isMinor \r\n * @returns A1 Ab1 etc\r\n */\r\nexport const getNoteName = (percent, octave=3, isMinor=false) => {\r\n\r\n\t// restrict to 1-7 even though 0 is available for many\r\n\t// octave = clamp(octave, 1, 7)\r\n\tlet noteNumber\r\n\tlet noteName\r\n\t\r\n\tif (isMinor)\r\n\t{\r\n\t\tnoteNumber = Math.floor( percent * NOTES_BLACK_INDEXES )\r\n\t\tnoteName = NOTES_BLACK[noteNumber]\r\n\t}else{\r\n\t\tnoteNumber = Math.floor( percent * NOTES_WHITE_INDEXES )\r\n\t\tnoteName = NOTES_WHITE[noteNumber]\r\n\t}\r\n\r\n\t// here is where we need to do our majic\r\n\t// const BANKS = [\"A\",\"Ab\",\"B\",\"Bb\",\"C\",\"D\", \"Db\",\"E\", \"Eb\", \"F\", \"G\",\"Gb\"]\r\n\t// play a note from bank (this is the same for every octave?)\r\n\t// const noteNumber = Math.floor( percent * (BANKS.length-1) )\r\n\t\r\n\t// console.log(\"Creating note\", {percent, octave, isMinor, noteNumber, noteName} )\r\n\t// const noteNumber = Math.floor( percent * (NOTE_NAMES.length-1) )\r\n\t// const noteNumber = Math.floor( percent * (NOTE_NAMES.length-1) )\r\n\t// const noteNumber = Math.floor( lipPercentage * (INSTRUMENT_NAMES.length-1) )\r\n\t// const noteName = NOTE_NAMES[noteNumber]\r\n\r\n\t// just in case the note name is not found?\r\n\treturn `${noteName}${clamp(octave, 1, 7)}`\r\n\t// return noteName ? `${noteName}${clamp(octave, 1, 7)}` : `A0`\r\n}\r\n\r\n/**\r\n * return the relevent do re me fah so lat ti\r\n * @param {*} percent \r\n * @param {*} isMinor \r\n * @returns \r\n */\r\nexport const getNoteSound = (percent, isMinor=false) => SOLFEGE_SCALE[ Math.floor( percent * (SOLFEGE_SCALE.length-1) ) ]\r\n\r\n// Pass in A0 get out the equivalent friendly name\r\nexport const getFriendlyNoteName = noteName => NOTE_FRIENDLY_NAME_MAP[noteName] || noteName\r\n\r\n/**\r\n * Get the note name (in scientific notation) of the given midi number\r\n *\r\n * It uses MIDI's [Tuning Standard](https://en.wikipedia.org/wiki/MIDI_Tuning_Standard)\r\n * where A4 is 69\r\n *\r\n * This method doesn't take into account diatonic spelling. Always the same\r\n * pitch class is given for the same midi number.\r\n *\r\n * @name midi.note\r\n * @function\r\n * @param {Integer} midi - the midi number\r\n * @return {String} the pitch\r\n */\r\nexport const convertNoteNameToMIDINoteNumber = name => NOTE_NAME_MAP[name]\r\n\r\nexport const convertMIDINoteNumberToName = note => GENERAL_MIDI_INSTRUMENTS[note]\r\n\r\nexport const noteNumberToFrequency = (note) => {\r\n\treturn 440 * Math.pow(2, (note - 69) / 12)\r\n}\r\n\r\nconst L = Math.log(2)\r\nexport const frequencyToNoteNumber = (f) => {\r\n\tconst log = Math.log(f / 440) / L\r\n\treturn Math.round(12 * log + 69)\r\n}","export const TAU = 2 * Math.PI\r\nexport const HALF_PI = Math.PI * 0.5\r\n\r\nconst {PI, sqrt, atan2, tan} = Math\r\n\r\n// provide the value and a smallest and largest original then new sizes\r\n// Functional Program\r\nexport const rescale = ( smallest, largest=1) => {\r\n    // find the scale and create a method that allows \r\n    // you to simply rescale at will\r\n    const range = 1 / ( largest - smallest )\r\n\r\n    // return a method that you can pass a value to\r\n    return value => range * ( value - smallest )\r\n}\r\n\r\n// Feed it a right angle triangle and get the angle between the edges\r\nexport const determineAngle = ( pointA, pointB ) => {\r\n\r\n\t// determine missing point?\r\n\t// const hypoteneuseX = pointO[0]\r\n\t// const hypoteneuseY = pointA[1]\r\n\r\n\t// work out the lengths of the known edges\r\n\tconst oppositeLength = pointA[1] - pointB[1] \r\n\tconst adjacentLength = pointB[0] - pointA[0]\r\n\r\n\tconst angleInRadians = atan2(oppositeLength, adjacentLength)\r\n\t// process?\r\n\treturn angleInRadians\r\n}\r\n\r\n// distance between a & b via right angled triangle\r\nexport const distanceBetween2Points = (pointA, pointB) => sqrt(\r\n    ( pointA[ 0 ] - pointB[ 0 ] ) ** 2 + \r\n    ( pointA[ 1 ] - pointB[ 1 ] ) ** 2\r\n)\r\nexport const distanceBetween3Points = (pointA, pointB) => sqrt(\r\n    ( pointA[ 0 ] - pointB[ 0 ] ) ** 2 + \r\n    ( pointA[ 1 ] - pointB[ 1 ] ) ** 2 +\r\n    ( pointA[ 2 ] - pointB[ 2 ] ) ** 2\r\n)\r\n\r\nexport const distance3D = (aX,bX,  aY,bY, aZ,bZ ) => sqrt(\r\n    (aX - bX) ** 2 + \r\n    (aY - bY) ** 2 + \r\n    (aZ - bZ) ** 2\r\n)\r\n\r\n// distance between a & b via right angled triangle\r\nexport const distance2D = (aX,bX,aY,bY) => sqrt(\r\n    (aX - bX) ** 2 + \r\n    (aY - bY) ** 2\r\n)\r\n\r\nexport const lerp = (start, end, amt) => (1-amt) * start + amt * end\r\n\r\n// Restrict between\r\nexport const clamp = (val, min, max) => val > max ? max : val < min ? min : val\r\n\r\n// cheaper than TAN\r\nexport const twist = (value, amount=0) => {\r\n\r\n\t// if it is negative, invert\r\n\tif (value < 0)\r\n\t{\r\n\t\tvalue = (value + 1) * -1\r\n\t}else{\r\n\t\tvalue = 1 - value\r\n\t}\r\n\t//return value + amount\r\n\treturn clamp(value + amount,-1,1)\r\n}","export const convertOptionToObject = items => items.reduce( (accumulator, current) => {\r\n\tconst c = current.split(\":\")\r\n\taccumulator[c[0]] = parseFloat(c[1])\r\n\treturn accumulator\r\n}, {})\r\n\r\nexport const debounce = (callback, wait) => {\r\n\tlet timerId\r\n\t\r\n\treturn (...args) => {\r\n\t\t//console.error(args, \"debounce\", arguments)\r\n\t  clearTimeout(timerId)\r\n\t  timerId = setTimeout(() => callback(...args), wait)\r\n\t  return timerId\r\n\t}\r\n}\r\n\r\n\r\n// DECODE UTILITIES\r\n\r\n\r\n/*\r\nBase64 / binary data / UTF-8 strings utilities\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding\r\nhttps://github.com/audiojs/audio-loader/blob/master/lib/base64.js\r\n*/\r\nexport const b64ToUint6 = nChr => {\r\n\treturn nChr > 64 && nChr < 91 ? nChr - 65\r\n\t  : nChr > 96 && nChr < 123 ? nChr - 71\r\n\t  : nChr > 47 && nChr < 58 ? nChr + 4\r\n\t  : nChr === 43 ? 62\r\n\t  : nChr === 47 ? 63\r\n\t  : 0\r\n}\r\n\r\n/**\r\n * Base64 string to array encoding \r\n * @param {Uint6} nUint6 \r\n * @returns \r\n */\r\nexport const uint6ToB64 = nUint6 => {\r\n\treturn nUint6 < 26 ? nUint6 + 65\r\n\t  : nUint6 < 52 ? nUint6 + 71\r\n\t  : nUint6 < 62 ? nUint6 - 4\r\n\t  : nUint6 === 62 ? 43\r\n\t  : nUint6 === 63 ? 47\r\n\t  : 65\r\n}\r\n\r\n/**\r\n * Decode Base64 to Uint8Array\r\n * @param {sBase64} sBase64 \r\n * @param {nBlocksSize} nBlocksSize \r\n * @returns Uint8Array\r\n */\r\nexport const decodeBase64 = (sBase64, nBlocksSize) => {\r\n\tconst sB64Enc = sBase64.replace(/[^A-Za-z0-9\\+\\/]/g, '')\r\n\tconst nInLen = sB64Enc.length\r\n\tconst nOutLen = nBlocksSize\r\n\t  ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize\r\n\t  : nInLen * 3 + 1 >> 2\r\n\r\n\tconst taBytes = new Uint8Array(nOutLen)\r\n  \r\n\tfor (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) \r\n\t{\r\n\t  nMod4 = nInIdx & 3\r\n\t  nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4\r\n\t  if (nMod4 === 3 || nInLen - nInIdx === 1) \r\n\t  {\r\n\t\tfor (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) \r\n\t\t{\r\n\t\t  taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255\r\n\t\t}\r\n\t\tnUint24 = 0\r\n\t  }\r\n\t}\r\n\treturn taBytes\r\n}\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const base64DecToArr = (sBase64, nBlocksSize) => {\r\n\r\n  var\r\n    sB64Enc = sBase64.replace(/[^A-Za-z0-9\\+\\/]/g, \"\"), nInLen = sB64Enc.length,\r\n    nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2, taBytes = new Uint8Array(nOutLen);\r\n\r\n  for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n    nMod4 = nInIdx & 3;\r\n    nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 6 * (3 - nMod4);\r\n    if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n      }\r\n      nUint24 = 0;\r\n\r\n    }\r\n  }\r\n\r\n  return taBytes;\r\n}\r\n\r\n\r\nexport const base64EncArr = (aBytes) => {\r\n\r\n  let nMod3 = 2, sB64Enc = \"\"\r\n  for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) \r\n  {\r\n    nMod3 = nIdx % 3\r\n    if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) \r\n\t{ \r\n\t\tsB64Enc += \"\\r\\n\" \r\n\t}\r\n    nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24)\r\n    if (nMod3 === 2 || aBytes.length - nIdx === 1) \r\n\t{\r\n      sB64Enc += String.fromCodePoint(uint6ToB64(nUint24 >>> 18 & 63), uint6ToB64(nUint24 >>> 12 & 63), uint6ToB64(nUint24 >>> 6 & 63), uint6ToB64(nUint24 & 63))\r\n      nUint24 = 0\r\n    }\r\n  }\r\n\r\n  return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3) + (nMod3 === 2 ? '' : nMod3 === 1 ? '=' : '==');\r\n}\r\n\r\n/**\r\n * UTF-8 array to JS string and vice versa \r\n */\r\nexport const UTF8ArrToStr = (aBytes) => {\r\n  let sView = \"\"\r\n  for (var nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) \r\n  {\r\n    nPart = aBytes[nIdx]\r\n    sView += String.fromCodePoint(\r\n      nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n        /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n        (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n      : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n      : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n        (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n      : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n        (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n      : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n        (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n      : /* nPart < 127 ? */ /* one byte */\r\n        nPart\r\n    )\r\n  }\r\n  return sView\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} sDOMStr \r\n * @returns \r\n */\r\nexport const strToUTF8Arr = (sDOMStr) => {\r\n\r\n  var aBytes, nChr, nStrLen = sDOMStr.length, nArrLen = 0\r\n\r\n  /* mapping... */\r\n\r\n  for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) \r\n  {\r\n    nChr = sDOMStr.codePointAt(nMapIdx)\r\n\r\n    if (nChr > 65536) {\r\n      nMapIdx++\r\n    }\r\n\r\n    nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6\r\n  }\r\n\r\n  aBytes = new Uint8Array(nArrLen)\r\n\r\n  /* transcription... */\r\n  for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) \r\n  {\r\n    nChr = sDOMStr.codePointAt(nChrIdx)\r\n    if (nChr < 128) {\r\n      /* one byte */\r\n      aBytes[nIdx++] = nChr\r\n    } else if (nChr < 0x800) {\r\n      /* two bytes */\r\n      aBytes[nIdx++] = 192 + (nChr >>> 6)\r\n      aBytes[nIdx++] = 128 + (nChr & 63)\r\n    } else if (nChr < 0x10000) {\r\n      /* three bytes */\r\n      aBytes[nIdx++] = 224 + (nChr >>> 12)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 6 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr & 63)\r\n    } else if (nChr < 0x200000) {\r\n      /* four bytes */\r\n      aBytes[nIdx++] = 240 + (nChr >>> 18)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 12 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 6 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr & 63);\r\n      nChrIdx++\r\n    } else if (nChr < 0x4000000) {\r\n      /* five bytes */\r\n      aBytes[nIdx++] = 248 + (nChr >>> 24)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 18 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 12 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 6 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr & 63)\r\n      nChrIdx++\r\n    } else /* if (nChr <= 0x7fffffff) */ {\r\n      /* six bytes */\r\n      aBytes[nIdx++] = 252 + (nChr >>> 30)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 24 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 18 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 12 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr >>> 6 & 63)\r\n      aBytes[nIdx++] = 128 + (nChr & 63)\r\n      nChrIdx++\r\n    }\r\n  }\r\n  return aBytes\r\n}\r\n\r\n\r\nexport const toBytes = (number, byteCount) => {\r\n\tconst bytes = new Array(byteCount)\r\n\tfor (let i = byteCount - 1; i >= 0; i--) \r\n\t{\r\n\t\tbytes[i] = number & 255\r\n\t\tnumber >>= 8\r\n\t}\r\n\treturn bytes\r\n}\r\n\r\nexport const toVarLenBytes = (number) => {\r\n\tconst bytes = []\r\n\tlet last = true\r\n\tdo {\r\n\t\tconst partial_value = number & 127\r\n\t\tnumber >>= 7\r\n\t\tif (last) {\r\n\t\t\t// first bit is off for last byte\r\n\t\t\tbytes.unshift(partial_value)\r\n\t\t\tlast = false\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// set first bit on for all other bytes\r\n\t\t\tbytes.unshift(partial_value | 128)\r\n\t\t}\r\n\t} while (number > 0)\r\n\treturn bytes\r\n}\r\n\r\n\r\n/* Array of bytes to Base64 string decoding */\r\n\r\n// export const b64ToUint6 = (nChr) => {\r\n// \treturn nChr > 64 && nChr < 91 ?\r\n// \t\tnChr - 65\r\n// \t  : nChr > 96 && nChr < 123 ?\r\n// \t\tnChr - 71\r\n// \t  : nChr > 47 && nChr < 58 ?\r\n// \t\tnChr + 4\r\n// \t  : nChr === 43 ?\r\n// \t\t62\r\n// \t  : nChr === 47 ?\r\n// \t\t63\r\n// \t  :\r\n// \t\t0;\r\n//   }  \r\n\r\n/**\r\n * \r\nconst a2b = (a) => {\r\n\tlet b, c, d, e = {}, f = 0, g = 0, h = \"\", i = String.fromCharCode, j = a.length\r\n\tfor (b = 0; 64 > b; b++){\r\n\t\te[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(b)] = b\r\n\t}\r\n\tfor (c = 0; j > c; c++){\r\n\t\tfor (b = e[a.charAt(c)], f = (f << 6) + b, g += 6; g >= 8; ) {\r\n\t\t\t((d = 255 & f >>> (g -= 8)) || j - 2 > c) && (h += i(d))\r\n\t\t}\r\n\t}\r\n\treturn h\r\n}\r\n */"],"names":[],"version":3,"file":"midi-file-load.worker.7c310859.js.map","sourceRoot":"/__parcel_source_root/"}